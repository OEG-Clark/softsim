{"home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.insseg.ddp_main.single_proc_run": [[15, 23], ["lib.ddp_trainer.SegmentationTrainer", "torch.cuda.is_available", "Exception", "lib.ddp_trainer.SegmentationTrainer.train", "lib.ddp_trainer.SegmentationTrainer.test"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.train", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.test"], ["def", "single_proc_run", "(", "config", ")", ":", "\n", "  ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "    ", "raise", "Exception", "(", "'No GPUs FOUND.'", ")", "\n", "", "trainer", "=", "SegmentationTrainer", "(", "config", ")", "\n", "if", "config", ".", "train", ".", "is_train", ":", "\n", "    ", "trainer", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "    ", "trainer", ".", "test", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.insseg.ddp_main.main": [[24, 37], ["hydra.main", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed", "lib.distributed.multi_proc_run", "ddp_main.single_proc_run"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.main", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.multiprocessing_utils.multi_proc_run", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.single_proc_run"], ["", "", "@", "hydra", ".", "main", "(", "config_path", "=", "'config'", ",", "config_name", "=", "'default.yaml'", ")", "\n", "def", "main", "(", "config", ")", ":", "\n", "\n", "# fix seed", "\n", "  ", "np", ".", "random", ".", "seed", "(", "config", ".", "misc", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "config", ".", "misc", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "config", ".", "misc", ".", "seed", ")", "\n", "\n", "# Convert to dict", "\n", "if", "config", ".", "misc", ".", "num_gpus", ">", "1", ":", "\n", "      ", "multi_proc_run", "(", "config", ".", "misc", ".", "num_gpus", ",", "fun", "=", "single_proc_run", ",", "fun_args", "=", "(", "config", ",", ")", ")", "\n", "", "else", ":", "\n", "      ", "single_proc_run", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.io3d.create_color_palette": [[11, 54], ["None"], "function", ["None"], ["def", "create_color_palette", "(", ")", ":", "\n", "    ", "return", "[", "\n", "(", "0", ",", "0", ",", "0", ")", ",", "\n", "(", "174", ",", "199", ",", "232", ")", ",", "# wall", "\n", "(", "152", ",", "223", ",", "138", ")", ",", "# floor", "\n", "(", "31", ",", "119", ",", "180", ")", ",", "# cabinet", "\n", "(", "255", ",", "187", ",", "120", ")", ",", "# bed", "\n", "(", "188", ",", "189", ",", "34", ")", ",", "# chair", "\n", "(", "140", ",", "86", ",", "75", ")", ",", "# sofa", "\n", "(", "255", ",", "152", ",", "150", ")", ",", "# table", "\n", "(", "214", ",", "39", ",", "40", ")", ",", "# door", "\n", "(", "197", ",", "176", ",", "213", ")", ",", "# window", "\n", "(", "148", ",", "103", ",", "189", ")", ",", "# bookshelf", "\n", "(", "196", ",", "156", ",", "148", ")", ",", "# picture", "\n", "(", "23", ",", "190", ",", "207", ")", ",", "# counter", "\n", "(", "178", ",", "76", ",", "76", ")", ",", "\n", "(", "247", ",", "182", ",", "210", ")", ",", "# desk", "\n", "(", "66", ",", "188", ",", "102", ")", ",", "\n", "(", "219", ",", "219", ",", "141", ")", ",", "# curtain", "\n", "(", "140", ",", "57", ",", "197", ")", ",", "\n", "(", "202", ",", "185", ",", "52", ")", ",", "\n", "(", "51", ",", "176", ",", "203", ")", ",", "\n", "(", "200", ",", "54", ",", "131", ")", ",", "\n", "(", "92", ",", "193", ",", "61", ")", ",", "\n", "(", "78", ",", "71", ",", "183", ")", ",", "\n", "(", "172", ",", "114", ",", "82", ")", ",", "\n", "(", "255", ",", "127", ",", "14", ")", ",", "# refrigerator", "\n", "(", "91", ",", "163", ",", "138", ")", ",", "\n", "(", "153", ",", "98", ",", "156", ")", ",", "\n", "(", "140", ",", "153", ",", "101", ")", ",", "\n", "(", "158", ",", "218", ",", "229", ")", ",", "# shower curtain", "\n", "(", "100", ",", "125", ",", "154", ")", ",", "\n", "(", "178", ",", "127", ",", "135", ")", ",", "\n", "(", "120", ",", "185", ",", "128", ")", ",", "\n", "(", "146", ",", "111", ",", "194", ")", ",", "\n", "(", "44", ",", "160", ",", "44", ")", ",", "# toilet", "\n", "(", "112", ",", "128", ",", "144", ")", ",", "# sink", "\n", "(", "96", ",", "207", ",", "209", ")", ",", "\n", "(", "227", ",", "119", ",", "194", ")", ",", "# bathtub", "\n", "(", "213", ",", "92", ",", "176", ")", ",", "\n", "(", "94", ",", "106", ",", "211", ")", ",", "\n", "(", "82", ",", "84", ",", "163", ")", ",", "# otherfurn", "\n", "(", "100", ",", "85", ",", "144", ")", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.io3d.write_triangle_mesh": [[56, 59], ["trimesh.Trimesh", "trimesh.Trimesh.export"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.export"], ["", "def", "write_triangle_mesh", "(", "vertices", ",", "colors", ",", "faces", ",", "outputFile", ")", ":", "\n", "    ", "mesh", "=", "trimesh", ".", "Trimesh", "(", "vertices", "=", "vertices", ",", "vertex_colors", "=", "colors", ",", "faces", "=", "faces", ",", "process", "=", "False", ")", "\n", "mesh", ".", "export", "(", "outputFile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.io3d.read_triangle_mesh": [[60, 72], ["trimesh.load_mesh", "isinstance", "isinstance"], "function", ["None"], ["", "def", "read_triangle_mesh", "(", "filename", ")", ":", "\n", "    ", "mesh", "=", "trimesh", ".", "load_mesh", "(", "filename", ",", "process", "=", "False", ")", "\n", "if", "isinstance", "(", "mesh", ",", "trimesh", ".", "PointCloud", ")", ":", "\n", "        ", "vertices", "=", "mesh", ".", "vertices", "\n", "colors", "=", "mesh", ".", "colors", "\n", "faces", "=", "None", "\n", "", "elif", "isinstance", "(", "mesh", ",", "trimesh", ".", "Trimesh", ")", ":", "\n", "        ", "vertices", "=", "mesh", ".", "vertices", "\n", "colors", "=", "mesh", ".", "visual", ".", "vertex_colors", "\n", "faces", "=", "mesh", ".", "faces", "\n", "\n", "", "return", "vertices", ",", "colors", ",", "faces", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.ChildException.__init__": [[26, 28], ["Exception.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "child_trace", ")", ":", "\n", "        ", "super", "(", "ChildException", ",", "self", ")", ".", "__init__", "(", "child_trace", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.ErrorHandler.__init__": [[37, 47], ["threading.Thread", "distributed.ErrorHandler.error_listener.start", "signal.signal"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "error_queue", ")", ":", "\n", "# Shared error queue", "\n", "        ", "self", ".", "error_queue", "=", "error_queue", "\n", "# Children processes sharing the error queue", "\n", "self", ".", "children_pids", "=", "[", "]", "\n", "# Start a thread listening to errors", "\n", "self", ".", "error_listener", "=", "threading", ".", "Thread", "(", "target", "=", "self", ".", "listen", ",", "daemon", "=", "True", ")", "\n", "self", ".", "error_listener", ".", "start", "(", ")", "\n", "# Register the signal handler", "\n", "signal", ".", "signal", "(", "signal", ".", "SIGUSR1", ",", "self", ".", "signal_handler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.ErrorHandler.add_child": [[48, 51], ["distributed.ErrorHandler.children_pids.append"], "methods", ["None"], ["", "def", "add_child", "(", "self", ",", "pid", ")", ":", "\n", "        ", "\"\"\"Registers a child process.\"\"\"", "\n", "self", ".", "children_pids", ".", "append", "(", "pid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.ErrorHandler.listen": [[52, 60], ["distributed.ErrorHandler.error_queue.get", "distributed.ErrorHandler.error_queue.put", "os.kill", "os.getpid"], "methods", ["None"], ["", "def", "listen", "(", "self", ")", ":", "\n", "        ", "\"\"\"Listens for errors in the error queue.\"\"\"", "\n", "# Wait until there is an error in the queue", "\n", "child_trace", "=", "self", ".", "error_queue", ".", "get", "(", ")", "\n", "# Put the error back for the signal handler", "\n", "self", ".", "error_queue", ".", "put", "(", "child_trace", ")", "\n", "# Invoke the signal handler", "\n", "os", ".", "kill", "(", "os", ".", "getpid", "(", ")", ",", "signal", ".", "SIGUSR1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.ErrorHandler.signal_handler": [[61, 68], ["distributed.ChildException", "os.kill", "distributed.ErrorHandler.error_queue.get"], "methods", ["None"], ["", "def", "signal_handler", "(", "self", ",", "sig_num", ",", "stack_frame", ")", ":", "\n", "        ", "\"\"\"Signal handler.\"\"\"", "\n", "# Kill children processes", "\n", "for", "pid", "in", "self", ".", "children_pids", ":", "\n", "            ", "os", ".", "kill", "(", "pid", ",", "signal", ".", "SIGINT", ")", "\n", "# Propagate the error from the child process", "\n", "", "raise", "ChildException", "(", "self", ".", "error_queue", ".", "get", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.run": [[72, 84], ["distributed.init_process_group", "fun", "distributed.destroy_process_group", "error_queue.put", "traceback.format_exc"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.init_process_group", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.destroy_process_group"], ["def", "run", "(", "proc_rank", ",", "world_size", ",", "error_queue", ",", "fun", ",", "fun_args", ",", "fun_kwargs", ")", ":", "\n", "    ", "\"\"\"Runs a function from a child process.\"\"\"", "\n", "try", ":", "\n", "# Initialize the process group", "\n", "        ", "init_process_group", "(", "proc_rank", ",", "world_size", ")", "\n", "# Run the function", "\n", "fun", "(", "*", "fun_args", ",", "**", "fun_kwargs", ")", "\n", "", "except", ":", "\n", "# Propagate exception to the parent process", "\n", "        ", "error_queue", ".", "put", "(", "traceback", ".", "format_exc", "(", ")", ")", "\n", "", "finally", ":", "\n", "        ", "destroy_process_group", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.multi_proc_run": [[85, 106], ["multiprocessing.SimpleQueue", "distributed.ErrorHandler", "range", "multiprocessing.Process", "ps.append", "mp.Process.start", "distributed.ErrorHandler.add_child", "p.join"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.error_handler.ErrorHandler.add_child"], ["", "", "def", "multi_proc_run", "(", "num_proc", ",", "fun", ",", "fun_args", "=", "(", ")", ",", "fun_kwargs", "=", "{", "}", ")", ":", "\n", "    ", "\"\"\"Runs a function in a multi-proc setting.\"\"\"", "\n", "\n", "# Handle errors from training subprocesses", "\n", "error_queue", "=", "mp", ".", "SimpleQueue", "(", ")", "\n", "error_handler", "=", "ErrorHandler", "(", "error_queue", ")", "\n", "\n", "# Run each training subprocess", "\n", "ps", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_proc", ")", ":", "\n", "        ", "p_i", "=", "mp", ".", "Process", "(", "\n", "target", "=", "run", ",", "\n", "args", "=", "(", "i", ",", "num_proc", ",", "error_queue", ",", "fun", ",", "fun_args", ",", "fun_kwargs", ")", "\n", ")", "\n", "ps", ".", "append", "(", "p_i", ")", "\n", "p_i", ".", "start", "(", ")", "\n", "error_handler", ".", "add_child", "(", "p_i", ".", "pid", ")", "\n", "\n", "# Wait for each subprocess to finish", "\n", "", "for", "p", "in", "ps", ":", "\n", "        ", "p", ".", "join", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.is_master_proc": [[133, 142], ["torch.distributed.get_rank", "torch.distributed.get_rank", "torch.distributed.get_rank"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank"], ["\n", "\n", "", "def", "synchronize", "(", ")", ":", "\n", "    ", "\"\"\"\n    Helper function to synchronize (barrier) among all processes when\n    using distributed training\n    \"\"\"", "\n", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size": [[22, 28], ["torch.get_world_size", "torch.is_available", "torch.is_initialized"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size"], ["\n", "class", "ChildException", "(", "Exception", ")", ":", "\n", "    ", "\"\"\"Wraps an exception from a child process.\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "child_trace", ")", ":", "\n", "        ", "super", "(", "ChildException", ",", "self", ")", ".", "__init__", "(", "child_trace", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank": [[30, 36], ["torch.get_rank", "torch.is_available", "torch.is_initialized"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank"], ["", "", "class", "ErrorHandler", "(", "object", ")", ":", "\n", "    ", "\"\"\"Multiprocessing error handler (based on fairseq's).\n\n    Listens for errors in child processes and\n    propagates the tracebacks to the parent process.\n    \"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.synchronize": [[42, 55], ["torch.get_world_size", "torch.barrier", "torch.is_available", "torch.is_initialized"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size"], ["# Start a thread listening to errors", "\n", "self", ".", "error_listener", "=", "threading", ".", "Thread", "(", "target", "=", "self", ".", "listen", ",", "daemon", "=", "True", ")", "\n", "self", ".", "error_listener", ".", "start", "(", ")", "\n", "# Register the signal handler", "\n", "signal", ".", "signal", "(", "signal", ".", "SIGUSR1", ",", "self", ".", "signal_handler", ")", "\n", "\n", "", "def", "add_child", "(", "self", ",", "pid", ")", ":", "\n", "        ", "\"\"\"Registers a child process.\"\"\"", "\n", "self", ".", "children_pids", ".", "append", "(", "pid", ")", "\n", "\n", "", "def", "listen", "(", "self", ")", ":", "\n", "        ", "\"\"\"Listens for errors in the error queue.\"\"\"", "\n", "# Wait until there is an error in the queue", "\n", "child_trace", "=", "self", ".", "error_queue", ".", "get", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather_differentiable": [[56, 88], ["distributed.get_world_size", "torch.cat.size", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.all_gather", "max", "torch.all_gather", "zip", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "int", "tensor_list.append", "torch.zeros().to().float", "torch.zeros().to().float", "torch.zeros().to().float", "torch.cat", "torch.cat", "torch.cat", "data_list.append", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "range", "np.item", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.FloatTensor().to", "torch.cat.size", "gather_tensor.size", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.zeros", "torch.zeros", "torch.zeros"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather"], ["# Put the error back for the signal handler", "\n", "self", ".", "error_queue", ".", "put", "(", "child_trace", ")", "\n", "# Invoke the signal handler", "\n", "os", ".", "kill", "(", "os", ".", "getpid", "(", ")", ",", "signal", ".", "SIGUSR1", ")", "\n", "\n", "", "def", "signal_handler", "(", "self", ",", "sig_num", ",", "stack_frame", ")", ":", "\n", "        ", "\"\"\"Signal handler.\"\"\"", "\n", "# Kill children processes", "\n", "for", "pid", "in", "self", ".", "children_pids", ":", "\n", "            ", "os", ".", "kill", "(", "pid", ",", "signal", ".", "SIGINT", ")", "\n", "# Propagate the error from the child process", "\n", "", "raise", "ChildException", "(", "self", ".", "error_queue", ".", "get", "(", ")", ")", "\n", "\n", "\n", "", "", "\"\"\"Multiprocessing helpers.\"\"\"", "\n", "\n", "def", "run", "(", "proc_rank", ",", "world_size", ",", "error_queue", ",", "fun", ",", "fun_args", ",", "fun_kwargs", ")", ":", "\n", "    ", "\"\"\"Runs a function from a child process.\"\"\"", "\n", "try", ":", "\n", "# Initialize the process group", "\n", "        ", "init_process_group", "(", "proc_rank", ",", "world_size", ")", "\n", "# Run the function", "\n", "fun", "(", "*", "fun_args", ",", "**", "fun_kwargs", ")", "\n", "", "except", ":", "\n", "# Propagate exception to the parent process", "\n", "        ", "error_queue", ".", "put", "(", "traceback", ".", "format_exc", "(", ")", ")", "\n", "", "finally", ":", "\n", "        ", "destroy_process_group", "(", ")", "\n", "\n", "", "", "def", "multi_proc_run", "(", "num_proc", ",", "fun", ",", "fun_args", "=", "(", ")", ",", "fun_kwargs", "=", "{", "}", ")", ":", "\n", "    ", "\"\"\"Runs a function in a multi-proc setting.\"\"\"", "\n", "\n", "# Handle errors from training subprocesses", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather": [[90, 131], ["distributed.get_world_size", "pickle.dumps", "torch.ByteStorage.from_buffer", "torch.ByteStorage.from_buffer", "torch.ByteStorage.from_buffer", "torch.ByteTensor().to", "torch.ByteTensor().to", "torch.ByteTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "torch.all_gather", "max", "torch.all_gather", "zip", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "int", "tensor_list.append", "torch.ByteTensor().to", "torch.ByteTensor().to", "torch.ByteTensor().to", "torch.cat", "torch.cat", "torch.cat", "data_list.append", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "range", "size.item", "torch.ByteTensor().to", "torch.ByteTensor().to", "torch.ByteTensor().to", "torch.cat.cpu().numpy().tobytes", "pickle.loads", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "torch.cat.numel", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "torch.cat.cpu().numpy", "torch.cat.cpu"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather"], ["error_handler", "=", "ErrorHandler", "(", "error_queue", ")", "\n", "\n", "# Run each training subprocess", "\n", "ps", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_proc", ")", ":", "\n", "        ", "p_i", "=", "mp", ".", "Process", "(", "\n", "target", "=", "run", ",", "\n", "args", "=", "(", "i", ",", "num_proc", ",", "error_queue", ",", "fun", ",", "fun_args", ",", "fun_kwargs", ")", "\n", ")", "\n", "ps", ".", "append", "(", "p_i", ")", "\n", "p_i", ".", "start", "(", ")", "\n", "error_handler", ".", "add_child", "(", "p_i", ".", "pid", ")", "\n", "\n", "# Wait for each subprocess to finish", "\n", "", "for", "p", "in", "ps", ":", "\n", "        ", "p", ".", "join", "(", ")", "\n", "\n", "", "", "\"\"\"Distributed helpers.\"\"\"", "\n", "\n", "def", "is_master_proc", "(", "num_gpus", ")", ":", "\n", "    ", "\"\"\"Determines if the current process is the master process.\n\n    Master process is responsible for logging, writing and loading checkpoints.\n    In the multi GPU setting, we assign the master role to the rank 0 process.\n    When training using a single GPU, there is only one training processes\n    which is considered the master processes.\n    \"\"\"", "\n", "return", "num_gpus", "==", "1", "or", "torch", ".", "distributed", ".", "get_rank", "(", ")", "==", "0", "\n", "\n", "", "def", "get_world_size", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "1", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "1", "\n", "", "return", "dist", ".", "get_world_size", "(", ")", "\n", "\n", "\n", "", "def", "get_rank", "(", ")", ":", "\n", "    ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "        ", "return", "0", "\n", "", "if", "not", "dist", ".", "is_initialized", "(", ")", ":", "\n", "        ", "return", "0", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.init_process_group": [[144, 154], ["torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.distributed.init_process_group", "torch.distributed.init_process_group", "torch.distributed.init_process_group"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.init_process_group", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.init_process_group", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.init_process_group"], ["", "world_size", "=", "dist", ".", "get_world_size", "(", ")", "\n", "if", "world_size", "==", "1", ":", "\n", "        ", "return", "\n", "", "dist", ".", "barrier", "(", ")", "\n", "\n", "", "def", "all_gather_differentiable", "(", "tensor", ")", ":", "\n", "    ", "\"\"\"\n        Run differentiable gather function for SparseConv features with variable number of points.\n        tensor: [num_points, feature_dim]\n    \"\"\"", "\n", "world_size", "=", "get_world_size", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.destroy_process_group": [[156, 159], ["torch.distributed.destroy_process_group", "torch.distributed.destroy_process_group", "torch.distributed.destroy_process_group"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.destroy_process_group", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.destroy_process_group", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.destroy_process_group"], ["        ", "return", "[", "tensor", "]", "\n", "\n", "", "num_points", ",", "f_dim", "=", "tensor", ".", "size", "(", ")", "\n", "local_np", "=", "torch", ".", "LongTensor", "(", "[", "num_points", "]", ")", ".", "to", "(", "\"cuda\"", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.__init__": [[31, 119], ["torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "ddp_trainer.SegmentationTrainer.setup_logging", "os.path.exists", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "datasets.load_dataset", "logging.info", "logging.info", "logging.info", "logging.info", "datasets.dataset.initialize_data_loader", "datasets.dataset.initialize_data_loader", "datasets.dataset.initialize_data_loader", "logging.info", "logging.info", "logging.info", "logging.info", "models.load_model", "models.load_model.", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel.cuda", "lib.solvers.initialize_optimizer", "lib.solvers.initialize_scheduler", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss", "os.path.isfile", "lib.distributed.is_master_proc", "logging.info", "logging.info", "logging.info", "logging.info", "omegaconf.OmegaConf.load", "logging.info", "logging.info", "logging.info", "logging.info", "omegaconf.OmegaConf.load.pretty", "logging.info", "logging.info", "logging.info", "logging.info", "torch.load", "torch.load", "torch.load", "torch.load", "lib.utils.load_state_with_same_shape", "torch.nn.parallel.DistributedDataParallel.state_dict", "torch.nn.parallel.DistributedDataParallel.state_dict", "torch.nn.parallel.DistributedDataParallel.state_dict.update", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "torch.nn.parallel.DistributedDataParallel.load_state_dict", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "tensorboardX.SummaryWriter", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.nn.parallel.DistributedDataParallel.parameters", "logging.info", "logging.info", "logging.info", "logging.info", "torch.load", "torch.load", "torch.load", "torch.load", "ddp_trainer.SegmentationTrainer.load_state", "lib.solvers.initialize_scheduler", "ddp_trainer.SegmentationTrainer.optimizer.load_state_dict", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "lib.utils.count_parameters", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.setup_logging", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.__init__.load_dataset", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.initialize_data_loader", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.initialize_data_loader", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.initialize_data_loader", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.__init__.load_model", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.initialize_optimizer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.initialize_scheduler", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.is_master_proc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.load_state_with_same_shape", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.load_state", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.initialize_scheduler", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.count_parameters"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "\n", "        ", "self", ".", "is_master", "=", "is_master_proc", "(", "config", ".", "misc", ".", "num_gpus", ")", "if", "config", ".", "misc", ".", "num_gpus", ">", "1", "else", "True", "\n", "self", ".", "cur_device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "\n", "# load the configurations", "\n", "self", ".", "setup_logging", "(", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "'config.yaml'", ")", ":", "\n", "            ", "logging", ".", "info", "(", "'===> Loading exsiting config file'", ")", "\n", "config", "=", "OmegaConf", ".", "load", "(", "'config.yaml'", ")", "\n", "logging", ".", "info", "(", "'===> Loaded exsiting config file'", ")", "\n", "", "logging", ".", "info", "(", "'===> Configurations'", ")", "\n", "logging", ".", "info", "(", "config", ".", "pretty", "(", ")", ")", "\n", "\n", "# dataloader", "\n", "DatasetClass", "=", "load_dataset", "(", "config", ".", "data", ".", "dataset", ")", "\n", "logging", ".", "info", "(", "'===> Initializing dataloader'", ")", "\n", "self", ".", "train_data_loader", "=", "initialize_data_loader", "(", "\n", "DatasetClass", ",", "config", ",", "phase", "=", "config", ".", "train", ".", "train_phase", ",", "\n", "num_workers", "=", "config", ".", "data", ".", "num_workers", ",", "augment_data", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "repeat", "=", "True", ",", "batch_size", "=", "config", ".", "data", ".", "batch_size", "//", "config", ".", "misc", ".", "num_gpus", ",", "\n", "limit_numpoints", "=", "config", ".", "data", ".", "train_limit_numpoints", ")", "\n", "\n", "self", ".", "val_data_loader", "=", "initialize_data_loader", "(", "\n", "DatasetClass", ",", "config", ",", "phase", "=", "config", ".", "train", ".", "val_phase", ",", "\n", "num_workers", "=", "1", ",", "augment_data", "=", "False", ",", "\n", "shuffle", "=", "True", ",", "repeat", "=", "False", ",", "\n", "batch_size", "=", "1", ",", "limit_numpoints", "=", "False", ")", "\n", "\n", "self", ".", "test_data_loader", "=", "initialize_data_loader", "(", "\n", "DatasetClass", ",", "config", ",", "phase", "=", "config", ".", "test", ".", "test_phase", ",", "\n", "num_workers", "=", "config", ".", "data", ".", "num_workers", ",", "augment_data", "=", "False", ",", "\n", "shuffle", "=", "False", ",", "repeat", "=", "False", ",", "\n", "batch_size", "=", "config", ".", "data", ".", "test_batch_size", ",", "limit_numpoints", "=", "False", ")", "\n", "\n", "# Model initialization", "\n", "logging", ".", "info", "(", "'===> Building model'", ")", "\n", "num_in_channel", "=", "self", ".", "train_data_loader", ".", "dataset", ".", "NUM_IN_CHANNEL", "\n", "num_labels", "=", "self", ".", "train_data_loader", ".", "dataset", ".", "NUM_LABELS", "\n", "NetClass", "=", "load_model", "(", "config", ".", "net", ".", "model", ")", "\n", "model", "=", "NetClass", "(", "num_in_channel", ",", "num_labels", ",", "config", ")", "\n", "logging", ".", "info", "(", "'===> Number of trainable parameters: {}: {}'", ".", "format", "(", "NetClass", ".", "__name__", ",", "count_parameters", "(", "model", ")", ")", ")", "\n", "logging", ".", "info", "(", "model", ")", "\n", "\n", "# Load weights if specified by the parameter.", "\n", "if", "config", ".", "net", ".", "weights", "!=", "''", ":", "\n", "            ", "logging", ".", "info", "(", "'===> Loading weights: '", "+", "config", ".", "net", ".", "weights", ")", "\n", "state", "=", "torch", ".", "load", "(", "config", ".", "net", ".", "weights", ",", "map_location", "=", "lambda", "s", ",", "l", ":", "default_restore_location", "(", "s", ",", "'cpu'", ")", ")", "\n", "matched_weights", "=", "load_state_with_same_shape", "(", "model", ",", "state", "[", "'state_dict'", "]", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "model_dict", ".", "update", "(", "matched_weights", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "", "model", "=", "model", ".", "cuda", "(", ")", "\n", "if", "config", ".", "misc", ".", "num_gpus", ">", "1", ":", "\n", "            ", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "\n", "module", "=", "model", ",", "device_ids", "=", "[", "self", ".", "cur_device", "]", ",", "\n", "output_device", "=", "self", ".", "cur_device", ",", "\n", "broadcast_buffers", "=", "False", "\n", ")", "\n", "\n", "", "self", ".", "config", "=", "config", "\n", "self", ".", "model", "=", "model", "\n", "if", "self", ".", "is_master", ":", "\n", "            ", "self", ".", "writer", "=", "SummaryWriter", "(", "log_dir", "=", "'tensorboard'", ")", "\n", "", "self", ".", "optimizer", "=", "initialize_optimizer", "(", "model", ".", "parameters", "(", ")", ",", "config", ".", "optimizer", ")", "\n", "self", ".", "scheduler", "=", "initialize_scheduler", "(", "self", ".", "optimizer", ",", "config", ".", "optimizer", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "ignore_index", "=", "config", ".", "data", ".", "ignore_label", ")", "\n", "\n", "checkpoint_fn", "=", "'weights/weights.pth'", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_miou_iter", "=", "-", "1", ",", "1", "\n", "self", ".", "best_val_mAP", ",", "self", ".", "best_val_mAP_iter", "=", "-", "1", ",", "1", "\n", "self", ".", "curr_iter", ",", "self", ".", "epoch", ",", "self", ".", "is_training", "=", "1", ",", "1", ",", "True", "\n", "if", "os", ".", "path", ".", "isfile", "(", "checkpoint_fn", ")", ":", "\n", "            ", "logging", ".", "info", "(", "\"=> loading checkpoint '{}'\"", ".", "format", "(", "checkpoint_fn", ")", ")", "\n", "state", "=", "torch", ".", "load", "(", "checkpoint_fn", ",", "map_location", "=", "lambda", "s", ",", "l", ":", "default_restore_location", "(", "s", ",", "'cpu'", ")", ")", "\n", "self", ".", "load_state", "(", "state", "[", "'state_dict'", "]", ")", "\n", "\n", "self", ".", "curr_iter", "=", "state", "[", "'iteration'", "]", "+", "1", "\n", "self", ".", "epoch", "=", "state", "[", "'epoch'", "]", "\n", "self", ".", "scheduler", "=", "initialize_scheduler", "(", "self", ".", "optimizer", ",", "config", ".", "optimizer", ",", "last_step", "=", "self", ".", "curr_iter", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "state", "[", "'optimizer'", "]", ")", "\n", "\n", "if", "'best_val_miou'", "in", "state", ":", "\n", "              ", "self", ".", "best_val_miou", "=", "state", "[", "'best_val_miou'", "]", "\n", "", "if", "'best_val_mAP'", "in", "state", ":", "\n", "              ", "self", ".", "best_val_mAP", "=", "state", "[", "'best_val_mAP'", "]", "\n", "\n", "", "logging", ".", "info", "(", "\"=> loaded checkpoint '{}' (epoch {})\"", ".", "format", "(", "checkpoint_fn", ",", "state", "[", "'epoch'", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.setup_logging": [[120, 129], ["logging.StreamHandler", "logging.StreamHandler", "logging.StreamHandler", "logging.StreamHandler", "logging.getLogger().setLevel", "logging.getLogger().setLevel", "logging.getLogger().setLevel", "logging.getLogger().setLevel", "logging.basicConfig", "logging.basicConfig", "logging.basicConfig", "logging.basicConfig", "logging.getLogger().setLevel", "logging.getLogger().setLevel", "logging.getLogger().setLevel", "logging.getLogger().setLevel", "logging.getLogger", "logging.getLogger", "logging.getLogger", "logging.getLogger", "logging.getLogger", "logging.getLogger", "logging.getLogger", "logging.getLogger", "[].split", "os.uname"], "methods", ["None"], ["", "else", ":", "\n", "            ", "logging", ".", "info", "(", "\"=> no weights.pth\"", ")", "\n", "\n", "", "", "def", "setup_logging", "(", "self", ")", ":", "\n", "        ", "ch", "=", "logging", ".", "StreamHandler", "(", "sys", ".", "stdout", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "WARN", ")", "\n", "if", "self", ".", "is_master", ":", "\n", "            ", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "", "logging", ".", "basicConfig", "(", "\n", "format", "=", "os", ".", "uname", "(", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "' %(asctime)s %(message)s'", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.load_state": [[130, 136], ["_model.load_state_dict", "lib.distributed.get_world_size"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size"], ["datefmt", "=", "'%m/%d %H:%M:%S'", ",", "\n", "handlers", "=", "[", "ch", "]", ")", "\n", "\n", "", "def", "load_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "if", "get_world_size", "(", ")", ">", "1", ":", "\n", "            ", "_model", "=", "self", ".", "model", ".", "module", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.set_seed": [[137, 143], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed"], "methods", ["None"], ["            ", "_model", "=", "self", ".", "model", "\n", "", "_model", ".", "load_state_dict", "(", "state", ")", "\n", "\n", "", "def", "set_seed", "(", "self", ")", ":", "\n", "# Set seed based on args.seed and the update number so that we get", "\n", "# reproducible results when resuming from checkpoints", "\n", "        ", "seed", "=", "self", ".", "config", ".", "misc", ".", "seed", "+", "self", ".", "curr_iter", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.test": [[144, 146], ["lib.test.test"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.test"], ["torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.validate": [[147, 162], ["lib.test.test", "ddp_trainer.SegmentationTrainer.writer.add_scalar", "ddp_trainer.SegmentationTrainer.writer.add_scalar", "ddp_trainer.SegmentationTrainer.writer.add_scalar", "lib.utils.checkpoint", "lib.utils.checkpoint", "logging.info", "logging.info", "logging.info", "logging.info"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.test", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.checkpoint", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.checkpoint"], ["", "def", "test", "(", "self", ")", ":", "\n", "        ", "return", "test_", "(", "self", ".", "model", ",", "self", ".", "test_data_loader", ",", "self", ".", "config", ")", "\n", "\n", "", "def", "validate", "(", "self", ")", ":", "\n", "        ", "val_loss", ",", "val_score", ",", "_", ",", "val_miou", ",", "val_mAP", "=", "test_", "(", "self", ".", "model", ",", "self", ".", "val_data_loader", ",", "self", ".", "config", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/miou'", ",", "val_miou", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/loss'", ",", "val_loss", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/precision_at_1'", ",", "val_score", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/mAP@0.5'", ",", "val_mAP", ",", "self", ".", "curr_iter", ")", "\n", "\n", "if", "val_miou", ">", "self", ".", "best_val_miou", ":", "\n", "            ", "self", ".", "best_val_miou", "=", "val_miou", "\n", "self", ".", "best_val_iou_iter", "=", "self", ".", "curr_iter", "\n", "checkpoint", "(", "self", ".", "model", ",", "self", ".", "optimizer", ",", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "self", ".", "config", ",", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_mAP", ",", "\"miou\"", ")", "\n", "logging", ".", "info", "(", "\"Current best mIoU: {:.3f} at iter {}\"", ".", "format", "(", "self", ".", "best_val_miou", ",", "self", ".", "best_val_miou_iter", ")", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.train": [[163, 313], ["ddp_trainer.SegmentationTrainer.model.train", "lib.utils.AverageMeter", "logging.info", "logging.info", "logging.info", "logging.info", "ddp_trainer.SegmentationTrainer.train_data_loader.__iter__", "hasattr", "lib.utils.Timer", "lib.utils.Timer", "lib.utils.Timer", "lib.utils.Timer", "lib.utils.Timer", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "range", "ddp_trainer.SegmentationTrainer.cleanup", "ddp_trainer.SegmentationTrainer.validate", "lib.distributed.get_world_size", "ddp_trainer.SegmentationTrainer.optimizer.zero_grad", "iter_timer.tic", "ddp_trainer.SegmentationTrainer.set_seed", "range", "ddp_trainer.SegmentationTrainer.optimizer.step", "ddp_trainer.SegmentationTrainer.scheduler.step", "data_time_avg.update", "iter_time_avg.update", "fw_time_avg.update", "bw_time_avg.update", "ddp_time_avg.update", "losses[].update", "losses[].update", "lib.utils.AverageMeter.update", "len", "data_timer.tic", "input[].int", "MinkowskiEngine.SparseTensor().to", "data_timer.toc", "fw_timer.tic", "ddp_trainer.SegmentationTrainer.model", "target.long().to.long().to.long().to", "ddp_trainer.SegmentationTrainer.criterion", "lib.utils.get_prediction", "lib.utils.precision_at_one", "fw_timer.toc", "bw_timer.tic", "total_loss.backward", "bw_timer.toc", "ddp_timer.tic", "ddp_timer.toc", "iter_timer.toc", "target.long().to.long().to.size", "target.long().to.long().to.size", "target.long().to.long().to.size", "logging.info", "logging.info", "logging.info", "logging.info", "data_time_avg.reset", "iter_time_avg.reset", "losses[].reset", "losses[].reset", "lib.utils.AverageMeter.reset", "ddp_trainer.SegmentationTrainer.validate", "ddp_trainer.SegmentationTrainer.model.train", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "ddp_trainer.SegmentationTrainer.next", "ddp_trainer.SegmentationTrainer.next", "target.long().to.long().to.long", "total_loss.item", "ddp_trainer.SegmentationTrainer.item", "lib.distributed.all_gather", "ddp_trainer.SegmentationTrainer.writer.add_scalar", "ddp_trainer.SegmentationTrainer.writer.add_scalar", "ddp_trainer.SegmentationTrainer.writer.add_scalar", "ddp_trainer.SegmentationTrainer.writer.add_scalar", "MinkowskiEngine.SparseTensor", "target.long().to.long().to.long", "numpy.mean", "len", "ddp_trainer.SegmentationTrainer.scheduler.get_last_lr", "ddp_trainer.SegmentationTrainer.scheduler.get_last_lr"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.train", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__iter__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.validate", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.set_seed", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.get_prediction", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.precision_at_one", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.SegmentationTrainer.validate", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.train", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather"], ["\n", "", "if", "val_mAP", ">", "self", ".", "best_val_mAP", ":", "\n", "            ", "self", ".", "best_val_mAP", "=", "val_mAP", "\n", "self", ".", "best_val_mAP_iter", "=", "self", ".", "curr_iter", "\n", "checkpoint", "(", "self", ".", "model", ",", "self", ".", "optimizer", ",", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "self", ".", "config", ",", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_mAP", ",", "\"mAP\"", ")", "\n", "logging", ".", "info", "(", "\"Current best mAP@0.5: {:.3f} at iter {}\"", ".", "format", "(", "self", ".", "best_val_mAP", ",", "self", ".", "best_val_mAP_iter", ")", ")", "\n", "\n", "", "checkpoint", "(", "self", ".", "model", ",", "self", ".", "optimizer", ",", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "self", ".", "config", ",", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_mAP", ")", "\n", "\n", "", "def", "train", "(", "self", ")", ":", "\n", "# Set up the train flag for batch normalization", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "# Configuration", "\n", "data_timer", ",", "iter_timer", "=", "Timer", "(", ")", ",", "Timer", "(", ")", "\n", "fw_timer", ",", "bw_timer", ",", "ddp_timer", "=", "Timer", "(", ")", ",", "Timer", "(", ")", ",", "Timer", "(", ")", "\n", "data_time_avg", ",", "iter_time_avg", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "fw_time_avg", ",", "bw_time_avg", ",", "ddp_time_avg", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "\n", "scores", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "{", "\n", "'semantic_loss'", ":", "AverageMeter", "(", ")", ",", "\n", "'offset_dir_loss'", ":", "AverageMeter", "(", ")", ",", "\n", "'offset_norm_loss'", ":", "AverageMeter", "(", ")", ",", "\n", "'total_loss'", ":", "AverageMeter", "(", ")", "\n", "}", "\n", "\n", "# Train the network", "\n", "logging", ".", "info", "(", "'===> Start training on {} GPUs, batch-size={}'", ".", "format", "(", "\n", "get_world_size", "(", ")", ",", "self", ".", "config", ".", "data", ".", "batch_size", ")", ")", "\n", "\n", "data_iter", "=", "self", ".", "train_data_loader", ".", "__iter__", "(", ")", "# (distributed) infinite sampler", "\n", "while", "self", ".", "is_training", ":", "\n", "            ", "for", "_", "in", "range", "(", "len", "(", "self", ".", "train_data_loader", ")", "//", "self", ".", "config", ".", "optimizer", ".", "iter_size", ")", ":", "\n", "                ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "data_time", ",", "batch_score", "=", "0", ",", "0", "\n", "batch_losses", "=", "{", "\n", "'semantic_loss'", ":", "0.0", ",", "\n", "'offset_dir_loss'", ":", "0.0", ",", "\n", "'offset_norm_loss'", ":", "0.0", ",", "\n", "'total_loss'", ":", "0.0", "}", "\n", "iter_timer", ".", "tic", "(", ")", "\n", "\n", "# set random seed for every iteration for trackability", "\n", "self", ".", "set_seed", "(", ")", "\n", "\n", "for", "sub_iter", "in", "range", "(", "self", ".", "config", ".", "optimizer", ".", "iter_size", ")", ":", "\n", "# Get training data", "\n", "                    ", "data_timer", ".", "tic", "(", ")", "\n", "if", "self", ".", "config", ".", "data", ".", "return_transformation", ":", "\n", "                        ", "coords", ",", "input", ",", "target", ",", "instances", ",", "_", "=", "data_iter", ".", "next", "(", ")", "\n", "", "else", ":", "\n", "                        ", "coords", ",", "input", ",", "target", ",", "instances", "=", "data_iter", ".", "next", "(", ")", "\n", "\n", "# Preprocess input", "\n", "", "color", "=", "input", "[", ":", ",", ":", "3", "]", ".", "int", "(", ")", "\n", "if", "self", ".", "config", ".", "augmentation", ".", "normalize_color", ":", "\n", "                      ", "input", "[", ":", ",", ":", "3", "]", "=", "input", "[", ":", ",", ":", "3", "]", "/", "255.", "-", "0.5", "\n", "", "sinput", "=", "SparseTensor", "(", "input", ",", "coords", ")", ".", "to", "(", "self", ".", "cur_device", ")", "\n", "\n", "data_time", "+=", "data_timer", ".", "toc", "(", "False", ")", "\n", "# Feed forward", "\n", "fw_timer", ".", "tic", "(", ")", "\n", "\n", "inputs", "=", "(", "sinput", ",", ")", "\n", "pt_offsets", ",", "soutput", ",", "_", "=", "self", ".", "model", "(", "*", "inputs", ")", "\n", "# The output of the network is not sorted", "\n", "target", "=", "target", ".", "long", "(", ")", ".", "to", "(", "self", ".", "cur_device", ")", "\n", "semantic_loss", "=", "self", ".", "criterion", "(", "soutput", ".", "F", ",", "target", ".", "long", "(", ")", ")", "\n", "total_loss", "=", "semantic_loss", "\n", "\n", "#-----------------offset loss----------------------", "\n", "## pt_offsets: (N, 3), float, cuda", "\n", "## coords: (N, 3), float32", "\n", "## centers: (N, 3), float32 tensor ", "\n", "## instance_ids: (N), long", "\n", "centers", "=", "np", ".", "concatenate", "(", "[", "instance", "[", "'center'", "]", "for", "instance", "in", "instances", "]", ")", "\n", "instance_ids", "=", "np", ".", "concatenate", "(", "[", "instance", "[", "'ids'", "]", "for", "instance", "in", "instances", "]", ")", "\n", "\n", "centers", "=", "torch", ".", "from_numpy", "(", "centers", ")", ".", "cuda", "(", ")", "\n", "instance_ids", "=", "torch", ".", "from_numpy", "(", "instance_ids", ")", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "\n", "gt_offsets", "=", "centers", "-", "coords", "[", ":", ",", "1", ":", "]", ".", "cuda", "(", ")", "# (N, 3)", "\n", "gt_offsets", "*=", "self", ".", "train_data_loader", ".", "dataset", ".", "VOXEL_SIZE", "\n", "pt_diff", "=", "pt_offsets", ".", "F", "-", "gt_offsets", "# (N, 3)", "\n", "pt_dist", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "pt_diff", ")", ",", "dim", "=", "-", "1", ")", "# (N)", "\n", "valid", "=", "(", "instance_ids", "!=", "-", "1", ")", ".", "float", "(", ")", "\n", "offset_norm_loss", "=", "torch", ".", "sum", "(", "pt_dist", "*", "valid", ")", "/", "(", "torch", ".", "sum", "(", "valid", ")", "+", "1e-6", ")", "\n", "\n", "gt_offsets_norm", "=", "torch", ".", "norm", "(", "gt_offsets", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "# (N), float", "\n", "gt_offsets_", "=", "gt_offsets", "/", "(", "gt_offsets_norm", ".", "unsqueeze", "(", "-", "1", ")", "+", "1e-8", ")", "\n", "pt_offsets_norm", "=", "torch", ".", "norm", "(", "pt_offsets", ".", "F", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "pt_offsets_", "=", "pt_offsets", ".", "F", "/", "(", "pt_offsets_norm", ".", "unsqueeze", "(", "-", "1", ")", "+", "1e-8", ")", "\n", "direction_diff", "=", "-", "(", "gt_offsets_", "*", "pt_offsets_", ")", ".", "sum", "(", "-", "1", ")", "# (N)", "\n", "offset_dir_loss", "=", "torch", ".", "sum", "(", "direction_diff", "*", "valid", ")", "/", "(", "torch", ".", "sum", "(", "valid", ")", "+", "1e-6", ")", "\n", "total_loss", "+=", "offset_norm_loss", "+", "offset_dir_loss", "\n", "\n", "# Compute and accumulate gradient", "\n", "total_loss", "/=", "self", ".", "config", ".", "optimizer", ".", "iter_size", "\n", "\n", "pred", "=", "get_prediction", "(", "self", ".", "train_data_loader", ".", "dataset", ",", "soutput", ".", "F", ",", "target", ")", "\n", "score", "=", "precision_at_one", "(", "pred", ",", "target", ")", "\n", "\n", "# bp the loss", "\n", "fw_timer", ".", "toc", "(", "False", ")", "\n", "bw_timer", ".", "tic", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "bw_timer", ".", "toc", "(", "False", ")", "\n", "\n", "# gather information", "\n", "logging_output", "=", "{", "'total_loss'", ":", "total_loss", ".", "item", "(", ")", ",", "'semantic_loss'", ":", "semantic_loss", ".", "item", "(", ")", ",", "'score'", ":", "score", "/", "self", ".", "config", ".", "optimizer", ".", "iter_size", "}", "\n", "logging_output", "[", "'offset_dir_loss'", "]", "=", "offset_dir_loss", ".", "item", "(", ")", "\n", "logging_output", "[", "'offset_norm_loss'", "]", "=", "offset_norm_loss", ".", "item", "(", ")", "\n", "\n", "ddp_timer", ".", "tic", "(", ")", "\n", "if", "self", ".", "config", ".", "misc", ".", "num_gpus", ">", "1", ":", "\n", "                      ", "logging_output", "=", "all_gather", "(", "logging_output", ")", "\n", "logging_output", "=", "{", "w", ":", "np", ".", "mean", "(", "[", "\n", "a", "[", "w", "]", "for", "a", "in", "logging_output", "]", "\n", ")", "for", "w", "in", "logging_output", "[", "0", "]", "}", "\n", "\n", "", "batch_losses", "[", "'total_loss'", "]", "+=", "logging_output", "[", "'total_loss'", "]", "\n", "batch_losses", "[", "'semantic_loss'", "]", "+=", "logging_output", "[", "'semantic_loss'", "]", "\n", "batch_losses", "[", "'offset_dir_loss'", "]", "+=", "logging_output", "[", "'offset_dir_loss'", "]", "\n", "batch_losses", "[", "'offset_norm_loss'", "]", "+=", "logging_output", "[", "'offset_norm_loss'", "]", "\n", "batch_score", "+=", "logging_output", "[", "'score'", "]", "\n", "\n", "ddp_timer", ".", "toc", "(", "False", ")", "\n", "\n", "# Update number of steps", "\n", "", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "data_time_avg", ".", "update", "(", "data_time", ")", "\n", "iter_time_avg", ".", "update", "(", "iter_timer", ".", "toc", "(", "False", ")", ")", "\n", "fw_time_avg", ".", "update", "(", "fw_timer", ".", "diff", ")", "\n", "bw_time_avg", ".", "update", "(", "bw_timer", ".", "diff", ")", "\n", "ddp_time_avg", ".", "update", "(", "ddp_timer", ".", "diff", ")", "\n", "\n", "losses", "[", "'total_loss'", "]", ".", "update", "(", "batch_losses", "[", "'total_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "losses", "[", "'semantic_loss'", "]", ".", "update", "(", "batch_losses", "[", "'semantic_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "losses", "[", "'offset_dir_loss'", "]", ".", "update", "(", "batch_losses", "[", "'offset_dir_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "losses", "[", "'offset_norm_loss'", "]", ".", "update", "(", "batch_losses", "[", "'offset_norm_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "scores", ".", "update", "(", "batch_score", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "self", ".", "curr_iter", ">=", "self", ".", "config", ".", "optimizer", ".", "max_iter", ":", "\n", "                  ", "self", ".", "is_training", "=", "False", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiLayerNorm.__init__": [[16, 30], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "MinkowskiEngine.MinkowskiGlobalPooling", "MinkowskiEngine.MinkowskiBroadcastAddition", "MinkowskiEngine.MinkowskiBroadcastAddition", "MinkowskiEngine.MinkowskiGlobalPooling", "MinkowskiEngine.MinkowskiBroadcastMultiplication", "layers.MinkowskiLayerNorm.reset_parameters", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiInstanceNorm.reset_parameters"], ["    ", "super", "(", "MinkowskiLayerNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "num_features", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_features", ")", ")", "\n", "\n", "self", ".", "mean_in", "=", "MinkowskiGlobalPooling", "(", "dimension", "=", "D", ")", "\n", "self", ".", "glob_sum", "=", "MinkowskiBroadcastAddition", "(", "dimension", "=", "D", ")", "\n", "self", ".", "glob_sum2", "=", "MinkowskiBroadcastAddition", "(", "dimension", "=", "D", ")", "\n", "self", ".", "glob_mean", "=", "MinkowskiGlobalPooling", "(", "dimension", "=", "D", ")", "\n", "self", ".", "glob_times", "=", "MinkowskiBroadcastMultiplication", "(", "dimension", "=", "D", ")", "\n", "self", ".", "D", "=", "D", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n", "", "def", "__repr__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiLayerNorm.__repr__": [[31, 34], ["None"], "methods", ["None"], ["    ", "s", "=", "f'(D={self.D})'", "\n", "return", "self", ".", "__class__", ".", "__name__", "+", "s", "\n", "\n", "", "def", "reset_parameters", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiLayerNorm.reset_parameters": [[35, 38], ["layers.MinkowskiLayerNorm.weight.data.fill_", "layers.MinkowskiLayerNorm.bias.data.zero_"], "methods", ["None"], ["    ", "self", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "self", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "def", "_check_input_dim", "(", "self", ",", "input", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiLayerNorm._check_input_dim": [[39, 42], ["input.F.dim", "ValueError", "input.dim"], "methods", ["None"], ["    ", "if", "input", ".", "F", ".", "dim", "(", ")", "!=", "2", ":", "\n", "      ", "raise", "ValueError", "(", "'expected 2D input (got {}D input)'", ".", "format", "(", "input", ".", "dim", "(", ")", ")", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiLayerNorm.forward": [[43, 54], ["layers.MinkowskiLayerNorm._check_input_dim", "layers.MinkowskiLayerNorm.mean_in().F.mean", "layers.MinkowskiLayerNorm.glob_mean().mean", "layers.MinkowskiLayerNorm.glob_times", "torch.zeros().type_as", "torch.zeros().type_as", "torch.zeros().type_as", "torch.zeros().type_as", "layers.MinkowskiLayerNorm.glob_sum", "torch.zeros().type_as", "torch.zeros().type_as", "torch.zeros().type_as", "torch.zeros().type_as", "layers.MinkowskiLayerNorm.glob_sum2", "layers.MinkowskiLayerNorm.glob_mean", "layers.MinkowskiLayerNorm.mean_in", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "layers.MinkowskiLayerNorm.size", "layers.MinkowskiLayerNorm.size"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiInstanceNorm._check_input_dim"], ["    ", "self", ".", "_check_input_dim", "(", "x", ")", "\n", "mean", "=", "self", ".", "mean_in", "(", "x", ")", ".", "F", ".", "mean", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "mean", "=", "mean", "+", "torch", ".", "zeros", "(", "mean", ".", "size", "(", "0", ")", ",", "self", ".", "num_features", ")", ".", "type_as", "(", "mean", ")", "\n", "temp", "=", "self", ".", "glob_sum", "(", "x", ".", "F", ",", "-", "mean", ")", "**", "2", "\n", "var", "=", "self", ".", "glob_mean", "(", "temp", ".", "data", ")", ".", "mean", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "var", "=", "var", "+", "torch", ".", "zeros", "(", "var", ".", "size", "(", "0", ")", ",", "self", ".", "num_features", ")", ".", "type_as", "(", "var", ")", "\n", "instd", "=", "1", "/", "(", "var", "+", "self", ".", "eps", ")", ".", "sqrt", "(", ")", "\n", "\n", "x", "=", "self", ".", "glob_times", "(", "self", ".", "glob_sum2", "(", "x", ",", "-", "mean", ")", ",", "instd", ")", "\n", "return", "x", "*", "self", ".", "weight", "+", "self", ".", "bias", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiInstanceNorm.__init__": [[58, 71], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "MinkowskiEngine.MinkowskiGlobalPooling", "MinkowskiEngine.MinkowskiBroadcastAddition", "MinkowskiEngine.MinkowskiBroadcastAddition", "MinkowskiEngine.MinkowskiGlobalPooling", "MinkowskiEngine.MinkowskiBroadcastMultiplication", "layers.MinkowskiInstanceNorm.reset_parameters", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiInstanceNorm.reset_parameters"], ["    ", "super", "(", "MinkowskiInstanceNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "num_features", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_features", ")", ")", "\n", "\n", "self", ".", "mean_in", "=", "MinkowskiGlobalPooling", "(", "dimension", "=", "D", ")", "\n", "self", ".", "glob_sum", "=", "MinkowskiBroadcastAddition", "(", "dimension", "=", "D", ")", "\n", "self", ".", "glob_sum2", "=", "MinkowskiBroadcastAddition", "(", "dimension", "=", "D", ")", "\n", "self", ".", "glob_mean", "=", "MinkowskiGlobalPooling", "(", "dimension", "=", "D", ")", "\n", "self", ".", "glob_times", "=", "MinkowskiBroadcastMultiplication", "(", "dimension", "=", "D", ")", "\n", "self", ".", "D", "=", "D", "\n", "self", ".", "reset_parameters", "(", ")", "\n", "\n", "", "def", "__repr__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiInstanceNorm.__repr__": [[72, 75], ["None"], "methods", ["None"], ["    ", "s", "=", "f'(pixel_dist={self.pixel_dist}, D={self.D})'", "\n", "return", "self", ".", "__class__", ".", "__name__", "+", "s", "\n", "\n", "", "def", "reset_parameters", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiInstanceNorm.reset_parameters": [[76, 79], ["layers.MinkowskiInstanceNorm.weight.data.fill_", "layers.MinkowskiInstanceNorm.bias.data.zero_"], "methods", ["None"], ["    ", "self", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "self", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n", "", "def", "_check_input_dim", "(", "self", ",", "input", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiInstanceNorm._check_input_dim": [[80, 83], ["input.dim", "ValueError", "input.dim"], "methods", ["None"], ["    ", "if", "input", ".", "dim", "(", ")", "!=", "2", ":", "\n", "      ", "raise", "ValueError", "(", "'expected 2D input (got {}D input)'", ".", "format", "(", "input", ".", "dim", "(", ")", ")", ")", "\n", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiInstanceNorm.forward": [[84, 93], ["layers.MinkowskiInstanceNorm._check_input_dim", "layers.MinkowskiInstanceNorm.mean_in", "layers.MinkowskiInstanceNorm.glob_mean", "layers.MinkowskiInstanceNorm.glob_times", "layers.MinkowskiInstanceNorm.glob_sum", "layers.MinkowskiInstanceNorm.glob_sum2"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.layers.MinkowskiInstanceNorm._check_input_dim"], ["    ", "self", ".", "_check_input_dim", "(", "x", ")", "\n", "mean_in", "=", "self", ".", "mean_in", "(", "x", ")", "\n", "temp", "=", "self", ".", "glob_sum", "(", "x", ",", "-", "mean_in", ")", "**", "2", "\n", "var_in", "=", "self", ".", "glob_mean", "(", "temp", ".", "data", ")", "\n", "instd_in", "=", "1", "/", "(", "var_in", "+", "self", ".", "eps", ")", ".", "sqrt", "(", ")", "\n", "\n", "x", "=", "self", ".", "glob_times", "(", "self", ".", "glob_sum2", "(", "x", ",", "-", "mean_in", ")", ",", "instd_in", ")", "\n", "return", "x", "*", "self", ".", "weight", "+", "self", ".", "bias", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.LambdaStepLR.__init__": [[14, 16], ["torch.optim.lr_scheduler.LambdaLR.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "  ", "def", "__init__", "(", "self", ",", "optimizer", ",", "lr_lambda", ",", "last_step", "=", "-", "1", ")", ":", "\n", "    ", "super", "(", "LambdaStepLR", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "lr_lambda", ",", "last_step", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.LambdaStepLR.last_step": [[22, 25], ["None"], "methods", ["None"], ["\n", "", "@", "last_step", ".", "setter", "\n", "def", "last_step", "(", "self", ",", "v", ")", ":", "\n", "    ", "self", ".", "last_epoch", "=", "v", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.PolyLR.__init__": [[30, 32], ["solvers.LambdaStepLR.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "def", "__init__", "(", "self", ",", "optimizer", ",", "max_iter", ",", "power", "=", "0.9", ",", "last_step", "=", "-", "1", ")", ":", "\n", "    ", "super", "(", "PolyLR", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "lambda", "s", ":", "(", "1", "-", "s", "/", "(", "max_iter", "+", "1", ")", ")", "**", "power", ",", "last_step", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.SquaredLR.__init__": [[37, 39], ["solvers.LambdaStepLR.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "def", "__init__", "(", "self", ",", "optimizer", ",", "max_iter", ",", "last_step", "=", "-", "1", ")", ":", "\n", "    ", "super", "(", "SquaredLR", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "lambda", "s", ":", "(", "1", "-", "s", "/", "(", "max_iter", "+", "1", ")", ")", "**", "2", ",", "last_step", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.ExpLR.__init__": [[43, 48], ["solvers.LambdaStepLR.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "  ", "def", "__init__", "(", "self", ",", "optimizer", ",", "step_size", ",", "gamma", "=", "0.9", ",", "last_step", "=", "-", "1", ")", ":", "\n", "# (0.9 ** 21.854) = 0.1, (0.95 ** 44.8906) = 0.1", "\n", "# To get 0.1 every N using gamma 0.9, N * log(0.9)/log(0.1) = 0.04575749 N", "\n", "# To get 0.1 every N using gamma g, g ** N = 0.1 -> N * log(g) = log(0.1) -> g = np.exp(log(0.1) / N)", "\n", "    ", "super", "(", "ExpLR", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "lambda", "s", ":", "gamma", "**", "(", "s", "/", "step_size", ")", ",", "last_step", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.initialize_optimizer": [[50, 69], ["torch.optim.SGD", "torch.optim.Adam", "logging.error", "ValueError"], "function", ["None"], ["\n", "", "", "def", "initialize_optimizer", "(", "params", ",", "config", ")", ":", "\n", "  ", "assert", "config", ".", "optimizer", "in", "[", "'SGD'", ",", "'Adagrad'", ",", "'Adam'", ",", "'RMSProp'", ",", "'Rprop'", ",", "'SGDLars'", "]", "\n", "\n", "if", "config", ".", "optimizer", "==", "'SGD'", ":", "\n", "    ", "return", "SGD", "(", "\n", "params", ",", "\n", "lr", "=", "config", ".", "lr", ",", "\n", "momentum", "=", "config", ".", "sgd_momentum", ",", "\n", "dampening", "=", "config", ".", "sgd_dampening", ",", "\n", "weight_decay", "=", "config", ".", "weight_decay", ")", "\n", "", "elif", "config", ".", "optimizer", "==", "'Adam'", ":", "\n", "    ", "return", "Adam", "(", "\n", "params", ",", "\n", "lr", "=", "config", ".", "lr", ",", "\n", "betas", "=", "(", "config", ".", "adam_beta1", ",", "config", ".", "adam_beta2", ")", ",", "\n", "weight_decay", "=", "config", ".", "weight_decay", ")", "\n", "", "else", ":", "\n", "    ", "logging", ".", "error", "(", "'Optimizer type not supported'", ")", "\n", "raise", "ValueError", "(", "'Optimizer type not supported'", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.solvers.initialize_scheduler": [[71, 84], ["torch.optim.lr_scheduler.StepLR", "solvers.PolyLR", "solvers.SquaredLR", "solvers.ExpLR", "logging.error"], "function", ["None"], ["\n", "", "", "def", "initialize_scheduler", "(", "optimizer", ",", "config", ",", "last_step", "=", "-", "1", ")", ":", "\n", "  ", "if", "config", ".", "scheduler", "==", "'StepLR'", ":", "\n", "    ", "return", "StepLR", "(", "\n", "optimizer", ",", "step_size", "=", "config", ".", "step_size", ",", "gamma", "=", "config", ".", "step_gamma", ",", "last_epoch", "=", "last_step", ")", "\n", "", "elif", "config", ".", "scheduler", "==", "'PolyLR'", ":", "\n", "    ", "return", "PolyLR", "(", "optimizer", ",", "max_iter", "=", "config", ".", "max_iter", ",", "power", "=", "config", ".", "poly_power", ",", "last_step", "=", "last_step", ")", "\n", "", "elif", "config", ".", "scheduler", "==", "'SquaredLR'", ":", "\n", "    ", "return", "SquaredLR", "(", "optimizer", ",", "max_iter", "=", "config", ".", "max_iter", ",", "last_step", "=", "last_step", ")", "\n", "", "elif", "config", ".", "scheduler", "==", "'ExpLR'", ":", "\n", "    ", "return", "ExpLR", "(", "\n", "optimizer", ",", "step_size", "=", "config", ".", "exp_step_size", ",", "gamma", "=", "config", ".", "exp_gamma", ",", "last_step", "=", "last_step", ")", "\n", "", "else", ":", "\n", "    ", "logging", ".", "error", "(", "'Scheduler not supported'", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.test.print_info": [[27, 53], ["logging.info", "hist.diagonal", "hist.sum", "numpy.nanmean", "numpy.nanmean", "numpy.nanmean"], "function", ["None"], ["from", "datasets", ".", "evaluation", ".", "evaluate_semantic_instance", "import", "Evaluator", "as", "InstanceEvaluator", "\n", "from", "datasets", ".", "evaluation", ".", "evaluate_semantic_label", "import", "Evaluator", "as", "SemanticEvaluator", "\n", "\n", "def", "print_info", "(", "iteration", ",", "\n", "max_iteration", ",", "\n", "data_time", ",", "\n", "iter_time", ",", "\n", "losses", "=", "None", ",", "\n", "scores", "=", "None", ",", "\n", "ious", "=", "None", ",", "\n", "hist", "=", "None", ",", "\n", "ap_class", "=", "None", ",", "\n", "class_names", "=", "None", ")", ":", "\n", "  ", "debug_str", "=", "\"{}/{}: \"", ".", "format", "(", "iteration", "+", "1", ",", "max_iteration", ")", "\n", "debug_str", "+=", "\"Data time: {:.4f}, Iter time: {:.4f}\"", ".", "format", "(", "data_time", ",", "iter_time", ")", "\n", "\n", "acc", "=", "hist", ".", "diagonal", "(", ")", "/", "hist", ".", "sum", "(", "1", ")", "*", "100", "\n", "debug_str", "+=", "\"\\tLoss {loss.val:.3f} (AVG: {loss.avg:.3f})\\t\"", "\"Score {top1.val:.3f} (AVG: {top1.avg:.3f})\\t\"", "\"mIOU {mIOU:.3f} mAP {mAP:.3f} mAcc {mAcc:.3f}\\n\"", ".", "format", "(", "\n", "loss", "=", "losses", ",", "top1", "=", "scores", ",", "mIOU", "=", "np", ".", "nanmean", "(", "ious", ")", ",", "\n", "mAP", "=", "np", ".", "nanmean", "(", "ap_class", ")", ",", "mAcc", "=", "np", ".", "nanmean", "(", "acc", ")", ")", "\n", "if", "class_names", "is", "not", "None", ":", "\n", "    ", "debug_str", "+=", "\"\\nClasses: \"", "+", "\" \"", ".", "join", "(", "class_names", ")", "+", "'\\n'", "\n", "", "debug_str", "+=", "'IOU: '", "+", "' '", ".", "join", "(", "'{:.03f}'", ".", "format", "(", "i", ")", "for", "i", "in", "ious", ")", "+", "'\\n'", "\n", "debug_str", "+=", "'mAP: '", "+", "' '", ".", "join", "(", "'{:.03f}'", ".", "format", "(", "i", ")", "for", "i", "in", "ap_class", ")", "+", "'\\n'", "\n", "debug_str", "+=", "'mAcc: '", "+", "' '", ".", "join", "(", "'{:.03f}'", ".", "format", "(", "i", ")", "for", "i", "in", "acc", ")", "+", "'\\n'", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.test.average_precision": [[55, 60], ["sklearn.preprocessing.label_binarize", "numpy.errstate", "sklearn.metrics.average_precision_score", "list", "range"], "function", ["None"], ["logging", ".", "info", "(", "debug_str", ")", "\n", "\n", "\n", "", "def", "average_precision", "(", "prob_np", ",", "target_np", ")", ":", "\n", "  ", "num_class", "=", "prob_np", ".", "shape", "[", "1", "]", "\n", "label", "=", "label_binarize", "(", "target_np", ",", "classes", "=", "list", "(", "range", "(", "num_class", ")", ")", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.test.nms": [[65, 83], ["[].item", "[].item"], "function", ["None"], ["", "", "def", "nms", "(", "instances", ",", "instances_", ")", ":", "\n", "  ", "instances_return", "=", "{", "}", "\n", "counter", "=", "0", "\n", "for", "key", "in", "instances", ":", "\n", "    ", "label", "=", "instances", "[", "key", "]", "[", "'label_id'", "]", ".", "item", "(", ")", "\n", "if", "label", "in", "[", "10", ",", "12", ",", "16", "]", ":", "\n", "      ", "continue", "\n", "", "instances_return", "[", "counter", "]", "=", "instances", "[", "key", "]", "\n", "counter", "+=", "1", "\n", "\n", "# dual set clustering, for some classes, w/o voting loss is better", "\n", "", "for", "key_", "in", "instances_", ":", "\n", "    ", "label_", "=", "instances_", "[", "key_", "]", "[", "'label_id'", "]", ".", "item", "(", ")", "\n", "if", "label_", "in", "[", "10", ",", "12", ",", "16", "]", ":", "\n", "      ", "instances_return", "[", "counter", "]", "=", "instances_", "[", "key_", "]", "\n", "counter", "+=", "1", "\n", "\n", "", "", "return", "instances_return", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.test.test": [[62, 195], ["lib.utils.get_torch_device", "torch.CrossEntropyLoss", "numpy.zeros", "numpy.zeros", "logging.info", "global_timer.tic", "data_loader.__iter__", "len", "torch.FloatTensor().long", "torch.FloatTensor().long", "model.eval", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "global_timer.toc", "dataset.reorder_result", "dataset.reorder_result", "dataset.get_classnames", "test.print_info", "logging.info", "lib.utils.Timer", "lib.utils.Timer", "lib.utils.Timer", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "os.makedirs", "torch.no_grad", "torch.no_grad", "range", "numpy.nanmean", "torch.FloatTensor", "torch.FloatTensor", "data_timer.tic", "data_timer.toc", "iter_timer.tic", "MinkowskiEngine.SparseTensor().to", "model", "lib.utils.get_prediction().int", "iter_timer.toc", "target.to.numpy", "target.to.to", "nn.CrossEntropyLoss.", "losses.update", "scores.update", "lib.utils.fast_hist", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "test.average_precision", "numpy.vstack", "numpy.nanmean", "data_loader.__iter__.next", "data_loader.__iter__.next", "input[].int", "dataset.get_output_id", "dataset.get_original_pointcloud", "numpy.array", "datasets.evaluation.evaluate_semantic_label.Evaluator.write_to_benchmark", "dataset.save_features", "target.to.long", "float", "lib.utils.precision_at_one", "get_prediction().int.cpu().numpy().flatten", "target.numpy.flatten", "lib.utils.per_class_iu", "torch.nn.functional.softmax.cpu().detach().numpy", "warnings.catch_warnings", "warnings.simplefilter", "dataset.reorder_result", "dataset.reorder_result", "dataset.get_classnames", "test.print_info", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "lib.utils.per_class_iu", "MinkowskiEngine.SparseTensor", "lib.utils.get_prediction", "numpy.nanmean", "get_prediction().int.cpu().numpy", "torch.nn.functional.softmax.cpu().detach", "get_prediction().int.cpu().numpy", "get_prediction().int.cpu", "torch.nn.functional.softmax.cpu", "get_prediction().int.cpu"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.get_torch_device", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__iter__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.reorder_result", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.reorder_result", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.get_classnames", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.test.print_info", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.fast_hist", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.softmax", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.softmax", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.test.average_precision", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_output_id", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_original_pointcloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.write_to_benchmark", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.save_features", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.precision_at_one", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.per_class_iu", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.reorder_result", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.reorder_result", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.get_classnames", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.test.print_info", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.per_class_iu", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.get_prediction"], ["    ", "return", "average_precision_score", "(", "label", ",", "prob_np", ",", "average", "=", "None", ")", "\n", "\n", "\n", "", "", "def", "nms", "(", "instances", ",", "instances_", ")", ":", "\n", "  ", "instances_return", "=", "{", "}", "\n", "counter", "=", "0", "\n", "for", "key", "in", "instances", ":", "\n", "    ", "label", "=", "instances", "[", "key", "]", "[", "'label_id'", "]", ".", "item", "(", ")", "\n", "if", "label", "in", "[", "10", ",", "12", ",", "16", "]", ":", "\n", "      ", "continue", "\n", "", "instances_return", "[", "counter", "]", "=", "instances", "[", "key", "]", "\n", "counter", "+=", "1", "\n", "\n", "# dual set clustering, for some classes, w/o voting loss is better", "\n", "", "for", "key_", "in", "instances_", ":", "\n", "    ", "label_", "=", "instances_", "[", "key_", "]", "[", "'label_id'", "]", ".", "item", "(", ")", "\n", "if", "label_", "in", "[", "10", ",", "12", ",", "16", "]", ":", "\n", "      ", "instances_return", "[", "counter", "]", "=", "instances_", "[", "key_", "]", "\n", "counter", "+=", "1", "\n", "\n", "", "", "return", "instances_return", "\n", "\n", "\n", "", "def", "test", "(", "model", ",", "data_loader", ",", "config", ")", ":", "\n", "  ", "device", "=", "get_torch_device", "(", "config", ".", "misc", ".", "is_cuda", ")", "\n", "dataset", "=", "data_loader", ".", "dataset", "\n", "num_labels", "=", "dataset", ".", "NUM_LABELS", "\n", "global_timer", ",", "data_timer", ",", "iter_timer", "=", "Timer", "(", ")", ",", "Timer", "(", ")", ",", "Timer", "(", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "ignore_index", "=", "config", ".", "data", ".", "ignore_label", ")", "\n", "losses", ",", "scores", ",", "ious", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", ",", "0", "\n", "aps", "=", "np", ".", "zeros", "(", "(", "0", ",", "num_labels", ")", ")", "\n", "hist", "=", "np", ".", "zeros", "(", "(", "num_labels", ",", "num_labels", ")", ")", "\n", "\n", "logging", ".", "info", "(", "'===> Start testing'", ")", "\n", "\n", "global_timer", ".", "tic", "(", ")", "\n", "data_iter", "=", "data_loader", ".", "__iter__", "(", ")", "\n", "max_iter", "=", "len", "(", "data_loader", ")", "\n", "max_iter_unique", "=", "max_iter", "\n", "\n", "\n", "\n", "######################################################################################", "\n", "#  Added for Instance Segmentation", "\n", "######################################################################################", "\n", "VALID_CLASS_IDS", "=", "torch", ".", "FloatTensor", "(", "dataset", ".", "VALID_CLASS_IDS", ")", ".", "long", "(", ")", "\n", "CLASS_LABELS_INSTANCE", "=", "dataset", ".", "CLASS_LABELS", "if", "config", ".", "misc", ".", "train_stuff", "else", "dataset", ".", "CLASS_LABELS_INSTANCE", "\n", "VALID_CLASS_IDS_INSTANCE", "=", "dataset", ".", "VALID_CLASS_IDS", "if", "config", ".", "misc", ".", "train_stuff", "else", "dataset", ".", "VALID_CLASS_IDS_INSTANCE", "\n", "IGNORE_LABELS_INSTANCE", "=", "dataset", ".", "IGNORE_LABELS", "if", "config", ".", "misc", ".", "train_stuff", "else", "dataset", ".", "IGNORE_LABELS_INSTANCE", "\n", "evaluator", "=", "InstanceEvaluator", "(", "CLASS_LABELS_INSTANCE", ",", "VALID_CLASS_IDS_INSTANCE", ")", "\n", "\n", "cluster_thresh", "=", "1.5", "\n", "propose_points", "=", "100", "\n", "score_func", "=", "torch", ".", "mean", "\n", "if", "config", ".", "test", ".", "evaluate_benchmark", ":", "\n", "    ", "cluster_thresh", "=", "0.02", "\n", "propose_points", "=", "250", "\n", "score_func", "=", "torch", ".", "median", "\n", "\n", "", "cluster", "=", "Clustering", "(", "ignored_labels", "=", "IGNORE_LABELS_INSTANCE", ",", "\n", "class_mapping", "=", "VALID_CLASS_IDS", ",", "\n", "thresh", "=", "cluster_thresh", ",", "\n", "score_func", "=", "score_func", ",", "\n", "propose_points", "=", "propose_points", ",", "\n", "closed_points", "=", "300", ",", "\n", "min_points", "=", "50", ")", "\n", "if", "config", ".", "test", ".", "dual_set_cluster", ":", "\n", "# dual set clustering when submit to benchmark", "\n", "    ", "cluster_", "=", "Clustering", "(", "ignored_labels", "=", "IGNORE_LABELS_INSTANCE", ",", "\n", "class_mapping", "=", "VALID_CLASS_IDS", ",", "\n", "thresh", "=", "0.05", ",", "\n", "score_func", "=", "torch", ".", "mean", ",", "\n", "propose_points", "=", "250", ",", "\n", "closed_points", "=", "300", ",", "\n", "min_points", "=", "50", ")", "\n", "\n", "\n", "\n", "######################################################################################", "\n", "\n", "\n", "# Fix batch normalization running mean and std", "\n", "", "model", ".", "eval", "(", ")", "\n", "# Clear cache (when run in val mode, cleanup training cache)", "\n", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "    ", "for", "iteration", "in", "range", "(", "max_iter", ")", ":", "\n", "      ", "data_timer", ".", "tic", "(", ")", "\n", "if", "config", ".", "data", ".", "return_transformation", ":", "\n", "        ", "coords", ",", "input", ",", "target", ",", "instances", ",", "transformation", "=", "data_iter", ".", "next", "(", ")", "\n", "", "else", ":", "\n", "        ", "coords", ",", "input", ",", "target", ",", "instances", "=", "data_iter", ".", "next", "(", ")", "\n", "transformation", "=", "None", "\n", "", "data_time", "=", "data_timer", ".", "toc", "(", "False", ")", "\n", "\n", "# Preprocess input", "\n", "iter_timer", ".", "tic", "(", ")", "\n", "\n", "if", "config", ".", "net", ".", "wrapper_type", "!=", "None", ":", "\n", "        ", "color", "=", "input", "[", ":", ",", ":", "3", "]", ".", "int", "(", ")", "\n", "", "if", "config", ".", "augmentation", ".", "normalize_color", ":", "\n", "        ", "input", "[", ":", ",", ":", "3", "]", "=", "input", "[", ":", ",", ":", "3", "]", "/", "255.", "-", "0.5", "\n", "", "sinput", "=", "SparseTensor", "(", "input", ",", "coords", ")", ".", "to", "(", "device", ")", "\n", "\n", "# Feed forward", "\n", "inputs", "=", "(", "sinput", ",", ")", "if", "config", ".", "net", ".", "wrapper_type", "==", "None", "else", "(", "sinput", ",", "coords", ",", "color", ")", "\n", "pt_offsets", ",", "soutput", ",", "out_feats", "=", "model", "(", "*", "inputs", ")", "\n", "output", "=", "soutput", ".", "F", "\n", "\n", "pred", "=", "get_prediction", "(", "dataset", ",", "output", ",", "target", ")", ".", "int", "(", ")", "\n", "iter_time", "=", "iter_timer", ".", "toc", "(", "False", ")", "\n", "\n", "#####################################################################################", "\n", "#  Added for Instance Segmentation", "\n", "######################################################################################", "\n", "if", "config", ".", "test", ".", "evaluate_benchmark", ":", "\n", "# ---------------- point level -------------------", "\n", "# voting loss for dual set clustering, w/o using ScoreNet", "\n", "          ", "scene_id", "=", "dataset", ".", "get_output_id", "(", "iteration", ")", "\n", "inverse_mapping", "=", "dataset", ".", "get_original_pointcloud", "(", "coords", ",", "transformation", ",", "iteration", ")", "\n", "vertices", "=", "inverse_mapping", "[", "1", "]", "+", "pt_offsets", ".", "feats", "[", "inverse_mapping", "[", "0", "]", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "features", "=", "output", "[", "inverse_mapping", "[", "0", "]", "]", "\n", "instances", "=", "cluster", ".", "get_instances", "(", "vertices", ",", "features", ")", "\n", "if", "config", ".", "test", ".", "dual_set_cluster", ":", "\n", "              ", "instances_", "=", "cluster_", ".", "get_instances", "(", "inverse_mapping", "[", "1", "]", ",", "features", ")", "\n", "instances", "=", "nms", "(", "instances", ",", "instances_", ")", "\n", "", "evaluator", ".", "add_prediction", "(", "instances", ",", "scene_id", ")", "\n", "# comment out when evaluate on benchmark format", "\n", "# evaluator.add_gt_in_benchmark_format(scene_id) ", "\n", "evaluator", ".", "write_to_benchmark", "(", "scene_id", "=", "scene_id", ",", "pred_inst", "=", "instances", ")", "\n", "", "else", ":", "\n", "# --------------- voxel level------------------", "\n", "          ", "vertices", "=", "coords", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", "1", ":", "]", "+", "pt_offsets", ".", "F", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "/", "dataset", ".", "VOXEL_SIZE", "\n", "clusterred_result", "=", "cluster", ".", "get_instances", "(", "vertices", ",", "output", ".", "clone", "(", ")", ".", "cpu", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.math_functions.SparseMM.forward": [[19, 22], ["math_functions.SparseMM.save_for_backward", "torch.mm"], "methods", ["None"], ["def", "forward", "(", "self", ",", "matrix1", ",", "matrix2", ")", ":", "\n", "    ", "self", ".", "save_for_backward", "(", "matrix1", ",", "matrix2", ")", "\n", "return", "torch", ".", "mm", "(", "matrix1", ",", "matrix2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.math_functions.SparseMM.backward": [[23, 34], ["torch.mm", "torch.mm", "matrix2.t", "matrix1.t"], "methods", ["None"], ["", "def", "backward", "(", "self", ",", "grad_output", ")", ":", "\n", "    ", "matrix1", ",", "matrix2", "=", "self", ".", "saved_tensors", "\n", "grad_matrix1", "=", "grad_matrix2", "=", "None", "\n", "\n", "if", "self", ".", "needs_input_grad", "[", "0", "]", ":", "\n", "        ", "grad_matrix1", "=", "torch", ".", "mm", "(", "grad_output", ",", "matrix2", ".", "t", "(", ")", ")", "\n", "\n", "", "if", "self", ".", "needs_input_grad", "[", "1", "]", ":", "\n", "        ", "grad_matrix2", "=", "torch", ".", "mm", "(", "matrix1", ".", "t", "(", ")", ",", "grad_output", ")", "\n", "\n", "", "return", "grad_matrix1", ",", "grad_matrix2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.math_functions.sparse_float_tensor": [[36, 54], ["torch.stack().int", "values.float", "isinstance", "sargs.append", "torch.cuda.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.stack", "torch.Size"], "function", ["None"], ["", "", "def", "sparse_float_tensor", "(", "values", ",", "indices", ",", "size", "=", "None", ")", ":", "\n", "  ", "\"\"\"\n  Return a torch sparse matrix give values and indices (row_ind, col_ind).\n  If the size is an integer, return a square matrix with side size.\n  If the size is a torch.Size, use it to initialize the out tensor.\n  If none, the size is inferred.\n  \"\"\"", "\n", "indices", "=", "torch", ".", "stack", "(", "indices", ")", ".", "int", "(", ")", "\n", "sargs", "=", "[", "indices", ",", "values", ".", "float", "(", ")", "]", "\n", "if", "size", "is", "not", "None", ":", "\n", "# Use the provided size", "\n", "    ", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "      ", "size", "=", "torch", ".", "Size", "(", "(", "size", ",", "size", ")", ")", "\n", "", "sargs", ".", "append", "(", "size", ")", "\n", "", "if", "values", ".", "is_cuda", ":", "\n", "    ", "return", "torch", ".", "cuda", ".", "sparse", ".", "FloatTensor", "(", "*", "sargs", ")", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "*", "sargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.math_functions.diags": [[56, 62], ["values.view.view", "values.view.nelement", "torch.Size", "math_functions.sparse_float_tensor", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.math_functions.sparse_float_tensor"], ["", "", "def", "diags", "(", "values", ",", "size", "=", "None", ")", ":", "\n", "  ", "values", "=", "values", ".", "view", "(", "-", "1", ")", "\n", "n", "=", "values", ".", "nelement", "(", ")", "\n", "size", "=", "torch", ".", "Size", "(", "(", "n", ",", "n", ")", ")", "\n", "indices", "=", "(", "torch", ".", "arange", "(", "0", ",", "n", ")", ",", "torch", ".", "arange", "(", "0", ",", "n", ")", ")", "\n", "return", "sparse_float_tensor", "(", "values", ",", "indices", ",", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.math_functions.sparse_to_csr_matrix": [[64, 69], ["tensor.cpu.cpu", "tensor.cpu._indices().numpy", "tensor.cpu._values().numpy", "scipy.sparse.csr_matrix", "tensor.cpu._indices", "tensor.cpu._values"], "function", ["None"], ["", "def", "sparse_to_csr_matrix", "(", "tensor", ")", ":", "\n", "  ", "tensor", "=", "tensor", ".", "cpu", "(", ")", "\n", "inds", "=", "tensor", ".", "_indices", "(", ")", ".", "numpy", "(", ")", "\n", "vals", "=", "tensor", ".", "_values", "(", ")", ".", "numpy", "(", ")", "\n", "return", "csr_matrix", "(", "(", "vals", ",", "(", "inds", "[", "0", "]", ",", "inds", "[", "1", "]", ")", ")", ",", "shape", "=", "[", "s", "for", "s", "in", "tensor", ".", "shape", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.math_functions.csr_matrix_to_sparse": [[71, 77], ["mat.nonzero", "math_functions.sparse_float_tensor", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.Size"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.math_functions.sparse_float_tensor"], ["", "def", "csr_matrix_to_sparse", "(", "mat", ")", ":", "\n", "  ", "row_ind", ",", "col_ind", "=", "mat", ".", "nonzero", "(", ")", "\n", "return", "sparse_float_tensor", "(", "\n", "torch", ".", "from_numpy", "(", "mat", ".", "data", ")", ",", "\n", "(", "torch", ".", "from_numpy", "(", "row_ind", ")", ",", "torch", ".", "from_numpy", "(", "col_ind", ")", ")", ",", "\n", "size", "=", "torch", ".", "Size", "(", "mat", ".", "shape", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.WithTimer.__init__": [[104, 106], ["None"], "methods", ["None"], ["\n", "", "", "class", "WithTimer", "(", "object", ")", ":", "\n", "  ", "\"\"\"Timer for with statement.\"\"\"", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.WithTimer.__enter__": [[107, 109], ["time.time"], "methods", ["None"], ["\n", "def", "__init__", "(", "self", ",", "name", "=", "None", ")", ":", "\n", "    ", "self", ".", "name", "=", "name", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.WithTimer.__exit__": [[110, 115], ["logging.info", "logging.info", "time.time"], "methods", ["None"], ["\n", "", "def", "__enter__", "(", "self", ")", ":", "\n", "    ", "self", ".", "tstart", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "def", "__exit__", "(", "self", ",", "type", ",", "value", ",", "traceback", ")", ":", "\n", "    ", "out_str", "=", "'Elapsed: %s'", "%", "(", "time", ".", "time", "(", ")", "-", "self", ".", "tstart", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.Timer.__init__": [[120, 126], ["None"], "methods", ["None"], ["\n", "", "", "class", "Timer", "(", "object", ")", ":", "\n", "  ", "\"\"\"A simple timer.\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "total_time", "=", "0.", "\n", "self", ".", "calls", "=", "0", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.Timer.reset": [[127, 133], ["None"], "methods", ["None"], ["self", ".", "start_time", "=", "0.", "\n", "self", ".", "diff", "=", "0.", "\n", "self", ".", "average_time", "=", "0.", "\n", "\n", "", "def", "reset", "(", "self", ")", ":", "\n", "    ", "self", ".", "total_time", "=", "0", "\n", "self", ".", "calls", "=", "0", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.Timer.tic": [[134, 138], ["time.time"], "methods", ["None"], ["self", ".", "start_time", "=", "0", "\n", "self", ".", "diff", "=", "0", "\n", "self", ".", "averate_time", "=", "0", "\n", "\n", "", "def", "tic", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.Timer.toc": [[139, 148], ["time.time"], "methods", ["None"], ["# using time.time instead of time.clock because time time.clock", "\n", "# does not normalize for multithreading", "\n", "    ", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "def", "toc", "(", "self", ",", "average", "=", "True", ")", ":", "\n", "    ", "self", ".", "diff", "=", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", "\n", "self", ".", "total_time", "+=", "self", ".", "diff", "\n", "self", ".", "calls", "+=", "1", "\n", "self", ".", "average_time", "=", "self", ".", "total_time", "/", "self", ".", "calls", "\n", "if", "average", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.ExpTimer.__init__": [[153, 156], ["utils.Timer.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "", "", "", "class", "ExpTimer", "(", "Timer", ")", ":", "\n", "  ", "\"\"\" Exponential Moving Average Timer \"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.ExpTimer.toc": [[157, 162], ["time.time"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "alpha", "=", "0.5", ")", ":", "\n", "    ", "super", "(", "ExpTimer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "\n", "", "def", "toc", "(", "self", ")", ":", "\n", "    ", "self", ".", "diff", "=", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.AverageMeter.__init__": [[167, 169], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset"], ["\n", "", "", "class", "AverageMeter", "(", "object", ")", ":", "\n", "  ", "\"\"\"Computes and stores the average and current value\"\"\"", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.AverageMeter.reset": [[170, 175], ["None"], "methods", ["None"], ["\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "reset", "(", ")", "\n", "\n", "", "def", "reset", "(", "self", ")", ":", "\n", "    ", "self", ".", "val", "=", "0", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.AverageMeter.update": [[176, 181], ["None"], "methods", ["None"], ["self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n", "", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "    ", "self", ".", "val", "=", "val", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.HashTimeBatch.__init__": [[238, 240], ["None"], "methods", ["None"], ["\n", "\n", "", "class", "HashTimeBatch", "(", "object", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.HashTimeBatch.__call__": [[241, 243], ["utils.HashTimeBatch.hash"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.hash"], ["\n", "  ", "def", "__init__", "(", "self", ",", "prime", "=", "5279", ")", ":", "\n", "    ", "self", ".", "prime", "=", "prime", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.HashTimeBatch.hash": [[244, 246], ["None"], "methods", ["None"], ["\n", "", "def", "__call__", "(", "self", ",", "time", ",", "batch", ")", ":", "\n", "    ", "return", "self", ".", "hash", "(", "time", ",", "batch", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.HashTimeBatch.dehash": [[247, 251], ["None"], "methods", ["None"], ["\n", "", "def", "hash", "(", "self", ",", "time", ",", "batch", ")", ":", "\n", "    ", "return", "self", ".", "prime", "*", "batch", "+", "time", "\n", "\n", "", "def", "dehash", "(", "self", ",", "key", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.load_state_with_same_shape": [[18, 42], ["model.state_dict", "[].startswith", "[].startswith", "logging.info", "logging.info", "logging.info", "weights.items", "list", "k.partition", "weights.keys", "list", "k.partition", "weights.keys", "filtered_weights.keys", "weights.keys", "weights.keys", "v.size", "model_state[].size"], "function", ["None"], ["def", "load_state_with_same_shape", "(", "model", ",", "weights", ")", ":", "\n", "# weights['conv1.kernel'] = weights['conv1.kernel'].repeat([1,3,1])/3.0", "\n", "  ", "model_state", "=", "model", ".", "state_dict", "(", ")", "\n", "if", "list", "(", "weights", ".", "keys", "(", ")", ")", "[", "0", "]", ".", "startswith", "(", "'module.'", ")", ":", "\n", "    ", "logging", ".", "info", "(", "\"Loading multigpu weights with module. prefix...\"", ")", "\n", "weights", "=", "{", "k", ".", "partition", "(", "'module.'", ")", "[", "2", "]", ":", "weights", "[", "k", "]", "for", "k", "in", "weights", ".", "keys", "(", ")", "}", "\n", "\n", "", "if", "list", "(", "weights", ".", "keys", "(", ")", ")", "[", "0", "]", ".", "startswith", "(", "'encoder.'", ")", ":", "\n", "    ", "logging", ".", "info", "(", "\"Loading multigpu weights with encoder. prefix...\"", ")", "\n", "weights", "=", "{", "k", ".", "partition", "(", "'encoder.'", ")", "[", "2", "]", ":", "weights", "[", "k", "]", "for", "k", "in", "weights", ".", "keys", "(", ")", "}", "\n", "\n", "# print(weights.items())", "\n", "# print(\"===================\")", "\n", "# print(\"===================\")", "\n", "# print(\"===================\")", "\n", "# print(\"===================\")", "\n", "# print(\"===================\")", "\n", "# print(model_state)", "\n", "\n", "", "filtered_weights", "=", "{", "\n", "k", ":", "v", "for", "k", ",", "v", "in", "weights", ".", "items", "(", ")", "if", "k", "in", "model_state", "and", "v", ".", "size", "(", ")", "==", "model_state", "[", "k", "]", ".", "size", "(", ")", "\n", "}", "\n", "logging", ".", "info", "(", "\"Loading weights:\"", "+", "', '", ".", "join", "(", "filtered_weights", ".", "keys", "(", ")", ")", ")", "\n", "return", "filtered_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.checkpoint": [[43, 77], ["utils.mkdir_p", "omegaconf.OmegaConf.save", "torch.save", "logging.info", "_model.state_dict", "optimizer.state_dict", "os.path.exists", "os.system", "lib.distributed.get_world_size", "os.remove"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.mkdir_p", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size"], ["", "def", "checkpoint", "(", "model", ",", "optimizer", ",", "epoch", ",", "iteration", ",", "config", ",", "best_val_miou", "=", "None", ",", "best_val_mAP", "=", "None", ",", "postfix", "=", "None", ")", ":", "\n", "\n", "  ", "mkdir_p", "(", "'weights'", ")", "\n", "filename", "=", "f\"checkpoint_{config.net.model}_iter{iteration}.pth\"", "\n", "if", "config", ".", "train", ".", "overwrite_weights", ":", "\n", "    ", "filename", "=", "f\"checkpoint_{config.net.model}.pth\"", "\n", "", "if", "postfix", "is", "not", "None", ":", "\n", "    ", "filename", "=", "f\"checkpoint_{config.net.model}_{postfix}.pth\"", "\n", "", "checkpoint_file", "=", "'weights/'", "+", "filename", "\n", "\n", "_model", "=", "model", ".", "module", "if", "get_world_size", "(", ")", ">", "1", "else", "model", "\n", "state", "=", "{", "\n", "'iteration'", ":", "iteration", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'arch'", ":", "config", ".", "net", ".", "model", ",", "\n", "'state_dict'", ":", "_model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", "\n", "}", "\n", "if", "best_val_miou", "is", "not", "None", ":", "\n", "    ", "state", "[", "'best_val_miou'", "]", "=", "best_val_miou", "\n", "state", "[", "'best_val_iter'", "]", "=", "iteration", "\n", "\n", "", "if", "best_val_mAP", "is", "not", "None", ":", "\n", "    ", "state", "[", "'best_val_mAP'", "]", "=", "best_val_mAP", "\n", "state", "[", "'best_val_iter'", "]", "=", "iteration", "\n", "\n", "# save config", "\n", "", "OmegaConf", ".", "save", "(", "config", ",", "'config.yaml'", ")", "\n", "\n", "torch", ".", "save", "(", "state", ",", "checkpoint_file", ")", "\n", "logging", ".", "info", "(", "f\"Checkpoint saved to {checkpoint_file}\"", ")", "\n", "\n", "if", "postfix", "==", "None", ":", "\n", "# Delete symlink if it exists", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "'weights/weights.pth'", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.precision_at_one": [[79, 91], ["pred.view.view", "target.view.view", "pred.view.eq", "correct.view.view", "correct.view.nelement", "correct.view.float().sum().mul().item", "float", "correct.view.float().sum().mul", "correct.view.float().sum", "correct.view.size", "correct.view.float"], "function", ["None"], ["# Create symlink", "\n", "", "os", ".", "system", "(", "'ln -s {} weights/weights.pth'", ".", "format", "(", "filename", ")", ")", "\n", "\n", "\n", "", "", "def", "precision_at_one", "(", "pred", ",", "target", ",", "ignore_label", "=", "255", ")", ":", "\n", "  ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "# batch_size = target.size(0) * target.size(1) * target.size(2)", "\n", "pred", "=", "pred", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "target", "=", "target", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ")", "\n", "correct", "=", "correct", "[", "target", "!=", "ignore_label", "]", "\n", "correct", "=", "correct", ".", "view", "(", "-", "1", ")", "\n", "if", "correct", ".", "nelement", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.fast_hist": [[92, 95], ["numpy.bincount().reshape", "numpy.bincount", "label[].astype"], "function", ["None"], ["    ", "return", "correct", ".", "float", "(", ")", ".", "sum", "(", "0", ")", ".", "mul", "(", "100.0", "/", "correct", ".", "size", "(", "0", ")", ")", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "    ", "return", "float", "(", "'nan'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.per_class_iu": [[96, 99], ["numpy.errstate", "numpy.diag", "numpy.diag", "hist.sum", "hist.sum"], "function", ["None"], ["", "", "def", "fast_hist", "(", "pred", ",", "label", ",", "n", ")", ":", "\n", "  ", "k", "=", "(", "label", ">=", "0", ")", "&", "(", "label", "<", "n", ")", "\n", "return", "np", ".", "bincount", "(", "n", "*", "label", "[", "k", "]", ".", "astype", "(", "int", ")", "+", "pred", "[", "k", "]", ",", "minlength", "=", "n", "**", "2", ")", ".", "reshape", "(", "n", ",", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.mkdir_p": [[183, 191], ["os.makedirs", "os.path.isdir"], "function", ["None"], ["self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n", "\n", "", "", "def", "mkdir_p", "(", "path", ")", ":", "\n", "  ", "try", ":", "\n", "    ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "except", "OSError", "as", "exc", ":", "\n", "    ", "if", "exc", ".", "errno", "==", "errno", ".", "EEXIST", "and", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.read_txt": [[193, 200], ["open", "f.readlines", "x.strip"], "function", ["None"], ["", "else", ":", "\n", "      ", "raise", "\n", "\n", "\n", "", "", "", "def", "read_txt", "(", "path", ")", ":", "\n", "  ", "\"\"\"Read txt file into lines.\n  \"\"\"", "\n", "with", "open", "(", "path", ")", "as", "f", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.debug_on": [[202, 222], ["functools.wraps", "f", "sys.exc_info", "traceback.print_exception", "pdb.post_mortem"], "function", ["None"], ["", "lines", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "lines", "]", "\n", "return", "lines", "\n", "\n", "\n", "", "def", "debug_on", "(", ")", ":", "\n", "  ", "import", "sys", "\n", "import", "pdb", "\n", "import", "functools", "\n", "import", "traceback", "\n", "\n", "def", "decorator", "(", "f", ")", ":", "\n", "\n", "    ", "@", "functools", ".", "wraps", "(", "f", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "      ", "try", ":", "\n", "        ", "return", "f", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "except", "Exception", ":", "\n", "        ", "info", "=", "sys", ".", "exc_info", "(", ")", "\n", "traceback", ".", "print_exception", "(", "*", "info", ")", "\n", "pdb", ".", "post_mortem", "(", "info", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.get_prediction": [[224, 226], ["output.max"], "function", ["None"], ["\n", "", "return", "decorator", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.count_parameters": [[228, 230], ["sum", "p.numel", "model.parameters"], "function", ["None"], ["", "def", "get_prediction", "(", "dataset", ",", "output", ",", "target", ")", ":", "\n", "  ", "return", "output", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.get_torch_device": [[232, 234], ["torch.device"], "function", ["None"], ["", "def", "count_parameters", "(", "model", ")", ":", "\n", "  ", "return", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.save_rotation_pred": [[253, 262], ["dataset.label_map.items", "numpy.array", "numpy.savetxt", "dataset.get_output_id"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_output_id"], ["batch", "=", "key", "/", "self", ".", "prime", "\n", "return", "time", ",", "batch", "\n", "\n", "\n", "", "", "def", "save_rotation_pred", "(", "iteration", ",", "pred", ",", "dataset", ",", "save_pred_dir", ")", ":", "\n", "  ", "\"\"\"Save prediction results in original pointcloud scale.\"\"\"", "\n", "decode_label_map", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "dataset", ".", "label_map", ".", "items", "(", ")", ":", "\n", "    ", "decode_label_map", "[", "v", "]", "=", "k", "\n", "", "pred", "=", "np", ".", "array", "(", "[", "decode_label_map", "[", "x", "]", "for", "x", "in", "pred", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.visualize_results": [[264, 292], ["coords[].numpy", "numpy.logical_and", "numpy.logical_and", "numpy.hstack", "os.makedirs", "lib.pc_utils.colorize_pointcloud", "numpy.vstack", "lib.pc_utils.save_point_cloud", "numpy.hstack", "lib.pc_utils.save_point_cloud", "lib.pc_utils.colorize_pointcloud", "numpy.vstack", "lib.pc_utils.save_point_cloud", "coords[].numpy", "target.numpy", "os.path.join", "os.path.join", "os.path.join", "numpy.zeros", "target.numpy", "input[].cpu().numpy", "numpy.sum", "input[].cpu"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.colorize_pointcloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.save_point_cloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.save_point_cloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.colorize_pointcloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.save_point_cloud"], ["out_rotation_path", "=", "save_pred_dir", "+", "'/'", "+", "out_rotation_txt", "\n", "np", ".", "savetxt", "(", "out_rotation_path", ",", "pred", ",", "fmt", "=", "'%i'", ")", "\n", "\n", "\n", "", "def", "visualize_results", "(", "coords", ",", "input", ",", "target", ",", "upsampled_pred", ",", "config", ",", "iteration", ")", ":", "\n", "# Get filter for valid predictions in the first batch.", "\n", "  ", "target_batch", "=", "coords", "[", ":", ",", "3", "]", ".", "numpy", "(", ")", "==", "0", "\n", "input_xyz", "=", "coords", "[", ":", ",", ":", "3", "]", ".", "numpy", "(", ")", "\n", "target_valid", "=", "target", ".", "numpy", "(", ")", "!=", "255", "\n", "target_pred", "=", "np", ".", "logical_and", "(", "target_batch", ",", "target_valid", ")", "\n", "target_nonpred", "=", "np", ".", "logical_and", "(", "target_batch", ",", "~", "target_valid", ")", "\n", "ptc_nonpred", "=", "np", ".", "hstack", "(", "(", "input_xyz", "[", "target_nonpred", "]", ",", "np", ".", "zeros", "(", "(", "np", ".", "sum", "(", "target_nonpred", ")", ",", "3", ")", ")", ")", ")", "\n", "# Unwrap file index if tested with rotation.", "\n", "file_iter", "=", "iteration", "\n", "if", "config", ".", "test_rotation", ">=", "1", ":", "\n", "    ", "file_iter", "=", "iteration", "//", "config", ".", "test", ".", "test_rotation", "\n", "# Create directory to save visualization results.", "\n", "", "os", ".", "makedirs", "(", "config", ".", "test", ".", "visualize_path", ",", "exist_ok", "=", "True", ")", "\n", "# Label visualization in RGB.", "\n", "xyzlabel", "=", "colorize_pointcloud", "(", "input_xyz", "[", "target_pred", "]", ",", "upsampled_pred", "[", "target_pred", "]", ")", "\n", "xyzlabel", "=", "np", ".", "vstack", "(", "(", "xyzlabel", ",", "ptc_nonpred", ")", ")", "\n", "filename", "=", "'_'", ".", "join", "(", "[", "config", ".", "dataset", ",", "config", ".", "model", ",", "'pred'", ",", "'%04d.ply'", "%", "file_iter", "]", ")", "\n", "save_point_cloud", "(", "xyzlabel", ",", "os", ".", "path", ".", "join", "(", "config", ".", "test", ".", "visualize_path", ",", "filename", ")", ",", "verbose", "=", "False", ")", "\n", "# RGB input values visualization.", "\n", "xyzrgb", "=", "np", ".", "hstack", "(", "(", "input_xyz", "[", "target_batch", "]", ",", "input", "[", ":", ",", ":", "3", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "target_batch", "]", ")", ")", "\n", "filename", "=", "'_'", ".", "join", "(", "[", "config", ".", "dataset", ",", "config", ".", "model", ",", "'rgb'", ",", "'%04d.ply'", "%", "file_iter", "]", ")", "\n", "save_point_cloud", "(", "xyzrgb", ",", "os", ".", "path", ".", "join", "(", "config", ".", "test", ".", "visualize_path", ",", "filename", ")", ",", "verbose", "=", "False", ")", "\n", "# Ground-truth visualization in RGB.", "\n", "xyzgt", "=", "colorize_pointcloud", "(", "input_xyz", "[", "target_pred", "]", ",", "target", ".", "numpy", "(", ")", "[", "target_pred", "]", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.permute_pointcloud": [[294, 342], ["input_coords[].max().item", "pointcloud[].max().int().item", "transformation[].max().int().item", "range", "numpy.concatenate", "torch.from_numpy", "torch.zeros().to", "torch.from_numpy().int", "numpy.ravel_multi_index", "[].numpy", "pointcloud[].numpy", "transformation[].reshape().numpy", "numpy.hstack", "[].astype", "numpy.vstack", "np.vstack.min", "utils.permute_pointcloud._hash_coords"], "function", ["None"], ["filename", "=", "'_'", ".", "join", "(", "[", "config", ".", "dataset", ",", "config", ".", "model", ",", "'gt'", ",", "'%04d.ply'", "%", "file_iter", "]", ")", "\n", "save_point_cloud", "(", "xyzgt", ",", "os", ".", "path", ".", "join", "(", "config", ".", "test", ".", "visualize_path", ",", "filename", ")", ",", "verbose", "=", "False", ")", "\n", "\n", "\n", "", "def", "permute_pointcloud", "(", "input_coords", ",", "pointcloud", ",", "transformation", ",", "label_map", ",", "\n", "voxel_output", ",", "voxel_pred", ")", ":", "\n", "  ", "\"\"\"Get permutation from pointcloud to input voxel coords.\"\"\"", "\n", "def", "_hash_coords", "(", "coords", ",", "coords_min", ",", "coords_dim", ")", ":", "\n", "    ", "return", "np", ".", "ravel_multi_index", "(", "(", "coords", "-", "coords_min", ")", ".", "T", ",", "coords_dim", ")", "\n", "# Validate input.", "\n", "", "input_batch_size", "=", "input_coords", "[", ":", ",", "-", "1", "]", ".", "max", "(", ")", ".", "item", "(", ")", "\n", "pointcloud_batch_size", "=", "pointcloud", "[", ":", ",", "-", "1", "]", ".", "max", "(", ")", ".", "int", "(", ")", ".", "item", "(", ")", "\n", "transformation_batch_size", "=", "transformation", "[", ":", ",", "-", "1", "]", ".", "max", "(", ")", ".", "int", "(", ")", ".", "item", "(", ")", "\n", "assert", "input_batch_size", "==", "pointcloud_batch_size", "==", "transformation_batch_size", "\n", "pointcloud_permutation", ",", "pointcloud_target", "=", "[", "]", ",", "[", "]", "\n", "# Process each batch.", "\n", "for", "i", "in", "range", "(", "input_batch_size", "+", "1", ")", ":", "\n", "# Filter batch from the data.", "\n", "    ", "input_coords_mask_b", "=", "input_coords", "[", ":", ",", "-", "1", "]", "==", "i", "\n", "input_coords_b", "=", "(", "input_coords", "[", "input_coords_mask_b", "]", ")", "[", ":", ",", ":", "-", "1", "]", ".", "numpy", "(", ")", "\n", "pointcloud_b", "=", "pointcloud", "[", "pointcloud", "[", ":", ",", "-", "1", "]", "==", "i", ",", ":", "-", "1", "]", ".", "numpy", "(", ")", "\n", "transformation_b", "=", "transformation", "[", "i", ",", ":", "-", "1", "]", ".", "reshape", "(", "4", ",", "4", ")", ".", "numpy", "(", ")", "\n", "# Transform original pointcloud to voxel space.", "\n", "original_coords1", "=", "np", ".", "hstack", "(", "(", "pointcloud_b", "[", ":", ",", ":", "3", "]", ",", "np", ".", "ones", "(", "(", "pointcloud_b", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ")", ")", "\n", "original_vcoords", "=", "np", ".", "floor", "(", "original_coords1", "@", "transformation_b", ".", "T", ")", "[", ":", ",", ":", "3", "]", ".", "astype", "(", "int", ")", "\n", "# Hash input and voxel coordinates to flat coordinate.", "\n", "vcoords_all", "=", "np", ".", "vstack", "(", "(", "input_coords_b", ",", "original_vcoords", ")", ")", "\n", "vcoords_min", "=", "vcoords_all", ".", "min", "(", "0", ")", "\n", "vcoords_dims", "=", "vcoords_all", ".", "max", "(", "0", ")", "-", "vcoords_all", ".", "min", "(", "0", ")", "+", "1", "\n", "input_coords_key", "=", "_hash_coords", "(", "input_coords_b", ",", "vcoords_min", ",", "vcoords_dims", ")", "\n", "original_vcoords_key", "=", "_hash_coords", "(", "original_vcoords", ",", "vcoords_min", ",", "vcoords_dims", ")", "\n", "# Query voxel predictions from original pointcloud.", "\n", "key_to_idx", "=", "dict", "(", "zip", "(", "input_coords_key", ",", "range", "(", "len", "(", "input_coords_key", ")", ")", ")", ")", "\n", "pointcloud_permutation", ".", "append", "(", "\n", "np", ".", "array", "(", "[", "key_to_idx", ".", "get", "(", "i", ",", "-", "1", ")", "for", "i", "in", "original_vcoords_key", "]", ")", ")", "\n", "pointcloud_target", ".", "append", "(", "pointcloud_b", "[", ":", ",", "-", "1", "]", ".", "astype", "(", "int", ")", ")", "\n", "", "pointcloud_permutation", "=", "np", ".", "concatenate", "(", "pointcloud_permutation", ")", "\n", "# Prepare pointcloud permutation array.", "\n", "pointcloud_permutation", "=", "torch", ".", "from_numpy", "(", "pointcloud_permutation", ")", "\n", "permutation_mask", "=", "pointcloud_permutation", ">=", "0", "\n", "permutation_valid", "=", "pointcloud_permutation", "[", "permutation_mask", "]", "\n", "# Permuate voxel output to pointcloud.", "\n", "pointcloud_output", "=", "torch", ".", "zeros", "(", "pointcloud", ".", "shape", "[", "0", "]", ",", "voxel_output", ".", "shape", "[", "1", "]", ")", ".", "to", "(", "voxel_output", ")", "\n", "pointcloud_output", "[", "permutation_mask", "]", "=", "voxel_output", "[", "permutation_valid", "]", "\n", "# Permuate voxel prediction to pointcloud.", "\n", "# NOTE: Invalid points (points found in pointcloud but not in the voxel) are mapped to 0.", "\n", "pointcloud_pred", "=", "torch", ".", "ones", "(", "pointcloud", ".", "shape", "[", "0", "]", ")", ".", "int", "(", ")", ".", "to", "(", "voxel_pred", ")", "*", "0", "\n", "pointcloud_pred", "[", "permutation_mask", "]", "=", "voxel_pred", "[", "permutation_valid", "]", "\n", "# Map pointcloud target to respect dataset IGNORE_LABELS", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.__init__": [[97, 101], ["pc_utils.Camera.build_camera_matrix", "numpy.linalg.inv"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.build_camera_matrix"], ["  ", "def", "__init__", "(", "self", ",", "intrinsics", ")", ":", "\n", "    ", "self", ".", "_intrinsics", "=", "intrinsics", "\n", "self", ".", "_camera_matrix", "=", "self", ".", "build_camera_matrix", "(", "self", ".", "intrinsics", ")", "\n", "self", ".", "_K_inv", "=", "inv", "(", "self", ".", "camera_matrix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.build_camera_matrix": [[102, 116], ["numpy.array", "numpy.linalg.matrix_rank"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_camera_matrix", "(", "intrinsics", ")", ":", "\n", "    ", "\"\"\"Build the 3x3 camera matrix K using the given intrinsics.\n\n    Equation 6.10 from HZ.\n    \"\"\"", "\n", "f", "=", "intrinsics", "[", "'focal_length'", "]", "\n", "pp_x", "=", "intrinsics", "[", "'pp_x'", "]", "\n", "pp_y", "=", "intrinsics", "[", "'pp_y'", "]", "\n", "\n", "K", "=", "np", ".", "array", "(", "[", "[", "f", ",", "0", ",", "pp_x", "]", ",", "[", "0", ",", "f", ",", "pp_y", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# K[:, 0] *= -1.  # Step 1 of Kyle", "\n", "assert", "matrix_rank", "(", "K", ")", "==", "3", "\n", "return", "K", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.extrinsics2RT": [[117, 130], ["numpy.copy", "numpy.copy", "T.reshape.reshape.reshape"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "extrinsics2RT", "(", "extrinsics", ")", ":", "\n", "    ", "\"\"\"Convert extrinsics matrix to separate rotation matrix R and translation vector T.\n    \"\"\"", "\n", "assert", "extrinsics", ".", "shape", "==", "(", "4", ",", "4", ")", "\n", "R", "=", "extrinsics", "[", ":", "3", ",", ":", "3", "]", "\n", "T", "=", "extrinsics", "[", "3", ",", ":", "3", "]", "\n", "R", "=", "np", ".", "copy", "(", "R", ")", "\n", "T", "=", "np", ".", "copy", "(", "T", ")", "\n", "T", "=", "T", ".", "reshape", "(", "3", ",", "1", ")", "\n", "R", "[", "0", ",", ":", "]", "*=", "-", "1.", "# Step 1 of Kyle", "\n", "T", "*=", "100.", "# Convert from m to cm", "\n", "return", "R", ",", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.project": [[131, 143], ["pc_utils.Camera.world2camera"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.world2camera"], ["", "def", "project", "(", "self", ",", "points_3d", ",", "extrinsics", "=", "None", ")", ":", "\n", "    ", "\"\"\"Project a 3D point in camera coordinates into the camera/image plane.\n\n    Args:\n      point_3d:\n    \"\"\"", "\n", "if", "extrinsics", "is", "not", "None", ":", "# Map points to camera coordinates", "\n", "      ", "points_3d", "=", "self", ".", "world2camera", "(", "extrinsics", ",", "points_3d", ")", "\n", "\n", "# TODO: Make sure to handle homogeneous AND non-homogeneous coordinate points", "\n", "# TODO: Consider handling a set of points", "\n", "", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.backproject": [[144, 236], ["numpy.squeeze.astype", "numpy.meshgrid", "numpy.ones_like", "numpy.concatenate", "numpy.concatenate.reshape", "numpy.dot", "numpy.concatenate", "numpy.hstack", "numpy.tile", "numpy.squeeze", "range", "range", "numpy.concatenate.astype", "labels.reshape", "range", "pc_utils.Camera.camera2world", "numpy.hstack", "numpy.ones_like", "numpy.tile.reshape", "Z.flatten", "numpy.asarray", "numpy.asarray", "valid.append"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.camera2world"], ["", "def", "backproject", "(", "self", ",", "\n", "depth_map", ",", "\n", "labels", "=", "None", ",", "\n", "max_depth", "=", "None", ",", "\n", "max_height", "=", "None", ",", "\n", "min_height", "=", "None", ",", "\n", "rgb_img", "=", "None", ",", "\n", "extrinsics", "=", "None", ",", "\n", "prune", "=", "True", ")", ":", "\n", "    ", "\"\"\"Backproject a depth map into 3D points (camera coordinate system). Attach color if RGB image\n    is provided, otherwise use gray [128 128 128] color.\n\n    Does not show points at Z = 0 or maximum Z = 65535 depth.\n\n    Args:\n      labels: Tensor with the same shape as depth map (but can be 1-channel or 3-channel).\n      max_depth: Maximum depth in cm. All pts with depth greater than max_depth will be ignored.\n      max_height: Maximum height in cm. All pts with height greater than max_height will be ignored.\n\n    Returns:\n      points_3d: Numpy array of size Nx3 (XYZ) or Nx6 (XYZRGB).\n    \"\"\"", "\n", "if", "labels", "is", "not", "None", ":", "\n", "      ", "assert", "depth_map", ".", "shape", "[", ":", "2", "]", "==", "labels", ".", "shape", "[", ":", "2", "]", "\n", "if", "(", "labels", ".", "ndim", "==", "2", ")", "or", "(", "(", "labels", ".", "ndim", "==", "3", ")", "and", "(", "labels", ".", "shape", "[", "2", "]", "==", "1", ")", ")", ":", "\n", "        ", "n_label_channels", "=", "1", "\n", "", "elif", "(", "labels", ".", "ndim", "==", "3", ")", "and", "(", "labels", ".", "shape", "[", "2", "]", "==", "3", ")", ":", "\n", "        ", "n_label_channels", "=", "3", "\n", "\n", "", "", "if", "rgb_img", "is", "not", "None", ":", "\n", "      ", "assert", "depth_map", ".", "shape", "[", ":", "2", "]", "==", "rgb_img", ".", "shape", "[", ":", "2", "]", "\n", "", "else", ":", "\n", "      ", "rgb_img", "=", "np", ".", "ones_like", "(", "depth_map", ",", "dtype", "=", "np", ".", "uint8", ")", "*", "255", "\n", "\n", "# Convert from 1-channel to 3-channel", "\n", "", "if", "(", "rgb_img", ".", "ndim", "==", "3", ")", "and", "(", "rgb_img", ".", "shape", "[", "2", "]", "==", "1", ")", ":", "\n", "      ", "rgb_img", "=", "np", ".", "tile", "(", "rgb_img", ",", "[", "1", ",", "1", ",", "3", "]", ")", "\n", "\n", "# Convert depth map to single channel if it is multichannel", "\n", "", "if", "(", "depth_map", ".", "ndim", "==", "3", ")", "and", "depth_map", ".", "shape", "[", "2", "]", "==", "3", ":", "\n", "      ", "depth_map", "=", "np", ".", "squeeze", "(", "depth_map", "[", ":", ",", ":", ",", "0", "]", ")", "\n", "", "depth_map", "=", "depth_map", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "# Get image dimensions", "\n", "H", ",", "W", "=", "depth_map", ".", "shape", "\n", "\n", "# Create meshgrid (pixel coordinates)", "\n", "Z", "=", "depth_map", "\n", "A", ",", "B", "=", "np", ".", "meshgrid", "(", "range", "(", "W", ")", ",", "range", "(", "H", ")", ")", "\n", "ones", "=", "np", ".", "ones_like", "(", "A", ")", "\n", "grid", "=", "np", ".", "concatenate", "(", "(", "A", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ",", "B", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ",", "ones", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ")", ",", "\n", "axis", "=", "2", ")", "\n", "grid", "=", "grid", ".", "astype", "(", "np", ".", "float32", ")", "*", "Z", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "# Nx3 where each row is (a*Z, b*Z, Z)", "\n", "grid_flattened", "=", "grid", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", "\n", "grid_flattened", "=", "grid_flattened", ".", "T", "# 3xN where each col is (a*Z, b*Z, Z)", "\n", "prod", "=", "np", ".", "dot", "(", "self", ".", "K_inv", ",", "grid_flattened", ")", "\n", "XYZ", "=", "np", ".", "concatenate", "(", "(", "prod", "[", ":", "2", ",", ":", "]", ".", "T", ",", "Z", ".", "flatten", "(", ")", "[", ":", ",", "np", ".", "newaxis", "]", ")", ",", "axis", "=", "1", ")", "# Nx3", "\n", "XYZRGB", "=", "np", ".", "hstack", "(", "(", "XYZ", ",", "rgb_img", ".", "reshape", "(", "(", "-", "1", ",", "3", ")", ")", ")", ")", "\n", "points_3d", "=", "XYZRGB", "\n", "\n", "if", "labels", "is", "not", "None", ":", "\n", "      ", "labels_reshaped", "=", "labels", ".", "reshape", "(", "(", "-", "1", ",", "n_label_channels", ")", ")", "\n", "\n", "# Prune points", "\n", "", "if", "prune", "is", "True", ":", "\n", "      ", "valid", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "points_3d", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "cur_y", "=", "points_3d", "[", "idx", ",", "1", "]", "\n", "cur_z", "=", "points_3d", "[", "idx", ",", "2", "]", "\n", "if", "(", "cur_z", "==", "0", ")", "or", "(", "cur_z", "==", "65535", ")", ":", "# Don't show things at 0 distance or max distance", "\n", "          ", "continue", "\n", "", "elif", "(", "max_depth", "is", "not", "None", ")", "and", "(", "cur_z", ">", "max_depth", ")", ":", "\n", "          ", "continue", "\n", "", "elif", "(", "max_height", "is", "not", "None", ")", "and", "(", "cur_y", ">", "max_height", ")", ":", "\n", "          ", "continue", "\n", "", "elif", "(", "min_height", "is", "not", "None", ")", "and", "(", "cur_y", "<", "min_height", ")", ":", "\n", "          ", "continue", "\n", "", "else", ":", "\n", "          ", "valid", ".", "append", "(", "idx", ")", "\n", "", "", "points_3d", "=", "points_3d", "[", "np", ".", "asarray", "(", "valid", ")", "]", "\n", "if", "labels", "is", "not", "None", ":", "\n", "        ", "labels_reshaped", "=", "labels_reshaped", "[", "np", ".", "asarray", "(", "valid", ")", "]", "\n", "\n", "", "", "if", "extrinsics", "is", "not", "None", ":", "\n", "      ", "points_3d", "=", "self", ".", "camera2world", "(", "extrinsics", ",", "points_3d", ")", "\n", "\n", "", "if", "labels", "is", "not", "None", ":", "\n", "      ", "points_3d_labels", "=", "np", ".", "hstack", "(", "(", "points_3d", "[", ":", ",", ":", "3", "]", ",", "labels_reshaped", ")", ")", "\n", "return", "points_3d", ",", "points_3d_labels", "\n", "", "else", ":", "\n", "      ", "return", "points_3d", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera._camera2world_transform": [[237, 241], ["numpy.dot"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_camera2world_transform", "(", "no_rgb_points_3d", ",", "R", ",", "T", ")", ":", "\n", "    ", "points_3d_world", "=", "(", "np", ".", "dot", "(", "R", ".", "T", ",", "no_rgb_points_3d", ".", "T", ")", "-", "T", ")", ".", "T", "# Nx3", "\n", "return", "points_3d_world", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera._world2camera_transform": [[242, 246], ["numpy.dot"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_world2camera_transform", "(", "no_rgb_points_3d", ",", "R", ",", "T", ")", ":", "\n", "    ", "points_3d_world", "=", "(", "np", ".", "dot", "(", "R", ",", "no_rgb_points_3d", ".", "T", "+", "T", ")", ")", ".", "T", "# Nx3", "\n", "return", "points_3d_world", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera._transform_points": [[247, 267], ["numpy.copy", "pc_utils.Camera.extrinsics2RT", "transform", "numpy.hstack", "ValueError"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.extrinsics2RT"], ["", "def", "_transform_points", "(", "self", ",", "points_3d", ",", "extrinsics", ",", "transform", ")", ":", "\n", "    ", "\"\"\"Base/wrapper method for transforming points using R and T.\n    \"\"\"", "\n", "assert", "points_3d", ".", "ndim", "==", "2", "\n", "orig_points_3d", "=", "points_3d", "\n", "points_3d", "=", "np", ".", "copy", "(", "orig_points_3d", ")", "\n", "if", "points_3d", ".", "shape", "[", "1", "]", "==", "6", ":", "# XYZRGB", "\n", "      ", "points_3d", "=", "points_3d", "[", ":", ",", ":", "3", "]", "\n", "", "elif", "points_3d", ".", "shape", "[", "1", "]", "==", "3", ":", "# XYZ", "\n", "      ", "points_3d", "=", "points_3d", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "'3D points need to be XYZ or XYZRGB.'", ")", "\n", "\n", "", "R", ",", "T", "=", "self", ".", "extrinsics2RT", "(", "extrinsics", ")", "\n", "points_3d_world", "=", "transform", "(", "points_3d", ",", "R", ",", "T", ")", "\n", "\n", "# Add color again (if appropriate)", "\n", "if", "orig_points_3d", ".", "shape", "[", "1", "]", "==", "6", ":", "# XYZRGB", "\n", "      ", "points_3d_world", "=", "np", ".", "hstack", "(", "(", "points_3d_world", ",", "orig_points_3d", "[", ":", ",", "-", "3", ":", "]", ")", ")", "\n", "", "return", "points_3d_world", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.camera2world": [[268, 275], ["pc_utils.Camera._transform_points"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera._transform_points"], ["", "def", "camera2world", "(", "self", ",", "extrinsics", ",", "points_3d", ")", ":", "\n", "    ", "\"\"\"Transform from camera coordinates (3D) to world coordinates (3D).\n\n    Args:\n      points_3d: Nx3 or Nx6 matrix of N points with XYZ or XYZRGB values.\n    \"\"\"", "\n", "return", "self", ".", "_transform_points", "(", "points_3d", ",", "extrinsics", ",", "self", ".", "_camera2world_transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.world2camera": [[276, 280], ["pc_utils.Camera._transform_points"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera._transform_points"], ["", "def", "world2camera", "(", "self", ",", "extrinsics", ",", "points_3d", ")", ":", "\n", "    ", "\"\"\"Transform from world coordinates (3D) to camera coordinates (3D).\n    \"\"\"", "\n", "return", "self", ".", "_transform_points", "(", "points_3d", ",", "extrinsics", ",", "self", ".", "_world2camera_transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.intrinsics": [[281, 284], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "intrinsics", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_intrinsics", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.camera_matrix": [[285, 288], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "camera_matrix", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_camera_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.Camera.K_inv": [[289, 292], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "K_inv", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_K_inv", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.PlyWriter.read_txt": [[305, 316], ["numpy.array().astype", "pointcloud[].astype", "pointcloud[].astype", "open", "l.split", "numpy.array"], "methods", ["None"], ["@", "classmethod", "\n", "def", "read_txt", "(", "cls", ",", "txtfile", ")", ":", "\n", "# Read txt file and parse its content.", "\n", "    ", "with", "open", "(", "txtfile", ")", "as", "f", ":", "\n", "      ", "pointcloud", "=", "[", "l", ".", "split", "(", ")", "for", "l", "in", "f", "]", "\n", "# Load point cloud to named numpy array.", "\n", "", "pointcloud", "=", "np", ".", "array", "(", "pointcloud", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "assert", "pointcloud", ".", "shape", "[", "1", "]", "==", "6", "\n", "xyz", "=", "pointcloud", "[", ":", ",", ":", "3", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "rgb", "=", "pointcloud", "[", ":", ",", "3", ":", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "return", "xyz", ",", "rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.PlyWriter.write_ply": [[317, 324], ["plyfile.PlyElement.describe", "os.path.split", "plyfile.PlyData().write", "os.makedirs", "os.path.exists", "plyfile.PlyData"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.describe", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "@", "staticmethod", "\n", "def", "write_ply", "(", "array", ",", "filepath", ")", ":", "\n", "    ", "ply_el", "=", "PlyElement", ".", "describe", "(", "array", ",", "'vertex'", ")", "\n", "target_path", ",", "_", "=", "os", ".", "path", ".", "split", "(", "filepath", ")", "\n", "if", "target_path", "!=", "''", "and", "not", "os", ".", "path", ".", "exists", "(", "target_path", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "target_path", ")", "\n", "", "PlyData", "(", "[", "ply_el", "]", ")", ".", "write", "(", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.PlyWriter.write_vertex_only_ply": [[325, 332], ["numpy.array", "cls.write_ply", "numpy.ones", "tuple", "len", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply"], ["", "@", "classmethod", "\n", "def", "write_vertex_only_ply", "(", "cls", ",", "vertices", ",", "filepath", ")", ":", "\n", "# assume that points are N x 3 np array for vertex locations", "\n", "    ", "color", "=", "255", "*", "np", ".", "ones", "(", "(", "len", "(", "vertices", ")", ",", "3", ")", ")", "\n", "pc_points", "=", "np", ".", "array", "(", "[", "tuple", "(", "p", ")", "for", "p", "in", "np", ".", "concatenate", "(", "(", "vertices", ",", "color", ")", ",", "axis", "=", "1", ")", "]", ",", "\n", "dtype", "=", "cls", ".", "POINTCLOUD_DTYPE", ")", "\n", "cls", ".", "write_ply", "(", "pc_points", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.PlyWriter.write_ply_vert_color": [[333, 339], ["numpy.array", "cls.write_ply", "tuple", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply"], ["", "@", "classmethod", "\n", "def", "write_ply_vert_color", "(", "cls", ",", "vertices", ",", "colors", ",", "filepath", ")", ":", "\n", "# assume that points are N x 3 np array for vertex locations", "\n", "    ", "pc_points", "=", "np", ".", "array", "(", "[", "tuple", "(", "p", ")", "for", "p", "in", "np", ".", "concatenate", "(", "(", "vertices", ",", "colors", ")", ",", "axis", "=", "1", ")", "]", ",", "\n", "dtype", "=", "cls", ".", "POINTCLOUD_DTYPE", ")", "\n", "cls", ".", "write_ply", "(", "pc_points", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.PlyWriter.concat_label": [[340, 345], ["numpy.concatenate", "numpy.array", "numpy.concatenate", "tuple"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "concat_label", "(", "cls", ",", "target", ",", "xyz", ",", "label", ")", ":", "\n", "    ", "subpointcloud", "=", "np", ".", "concatenate", "(", "[", "xyz", ",", "label", "]", ",", "axis", "=", "1", ")", "\n", "subpointcloud", "=", "np", ".", "array", "(", "[", "tuple", "(", "l", ")", "for", "l", "in", "subpointcloud", "]", ",", "dtype", "=", "cls", ".", "POINTCLOUD_DTYPE", ")", "\n", "return", "np", ".", "concatenate", "(", "[", "target", ",", "subpointcloud", "]", ",", "axis", "=", "0", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.read_plyfile": [[34, 40], ["open", "plyfile.PlyData.read", "pandas.DataFrame"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["def", "read_plyfile", "(", "filepath", ")", ":", "\n", "  ", "\"\"\"Read ply file and return it as numpy array. Returns None if emtpy.\"\"\"", "\n", "with", "open", "(", "filepath", ",", "'rb'", ")", "as", "f", ":", "\n", "    ", "plydata", "=", "PlyData", ".", "read", "(", "f", ")", "\n", "", "if", "plydata", ".", "elements", ":", "\n", "    ", "return", "pd", ".", "DataFrame", "(", "plydata", ".", "elements", "[", "0", "]", ".", "data", ")", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.save_point_cloud": [[42, 93], ["range", "numpy.array", "plyfile.PlyElement.describe", "plyfile.PlyData().write", "print", "numpy.tile", "numpy.hstack", "vertices.append", "open", "f.write", "range", "numpy.array", "tuple", "plyfile.PlyData", "f.write", "dtype", "zip"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.describe", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "", "def", "save_point_cloud", "(", "points_3d", ",", "filename", ",", "binary", "=", "True", ",", "with_label", "=", "False", ",", "verbose", "=", "True", ")", ":", "\n", "  ", "\"\"\"Save an RGB point cloud as a PLY file.\n\n  Args:\n    points_3d: Nx6 matrix where points_3d[:, :3] are the XYZ coordinates and points_3d[:, 4:] are\n        the RGB values. If Nx3 matrix, save all points with [128, 128, 128] (gray) color.\n  \"\"\"", "\n", "assert", "points_3d", ".", "ndim", "==", "2", "\n", "if", "with_label", ":", "\n", "    ", "assert", "points_3d", ".", "shape", "[", "1", "]", "==", "7", "\n", "python_types", "=", "(", "float", ",", "float", ",", "float", ",", "int", ",", "int", ",", "int", ",", "int", ")", "\n", "npy_types", "=", "[", "(", "'x'", ",", "'f4'", ")", ",", "(", "'y'", ",", "'f4'", ")", ",", "(", "'z'", ",", "'f4'", ")", ",", "(", "'red'", ",", "'u1'", ")", ",", "(", "'green'", ",", "'u1'", ")", ",", "\n", "(", "'blue'", ",", "'u1'", ")", ",", "(", "'label'", ",", "'u1'", ")", "]", "\n", "", "else", ":", "\n", "    ", "if", "points_3d", ".", "shape", "[", "1", "]", "==", "3", ":", "\n", "      ", "gray_concat", "=", "np", ".", "tile", "(", "np", ".", "array", "(", "[", "128", "]", ",", "dtype", "=", "np", ".", "uint8", ")", ",", "(", "points_3d", ".", "shape", "[", "0", "]", ",", "3", ")", ")", "\n", "points_3d", "=", "np", ".", "hstack", "(", "(", "points_3d", ",", "gray_concat", ")", ")", "\n", "", "assert", "points_3d", ".", "shape", "[", "1", "]", "==", "6", "\n", "python_types", "=", "(", "float", ",", "float", ",", "float", ",", "int", ",", "int", ",", "int", ")", "\n", "npy_types", "=", "[", "(", "'x'", ",", "'f4'", ")", ",", "(", "'y'", ",", "'f4'", ")", ",", "(", "'z'", ",", "'f4'", ")", ",", "(", "'red'", ",", "'u1'", ")", ",", "(", "'green'", ",", "'u1'", ")", ",", "\n", "(", "'blue'", ",", "'u1'", ")", "]", "\n", "", "if", "binary", "is", "True", ":", "\n", "# Format into NumPy structured array", "\n", "    ", "vertices", "=", "[", "]", "\n", "for", "row_idx", "in", "range", "(", "points_3d", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "cur_point", "=", "points_3d", "[", "row_idx", "]", "\n", "vertices", ".", "append", "(", "tuple", "(", "dtype", "(", "point", ")", "for", "dtype", ",", "point", "in", "zip", "(", "python_types", ",", "cur_point", ")", ")", ")", "\n", "", "vertices_array", "=", "np", ".", "array", "(", "vertices", ",", "dtype", "=", "npy_types", ")", "\n", "el", "=", "PlyElement", ".", "describe", "(", "vertices_array", ",", "'vertex'", ")", "\n", "\n", "# Write", "\n", "PlyData", "(", "[", "el", "]", ")", ".", "write", "(", "filename", ")", "\n", "", "else", ":", "\n", "# PlyData([el], text=True).write(filename)", "\n", "    ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "      ", "f", ".", "write", "(", "'ply\\n'", "\n", "'format ascii 1.0\\n'", "\n", "'element vertex %d\\n'", "\n", "'property float x\\n'", "\n", "'property float y\\n'", "\n", "'property float z\\n'", "\n", "'property uchar red\\n'", "\n", "'property uchar green\\n'", "\n", "'property uchar blue\\n'", "\n", "'property uchar alpha\\n'", "\n", "'end_header\\n'", "%", "points_3d", ".", "shape", "[", "0", "]", ")", "\n", "for", "row_idx", "in", "range", "(", "points_3d", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "X", ",", "Y", ",", "Z", ",", "R", ",", "G", ",", "B", "=", "points_3d", "[", "row_idx", "]", "\n", "f", ".", "write", "(", "'%f %f %f %d %d %d 0\\n'", "%", "(", "X", ",", "Y", ",", "Z", ",", "R", ",", "G", ",", "B", ")", ")", "\n", "", "", "", "if", "verbose", "is", "True", ":", "\n", "    ", "print", "(", "'Saved point cloud to: %s'", "%", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.colorize_pointcloud": [[294, 298], ["numpy.array", "numpy.hstack", "label[].max", "len"], "function", ["None"], ["", "", "def", "colorize_pointcloud", "(", "xyz", ",", "label", ",", "ignore_label", "=", "255", ")", ":", "\n", "  ", "assert", "label", "[", "label", "!=", "ignore_label", "]", ".", "max", "(", ")", "<", "len", "(", "COLOR_MAP_RGB", ")", ",", "'Not enough colors.'", "\n", "label_rgb", "=", "np", ".", "array", "(", "[", "COLOR_MAP_RGB", "[", "i", "]", "if", "i", "!=", "ignore_label", "else", "IGNORE_COLOR", "for", "i", "in", "label", "]", ")", "\n", "return", "np", ".", "hstack", "(", "(", "xyz", ",", "label_rgb", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.__init__": [[33, 198], ["torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "ddp_trainer.DetectionTrainer.setup_logging", "os.path.exists", "logging.info", "logging.info", "logging.info", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "logging.info", "importlib.import_module", "Detector", "torch.nn.parallel.DistributedDataParallel.to", "torch.nn.parallel.DistributedDataParallel.to", "torch.nn.parallel.DistributedDataParallel.to", "torch.Adam", "torch.Adam", "torch.Adam", "os.path.join", "os.path.isfile", "models.backbone.pointnet2.pytorch_utils.BNMomentumScheduler", "lib.distributed.is_master_proc", "logging.info", "omegaconf.OmegaConf.load", "logging.info", "omegaconf.OmegaConf.load.pretty", "SunrgbdDatasetConfig", "SunrgbdDetectionVotesDataset", "SunrgbdDetectionVotesDataset", "VoxelizationDataset", "VoxelizationDataset", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "torch.utils.data.distributed.DistributedSampler", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "ddp_trainer.DetectionTrainer.load_state_with_same_shape", "model.state_dict", "model.state_dict.update", "model.load_state_dict", "lib.distributed.get_world_size", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.nn.parallel.DistributedDataParallel.parameters", "tensorboardX.SummaryWriter", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "_model.load_state_dict", "ddp_trainer.DetectionTrainer.optimizer.load_state_dict", "logging.info", "max", "lib.distributed.get_world_size", "lib.distributed.get_world_size", "ScannetDatasetConfig", "ScannetDetectionDataset", "ScannetDetectionDataset", "logging.info", "exit", "len", "len", "lib.distributed.get_world_size", "len", "len", "int", "int", "lib.distributed.get_world_size", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "int"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.setup_logging", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.is_master_proc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.load_state_with_same_shape", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size"], ["        ", "self", ".", "is_master", "=", "is_master_proc", "(", "config", ".", "misc", ".", "num_gpus", ")", "if", "config", ".", "misc", ".", "num_gpus", ">", "1", "else", "True", "\n", "self", ".", "cur_device", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "\n", "# load the configurations", "\n", "self", ".", "setup_logging", "(", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "'config.yaml'", ")", ":", "\n", "            ", "logging", ".", "info", "(", "'===> Loading exsiting config file'", ")", "\n", "config", "=", "OmegaConf", ".", "load", "(", "'config.yaml'", ")", "\n", "logging", ".", "info", "(", "'===> Loaded exsiting config file'", ")", "\n", "", "logging", ".", "info", "(", "'===> Configurations'", ")", "\n", "logging", ".", "info", "(", "config", ".", "pretty", "(", ")", ")", "\n", "\n", "# dataloader", "\n", "DatasetClass", "=", "load_dataset", "(", "config", ".", "data", ".", "dataset", ")", "\n", "logging", ".", "info", "(", "'===> Initializing dataloader'", ")", "\n", "self", ".", "train_data_loader", "=", "initialize_data_loader", "(", "\n", "DatasetClass", ",", "config", ",", "phase", "=", "config", ".", "train", ".", "train_phase", ",", "\n", "num_workers", "=", "config", ".", "data", ".", "num_workers", ",", "augment_data", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "repeat", "=", "True", ",", "batch_size", "=", "config", ".", "data", ".", "batch_size", "//", "config", ".", "misc", ".", "num_gpus", ",", "\n", "limit_numpoints", "=", "config", ".", "data", ".", "train_limit_numpoints", ")", "\n", "\n", "self", ".", "val_data_loader", "=", "initialize_data_loader", "(", "\n", "DatasetClass", ",", "config", ",", "phase", "=", "config", ".", "train", ".", "val_phase", ",", "\n", "num_workers", "=", "1", ",", "augment_data", "=", "False", ",", "\n", "shuffle", "=", "True", ",", "repeat", "=", "False", ",", "\n", "batch_size", "=", "1", ",", "limit_numpoints", "=", "False", ")", "\n", "\n", "self", ".", "test_data_loader", "=", "initialize_data_loader", "(", "\n", "DatasetClass", ",", "config", ",", "phase", "=", "config", ".", "test", ".", "test_phase", ",", "\n", "num_workers", "=", "config", ".", "data", ".", "num_workers", ",", "augment_data", "=", "False", ",", "\n", "shuffle", "=", "False", ",", "repeat", "=", "False", ",", "\n", "batch_size", "=", "config", ".", "data", ".", "test_batch_size", ",", "limit_numpoints", "=", "False", ")", "\n", "\n", "# Model initialization", "\n", "logging", ".", "info", "(", "'===> Building model'", ")", "\n", "num_in_channel", "=", "self", ".", "train_data_loader", ".", "dataset", ".", "NUM_IN_CHANNEL", "\n", "num_labels", "=", "self", ".", "train_data_loader", ".", "dataset", ".", "NUM_LABELS", "\n", "NetClass", "=", "load_model", "(", "config", ".", "net", ".", "model", ")", "\n", "model", "=", "NetClass", "(", "num_in_channel", ",", "num_labels", ",", "config", ")", "\n", "logging", ".", "info", "(", "'===> Number of trainable parameters: {}: {}'", ".", "format", "(", "NetClass", ".", "__name__", ",", "count_parameters", "(", "model", ")", ")", ")", "\n", "logging", ".", "info", "(", "model", ")", "\n", "\n", "# Load weights if specified by the parameter.", "\n", "if", "config", ".", "net", ".", "weights", "!=", "''", ":", "\n", "            ", "logging", ".", "info", "(", "'===> Loading weights: '", "+", "config", ".", "net", ".", "weights", ")", "\n", "state", "=", "torch", ".", "load", "(", "config", ".", "net", ".", "weights", ",", "map_location", "=", "lambda", "s", ",", "l", ":", "default_restore_location", "(", "s", ",", "'cpu'", ")", ")", "\n", "matched_weights", "=", "load_state_with_same_shape", "(", "model", ",", "state", "[", "'state_dict'", "]", ")", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "model_dict", ".", "update", "(", "matched_weights", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "", "model", "=", "model", ".", "cuda", "(", ")", "\n", "if", "config", ".", "misc", ".", "num_gpus", ">", "1", ":", "\n", "            ", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "\n", "module", "=", "model", ",", "device_ids", "=", "[", "self", ".", "cur_device", "]", ",", "\n", "output_device", "=", "self", ".", "cur_device", ",", "\n", "broadcast_buffers", "=", "False", "\n", ")", "\n", "\n", "", "self", ".", "config", "=", "config", "\n", "self", ".", "model", "=", "model", "\n", "if", "self", ".", "is_master", ":", "\n", "            ", "self", ".", "writer", "=", "SummaryWriter", "(", "log_dir", "=", "'tensorboard'", ")", "\n", "", "self", ".", "optimizer", "=", "initialize_optimizer", "(", "model", ".", "parameters", "(", ")", ",", "config", ".", "optimizer", ")", "\n", "self", ".", "scheduler", "=", "initialize_scheduler", "(", "self", ".", "optimizer", ",", "config", ".", "optimizer", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "ignore_index", "=", "config", ".", "data", ".", "ignore_label", ")", "\n", "\n", "checkpoint_fn", "=", "'weights/weights.pth'", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_miou_iter", "=", "-", "1", ",", "1", "\n", "self", ".", "best_val_mAP", ",", "self", ".", "best_val_mAP_iter", "=", "-", "1", ",", "1", "\n", "self", ".", "curr_iter", ",", "self", ".", "epoch", ",", "self", ".", "is_training", "=", "1", ",", "1", ",", "True", "\n", "if", "os", ".", "path", ".", "isfile", "(", "checkpoint_fn", ")", ":", "\n", "            ", "logging", ".", "info", "(", "\"=> loading checkpoint '{}'\"", ".", "format", "(", "checkpoint_fn", ")", ")", "\n", "state", "=", "torch", ".", "load", "(", "checkpoint_fn", ",", "map_location", "=", "lambda", "s", ",", "l", ":", "default_restore_location", "(", "s", ",", "'cpu'", ")", ")", "\n", "self", ".", "load_state", "(", "state", "[", "'state_dict'", "]", ")", "\n", "\n", "self", ".", "curr_iter", "=", "state", "[", "'iteration'", "]", "+", "1", "\n", "self", ".", "epoch", "=", "state", "[", "'epoch'", "]", "\n", "self", ".", "scheduler", "=", "initialize_scheduler", "(", "self", ".", "optimizer", ",", "config", ".", "optimizer", ",", "last_step", "=", "self", ".", "curr_iter", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "state", "[", "'optimizer'", "]", ")", "\n", "\n", "if", "'best_val_miou'", "in", "state", ":", "\n", "              ", "self", ".", "best_val_miou", "=", "state", "[", "'best_val_miou'", "]", "\n", "", "if", "'best_val_mAP'", "in", "state", ":", "\n", "              ", "self", ".", "best_val_mAP", "=", "state", "[", "'best_val_mAP'", "]", "\n", "\n", "", "logging", ".", "info", "(", "\"=> loaded checkpoint '{}' (epoch {})\"", ".", "format", "(", "checkpoint_fn", ",", "state", "[", "'epoch'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "logging", ".", "info", "(", "\"=> no weights.pth\"", ")", "\n", "\n", "", "", "def", "setup_logging", "(", "self", ")", ":", "\n", "        ", "ch", "=", "logging", ".", "StreamHandler", "(", "sys", ".", "stdout", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "WARN", ")", "\n", "if", "self", ".", "is_master", ":", "\n", "            ", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "", "logging", ".", "basicConfig", "(", "\n", "format", "=", "os", ".", "uname", "(", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "' %(asctime)s %(message)s'", ",", "\n", "datefmt", "=", "'%m/%d %H:%M:%S'", ",", "\n", "handlers", "=", "[", "ch", "]", ")", "\n", "\n", "", "def", "load_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "if", "get_world_size", "(", ")", ">", "1", ":", "\n", "            ", "_model", "=", "self", ".", "model", ".", "module", "\n", "", "else", ":", "\n", "            ", "_model", "=", "self", ".", "model", "\n", "", "_model", ".", "load_state_dict", "(", "state", ")", "\n", "\n", "", "def", "set_seed", "(", "self", ")", ":", "\n", "# Set seed based on args.seed and the update number so that we get", "\n", "# reproducible results when resuming from checkpoints", "\n", "        ", "seed", "=", "self", ".", "config", ".", "misc", ".", "seed", "+", "self", ".", "curr_iter", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "\n", "", "def", "test", "(", "self", ")", ":", "\n", "        ", "return", "test_", "(", "self", ".", "model", ",", "self", ".", "test_data_loader", ",", "self", ".", "config", ")", "\n", "\n", "", "def", "validate", "(", "self", ")", ":", "\n", "        ", "val_loss", ",", "val_score", ",", "_", ",", "val_miou", ",", "val_mAP", "=", "test_", "(", "self", ".", "model", ",", "self", ".", "val_data_loader", ",", "self", ".", "config", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/miou'", ",", "val_miou", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/loss'", ",", "val_loss", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/precision_at_1'", ",", "val_score", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/mAP@0.5'", ",", "val_mAP", ",", "self", ".", "curr_iter", ")", "\n", "\n", "if", "val_miou", ">", "self", ".", "best_val_miou", ":", "\n", "            ", "self", ".", "best_val_miou", "=", "val_miou", "\n", "self", ".", "best_val_iou_iter", "=", "self", ".", "curr_iter", "\n", "checkpoint", "(", "self", ".", "model", ",", "self", ".", "optimizer", ",", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "self", ".", "config", ",", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_mAP", ",", "\"miou\"", ")", "\n", "logging", ".", "info", "(", "\"Current best mIoU: {:.3f} at iter {}\"", ".", "format", "(", "self", ".", "best_val_miou", ",", "self", ".", "best_val_miou_iter", ")", ")", "\n", "\n", "", "if", "val_mAP", ">", "self", ".", "best_val_mAP", ":", "\n", "            ", "self", ".", "best_val_mAP", "=", "val_mAP", "\n", "self", ".", "best_val_mAP_iter", "=", "self", ".", "curr_iter", "\n", "checkpoint", "(", "self", ".", "model", ",", "self", ".", "optimizer", ",", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "self", ".", "config", ",", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_mAP", ",", "\"mAP\"", ")", "\n", "logging", ".", "info", "(", "\"Current best mAP@0.5: {:.3f} at iter {}\"", ".", "format", "(", "self", ".", "best_val_mAP", ",", "self", ".", "best_val_mAP_iter", ")", ")", "\n", "\n", "", "checkpoint", "(", "self", ".", "model", ",", "self", ".", "optimizer", ",", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "self", ".", "config", ",", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_mAP", ")", "\n", "\n", "", "def", "train", "(", "self", ")", ":", "\n", "# Set up the train flag for batch normalization", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "# Configuration", "\n", "data_timer", ",", "iter_timer", "=", "Timer", "(", ")", ",", "Timer", "(", ")", "\n", "fw_timer", ",", "bw_timer", ",", "ddp_timer", "=", "Timer", "(", ")", ",", "Timer", "(", ")", ",", "Timer", "(", ")", "\n", "data_time_avg", ",", "iter_time_avg", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "fw_time_avg", ",", "bw_time_avg", ",", "ddp_time_avg", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "\n", "scores", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "{", "\n", "'semantic_loss'", ":", "AverageMeter", "(", ")", ",", "\n", "'offset_dir_loss'", ":", "AverageMeter", "(", ")", ",", "\n", "'offset_norm_loss'", ":", "AverageMeter", "(", ")", ",", "\n", "'total_loss'", ":", "AverageMeter", "(", ")", "\n", "}", "\n", "\n", "# Train the network", "\n", "logging", ".", "info", "(", "'===> Start training on {} GPUs, batch-size={}'", ".", "format", "(", "\n", "get_world_size", "(", ")", ",", "self", ".", "config", ".", "data", ".", "batch_size", ")", ")", "\n", "\n", "data_iter", "=", "self", ".", "train_data_loader", ".", "__iter__", "(", ")", "# (distributed) infinite sampler", "\n", "while", "self", ".", "is_training", ":", "\n", "            ", "for", "_", "in", "range", "(", "len", "(", "self", ".", "train_data_loader", ")", "//", "self", ".", "config", ".", "optimizer", ".", "iter_size", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.setup_logging": [[199, 208], ["logging.StreamHandler", "logging.getLogger().setLevel", "logging.basicConfig", "logging.getLogger().setLevel", "logging.getLogger", "logging.getLogger", "[].split", "os.uname"], "methods", ["None"], ["                ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "data_time", ",", "batch_score", "=", "0", ",", "0", "\n", "batch_losses", "=", "{", "\n", "'semantic_loss'", ":", "0.0", ",", "\n", "'offset_dir_loss'", ":", "0.0", ",", "\n", "'offset_norm_loss'", ":", "0.0", ",", "\n", "'total_loss'", ":", "0.0", "}", "\n", "iter_timer", ".", "tic", "(", ")", "\n", "\n", "# set random seed for every iteration for trackability", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.load_state_with_same_shape": [[209, 226], ["model.state_dict", "[].startswith", "[].startswith", "print", "print", "logging.info", "weights.items", "list", "k.partition", "weights.keys", "list", "k.partition", "weights.keys", "filtered_weights.keys", "weights.keys", "weights.keys", "v.size", "model_state[].size"], "methods", ["None"], ["self", ".", "set_seed", "(", ")", "\n", "\n", "for", "sub_iter", "in", "range", "(", "self", ".", "config", ".", "optimizer", ".", "iter_size", ")", ":", "\n", "# Get training data", "\n", "                    ", "data_timer", ".", "tic", "(", ")", "\n", "if", "self", ".", "config", ".", "data", ".", "return_transformation", ":", "\n", "                        ", "coords", ",", "input", ",", "target", ",", "instances", ",", "_", "=", "data_iter", ".", "next", "(", ")", "\n", "", "else", ":", "\n", "                        ", "coords", ",", "input", ",", "target", ",", "instances", "=", "data_iter", ".", "next", "(", ")", "\n", "\n", "# Preprocess input", "\n", "", "color", "=", "input", "[", ":", ",", ":", "3", "]", ".", "int", "(", ")", "\n", "if", "self", ".", "config", ".", "augmentation", ".", "normalize_color", ":", "\n", "                      ", "input", "[", ":", ",", ":", "3", "]", "=", "input", "[", ":", ",", ":", "3", "]", "/", "255.", "-", "0.5", "\n", "", "sinput", "=", "SparseTensor", "(", "input", ",", "coords", ")", ".", "to", "(", "self", ".", "cur_device", ")", "\n", "\n", "data_time", "+=", "data_timer", ".", "toc", "(", "False", ")", "\n", "# Feed forward", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.get_current_lr": [[227, 234], ["enumerate"], "methods", ["None"], ["fw_timer", ".", "tic", "(", ")", "\n", "\n", "inputs", "=", "(", "sinput", ",", ")", "\n", "pt_offsets", ",", "soutput", ",", "_", "=", "self", ".", "model", "(", "*", "inputs", ")", "\n", "# The output of the network is not sorted", "\n", "target", "=", "target", ".", "long", "(", ")", ".", "to", "(", "self", ".", "cur_device", ")", "\n", "semantic_loss", "=", "self", ".", "criterion", "(", "soutput", ".", "F", ",", "target", ".", "long", "(", ")", ")", "\n", "total_loss", "=", "semantic_loss", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.adjust_learning_rate": [[235, 240], ["ddp_trainer.DetectionTrainer.get_current_lr"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.get_current_lr"], ["\n", "#-----------------offset loss----------------------", "\n", "## pt_offsets: (N, 3), float, cuda", "\n", "## coords: (N, 3), float32", "\n", "## centers: (N, 3), float32 tensor ", "\n", "## instance_ids: (N), long", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.train_one_epoch": [[241, 286], ["ddp_trainer.DetectionTrainer.adjust_learning_rate", "ddp_trainer.DetectionTrainer.bnm_scheduler.step", "ddp_trainer.DetectionTrainer.net.train", "enumerate", "ddp_trainer.DetectionTrainer.optimizer.zero_grad", "ddp_trainer.DetectionTrainer.net", "models.loss_helper.get_loss", "loss.backward", "ddp_trainer.DetectionTrainer.optimizer.step", "batch_data_label[].cuda", "inputs.update", "logging.info", "sorted", "end_points[].item", "ddp_trainer.DetectionTrainer.writer.add_scalar", "stat_dict.keys", "logging.info", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.adjust_learning_rate", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.train", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper_boxnet.get_loss", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update"], ["centers", "=", "np", ".", "concatenate", "(", "[", "instance", "[", "'center'", "]", "for", "instance", "in", "instances", "]", ")", "\n", "instance_ids", "=", "np", ".", "concatenate", "(", "[", "instance", "[", "'ids'", "]", "for", "instance", "in", "instances", "]", ")", "\n", "\n", "centers", "=", "torch", ".", "from_numpy", "(", "centers", ")", ".", "cuda", "(", ")", "\n", "instance_ids", "=", "torch", ".", "from_numpy", "(", "instance_ids", ")", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "\n", "gt_offsets", "=", "centers", "-", "coords", "[", ":", ",", "1", ":", "]", ".", "cuda", "(", ")", "# (N, 3)", "\n", "gt_offsets", "*=", "self", ".", "train_data_loader", ".", "dataset", ".", "VOXEL_SIZE", "\n", "pt_diff", "=", "pt_offsets", ".", "F", "-", "gt_offsets", "# (N, 3)", "\n", "pt_dist", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "pt_diff", ")", ",", "dim", "=", "-", "1", ")", "# (N)", "\n", "valid", "=", "(", "instance_ids", "!=", "-", "1", ")", ".", "float", "(", ")", "\n", "offset_norm_loss", "=", "torch", ".", "sum", "(", "pt_dist", "*", "valid", ")", "/", "(", "torch", ".", "sum", "(", "valid", ")", "+", "1e-6", ")", "\n", "\n", "gt_offsets_norm", "=", "torch", ".", "norm", "(", "gt_offsets", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "# (N), float", "\n", "gt_offsets_", "=", "gt_offsets", "/", "(", "gt_offsets_norm", ".", "unsqueeze", "(", "-", "1", ")", "+", "1e-8", ")", "\n", "pt_offsets_norm", "=", "torch", ".", "norm", "(", "pt_offsets", ".", "F", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "pt_offsets_", "=", "pt_offsets", ".", "F", "/", "(", "pt_offsets_norm", ".", "unsqueeze", "(", "-", "1", ")", "+", "1e-8", ")", "\n", "direction_diff", "=", "-", "(", "gt_offsets_", "*", "pt_offsets_", ")", ".", "sum", "(", "-", "1", ")", "# (N)", "\n", "offset_dir_loss", "=", "torch", ".", "sum", "(", "direction_diff", "*", "valid", ")", "/", "(", "torch", ".", "sum", "(", "valid", ")", "+", "1e-6", ")", "\n", "total_loss", "+=", "offset_norm_loss", "+", "offset_dir_loss", "\n", "\n", "# Compute and accumulate gradient", "\n", "total_loss", "/=", "self", ".", "config", ".", "optimizer", ".", "iter_size", "\n", "\n", "pred", "=", "get_prediction", "(", "self", ".", "train_data_loader", ".", "dataset", ",", "soutput", ".", "F", ",", "target", ")", "\n", "score", "=", "precision_at_one", "(", "pred", ",", "target", ")", "\n", "\n", "# bp the loss", "\n", "fw_timer", ".", "toc", "(", "False", ")", "\n", "bw_timer", ".", "tic", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "bw_timer", ".", "toc", "(", "False", ")", "\n", "\n", "# gather information", "\n", "logging_output", "=", "{", "'total_loss'", ":", "total_loss", ".", "item", "(", ")", ",", "'semantic_loss'", ":", "semantic_loss", ".", "item", "(", ")", ",", "'score'", ":", "score", "/", "self", ".", "config", ".", "optimizer", ".", "iter_size", "}", "\n", "logging_output", "[", "'offset_dir_loss'", "]", "=", "offset_dir_loss", ".", "item", "(", ")", "\n", "logging_output", "[", "'offset_norm_loss'", "]", "=", "offset_norm_loss", ".", "item", "(", ")", "\n", "\n", "ddp_timer", ".", "tic", "(", ")", "\n", "if", "self", ".", "config", ".", "misc", ".", "num_gpus", ">", "1", ":", "\n", "                      ", "logging_output", "=", "all_gather", "(", "logging_output", ")", "\n", "logging_output", "=", "{", "w", ":", "np", ".", "mean", "(", "[", "\n", "a", "[", "w", "]", "for", "a", "in", "logging_output", "]", "\n", ")", "for", "w", "in", "logging_output", "[", "0", "]", "}", "\n", "\n", "", "batch_losses", "[", "'total_loss'", "]", "+=", "logging_output", "[", "'total_loss'", "]", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.evaluate_one_epoch": [[287, 348], ["numpy.random.seed", "models.ap_helper.APCalculator", "ddp_trainer.DetectionTrainer.net.eval", "enumerate", "logging.info", "models.ap_helper.APCalculator.compute_metrics", "models.loss_helper.get_loss", "models.ap_helper.parse_predictions", "models.ap_helper.parse_groundtruths", "models.ap_helper.APCalculator.step", "sorted", "logging.info", "ddp_trainer.DetectionTrainer.writer.add_scalar", "logging.info", "batch_data_label[].cuda", "inputs.update", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ddp_trainer.DetectionTrainer.net", "models.dump_helper.dump_results", "stat_dict.keys", "ddp_trainer.DetectionTrainer.writer.add_scalar", "end_points[].item", "float", "float", "len", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.compute_metrics", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper_boxnet.get_loss", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.parse_predictions", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.parse_groundtruths", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.dump_results"], ["batch_losses", "[", "'semantic_loss'", "]", "+=", "logging_output", "[", "'semantic_loss'", "]", "\n", "batch_losses", "[", "'offset_dir_loss'", "]", "+=", "logging_output", "[", "'offset_dir_loss'", "]", "\n", "batch_losses", "[", "'offset_norm_loss'", "]", "+=", "logging_output", "[", "'offset_norm_loss'", "]", "\n", "batch_score", "+=", "logging_output", "[", "'score'", "]", "\n", "\n", "ddp_timer", ".", "toc", "(", "False", ")", "\n", "\n", "# Update number of steps", "\n", "", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "data_time_avg", ".", "update", "(", "data_time", ")", "\n", "iter_time_avg", ".", "update", "(", "iter_timer", ".", "toc", "(", "False", ")", ")", "\n", "fw_time_avg", ".", "update", "(", "fw_timer", ".", "diff", ")", "\n", "bw_time_avg", ".", "update", "(", "bw_timer", ".", "diff", ")", "\n", "ddp_time_avg", ".", "update", "(", "ddp_timer", ".", "diff", ")", "\n", "\n", "losses", "[", "'total_loss'", "]", ".", "update", "(", "batch_losses", "[", "'total_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "losses", "[", "'semantic_loss'", "]", ".", "update", "(", "batch_losses", "[", "'semantic_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "losses", "[", "'offset_dir_loss'", "]", ".", "update", "(", "batch_losses", "[", "'offset_dir_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "losses", "[", "'offset_norm_loss'", "]", ".", "update", "(", "batch_losses", "[", "'offset_norm_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "scores", ".", "update", "(", "batch_score", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "self", ".", "curr_iter", ">=", "self", ".", "config", ".", "optimizer", ".", "max_iter", ":", "\n", "                  ", "self", ".", "is_training", "=", "False", "\n", "break", "\n", "\n", "", "if", "self", ".", "curr_iter", "%", "self", ".", "config", ".", "train", ".", "stat_freq", "==", "0", "or", "self", ".", "curr_iter", "==", "1", ":", "\n", "                    ", "lrs", "=", "', '", ".", "join", "(", "[", "'{:.3e}'", ".", "format", "(", "x", ")", "for", "x", "in", "self", ".", "scheduler", ".", "get_last_lr", "(", ")", "]", ")", "\n", "debug_str", "=", "\"===> Epoch[{}]({}/{}): Loss {:.4f}, Sem {:.4f}, dir {:.4f}, norm {:.4f}\\tLR: {}\\t\"", ".", "format", "(", "\n", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "len", "(", "self", ".", "train_data_loader", ")", "//", "self", ".", "config", ".", "optimizer", ".", "iter_size", ",", "\n", "losses", "[", "'total_loss'", "]", ".", "avg", ",", "losses", "[", "'semantic_loss'", "]", ".", "avg", ",", "\n", "losses", "[", "'offset_dir_loss'", "]", ".", "avg", ",", "losses", "[", "'offset_norm_loss'", "]", ".", "avg", ",", "lrs", ")", "\n", "debug_str", "+=", "\"Score {:.3f}\\tData time: {:.4f}, Forward time: {:.4f}, Backward time: {:.4f}, DDP time: {:.4f}, Total iter time: {:.4f}\"", ".", "format", "(", "\n", "scores", ".", "avg", ",", "data_time_avg", ".", "avg", ",", "fw_time_avg", ".", "avg", ",", "bw_time_avg", ".", "avg", ",", "ddp_time_avg", ".", "avg", ",", "iter_time_avg", ".", "avg", ")", "\n", "logging", ".", "info", "(", "debug_str", ")", "\n", "# Reset timers", "\n", "data_time_avg", ".", "reset", "(", ")", "\n", "iter_time_avg", ".", "reset", "(", ")", "\n", "\n", "# Write logs", "\n", "if", "self", ".", "is_master", ":", "\n", "                      ", "self", ".", "writer", ".", "add_scalar", "(", "'train/loss'", ",", "losses", "[", "'total_loss'", "]", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/semantic_loss'", ",", "losses", "[", "'semantic_loss'", "]", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/offset_dir_loss'", ",", "losses", "[", "'offset_dir_loss'", "]", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/offset_norm_loss'", ",", "losses", "[", "'offset_norm_loss'", "]", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/precision_at_1'", ",", "scores", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/learning_rate'", ",", "self", ".", "scheduler", ".", "get_last_lr", "(", ")", "[", "0", "]", ",", "self", ".", "curr_iter", ")", "\n", "\n", "# clear loss", "\n", "", "losses", "[", "'total_loss'", "]", ".", "reset", "(", ")", "\n", "losses", "[", "'semantic_loss'", "]", ".", "reset", "(", ")", "\n", "losses", "[", "'offset_dir_loss'", "]", ".", "reset", "(", ")", "\n", "losses", "[", "'offset_norm_loss'", "]", ".", "reset", "(", ")", "\n", "scores", ".", "reset", "(", ")", "\n", "\n", "# Validation", "\n", "", "if", "self", ".", "curr_iter", "%", "self", ".", "config", ".", "train", ".", "val_freq", "==", "0", "and", "self", ".", "is_master", ":", "\n", "                    ", "self", ".", "validate", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "", "if", "self", ".", "curr_iter", "%", "self", ".", "config", ".", "train", ".", "empty_cache_freq", "==", "0", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.train": [[349, 379], ["range", "logging.info", "logging.info", "logging.info", "logging.info", "numpy.random.seed", "ddp_trainer.DetectionTrainer.train_one_epoch", "str", "lib.distributed.get_world_size", "ddp_trainer.DetectionTrainer.sampler.set_epoch", "ddp_trainer.DetectionTrainer.evaluate_one_epoch", "ddp_trainer.DetectionTrainer.get_current_lr", "ddp_trainer.DetectionTrainer.bnm_scheduler.lmbd", "datetime.datetime.datetime.now", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "omegaconf.OmegaConf.save", "ddp_trainer.DetectionTrainer.optimizer.state_dict", "lib.distributed.get_world_size", "ddp_trainer.DetectionTrainer.net.module.state_dict", "ddp_trainer.DetectionTrainer.net.state_dict"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.train_one_epoch", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.evaluate_one_epoch", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.get_current_lr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size"], ["# Clear cache", "\n", "                  ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "# End of iteration", "\n", "", "self", ".", "curr_iter", "+=", "1", "\n", "\n", "", "self", ".", "epoch", "+=", "1", "\n", "\n", "# Explicit memory cleanup", "\n", "", "if", "hasattr", "(", "data_iter", ",", "'cleanup'", ")", ":", "\n", "            ", "data_iter", ".", "cleanup", "(", ")", "\n", "\n", "# Save the final model", "\n", "", "if", "self", ".", "is_master", ":", "\n", "            ", "self", ".", "validate", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.write_to_benchmark": [[381, 402], ["numpy.array", "os.makedirs", "len", "range", "numpy.savetxt", "flip_axis_back_camera", "numpy.min", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.max", "write_list.append", "os.path.join", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.flip_axis_back_camera"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.DetectionTrainer.test": [[404, 473], ["logging.info", "numpy.random.seed", "ddp_trainer.DetectionTrainer.net.eval", "enumerate", "sorted", "str", "models.ap_helper.APCalculator", "models.loss_helper.get_loss", "models.ap_helper.parse_predictions", "models.ap_helper.parse_groundtruths", "stat_dict.keys", "logging.info", "enumerate", "float", "datetime.datetime.datetime.now", "print", "batch_data_label[].cuda", "inputs.update", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "ddp_trainer.DetectionTrainer.net", "ap_calculator.step", "ddp_trainer.DetectionTrainer.write_to_benchmark", "models.dump_helper.dump_results_", "logging.info", "ap_calculator.compute_metrics", "end_points[].item", "logging.info", "float"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper_boxnet.get_loss", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.parse_predictions", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.parse_groundtruths", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.write_to_benchmark", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.dump_results_", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.compute_metrics"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.sampling_points.parse_args": [[17, 26], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"parse input arguments\"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'data_efficient3d'", ")", "\n", "parser", ".", "add_argument", "(", "'--point_data'", ",", "type", "=", "str", ",", "default", "=", "'/checkpoint/jihou/data/scannet/pointcloud/'", ")", "\n", "parser", ".", "add_argument", "(", "'--feat_data'", ",", "type", "=", "str", ",", "default", "=", "'/checkpoint/jihou/checkpoint/scannet/pretrain/partition8_4096_60k/1/outputs/feat'", ")", "\n", "parser", ".", "add_argument", "(", "'--num_points'", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "'--num_iters'", ",", "type", "=", "int", ",", "default", "=", "50", ")", "\n", "parser", ".", "add_argument", "(", "'--output'", ",", "type", "=", "str", ",", "default", "=", "'./output'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.sampling_points.kmeans": [[28, 60], ["time.time", "pointcloud[].clone", "pykeops.torch.LazyTensor", "range", "time.time", "distance_matrix.argmin().long().view", "pointcloud[].clone.clone", "pykeops.torch.LazyTensor", "distance_matrix.argmin().long().view", "torch.bincount().float", "range", "print", "print", "distance_matrix.argmin().long", "distance_matrix.argmin().long", "torch.bincount", "torch.bincount", "distance_matrix.argmin", "distance_matrix.argmin"], "function", ["None"], ["", "def", "kmeans", "(", "pointcloud", ",", "k", "=", "10", ",", "iterations", "=", "10", ",", "verbose", "=", "True", ")", ":", "\n", "    ", "n", ",", "dim", "=", "pointcloud", ".", "shape", "# Number of samples, dimension of the ambient space", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "clusters", "=", "pointcloud", "[", ":", "k", ",", ":", "]", ".", "clone", "(", ")", "# Simplistic random initialization", "\n", "pointcloud_cuda", "=", "LazyTensor", "(", "pointcloud", "[", ":", ",", "None", ",", ":", "]", ")", "# (Npoints, 1, D)", "\n", "\n", "# K-means loop:", "\n", "for", "_", "in", "range", "(", "iterations", ")", ":", "\n", "        ", "clusters_previous", "=", "clusters", ".", "clone", "(", ")", "\n", "clusters_gpu", "=", "LazyTensor", "(", "clusters", "[", "None", ",", ":", ",", ":", "]", ")", "# (1, Nclusters, D)", "\n", "distance_matrix", "=", "(", "(", "pointcloud_cuda", "-", "clusters_gpu", ")", "**", "2", ")", ".", "sum", "(", "-", "1", ")", "# (Npoints, Nclusters) symbolic matrix of squared distances", "\n", "cloest_clusters", "=", "distance_matrix", ".", "argmin", "(", "dim", "=", "1", ")", ".", "long", "(", ")", ".", "view", "(", "-", "1", ")", "# Points -> Nearest cluster", "\n", "\n", "# #points for each cluster", "\n", "clusters_count", "=", "torch", ".", "bincount", "(", "cloest_clusters", ",", "minlength", "=", "k", ")", ".", "float", "(", ")", "# Class weights", "\n", "for", "d", "in", "range", "(", "dim", ")", ":", "# Compute the cluster centroids with torch.bincount:", "\n", "            ", "clusters", "[", ":", ",", "d", "]", "=", "torch", ".", "bincount", "(", "cloest_clusters", ",", "weights", "=", "pointcloud", "[", ":", ",", "d", "]", ",", "minlength", "=", "k", ")", "/", "clusters_count", "\n", "\n", "# for clusters that have no points assigned", "\n", "", "mask", "=", "clusters_count", "==", "0", "\n", "clusters", "[", "mask", "]", "=", "clusters_previous", "[", "mask", "]", "\n", "\n", "", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "\"K-means example with {:,} points in dimension {:,}, K = {:,}:\"", ".", "format", "(", "n", ",", "dim", ",", "k", ")", ")", "\n", "print", "(", "'Timing for {} iterations: {:.5f}s = {} x {:.5f}s\\n'", ".", "format", "(", "\n", "iterations", ",", "end", "-", "start", ",", "iterations", ",", "(", "end", "-", "start", ")", "/", "iterations", ")", ")", "\n", "\n", "# nearest neighbouring search for each cluster", "\n", "", "cloest_points_to_centers", "=", "distance_matrix", ".", "argmin", "(", "dim", "=", "0", ")", ".", "long", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "return", "cloest_points_to_centers", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.sampling_points.kmeans_sampling": [[61, 85], ["glob.glob", "enumerate", "os.path.join", "print", "torch.load", "pointcloud[].astype", "pointcloud[].astype", "torch.from_numpy().cuda().float.append", "torch.from_numpy().cuda().float.append", "torch.load", "torch.from_numpy().cuda().float.append", "torch.from_numpy().cuda().float", "kmeans().cpu().numpy", "os.path.basename().split", "os.path.join", "len", "torch.from_numpy().cuda", "kmeans().cpu", "os.path.basename", "torch.from_numpy", "sampling_points.kmeans", "numpy.concatenate"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.sampling_points.kmeans"], ["", "def", "kmeans_sampling", "(", "args", ")", ":", "\n", "    ", "pointcloud_names", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "args", ".", "raw_data", ",", "\"*.pth\"", ")", ")", "\n", "\n", "sampled_inds", "=", "{", "}", "\n", "for", "idx", ",", "pointcloud_name", "in", "enumerate", "(", "pointcloud_names", ")", ":", "\n", "        ", "print", "(", "'{}/{}: {}'", ".", "format", "(", "idx", ",", "len", "(", "pointcloud_names", ")", ",", "pointcloud_name", ")", ")", "\n", "pointcloud", "=", "torch", ".", "load", "(", "pointcloud_name", ")", "\n", "scene_name", "=", "os", ".", "path", ".", "basename", "(", "pointcloud_name", ")", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "\n", "coords", "=", "pointcloud", "[", "0", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "colors", "=", "pointcloud", "[", "1", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n", "candidates", "=", "[", "]", "\n", "candidates", ".", "append", "(", "coords", ")", "\n", "candidates", ".", "append", "(", "colors", ")", "\n", "feats", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "args", ".", "feat_data", ",", "scene_name", ")", ")", "\n", "candidates", ".", "append", "(", "feats", ")", "\n", "candidates", "=", "torch", ".", "from_numpy", "(", "np", ".", "concatenate", "(", "candidates", ",", "1", ")", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", "\n", "\n", "K", "=", "args", ".", "num_points", "\n", "sampled_inds_per_scene", "=", "kmeans", "(", "candidates", ",", "K", ",", "args", ".", "num_iters", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "sampled_inds", "[", "scene_name", "]", "=", "sampled_inds_per_scene", "\n", "\n", "", "return", "sampled_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.transforms.Compose.__init__": [[13, 15], ["None"], "methods", ["None"], ["import", "scipy", ".", "interpolate", "\n", "import", "torch", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.transforms.Compose.__call__": [[16, 20], ["transform"], "methods", ["None"], ["\n", "# A sparse tensor consists of coordinates and associated features.", "\n", "# You must apply augmentation to both.", "\n", "# In 2D, flip, shear, scale, and rotation of images are coordinate transformation", "\n", "# color jitter, hue, etc., are feature transformations", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.transforms.Jitter.__init__": [[24, 27], ["None"], "methods", ["None"], ["class", "ChromaticTranslation", "(", "object", ")", ":", "\n", "  ", "\"\"\"Add random color to the image, input must be an array in [0,255] or a PIL image\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "trans_range_ratio", "=", "1e-1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.transforms.Jitter.__call__": [[28, 32], ["random.random", "numpy.random.normal"], "methods", ["None"], ["    ", "\"\"\"\n    trans_range_ratio: ratio of translation i.e. 255 * 2 * ratio * rand(-0.5, 0.5)\n    \"\"\"", "\n", "self", ".", "trans_range_ratio", "=", "trans_range_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.AllGatherWithGradient.__init__": [[326, 329], ["torch.autograd.Function.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.AllGatherWithGradient.forward": [[330, 333], ["distributed.all_gather_batch"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather_batch"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.AllGatherWithGradient.backward": [[334, 344], ["grad_output.size", "distributed.get_rank", "distributed.scaled_all_reduce"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.scaled_all_reduce"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.AllGatherVariableSizeWithGradient.__init__": [[350, 353], ["torch.autograd.Function.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.AllGatherVariableSizeWithGradient.forward": [[355, 365], ["distributed.all_gather_differentiable", "distributed.all_gather_obj", "distributed.get_rank", "torch.barrier", "torch.barrier", "torch.barrier", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "input.size", "sum", "range", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather_differentiable", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather_obj", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.AllGatherVariableSizeWithGradient.backward": [[366, 372], ["distributed.get_rank", "distributed.scaled_all_reduce"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.scaled_all_reduce"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.is_main_process": [[38, 40], ["distributed.get_rank"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank"], ["# Shared error queue", "\n", "        ", "self", ".", "error_queue", "=", "error_queue", "\n", "# Children processes sharing the error queue", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed._get_global_gloo_group": [[160, 170], ["functools.lru_cache", "torch.get_backend", "torch.new_group"], "function", ["None"], ["np_list", "=", "[", "torch", ".", "LongTensor", "(", "[", "0", "]", ")", ".", "to", "(", "\"cuda\"", ")", "for", "_", "in", "range", "(", "world_size", ")", "]", "\n", "dist", ".", "all_gather", "(", "np_list", ",", "local_np", ")", "\n", "np_list", "=", "[", "int", "(", "np", ".", "item", "(", ")", ")", "for", "np", "in", "np_list", "]", "\n", "max_np", "=", "max", "(", "np_list", ")", "\n", "\n", "tensor_list", "=", "[", "]", "\n", "for", "_", "in", "np_list", ":", "\n", "        ", "tensor_list", ".", "append", "(", "torch", ".", "FloatTensor", "(", "size", "=", "(", "max_np", ",", "f_dim", ")", ")", ".", "to", "(", "\"cuda\"", ")", ")", "\n", "", "if", "local_np", "!=", "max_np", ":", "\n", "        ", "padding", "=", "torch", ".", "zeros", "(", "size", "=", "(", "max_np", "-", "local_np", ",", "f_dim", ")", ")", ".", "to", "(", "\"cuda\"", ")", ".", "float", "(", ")", "\n", "tensor", "=", "torch", ".", "cat", "(", "(", "tensor", ",", "padding", ")", ",", "dim", "=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed._serialize_to_tensor": [[172, 188], ["torch.get_backend", "torch.device", "torch.device", "torch.device", "pickle.dumps", "torch.ByteStorage.from_buffer", "torch.ByteStorage.from_buffer", "torch.ByteStorage.from_buffer", "torch.ByteTensor().to", "torch.ByteTensor().to", "torch.ByteTensor().to", "len", "logging.getLogger", "logging.getLogger.warning", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "distributed.get_rank", "len"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank"], ["\n", "", "dist", ".", "all_gather", "(", "tensor_list", ",", "tensor", ")", "\n", "\n", "data_list", "=", "[", "]", "\n", "for", "gather_np", ",", "gather_tensor", "in", "zip", "(", "np_list", ",", "tensor_list", ")", ":", "\n", "        ", "gather_tensor", "=", "gather_tensor", "[", ":", "gather_np", "]", "\n", "assert", "gather_tensor", ".", "size", "(", ")", "==", "(", "gather_np", ",", "f_dim", ")", "\n", "data_list", ".", "append", "(", "gather_tensor", ")", "\n", "", "return", "data_list", "\n", "\n", "\n", "", "def", "all_gather", "(", "data", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed._pad_to_largest_tensor": [[190, 215], ["torch.get_world_size", "torch.tensor", "torch.tensor", "torch.tensor", "torch.all_gather", "max", "torch.zeros", "torch.zeros", "torch.zeros", "int", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat.numel", "range", "size.item"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather"], ["\n", "world_size", "=", "get_world_size", "(", ")", "\n", "if", "world_size", "==", "1", ":", "\n", "        ", "return", "[", "data", "]", "\n", "\n", "# serialized to a Tensor", "\n", "", "buffer", "=", "pickle", ".", "dumps", "(", "data", ")", "\n", "storage", "=", "torch", ".", "ByteStorage", ".", "from_buffer", "(", "buffer", ")", "\n", "tensor", "=", "torch", ".", "ByteTensor", "(", "storage", ")", ".", "to", "(", "\"cuda\"", ")", "\n", "\n", "# obtain Tensor size of each rank", "\n", "local_size", "=", "torch", ".", "LongTensor", "(", "[", "tensor", ".", "numel", "(", ")", "]", ")", ".", "to", "(", "\"cuda\"", ")", "\n", "size_list", "=", "[", "torch", ".", "LongTensor", "(", "[", "0", "]", ")", ".", "to", "(", "\"cuda\"", ")", "for", "_", "in", "range", "(", "world_size", ")", "]", "\n", "dist", ".", "all_gather", "(", "size_list", ",", "local_size", ")", "\n", "size_list", "=", "[", "int", "(", "size", ".", "item", "(", ")", ")", "for", "size", "in", "size_list", "]", "\n", "max_size", "=", "max", "(", "size_list", ")", "\n", "\n", "# receiving Tensor from all ranks", "\n", "# we pad the tensor because torch all_gather does not support", "\n", "# gathering tensors of different shapes", "\n", "tensor_list", "=", "[", "]", "\n", "for", "_", "in", "size_list", ":", "\n", "        ", "tensor_list", ".", "append", "(", "torch", ".", "ByteTensor", "(", "size", "=", "(", "max_size", ",", ")", ")", ".", "to", "(", "\"cuda\"", ")", ")", "\n", "", "if", "local_size", "!=", "max_size", ":", "\n", "        ", "padding", "=", "torch", ".", "ByteTensor", "(", "size", "=", "(", "max_size", "-", "local_size", ",", ")", ")", ".", "to", "(", "\"cuda\"", ")", "\n", "tensor", "=", "torch", ".", "cat", "(", "(", "tensor", ",", "padding", ")", ",", "dim", "=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather_obj": [[216, 250], ["distributed._serialize_to_tensor", "distributed._pad_to_largest_tensor", "max", "torch.all_gather", "zip", "distributed.get_world_size", "distributed._get_global_gloo_group", "torch.get_world_size", "torch.empty", "torch.empty", "torch.empty", "data_list.append", "_serialize_to_tensor.cpu().numpy().tobytes", "pickle.loads", "_serialize_to_tensor.cpu().numpy", "_serialize_to_tensor.cpu"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed._serialize_to_tensor", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed._pad_to_largest_tensor", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed._get_global_gloo_group", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size"], ["", "dist", ".", "all_gather", "(", "tensor_list", ",", "tensor", ")", "\n", "\n", "data_list", "=", "[", "]", "\n", "for", "size", ",", "tensor", "in", "zip", "(", "size_list", ",", "tensor_list", ")", ":", "\n", "        ", "buffer", "=", "tensor", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tobytes", "(", ")", "[", ":", "size", "]", "\n", "data_list", ".", "append", "(", "pickle", ".", "loads", "(", "buffer", ")", ")", "\n", "\n", "", "return", "data_list", "\n", "\n", "\n", "", "def", "init_process_group", "(", "proc_rank", ",", "world_size", ")", ":", "\n", "    ", "\"\"\"Initializes the default process group.\"\"\"", "\n", "# Set the GPU to use", "\n", "torch", ".", "cuda", ".", "set_device", "(", "proc_rank", ")", "\n", "# Initialize the process group", "\n", "torch", ".", "distributed", ".", "init_process_group", "(", "\n", "backend", "=", "\"nccl\"", ",", "\n", "init_method", "=", "\"tcp://{}:{}\"", ".", "format", "(", "\"localhost\"", ",", "\"10001\"", ")", ",", "\n", "world_size", "=", "world_size", ",", "\n", "rank", "=", "proc_rank", "\n", ")", "\n", "\n", "", "def", "destroy_process_group", "(", ")", ":", "\n", "    ", "\"\"\"Destroys the default process group.\"\"\"", "\n", "torch", ".", "distributed", ".", "destroy_process_group", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.scaled_all_reduce_dict_obj": [[251, 260], ["distributed.all_gather_obj", "res_dict_list[].keys", "len", "sum"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather_obj"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.scaled_all_reduce_dict": [[261, 272], ["torch.distributed.all_reduce", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "reductions.append", "torch.distributed.all_reduce.wait", "res_dict[].clone().mul_", "res_dict[].clone"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.scaled_all_reduce": [[273, 293], ["torch.distributed.all_reduce", "torch.distributed.all_reduce", "torch.distributed.all_reduce", "reductions.append", "torch.distributed.all_reduce.wait", "tensor.mul_"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather_batch": [[294, 322], ["torch.get_world_size", "torch.distributed.all_gather", "torch.distributed.all_gather", "torch.distributed.all_gather", "tensor_list.append", "output_tensor.append", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.cat", "torch.cat", "torch.cat", "range"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.all_gather"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.PairDataset.__init__": [[165, 202], ["numpy.random.RandomState", "logging.info", "os.path.join", "ddp_data_loaders.PairDataset.reset_seed", "open", "f.readlines", "x.strip().split", "ddp_data_loaders.PairDataset.files.append", "x.strip", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.PairDataset.reset_seed"], ["def", "__init__", "(", "self", ",", "\n", "phase", ",", "\n", "transform", "=", "None", ",", "\n", "random_scale", "=", "False", ",", "\n", "manual_seed", "=", "False", ",", "\n", "config", "=", "None", ")", ":", "\n", "    ", "self", ".", "phase", "=", "phase", "\n", "self", ".", "files", "=", "[", "]", "\n", "self", ".", "data_objects", "=", "[", "]", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "voxel_size", "=", "config", ".", "data", ".", "voxel_size", "\n", "self", ".", "matching_search_voxel_size", "=", "config", ".", "data", ".", "voxel_size", "*", "config", ".", "trainer", ".", "positive_pair_search_voxel_size_multiplier", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "random_scale", "=", "random_scale", "\n", "self", ".", "min_scale", "=", "0.8", "\n", "self", ".", "max_scale", "=", "1.2", "\n", "self", ".", "randg", "=", "np", ".", "random", ".", "RandomState", "(", ")", "\n", "\n", "if", "manual_seed", ":", "\n", "      ", "self", ".", "reset_seed", "(", ")", "\n", "\n", "", "self", ".", "root", "=", "'/'", "\n", "if", "phase", "==", "\"train\"", ":", "\n", "      ", "self", ".", "root_filelist", "=", "root", "=", "config", ".", "data", ".", "scannet_match_dir", "\n", "", "else", ":", "\n", "      ", "raise", "NotImplementedError", "\n", "\n", "", "logging", ".", "info", "(", "f\"Loading the subset {phase} from {root}\"", ")", "\n", "fname_txt", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root_filelist", ",", "'splits/overlap30.txt'", ")", "\n", "with", "open", "(", "fname_txt", ")", "as", "f", ":", "\n", "      ", "content", "=", "f", ".", "readlines", "(", ")", "\n", "", "fnames", "=", "[", "x", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "x", "in", "content", "]", "\n", "for", "fname", "in", "fnames", ":", "\n", "      ", "self", ".", "files", ".", "append", "(", "[", "os", ".", "path", ".", "join", "(", "self", ".", "root_filelist", ",", "fname", "[", "0", "]", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "root_filelist", ",", "fname", "[", "1", "]", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.PairDataset.reset_seed": [[203, 206], ["logging.info", "ddp_data_loaders.PairDataset.randg.seed"], "methods", ["None"], ["", "", "def", "reset_seed", "(", "self", ",", "seed", "=", "0", ")", ":", "\n", "    ", "logging", ".", "info", "(", "f\"Resetting the data loader seed to {seed}\"", ")", "\n", "self", ".", "randg", ".", "seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.PairDataset.apply_transform": [[207, 212], ["None"], "methods", ["None"], ["", "def", "apply_transform", "(", "self", ",", "pts", ",", "trans", ")", ":", "\n", "    ", "R", "=", "trans", "[", ":", "3", ",", ":", "3", "]", "\n", "T", "=", "trans", "[", ":", "3", ",", "3", "]", "\n", "pts", "=", "pts", "@", "R", ".", "T", "+", "T", "\n", "return", "pts", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.PairDataset.__len__": [[213, 215], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "files", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.ScanNetIndoorPairDataset.__init__": [[220, 245], ["ddp_data_loaders.PairDataset.__init__", "tuple", "range", "set", "set", "range"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "\n", "phase", ",", "\n", "transform", "=", "None", ",", "\n", "random_scale", "=", "False", ",", "\n", "manual_seed", "=", "False", ",", "\n", "config", "=", "None", ")", ":", "\n", "    ", "PairDataset", ".", "__init__", "(", "self", ",", "phase", ",", "transform", ",", "random_scale", ",", "manual_seed", ",", "config", ")", "\n", "\n", "# add", "\n", "self", ".", "CLASS_LABELS", "=", "(", "'wall'", ",", "'floor'", ",", "'cabinet'", ",", "'bed'", ",", "'chair'", ",", "'sofa'", ",", "'table'", ",", "'door'", ",", "'window'", ",", "\n", "'bookshelf'", ",", "'picture'", ",", "'counter'", ",", "'desk'", ",", "'curtain'", ",", "'refrigerator'", ",", "\n", "'shower curtain'", ",", "'toilet'", ",", "'sink'", ",", "'bathtub'", ",", "'otherfurniture'", ")", "\n", "self", ".", "VALID_CLASS_IDS", "=", "(", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "14", ",", "16", ",", "24", ",", "28", ",", "33", ",", "34", ",", "36", ",", "39", ")", "\n", "NUM_LABELS", "=", "41", "# Will be converted to 20 as defined in IGNORE_LABELS.", "\n", "# 0-40", "\n", "IGNORE_LABELS", "=", "tuple", "(", "set", "(", "range", "(", "41", ")", ")", "-", "set", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", "\n", "self", ".", "label_map", "=", "{", "}", "\n", "n_used", "=", "0", "\n", "for", "l", "in", "range", "(", "NUM_LABELS", ")", ":", "\n", "      ", "if", "l", "in", "IGNORE_LABELS", ":", "\n", "          ", "self", ".", "label_map", "[", "l", "]", "=", "255", "\n", "", "else", ":", "\n", "          ", "self", ".", "label_map", "[", "l", "]", "=", "n_used", "\n", "n_used", "+=", "1", "\n", "", "", "self", ".", "label_map", "[", "255", "]", "=", "255", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.ScanNetIndoorPairDataset.get_correspondences": [[246, 349], ["os.path.join", "os.path.join", "numpy.load", "numpy.load", "ddp_data_loaders.ScanNetIndoorPairDataset.apply_transform", "ddp_data_loaders.ScanNetIndoorPairDataset.apply_transform", "MinkowskiEngine.utils.sparse_quantize", "MinkowskiEngine.utils.sparse_quantize", "ddp_data_loaders.make_open3d_point_cloud", "ddp_data_loaders.make_open3d_point_cloud", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector", "ddp_data_loaders.get_matching_indices", "feats_train0.append", "feats_train1.append", "numpy.hstack", "numpy.hstack", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "ddp_data_loaders.sample_random_trans", "ddp_data_loaders.sample_random_trans", "ddp_data_loaders.sample_random_trans_z", "ddp_data_loaders.sample_random_trans_z", "numpy.linalg.inv", "numpy.floor", "numpy.floor", "ddp_data_loaders.ScanNetIndoorPairDataset.transform", "ddp_data_loaders.ScanNetIndoorPairDataset.transform", "random.random", "numpy.array", "numpy.array", "random.random", "numpy.random.choice", "numpy.random.choice"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.apply_transform", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.apply_transform", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.compute_full_overlapping.make_open3d_point_cloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.compute_full_overlapping.make_open3d_point_cloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.compute_full_overlapping.get_matching_indices", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.sample_random_trans", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.sample_random_trans", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.sample_random_trans_z", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.sample_random_trans_z"], ["", "def", "get_correspondences", "(", "self", ",", "idx", ")", ":", "\n", "    ", "file0", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "files", "[", "idx", "]", "[", "0", "]", ")", "\n", "file1", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "files", "[", "idx", "]", "[", "1", "]", ")", "\n", "data0", "=", "np", ".", "load", "(", "file0", ")", "\n", "data1", "=", "np", ".", "load", "(", "file1", ")", "\n", "xyz0", "=", "data0", "[", "\"pcd\"", "]", "[", ":", ",", ":", "3", "]", "\n", "xyz1", "=", "data1", "[", "\"pcd\"", "]", "[", ":", ",", ":", "3", "]", "\n", "\n", "label0", "=", "(", "data0", "[", "\"pcd\"", "]", "[", ":", ",", "6", "]", "/", "1000", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "label1", "=", "(", "data1", "[", "\"pcd\"", "]", "[", ":", ",", "6", "]", "/", "1000", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "instance0", "=", "(", "data0", "[", "\"pcd\"", "]", "[", ":", ",", "6", "]", "%", "1000", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "instance1", "=", "(", "data1", "[", "\"pcd\"", "]", "[", ":", ",", "6", "]", "%", "1000", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "color0", "=", "data0", "[", "'pcd'", "]", "[", ":", ",", "3", ":", "6", "]", "\n", "color1", "=", "data1", "[", "'pcd'", "]", "[", ":", ",", "3", ":", "6", "]", "\n", "\n", "matching_search_voxel_size", "=", "self", ".", "matching_search_voxel_size", "\n", "\n", "if", "self", ".", "random_scale", "and", "random", ".", "random", "(", ")", "<", "0.95", ":", "\n", "      ", "scale", "=", "self", ".", "min_scale", "+", "(", "self", ".", "max_scale", "-", "self", ".", "min_scale", ")", "*", "random", ".", "random", "(", ")", "\n", "matching_search_voxel_size", "*=", "scale", "\n", "xyz0", "=", "scale", "*", "xyz0", "\n", "xyz1", "=", "scale", "*", "xyz1", "\n", "\n", "", "if", "self", ".", "config", ".", "data", ".", "random_rotation_xyz", ":", "\n", "      ", "T0", "=", "sample_random_trans", "(", "xyz0", ",", "self", ".", "randg", ")", "\n", "T1", "=", "sample_random_trans", "(", "xyz1", ",", "self", ".", "randg", ")", "\n", "", "else", ":", "\n", "      ", "T0", "=", "sample_random_trans_z", "(", "xyz0", ")", "\n", "T1", "=", "sample_random_trans_z", "(", "xyz1", ")", "\n", "#else:", "\n", "#  T0 = only_trans(xyz0)", "\n", "#  T1 = only_trans(xyz1)", "\n", "\n", "", "trans", "=", "T1", "@", "np", ".", "linalg", ".", "inv", "(", "T0", ")", "\n", "xyz0", "=", "self", ".", "apply_transform", "(", "xyz0", ",", "T0", ")", "\n", "xyz1", "=", "self", ".", "apply_transform", "(", "xyz1", ",", "T1", ")", "\n", "\n", "# Voxelization", "\n", "sel0", "=", "ME", ".", "utils", ".", "sparse_quantize", "(", "xyz0", "/", "self", ".", "voxel_size", ",", "return_index", "=", "True", ")", "\n", "sel1", "=", "ME", ".", "utils", ".", "sparse_quantize", "(", "xyz1", "/", "self", ".", "voxel_size", ",", "return_index", "=", "True", ")", "\n", "\n", "if", "not", "self", ".", "config", ".", "data", ".", "voxelize", ":", "\n", "      ", "sel0", "=", "sel0", "[", "np", ".", "random", ".", "choice", "(", "sel0", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "data", ".", "num_points", ",", "\n", "replace", "=", "self", ".", "config", ".", "data", ".", "num_points", ">", "sel0", ".", "shape", "[", "0", "]", ")", "]", "\n", "sel1", "=", "sel1", "[", "np", ".", "random", ".", "choice", "(", "sel1", ".", "shape", "[", "0", "]", ",", "self", ".", "config", ".", "data", ".", "num_points", ",", "\n", "replace", "=", "self", ".", "config", ".", "data", ".", "num_points", ">", "sel1", ".", "shape", "[", "0", "]", ")", "]", "\n", "\n", "\n", "# Make point clouds using voxelized points", "\n", "", "pcd0", "=", "make_open3d_point_cloud", "(", "xyz0", ")", "\n", "pcd1", "=", "make_open3d_point_cloud", "(", "xyz1", ")", "\n", "\n", "# Select features and points using the returned voxelized indices", "\n", "pcd0", ".", "colors", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "color0", "[", "sel0", "]", ")", "\n", "pcd1", ".", "colors", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "color1", "[", "sel1", "]", ")", "\n", "pcd0", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "np", ".", "array", "(", "pcd0", ".", "points", ")", "[", "sel0", "]", ")", "\n", "pcd1", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "np", ".", "array", "(", "pcd1", ".", "points", ")", "[", "sel1", "]", ")", "\n", "label0", "=", "label0", "[", "sel0", "]", "\n", "label1", "=", "label1", "[", "sel1", "]", "\n", "color0", "=", "color0", "[", "sel0", "]", "\n", "color1", "=", "color1", "[", "sel1", "]", "\n", "instance0", "=", "instance0", "[", "sel0", "]", "\n", "instance1", "=", "instance1", "[", "sel1", "]", "\n", "matches", "=", "get_matching_indices", "(", "pcd0", ",", "pcd1", ",", "trans", ",", "matching_search_voxel_size", ")", "\n", "\n", "# Get features", "\n", "feats_train0", ",", "feats_train1", "=", "[", "]", ",", "[", "]", "\n", "\n", "feats_train0", ".", "append", "(", "color0", ")", "\n", "feats_train1", ".", "append", "(", "color1", ")", "\n", "\n", "feats0", "=", "np", ".", "hstack", "(", "feats_train0", ")", "\n", "feats1", "=", "np", ".", "hstack", "(", "feats_train1", ")", "\n", "\n", "# Get coords", "\n", "xyz0", "=", "np", ".", "array", "(", "pcd0", ".", "points", ")", "\n", "xyz1", "=", "np", ".", "array", "(", "pcd1", ".", "points", ")", "\n", "\n", "if", "self", ".", "config", ".", "data", ".", "voxelize", ":", "\n", "      ", "coords0", "=", "np", ".", "floor", "(", "xyz0", "/", "self", ".", "voxel_size", ")", "\n", "coords1", "=", "np", ".", "floor", "(", "xyz1", "/", "self", ".", "voxel_size", ")", "\n", "", "else", ":", "\n", "      ", "coords0", "=", "xyz0", "\n", "coords1", "=", "xyz1", "\n", "\n", "#jitter color", "\n", "", "if", "self", ".", "transform", ":", "\n", "      ", "coords0", ",", "feats0", "=", "self", ".", "transform", "(", "coords0", ",", "feats0", ")", "\n", "coords1", ",", "feats1", "=", "self", ".", "transform", "(", "coords1", ",", "feats1", ")", "\n", "\n", "", "feats0", "=", "feats0", "/", "255.0", "-", "0.5", "\n", "feats1", "=", "feats1", "/", "255.0", "-", "0.5", "\n", "\n", "# label mapping for monitor", "\n", "label0", "=", "np", ".", "array", "(", "[", "self", ".", "label_map", "[", "x", "]", "for", "x", "in", "label0", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n", "label1", "=", "np", ".", "array", "(", "[", "self", ".", "label_map", "[", "x", "]", "for", "x", "in", "label1", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n", "# NB(s9xie): xyz are coordinates in the original system;", "\n", "# coords are sparse conv grid coords. (subject to a scaling factor)", "\n", "# coords0 -> sinput0_C", "\n", "# trans is T0*T1^-1", "\n", "return", "(", "xyz0", ",", "xyz1", ",", "coords0", ",", "coords1", ",", "feats0", ",", "feats1", ",", "label0", ",", "label1", ",", "instance0", ",", "instance1", ",", "matches", ",", "trans", ",", "T0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.ScanNetIndoorPairDataset.__getitem__": [[350, 352], ["ddp_data_loaders.ScanNetIndoorPairDataset.get_correspondences"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.ScanNetIndoorPairDataset.get_correspondences"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "    ", "return", "self", ".", "get_correspondences", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.make_open3d_point_cloud": [[24, 30], ["open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector"], "function", ["None"], ["def", "make_open3d_point_cloud", "(", "xyz", ",", "color", "=", "None", ")", ":", "\n", "  ", "pcd", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "xyz", ")", "\n", "if", "color", "is", "not", "None", ":", "\n", "    ", "pcd", ".", "colors", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "color", ")", "\n", "", "return", "pcd", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.get_matching_indices": [[32, 46], ["copy.deepcopy", "copy.deepcopy", "copy.deepcopy.transform", "open3d.geometry.KDTreeFlann", "enumerate", "o3d.geometry.KDTreeFlann.search_radius_vector_3d", "match_inds.append"], "function", ["None"], ["", "def", "get_matching_indices", "(", "source", ",", "target", ",", "trans", ",", "search_voxel_size", ",", "K", "=", "None", ")", ":", "\n", "  ", "source_copy", "=", "copy", ".", "deepcopy", "(", "source", ")", "\n", "target_copy", "=", "copy", ".", "deepcopy", "(", "target", ")", "\n", "source_copy", ".", "transform", "(", "trans", ")", "\n", "pcd_tree", "=", "o3d", ".", "geometry", ".", "KDTreeFlann", "(", "target_copy", ")", "\n", "\n", "match_inds", "=", "[", "]", "\n", "for", "i", ",", "point", "in", "enumerate", "(", "source_copy", ".", "points", ")", ":", "\n", "    ", "[", "_", ",", "idx", ",", "_", "]", "=", "pcd_tree", ".", "search_radius_vector_3d", "(", "point", ",", "search_voxel_size", ")", "\n", "if", "K", "is", "not", "None", ":", "\n", "      ", "idx", "=", "idx", "[", ":", "K", "]", "\n", "", "for", "j", "in", "idx", ":", "\n", "      ", "match_inds", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "", "return", "match_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.default_collate_pair_fn": [[48, 125], ["list", "numpy.zeros", "enumerate", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().int", "torch.cat().int", "torch.cat().int", "torch.cat().int", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().float", "torch.cat().int", "torch.cat().int", "torch.cat().int", "torch.cat().int", "torch.cat().float", "torch.cat().float", "torch.stack().float", "torch.stack().float", "torch.cat().int", "torch.cat().int", "zip", "torch.cat().float.append", "torch.cat().float.append", "torch.cat().float.append", "torch.cat().int.append", "torch.cat().int.append", "torch.cat().float.append", "torch.cat().float.append", "torch.cat().float.append", "torch.cat().int.append", "torch.cat().int.append", "torch.cat().float.append", "torch.stack().float.append", "torch.cat().int.append", "len_batch.append", "torch.from_numpy", "torch.from_numpy", "torch.cat", "torch.cat", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.cat", "torch.cat", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "len", "matching_inds[].extend", "torch.from_numpy", "torch.from_numpy", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack", "torch.stack", "torch.cat", "torch.cat", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "numpy.array", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.ones().float", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "default_collate_pair_fn", "(", "list_data", ")", ":", "\n", "  ", "xyz0", ",", "xyz1", ",", "coords0", ",", "coords1", ",", "feats0", ",", "feats1", ",", "label0", ",", "label1", ",", "instance0", ",", "instance1", ",", "matching_inds", ",", "trans", ",", "T0", "=", "list", "(", "zip", "(", "*", "list_data", ")", ")", "\n", "xyz_batch0", ",", "coords_batch0", ",", "feats_batch0", ",", "label_batch0", ",", "instance_batch0", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "xyz_batch1", ",", "coords_batch1", ",", "feats_batch1", ",", "label_batch1", ",", "instance_batch1", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "matching_inds_batch", ",", "trans_batch", ",", "len_batch", ",", "T0_batch", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "batch_id", "=", "0", "\n", "curr_start_inds", "=", "np", ".", "zeros", "(", "(", "1", ",", "2", ")", ")", "\n", "for", "batch_id", ",", "_", "in", "enumerate", "(", "coords0", ")", ":", "\n", "\n", "    ", "N0", "=", "coords0", "[", "batch_id", "]", ".", "shape", "[", "0", "]", "\n", "N1", "=", "coords1", "[", "batch_id", "]", ".", "shape", "[", "0", "]", "\n", "\n", "# Move batchids to the beginning", "\n", "xyz_batch0", ".", "append", "(", "torch", ".", "from_numpy", "(", "xyz0", "[", "batch_id", "]", ")", ")", "\n", "coords_batch0", ".", "append", "(", "\n", "torch", ".", "cat", "(", "(", "torch", ".", "ones", "(", "N0", ",", "1", ")", ".", "float", "(", ")", "*", "batch_id", ",", "\n", "torch", ".", "from_numpy", "(", "coords0", "[", "batch_id", "]", ")", ".", "float", "(", ")", ")", ",", "1", ")", ")", "\n", "feats_batch0", ".", "append", "(", "torch", ".", "from_numpy", "(", "feats0", "[", "batch_id", "]", ")", ")", "\n", "label_batch0", ".", "append", "(", "torch", ".", "from_numpy", "(", "label0", "[", "batch_id", "]", ")", ")", "\n", "instance_batch0", ".", "append", "(", "torch", ".", "from_numpy", "(", "instance0", "[", "batch_id", "]", ")", ")", "\n", "\n", "xyz_batch1", ".", "append", "(", "torch", ".", "from_numpy", "(", "xyz1", "[", "batch_id", "]", ")", ")", "\n", "coords_batch1", ".", "append", "(", "\n", "torch", ".", "cat", "(", "(", "torch", ".", "ones", "(", "N1", ",", "1", ")", ".", "float", "(", ")", "*", "batch_id", ",", "\n", "torch", ".", "from_numpy", "(", "coords1", "[", "batch_id", "]", ")", ".", "float", "(", ")", ")", ",", "1", ")", ")", "\n", "feats_batch1", ".", "append", "(", "torch", ".", "from_numpy", "(", "feats1", "[", "batch_id", "]", ")", ")", "\n", "label_batch1", ".", "append", "(", "torch", ".", "from_numpy", "(", "label1", "[", "batch_id", "]", ")", ")", "\n", "instance_batch1", ".", "append", "(", "torch", ".", "from_numpy", "(", "instance1", "[", "batch_id", "]", ")", ")", "\n", "\n", "trans_batch", ".", "append", "(", "torch", ".", "from_numpy", "(", "trans", "[", "batch_id", "]", ")", ")", "\n", "T0_batch", ".", "append", "(", "torch", ".", "from_numpy", "(", "T0", "[", "batch_id", "]", ")", ")", "\n", "\n", "# in case 0 matching", "\n", "if", "len", "(", "matching_inds", "[", "batch_id", "]", ")", "==", "0", ":", "\n", "      ", "matching_inds", "[", "batch_id", "]", ".", "extend", "(", "[", "0", ",", "0", "]", ")", "\n", "\n", "", "matching_inds_batch", ".", "append", "(", "\n", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "matching_inds", "[", "batch_id", "]", ")", "+", "curr_start_inds", ")", ")", "\n", "len_batch", ".", "append", "(", "[", "N0", ",", "N1", "]", ")", "\n", "\n", "# Move the head", "\n", "curr_start_inds", "[", "0", ",", "0", "]", "+=", "N0", "\n", "curr_start_inds", "[", "0", ",", "1", "]", "+=", "N1", "\n", "\n", "# Concatenate all lists", "\n", "", "xyz_batch0", "=", "torch", ".", "cat", "(", "xyz_batch0", ",", "0", ")", ".", "float", "(", ")", "\n", "coords_batch0", "=", "torch", ".", "cat", "(", "coords_batch0", ",", "0", ")", ".", "float", "(", ")", "\n", "feats_batch0", "=", "torch", ".", "cat", "(", "feats_batch0", ",", "0", ")", ".", "float", "(", ")", "\n", "label_batch0", "=", "torch", ".", "cat", "(", "label_batch0", ",", "0", ")", ".", "int", "(", ")", "\n", "instance_batch0", "=", "torch", ".", "cat", "(", "instance_batch0", ",", "0", ")", ".", "int", "(", ")", "\n", "\n", "xyz_batch1", "=", "torch", ".", "cat", "(", "xyz_batch1", ",", "0", ")", ".", "float", "(", ")", "\n", "coords_batch1", "=", "torch", ".", "cat", "(", "coords_batch1", ",", "0", ")", ".", "float", "(", ")", "\n", "feats_batch1", "=", "torch", ".", "cat", "(", "feats_batch1", ",", "0", ")", ".", "float", "(", ")", "\n", "label_batch1", "=", "torch", ".", "cat", "(", "label_batch1", ",", "0", ")", ".", "int", "(", ")", "\n", "instance_batch1", "=", "torch", ".", "cat", "(", "instance_batch1", ",", "0", ")", ".", "int", "(", ")", "\n", "\n", "trans_batch", "=", "torch", ".", "cat", "(", "trans_batch", ",", "0", ")", ".", "float", "(", ")", "\n", "T0_batch", "=", "torch", ".", "stack", "(", "T0_batch", ",", "0", ")", ".", "float", "(", ")", "\n", "matching_inds_batch", "=", "torch", ".", "cat", "(", "matching_inds_batch", ",", "0", ")", ".", "int", "(", ")", "\n", "\n", "return", "{", "\n", "'pcd0'", ":", "xyz_batch0", ",", "\n", "'pcd1'", ":", "xyz_batch1", ",", "\n", "'sinput0_C'", ":", "coords_batch0", ",", "\n", "'sinput0_F'", ":", "feats_batch0", ",", "\n", "'sinput0_L'", ":", "label_batch0", ",", "\n", "'sinput0_I'", ":", "instance_batch1", ",", "\n", "'sinput1_C'", ":", "coords_batch1", ",", "\n", "'sinput1_F'", ":", "feats_batch1", ",", "\n", "'sinput1_L'", ":", "label_batch1", ",", "\n", "'sinput1_I'", ":", "instance_batch1", ",", "\n", "'correspondences'", ":", "matching_inds_batch", ",", "\n", "'trans'", ":", "trans_batch", ",", "\n", "'T0'", ":", "T0_batch", ",", "\n", "'len_batch'", ":", "len_batch", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.M": [[128, 130], ["scipy.linalg.expm", "numpy.cross", "numpy.eye", "scipy.linalg.norm"], "function", ["None"], ["", "def", "M", "(", "axis", ",", "theta", ")", ":", "\n", "  ", "return", "expm", "(", "np", ".", "cross", "(", "np", ".", "eye", "(", "3", ")", ",", "axis", "/", "norm", "(", "axis", ")", "*", "theta", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.sample_random_trans": [[131, 137], ["numpy.eye", "ddp_data_loaders.M", "M.dot", "randg.rand", "numpy.mean", "randg.rand"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.M"], ["", "def", "sample_random_trans", "(", "pcd", ",", "randg", ",", "rotation_range", "=", "360", ")", ":", "\n", "    ", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "R", "=", "M", "(", "randg", ".", "rand", "(", "3", ")", "-", "0.5", ",", "rotation_range", "*", "np", ".", "pi", "/", "180.0", "*", "(", "randg", ".", "rand", "(", "1", ")", "-", "0.5", ")", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "R", "\n", "T", "[", ":", "3", ",", "3", "]", "=", "R", ".", "dot", "(", "-", "np", ".", "mean", "(", "pcd", ",", "axis", "=", "0", ")", ")", "\n", "return", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.sample_random_trans_z": [[138, 156], ["enumerate", "numpy.random.shuffle", "numpy.eye", "rot_mat.dot", "numpy.zeros", "rot_mats.append", "numpy.random.uniform", "ddp_data_loaders.M", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.M"], ["", "def", "sample_random_trans_z", "(", "pcd", ")", ":", "\n", "  ", "ROTATION_AUGMENTATION_BOUND", "=", "(", "(", "-", "np", ".", "pi", "/", "64", ",", "np", ".", "pi", "/", "64", ")", ",", "(", "-", "np", ".", "pi", "/", "64", ",", "np", ".", "pi", "/", "64", ")", ",", "(", "-", "np", ".", "pi", ",", "np", ".", "pi", ")", ")", "\n", "rot_mats", "=", "[", "]", "\n", "for", "axis_ind", ",", "rot_bound", "in", "enumerate", "(", "ROTATION_AUGMENTATION_BOUND", ")", ":", "\n", "    ", "theta", "=", "0", "\n", "axis", "=", "np", ".", "zeros", "(", "3", ")", "\n", "axis", "[", "axis_ind", "]", "=", "1", "\n", "if", "rot_bound", "is", "not", "None", ":", "\n", "      ", "theta", "=", "np", ".", "random", ".", "uniform", "(", "*", "rot_bound", ")", "\n", "", "rot_mats", ".", "append", "(", "M", "(", "axis", ",", "theta", ")", ")", "\n", "# Use random order", "\n", "", "np", ".", "random", ".", "shuffle", "(", "rot_mats", ")", "\n", "rot_mat", "=", "rot_mats", "[", "0", "]", "@", "rot_mats", "[", "1", "]", "@", "rot_mats", "[", "2", "]", "\n", "\n", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "rot_mat", "\n", "T", "[", ":", "3", ",", "3", "]", "=", "rot_mat", ".", "dot", "(", "-", "np", ".", "mean", "(", "pcd", ",", "axis", "=", "0", ")", ")", "\n", "return", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.only_trans": [[157, 161], ["numpy.eye", "numpy.mean"], "function", ["None"], ["", "def", "only_trans", "(", "pcd", ")", ":", "\n", "  ", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", "3", "]", "=", "-", "np", ".", "mean", "(", "pcd", ",", "axis", "=", "0", ")", "\n", "return", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.make_data_loader": [[364, 397], ["transforms.append", "Dataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "dataset_str_mapping.keys", "logging.error", "lib.Jitter", "lib.data_sampler.DistributedInfSampler", "lib.Compose", "dataset_str_mapping.keys"], "function", ["None"], ["def", "make_data_loader", "(", "config", ",", "batch_size", ",", "num_threads", "=", "0", ")", ":", "\n", "\n", "  ", "if", "config", ".", "data", ".", "dataset", "not", "in", "dataset_str_mapping", ".", "keys", "(", ")", ":", "\n", "    ", "logging", ".", "error", "(", "f'Dataset {config.data.dataset}, does not exists in '", "+", "\n", "', '", ".", "join", "(", "dataset_str_mapping", ".", "keys", "(", ")", ")", ")", "\n", "\n", "", "Dataset", "=", "dataset_str_mapping", "[", "config", ".", "data", ".", "dataset", "]", "\n", "\n", "transforms", "=", "[", "]", "\n", "transforms", ".", "append", "(", "t", ".", "Jitter", "(", ")", ")", "\n", "dset", "=", "Dataset", "(", "\n", "phase", "=", "\"train\"", ",", "\n", "transform", "=", "t", ".", "Compose", "(", "transforms", ")", ",", "\n", "random_scale", "=", "False", ",", "\n", "config", "=", "config", ")", "\n", "\n", "collate_pair_fn", "=", "default_collate_pair_fn", "\n", "if", "config", ".", "misc", ".", "num_gpus", ">", "1", ":", "\n", "    ", "sampler", "=", "DistributedInfSampler", "(", "dset", ")", "\n", "", "else", ":", "\n", "    ", "sampler", "=", "None", "\n", "\n", "", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", "if", "sampler", "else", "True", ",", "\n", "num_workers", "=", "num_threads", ",", "\n", "collate_fn", "=", "collate_pair_fn", ",", "\n", "pin_memory", "=", "False", ",", "\n", "sampler", "=", "sampler", ",", "\n", "drop_last", "=", "True", ")", "\n", "\n", "return", "loader", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.ContrastiveLossTrainer.__init__": [[86, 165], ["torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.nn.parallel.DistributedDataParallel.load_model", "torch.nn.parallel.DistributedDataParallel.load_model.", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.nn.parallel.DistributedDataParallel.cuda", "torch.lr_scheduler.ExponentialLR", "torch.lr_scheduler.ExponentialLR", "torch.lr_scheduler.ExponentialLR", "torch.lr_scheduler.ExponentialLR", "torch.lr_scheduler.ExponentialLR", "os.isfile", "os.isfile", "ShapeContext", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "lib.is_master_proc", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "torch.nn.parallel.DistributedDataParallel", "getattr", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.nn.parallel.DistributedDataParallel.parameters", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "ddp_trainer.load_state", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "ddp_trainer.load_state", "ddp_trainer.ContrastiveLossTrainer.optimizer.load_state_dict", "ddp_trainer.ContrastiveLossTrainer.scheduler.load_state_dict", "logging.info", "tensorboardX.SummaryWriter", "omegaconf.OmegaConf.save", "logging.info", "logging.info", "logging.info", "logging.info", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location", "torch.serialization.default_restore_location"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.__init__.load_model", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.is_master_proc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.load_state", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.load_state"], ["            ", "model", "=", "torch", ".", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "\n", "module", "=", "model", ",", "device_ids", "=", "[", "self", ".", "cur_device", "]", ",", "\n", "output_device", "=", "self", ".", "cur_device", ",", "\n", "broadcast_buffers", "=", "False", "\n", ")", "\n", "\n", "", "self", ".", "config", "=", "config", "\n", "self", ".", "model", "=", "model", "\n", "if", "self", ".", "is_master", ":", "\n", "            ", "self", ".", "writer", "=", "SummaryWriter", "(", "log_dir", "=", "'tensorboard'", ")", "\n", "", "self", ".", "optimizer", "=", "initialize_optimizer", "(", "model", ".", "parameters", "(", ")", ",", "config", ".", "optimizer", ")", "\n", "self", ".", "scheduler", "=", "initialize_scheduler", "(", "self", ".", "optimizer", ",", "config", ".", "optimizer", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "ignore_index", "=", "config", ".", "data", ".", "ignore_label", ")", "\n", "\n", "checkpoint_fn", "=", "'weights/weights.pth'", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_miou_iter", "=", "-", "1", ",", "1", "\n", "self", ".", "best_val_mAP", ",", "self", ".", "best_val_mAP_iter", "=", "-", "1", ",", "1", "\n", "self", ".", "curr_iter", ",", "self", ".", "epoch", ",", "self", ".", "is_training", "=", "1", ",", "1", ",", "True", "\n", "if", "os", ".", "path", ".", "isfile", "(", "checkpoint_fn", ")", ":", "\n", "            ", "logging", ".", "info", "(", "\"=> loading checkpoint '{}'\"", ".", "format", "(", "checkpoint_fn", ")", ")", "\n", "state", "=", "torch", ".", "load", "(", "checkpoint_fn", ",", "map_location", "=", "lambda", "s", ",", "l", ":", "default_restore_location", "(", "s", ",", "'cpu'", ")", ")", "\n", "self", ".", "load_state", "(", "state", "[", "'state_dict'", "]", ")", "\n", "\n", "self", ".", "curr_iter", "=", "state", "[", "'iteration'", "]", "+", "1", "\n", "self", ".", "epoch", "=", "state", "[", "'epoch'", "]", "\n", "self", ".", "scheduler", "=", "initialize_scheduler", "(", "self", ".", "optimizer", ",", "config", ".", "optimizer", ",", "last_step", "=", "self", ".", "curr_iter", ")", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "state", "[", "'optimizer'", "]", ")", "\n", "\n", "if", "'best_val_miou'", "in", "state", ":", "\n", "              ", "self", ".", "best_val_miou", "=", "state", "[", "'best_val_miou'", "]", "\n", "", "if", "'best_val_mAP'", "in", "state", ":", "\n", "              ", "self", ".", "best_val_mAP", "=", "state", "[", "'best_val_mAP'", "]", "\n", "\n", "", "logging", ".", "info", "(", "\"=> loaded checkpoint '{}' (epoch {})\"", ".", "format", "(", "checkpoint_fn", ",", "state", "[", "'epoch'", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "logging", ".", "info", "(", "\"=> no weights.pth\"", ")", "\n", "\n", "", "", "def", "setup_logging", "(", "self", ")", ":", "\n", "        ", "ch", "=", "logging", ".", "StreamHandler", "(", "sys", ".", "stdout", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "WARN", ")", "\n", "if", "self", ".", "is_master", ":", "\n", "            ", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "", "logging", ".", "basicConfig", "(", "\n", "format", "=", "os", ".", "uname", "(", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "' %(asctime)s %(message)s'", ",", "\n", "datefmt", "=", "'%m/%d %H:%M:%S'", ",", "\n", "handlers", "=", "[", "ch", "]", ")", "\n", "\n", "", "def", "load_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "if", "get_world_size", "(", ")", ">", "1", ":", "\n", "            ", "_model", "=", "self", ".", "model", ".", "module", "\n", "", "else", ":", "\n", "            ", "_model", "=", "self", ".", "model", "\n", "", "_model", ".", "load_state_dict", "(", "state", ")", "\n", "\n", "", "def", "set_seed", "(", "self", ")", ":", "\n", "# Set seed based on args.seed and the update number so that we get", "\n", "# reproducible results when resuming from checkpoints", "\n", "        ", "seed", "=", "self", ".", "config", ".", "misc", ".", "seed", "+", "self", ".", "curr_iter", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "\n", "", "def", "test", "(", "self", ")", ":", "\n", "        ", "return", "test_", "(", "self", ".", "model", ",", "self", ".", "test_data_loader", ",", "self", ".", "config", ")", "\n", "\n", "", "def", "validate", "(", "self", ")", ":", "\n", "        ", "val_loss", ",", "val_score", ",", "_", ",", "val_miou", ",", "val_mAP", "=", "test_", "(", "self", ".", "model", ",", "self", ".", "val_data_loader", ",", "self", ".", "config", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/miou'", ",", "val_miou", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/loss'", ",", "val_loss", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/precision_at_1'", ",", "val_score", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'val/mAP@0.5'", ",", "val_mAP", ",", "self", ".", "curr_iter", ")", "\n", "\n", "if", "val_miou", ">", "self", ".", "best_val_miou", ":", "\n", "            ", "self", ".", "best_val_miou", "=", "val_miou", "\n", "self", ".", "best_val_iou_iter", "=", "self", ".", "curr_iter", "\n", "checkpoint", "(", "self", ".", "model", ",", "self", ".", "optimizer", ",", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "self", ".", "config", ",", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_mAP", ",", "\"miou\"", ")", "\n", "logging", ".", "info", "(", "\"Current best mIoU: {:.3f} at iter {}\"", ".", "format", "(", "self", ".", "best_val_miou", ",", "self", ".", "best_val_miou_iter", ")", ")", "\n", "\n", "", "if", "val_mAP", ">", "self", ".", "best_val_mAP", ":", "\n", "            ", "self", ".", "best_val_mAP", "=", "val_mAP", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.ContrastiveLossTrainer.pdist": [[167, 170], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "A.unsqueeze", "B.unsqueeze"], "methods", ["None"], ["checkpoint", "(", "self", ".", "model", ",", "self", ".", "optimizer", ",", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "self", ".", "config", ",", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_mAP", ",", "\"mAP\"", ")", "\n", "logging", ".", "info", "(", "\"Current best mAP@0.5: {:.3f} at iter {}\"", ".", "format", "(", "self", ".", "best_val_mAP", ",", "self", ".", "best_val_mAP_iter", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.ContrastiveLossTrainer._save_checkpoint": [[171, 189], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "logging.info", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.system", "os.system", "os.system", "os.system", "_model.state_dict", "ddp_trainer.ContrastiveLossTrainer.optimizer.state_dict", "ddp_trainer.ContrastiveLossTrainer.scheduler.state_dict", "os.remove", "os.remove", "os.remove", "os.remove", "lib.get_world_size"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size"], ["", "checkpoint", "(", "self", ".", "model", ",", "self", ".", "optimizer", ",", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "self", ".", "config", ",", "\n", "self", ".", "best_val_miou", ",", "self", ".", "best_val_mAP", ")", "\n", "\n", "", "def", "train", "(", "self", ")", ":", "\n", "# Set up the train flag for batch normalization", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "# Configuration", "\n", "data_timer", ",", "iter_timer", "=", "Timer", "(", ")", ",", "Timer", "(", ")", "\n", "fw_timer", ",", "bw_timer", ",", "ddp_timer", "=", "Timer", "(", ")", ",", "Timer", "(", ")", ",", "Timer", "(", ")", "\n", "data_time_avg", ",", "iter_time_avg", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "fw_time_avg", ",", "bw_time_avg", ",", "ddp_time_avg", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "\n", "scores", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "{", "\n", "'semantic_loss'", ":", "AverageMeter", "(", ")", ",", "\n", "'offset_dir_loss'", ":", "AverageMeter", "(", ")", ",", "\n", "'offset_norm_loss'", ":", "AverageMeter", "(", ")", ",", "\n", "'total_loss'", ":", "AverageMeter", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.__init__": [[192, 204], ["ddp_trainer.ContrastiveLossTrainer.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["# Train the network", "\n", "logging", ".", "info", "(", "'===> Start training on {} GPUs, batch-size={}'", ".", "format", "(", "\n", "get_world_size", "(", ")", ",", "self", ".", "config", ".", "data", ".", "batch_size", ")", ")", "\n", "\n", "data_iter", "=", "self", ".", "train_data_loader", ".", "__iter__", "(", ")", "# (distributed) infinite sampler", "\n", "while", "self", ".", "is_training", ":", "\n", "            ", "for", "_", "in", "range", "(", "len", "(", "self", ".", "train_data_loader", ")", "//", "self", ".", "config", ".", "optimizer", ".", "iter_size", ")", ":", "\n", "                ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "data_time", ",", "batch_score", "=", "0", ",", "0", "\n", "batch_losses", "=", "{", "\n", "'semantic_loss'", ":", "0.0", ",", "\n", "'offset_dir_loss'", ":", "0.0", ",", "\n", "'offset_norm_loss'", ":", "0.0", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.compute_loss": [[205, 216], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.arange().cuda().long", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "out.squeeze().contiguous.squeeze().contiguous.squeeze().contiguous", "lib.criterion.NCESoftmaxLoss().cuda", "lib.criterion.NCESoftmaxLoss().cuda.", "k.transpose", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "out.squeeze().contiguous.squeeze().contiguous.squeeze", "lib.criterion.NCESoftmaxLoss", "mask.float", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["'total_loss'", ":", "0.0", "}", "\n", "iter_timer", ".", "tic", "(", ")", "\n", "\n", "# set random seed for every iteration for trackability", "\n", "self", ".", "set_seed", "(", ")", "\n", "\n", "for", "sub_iter", "in", "range", "(", "self", ".", "config", ".", "optimizer", ".", "iter_size", ")", ":", "\n", "# Get training data", "\n", "                    ", "data_timer", ".", "tic", "(", ")", "\n", "if", "self", ".", "config", ".", "data", ".", "return_transformation", ":", "\n", "                        ", "coords", ",", "input", ",", "target", ",", "instances", ",", "_", "=", "data_iter", ".", "next", "(", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.train": [[217, 255], ["ddp_trainer.PointNCELossTrainer.data_loader.__iter__", "lib.timer.AverageMeter", "lib.timer.Timer", "lib.timer.Timer", "ddp_trainer.PointNCELossTrainer._train_iter", "len", "ddp_trainer.PointNCELossTrainer.scheduler.get_last_lr", "ddp_trainer.PointNCELossTrainer.scheduler.step", "ddp_trainer.PointNCELossTrainer.writer.add_scalar", "logging.info", "data_meter.reset", "total_timer.reset", "ddp_trainer.PointNCELossTrainer.scheduler.get_last_lr", "logging.info", "ddp_trainer.PointNCELossTrainer._save_checkpoint", "len", "ddp_trainer.PointNCELossTrainer.scheduler.get_last_lr"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__iter__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PartitionPointNCELossTrainerPointNet._train_iter", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.ContrastiveLossTrainer._save_checkpoint"], ["                        ", "coords", ",", "input", ",", "target", ",", "instances", "=", "data_iter", ".", "next", "(", ")", "\n", "\n", "# Preprocess input", "\n", "", "color", "=", "input", "[", ":", ",", ":", "3", "]", ".", "int", "(", ")", "\n", "if", "self", ".", "config", ".", "augmentation", ".", "normalize_color", ":", "\n", "                      ", "input", "[", ":", ",", ":", "3", "]", "=", "input", "[", ":", ",", ":", "3", "]", "/", "255.", "-", "0.5", "\n", "", "sinput", "=", "SparseTensor", "(", "input", ",", "coords", ")", ".", "to", "(", "self", ".", "cur_device", ")", "\n", "\n", "data_time", "+=", "data_timer", ".", "toc", "(", "False", ")", "\n", "# Feed forward", "\n", "fw_timer", ".", "tic", "(", ")", "\n", "\n", "inputs", "=", "(", "sinput", ",", ")", "\n", "pt_offsets", ",", "soutput", ",", "_", "=", "self", ".", "model", "(", "*", "inputs", ")", "\n", "# The output of the network is not sorted", "\n", "target", "=", "target", ".", "long", "(", ")", ".", "to", "(", "self", ".", "cur_device", ")", "\n", "semantic_loss", "=", "self", ".", "criterion", "(", "soutput", ".", "F", ",", "target", ".", "long", "(", ")", ")", "\n", "total_loss", "=", "semantic_loss", "\n", "\n", "#-----------------offset loss----------------------", "\n", "## pt_offsets: (N, 3), float, cuda", "\n", "## coords: (N, 3), float32", "\n", "## centers: (N, 3), float32 tensor ", "\n", "## instance_ids: (N), long", "\n", "centers", "=", "np", ".", "concatenate", "(", "[", "instance", "[", "'center'", "]", "for", "instance", "in", "instances", "]", ")", "\n", "instance_ids", "=", "np", ".", "concatenate", "(", "[", "instance", "[", "'ids'", "]", "for", "instance", "in", "instances", "]", ")", "\n", "\n", "centers", "=", "torch", ".", "from_numpy", "(", "centers", ")", ".", "cuda", "(", ")", "\n", "instance_ids", "=", "torch", ".", "from_numpy", "(", "instance_ids", ")", ".", "cuda", "(", ")", ".", "long", "(", ")", "\n", "\n", "gt_offsets", "=", "centers", "-", "coords", "[", ":", ",", "1", ":", "]", ".", "cuda", "(", ")", "# (N, 3)", "\n", "gt_offsets", "*=", "self", ".", "train_data_loader", ".", "dataset", ".", "VOXEL_SIZE", "\n", "pt_diff", "=", "pt_offsets", ".", "F", "-", "gt_offsets", "# (N, 3)", "\n", "pt_dist", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "pt_diff", ")", ",", "dim", "=", "-", "1", ")", "# (N)", "\n", "valid", "=", "(", "instance_ids", "!=", "-", "1", ")", ".", "float", "(", ")", "\n", "offset_norm_loss", "=", "torch", ".", "sum", "(", "pt_dist", "*", "valid", ")", "/", "(", "torch", ".", "sum", "(", "valid", ")", "+", "1e-6", ")", "\n", "\n", "gt_offsets_norm", "=", "torch", ".", "norm", "(", "gt_offsets", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "# (N), float", "\n", "gt_offsets_", "=", "gt_offsets", "/", "(", "gt_offsets_norm", ".", "unsqueeze", "(", "-", "1", ")", "+", "1e-8", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer._train_iter": [[257, 312], ["ddp_trainer.PointNCELossTrainer.optimizer.zero_grad", "total_timer.tic", "data_timer.tic", "data_loader_iter.next", "data_timer.toc", "MinkowskiEngine.SparseTensor().to", "ddp_trainer.PointNCELossTrainer.model", "MinkowskiEngine.SparseTensor().to", "ddp_trainer.PointNCELossTrainer.model", "input_dict[].to", "pos_pairs[].unique", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ddp_trainer.PointNCELossTrainer.compute_loss", "ddp_trainer.PointNCELossTrainer.backward", "result[].item", "ddp_trainer.PointNCELossTrainer.optimizer.step", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "total_timer.toc", "data_meter.update", "numpy.random.choice", "lib.scaled_all_reduce_dict", "MinkowskiEngine.SparseTensor", "MinkowskiEngine.SparseTensor", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "q_unique.long", "k_sel.long", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.compute_loss", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.scaled_all_reduce_dict"], ["pt_offsets_", "=", "pt_offsets", ".", "F", "/", "(", "pt_offsets_norm", ".", "unsqueeze", "(", "-", "1", ")", "+", "1e-8", ")", "\n", "direction_diff", "=", "-", "(", "gt_offsets_", "*", "pt_offsets_", ")", ".", "sum", "(", "-", "1", ")", "# (N)", "\n", "offset_dir_loss", "=", "torch", ".", "sum", "(", "direction_diff", "*", "valid", ")", "/", "(", "torch", ".", "sum", "(", "valid", ")", "+", "1e-6", ")", "\n", "total_loss", "+=", "offset_norm_loss", "+", "offset_dir_loss", "\n", "\n", "# Compute and accumulate gradient", "\n", "total_loss", "/=", "self", ".", "config", ".", "optimizer", ".", "iter_size", "\n", "\n", "pred", "=", "get_prediction", "(", "self", ".", "train_data_loader", ".", "dataset", ",", "soutput", ".", "F", ",", "target", ")", "\n", "score", "=", "precision_at_one", "(", "pred", ",", "target", ")", "\n", "\n", "# bp the loss", "\n", "fw_timer", ".", "toc", "(", "False", ")", "\n", "bw_timer", ".", "tic", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "bw_timer", ".", "toc", "(", "False", ")", "\n", "\n", "# gather information", "\n", "logging_output", "=", "{", "'total_loss'", ":", "total_loss", ".", "item", "(", ")", ",", "'semantic_loss'", ":", "semantic_loss", ".", "item", "(", ")", ",", "'score'", ":", "score", "/", "self", ".", "config", ".", "optimizer", ".", "iter_size", "}", "\n", "logging_output", "[", "'offset_dir_loss'", "]", "=", "offset_dir_loss", ".", "item", "(", ")", "\n", "logging_output", "[", "'offset_norm_loss'", "]", "=", "offset_norm_loss", ".", "item", "(", ")", "\n", "\n", "ddp_timer", ".", "tic", "(", ")", "\n", "if", "self", ".", "config", ".", "misc", ".", "num_gpus", ">", "1", ":", "\n", "                      ", "logging_output", "=", "all_gather", "(", "logging_output", ")", "\n", "logging_output", "=", "{", "w", ":", "np", ".", "mean", "(", "[", "\n", "a", "[", "w", "]", "for", "a", "in", "logging_output", "]", "\n", ")", "for", "w", "in", "logging_output", "[", "0", "]", "}", "\n", "\n", "", "batch_losses", "[", "'total_loss'", "]", "+=", "logging_output", "[", "'total_loss'", "]", "\n", "batch_losses", "[", "'semantic_loss'", "]", "+=", "logging_output", "[", "'semantic_loss'", "]", "\n", "batch_losses", "[", "'offset_dir_loss'", "]", "+=", "logging_output", "[", "'offset_dir_loss'", "]", "\n", "batch_losses", "[", "'offset_norm_loss'", "]", "+=", "logging_output", "[", "'offset_norm_loss'", "]", "\n", "batch_score", "+=", "logging_output", "[", "'score'", "]", "\n", "\n", "ddp_timer", ".", "toc", "(", "False", ")", "\n", "\n", "# Update number of steps", "\n", "", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "data_time_avg", ".", "update", "(", "data_time", ")", "\n", "iter_time_avg", ".", "update", "(", "iter_timer", ".", "toc", "(", "False", ")", ")", "\n", "fw_time_avg", ".", "update", "(", "fw_timer", ".", "diff", ")", "\n", "bw_time_avg", ".", "update", "(", "bw_timer", ".", "diff", ")", "\n", "ddp_time_avg", ".", "update", "(", "ddp_timer", ".", "diff", ")", "\n", "\n", "losses", "[", "'total_loss'", "]", ".", "update", "(", "batch_losses", "[", "'total_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "losses", "[", "'semantic_loss'", "]", ".", "update", "(", "batch_losses", "[", "'semantic_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "losses", "[", "'offset_dir_loss'", "]", ".", "update", "(", "batch_losses", "[", "'offset_dir_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "losses", "[", "'offset_norm_loss'", "]", ".", "update", "(", "batch_losses", "[", "'offset_norm_loss'", "]", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "scores", ".", "update", "(", "batch_score", ",", "target", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "self", ".", "curr_iter", ">=", "self", ".", "config", ".", "optimizer", ".", "max_iter", ":", "\n", "                  ", "self", ".", "is_training", "=", "False", "\n", "break", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PartitionPointNCELossTrainer._train_iter": [[314, 402], ["ddp_trainer.PartitionPointNCELossTrainer.optimizer.zero_grad", "total_timer.tic", "data_timer.tic", "data_loader_iter.next", "data_timer.toc", "MinkowskiEngine.SparseTensor().to", "ddp_trainer.PartitionPointNCELossTrainer.model", "MinkowskiEngine.SparseTensor().to", "ddp_trainer.PartitionPointNCELossTrainer.model", "input_dict[].to", "pos_pairs[].unique", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "[].float().cuda", "range", "loss.backward", "result[].item", "ddp_trainer.PartitionPointNCELossTrainer.optimizer.step", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "total_timer.toc", "data_meter.update", "[].float().cuda", "range", "lib.scaled_all_reduce_dict", "MinkowskiEngine.SparseTensor", "MinkowskiEngine.SparseTensor", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "[].float", "numpy.random.choice", "logging.info", "[].cuda", "ddp_trainer.apply_transform", "ddp_trainer.PartitionPointNCELossTrainer.partitioner.compute_partitions_fast", "ddp_trainer.PartitionPointNCELossTrainer.partitioner.compute_partitions", "mask_q.fill_diagonal_", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "q_unique_batch.long", "k_sel_batch.long", "[].float", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "len", "int", "ddp_trainer.PartitionPointNCELossTrainer.compute_loss", "q_unique.long", "q_unique_batch.long"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.scaled_all_reduce_dict", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.apply_transform", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_partitions_fast", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_partitions", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.compute_loss"], ["", "if", "self", ".", "curr_iter", "%", "self", ".", "config", ".", "train", ".", "stat_freq", "==", "0", "or", "self", ".", "curr_iter", "==", "1", ":", "\n", "                    ", "lrs", "=", "', '", ".", "join", "(", "[", "'{:.3e}'", ".", "format", "(", "x", ")", "for", "x", "in", "self", ".", "scheduler", ".", "get_last_lr", "(", ")", "]", ")", "\n", "debug_str", "=", "\"===> Epoch[{}]({}/{}): Loss {:.4f}, Sem {:.4f}, dir {:.4f}, norm {:.4f}\\tLR: {}\\t\"", ".", "format", "(", "\n", "self", ".", "epoch", ",", "self", ".", "curr_iter", ",", "len", "(", "self", ".", "train_data_loader", ")", "//", "self", ".", "config", ".", "optimizer", ".", "iter_size", ",", "\n", "losses", "[", "'total_loss'", "]", ".", "avg", ",", "losses", "[", "'semantic_loss'", "]", ".", "avg", ",", "\n", "losses", "[", "'offset_dir_loss'", "]", ".", "avg", ",", "losses", "[", "'offset_norm_loss'", "]", ".", "avg", ",", "lrs", ")", "\n", "debug_str", "+=", "\"Score {:.3f}\\tData time: {:.4f}, Forward time: {:.4f}, Backward time: {:.4f}, DDP time: {:.4f}, Total iter time: {:.4f}\"", ".", "format", "(", "\n", "scores", ".", "avg", ",", "data_time_avg", ".", "avg", ",", "fw_time_avg", ".", "avg", ",", "bw_time_avg", ".", "avg", ",", "ddp_time_avg", ".", "avg", ",", "iter_time_avg", ".", "avg", ")", "\n", "logging", ".", "info", "(", "debug_str", ")", "\n", "# Reset timers", "\n", "data_time_avg", ".", "reset", "(", ")", "\n", "iter_time_avg", ".", "reset", "(", ")", "\n", "\n", "# Write logs", "\n", "if", "self", ".", "is_master", ":", "\n", "                      ", "self", ".", "writer", ".", "add_scalar", "(", "'train/loss'", ",", "losses", "[", "'total_loss'", "]", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/semantic_loss'", ",", "losses", "[", "'semantic_loss'", "]", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/offset_dir_loss'", ",", "losses", "[", "'offset_dir_loss'", "]", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/offset_norm_loss'", ",", "losses", "[", "'offset_norm_loss'", "]", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/precision_at_1'", ",", "scores", ".", "avg", ",", "self", ".", "curr_iter", ")", "\n", "self", ".", "writer", ".", "add_scalar", "(", "'train/learning_rate'", ",", "self", ".", "scheduler", ".", "get_last_lr", "(", ")", "[", "0", "]", ",", "self", ".", "curr_iter", ")", "\n", "\n", "# clear loss", "\n", "", "losses", "[", "'total_loss'", "]", ".", "reset", "(", ")", "\n", "losses", "[", "'semantic_loss'", "]", ".", "reset", "(", ")", "\n", "losses", "[", "'offset_dir_loss'", "]", ".", "reset", "(", ")", "\n", "losses", "[", "'offset_norm_loss'", "]", ".", "reset", "(", ")", "\n", "scores", ".", "reset", "(", ")", "\n", "\n", "# Validation", "\n", "", "if", "self", ".", "curr_iter", "%", "self", ".", "config", ".", "train", ".", "val_freq", "==", "0", "and", "self", ".", "is_master", ":", "\n", "                    ", "self", ".", "validate", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "", "if", "self", ".", "curr_iter", "%", "self", ".", "config", ".", "train", ".", "empty_cache_freq", "==", "0", ":", "\n", "# Clear cache", "\n", "                  ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "# End of iteration", "\n", "", "self", ".", "curr_iter", "+=", "1", "\n", "\n", "", "self", ".", "epoch", "+=", "1", "\n", "\n", "# Explicit memory cleanup", "\n", "", "if", "hasattr", "(", "data_iter", ",", "'cleanup'", ")", ":", "\n", "            ", "data_iter", ".", "cleanup", "(", ")", "\n", "\n", "# Save the final model", "\n", "", "if", "self", ".", "is_master", ":", "\n", "            ", "self", ".", "validate", "(", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PartitionPointNCELossTrainerPointNet._train_iter": [[405, 504], ["ddp_trainer.PartitionPointNCELossTrainerPointNet.optimizer.zero_grad", "total_timer.tic", "data_timer.tic", "data_loader_iter.next", "data_timer.toc", "points[].unique", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "ddp_trainer.PartitionPointNCELossTrainerPointNet.model", "F0.view.view.transpose().contiguous", "F0.view.view.view", "points[].unique", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "ddp_trainer.PartitionPointNCELossTrainerPointNet.model", "F1.view.view.transpose().contiguous", "F1.view.view.view", "input_dict[].to", "pos_pairs[].unique", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.distributions.Uniform().sample().to", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.floor().long", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "[].float().cuda", "range", "loss.backward", "result[].item", "ddp_trainer.PartitionPointNCELossTrainerPointNet.optimizer.step", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "total_timer.toc", "data_meter.update", "torch.stack().cuda.append", "torch.stack().cuda.append", "torch.stack().cuda.append", "torch.stack().cuda.append", "torch.stack().cuda.append", "torch.stack().cuda.append", "torch.stack().cuda.append", "torch.stack().cuda.append", "torch.stack().cuda.append", "torch.stack().cuda.append", "[].float().cuda", "range", "lib.scaled_all_reduce_dict", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "F0.view.view.transpose", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "F1.view.view.transpose", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.distributions.Uniform().sample", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "[].float", "numpy.random.choice", "logging.info", "[].cuda", "ddp_trainer.apply_transform", "ddp_trainer.PartitionPointNCELossTrainerPointNet.partitioner.compute_partitions_fast", "ddp_trainer.PartitionPointNCELossTrainerPointNet.partitioner.compute_partitions", "mask_q.fill_diagonal_", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "torch.cumsum", "q_unique_batch.long", "k_sel_batch.long", "[].float", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "torch.distributions.Uniform", "len", "int", "ddp_trainer.PartitionPointNCELossTrainerPointNet.compute_loss", "q_unique.long", "q_unique_batch.long"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.BallQuery.backward", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.scaled_all_reduce_dict", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.apply_transform", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_partitions_fast", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_partitions", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.compute_loss"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.apply_transform": [[39, 48], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.inverse", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "function", ["None"], ["            ", "logging", ".", "info", "(", "'===> Loading exsiting config file'", ")", "\n", "config", "=", "OmegaConf", ".", "load", "(", "'config.yaml'", ")", "\n", "logging", ".", "info", "(", "'===> Loaded exsiting config file'", ")", "\n", "", "logging", ".", "info", "(", "'===> Configurations'", ")", "\n", "logging", ".", "info", "(", "config", ".", "pretty", "(", ")", ")", "\n", "\n", "# dataloader", "\n", "DatasetClass", "=", "load_dataset", "(", "config", ".", "data", ".", "dataset", ")", "\n", "logging", ".", "info", "(", "'===> Initializing dataloader'", ")", "\n", "self", ".", "train_data_loader", "=", "initialize_data_loader", "(", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer._hash": [[49, 62], ["isinstance", "numpy.zeros", "range", "isinstance", "len", "len"], "function", ["None"], ["DatasetClass", ",", "config", ",", "phase", "=", "config", ".", "train", ".", "train_phase", ",", "\n", "num_workers", "=", "config", ".", "data", ".", "num_workers", ",", "augment_data", "=", "True", ",", "\n", "shuffle", "=", "True", ",", "repeat", "=", "True", ",", "batch_size", "=", "config", ".", "data", ".", "batch_size", "//", "config", ".", "misc", ".", "num_gpus", ",", "\n", "limit_numpoints", "=", "config", ".", "data", ".", "train_limit_numpoints", ")", "\n", "\n", "self", ".", "val_data_loader", "=", "initialize_data_loader", "(", "\n", "DatasetClass", ",", "config", ",", "phase", "=", "config", ".", "train", ".", "val_phase", ",", "\n", "num_workers", "=", "1", ",", "augment_data", "=", "False", ",", "\n", "shuffle", "=", "True", ",", "repeat", "=", "False", ",", "\n", "batch_size", "=", "1", ",", "limit_numpoints", "=", "False", ")", "\n", "\n", "self", ".", "test_data_loader", "=", "initialize_data_loader", "(", "\n", "DatasetClass", ",", "config", ",", "phase", "=", "config", ".", "test", ".", "test_phase", ",", "\n", "num_workers", "=", "config", ".", "data", ".", "num_workers", ",", "augment_data", "=", "False", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.load_state": [[63, 79], ["_model.load_state_dict", "lib.get_world_size", "_model.state_dict", "logging.info", "weights.update", "weights.items", "filtered_weights.keys", "v.size", "model_state[].size"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update"], ["shuffle", "=", "False", ",", "repeat", "=", "False", ",", "\n", "batch_size", "=", "config", ".", "data", ".", "test_batch_size", ",", "limit_numpoints", "=", "False", ")", "\n", "\n", "# Model initialization", "\n", "logging", ".", "info", "(", "'===> Building model'", ")", "\n", "num_in_channel", "=", "self", ".", "train_data_loader", ".", "dataset", ".", "NUM_IN_CHANNEL", "\n", "num_labels", "=", "self", ".", "train_data_loader", ".", "dataset", ".", "NUM_LABELS", "\n", "NetClass", "=", "load_model", "(", "config", ".", "net", ".", "model", ")", "\n", "model", "=", "NetClass", "(", "num_in_channel", ",", "num_labels", ",", "config", ")", "\n", "logging", ".", "info", "(", "'===> Number of trainable parameters: {}: {}'", ".", "format", "(", "NetClass", ".", "__name__", ",", "count_parameters", "(", "model", ")", ")", ")", "\n", "logging", ".", "info", "(", "model", ")", "\n", "\n", "# Load weights if specified by the parameter.", "\n", "if", "config", ".", "net", ".", "weights", "!=", "''", ":", "\n", "            ", "logging", ".", "info", "(", "'===> Loading weights: '", "+", "config", ".", "net", ".", "weights", ")", "\n", "state", "=", "torch", ".", "load", "(", "config", ".", "net", ".", "weights", ",", "map_location", "=", "lambda", "s", ",", "l", ":", "default_restore_location", "(", "s", ",", "'cpu'", ")", ")", "\n", "matched_weights", "=", "load_state_with_same_shape", "(", "model", ",", "state", "[", "'state_dict'", "]", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.shuffle_loader": [[80, 84], ["isinstance", "isinstance", "data_loader.sampler.set_epoch"], "function", ["None"], ["model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "model_dict", ".", "update", "(", "matched_weights", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "", "model", "=", "model", ".", "cuda", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.data_sampler.InfSampler.__init__": [[13, 17], ["data_sampler.InfSampler.reset_permutation"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.reset_permutation"], ["  ", "def", "__init__", "(", "self", ",", "data_source", ",", "shuffle", "=", "False", ")", ":", "\n", "    ", "self", ".", "data_source", "=", "data_source", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "reset_permutation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.data_sampler.InfSampler.reset_permutation": [[18, 23], ["len", "torch.randperm.tolist", "torch.randperm.tolist", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm"], "methods", ["None"], ["", "def", "reset_permutation", "(", "self", ")", ":", "\n", "    ", "perm", "=", "len", "(", "self", ".", "data_source", ")", "\n", "if", "self", ".", "shuffle", ":", "\n", "      ", "perm", "=", "torch", ".", "randperm", "(", "perm", ")", "\n", "", "self", ".", "_perm", "=", "perm", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.data_sampler.InfSampler.__iter__": [[24, 26], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "    ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.data_sampler.InfSampler.__next__": [[27, 31], ["data_sampler.InfSampler._perm.pop", "len", "data_sampler.InfSampler.reset_permutation"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.reset_permutation"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "    ", "if", "len", "(", "self", ".", "_perm", ")", "==", "0", ":", "\n", "      ", "self", ".", "reset_permutation", "(", ")", "\n", "", "return", "self", ".", "_perm", ".", "pop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.data_sampler.InfSampler.__len__": [[32, 34], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "data_source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.data_sampler.DistributedInfSampler.__init__": [[39, 58], ["int", "data_sampler.DistributedInfSampler.reset_permutation", "torch.get_world_size", "torch.get_world_size", "torch.get_rank", "torch.get_rank", "math.ceil", "torch.is_available", "torch.is_available", "RuntimeError", "torch.is_available", "torch.is_available", "RuntimeError", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.reset_permutation", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank"], ["  ", "def", "__init__", "(", "self", ",", "data_source", ",", "num_replicas", "=", "None", ",", "rank", "=", "None", ",", "shuffle", "=", "True", ")", ":", "\n", "    ", "if", "num_replicas", "is", "None", ":", "\n", "      ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"Requires distributed package to be available\"", ")", "\n", "", "num_replicas", "=", "dist", ".", "get_world_size", "(", ")", "\n", "", "if", "rank", "is", "None", ":", "\n", "      ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"Requires distributed package to be available\"", ")", "\n", "", "rank", "=", "dist", ".", "get_rank", "(", ")", "\n", "\n", "", "self", ".", "data_source", "=", "data_source", "\n", "self", ".", "num_replicas", "=", "num_replicas", "\n", "self", ".", "rank", "=", "rank", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "it", "=", "0", "\n", "self", ".", "num_samples", "=", "int", "(", "math", ".", "ceil", "(", "len", "(", "self", ".", "data_source", ")", "*", "1.0", "/", "self", ".", "num_replicas", ")", ")", "\n", "self", ".", "total_size", "=", "self", ".", "num_samples", "*", "self", ".", "num_replicas", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "reset_permutation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.data_sampler.DistributedInfSampler.__next__": [[59, 68], ["len", "data_sampler.DistributedInfSampler.reset_permutation", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.reset_permutation"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "    ", "it", "=", "self", ".", "it", "*", "self", ".", "num_replicas", "+", "self", ".", "rank", "\n", "value", "=", "self", ".", "_perm", "[", "it", "%", "len", "(", "self", ".", "_perm", ")", "]", "\n", "self", ".", "it", "=", "self", ".", "it", "+", "1", "\n", "\n", "if", "(", "self", ".", "it", "*", "self", ".", "num_replicas", ")", ">=", "len", "(", "self", ".", "_perm", ")", ":", "\n", "      ", "self", ".", "reset_permutation", "(", ")", "\n", "self", ".", "it", "=", "0", "\n", "", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.data_sampler.DistributedInfSampler.__len__": [[69, 71], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "num_samples", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.__init__": [[13, 15], ["timer.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.reset": [[16, 22], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "    ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0.0", "\n", "self", ".", "sq_sum", "=", "0.0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.AverageMeter.update": [[23, 30], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "    ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "self", ".", "sq_sum", "+=", "val", "**", "2", "*", "n", "\n", "self", ".", "var", "=", "self", ".", "sq_sum", "/", "self", ".", "count", "-", "self", ".", "avg", "**", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.__init__": [[35, 41], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "total_time", "=", "0.", "\n", "self", ".", "calls", "=", "0", "\n", "self", ".", "start_time", "=", "0.", "\n", "self", ".", "diff", "=", "0.", "\n", "self", ".", "avg", "=", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.reset": [[42, 48], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "    ", "self", ".", "total_time", "=", "0", "\n", "self", ".", "calls", "=", "0", "\n", "self", ".", "start_time", "=", "0", "\n", "self", ".", "diff", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic": [[49, 53], ["time.time"], "methods", ["None"], ["", "def", "tic", "(", "self", ")", ":", "\n", "# using time.time instead of time.clock because time time.clock", "\n", "# does not normalize for multithreading", "\n", "    ", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc": [[54, 63], ["time.time"], "methods", ["None"], ["", "def", "toc", "(", "self", ",", "average", "=", "True", ")", ":", "\n", "    ", "self", ".", "diff", "=", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", "\n", "self", ".", "total_time", "+=", "self", ".", "diff", "\n", "self", ".", "calls", "+=", "1", "\n", "self", ".", "avg", "=", "self", ".", "total_time", "/", "self", ".", "calls", "\n", "if", "average", ":", "\n", "      ", "return", "self", ".", "avg", "\n", "", "else", ":", "\n", "      ", "return", "self", ".", "diff", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.__init__": [[11, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "r1", "=", "0.125", ",", "r2", "=", "2", ",", "nbins_xy", "=", "2", ",", "nbins_zy", "=", "2", ")", ":", "\n", "# right-hand rule", "\n", "        ", "\"\"\"\n        nbins_xy >= 2\n        nbins_zy >= 1\n        \"\"\"", "\n", "self", ".", "r1", "=", "r1", "\n", "self", ".", "r2", "=", "r2", "\n", "self", ".", "nbins_xy", "=", "nbins_xy", "\n", "self", ".", "nbins_zy", "=", "nbins_zy", "\n", "self", ".", "partitions", "=", "nbins_xy", "*", "nbins_zy", "*", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.pdist": [[23, 27], ["torch.sum", "torch.sqrt", "rel_trans.pow"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "pdist", "(", "rel_trans", ")", ":", "\n", "        ", "D2", "=", "torch", ".", "sum", "(", "rel_trans", ".", "pow", "(", "2", ")", ",", "2", ")", "\n", "return", "torch", ".", "sqrt", "(", "D2", "+", "1e-7", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_rel_trans": [[28, 31], ["A.unsqueeze", "B.unsqueeze"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "compute_rel_trans", "(", "A", ",", "B", ")", ":", "\n", "        ", "return", "A", ".", "unsqueeze", "(", "0", ")", "-", "B", ".", "unsqueeze", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.hash": [[32, 42], ["torch.zeros_like"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "hash", "(", "A", ",", "B", ",", "seed", ")", ":", "\n", "        ", "'''\n        seed = bins of B\n        entry < 0 will be ignored\n        '''", "\n", "mask", "=", "(", "A", ">=", "0", ")", "&", "(", "B", ">=", "0", ")", "\n", "C", "=", "torch", ".", "zeros_like", "(", "A", ")", "-", "1", "\n", "C", "[", "mask", "]", "=", "A", "[", "mask", "]", "*", "seed", "+", "B", "[", "mask", "]", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_angles": [[44, 56], ["torch.atan2", "torch.fmod", "torch.atan2", "torch.fmod"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "compute_angles", "(", "rel_trans", ")", ":", "\n", "        ", "\"\"\" compute angles between a set of points \"\"\"", "\n", "angles_xy", "=", "torch", ".", "atan2", "(", "rel_trans", "[", ":", ",", ":", ",", "1", "]", ",", "rel_trans", "[", ":", ",", ":", ",", "0", "]", ")", "\n", "#angles between 0, 2*pi", "\n", "angles_xy", "=", "torch", ".", "fmod", "(", "angles_xy", "+", "2", "*", "math", ".", "pi", ",", "2", "*", "math", ".", "pi", ")", "\n", "\n", "angles_zy", "=", "torch", ".", "atan2", "(", "rel_trans", "[", ":", ",", ":", ",", "1", "]", ",", "rel_trans", "[", ":", ",", ":", ",", "2", "]", ")", "\n", "#angles between 0, pi", "\n", "angles_zy", "=", "torch", ".", "fmod", "(", "angles_zy", "+", "2", "*", "math", ".", "pi", ",", "math", ".", "pi", ")", "\n", "\n", "return", "angles_xy", ",", "angles_zy", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_partitions": [[57, 78], ["shape_context.ShapeContext.compute_rel_trans", "shape_context.ShapeContext.compute_angles", "torch.floor", "torch.floor", "shape_context.ShapeContext.hash", "shape_context.ShapeContext.pdist", "shape_context.ShapeContext.hash", "torch.zeros_like"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_rel_trans", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_angles", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.hash", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.pdist", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.hash"], ["", "def", "compute_partitions", "(", "self", ",", "xyz", ")", ":", "\n", "        ", "rel_trans", "=", "ShapeContext", ".", "compute_rel_trans", "(", "xyz", ",", "xyz", ")", "\n", "\n", "# angles", "\n", "angles_xy", ",", "angles_zy", "=", "ShapeContext", ".", "compute_angles", "(", "rel_trans", ")", "\n", "angles_xy_bins", "=", "torch", ".", "floor", "(", "angles_xy", "/", "(", "2", "*", "math", ".", "pi", "/", "self", ".", "nbins_xy", ")", ")", "\n", "angles_zy_bins", "=", "torch", ".", "floor", "(", "angles_zy", "/", "(", "math", ".", "pi", "/", "self", ".", "nbins_zy", ")", ")", "\n", "angles_bins", "=", "ShapeContext", ".", "hash", "(", "angles_xy_bins", ",", "angles_zy_bins", ",", "self", ".", "nbins_zy", ")", "\n", "\n", "# distances", "\n", "distance_matrix", "=", "ShapeContext", ".", "pdist", "(", "rel_trans", ")", "\n", "dist_bins", "=", "torch", ".", "zeros_like", "(", "angles_bins", ")", "-", "1", "\n", "\n", "# partitions", "\n", "mask", "=", "(", "distance_matrix", ">=", "self", ".", "r1", ")", "&", "(", "distance_matrix", "<", "self", ".", "r2", ")", "\n", "dist_bins", "[", "mask", "]", "=", "0", "\n", "mask", "=", "distance_matrix", ">=", "self", ".", "r2", "\n", "dist_bins", "[", "mask", "]", "=", "1", "\n", "\n", "bins", "=", "ShapeContext", ".", "hash", "(", "dist_bins", ",", "angles_bins", ",", "self", ".", "nbins_xy", "*", "self", ".", "nbins_zy", ")", "\n", "return", "bins", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_partitions_fast": [[80, 104], ["torch.zeros", "shape_context.ShapeContext.compute_rel_trans", "shape_context.ShapeContext.pdist", "torch.zeros.cuda"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.compute_rel_trans", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.shape_context.ShapeContext.pdist"], ["", "def", "compute_partitions_fast", "(", "self", ",", "xyz", ")", ":", "\n", "        ", "'''\n        fast partitions:  axis-aligned partitions\n        '''", "\n", "\n", "partition_matrix", "=", "torch", ".", "zeros", "(", "(", "xyz", ".", "shape", "[", "0", "]", ",", "xyz", ".", "shape", "[", "0", "]", ")", ")", "\n", "partition_matrix", "=", "partition_matrix", ".", "cuda", "(", ")", "-", "1e9", "\n", "\n", "rel_trans", "=", "ShapeContext", ".", "compute_rel_trans", "(", "xyz", ",", "xyz", ")", "\n", "maskUp", "=", "rel_trans", "[", ":", ",", ":", ",", "2", "]", ">", "0.0", "\n", "maskDown", "=", "rel_trans", "[", ":", ",", ":", ",", "2", "]", "<", "0.0", "\n", "\n", "distance_matrix", "=", "ShapeContext", ".", "pdist", "(", "rel_trans", ")", "\n", "\n", "mask", "=", "(", "distance_matrix", "[", ":", ",", ":", "]", ">", "self", ".", "r1", ")", "&", "(", "distance_matrix", "[", ":", ",", ":", "]", "<=", "self", ".", "r2", ")", "\n", "partition_matrix", "[", "mask", "&", "maskUp", "]", "=", "0", "\n", "partition_matrix", "[", "mask", "&", "maskDown", "]", "=", "1", "\n", "\n", "mask", "=", "distance_matrix", "[", ":", ",", ":", "]", ">", "self", ".", "r2", "\n", "partition_matrix", "[", "mask", "&", "maskUp", "]", "=", "2", "\n", "partition_matrix", "[", "mask", "&", "maskDown", "]", "=", "3", "\n", "self", ".", "partitions", "=", "4", "\n", "\n", "return", "partition_matrix", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.multiprocessing_utils.run": [[19, 37], ["lib.init_process_group", "fun", "lib.destroy_process_group", "error_queue.put", "traceback.format_exc"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.init_process_group", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.destroy_process_group"], ["def", "run", "(", "proc_rank", ",", "world_size", ",", "error_queue", ",", "fun", ",", "fun_args", ",", "fun_kwargs", ")", ":", "\n", "# Initialize the process group", "\n", "\n", "    ", "\"\"\"Runs a function from a child process.\"\"\"", "\n", "try", ":", "\n", "# Initialize the process group", "\n", "        ", "du", ".", "init_process_group", "(", "proc_rank", ",", "world_size", ")", "\n", "# Run the function", "\n", "fun", "(", "*", "fun_args", ",", "**", "fun_kwargs", ")", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "# Killed by the parent process", "\n", "        ", "pass", "\n", "", "except", "Exception", ":", "\n", "# Propagate exception to the parent process", "\n", "        ", "error_queue", ".", "put", "(", "traceback", ".", "format_exc", "(", ")", ")", "\n", "", "finally", ":", "\n", "# Destroy the process group", "\n", "        ", "du", ".", "destroy_process_group", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.multiprocessing_utils.multi_proc_run": [[39, 60], ["multiprocessing.SimpleQueue", "lib.error_handler.ErrorHandler", "range", "multiprocessing.Process", "ps.append", "mp.Process.start", "lib.error_handler.ErrorHandler.add_child", "p.join"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.error_handler.ErrorHandler.add_child"], ["", "", "def", "multi_proc_run", "(", "num_proc", ",", "fun", ",", "fun_args", "=", "(", ")", ",", "fun_kwargs", "=", "{", "}", ")", ":", "\n", "    ", "\"\"\"Runs a function in a multi-proc setting.\"\"\"", "\n", "\n", "# Handle errors from training subprocesses", "\n", "error_queue", "=", "mp", ".", "SimpleQueue", "(", ")", "\n", "error_handler", "=", "ErrorHandler", "(", "error_queue", ")", "\n", "\n", "# Run each training subprocess", "\n", "ps", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_proc", ")", ":", "\n", "        ", "p_i", "=", "mp", ".", "Process", "(", "\n", "target", "=", "run", ",", "\n", "args", "=", "(", "i", ",", "num_proc", ",", "error_queue", ",", "fun", ",", "fun_args", ",", "fun_kwargs", ")", "\n", ")", "\n", "ps", ".", "append", "(", "p_i", ")", "\n", "p_i", ".", "start", "(", ")", "\n", "error_handler", ".", "add_child", "(", "p_i", ".", "pid", ")", "\n", "\n", "# Wait for each subprocess to finish", "\n", "", "for", "p", "in", "ps", ":", "\n", "        ", "p", ".", "join", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.error_handler.ChildException.__init__": [[19, 21], ["Exception.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "child_trace", ")", ":", "\n", "        ", "super", "(", "ChildException", ",", "self", ")", ".", "__init__", "(", "child_trace", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.error_handler.ErrorHandler.__init__": [[30, 40], ["threading.Thread", "error_handler.ErrorHandler.error_listener.start", "signal.signal"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "error_queue", ")", ":", "\n", "# Shared error queue", "\n", "        ", "self", ".", "error_queue", "=", "error_queue", "\n", "# Children processes sharing the error queue", "\n", "self", ".", "children_pids", "=", "[", "]", "\n", "# Start a thread listening to errors", "\n", "self", ".", "error_listener", "=", "threading", ".", "Thread", "(", "target", "=", "self", ".", "listen", ",", "daemon", "=", "True", ")", "\n", "self", ".", "error_listener", ".", "start", "(", ")", "\n", "# Register the signal handler", "\n", "signal", ".", "signal", "(", "signal", ".", "SIGUSR1", ",", "self", ".", "signal_handler", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.error_handler.ErrorHandler.add_child": [[41, 44], ["error_handler.ErrorHandler.children_pids.append"], "methods", ["None"], ["", "def", "add_child", "(", "self", ",", "pid", ")", ":", "\n", "        ", "\"\"\"Registers a child process.\"\"\"", "\n", "self", ".", "children_pids", ".", "append", "(", "pid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.error_handler.ErrorHandler.listen": [[45, 53], ["error_handler.ErrorHandler.error_queue.get", "error_handler.ErrorHandler.error_queue.put", "os.kill", "os.getpid"], "methods", ["None"], ["", "def", "listen", "(", "self", ")", ":", "\n", "        ", "\"\"\"Listens for errors in the error queue.\"\"\"", "\n", "# Wait until there is an error in the queue", "\n", "child_trace", "=", "self", ".", "error_queue", ".", "get", "(", ")", "\n", "# Put the error back for the signal handler", "\n", "self", ".", "error_queue", ".", "put", "(", "child_trace", ")", "\n", "# Invoke the signal handler", "\n", "os", ".", "kill", "(", "os", ".", "getpid", "(", ")", ",", "signal", ".", "SIGUSR1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.error_handler.ErrorHandler.signal_handler": [[54, 61], ["error_handler.ChildException", "os.kill", "error_handler.ErrorHandler.error_queue.get"], "methods", ["None"], ["", "def", "signal_handler", "(", "self", ",", "sig_num", ",", "stack_frame", ")", ":", "\n", "        ", "\"\"\"Signal handler.\"\"\"", "\n", "# Kill children processes", "\n", "for", "pid", "in", "self", ".", "children_pids", ":", "\n", "            ", "os", ".", "kill", "(", "pid", ",", "signal", ".", "SIGINT", ")", "\n", "# Propagate the error from the child process", "\n", "", "raise", "ChildException", "(", "self", ".", "error_queue", ".", "get", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.criterion.NCESoftmaxLoss.__init__": [[10, 13], ["torch.nn.Module.__init__", "torch.nn.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NCESoftmaxLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.criterion.NCESoftmaxLoss.forward": [[14, 19], ["x.squeeze.squeeze.squeeze", "criterion.NCESoftmaxLoss.criterion"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "label", ")", ":", "\n", "        ", "bsz", "=", "x", ".", "shape", "[", "0", "]", "\n", "x", "=", "x", ".", "squeeze", "(", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "x", ",", "label", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.BallQueryBatchP.forward": [[13, 42], ["coords.size", "coords.is_contiguous", "batch_idxs.is_contiguous", "batch_offsets.is_contiguous", "torch.cuda.IntTensor().zero_", "torch.cuda.IntTensor().zero_", "PG_OP.ballquery_batch_p", "int", "torch.cuda.IntTensor", "torch.cuda.IntTensor"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "coords", ",", "batch_idxs", ",", "batch_offsets", ",", "radius", ",", "meanActive", ")", ":", "\n", "        ", "'''\n        :param ctx:\n        :param coords: (n, 3) float\n        :param batch_idxs: (n) int\n        :param batch_offsets: (B+1) int\n        :param radius: float\n        :param meanActive: int\n        :return: idx (nActive), int\n        :return: start_len (n, 2), int\n        '''", "\n", "\n", "n", "=", "coords", ".", "size", "(", "0", ")", "\n", "\n", "assert", "coords", ".", "is_contiguous", "(", ")", "and", "coords", ".", "is_cuda", "\n", "assert", "batch_idxs", ".", "is_contiguous", "(", ")", "and", "batch_idxs", ".", "is_cuda", "\n", "assert", "batch_offsets", ".", "is_contiguous", "(", ")", "and", "batch_offsets", ".", "is_cuda", "\n", "\n", "while", "True", ":", "\n", "            ", "idx", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "n", "*", "meanActive", ")", ".", "zero_", "(", ")", "\n", "start_len", "=", "torch", ".", "cuda", ".", "IntTensor", "(", "n", ",", "2", ")", ".", "zero_", "(", ")", "\n", "nActive", "=", "PG_OP", ".", "ballquery_batch_p", "(", "coords", ",", "batch_idxs", ",", "batch_offsets", ",", "idx", ",", "start_len", ",", "n", ",", "meanActive", ",", "radius", ")", "\n", "if", "nActive", "<=", "n", "*", "meanActive", ":", "\n", "                ", "break", "\n", "", "meanActive", "=", "int", "(", "nActive", "//", "n", "+", "1", ")", "\n", "", "idx", "=", "idx", "[", ":", "nActive", "]", "\n", "\n", "return", "idx", ",", "start_len", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.BallQueryBatchP.backward": [[43, 46], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "a", "=", "None", ",", "b", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.BFSCluster.forward": [[51, 74], ["start_len.size", "semantic_label.is_contiguous", "ball_query_idxs.is_contiguous", "start_len.is_contiguous", "semantic_label.new", "semantic_label.new", "PG_OP.bfs_cluster"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "semantic_label", ",", "ball_query_idxs", ",", "start_len", ",", "threshold", ")", ":", "\n", "        ", "'''\n        :param ctx:\n        :param semantic_label: (N), int\n        :param ball_query_idxs: (nActive), int\n        :param start_len: (N, 2), int\n        :return: cluster_idxs:  int (sumNPoint, 2), dim 0 for cluster_id, dim 1 for corresponding point idxs in N\n        :return: cluster_offsets: int (nCluster + 1)\n        '''", "\n", "\n", "N", "=", "start_len", ".", "size", "(", "0", ")", "\n", "\n", "assert", "semantic_label", ".", "is_contiguous", "(", ")", "\n", "assert", "ball_query_idxs", ".", "is_contiguous", "(", ")", "\n", "assert", "start_len", ".", "is_contiguous", "(", ")", "\n", "\n", "cluster_idxs", "=", "semantic_label", ".", "new", "(", ")", "\n", "cluster_offsets", "=", "semantic_label", ".", "new", "(", ")", "\n", "\n", "PG_OP", ".", "bfs_cluster", "(", "semantic_label", ",", "ball_query_idxs", ",", "start_len", ",", "cluster_idxs", ",", "cluster_offsets", ",", "N", ",", "threshold", ")", "\n", "\n", "return", "cluster_idxs", ",", "cluster_offsets", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.BFSCluster.backward": [[75, 78], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "a", "=", "None", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.Clustering.__init__": [[84, 96], ["class_mapping.cuda"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ignored_labels", ",", "class_mapping", ",", "thresh", "=", "0.03", ",", "\n", "closed_points", "=", "300", ",", "\n", "min_points", "=", "50", ",", "\n", "propose_points", "=", "100", ",", "\n", "score_func", "=", "torch", ".", "max", ")", "->", "None", ":", "\n", "        ", "self", ".", "ignored_labels", "=", "ignored_labels", "\n", "self", ".", "thresh", "=", "thresh", "\n", "self", ".", "closed_points", "=", "closed_points", "\n", "self", ".", "min_points", "=", "min_points", "\n", "self", ".", "class_mapping", "=", "class_mapping", ".", "cuda", "(", ")", "\n", "self", ".", "propose_points", "=", "propose_points", "\n", "self", ".", "score_func", "=", "score_func", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.Clustering.cluster": [[97, 117], ["bfs.Clustering.cluster_", "torch.zeros", "torch.zeros.sum", "torch.max", "labels.cuda", "[].long", "proposals_idx[].long", "proposals_idx[].long", "proposals_offset[].long"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.Clustering.cluster_"], ["", "def", "cluster", "(", "self", ",", "vertices", ",", "scores", ")", ":", "\n", "        ", "labels", "=", "torch", ".", "max", "(", "scores", ",", "1", ")", "[", "1", "]", "# (N) long, cuda", "\n", "proposals_idx", ",", "proposals_offset", "=", "self", ".", "cluster_", "(", "vertices", ",", "labels", ".", "cuda", "(", ")", ")", "\n", "\n", "## debug", "\n", "#import ipdb; ipdb.set_trace()", "\n", "#colors = np.array(create_color_palette())[labels.cpu()]", "\n", "#write_triangle_mesh(vertices, colors, None, 'semantics.ply')", "\n", "\n", "# scatter", "\n", "proposals_pred", "=", "torch", ".", "zeros", "(", "(", "proposals_offset", ".", "shape", "[", "0", "]", "-", "1", ",", "vertices", ".", "shape", "[", "0", "]", ")", ",", "dtype", "=", "torch", ".", "int", ")", "# (nProposal, N), int, cuda", "\n", "proposals_pred", "[", "proposals_idx", "[", ":", ",", "0", "]", ".", "long", "(", ")", ",", "proposals_idx", "[", ":", ",", "1", "]", ".", "long", "(", ")", "]", "=", "1", "\n", "labels", "=", "labels", "[", "proposals_idx", "[", ":", ",", "1", "]", "[", "proposals_offset", "[", ":", "-", "1", "]", ".", "long", "(", ")", "]", ".", "long", "(", ")", "]", "\n", "\n", "proposals_pointnum", "=", "proposals_pred", ".", "sum", "(", "1", ")", "\n", "npoint_mask", "=", "(", "proposals_pointnum", ">", "self", ".", "propose_points", ")", "\n", "\n", "proposals_pred", "=", "proposals_pred", "[", "npoint_mask", "]", "\n", "labels", "=", "labels", "[", "npoint_mask", "]", "\n", "return", "proposals_pred", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.Clustering.cluster_": [[118, 145], ["torch.zeros_like", "torch.ones_like().bool", "torch.ones_like().bool.nonzero().view", "[].float().cuda", "labels[].int().cuda", "batch_idxs[].int().cuda", "torch.FloatTensor().int().cuda", "ballquery_batch_p", "bfs_cluster", "object_idxs[].int", "[].float().cuda.numel", "labels[].int().cuda.cpu", "idx.cpu", "start_len.cpu", "torch.ones_like", "torch.ones_like().bool.nonzero", "[].float", "labels[].int", "torch.zeros().int", "torch.zeros().int", "batch_idxs[].int", "torch.FloatTensor().int", "torch.zeros", "torch.zeros", "torch.FloatTensor", "proposals_idx[].long", "torch.from_numpy"], "methods", ["None"], ["", "def", "cluster_", "(", "self", ",", "vertices", ",", "labels", ")", ":", "\n", "        ", "'''\n            :param batch_idxs: (N), int, cuda\n            :labels: 0-19\n        '''", "\n", "batch_idxs", "=", "torch", ".", "zeros_like", "(", "labels", ")", "\n", "\n", "\n", "mask_non_ignored", "=", "torch", ".", "ones_like", "(", "labels", ")", ".", "bool", "(", ")", "\n", "for", "ignored_label", "in", "self", ".", "ignored_labels", ":", "\n", "            ", "mask_non_ignored", "=", "mask_non_ignored", "&", "(", "self", ".", "class_mapping", "[", "labels", "]", "!=", "ignored_label", ")", "\n", "", "object_idxs", "=", "mask_non_ignored", ".", "nonzero", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "vertices_", "=", "torch", ".", "from_numpy", "(", "vertices", ")", "[", "object_idxs", "]", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "labels_", "=", "labels", "[", "object_idxs", "]", ".", "int", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "if", "vertices_", ".", "numel", "(", ")", "==", "0", ":", "\n", "            ", "return", "torch", ".", "zeros", "(", "(", "0", ",", "2", ")", ")", ".", "int", "(", ")", ",", "torch", ".", "zeros", "(", "1", ")", ".", "int", "(", ")", "\n", "\n", "", "batch_idxs_", "=", "batch_idxs", "[", "object_idxs", "]", ".", "int", "(", ")", ".", "cuda", "(", ")", "\n", "batch_offsets_", "=", "torch", ".", "FloatTensor", "(", "[", "0", ",", "object_idxs", ".", "shape", "[", "0", "]", "]", ")", ".", "int", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "idx", ",", "start_len", "=", "ballquery_batch_p", "(", "vertices_", ",", "batch_idxs_", ",", "batch_offsets_", ",", "self", ".", "thresh", ",", "self", ".", "closed_points", ")", "\n", "proposals_idx", ",", "proposals_offset", "=", "bfs_cluster", "(", "labels_", ".", "cpu", "(", ")", ",", "idx", ".", "cpu", "(", ")", ",", "start_len", ".", "cpu", "(", ")", ",", "self", ".", "min_points", ")", "\n", "proposals_idx", "[", ":", ",", "1", "]", "=", "object_idxs", "[", "proposals_idx", "[", ":", ",", "1", "]", ".", "long", "(", ")", "]", ".", "int", "(", ")", "\n", "\n", "return", "proposals_idx", ",", "proposals_offset", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.Clustering.get_instances": [[146, 158], ["bfs.Clustering.cluster", "range", "len", "bfs.Clustering.score_func", "bfs.Clustering.cpu().numpy", "clusters_i.cpu().numpy", "bfs.Clustering.class_mapping.cpu", "bfs.Clustering.cpu", "clusters_i.cpu", "clusters_i.bool"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.bfs.bfs.Clustering.cluster"], ["", "def", "get_instances", "(", "self", ",", "vertices", ",", "scores", ")", ":", "\n", "        ", "proposals_pred", ",", "labels", "=", "self", ".", "cluster", "(", "vertices", ",", "scores", ")", "\n", "instances", "=", "{", "}", "\n", "for", "proposal_id", "in", "range", "(", "len", "(", "proposals_pred", ")", ")", ":", "\n", "            ", "clusters_i", "=", "proposals_pred", "[", "proposal_id", "]", "\n", "score", "=", "scores", "[", "clusters_i", ".", "bool", "(", ")", ",", "labels", "[", "proposal_id", "]", "]", "\n", "score", "=", "self", ".", "score_func", "(", "score", ")", "\n", "instances", "[", "proposal_id", "]", "=", "{", "}", "\n", "instances", "[", "proposal_id", "]", "[", "'conf'", "]", "=", "score", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "instances", "[", "proposal_id", "]", "[", "'label_id'", "]", "=", "self", ".", "class_mapping", ".", "cpu", "(", ")", "[", "labels", "[", "proposal_id", "]", "]", "\n", "instances", "[", "proposal_id", "]", "[", "'pred_mask'", "]", "=", "clusters_i", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "return", "instances", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.synthia.SynthiaDataset.__init__": [[22, 26], ["lib.dataset.DictDataset.__init__", "open", "pickle.load"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["from", "lib", ".", "utils", "import", "read_txt", ",", "debug_on", "\n", "\n", "\n", "class", "SynthiaDataset", "(", "DictDataset", ")", ":", "\n", "  ", "NUM_LABELS", "=", "16", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.synthia.SynthiaDataset.load_extrinsics": [[27, 35], ["lib.utils.read_txt", "numpy.asarray().reshape", "float", "lines[].split", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.read_txt"], ["\n", "def", "__init__", "(", "self", ",", "data_path_file", ",", "input_transform", "=", "None", ",", "target_transform", "=", "None", ")", ":", "\n", "    ", "with", "open", "(", "data_path_file", ",", "'r'", ")", "as", "f", ":", "\n", "      ", "data_paths", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "super", "(", "SynthiaDataset", ",", "self", ")", ".", "__init__", "(", "data_paths", ",", "input_transform", ",", "target_transform", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "load_extrinsics", "(", "extrinsics_file", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.synthia.SynthiaDataset.load_intrinsics": [[36, 53], ["lib.utils.read_txt", "len", "float", "float", "float", "float"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.read_txt"], ["\n", "lines", "=", "read_txt", "(", "extrinsics_file", ")", "\n", "params", "=", "[", "float", "(", "x", ")", "for", "x", "in", "lines", "[", "0", "]", ".", "split", "(", "' '", ")", "]", "\n", "extrinsics_matrix", "=", "np", ".", "asarray", "(", "params", ")", ".", "reshape", "(", "[", "4", ",", "4", "]", ")", "\n", "return", "extrinsics_matrix", "\n", "\n", "", "@", "staticmethod", "\n", "def", "load_intrinsics", "(", "intrinsics_file", ")", ":", "\n", "    ", "\"\"\"Load the camera intrinsics from a intrinsics.txt file.\n\n    intrinsics.txt: a text file containing 4 values that represent (in this order) {focal length,\n                    principal-point-x, principal-point-y, baseline (m) with the corresponding right\n                    camera}\n    \"\"\"", "\n", "lines", "=", "read_txt", "(", "intrinsics_file", ")", "\n", "assert", "len", "(", "lines", ")", "==", "7", "\n", "intrinsics", "=", "{", "\n", "'focal_length'", ":", "float", "(", "lines", "[", "0", "]", ")", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.synthia.SynthiaDataset.load_depth": [[54, 65], ["numpy.asarray", "img.astype.astype.astype", "imageio.imread"], "methods", ["None"], ["'pp_x'", ":", "float", "(", "lines", "[", "2", "]", ")", ",", "\n", "'pp_y'", ":", "float", "(", "lines", "[", "4", "]", ")", ",", "\n", "'baseline'", ":", "float", "(", "lines", "[", "6", "]", ")", ",", "\n", "}", "\n", "return", "intrinsics", "\n", "\n", "", "@", "staticmethod", "\n", "def", "load_depth", "(", "depth_file", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.synthia.SynthiaDataset.load_label": [[66, 96], ["numpy.asarray", "img.astype.astype.astype", "imageio.imread"], "methods", ["None"], ["\n", "img", "=", "np", ".", "asarray", "(", "imageio", ".", "imread", "(", "depth_file", ",", "format", "=", "'PNG-FI'", ")", ")", "# uint16", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "int32", ")", "# Convert to int32 for torch compatibility", "\n", "return", "img", "\n", "\n", "", "@", "staticmethod", "\n", "def", "load_label", "(", "label_file", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.synthia.SynthiaDataset.load_rgb": [[97, 105], ["numpy.array", "imageio.imread"], "methods", ["None"], ["\n", "img", "=", "np", ".", "asarray", "(", "imageio", ".", "imread", "(", "label_file", ",", "format", "=", "'PNG-FI'", ")", ")", "# uint16", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "int32", ")", "# Convert to int32 for torch compatibility", "\n", "return", "img", "\n", "\n", "", "@", "staticmethod", "\n", "def", "load_rgb", "(", "rgb_file", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.synthia.SynthiaVoxelizationDataset.__init__": [[161, 190], ["isinstance", "lib.utils.read_txt", "logging.info", "lib.dataset.VoxelizationDataset.__init__", "lib.dataset.str2datasetphase_type", "os.join", "os.join", "d.split", "int", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.read_txt", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.str2datasetphase_type"], ["DATA_PATH_FILE", "=", "{", "\n", "DatasetPhase", ".", "Train", ":", "'train_cvpr19.txt'", ",", "\n", "DatasetPhase", ".", "Val", ":", "'val_cvpr19.txt'", ",", "\n", "DatasetPhase", ".", "Test", ":", "'test_cvpr19.txt'", "\n", "}", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "config", ",", "\n", "prevoxel_transform", "=", "None", ",", "\n", "input_transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "augment_data", "=", "True", ",", "\n", "elastic_distortion", "=", "False", ",", "\n", "cache", "=", "False", ",", "\n", "phase", "=", "DatasetPhase", ".", "Train", ")", ":", "\n", "    ", "if", "isinstance", "(", "phase", ",", "str", ")", ":", "\n", "      ", "phase", "=", "str2datasetphase_type", "(", "phase", ")", "\n", "", "if", "phase", "not", "in", "[", "DatasetPhase", ".", "Train", ",", "DatasetPhase", ".", "TrainVal", "]", ":", "\n", "      ", "self", ".", "CLIP_BOUND", "=", "self", ".", "TEST_CLIP_BOUND", "\n", "", "data_root", "=", "config", ".", "data", ".", "synthia_path", "\n", "data_paths", "=", "read_txt", "(", "osp", ".", "join", "(", "'/checkpoint/jihou/data/synthia4d/splits'", ",", "self", ".", "DATA_PATH_FILE", "[", "phase", "]", ")", ")", "\n", "if", "phase", "==", "DatasetPhase", ".", "Train", ":", "\n", "      ", "data_paths", "=", "data_paths", "[", ":", "int", "(", "len", "(", "data_paths", ")", "*", "config", ".", "data", ".", "data_ratio", ")", "]", "\n", "", "data_paths", "=", "[", "d", ".", "split", "(", ")", "[", "0", "]", "for", "d", "in", "data_paths", "]", "\n", "logging", ".", "info", "(", "'Loading {}: {}'", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ",", "self", ".", "DATA_PATH_FILE", "[", "phase", "]", ")", ")", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "data_paths", ",", "\n", "data_root", "=", "data_root", ",", "\n", "input_transform", "=", "input_transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.synthia.SynthiaVoxelizationDataset.load_data": [[191, 200], ["plyfile.PlyData.read", "numpy.array", "numpy.zeros_like", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["ignore_label", "=", "config", ".", "data", ".", "ignore_label", ",", "\n", "return_transformation", "=", "config", ".", "data", ".", "return_transformation", ",", "\n", "augment_data", "=", "augment_data", ",", "\n", "elastic_distortion", "=", "elastic_distortion", ",", "\n", "config", "=", "config", ")", "\n", "\n", "", "def", "load_data", "(", "self", ",", "index", ")", ":", "\n", "    ", "filepath", "=", "self", ".", "data_root", "/", "self", ".", "data_paths", "[", "index", "]", "\n", "plydata", "=", "PlyData", ".", "read", "(", "filepath", ")", "\n", "data", "=", "plydata", ".", "elements", "[", "0", "]", ".", "data", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.synthia.TestSynthia.test": [[220, 244], ["lib.utils.debug_on", "get_config", "synthia.SynthiaVoxelizationDataset", "Timer", "DataLoader", "DataLoader.__iter__", "range", "Timer.tic", "DataLoader.__iter__.next", "print", "lib.transforms.cfl_collate_fn_factory", "Timer.toc"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.debug_on", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.config.get_config", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__iter__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.toc"], ["DatasetPhase", ".", "Test", ":", "'test_raw.txt'", "\n", "}", "\n", "\n", "\n", "", "class", "TestSynthia", "(", "unittest", ".", "TestCase", ")", ":", "\n", "\n", "  ", "@", "debug_on", "(", ")", "\n", "def", "test", "(", "self", ")", ":", "\n", "    ", "from", "torch", ".", "utils", ".", "data", "import", "DataLoader", "\n", "from", "lib", ".", "utils", "import", "Timer", "\n", "from", "config", "import", "get_config", "\n", "config", "=", "get_config", "(", ")", "\n", "\n", "dataset", "=", "SynthiaVoxelizationDataset", "(", "config", ")", "\n", "timer", "=", "Timer", "(", ")", "\n", "\n", "data_loader", "=", "DataLoader", "(", "\n", "dataset", "=", "dataset", ",", "\n", "collate_fn", "=", "cfl_collate_fn_factory", "(", "limit_numpoints", "=", "False", ")", ",", "\n", "num_workers", "=", "0", ",", "\n", "batch_size", "=", "4", ",", "\n", "shuffle", "=", "True", ")", "\n", "\n", "# Start from index 1", "\n", "# for i, batch in enumerate(data_loader, 1):", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ChromaticTranslation.__init__": [[21, 26], ["None"], "methods", ["None"], ["##############################", "\n", "# Feature transformations", "\n", "##############################", "\n", "class", "ChromaticTranslation", "(", "object", ")", ":", "\n", "  ", "\"\"\"Add random color to the image, input must be an array in [0,255] or a PIL image\"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ChromaticTranslation.__call__": [[27, 32], ["random.random", "numpy.clip", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip"], ["def", "__init__", "(", "self", ",", "trans_range_ratio", "=", "1e-1", ")", ":", "\n", "    ", "\"\"\"\n    trans_range_ratio: ratio of translation i.e. 255 * 2 * ratio * rand(-0.5, 0.5)\n    \"\"\"", "\n", "self", ".", "trans_range_ratio", "=", "trans_range_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ChromaticAutoContrast.__init__": [[36, 39], ["None"], "methods", ["None"], ["feats", "[", ":", ",", ":", "3", "]", "=", "np", ".", "clip", "(", "tr", "+", "feats", "[", ":", ",", ":", "3", "]", ",", "0", ",", "255", ")", "\n", "", "return", "coords", ",", "feats", ",", "labels", ",", "instances", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ChromaticAutoContrast.__call__": [[40, 57], ["random.random", "feats[].min", "feats[].max", "feats[].max.max", "random.random"], "methods", ["None"], ["", "", "class", "ChromaticAutoContrast", "(", "object", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "randomize_blend_factor", "=", "True", ",", "blend_factor", "=", "0.5", ")", ":", "\n", "    ", "self", ".", "randomize_blend_factor", "=", "randomize_blend_factor", "\n", "self", ".", "blend_factor", "=", "blend_factor", "\n", "\n", "", "def", "__call__", "(", "self", ",", "coords", ",", "feats", ",", "labels", ",", "instances", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "0.2", ":", "\n", "# mean = np.mean(feats, 0, keepdims=True)", "\n", "# std = np.std(feats, 0, keepdims=True)", "\n", "# lo = mean - std", "\n", "# hi = mean + std", "\n", "      ", "lo", "=", "feats", "[", ":", ",", ":", "3", "]", ".", "min", "(", "0", ",", "keepdims", "=", "True", ")", "\n", "hi", "=", "feats", "[", ":", ",", ":", "3", "]", ".", "max", "(", "0", ",", "keepdims", "=", "True", ")", "\n", "assert", "hi", ".", "max", "(", ")", ">", "1", ",", "f\"invalid color value. Color is supposed to be [0-255]\"", "\n", "\n", "scale", "=", "255", "/", "(", "hi", "-", "lo", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ChromaticJitter.__init__": [[61, 63], ["None"], "methods", ["None"], ["feats", "[", ":", ",", ":", "3", "]", "=", "(", "1", "-", "blend_factor", ")", "*", "feats", "+", "blend_factor", "*", "contrast_feats", "\n", "", "return", "coords", ",", "feats", ",", "labels", ",", "instances", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ChromaticJitter.__call__": [[64, 70], ["random.random", "numpy.random.randn", "numpy.clip"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip"], ["\n", "", "", "class", "ChromaticJitter", "(", "object", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "std", "=", "0.01", ")", ":", "\n", "    ", "self", ".", "std", "=", "std", "\n", "\n", "", "def", "__call__", "(", "self", ",", "coords", ",", "feats", ",", "labels", ",", "instances", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.HueSaturationTranslation.rgb_to_hsv": [[74, 98], ["rgb.astype.astype.astype", "numpy.zeros_like", "numpy.max", "numpy.min", "numpy.zeros_like", "numpy.zeros_like", "numpy.zeros_like", "numpy.select"], "methods", ["None"], ["feats", "[", ":", ",", ":", "3", "]", "=", "np", ".", "clip", "(", "noise", "+", "feats", "[", ":", ",", ":", "3", "]", ",", "0", ",", "255", ")", "\n", "", "return", "coords", ",", "feats", ",", "labels", ",", "instances", "\n", "\n", "\n", "", "", "class", "HueSaturationTranslation", "(", "object", ")", ":", "\n", "\n", "  ", "@", "staticmethod", "\n", "def", "rgb_to_hsv", "(", "rgb", ")", ":", "\n", "# Translated from source of colorsys.rgb_to_hsv", "\n", "# r,g,b should be a numpy arrays with values between 0 and 255", "\n", "# rgb_to_hsv returns an array of floats between 0.0 and 1.0.", "\n", "    ", "rgb", "=", "rgb", ".", "astype", "(", "'float'", ")", "\n", "hsv", "=", "np", ".", "zeros_like", "(", "rgb", ")", "\n", "# in case an RGBA array was passed, just copy the A channel", "\n", "hsv", "[", "...", ",", "3", ":", "]", "=", "rgb", "[", "...", ",", "3", ":", "]", "\n", "r", ",", "g", ",", "b", "=", "rgb", "[", "...", ",", "0", "]", ",", "rgb", "[", "...", ",", "1", "]", ",", "rgb", "[", "...", ",", "2", "]", "\n", "maxc", "=", "np", ".", "max", "(", "rgb", "[", "...", ",", ":", "3", "]", ",", "axis", "=", "-", "1", ")", "\n", "minc", "=", "np", ".", "min", "(", "rgb", "[", "...", ",", ":", "3", "]", ",", "axis", "=", "-", "1", ")", "\n", "hsv", "[", "...", ",", "2", "]", "=", "maxc", "\n", "mask", "=", "maxc", "!=", "minc", "\n", "hsv", "[", "mask", ",", "1", "]", "=", "(", "maxc", "-", "minc", ")", "[", "mask", "]", "/", "maxc", "[", "mask", "]", "\n", "rc", "=", "np", ".", "zeros_like", "(", "r", ")", "\n", "gc", "=", "np", ".", "zeros_like", "(", "g", ")", "\n", "bc", "=", "np", ".", "zeros_like", "(", "b", ")", "\n", "rc", "[", "mask", "]", "=", "(", "maxc", "-", "r", ")", "[", "mask", "]", "/", "(", "maxc", "-", "minc", ")", "[", "mask", "]", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.HueSaturationTranslation.hsv_to_rgb": [[99, 119], ["numpy.empty_like", "numpy.select", "numpy.select", "numpy.select", "numpy.empty_like.astype"], "methods", ["None"], ["gc", "[", "mask", "]", "=", "(", "maxc", "-", "g", ")", "[", "mask", "]", "/", "(", "maxc", "-", "minc", ")", "[", "mask", "]", "\n", "bc", "[", "mask", "]", "=", "(", "maxc", "-", "b", ")", "[", "mask", "]", "/", "(", "maxc", "-", "minc", ")", "[", "mask", "]", "\n", "hsv", "[", "...", ",", "0", "]", "=", "np", ".", "select", "(", "[", "r", "==", "maxc", ",", "g", "==", "maxc", "]", ",", "[", "bc", "-", "gc", ",", "2.0", "+", "rc", "-", "bc", "]", ",", "default", "=", "4.0", "+", "gc", "-", "rc", ")", "\n", "hsv", "[", "...", ",", "0", "]", "=", "(", "hsv", "[", "...", ",", "0", "]", "/", "6.0", ")", "%", "1.0", "\n", "return", "hsv", "\n", "\n", "", "@", "staticmethod", "\n", "def", "hsv_to_rgb", "(", "hsv", ")", ":", "\n", "# Translated from source of colorsys.hsv_to_rgb", "\n", "# h,s should be a numpy arrays with values between 0.0 and 1.0", "\n", "# v should be a numpy array with values between 0.0 and 255.0", "\n", "# hsv_to_rgb returns an array of uints between 0 and 255.", "\n", "    ", "rgb", "=", "np", ".", "empty_like", "(", "hsv", ")", "\n", "rgb", "[", "...", ",", "3", ":", "]", "=", "hsv", "[", "...", ",", "3", ":", "]", "\n", "h", ",", "s", ",", "v", "=", "hsv", "[", "...", ",", "0", "]", ",", "hsv", "[", "...", ",", "1", "]", ",", "hsv", "[", "...", ",", "2", "]", "\n", "i", "=", "(", "h", "*", "6.0", ")", ".", "astype", "(", "'uint8'", ")", "\n", "f", "=", "(", "h", "*", "6.0", ")", "-", "i", "\n", "p", "=", "v", "*", "(", "1.0", "-", "s", ")", "\n", "q", "=", "v", "*", "(", "1.0", "-", "s", "*", "f", ")", "\n", "t", "=", "v", "*", "(", "1.0", "-", "s", "*", "(", "1.0", "-", "f", ")", ")", "\n", "i", "=", "i", "%", "6", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.HueSaturationTranslation.__init__": [[120, 123], ["None"], "methods", ["None"], ["conditions", "=", "[", "s", "==", "0.0", ",", "i", "==", "1", ",", "i", "==", "2", ",", "i", "==", "3", ",", "i", "==", "4", ",", "i", "==", "5", "]", "\n", "rgb", "[", "...", ",", "0", "]", "=", "np", ".", "select", "(", "conditions", ",", "[", "v", ",", "q", ",", "p", ",", "p", ",", "t", ",", "v", "]", ",", "default", "=", "v", ")", "\n", "rgb", "[", "...", ",", "1", "]", "=", "np", ".", "select", "(", "conditions", ",", "[", "v", ",", "v", ",", "v", ",", "q", ",", "p", ",", "p", "]", ",", "default", "=", "t", ")", "\n", "rgb", "[", "...", ",", "2", "]", "=", "np", ".", "select", "(", "conditions", ",", "[", "v", ",", "p", ",", "t", ",", "v", ",", "v", ",", "q", "]", ",", "default", "=", "p", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.HueSaturationTranslation.__call__": [[124, 134], ["transforms.HueSaturationTranslation.rgb_to_hsv", "numpy.remainder", "numpy.clip", "numpy.clip", "transforms.HueSaturationTranslation.hsv_to_rgb", "random.random", "random.random"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.HueSaturationTranslation.rgb_to_hsv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.HueSaturationTranslation.hsv_to_rgb"], ["return", "rgb", ".", "astype", "(", "'uint8'", ")", "\n", "\n", "", "def", "__init__", "(", "self", ",", "hue_max", ",", "saturation_max", ")", ":", "\n", "    ", "self", ".", "hue_max", "=", "hue_max", "\n", "self", ".", "saturation_max", "=", "saturation_max", "\n", "\n", "", "def", "__call__", "(", "self", ",", "coords", ",", "feats", ",", "labels", ",", "instances", ")", ":", "\n", "# Assume feat[:, :3] is rgb", "\n", "    ", "hsv", "=", "HueSaturationTranslation", ".", "rgb_to_hsv", "(", "feats", "[", ":", ",", ":", "3", "]", ")", "\n", "hue_val", "=", "(", "random", ".", "random", "(", ")", "-", "0.5", ")", "*", "2", "*", "self", ".", "hue_max", "\n", "sat_ratio", "=", "1", "+", "(", "random", ".", "random", "(", ")", "-", "0.5", ")", "*", "2", "*", "self", ".", "saturation_max", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.RandomDropout.__init__": [[141, 147], ["None"], "methods", ["None"], ["\n", "##############################", "\n", "# Coordinate transformations", "\n", "##############################", "\n", "", "", "class", "RandomDropout", "(", "object", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "dropout_ratio", "=", "0.2", ",", "dropout_application_ratio", "=", "0.5", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.RandomDropout.__call__": [[148, 154], ["random.random", "len", "numpy.random.choice", "int"], "methods", ["None"], ["    ", "\"\"\"\n    upright_axis: axis index among x,y,z, i.e. 2 for z\n    \"\"\"", "\n", "self", ".", "dropout_ratio", "=", "dropout_ratio", "\n", "self", ".", "dropout_application_ratio", "=", "dropout_application_ratio", "\n", "\n", "", "def", "__call__", "(", "self", ",", "coords", ",", "feats", ",", "labels", ",", "instances", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.RandomHorizontalFlip.__init__": [[158, 167], ["set", "set", "upright_axis.lower", "range"], "methods", ["None"], ["return", "coords", "[", "inds", "]", ",", "feats", "[", "inds", "]", ",", "labels", "[", "inds", "]", ",", "instances", "[", "inds", "]", "\n", "", "return", "coords", ",", "feats", ",", "labels", ",", "instances", "\n", "\n", "\n", "", "", "class", "RandomHorizontalFlip", "(", "object", ")", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "upright_axis", ",", "is_temporal", ")", ":", "\n", "    ", "\"\"\"\n    upright_axis: axis index among x,y,z, i.e. 2 for z\n    \"\"\"", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.RandomHorizontalFlip.__call__": [[168, 175], ["random.random", "random.random", "numpy.max"], "methods", ["None"], ["self", ".", "is_temporal", "=", "is_temporal", "\n", "self", ".", "D", "=", "4", "if", "is_temporal", "else", "3", "\n", "self", ".", "upright_axis", "=", "{", "'x'", ":", "0", ",", "'y'", ":", "1", ",", "'z'", ":", "2", "}", "[", "upright_axis", ".", "lower", "(", ")", "]", "\n", "# Use the rest of axes for flipping.", "\n", "self", ".", "horz_axes", "=", "set", "(", "range", "(", "self", ".", "D", ")", ")", "-", "set", "(", "[", "self", ".", "upright_axis", "]", ")", "\n", "\n", "", "def", "__call__", "(", "self", ",", "coords", ",", "feats", ",", "labels", ",", "instances", ")", ":", "\n", "    ", "if", "random", ".", "random", "(", ")", "<", "0.95", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ElasticDistortion.__init__": [[179, 181], ["None"], "methods", ["None"], ["coords", "[", ":", ",", "curr_ax", "]", "=", "coord_max", "-", "coords", "[", ":", ",", "curr_ax", "]", "\n", "", "", "", "return", "coords", ",", "feats", ",", "labels", ",", "instances", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ElasticDistortion.elastic_distortion": [[182, 213], ["coords.min", "numpy.random.randn().astype", "range", "scipy.interpolate.RegularGridInterpolator", "scipy.interpolate.RegularGridInterpolator", "scipy.interpolate.RegularGridInterpolator", "scipy.interpolate.RegularGridInterpolator", "scipy.interpolate.RegularGridInterpolator", "scipy.interpolate.RegularGridInterpolator", "scipy.interpolate.RegularGridInterpolator", "scipy.interpolate.RegularGridInterpolator", "scipy.interpolate.RegularGridInterpolator", "numpy.ones().astype", "numpy.ones().astype", "numpy.ones().astype", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "scipy.ndimage.filters.convolve", "numpy.linspace", "scipy.interpolate.RegularGridInterpolator.", "scipy.interpolate.RegularGridInterpolator.", "scipy.interpolate.RegularGridInterpolator.", "numpy.random.randn", "zip", "numpy.ones", "numpy.ones", "numpy.ones"], "methods", ["None"], ["\n", "", "", "class", "ElasticDistortion", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "distortion_params", ")", ":", "\n", "    ", "self", ".", "distortion_params", "=", "distortion_params", "\n", "\n", "", "def", "elastic_distortion", "(", "self", ",", "coords", ",", "feats", ",", "labels", ",", "granularity", ",", "magnitude", ")", ":", "\n", "    ", "\"\"\"Apply elastic distortion on sparse coordinate space.\n\n      pointcloud: numpy array of (number of points, at least 3 spatial dims)\n      granularity: size of the noise grid (in same scale[m/cm] as the voxel grid)\n      magnitude: noise multiplier\n    \"\"\"", "\n", "blurx", "=", "np", ".", "ones", "(", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", ".", "astype", "(", "'float32'", ")", "/", "3", "\n", "blury", "=", "np", ".", "ones", "(", "(", "1", ",", "3", ",", "1", ",", "1", ")", ")", ".", "astype", "(", "'float32'", ")", "/", "3", "\n", "blurz", "=", "np", ".", "ones", "(", "(", "1", ",", "1", ",", "3", ",", "1", ")", ")", ".", "astype", "(", "'float32'", ")", "/", "3", "\n", "coords_min", "=", "coords", ".", "min", "(", "0", ")", "\n", "\n", "# Create Gaussian noise tensor of the size given by granularity.", "\n", "noise_dim", "=", "(", "(", "coords", "-", "coords_min", ")", ".", "max", "(", "0", ")", "//", "granularity", ")", ".", "astype", "(", "int", ")", "+", "3", "\n", "noise", "=", "np", ".", "random", ".", "randn", "(", "*", "noise_dim", ",", "3", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "# Smoothing.", "\n", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "      ", "noise", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "noise", ",", "blurx", ",", "mode", "=", "'constant'", ",", "cval", "=", "0", ")", "\n", "noise", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "noise", ",", "blury", ",", "mode", "=", "'constant'", ",", "cval", "=", "0", ")", "\n", "noise", "=", "scipy", ".", "ndimage", ".", "filters", ".", "convolve", "(", "noise", ",", "blurz", ",", "mode", "=", "'constant'", ",", "cval", "=", "0", ")", "\n", "\n", "# Trilinear interpolate noise filters for each spatial dimensions.", "\n", "", "ax", "=", "[", "\n", "np", ".", "linspace", "(", "d_min", ",", "d_max", ",", "d", ")", "\n", "for", "d_min", ",", "d_max", ",", "d", "in", "zip", "(", "coords_min", "-", "granularity", ",", "coords_min", "+", "granularity", "*", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ElasticDistortion.__call__": [[214, 221], ["random.random", "transforms.ElasticDistortion.elastic_distortion"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.ElasticDistortion.elastic_distortion"], ["(", "noise_dim", "-", "2", ")", ",", "noise_dim", ")", "\n", "]", "\n", "interp", "=", "scipy", ".", "interpolate", ".", "RegularGridInterpolator", "(", "ax", ",", "noise", ",", "bounds_error", "=", "0", ",", "fill_value", "=", "0", ")", "\n", "coords", "+=", "interp", "(", "coords", ")", "*", "magnitude", "\n", "return", "coords", ",", "feats", ",", "labels", "\n", "\n", "", "def", "__call__", "(", "self", ",", "coords", ",", "feats", ",", "labels", ")", ":", "\n", "    ", "if", "self", ".", "distortion_params", "is", "not", "None", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.Compose.__init__": [[226, 228], ["None"], "methods", ["None"], ["", "", "", "return", "coords", ",", "feats", ",", "labels", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.Compose.__call__": [[229, 233], ["t"], "methods", ["None"], ["", "", "class", "Compose", "(", "object", ")", ":", "\n", "  ", "\"\"\"Composes several transforms together.\"\"\"", "\n", "\n", "def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "    ", "self", ".", "transforms", "=", "transforms", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.cfl_collate_fn_factory.__init__": [[243, 245], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.cfl_collate_fn_factory.__call__": [[246, 279], ["list", "enumerate", "torch.cat().int", "torch.cat().float", "torch.cat().int", "zip", "torch.cat().int.append", "torch.cat().float.append", "torch.cat().int.append", "sum", "len", "logging.warning", "torch.cat", "torch.from_numpy", "torch.from_numpy().int", "torch.cat", "torch.cat", "torch.cat", "len", "torch.from_numpy().int", "torch.from_numpy", "torch.ones().int", "torch.from_numpy", "torch.ones"], "methods", ["None"], ["\n", "\n", "def", "__init__", "(", "self", ",", "limit_numpoints", ")", ":", "\n", "    ", "self", ".", "limit_numpoints", "=", "limit_numpoints", "\n", "\n", "", "def", "__call__", "(", "self", ",", "list_data", ")", ":", "\n", "    ", "coords", ",", "feats", ",", "labels", ",", "instances", "=", "list", "(", "zip", "(", "*", "list_data", ")", ")", "\n", "coords_batch", ",", "feats_batch", ",", "labels_batch", ",", "instances_batch", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "batch_id", "=", "0", "\n", "batch_num_points", "=", "0", "\n", "for", "batch_id", ",", "_", "in", "enumerate", "(", "coords", ")", ":", "\n", "      ", "num_points", "=", "coords", "[", "batch_id", "]", ".", "shape", "[", "0", "]", "\n", "batch_num_points", "+=", "num_points", "\n", "if", "self", ".", "limit_numpoints", "and", "batch_num_points", ">", "self", ".", "limit_numpoints", ":", "\n", "        ", "num_full_points", "=", "sum", "(", "len", "(", "c", ")", "for", "c", "in", "coords", ")", "\n", "num_full_batch_size", "=", "len", "(", "coords", ")", "\n", "logging", ".", "warning", "(", "\n", "f'\\t\\tCannot fit {num_full_points} points into {self.limit_numpoints} points '", "\n", "f'limit. Truncating batch size at {batch_id} out of {num_full_batch_size} with {batch_num_points - num_points}.'", "\n", ")", "\n", "break", "\n", "# coords_batch.append(", "\n", "#     torch.cat((torch.from_numpy(", "\n", "#        coords[batch_id]).int(), torch.ones(num_points, 1).int() * batch_id), 1))", "\n", "", "coords_batch", ".", "append", "(", "\n", "torch", ".", "cat", "(", "(", "torch", ".", "ones", "(", "num_points", ",", "1", ")", ".", "int", "(", ")", "*", "batch_id", ",", "torch", ".", "from_numpy", "(", "\n", "coords", "[", "batch_id", "]", ")", ".", "int", "(", ")", ")", ",", "1", ")", ")", "\n", "feats_batch", ".", "append", "(", "torch", ".", "from_numpy", "(", "feats", "[", "batch_id", "]", ")", ")", "\n", "labels_batch", ".", "append", "(", "torch", ".", "from_numpy", "(", "labels", "[", "batch_id", "]", ")", ".", "int", "(", ")", ")", "\n", "instances_batch", ".", "append", "(", "instances", "[", "batch_id", "]", ")", "\n", "\n", "batch_id", "+=", "1", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.cflt_collate_fn_factory.__init__": [[289, 291], ["None"], "methods", ["None"], ["  "]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.transforms.cflt_collate_fn_factory.__call__": [[292, 308], ["list", "transforms.cfl_collate_fn_factory", "cfl_collate_fn_factory.", "torch.stack", "zip", "list", "coords_batch[].max().item", "torch.stack.append", "zip", "torch.from_numpy().float", "coords_batch[].max", "torch.from_numpy"], "methods", ["None"], ["\n", "\n", "def", "__init__", "(", "self", ",", "limit_numpoints", ")", ":", "\n", "    ", "self", ".", "limit_numpoints", "=", "limit_numpoints", "\n", "\n", "", "def", "__call__", "(", "self", ",", "list_data", ")", ":", "\n", "    ", "coords", ",", "feats", ",", "labels", ",", "instances", ",", "transformations", "=", "list", "(", "zip", "(", "*", "list_data", ")", ")", "\n", "cfl_collate_fn", "=", "cfl_collate_fn_factory", "(", "limit_numpoints", "=", "self", ".", "limit_numpoints", ")", "\n", "coords_batch", ",", "feats_batch", ",", "labels_batch", ",", "instances_batch", "=", "cfl_collate_fn", "(", "list", "(", "zip", "(", "coords", ",", "feats", ",", "labels", ",", "instances", ")", ")", ")", "\n", "num_truncated_batch", "=", "coords_batch", "[", ":", ",", "-", "1", "]", ".", "max", "(", ")", ".", "item", "(", ")", "+", "1", "\n", "\n", "batch_id", "=", "0", "\n", "transformations_batch", "=", "[", "]", "\n", "for", "transformation", "in", "transformations", ":", "\n", "      ", "if", "batch_id", ">=", "num_truncated_batch", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.voxelizer.Voxelizer.__init__": [[15, 43], ["None"], "methods", ["None"], ["def", "M", "(", "axis", ",", "theta", ")", ":", "\n", "  ", "return", "expm", "(", "np", ".", "cross", "(", "np", ".", "eye", "(", "3", ")", ",", "axis", "/", "norm", "(", "axis", ")", "*", "theta", ")", ")", "\n", "\n", "\n", "", "class", "Voxelizer", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "\n", "voxel_size", "=", "1", ",", "\n", "clip_bound", "=", "None", ",", "\n", "use_augmentation", "=", "False", ",", "\n", "scale_augmentation_bound", "=", "None", ",", "\n", "rotation_augmentation_bound", "=", "None", ",", "\n", "translation_augmentation_ratio_bound", "=", "None", ",", "\n", "ignore_label", "=", "255", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      voxel_size: side length of a voxel\n      clip_bound: boundary of the voxelizer. Points outside the bound will be deleted\n        expects either None or an array like ((-100, 100), (-100, 100), (-100, 100)).\n      scale_augmentation_bound: None or (0.9, 1.1)\n      rotation_augmentation_bound: None or ((np.pi / 6, np.pi / 6), None, None) for 3 axis.\n        Use random order of x, y, z to prevent bias.\n      translation_augmentation_bound: ((-5, 5), (0, 0), (-10, 10))\n      ignore_label: label assigned for ignore (not a training label).\n    \"\"\"", "\n", "self", ".", "voxel_size", "=", "voxel_size", "\n", "self", ".", "clip_bound", "=", "clip_bound", "\n", "self", ".", "ignore_label", "=", "ignore_label", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.voxelizer.Voxelizer.get_transformation_matrix": [[44, 75], ["numpy.eye", "numpy.fill_diagonal", "numpy.eye", "numpy.eye", "isinstance", "numpy.random.uniform", "enumerate", "numpy.random.shuffle", "ValueError", "numpy.zeros", "rot_mats.append", "numpy.random.uniform", "voxelizer.M"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.M"], ["# Augmentation", "\n", "self", ".", "use_augmentation", "=", "use_augmentation", "\n", "self", ".", "scale_augmentation_bound", "=", "scale_augmentation_bound", "\n", "self", ".", "rotation_augmentation_bound", "=", "rotation_augmentation_bound", "\n", "self", ".", "translation_augmentation_ratio_bound", "=", "translation_augmentation_ratio_bound", "\n", "\n", "", "def", "get_transformation_matrix", "(", "self", ")", ":", "\n", "    ", "voxelization_matrix", ",", "rotation_matrix", "=", "np", ".", "eye", "(", "4", ")", ",", "np", ".", "eye", "(", "4", ")", "\n", "# Get clip boundary from config or pointcloud.", "\n", "# Get inner clip bound to crop from.", "\n", "\n", "# Transform pointcloud coordinate to voxel coordinate.", "\n", "# 1. Random rotation", "\n", "rot_mat", "=", "np", ".", "eye", "(", "3", ")", "\n", "if", "self", ".", "use_augmentation", "and", "self", ".", "rotation_augmentation_bound", "is", "not", "None", ":", "\n", "      ", "if", "isinstance", "(", "self", ".", "rotation_augmentation_bound", ",", "collections", ".", "Iterable", ")", ":", "\n", "        ", "rot_mats", "=", "[", "]", "\n", "for", "axis_ind", ",", "rot_bound", "in", "enumerate", "(", "self", ".", "rotation_augmentation_bound", ")", ":", "\n", "          ", "theta", "=", "0", "\n", "axis", "=", "np", ".", "zeros", "(", "3", ")", "\n", "axis", "[", "axis_ind", "]", "=", "1", "\n", "if", "rot_bound", "is", "not", "None", ":", "\n", "            ", "theta", "=", "np", ".", "random", ".", "uniform", "(", "*", "rot_bound", ")", "\n", "", "rot_mats", ".", "append", "(", "M", "(", "axis", ",", "theta", ")", ")", "\n", "# Use random order", "\n", "", "np", ".", "random", ".", "shuffle", "(", "rot_mats", ")", "\n", "rot_mat", "=", "rot_mats", "[", "0", "]", "@", "rot_mats", "[", "1", "]", "@", "rot_mats", "[", "2", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", ")", "\n", "", "", "rotation_matrix", "[", ":", "3", ",", ":", "3", "]", "=", "rot_mat", "\n", "# 2. Scale and translate to the voxel space.", "\n", "scale", "=", "1", "/", "self", ".", "voxel_size", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.voxelizer.Voxelizer.clip": [[76, 107], ["numpy.min().astype", "numpy.max().astype", "isinstance", "numpy.multiply", "numpy.min", "numpy.max", "bound_size.max"], "methods", ["None"], ["if", "self", ".", "use_augmentation", "and", "self", ".", "scale_augmentation_bound", "is", "not", "None", ":", "\n", "      ", "scale", "*=", "np", ".", "random", ".", "uniform", "(", "*", "self", ".", "scale_augmentation_bound", ")", "\n", "", "np", ".", "fill_diagonal", "(", "voxelization_matrix", "[", ":", "3", ",", ":", "3", "]", ",", "scale", ")", "\n", "# Get final transformation matrix.", "\n", "return", "voxelization_matrix", ",", "rotation_matrix", "\n", "\n", "", "def", "clip", "(", "self", ",", "coords", ",", "center", "=", "None", ",", "trans_aug_ratio", "=", "None", ")", ":", "\n", "    ", "bound_min", "=", "np", ".", "min", "(", "coords", ",", "0", ")", ".", "astype", "(", "float", ")", "\n", "bound_max", "=", "np", ".", "max", "(", "coords", ",", "0", ")", ".", "astype", "(", "float", ")", "\n", "bound_size", "=", "bound_max", "-", "bound_min", "\n", "if", "center", "is", "None", ":", "\n", "      ", "center", "=", "bound_min", "+", "bound_size", "*", "0.5", "\n", "", "if", "trans_aug_ratio", "is", "not", "None", ":", "\n", "      ", "trans", "=", "np", ".", "multiply", "(", "trans_aug_ratio", ",", "bound_size", ")", "\n", "center", "+=", "trans", "\n", "", "lim", "=", "self", ".", "clip_bound", "\n", "\n", "if", "isinstance", "(", "self", ".", "clip_bound", ",", "(", "int", ",", "float", ")", ")", ":", "\n", "      ", "if", "bound_size", ".", "max", "(", ")", "<", "self", ".", "clip_bound", ":", "\n", "        ", "return", "None", "\n", "", "else", ":", "\n", "        ", "clip_inds", "=", "(", "(", "coords", "[", ":", ",", "0", "]", ">=", "(", "-", "lim", "+", "center", "[", "0", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "0", "]", "<", "(", "lim", "+", "center", "[", "0", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "1", "]", ">=", "(", "-", "lim", "+", "center", "[", "1", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "1", "]", "<", "(", "lim", "+", "center", "[", "1", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "2", "]", ">=", "(", "-", "lim", "+", "center", "[", "2", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "2", "]", "<", "(", "lim", "+", "center", "[", "2", "]", ")", ")", ")", "\n", "return", "clip_inds", "\n", "\n", "# Clip points outside the limit", "\n", "", "", "clip_inds", "=", "(", "(", "coords", "[", ":", ",", "0", "]", ">=", "(", "lim", "[", "0", "]", "[", "0", "]", "+", "center", "[", "0", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "0", "]", "<", "(", "lim", "[", "0", "]", "[", "1", "]", "+", "center", "[", "0", "]", ")", ")", "&"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.voxelizer.Voxelizer.voxelize": [[108, 148], ["voxelizer.Voxelizer.get_transformation_matrix", "numpy.hstack", "numpy.floor", "numpy.floor.min", "numpy.eye", "numpy.floor", "MinkowskiEngine.utils.sparse_quantize", "numpy.zeros", "voxelizer.Voxelizer.clip", "rigid_transformation.flatten", "enumerate", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.get_transformation_matrix", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip"], ["(", "coords", "[", ":", ",", "1", "]", ">=", "(", "lim", "[", "1", "]", "[", "0", "]", "+", "center", "[", "1", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "1", "]", "<", "(", "lim", "[", "1", "]", "[", "1", "]", "+", "center", "[", "1", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "2", "]", ">=", "(", "lim", "[", "2", "]", "[", "0", "]", "+", "center", "[", "2", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "2", "]", "<", "(", "lim", "[", "2", "]", "[", "1", "]", "+", "center", "[", "2", "]", ")", ")", ")", "\n", "return", "clip_inds", "\n", "\n", "", "def", "voxelize", "(", "self", ",", "coords", ",", "feats", ",", "labels", ",", "instances", ",", "center", "=", "None", ")", ":", "\n", "\n", "    ", "assert", "coords", ".", "shape", "[", "1", "]", "==", "3", "and", "coords", ".", "shape", "[", "0", "]", "==", "feats", ".", "shape", "[", "0", "]", "and", "coords", ".", "shape", "[", "0", "]", "\n", "if", "self", ".", "clip_bound", "is", "not", "None", ":", "\n", "      ", "trans_aug_ratio", "=", "np", ".", "zeros", "(", "3", ")", "\n", "if", "self", ".", "use_augmentation", "and", "self", ".", "translation_augmentation_ratio_bound", "is", "not", "None", ":", "\n", "        ", "for", "axis_ind", ",", "trans_ratio_bound", "in", "enumerate", "(", "self", ".", "translation_augmentation_ratio_bound", ")", ":", "\n", "          ", "trans_aug_ratio", "[", "axis_ind", "]", "=", "np", ".", "random", ".", "uniform", "(", "*", "trans_ratio_bound", ")", "\n", "\n", "", "", "clip_inds", "=", "self", ".", "clip", "(", "coords", ",", "center", ",", "trans_aug_ratio", ")", "\n", "if", "clip_inds", "is", "not", "None", ":", "\n", "        ", "coords", ",", "feats", "=", "coords", "[", "clip_inds", "]", ",", "feats", "[", "clip_inds", "]", "\n", "if", "labels", "is", "not", "None", ":", "\n", "          ", "labels", "=", "labels", "[", "clip_inds", "]", "\n", "", "if", "instances", "is", "not", "None", ":", "\n", "          ", "instances", "=", "instances", "[", "clip_inds", "]", "\n", "\n", "# Get rotation and scale", "\n", "", "", "", "M_v", ",", "M_r", "=", "self", ".", "get_transformation_matrix", "(", ")", "\n", "# Apply transformations", "\n", "rigid_transformation", "=", "M_v", "\n", "if", "self", ".", "use_augmentation", ":", "\n", "      ", "rigid_transformation", "=", "M_r", "@", "rigid_transformation", "\n", "\n", "", "homo_coords", "=", "np", ".", "hstack", "(", "(", "coords", ",", "np", ".", "ones", "(", "(", "coords", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "dtype", "=", "coords", ".", "dtype", ")", ")", ")", "\n", "coords_aug", "=", "np", ".", "floor", "(", "homo_coords", "@", "rigid_transformation", ".", "T", "[", ":", ",", ":", "3", "]", ")", "\n", "\n", "# Align all coordinates to the origin.", "\n", "min_coords", "=", "coords_aug", ".", "min", "(", "0", ")", "\n", "M_t", "=", "np", ".", "eye", "(", "4", ")", "\n", "M_t", "[", ":", "3", ",", "-", "1", "]", "=", "-", "min_coords", "\n", "rigid_transformation", "=", "M_t", "@", "rigid_transformation", "\n", "coords_aug", "=", "np", ".", "floor", "(", "coords_aug", "-", "min_coords", ")", "\n", "\n", "# key = self.hash(coords_aug)  # floor happens by astype(np.uint64)", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.voxelizer.Voxelizer.voxelize_temporal": [[149, 204], ["voxelizer.Voxelizer.get_transformation_matrix", "zip", "tuple", "numpy.hstack", "MinkowskiEngine.utils.sparse_quantize", "coords_tc.append", "feats_tc.append", "labels_tc.append", "transformation_tc.append", "return_args.append", "len", "numpy.zeros", "voxelizer.Voxelizer.clip", "numpy.floor", "rigid_transformation.flatten", "enumerate", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.get_transformation_matrix", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip"], ["mapping", ",", "colabels", "=", "ME", ".", "utils", ".", "sparse_quantize", "(", "\n", "coords_aug", ",", "feats", ",", "labels", "=", "labels", ",", "return_index", "=", "True", ",", "ignore_label", "=", "self", ".", "ignore_label", ")", "\n", "coords_aug", "=", "coords_aug", "[", "mapping", "]", "\n", "feats", "=", "feats", "[", "mapping", "]", "\n", "labels", "=", "colabels", "\n", "instances", "=", "instances", "[", "mapping", "]", "\n", "\n", "return", "coords_aug", ",", "feats", ",", "labels", ",", "instances", ",", "rigid_transformation", ".", "flatten", "(", ")", "\n", "\n", "", "def", "voxelize_temporal", "(", "self", ",", "\n", "coords_t", ",", "\n", "feats_t", ",", "\n", "labels_t", ",", "\n", "centers", "=", "None", ",", "\n", "return_transformation", "=", "False", ")", ":", "\n", "# Legacy code, remove", "\n", "    ", "if", "centers", "is", "None", ":", "\n", "      ", "centers", "=", "[", "\n", "None", ",", "\n", "]", "*", "len", "(", "coords_t", ")", "\n", "", "coords_tc", ",", "feats_tc", ",", "labels_tc", ",", "transformation_tc", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "# ######################### Data Augmentation #############################", "\n", "# Get rotation and scale", "\n", "M_v", ",", "M_r", "=", "self", ".", "get_transformation_matrix", "(", ")", "\n", "# Apply transformations", "\n", "rigid_transformation", "=", "M_v", "\n", "if", "self", ".", "use_augmentation", ":", "\n", "      ", "rigid_transformation", "=", "M_r", "@", "rigid_transformation", "\n", "# ######################### Voxelization #############################", "\n", "# Voxelize coords", "\n", "", "for", "coords", ",", "feats", ",", "labels", ",", "center", "in", "zip", "(", "coords_t", ",", "feats_t", ",", "labels_t", ",", "centers", ")", ":", "\n", "\n", "###################################", "\n", "# Clip the data if bound exists", "\n", "      ", "if", "self", ".", "clip_bound", "is", "not", "None", ":", "\n", "        ", "trans_aug_ratio", "=", "np", ".", "zeros", "(", "3", ")", "\n", "if", "self", ".", "use_augmentation", "and", "self", ".", "translation_augmentation_ratio_bound", "is", "not", "None", ":", "\n", "          ", "for", "axis_ind", ",", "trans_ratio_bound", "in", "enumerate", "(", "self", ".", "translation_augmentation_ratio_bound", ")", ":", "\n", "            ", "trans_aug_ratio", "[", "axis_ind", "]", "=", "np", ".", "random", ".", "uniform", "(", "*", "trans_ratio_bound", ")", "\n", "\n", "", "", "clip_inds", "=", "self", ".", "clip", "(", "coords", ",", "center", ",", "trans_aug_ratio", ")", "\n", "if", "clip_inds", "is", "not", "None", ":", "\n", "          ", "coords", ",", "feats", "=", "coords", "[", "clip_inds", "]", ",", "feats", "[", "clip_inds", "]", "\n", "if", "labels", "is", "not", "None", ":", "\n", "            ", "labels", "=", "labels", "[", "clip_inds", "]", "\n", "###################################", "\n", "\n", "", "", "", "homo_coords", "=", "np", ".", "hstack", "(", "(", "coords", ",", "np", ".", "ones", "(", "(", "coords", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "dtype", "=", "coords", ".", "dtype", ")", ")", ")", "\n", "coords_aug", "=", "np", ".", "floor", "(", "homo_coords", "@", "rigid_transformation", ".", "T", ")", "[", ":", ",", ":", "3", "]", "\n", "\n", "coords_aug", ",", "feats", ",", "labels", "=", "ME", ".", "utils", ".", "sparse_quantize", "(", "\n", "coords_aug", ",", "feats", ",", "labels", "=", "labels", ",", "ignore_label", "=", "self", ".", "ignore_label", ")", "\n", "\n", "coords_tc", ".", "append", "(", "coords_aug", ")", "\n", "feats_tc", ".", "append", "(", "feats", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.voxelizer.M": [[9, 11], ["scipy.linalg.expm", "numpy.cross", "numpy.eye", "scipy.linalg.norm"], "function", ["None"], ["import", "numpy", "as", "np", "\n", "import", "MinkowskiEngine", "as", "ME", "\n", "from", "scipy", ".", "linalg", "import", "expm", ",", "norm", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.voxelizer.test": [[206, 215], ["numpy.random.rand", "numpy.floor", "voxelizer.Voxelizer", "print", "numpy.random.rand", "voxelizer.Voxelizer.voxelize", "numpy.random.rand"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.voxelize"], ["transformation_tc", ".", "append", "(", "rigid_transformation", ".", "flatten", "(", ")", ")", "\n", "\n", "", "return_args", "=", "[", "coords_tc", ",", "feats_tc", ",", "labels_tc", "]", "\n", "if", "return_transformation", ":", "\n", "      ", "return_args", ".", "append", "(", "transformation_tc", ")", "\n", "\n", "", "return", "tuple", "(", "return_args", ")", "\n", "\n", "\n", "", "", "def", "test", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.__init__": [[84, 117], ["torch.utils.data.Dataset.__init__", "sorted", "collections.defaultdict", "isinstance", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["  ", "IS_FULL_POINTCLOUD_EVAL", "=", "False", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "data_paths", ",", "\n", "prevoxel_transform", "=", "None", ",", "\n", "input_transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "cache", "=", "False", ",", "\n", "data_root", "=", "'/'", ")", ":", "\n", "    ", "\"\"\"\n    data_paths: list of lists, [[str_path_to_input, str_path_to_label], [...]]\n    \"\"\"", "\n", "Dataset", ".", "__init__", "(", "self", ")", "\n", "\n", "# Allows easier path concatenation", "\n", "if", "not", "isinstance", "(", "data_root", ",", "Path", ")", ":", "\n", "      ", "data_root", "=", "Path", "(", "data_root", ")", "\n", "\n", "", "self", ".", "data_root", "=", "data_root", "\n", "self", ".", "data_paths", "=", "sorted", "(", "data_paths", ")", "\n", "\n", "self", ".", "prevoxel_transform", "=", "prevoxel_transform", "\n", "self", ".", "input_transform", "=", "input_transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n", "# dictionary of input", "\n", "self", ".", "data_loader_dict", "=", "{", "\n", "'input'", ":", "(", "self", ".", "load_input", ",", "self", ".", "input_transform", ")", ",", "\n", "'target'", ":", "(", "self", ".", "load_target", ",", "self", ".", "target_transform", ")", "\n", "}", "\n", "\n", "# For large dataset, do not cache", "\n", "self", ".", "cache", "=", "cache", "\n", "self", ".", "cache_dict", "=", "defaultdict", "(", "dict", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.load_input": [[118, 120], ["None"], "methods", ["None"], ["self", ".", "loading_key_order", "=", "[", "'input'", ",", "'target'", "]", "\n", "\n", "", "def", "load_input", "(", "self", ",", "index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.load_target": [[121, 123], ["None"], "methods", ["None"], ["    ", "raise", "NotImplementedError", "\n", "\n", "", "def", "load_target", "(", "self", ",", "index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.get_classnames": [[124, 126], ["None"], "methods", ["None"], ["    ", "raise", "NotImplementedError", "\n", "\n", "", "def", "get_classnames", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.reorder_result": [[127, 129], ["None"], "methods", ["None"], ["    ", "pass", "\n", "\n", "", "def", "reorder_result", "(", "self", ",", "result", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.__getitem__": [[130, 139], ["loader", "out_array.append", "transformer"], "methods", ["None"], ["    ", "return", "result", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "out_array", "=", "[", "]", "\n", "for", "k", "in", "self", ".", "loading_key_order", ":", "\n", "      ", "loader", ",", "transformer", "=", "self", ".", "data_loader_dict", "[", "k", "]", "\n", "v", "=", "loader", "(", "index", ")", "\n", "if", "transformer", ":", "\n", "        ", "v", "=", "transformer", "(", "v", ")", "\n", "", "out_array", ".", "append", "(", "v", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.DictDataset.__len__": [[140, 142], ["len"], "methods", ["None"], ["", "return", "out_array", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDatasetBase.__init__": [[152, 176], ["dataset.DictDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["IGNORE_LABELS", "=", "None", "# labels that are not evaluated", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "data_paths", ",", "\n", "prevoxel_transform", "=", "None", ",", "\n", "input_transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "cache", "=", "False", ",", "\n", "data_root", "=", "'/'", ",", "\n", "ignore_mask", "=", "255", ",", "\n", "return_transformation", "=", "False", ",", "\n", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    ignore_mask: label value for ignore class. It will not be used as a class in the loss or evaluation.\n    \"\"\"", "\n", "DictDataset", ".", "__init__", "(", "\n", "self", ",", "\n", "data_paths", ",", "\n", "prevoxel_transform", "=", "prevoxel_transform", ",", "\n", "input_transform", "=", "input_transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "cache", "=", "cache", ",", "\n", "data_root", "=", "data_root", ")", "\n", "\n", "self", ".", "ignore_mask", "=", "ignore_mask", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDatasetBase.__getitem__": [[177, 179], ["None"], "methods", ["None"], ["self", ".", "return_transformation", "=", "return_transformation", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDatasetBase.load_ply": [[180, 188], ["plyfile.PlyData.read", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["    ", "raise", "NotImplementedError", "\n", "\n", "", "def", "load_ply", "(", "self", ",", "index", ")", ":", "\n", "    ", "filepath", "=", "self", ".", "data_root", "/", "self", ".", "data_paths", "[", "index", "]", "\n", "plydata", "=", "PlyData", ".", "read", "(", "filepath", ")", "\n", "data", "=", "plydata", ".", "elements", "[", "0", "]", ".", "data", "\n", "coords", "=", "np", ".", "array", "(", "[", "data", "[", "'x'", "]", ",", "data", "[", "'y'", "]", ",", "data", "[", "'z'", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", ".", "T", "\n", "feats", "=", "np", ".", "array", "(", "[", "data", "[", "'red'", "]", ",", "data", "[", "'green'", "]", ",", "data", "[", "'blue'", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", ".", "T", "\n", "labels", "=", "np", ".", "array", "(", "data", "[", "'label'", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDatasetBase.load_data": [[189, 191], ["None"], "methods", ["None"], ["return", "coords", ",", "feats", ",", "labels", ",", "None", "\n", "\n", "", "def", "load_data", "(", "self", ",", "index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDatasetBase.__len__": [[192, 195], ["len"], "methods", ["None"], ["    ", "raise", "NotImplementedError", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "num_data", "=", "len", "(", "self", ".", "data_paths", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDataset.__init__": [[217, 264], ["dataset.VoxelizationDatasetBase.__init__", "datasets.voxelizer.Voxelizer", "range", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["AUGMENT_COORDS_TO_FEATS", "=", "False", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "data_paths", ",", "\n", "prevoxel_transform", "=", "None", ",", "\n", "input_transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "data_root", "=", "'/'", ",", "\n", "ignore_label", "=", "255", ",", "\n", "return_transformation", "=", "False", ",", "\n", "augment_data", "=", "False", ",", "\n", "config", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "\n", "    ", "self", ".", "augment_data", "=", "augment_data", "\n", "self", ".", "config", "=", "config", "\n", "VoxelizationDatasetBase", ".", "__init__", "(", "\n", "self", ",", "\n", "data_paths", ",", "\n", "prevoxel_transform", "=", "prevoxel_transform", ",", "\n", "input_transform", "=", "input_transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "cache", "=", "cache", ",", "\n", "data_root", "=", "data_root", ",", "\n", "ignore_mask", "=", "ignore_label", ",", "\n", "return_transformation", "=", "return_transformation", ")", "\n", "\n", "# Prevoxel transformations", "\n", "self", ".", "voxelizer", "=", "Voxelizer", "(", "\n", "voxel_size", "=", "self", ".", "VOXEL_SIZE", ",", "\n", "clip_bound", "=", "self", ".", "CLIP_BOUND", ",", "\n", "use_augmentation", "=", "augment_data", ",", "\n", "scale_augmentation_bound", "=", "self", ".", "SCALE_AUGMENTATION_BOUND", ",", "\n", "rotation_augmentation_bound", "=", "self", ".", "ROTATION_AUGMENTATION_BOUND", ",", "\n", "translation_augmentation_ratio_bound", "=", "self", ".", "TRANSLATION_AUGMENTATION_RATIO_BOUND", ",", "\n", "ignore_label", "=", "ignore_label", ")", "\n", "\n", "# map labels not evaluated to ignore_label", "\n", "label_map", "=", "{", "}", "\n", "n_used", "=", "0", "\n", "for", "l", "in", "range", "(", "self", ".", "NUM_LABELS", ")", ":", "\n", "      ", "if", "l", "in", "self", ".", "IGNORE_LABELS", ":", "\n", "        ", "label_map", "[", "l", "]", "=", "self", ".", "ignore_mask", "\n", "", "else", ":", "\n", "        ", "label_map", "[", "l", "]", "=", "n_used", "\n", "n_used", "+=", "1", "\n", "", "", "label_map", "[", "self", ".", "ignore_mask", "]", "=", "self", ".", "ignore_mask", "\n", "self", ".", "label_map", "=", "label_map", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDataset._augment_coords_to_feats": [[265, 273], ["isinstance", "coords.mean", "numpy.concatenate", "torch.cat"], "methods", ["None"], ["self", ".", "NUM_LABELS", "-=", "len", "(", "self", ".", "IGNORE_LABELS", ")", "\n", "\n", "", "def", "_augment_coords_to_feats", "(", "self", ",", "coords", ",", "feats", ",", "labels", "=", "None", ")", ":", "\n", "    ", "norm_coords", "=", "coords", "-", "coords", ".", "mean", "(", "0", ")", "\n", "# color must come first.", "\n", "if", "isinstance", "(", "coords", ",", "np", ".", "ndarray", ")", ":", "\n", "      ", "feats", "=", "np", ".", "concatenate", "(", "(", "feats", ",", "norm_coords", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "      ", "feats", "=", "torch", ".", "cat", "(", "(", "feats", ",", "norm_coords", ")", ",", "1", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDataset.convert_mat2cfl": [[274, 277], ["None"], "methods", ["None"], ["", "return", "coords", ",", "feats", ",", "labels", "\n", "\n", "", "def", "convert_mat2cfl", "(", "self", ",", "mat", ")", ":", "\n", "# Generally, xyz,rgb,label", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDataset.get_instance_info": [[278, 303], ["numpy.unique", "numpy.ones", "xyz_.min", "xyz_.max", "xyz_.mean", "mask.sum", "numpy.concatenate"], "methods", ["None"], ["    ", "return", "mat", "[", ":", ",", ":", "3", "]", ",", "mat", "[", ":", ",", "3", ":", "-", "1", "]", ",", "mat", "[", ":", ",", "-", "1", "]", "\n", "\n", "", "def", "get_instance_info", "(", "self", ",", "xyz", ",", "instance_ids", ")", ":", "\n", "    ", "'''\n    :param xyz: (n, 3)\n    :param instance_ids: (n), int, (1~nInst, -1)\n    :return: instance_num, dict\n    '''", "\n", "centers", "=", "np", ".", "ones", "(", "(", "xyz", ".", "shape", "[", "0", "]", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "*", "-", "1", "# (n, 9), float, (cx, cy, cz, minx, miny, minz, maxx, maxy, maxz, occ, num_instances)", "\n", "occupancy", "=", "{", "}", "# (nInst), int", "\n", "bbox", "=", "{", "}", "\n", "unique_ids", "=", "np", ".", "unique", "(", "instance_ids", ")", "\n", "for", "id_", "in", "unique_ids", ":", "\n", "        ", "if", "id_", "==", "-", "1", ":", "\n", "            ", "continue", "\n", "\n", "", "mask", "=", "(", "instance_ids", "==", "id_", ")", "\n", "xyz_", "=", "xyz", "[", "mask", "]", "\n", "bbox_min", "=", "xyz_", ".", "min", "(", "0", ")", "\n", "bbox_max", "=", "xyz_", ".", "max", "(", "0", ")", "\n", "center", "=", "xyz_", ".", "mean", "(", "0", ")", "\n", "\n", "centers", "[", "mask", "]", "=", "center", "\n", "occupancy", "[", "id_", "]", "=", "mask", ".", "sum", "(", ")", "\n", "bbox", "[", "id_", "]", "=", "np", ".", "concatenate", "(", "[", "bbox_min", ",", "bbox_max", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.VoxelizationDataset.__getitem__": [[304, 344], ["dataset.VoxelizationDataset.load_data", "dataset.VoxelizationDataset.voxelizer.voxelize", "tuple", "MinkowskiEngine.utils.sparse_quantize", "dataset.VoxelizationDataset.prevoxel_transform", "dataset.VoxelizationDataset.input_transform", "dataset.VoxelizationDataset.target_transform", "numpy.array", "dataset.VoxelizationDataset._augment_coords_to_feats", "return_args.append", "transformation.astype", "torch.rand"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.stanford.StanfordDataset.load_data", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.voxelize", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.stanford.StanfordVoxelizationDatasetBase._augment_coords_to_feats"], ["", "return", "{", "\"ids\"", ":", "instance_ids", ",", "\"center\"", ":", "centers", ",", "\"occupancy\"", ":", "occupancy", ",", "\"bbox\"", ":", "bbox", "}", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "coords", ",", "feats", ",", "labels", ",", "instances", "=", "self", ".", "load_data", "(", "index", ")", "\n", "# Downsample the pointcloud with finer voxel size before transformation for memory and speed", "\n", "if", "self", ".", "PREVOXELIZATION_VOXEL_SIZE", "is", "not", "None", ":", "\n", "      ", "inds", "=", "ME", ".", "utils", ".", "sparse_quantize", "(", "\n", "coords", "/", "self", ".", "PREVOXELIZATION_VOXEL_SIZE", ",", "return_index", "=", "True", ")", "\n", "coords", "=", "coords", "[", "inds", "]", "\n", "feats", "=", "feats", "[", "inds", "]", "\n", "labels", "=", "labels", "[", "inds", "]", "\n", "instances", "=", "instances", "[", "inds", "]", "\n", "\n", "# Prevoxel transformations", "\n", "", "if", "self", ".", "prevoxel_transform", "is", "not", "None", ":", "\n", "      ", "coords", ",", "feats", ",", "labels", "=", "self", ".", "prevoxel_transform", "(", "coords", ",", "feats", ",", "labels", ")", "\n", "\n", "", "coords", ",", "feats", ",", "labels", ",", "instances", ",", "transformation", "=", "self", ".", "voxelizer", ".", "voxelize", "(", "\n", "coords", ",", "feats", ",", "labels", ",", "instances", ")", "\n", "\n", "#import ipdb; ipdb.set_trace()", "\n", "#from lib.pc_utils import save_point_cloud", "\n", "#save_point_cloud(coords, 'test.ply')", "\n", "\n", "\n", "# map labels not used for evaluation to ignore_label", "\n", "if", "self", ".", "input_transform", "is", "not", "None", ":", "\n", "      ", "coords", ",", "feats", ",", "labels", ",", "instances", "=", "self", ".", "input_transform", "(", "coords", ",", "feats", ",", "labels", ",", "instances", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "      ", "coords", ",", "feats", ",", "labels", ",", "instances", "=", "self", ".", "target_transform", "(", "coords", ",", "feats", ",", "labels", ",", "instances", ")", "\n", "\n", "", "if", "self", ".", "augment_data", ":", "\n", "# For some networks, making the network invariant to even, odd coords is important", "\n", "      ", "coords", "+=", "(", "torch", ".", "rand", "(", "3", ")", "*", "100", ")", ".", "int", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "#----------------Instances-------------------------", "\n", "", "instance_info", "=", "instances", "\n", "condition", "=", "(", "labels", "==", "self", ".", "ignore_mask", ")", "\n", "instances", "[", "condition", "]", "=", "-", "1", "\n", "IGNORE_LABELS_INSTANCE", "=", "self", ".", "IGNORE_LABELS", "if", "self", ".", "config", ".", "misc", ".", "train_stuff", "else", "self", ".", "IGNORE_LABELS_INSTANCE", "\n", "for", "ignore_id", "in", "IGNORE_LABELS_INSTANCE", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.TemporalVoxelizationDataset.__init__": [[368, 399], ["dataset.VoxelizationDataset.__init__", "any", "ValueError", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "\n", "data_paths", ",", "\n", "prevoxel_transform", "=", "None", ",", "\n", "input_transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "data_root", "=", "'/'", ",", "\n", "ignore_label", "=", "255", ",", "\n", "temporal_dilation", "=", "1", ",", "\n", "temporal_numseq", "=", "3", ",", "\n", "return_transformation", "=", "False", ",", "\n", "augment_data", "=", "False", ",", "\n", "config", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "    ", "VoxelizationDataset", ".", "__init__", "(", "\n", "self", ",", "\n", "data_paths", ",", "\n", "prevoxel_transform", "=", "prevoxel_transform", ",", "\n", "input_transform", "=", "input_transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "data_root", "=", "data_root", ",", "\n", "ignore_label", "=", "ignore_label", ",", "\n", "return_transformation", "=", "return_transformation", ",", "\n", "augment_data", "=", "augment_data", ",", "\n", "config", "=", "config", ",", "\n", "**", "kwargs", ")", "\n", "self", ".", "temporal_dilation", "=", "temporal_dilation", "\n", "self", ".", "temporal_numseq", "=", "temporal_numseq", "\n", "temporal_window", "=", "temporal_dilation", "*", "(", "temporal_numseq", "-", "1", ")", "+", "1", "\n", "self", ".", "numels", "=", "[", "len", "(", "p", ")", "-", "temporal_window", "+", "1", "for", "p", "in", "self", ".", "data_paths", "]", "\n", "if", "any", "(", "[", "numel", "<=", "0", "for", "numel", "in", "self", ".", "numels", "]", ")", ":", "\n", "      ", "raise", "ValueError", "(", "'Your temporal window configuration is too wide for '", "\n", "'this dataset. Please change the configuration.'", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.TemporalVoxelizationDataset.load_world_pointcloud": [[401, 403], ["None"], "methods", ["None"], ["", "", "def", "load_world_pointcloud", "(", "self", ",", "filename", ")", ":", "\n", "    ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.TemporalVoxelizationDataset.__getitem__": [[404, 470], ["enumerate", "zip", "zip", "dataset.TemporalVoxelizationDataset.voxelizer.voxelize_temporal", "numpy.vstack", "numpy.vstack", "numpy.hstack", "tuple", "random.randrange", "dataset.TemporalVoxelizationDataset.load_world_pointcloud", "dataset.TemporalVoxelizationDataset.prevoxel_transform", "dataset.TemporalVoxelizationDataset.input_transform", "dataset.TemporalVoxelizationDataset.target_transform", "numpy.array", "numpy.vstack", "numpy.vstack", "return_args.extend", "range", "random.randrange", "range", "MinkowskiEngine.utils.sparse_quantize", "new_ptcs.append", "numpy.hstack", "range", "enumerate", "numpy.hstack", "numpy.hstack", "numpy.vstack.astype", "numpy.vstack.astype", "sum", "enumerate", "enumerate", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.voxelize_temporal", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.TemporalVoxelizationDataset.load_world_pointcloud"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "for", "seq_idx", ",", "numel", "in", "enumerate", "(", "self", ".", "numels", ")", ":", "\n", "      ", "if", "index", ">=", "numel", ":", "\n", "        ", "index", "-=", "numel", "\n", "", "else", ":", "\n", "        ", "break", "\n", "\n", "", "", "numseq", "=", "self", ".", "temporal_numseq", "\n", "if", "self", ".", "augment_data", "and", "self", ".", "config", ".", "data", ".", "temporal_rand_numseq", ":", "\n", "      ", "numseq", "=", "random", ".", "randrange", "(", "1", ",", "self", ".", "temporal_numseq", "+", "1", ")", "\n", "", "dilations", "=", "[", "self", ".", "temporal_dilation", "for", "i", "in", "range", "(", "numseq", "-", "1", ")", "]", "\n", "if", "self", ".", "augment_data", "and", "self", ".", "config", ".", "data", ".", "temporal_rand_dilation", ":", "\n", "      ", "dilations", "=", "[", "random", ".", "randrange", "(", "1", ",", "self", ".", "temporal_dilation", "+", "1", ")", "for", "i", "in", "range", "(", "numseq", "-", "1", ")", "]", "\n", "", "files", "=", "[", "self", ".", "data_paths", "[", "seq_idx", "]", "[", "index", "+", "sum", "(", "dilations", "[", ":", "i", "]", ")", "]", "for", "i", "in", "range", "(", "numseq", ")", "]", "\n", "\n", "world_pointclouds", "=", "[", "self", ".", "load_world_pointcloud", "(", "f", ")", "for", "f", "in", "files", "]", "\n", "ptcs", ",", "centers", "=", "zip", "(", "*", "world_pointclouds", ")", "\n", "\n", "# Downsample pointcloud for speed and memory", "\n", "if", "self", ".", "PREVOXELIZATION_VOXEL_SIZE", "is", "not", "None", ":", "\n", "      ", "new_ptcs", "=", "[", "]", "\n", "for", "ptc", "in", "ptcs", ":", "\n", "        ", "inds", "=", "ME", ".", "utils", ".", "sparse_quantize", "(", "\n", "ptc", "[", ":", ",", ":", "3", "]", "/", "self", ".", "PREVOXELIZATION_VOXEL_SIZE", ",", "return_index", "=", "True", ")", "\n", "new_ptcs", ".", "append", "(", "ptc", "[", "inds", "]", ")", "\n", "", "ptcs", "=", "new_ptcs", "\n", "\n", "# Apply prevoxel transformations", "\n", "", "ptcs", "=", "[", "self", ".", "prevoxel_transform", "(", "ptc", ")", "for", "ptc", "in", "ptcs", "]", "\n", "\n", "coords", ",", "feats", ",", "labels", "=", "zip", "(", "*", "ptcs", ")", "\n", "outs", "=", "self", ".", "voxelizer", ".", "voxelize_temporal", "(", "\n", "coords", ",", "feats", ",", "labels", ",", "centers", "=", "centers", ",", "return_transformation", "=", "self", ".", "return_transformation", ")", "\n", "\n", "if", "self", ".", "return_transformation", ":", "\n", "      ", "coords_t", ",", "feats_t", ",", "labels_t", ",", "transformation_t", "=", "outs", "\n", "", "else", ":", "\n", "      ", "coords_t", ",", "feats_t", ",", "labels_t", "=", "outs", "\n", "\n", "", "joint_coords", "=", "np", ".", "vstack", "(", "[", "\n", "np", ".", "hstack", "(", "(", "coords", ",", "np", ".", "ones", "(", "(", "coords", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "*", "i", ")", ")", "for", "i", ",", "coords", "in", "enumerate", "(", "coords_t", ")", "\n", "]", ")", "\n", "joint_feats", "=", "np", ".", "vstack", "(", "feats_t", ")", "\n", "joint_labels", "=", "np", ".", "hstack", "(", "labels_t", ")", "\n", "\n", "# map labels not used for evaluation to ignore_label", "\n", "if", "self", ".", "input_transform", "is", "not", "None", ":", "\n", "      ", "joint_coords", ",", "joint_feats", ",", "joint_labels", "=", "self", ".", "input_transform", "(", "joint_coords", ",", "joint_feats", ",", "\n", "joint_labels", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "      ", "joint_coords", ",", "joint_feats", ",", "joint_labels", "=", "self", ".", "target_transform", "(", "joint_coords", ",", "joint_feats", ",", "\n", "joint_labels", ")", "\n", "", "if", "self", ".", "IGNORE_LABELS", "is", "not", "None", ":", "\n", "      ", "joint_labels", "=", "np", ".", "array", "(", "[", "self", ".", "label_map", "[", "x", "]", "for", "x", "in", "joint_labels", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n", "", "return_args", "=", "[", "joint_coords", ",", "joint_feats", ",", "joint_labels", "]", "\n", "if", "self", ".", "return_transformation", ":", "\n", "      ", "pointclouds", "=", "np", ".", "vstack", "(", "[", "\n", "np", ".", "hstack", "(", "(", "pointcloud", "[", "0", "]", "[", ":", ",", ":", "6", "]", ",", "np", ".", "ones", "(", "(", "pointcloud", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "*", "i", ")", ")", "\n", "for", "i", ",", "pointcloud", "in", "enumerate", "(", "world_pointclouds", ")", "\n", "]", ")", "\n", "transformations", "=", "np", ".", "vstack", "(", "\n", "[", "np", ".", "hstack", "(", "(", "transformation", ",", "[", "i", "]", ")", ")", "for", "i", ",", "transformation", "in", "enumerate", "(", "transformation_t", ")", "]", ")", "\n", "\n", "return_args", ".", "extend", "(", "[", "pointclouds", ".", "astype", "(", "np", ".", "float32", ")", ",", "transformations", ".", "astype", "(", "np", ".", "float32", ")", "]", ")", "\n", "", "return", "tuple", "(", "return_args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.TemporalVoxelizationDataset.__len__": [[471, 474], ["sum"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "num_data", "=", "sum", "(", "self", ".", "numels", ")", "\n", "return", "num_data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.datasetphase_2str": [[30, 45], ["ValueError"], "function", ["None"], ["Val2", "=", "2", "\n", "TrainVal", "=", "3", "\n", "Test", "=", "4", "\n", "Debug", "=", "5", "\n", "\n", "\n", "", "def", "datasetphase_2str", "(", "arg", ")", ":", "\n", "  ", "if", "arg", "==", "DatasetPhase", ".", "Train", ":", "\n", "    ", "return", "'train'", "\n", "", "elif", "arg", "==", "DatasetPhase", ".", "Val", ":", "\n", "    ", "return", "'val'", "\n", "", "elif", "arg", "==", "DatasetPhase", ".", "Val2", ":", "\n", "    ", "return", "'val2'", "\n", "", "elif", "arg", "==", "DatasetPhase", ".", "TrainVal", ":", "\n", "    ", "return", "'trainval'", "\n", "", "elif", "arg", "==", "DatasetPhase", ".", "Test", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.str2datasetphase_type": [[47, 62], ["arg.upper", "arg.upper", "arg.upper", "arg.upper", "arg.upper", "arg.upper", "ValueError"], "function", ["None"], ["", "else", ":", "\n", "    ", "raise", "ValueError", "(", "'phase must be one of dataset enum.'", ")", "\n", "\n", "\n", "", "", "def", "str2datasetphase_type", "(", "arg", ")", ":", "\n", "  ", "if", "arg", ".", "upper", "(", ")", "==", "'TRAIN'", ":", "\n", "    ", "return", "DatasetPhase", ".", "Train", "\n", "", "elif", "arg", ".", "upper", "(", ")", "==", "'VAL'", ":", "\n", "    ", "return", "DatasetPhase", ".", "Val", "\n", "", "elif", "arg", ".", "upper", "(", ")", "==", "'VAL2'", ":", "\n", "    ", "return", "DatasetPhase", ".", "Val2", "\n", "", "elif", "arg", ".", "upper", "(", ")", "==", "'TRAINVAL'", ":", "\n", "    ", "return", "DatasetPhase", ".", "TrainVal", "\n", "", "elif", "arg", ".", "upper", "(", ")", "==", "'TEST'", ":", "\n", "    ", "return", "DatasetPhase", ".", "Test", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.cache": [[64, 78], ["func", "func"], "function", ["None"], ["\n", "\n", "", "", "def", "cache", "(", "func", ")", ":", "\n", "\n", "  ", "def", "wrapper", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "# Assume that args[0] is index", "\n", "    ", "index", "=", "args", "[", "0", "]", "\n", "if", "self", ".", "cache", ":", "\n", "      ", "if", "index", "not", "in", "self", ".", "cache_dict", "[", "func", ".", "__name__", "]", ":", "\n", "        ", "results", "=", "func", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "cache_dict", "[", "func", ".", "__name__", "]", "[", "index", "]", "=", "results", "\n", "", "return", "self", ".", "cache_dict", "[", "func", ".", "__name__", "]", "[", "index", "]", "\n", "", "else", ":", "\n", "      ", "return", "func", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.initialize_data_loader": [[346, 421], ["isinstance", "DatasetClass", "torch.utils.data.DataLoader", "dataset.str2datasetphase_type", "datasets.cflt_collate_fn_factory", "datasets.cfl_collate_fn_factory", "prevoxel_transform_train.append", "len", "datasets.Compose", "len", "datasets.Compose", "datasets.ElasticDistortion", "datasets.RandomDropout", "datasets.RandomHorizontalFlip", "datasets.ChromaticAutoContrast", "datasets.ChromaticTranslation", "datasets.ChromaticJitter", "lib.distributed.get_world_size", "datasets.dataloader.DistributedInfSampler", "datasets.dataloader.InfSampler"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.str2datasetphase_type", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size"], ["instances", "[", "condition", "]", "=", "-", "1", "\n", "", "instance_info", "=", "self", ".", "get_instance_info", "(", "coords", ",", "instances", ")", "\n", "\n", "# ------------- label mapping --------------------", "\n", "if", "self", ".", "IGNORE_LABELS", "is", "not", "None", ":", "\n", "      ", "labels", "=", "np", ".", "array", "(", "[", "self", ".", "label_map", "[", "x", "]", "for", "x", "in", "labels", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n", "# Use coordinate features if config is set", "\n", "", "if", "self", ".", "AUGMENT_COORDS_TO_FEATS", ":", "\n", "      ", "coords", ",", "feats", ",", "labels", "=", "self", ".", "_augment_coords_to_feats", "(", "coords", ",", "feats", ",", "labels", ")", "\n", "\n", "", "return_args", "=", "[", "coords", ",", "feats", ",", "labels", ",", "instance_info", "]", "\n", "if", "self", ".", "return_transformation", ":", "\n", "      ", "return_args", ".", "append", "(", "transformation", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "\n", "", "return", "tuple", "(", "return_args", ")", "\n", "\n", "\n", "", "", "class", "TemporalVoxelizationDataset", "(", "VoxelizationDataset", ")", ":", "\n", "\n", "  ", "IS_TEMPORAL", "=", "True", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "data_paths", ",", "\n", "prevoxel_transform", "=", "None", ",", "\n", "input_transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "data_root", "=", "'/'", ",", "\n", "ignore_label", "=", "255", ",", "\n", "temporal_dilation", "=", "1", ",", "\n", "temporal_numseq", "=", "3", ",", "\n", "return_transformation", "=", "False", ",", "\n", "augment_data", "=", "False", ",", "\n", "config", "=", "None", ",", "\n", "**", "kwargs", ")", ":", "\n", "    ", "VoxelizationDataset", ".", "__init__", "(", "\n", "self", ",", "\n", "data_paths", ",", "\n", "prevoxel_transform", "=", "prevoxel_transform", ",", "\n", "input_transform", "=", "input_transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "data_root", "=", "data_root", ",", "\n", "ignore_label", "=", "ignore_label", ",", "\n", "return_transformation", "=", "return_transformation", ",", "\n", "augment_data", "=", "augment_data", ",", "\n", "config", "=", "config", ",", "\n", "**", "kwargs", ")", "\n", "self", ".", "temporal_dilation", "=", "temporal_dilation", "\n", "self", ".", "temporal_numseq", "=", "temporal_numseq", "\n", "temporal_window", "=", "temporal_dilation", "*", "(", "temporal_numseq", "-", "1", ")", "+", "1", "\n", "self", ".", "numels", "=", "[", "len", "(", "p", ")", "-", "temporal_window", "+", "1", "for", "p", "in", "self", ".", "data_paths", "]", "\n", "if", "any", "(", "[", "numel", "<=", "0", "for", "numel", "in", "self", ".", "numels", "]", ")", ":", "\n", "      ", "raise", "ValueError", "(", "'Your temporal window configuration is too wide for '", "\n", "'this dataset. Please change the configuration.'", ")", "\n", "\n", "", "", "def", "load_world_pointcloud", "(", "self", ",", "filename", ")", ":", "\n", "    ", "raise", "NotImplementedError", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "    ", "for", "seq_idx", ",", "numel", "in", "enumerate", "(", "self", ".", "numels", ")", ":", "\n", "      ", "if", "index", ">=", "numel", ":", "\n", "        ", "index", "-=", "numel", "\n", "", "else", ":", "\n", "        ", "break", "\n", "\n", "", "", "numseq", "=", "self", ".", "temporal_numseq", "\n", "if", "self", ".", "augment_data", "and", "self", ".", "config", ".", "data", ".", "temporal_rand_numseq", ":", "\n", "      ", "numseq", "=", "random", ".", "randrange", "(", "1", ",", "self", ".", "temporal_numseq", "+", "1", ")", "\n", "", "dilations", "=", "[", "self", ".", "temporal_dilation", "for", "i", "in", "range", "(", "numseq", "-", "1", ")", "]", "\n", "if", "self", ".", "augment_data", "and", "self", ".", "config", ".", "data", ".", "temporal_rand_dilation", ":", "\n", "      ", "dilations", "=", "[", "random", ".", "randrange", "(", "1", ",", "self", ".", "temporal_dilation", "+", "1", ")", "for", "i", "in", "range", "(", "numseq", "-", "1", ")", "]", "\n", "", "files", "=", "[", "self", ".", "data_paths", "[", "seq_idx", "]", "[", "index", "+", "sum", "(", "dilations", "[", ":", "i", "]", ")", "]", "for", "i", "in", "range", "(", "numseq", ")", "]", "\n", "\n", "world_pointclouds", "=", "[", "self", ".", "load_world_pointcloud", "(", "f", ")", "for", "f", "in", "files", "]", "\n", "ptcs", ",", "centers", "=", "zip", "(", "*", "world_pointclouds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.__init__": [[54, 92], ["isinstance", "lib.utils.read_txt", "logging.info", "datasets.dataset.VoxelizationDataset.__init__", "datasets.dataset.str2datasetphase_type", "os.path.join", "lib.utils.read_txt", "torch.load"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.read_txt", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.str2datasetphase_type", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.read_txt", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["DatasetPhase", ".", "Train", ":", "'scannetv2_train.txt'", ",", "\n", "DatasetPhase", ".", "Val", ":", "'scannetv2_val.txt'", ",", "\n", "DatasetPhase", ".", "TrainVal", ":", "'scannetv2_trainval.txt'", ",", "\n", "DatasetPhase", ".", "Test", ":", "'scannetv2_test.txt'", ",", "\n", "DatasetPhase", ".", "Debug", ":", "'debug.txt'", "\n", "}", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "config", ",", "\n", "prevoxel_transform", "=", "None", ",", "\n", "input_transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "augment_data", "=", "True", ",", "\n", "elastic_distortion", "=", "False", ",", "\n", "cache", "=", "False", ",", "\n", "phase", "=", "DatasetPhase", ".", "Train", ")", ":", "\n", "    ", "if", "isinstance", "(", "phase", ",", "str", ")", ":", "\n", "      ", "phase", "=", "str2datasetphase_type", "(", "phase", ")", "\n", "# Use cropped rooms for train/val", "\n", "", "data_root", "=", "config", ".", "data", ".", "scannet_path", "\n", "if", "phase", "not", "in", "[", "DatasetPhase", ".", "Train", ",", "DatasetPhase", ".", "TrainVal", "]", ":", "\n", "      ", "self", ".", "CLIP_BOUND", "=", "self", ".", "TEST_CLIP_BOUND", "\n", "\n", "", "data_paths", "=", "read_txt", "(", "os", ".", "path", ".", "join", "(", "data_root", ",", "'splits'", ",", "self", ".", "DATA_PATH_FILE", "[", "phase", "]", ")", ")", "\n", "if", "phase", "==", "DatasetPhase", ".", "Train", "and", "config", ".", "data", ".", "train_file", ":", "\n", "      ", "data_paths", "=", "read_txt", "(", "os", ".", "path", ".", "join", "(", "data_root", ",", "'splits'", ",", "config", ".", "data", ".", "train_file", ")", ")", "\n", "\n", "# data efficiency by sampling points", "\n", "", "self", ".", "sampled_inds", "=", "{", "}", "\n", "if", "config", ".", "data", ".", "sampled_inds", "and", "phase", "==", "DatasetPhase", ".", "Train", ":", "\n", "      ", "self", ".", "sampled_inds", "=", "torch", ".", "load", "(", "config", ".", "data", ".", "sampled_inds", ")", "\n", "\n", "", "data_paths", "=", "[", "data_path", "+", "'.pth'", "for", "data_path", "in", "data_paths", "]", "\n", "logging", ".", "info", "(", "'Loading {}: {}'", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ",", "self", ".", "DATA_PATH_FILE", "[", "phase", "]", ")", ")", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "data_paths", ",", "\n", "data_root", "=", "data_root", ",", "\n", "prevoxel_transform", "=", "prevoxel_transform", ",", "\n", "input_transform", "=", "input_transform", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_output_id": [[93, 95], ["pathlib.Path().stem.split", "pathlib.Path"], "methods", ["None"], ["target_transform", "=", "target_transform", ",", "\n", "ignore_label", "=", "config", ".", "data", ".", "ignore_label", ",", "\n", "return_transformation", "=", "config", ".", "data", ".", "return_transformation", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset._augment_locfeat": [[96, 102], ["numpy.hstack", "numpy.expand_dims"], "methods", ["None"], ["augment_data", "=", "augment_data", ",", "\n", "elastic_distortion", "=", "elastic_distortion", ",", "\n", "config", "=", "config", ")", "\n", "\n", "", "def", "get_output_id", "(", "self", ",", "iteration", ")", ":", "\n", "    ", "return", "'_'", ".", "join", "(", "Path", "(", "self", ".", "data_paths", "[", "iteration", "]", ")", ".", "stem", ".", "split", "(", "'_'", ")", "[", ":", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.load_data": [[103, 117], ["torch.load", "pointcloud[].astype", "pointcloud[].astype", "pointcloud[].astype", "scannet.ScannetVoxelizationDataset.get_output_id", "numpy.ones_like().astype", "numpy.ones_like"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_output_id"], ["", "def", "_augment_locfeat", "(", "self", ",", "pointcloud", ")", ":", "\n", "# Assuming that pointcloud is xyzrgb(...), append location feat.", "\n", "    ", "pointcloud", "=", "np", ".", "hstack", "(", "\n", "(", "pointcloud", "[", ":", ",", ":", "6", "]", ",", "100", "*", "np", ".", "expand_dims", "(", "pointcloud", "[", ":", ",", "self", ".", "LOCFEAT_IDX", "]", ",", "1", ")", ",", "\n", "pointcloud", "[", ":", ",", "6", ":", "]", ")", ")", "\n", "return", "pointcloud", "\n", "\n", "", "def", "load_data", "(", "self", ",", "index", ")", ":", "\n", "    ", "filepath", "=", "self", ".", "data_root", "/", "self", ".", "data_paths", "[", "index", "]", "\n", "pointcloud", "=", "torch", ".", "load", "(", "filepath", ")", "\n", "coords", "=", "pointcloud", "[", "0", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "feats", "=", "pointcloud", "[", "1", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "labels", "=", "pointcloud", "[", "2", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "instances", "=", "pointcloud", "[", "3", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "if", "self", ".", "sampled_inds", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_original_pointcloud": [[124, 146], ["logging.info", "torch.load", "transformation[].numpy().reshape", "numpy.hstack", "numpy.array", "LazyTensor", "LazyTensor", "D_ij.argKmin", "coords[].numpy", "transformation[].numpy", "numpy.ones", "numpy.linalg.inv"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["\n", "", "return", "coords", ",", "feats", ",", "labels", ",", "instances", "\n", "\n", "", "def", "get_original_pointcloud", "(", "self", ",", "coords", ",", "transformation", ",", "iteration", ")", ":", "\n", "      ", "logging", ".", "info", "(", "'===> Start testing on original pointcloud space.'", ")", "\n", "data_path", "=", "self", ".", "data_paths", "[", "iteration", "]", "\n", "fullply_f", "=", "self", ".", "data_root", "/", "data_path", "\n", "query_xyz", ",", "_", ",", "query_label", ",", "_", "=", "torch", ".", "load", "(", "fullply_f", ")", "\n", "\n", "coords", "=", "coords", "[", ":", ",", "1", ":", "]", ".", "numpy", "(", ")", "+", "0.5", "\n", "curr_transformation", "=", "transformation", "[", "0", ",", ":", "16", "]", ".", "numpy", "(", ")", ".", "reshape", "(", "4", ",", "4", ")", "\n", "coords", "=", "np", ".", "hstack", "(", "(", "coords", ",", "np", ".", "ones", "(", "(", "coords", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ")", ")", "\n", "coords", "=", "(", "np", ".", "linalg", ".", "inv", "(", "curr_transformation", ")", "@", "coords", ".", "T", ")", ".", "T", "\n", "\n", "# Run test for each room.", "\n", "from", "pykeops", ".", "numpy", "import", "LazyTensor", "\n", "from", "pykeops", ".", "numpy", ".", "utils", "import", "IsGpuAvailable", "\n", "\n", "query_xyz", "=", "np", ".", "array", "(", "query_xyz", ")", "\n", "x_i", "=", "LazyTensor", "(", "query_xyz", "[", ":", ",", "None", ",", ":", "]", ")", "# x_i.shape = (1e6, 1, 3)", "\n", "y_j", "=", "LazyTensor", "(", "coords", "[", ":", ",", ":", "3", "]", "[", "None", ",", ":", ",", ":", "]", ")", "# y_j.shape = ( 1, 2e6,3)", "\n", "D_ij", "=", "(", "(", "x_i", "-", "y_j", ")", "**", "2", ")", ".", "sum", "(", "-", "1", ")", "# (M**2, N) symbolic matrix of squared distances", "\n", "indKNN", "=", "D_ij", ".", "argKmin", "(", "1", ",", "dim", "=", "1", ")", "# Grid <-> Samples, (M**2, K) integer tensor", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.save_prediction": [[150, 163], ["print", "scannet.ScannetVoxelizationDataset.get_original_pointcloud", "scannet.ScannetVoxelizationDataset.get_output_id", "torch.save", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_original_pointcloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_output_id"], ["", "def", "save_prediction", "(", "self", ",", "coords", ",", "pred", ",", "transformation", ",", "iteration", ",", "save_dir", ")", ":", "\n", "    ", "print", "(", "'Running full pointcloud evaluation.'", ")", "\n", "#if dataset.IGNORE_LABELS:", "\n", "#  decode_label_map = {}", "\n", "#  for k, v in dataset.label_map.items():", "\n", "#    decode_label_map[v] = k", "\n", "#  orig_pred = np.array([decode_label_map[x.item()] for x in orig_pred.cpu()], dtype=np.int)", "\n", "inds_mapping", ",", "xyz", "=", "self", ".", "get_original_pointcloud", "(", "coords", ",", "transformation", ",", "iteration", ")", "\n", "save", "=", "{", "'points'", ":", "coords", ",", "'mapping'", ":", "inds_mapping", ",", "'labels'", ":", "pred", "}", "\n", "\n", "# Save prediciton in txt format for submission.", "\n", "room_id", "=", "self", ".", "get_output_id", "(", "iteration", ")", "\n", "torch", ".", "save", "(", "save", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "room_id", ")", ")", "\n", "#np.savetxt(f'{save_dir}/{room_id}.txt', ptc_pred, fmt='%i')", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.save_groundtruth": [[165, 170], ["scannet.ScannetVoxelizationDataset.get_output_id", "torch.save", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_output_id"], ["", "def", "save_groundtruth", "(", "self", ",", "coords", ",", "gt", ",", "transformation", ",", "iteration", ",", "save_dir", ")", ":", "\n", "    ", "save", "=", "{", "'points'", ":", "coords", ",", "'labels'", ":", "gt", "}", "\n", "# Save prediciton in txt format for submission.", "\n", "room_id", "=", "self", ".", "get_output_id", "(", "iteration", ")", "\n", "torch", ".", "save", "(", "save", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "room_id", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.__init__": [[15, 19], ["dataloader.InfSampler.reset_permutation"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.reset_permutation"], ["\n", "\n", "def", "__init__", "(", "self", ",", "data_source", ",", "shuffle", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.reset_permutation": [[20, 25], ["len", "torch.randperm.tolist", "torch.randperm.tolist", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm"], "methods", ["None"], ["    ", "self", ".", "data_source", "=", "data_source", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "reset_permutation", "(", ")", "\n", "\n", "", "def", "reset_permutation", "(", "self", ")", ":", "\n", "    ", "perm", "=", "len", "(", "self", ".", "data_source", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.__iter__": [[26, 28], ["None"], "methods", ["None"], ["if", "self", ".", "shuffle", ":", "\n", "      ", "perm", "=", "torch", ".", "randperm", "(", "perm", ")", "\n", "", "self", ".", "_perm", "=", "perm", ".", "tolist", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.__next__": [[29, 34], ["dataloader.InfSampler._perm.pop", "len", "dataloader.InfSampler.reset_permutation"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.reset_permutation"], ["\n", "", "def", "__iter__", "(", "self", ")", ":", "\n", "    ", "return", "self", "\n", "\n", "", "def", "__next__", "(", "self", ")", ":", "\n", "    ", "if", "len", "(", "self", ".", "_perm", ")", "==", "0", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.__len__": [[35, 37], ["len"], "methods", ["None"], ["      ", "self", ".", "reset_permutation", "(", ")", "\n", "\n", "", "return", "self", ".", "_perm", ".", "pop", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.DistributedInfSampler.__init__": [[42, 61], ["int", "dataloader.DistributedInfSampler.reset_permutation", "torch.get_world_size", "torch.get_world_size", "torch.get_rank", "torch.get_rank", "math.ceil", "torch.is_available", "torch.is_available", "RuntimeError", "torch.is_available", "torch.is_available", "RuntimeError", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.reset_permutation", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_world_size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.distributed.get_rank"], ["", "next", "=", "__next__", "# Python 2 compatibility", "\n", "\n", "\n", "", "class", "DistributedInfSampler", "(", "InfSampler", ")", ":", "\n", "  ", "def", "__init__", "(", "self", ",", "data_source", ",", "num_replicas", "=", "None", ",", "rank", "=", "None", ",", "shuffle", "=", "True", ")", ":", "\n", "    ", "if", "num_replicas", "is", "None", ":", "\n", "      ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"Requires distributed package to be available\"", ")", "\n", "", "num_replicas", "=", "dist", ".", "get_world_size", "(", ")", "\n", "", "if", "rank", "is", "None", ":", "\n", "      ", "if", "not", "dist", ".", "is_available", "(", ")", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"Requires distributed package to be available\"", ")", "\n", "", "rank", "=", "dist", ".", "get_rank", "(", ")", "\n", "\n", "", "self", ".", "data_source", "=", "data_source", "\n", "self", ".", "num_replicas", "=", "num_replicas", "\n", "self", ".", "rank", "=", "rank", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "it", "=", "0", "\n", "self", ".", "num_samples", "=", "int", "(", "math", ".", "ceil", "(", "len", "(", "self", ".", "data_source", ")", "*", "1.0", "/", "self", ".", "num_replicas", ")", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.DistributedInfSampler.__next__": [[62, 71], ["len", "dataloader.DistributedInfSampler.reset_permutation", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.InfSampler.reset_permutation"], ["self", ".", "total_size", "=", "self", ".", "num_samples", "*", "self", ".", "num_replicas", "\n", "self", ".", "shuffle", "=", "shuffle", "\n", "self", ".", "reset_permutation", "(", ")", "\n", "\n", "", "def", "__next__", "(", "self", ")", ":", "\n", "    ", "it", "=", "self", ".", "it", "*", "self", ".", "num_replicas", "+", "self", ".", "rank", "\n", "value", "=", "self", ".", "_perm", "[", "it", "%", "len", "(", "self", ".", "_perm", ")", "]", "\n", "self", ".", "it", "=", "self", ".", "it", "+", "1", "\n", "\n", "if", "(", "self", ".", "it", "*", "self", ".", "num_replicas", ")", ">=", "len", "(", "self", ".", "_perm", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataloader.DistributedInfSampler.__len__": [[72, 74], ["None"], "methods", ["None"], ["      ", "self", ".", "reset_permutation", "(", ")", "\n", "self", ".", "it", "=", "0", "\n", "", "return", "value", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.__init__.add_datasets": [[9, 11], ["DATASETS.extend", "getattr", "dir", "datasets.stanford", "datasets.scannet"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.__init__.load_dataset": [[18, 32], ["print", "ValueError", "print"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.stanford.StanfordVoxelizationDatasetBase.test_pointcloud": [[52, 96], ["print", "collections.defaultdict", "enumerate", "sys.setrecursionlimit", "sorted", "numpy.zeros", "enumerate", "data_path.split", "os.path.splitext", "room_dict[].append", "os.listdir", "collections.defaultdict.values", "print", "numpy.zeros", "numpy.zeros", "numpy.array", "scipy.spatial.KDTree", "scipy.spatial.KDTree.query", "pred[].astype", "pointcloud[].astype", "lib.utils.fast_hist", "print", "enumerate", "print", "numpy.vstack", "numpy.vstack", "list", "print", "room.split", "set", "lib.utils.per_class_iu", "numpy.zeros.sum", "ious.append", "len", "numpy.load", "numpy.nanmean", "os.path.join", "stanford.StanfordVoxelizationDatasetBase.load_ply", "tuple", "numpy.vstack.tolist"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.fast_hist", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.per_class_iu", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.stanford.StanfordDataset.load_ply"], ["DatasetPhase", ".", "Train", ":", "'train.txt'", ",", "\n", "DatasetPhase", ".", "Val", ":", "'val.txt'", ",", "\n", "DatasetPhase", ".", "TrainVal", ":", "'trainval.txt'", ",", "\n", "DatasetPhase", ".", "Test", ":", "'test.txt'", "\n", "}", "\n", "\n", "def", "test_pointcloud", "(", "self", ",", "pred_dir", ")", ":", "\n", "    ", "print", "(", "'Running full pointcloud evaluation.'", ")", "\n", "# Join room by their area and room id.", "\n", "room_dict", "=", "defaultdict", "(", "list", ")", "\n", "for", "i", ",", "data_path", "in", "enumerate", "(", "self", ".", "data_paths", ")", ":", "\n", "      ", "area", ",", "room", "=", "data_path", ".", "split", "(", "os", ".", "sep", ")", "\n", "room", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "room", ")", "\n", "room_id", "=", "'_'", ".", "join", "(", "room", ".", "split", "(", "'_'", ")", "[", ":", "-", "1", "]", ")", "\n", "room_dict", "[", "(", "area", ",", "room_id", ")", "]", ".", "append", "(", "i", ")", "\n", "# Test independently for each room.", "\n", "", "sys", ".", "setrecursionlimit", "(", "100000", ")", "# Increase recursion limit for k-d tree.", "\n", "pred_list", "=", "sorted", "(", "os", ".", "listdir", "(", "pred_dir", ")", ")", "\n", "hist", "=", "np", ".", "zeros", "(", "(", "self", ".", "NUM_LABELS", ",", "self", ".", "NUM_LABELS", ")", ")", "\n", "for", "room_idx", ",", "room_list", "in", "enumerate", "(", "room_dict", ".", "values", "(", ")", ")", ":", "\n", "      ", "print", "(", "f'Evaluating room {room_idx} / {len(room_dict)}.'", ")", "\n", "# Join all predictions and query pointclouds of split data.", "\n", "pred", "=", "np", ".", "zeros", "(", "(", "0", ",", "4", ")", ")", "\n", "pointcloud", "=", "np", ".", "zeros", "(", "(", "0", ",", "7", ")", ")", "\n", "for", "i", "in", "room_list", ":", "\n", "        ", "pred", "=", "np", ".", "vstack", "(", "(", "pred", ",", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "pred_dir", ",", "pred_list", "[", "i", "]", ")", ")", ")", ")", "\n", "pointcloud", "=", "np", ".", "vstack", "(", "(", "pointcloud", ",", "self", ".", "load_ply", "(", "i", ")", "[", "0", "]", ")", ")", "\n", "# Deduplicate all query pointclouds of split data.", "\n", "", "pointcloud", "=", "np", ".", "array", "(", "list", "(", "set", "(", "tuple", "(", "l", ")", "for", "l", "in", "pointcloud", ".", "tolist", "(", ")", ")", ")", ")", "\n", "# Run test for each room.", "\n", "pred_tree", "=", "spatial", ".", "KDTree", "(", "pred", "[", ":", ",", ":", "3", "]", ",", "leafsize", "=", "500", ")", "\n", "_", ",", "result", "=", "pred_tree", ".", "query", "(", "pointcloud", "[", ":", ",", ":", "3", "]", ")", "\n", "ptc_pred", "=", "pred", "[", "result", ",", "3", "]", ".", "astype", "(", "int", ")", "\n", "ptc_gt", "=", "pointcloud", "[", ":", ",", "-", "1", "]", ".", "astype", "(", "int", ")", "\n", "if", "self", ".", "IGNORE_LABELS", ":", "\n", "        ", "ptc_pred", "=", "self", ".", "label2masked", "[", "ptc_pred", "]", "\n", "ptc_gt", "=", "self", ".", "label2masked", "[", "ptc_gt", "]", "\n", "", "hist", "+=", "fast_hist", "(", "ptc_pred", ",", "ptc_gt", ",", "self", ".", "NUM_LABELS", ")", "\n", "# Print results.", "\n", "ious", "=", "[", "]", "\n", "print", "(", "'Per class IoU:'", ")", "\n", "for", "i", ",", "iou", "in", "enumerate", "(", "per_class_iu", "(", "hist", ")", "*", "100", ")", ":", "\n", "        ", "result_str", "=", "''", "\n", "if", "hist", ".", "sum", "(", "1", ")", "[", "i", "]", ":", "\n", "          ", "result_str", "+=", "f'{iou}'", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.stanford.StanfordVoxelizationDatasetBase._augment_coords_to_feats": [[97, 104], ["coords.mean", "numpy.concatenate"], "methods", ["None"], ["ious", ".", "append", "(", "iou", ")", "\n", "", "else", ":", "\n", "          ", "result_str", "+=", "'N/A'", "# Do not print if data not in ground truth.", "\n", "", "print", "(", "result_str", ")", "\n", "", "print", "(", "f'Average IoU: {np.nanmean(ious)}'", ")", "\n", "\n", "", "", "def", "_augment_coords_to_feats", "(", "self", ",", "coords", ",", "feats", ",", "labels", "=", "None", ")", ":", "\n", "# Center x,y", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.stanford.StanfordDataset.__init__": [[124, 164], ["isinstance", "isinstance", "logging.info", "logging.info", "datasets.dataset.VoxelizationDataset.__init__", "datasets.dataset.str2datasetphase_type", "lib.utils.read_txt", "lib.utils.read_txt", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.dataset.str2datasetphase_type", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.read_txt", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.read_txt"], ["\n", "# AUGMENT_COORDS_TO_FEATS = True", "\n", "# NUM_IN_CHANNEL = 6", "\n", "AUGMENT_COORDS_TO_FEATS", "=", "False", "\n", "NUM_IN_CHANNEL", "=", "3", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "config", ",", "\n", "prevoxel_transform", "=", "None", ",", "\n", "input_transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "cache", "=", "False", ",", "\n", "augment_data", "=", "True", ",", "\n", "elastic_distortion", "=", "False", ",", "\n", "phase", "=", "DatasetPhase", ".", "Train", ")", ":", "\n", "    ", "if", "isinstance", "(", "phase", ",", "str", ")", ":", "\n", "      ", "phase", "=", "str2datasetphase_type", "(", "phase", ")", "\n", "", "if", "phase", "not", "in", "[", "DatasetPhase", ".", "Train", ",", "DatasetPhase", ".", "TrainVal", "]", ":", "\n", "      ", "self", ".", "CLIP_BOUND", "=", "self", ".", "TEST_CLIP_BOUND", "\n", "", "data_root", "=", "config", ".", "data", ".", "stanford3d_path", "\n", "if", "isinstance", "(", "self", ".", "DATA_PATH_FILE", "[", "phase", "]", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "      ", "data_paths", "=", "[", "]", "\n", "for", "split", "in", "self", ".", "DATA_PATH_FILE", "[", "phase", "]", ":", "\n", "        ", "data_paths", "+=", "read_txt", "(", "os", ".", "path", ".", "join", "(", "data_root", ",", "'splits'", ",", "split", ")", ")", "\n", "", "", "else", ":", "\n", "      ", "data_paths", "=", "read_txt", "(", "os", ".", "path", ".", "join", "(", "data_root", ",", "'splits'", ",", "self", ".", "DATA_PATH_FILE", "[", "phase", "]", ")", ")", "\n", "\n", "\n", "", "if", "config", ".", "data", ".", "voxel_size", ":", "\n", "      ", "self", ".", "VOXEL_SIZE", "=", "config", ".", "data", ".", "voxel_size", "\n", "", "logging", ".", "info", "(", "'voxel size: {}'", ".", "format", "(", "self", ".", "VOXEL_SIZE", ")", ")", "\n", "logging", ".", "info", "(", "'Loading {} {}: {}'", ".", "format", "(", "self", ".", "__class__", ".", "__name__", ",", "phase", ",", "\n", "self", ".", "DATA_PATH_FILE", "[", "phase", "]", ")", ")", "\n", "\n", "VoxelizationDataset", ".", "__init__", "(", "\n", "self", ",", "\n", "data_paths", ",", "\n", "data_root", "=", "data_root", ",", "\n", "prevoxel_transform", "=", "prevoxel_transform", ",", "\n", "input_transform", "=", "input_transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.stanford.StanfordDataset.load_ply": [[165, 174], ["plyfile.PlyData.read", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["ignore_label", "=", "config", ".", "data", ".", "ignore_label", ",", "\n", "return_transformation", "=", "config", ".", "data", ".", "return_transformation", ",", "\n", "augment_data", "=", "augment_data", ",", "\n", "elastic_distortion", "=", "elastic_distortion", ",", "\n", "config", "=", "config", ")", "\n", "\n", "", "@", "cache", "\n", "def", "load_ply", "(", "self", ",", "index", ")", ":", "\n", "    ", "filepath", "=", "self", ".", "data_root", "/", "self", ".", "data_paths", "[", "index", "]", "\n", "plydata", "=", "PlyData", ".", "read", "(", "filepath", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.stanford.StanfordDataset.load_data": [[175, 183], ["torch.load", "pointcloud[].astype", "pointcloud[].astype", "pointcloud[].astype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["data", "=", "plydata", ".", "elements", "[", "0", "]", ".", "data", "\n", "coords", "=", "np", ".", "array", "(", "[", "data", "[", "'x'", "]", ",", "data", "[", "'y'", "]", ",", "data", "[", "'z'", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", ".", "T", "\n", "feats", "=", "np", ".", "array", "(", "[", "data", "[", "'red'", "]", ",", "data", "[", "'green'", "]", ",", "data", "[", "'blue'", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", ".", "T", "\n", "labels", "=", "np", ".", "array", "(", "data", "[", "'label'", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "return", "coords", ",", "feats", ",", "labels", ",", "None", "\n", "\n", "", "@", "cache", "\n", "def", "load_data", "(", "self", ",", "index", ")", ":", "\n", "    ", "filepath", "=", "self", ".", "data_root", "/", "self", ".", "data_paths", "[", "index", "]", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.stanford.test": [[207, 251], ["Timer", "DatasetClass", "DataLoader", "DataLoader.__iter__", "range", "o3d.geometry.PointCloud", "o3d.utility.Vector3dVector", "o3d.utility.Vector3dVector", "datasets.RandomHorizontalFlip", "datasets.ChromaticAutoContrast", "datasets.ChromaticTranslation", "datasets.ChromaticJitter", "Timer.tic", "data_loader.__iter__.next", "stanford.test.make_pcd"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__iter__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.timer.Timer.tic"], ["  ", "VOXEL_SIZE", "=", "0.075", "\n", "\n", "\n", "", "class", "StanfordArea510cmDataset", "(", "StanfordArea5Dataset", ")", ":", "\n", "  ", "VOXEL_SIZE", "=", "0.1", "\n", "\n", "\n", "", "def", "test", "(", "config", ")", ":", "\n", "  ", "\"\"\"Test point cloud data loader.\n  \"\"\"", "\n", "from", "torch", ".", "utils", ".", "data", "import", "DataLoader", "\n", "from", "lib", ".", "utils", "import", "Timer", "\n", "import", "open3d", "as", "o3d", "\n", "\n", "def", "make_pcd", "(", "coords", ",", "feats", ")", ":", "\n", "    ", "pcd", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "coords", "[", ":", ",", ":", "3", "]", ".", "float", "(", ")", ".", "numpy", "(", ")", ")", "\n", "pcd", ".", "colors", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "feats", "[", ":", ",", ":", "3", "]", ".", "numpy", "(", ")", "/", "255", ")", "\n", "return", "pcd", "\n", "\n", "", "timer", "=", "Timer", "(", ")", "\n", "DatasetClass", "=", "StanfordArea5Dataset", "\n", "transformations", "=", "[", "\n", "t", ".", "RandomHorizontalFlip", "(", "DatasetClass", ".", "ROTATION_AXIS", ",", "DatasetClass", ".", "IS_TEMPORAL", ")", ",", "\n", "t", ".", "ChromaticAutoContrast", "(", ")", ",", "\n", "t", ".", "ChromaticTranslation", "(", "config", ".", "data_aug_color_trans_ratio", ")", ",", "\n", "t", ".", "ChromaticJitter", "(", "config", ".", "data_aug_color_jitter_std", ")", ",", "\n", "]", "\n", "\n", "dataset", "=", "DatasetClass", "(", "\n", "config", ",", "\n", "prevoxel_transform", "=", "t", ".", "ElasticDistortion", "(", "DatasetClass", ".", "ELASTIC_DISTORT_PARAMS", ")", ",", "\n", "input_transform", "=", "t", ".", "Compose", "(", "transformations", ")", ",", "\n", "augment_data", "=", "True", ",", "\n", "cache", "=", "True", ",", "\n", "elastic_distortion", "=", "True", ")", "\n", "\n", "data_loader", "=", "DataLoader", "(", "\n", "dataset", "=", "dataset", ",", "\n", "collate_fn", "=", "t", ".", "cfl_collate_fn_factory", "(", "limit_numpoints", "=", "False", ")", ",", "\n", "batch_size", "=", "1", ",", "\n", "shuffle", "=", "True", ")", "\n", "\n", "# Start from index 1", "\n", "iter", "=", "data_loader", ".", "__iter__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.save_features": [[118, 123], ["scannet.ScannetVoxelizationDataset.get_original_pointcloud", "scannet.ScannetVoxelizationDataset.get_output_id", "torch.save", "upsampled_features.cpu().numpy", "upsampled_features.cpu"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_original_pointcloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.datasets.scannet.ScannetVoxelizationDataset.get_output_id"], ["      ", "scene_name", "=", "self", ".", "get_output_id", "(", "index", ")", "\n", "mask", "=", "np", ".", "ones_like", "(", "labels", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "sampled_inds", "=", "self", ".", "sampled_inds", "[", "scene_name", "]", "\n", "mask", "[", "sampled_inds", "]", "=", "False", "\n", "labels", "[", "mask", "]", "=", "0", "\n", "instances", "[", "mask", "]", "=", "0", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.__init__": [[65, 84], ["range", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "CLASS_LABELS", ",", "VALID_CLASS_IDS", ",", "benchmark", "=", "False", ")", ":", "\n", "# ---------- Label info ---------- #", "\n", "#CLASS_LABELS = ['cabinet', 'bed', 'chair', 'sofa', 'table', 'door', ", "\n", "#                'window', 'bookshelf', 'picture', 'counter',", "\n", "#                'desk', 'curtain', 'refrigerator', 'shower curtain',", "\n", "#                'toilet', 'sink', 'bathtub', 'otherfurniture']", "\n", "#VALID_CLASS_IDS = np.array([3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 24, 28, 33, 34, 36, 39])", "\n", "\n", "        ", "self", ".", "CLASS_LABELS", "=", "CLASS_LABELS", "\n", "self", ".", "VALID_CLASS_IDS", "=", "VALID_CLASS_IDS", "\n", "self", ".", "ID_TO_LABEL", "=", "{", "}", "\n", "self", ".", "LABEL_TO_ID", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "VALID_CLASS_IDS", ")", ")", ":", "\n", "            ", "self", ".", "LABEL_TO_ID", "[", "CLASS_LABELS", "[", "i", "]", "]", "=", "VALID_CLASS_IDS", "[", "i", "]", "\n", "self", ".", "ID_TO_LABEL", "[", "VALID_CLASS_IDS", "[", "i", "]", "]", "=", "CLASS_LABELS", "[", "i", "]", "\n", "\n", "", "self", ".", "pred_instances", "=", "{", "}", "\n", "self", ".", "gt_instances", "=", "{", "}", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.evaluate_matches": [[85, 233], ["numpy.zeros", "enumerate", "zip", "enumerate", "len", "len", "len", "enumerate", "numpy.empty", "numpy.empty", "numpy.ones", "numpy.zeros", "enumerate", "numpy.append", "numpy.append", "numpy.argsort", "numpy.cumsum", "numpy.unique", "len", "numpy.zeros", "numpy.zeros", "numpy.append", "enumerate", "numpy.copy", "numpy.append", "numpy.append", "numpy.convolve", "numpy.dot", "len", "numpy.ones", "len", "len", "len", "float", "len", "float", "float", "float", "float", "float", "float", "numpy.append", "numpy.append", "max", "min", "numpy.append", "numpy.append", "numpy.append"], "methods", ["None"], ["", "def", "evaluate_matches", "(", "self", ",", "matches", ")", ":", "\n", "# results: class x overlap", "\n", "        ", "ap", "=", "np", ".", "zeros", "(", "(", "len", "(", "self", ".", "distance_threshes", ")", ",", "len", "(", "self", ".", "CLASS_LABELS", ")", ",", "len", "(", "self", ".", "overlaps", ")", ")", ",", "np", ".", "float", ")", "\n", "for", "di", ",", "(", "min_region_size", ",", "distance_thresh", ",", "distance_conf", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "min_region_sizes", ",", "self", ".", "distance_threshes", ",", "self", ".", "distance_confs", ")", ")", ":", "\n", "            ", "for", "oi", ",", "overlap_th", "in", "enumerate", "(", "self", ".", "overlaps", ")", ":", "\n", "                ", "pred_visited", "=", "{", "}", "\n", "for", "m", "in", "matches", ":", "\n", "                    ", "for", "p", "in", "matches", "[", "m", "]", "[", "'pred'", "]", ":", "\n", "                        ", "for", "label_name", "in", "self", ".", "CLASS_LABELS", ":", "\n", "                            ", "for", "p", "in", "matches", "[", "m", "]", "[", "'pred'", "]", "[", "label_name", "]", ":", "\n", "                                ", "if", "'filename'", "in", "p", ":", "\n", "                                    ", "pred_visited", "[", "p", "[", "'filename'", "]", "]", "=", "False", "\n", "", "", "", "", "", "for", "li", ",", "label_name", "in", "enumerate", "(", "self", ".", "CLASS_LABELS", ")", ":", "\n", "                    ", "y_true", "=", "np", ".", "empty", "(", "0", ")", "\n", "y_score", "=", "np", ".", "empty", "(", "0", ")", "\n", "hard_false_negatives", "=", "0", "\n", "has_gt", "=", "False", "\n", "has_pred", "=", "False", "\n", "for", "m", "in", "matches", ":", "\n", "                        ", "pred_instances", "=", "matches", "[", "m", "]", "[", "'pred'", "]", "[", "label_name", "]", "\n", "gt_instances", "=", "matches", "[", "m", "]", "[", "'gt'", "]", "[", "label_name", "]", "\n", "# filter groups in ground truth", "\n", "gt_instances", "=", "[", "gt", "for", "gt", "in", "gt_instances", "if", "gt", "[", "'instance_id'", "]", ">=", "1000", "and", "gt", "[", "'vert_count'", "]", ">=", "min_region_size", "and", "gt", "[", "'med_dist'", "]", "<=", "distance_thresh", "and", "gt", "[", "'dist_conf'", "]", ">=", "distance_conf", "]", "\n", "if", "gt_instances", ":", "\n", "                            ", "has_gt", "=", "True", "\n", "", "if", "pred_instances", ":", "\n", "                            ", "has_pred", "=", "True", "\n", "\n", "", "cur_true", "=", "np", ".", "ones", "(", "len", "(", "gt_instances", ")", ")", "\n", "cur_score", "=", "np", ".", "ones", "(", "len", "(", "gt_instances", ")", ")", "*", "(", "-", "float", "(", "\"inf\"", ")", ")", "\n", "cur_match", "=", "np", ".", "zeros", "(", "len", "(", "gt_instances", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "# collect matches", "\n", "for", "(", "gti", ",", "gt", ")", "in", "enumerate", "(", "gt_instances", ")", ":", "\n", "                            ", "found_match", "=", "False", "\n", "num_pred", "=", "len", "(", "gt", "[", "'matched_pred'", "]", ")", "\n", "for", "pred", "in", "gt", "[", "'matched_pred'", "]", ":", "\n", "# greedy assignments", "\n", "                                ", "if", "pred_visited", "[", "pred", "[", "'filename'", "]", "]", ":", "\n", "                                    ", "continue", "\n", "", "overlap", "=", "float", "(", "pred", "[", "'intersection'", "]", ")", "/", "(", "gt", "[", "'vert_count'", "]", "+", "pred", "[", "'vert_count'", "]", "-", "pred", "[", "'intersection'", "]", ")", "\n", "if", "overlap", ">", "overlap_th", ":", "\n", "                                    ", "confidence", "=", "pred", "[", "'confidence'", "]", "\n", "# if already have a prediction for this gt,", "\n", "# the prediction with the lower score is automatically a false positive", "\n", "if", "cur_match", "[", "gti", "]", ":", "\n", "                                        ", "max_score", "=", "max", "(", "cur_score", "[", "gti", "]", ",", "confidence", ")", "\n", "min_score", "=", "min", "(", "cur_score", "[", "gti", "]", ",", "confidence", ")", "\n", "cur_score", "[", "gti", "]", "=", "max_score", "\n", "# append false positive", "\n", "cur_true", "=", "np", ".", "append", "(", "cur_true", ",", "0", ")", "\n", "cur_score", "=", "np", ".", "append", "(", "cur_score", ",", "min_score", ")", "\n", "cur_match", "=", "np", ".", "append", "(", "cur_match", ",", "True", ")", "\n", "# otherwise set score", "\n", "", "else", ":", "\n", "                                        ", "found_match", "=", "True", "\n", "cur_match", "[", "gti", "]", "=", "True", "\n", "cur_score", "[", "gti", "]", "=", "confidence", "\n", "pred_visited", "[", "pred", "[", "'filename'", "]", "]", "=", "True", "\n", "", "", "", "if", "not", "found_match", ":", "\n", "                                ", "hard_false_negatives", "+=", "1", "\n", "# remove non-matched ground truth instances", "\n", "", "", "cur_true", "=", "cur_true", "[", "cur_match", "==", "True", "]", "\n", "cur_score", "=", "cur_score", "[", "cur_match", "==", "True", "]", "\n", "\n", "# collect non-matched predictions as false positive", "\n", "for", "pred", "in", "pred_instances", ":", "\n", "                            ", "found_gt", "=", "False", "\n", "for", "gt", "in", "pred", "[", "'matched_gt'", "]", ":", "\n", "                                ", "overlap", "=", "float", "(", "gt", "[", "'intersection'", "]", ")", "/", "(", "gt", "[", "'vert_count'", "]", "+", "pred", "[", "'vert_count'", "]", "-", "gt", "[", "'intersection'", "]", ")", "\n", "if", "overlap", ">", "overlap_th", ":", "\n", "                                    ", "found_gt", "=", "True", "\n", "break", "\n", "", "", "if", "not", "found_gt", ":", "\n", "                                ", "num_ignore", "=", "pred", "[", "'void_intersection'", "]", "\n", "for", "gt", "in", "pred", "[", "'matched_gt'", "]", ":", "\n", "# group?", "\n", "                                    ", "if", "gt", "[", "'instance_id'", "]", "<", "1000", ":", "\n", "                                        ", "num_ignore", "+=", "gt", "[", "'intersection'", "]", "\n", "# small ground truth instances", "\n", "", "if", "gt", "[", "'vert_count'", "]", "<", "min_region_size", "or", "gt", "[", "'med_dist'", "]", ">", "distance_thresh", "or", "gt", "[", "'dist_conf'", "]", "<", "distance_conf", ":", "\n", "                                        ", "num_ignore", "+=", "gt", "[", "'intersection'", "]", "\n", "", "", "proportion_ignore", "=", "float", "(", "num_ignore", ")", "/", "pred", "[", "'vert_count'", "]", "\n", "# if not ignored append false positive", "\n", "if", "proportion_ignore", "<=", "overlap_th", ":", "\n", "                                    ", "cur_true", "=", "np", ".", "append", "(", "cur_true", ",", "0", ")", "\n", "confidence", "=", "pred", "[", "\"confidence\"", "]", "\n", "cur_score", "=", "np", ".", "append", "(", "cur_score", ",", "confidence", ")", "\n", "\n", "# append to overall results", "\n", "", "", "", "y_true", "=", "np", ".", "append", "(", "y_true", ",", "cur_true", ")", "\n", "y_score", "=", "np", ".", "append", "(", "y_score", ",", "cur_score", ")", "\n", "\n", "# compute average precision", "\n", "", "if", "has_gt", "and", "has_pred", ":", "\n", "# compute precision recall curve first", "\n", "\n", "# sorting and cumsum", "\n", "                        ", "score_arg_sort", "=", "np", ".", "argsort", "(", "y_score", ")", "\n", "y_score_sorted", "=", "y_score", "[", "score_arg_sort", "]", "\n", "y_true_sorted", "=", "y_true", "[", "score_arg_sort", "]", "\n", "y_true_sorted_cumsum", "=", "np", ".", "cumsum", "(", "y_true_sorted", ")", "\n", "\n", "# unique thresholds", "\n", "(", "thresholds", ",", "unique_indices", ")", "=", "np", ".", "unique", "(", "y_score_sorted", ",", "return_index", "=", "True", ")", "\n", "num_prec_recall", "=", "len", "(", "unique_indices", ")", "+", "1", "\n", "\n", "# prepare precision recall", "\n", "num_examples", "=", "len", "(", "y_score_sorted", ")", "\n", "try", ":", "\n", "                            ", "num_true_examples", "=", "y_true_sorted_cumsum", "[", "-", "1", "]", "\n", "", "except", ":", "\n", "                            ", "num_true_examples", "=", "0", "\n", "\n", "", "precision", "=", "np", ".", "zeros", "(", "num_prec_recall", ")", "\n", "recall", "=", "np", ".", "zeros", "(", "num_prec_recall", ")", "\n", "\n", "# deal with the first point", "\n", "y_true_sorted_cumsum", "=", "np", ".", "append", "(", "y_true_sorted_cumsum", ",", "0", ")", "\n", "# deal with remaining", "\n", "for", "idx_res", ",", "idx_scores", "in", "enumerate", "(", "unique_indices", ")", ":", "\n", "                            ", "cumsum", "=", "y_true_sorted_cumsum", "[", "idx_scores", "-", "1", "]", "\n", "tp", "=", "num_true_examples", "-", "cumsum", "\n", "fp", "=", "num_examples", "-", "idx_scores", "-", "tp", "\n", "fn", "=", "cumsum", "+", "hard_false_negatives", "\n", "p", "=", "float", "(", "tp", ")", "/", "(", "tp", "+", "fp", ")", "\n", "r", "=", "float", "(", "tp", ")", "/", "(", "tp", "+", "fn", ")", "\n", "precision", "[", "idx_res", "]", "=", "p", "\n", "recall", "[", "idx_res", "]", "=", "r", "\n", "\n", "# first point in curve is artificial", "\n", "", "precision", "[", "-", "1", "]", "=", "1.", "\n", "recall", "[", "-", "1", "]", "=", "0.", "\n", "\n", "# compute average of precision-recall curve", "\n", "recall_for_conv", "=", "np", ".", "copy", "(", "recall", ")", "\n", "recall_for_conv", "=", "np", ".", "append", "(", "recall_for_conv", "[", "0", "]", ",", "recall_for_conv", ")", "\n", "recall_for_conv", "=", "np", ".", "append", "(", "recall_for_conv", ",", "0.", ")", "\n", "\n", "stepWidths", "=", "np", ".", "convolve", "(", "recall_for_conv", ",", "[", "-", "0.5", ",", "0", ",", "0.5", "]", ",", "'valid'", ")", "\n", "# integrate is now simply a dot product", "\n", "ap_current", "=", "np", ".", "dot", "(", "precision", ",", "stepWidths", ")", "\n", "\n", "", "elif", "has_gt", ":", "\n", "                        ", "ap_current", "=", "0.0", "\n", "", "else", ":", "\n", "                        ", "ap_current", "=", "float", "(", "'nan'", ")", "\n", "", "ap", "[", "di", ",", "li", ",", "oi", "]", "=", "ap_current", "\n", "", "", "", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.compute_averages": [[234, 252], ["numpy.where", "numpy.where", "numpy.where", "numpy.nanmean", "numpy.nanmean", "numpy.nanmean", "enumerate", "numpy.isclose", "numpy.isclose", "numpy.logical_not", "numpy.average", "numpy.average", "numpy.average", "numpy.isclose"], "methods", ["None"], ["", "def", "compute_averages", "(", "self", ",", "aps", ")", ":", "\n", "        ", "d_inf", "=", "0", "\n", "o50", "=", "np", ".", "where", "(", "np", ".", "isclose", "(", "self", ".", "overlaps", ",", "0.5", ")", ")", "\n", "o25", "=", "np", ".", "where", "(", "np", ".", "isclose", "(", "self", ".", "overlaps", ",", "0.25", ")", ")", "\n", "oAllBut25", "=", "np", ".", "where", "(", "np", ".", "logical_not", "(", "np", ".", "isclose", "(", "self", ".", "overlaps", ",", "0.25", ")", ")", ")", "\n", "avg_dict", "=", "{", "}", "\n", "#avg_dict['all_ap']     = np.nanmean(aps[ d_inf,:,:  ])", "\n", "avg_dict", "[", "'all_ap'", "]", "=", "np", ".", "nanmean", "(", "aps", "[", "d_inf", ",", ":", ",", "oAllBut25", "]", ")", "\n", "avg_dict", "[", "'all_ap_50%'", "]", "=", "np", ".", "nanmean", "(", "aps", "[", "d_inf", ",", ":", ",", "o50", "]", ")", "\n", "avg_dict", "[", "'all_ap_25%'", "]", "=", "np", ".", "nanmean", "(", "aps", "[", "d_inf", ",", ":", ",", "o25", "]", ")", "\n", "avg_dict", "[", "\"classes\"", "]", "=", "{", "}", "\n", "for", "(", "li", ",", "label_name", ")", "in", "enumerate", "(", "self", ".", "CLASS_LABELS", ")", ":", "\n", "            ", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "=", "{", "}", "\n", "#avg_dict[\"classes\"][label_name][\"ap\"]       = np.average(aps[ d_inf,li,  :])", "\n", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap\"", "]", "=", "np", ".", "average", "(", "aps", "[", "d_inf", ",", "li", ",", "oAllBut25", "]", ")", "\n", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap50%\"", "]", "=", "np", ".", "average", "(", "aps", "[", "d_inf", ",", "li", ",", "o50", "]", ")", "\n", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap25%\"", "]", "=", "np", ".", "average", "(", "aps", "[", "d_inf", ",", "li", ",", "o25", "]", ")", "\n", "", "return", "avg_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.assign_instances_for_scan": [[253, 309], ["lib.scannet_benchmark_utils.util_3d.get_instances", "copy.deepcopy", "numpy.logical_not", "numpy.in1d", "int", "numpy.count_nonzero", "numpy.count_nonzero", "enumerate", "pred2gt[].append", "str", "numpy.logical_and", "numpy.count_nonzero", "str", "numpy.logical_and", "gt_inst.copy", "pred_instance.copy", "matched_gt.append", "[].append"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.get_instances"], ["", "def", "assign_instances_for_scan", "(", "self", ",", "scene_id", ")", ":", "\n", "# get gt instances", "\n", "        ", "gt_ids", "=", "self", ".", "gt_instances", "[", "scene_id", "]", "\n", "gt_instances", "=", "util_3d", ".", "get_instances", "(", "gt_ids", ",", "self", ".", "VALID_CLASS_IDS", ",", "self", ".", "CLASS_LABELS", ",", "self", ".", "ID_TO_LABEL", ")", "\n", "# associate", "\n", "gt2pred", "=", "deepcopy", "(", "gt_instances", ")", "\n", "for", "label", "in", "gt2pred", ":", "\n", "            ", "for", "gt", "in", "gt2pred", "[", "label", "]", ":", "\n", "                ", "gt", "[", "'matched_pred'", "]", "=", "[", "]", "\n", "\n", "", "", "pred2gt", "=", "{", "}", "\n", "for", "label", "in", "self", ".", "CLASS_LABELS", ":", "\n", "            ", "pred2gt", "[", "label", "]", "=", "[", "]", "\n", "", "num_pred_instances", "=", "0", "\n", "# mask of void labels in the groundtruth", "\n", "bool_void", "=", "np", ".", "logical_not", "(", "np", ".", "in1d", "(", "gt_ids", "//", "1000", ",", "self", ".", "VALID_CLASS_IDS", ")", ")", "\n", "\n", "# go thru all prediction masks", "\n", "for", "instance_id", "in", "self", ".", "pred_instances", "[", "scene_id", "]", ":", "\n", "            ", "label_id", "=", "int", "(", "self", ".", "pred_instances", "[", "scene_id", "]", "[", "instance_id", "]", "[", "'label_id'", "]", ")", "\n", "conf", "=", "self", ".", "pred_instances", "[", "scene_id", "]", "[", "instance_id", "]", "[", "'conf'", "]", "\n", "if", "not", "label_id", "in", "self", ".", "ID_TO_LABEL", ":", "\n", "                ", "continue", "\n", "", "label_name", "=", "self", ".", "ID_TO_LABEL", "[", "label_id", "]", "\n", "# read the mask", "\n", "pred_mask", "=", "self", ".", "pred_instances", "[", "scene_id", "]", "[", "instance_id", "]", "[", "'pred_mask'", "]", "\n", "# convert to binary", "\n", "num", "=", "np", ".", "count_nonzero", "(", "pred_mask", ")", "\n", "if", "num", "<", "self", ".", "min_region_sizes", "[", "0", "]", ":", "\n", "                ", "continue", "# skip if empty", "\n", "\n", "", "pred_instance", "=", "{", "}", "\n", "pred_instance", "[", "'filename'", "]", "=", "str", "(", "scene_id", ")", "+", "'/'", "+", "str", "(", "instance_id", ")", "\n", "pred_instance", "[", "'pred_id'", "]", "=", "num_pred_instances", "\n", "pred_instance", "[", "'label_id'", "]", "=", "label_id", "\n", "pred_instance", "[", "'vert_count'", "]", "=", "num", "\n", "pred_instance", "[", "'confidence'", "]", "=", "conf", "\n", "pred_instance", "[", "'void_intersection'", "]", "=", "np", ".", "count_nonzero", "(", "np", ".", "logical_and", "(", "bool_void", ",", "pred_mask", ")", ")", "\n", "\n", "# matched gt instances", "\n", "matched_gt", "=", "[", "]", "\n", "# go thru all gt instances with matching label", "\n", "for", "(", "gt_num", ",", "gt_inst", ")", "in", "enumerate", "(", "gt2pred", "[", "label_name", "]", ")", ":", "\n", "                ", "intersection", "=", "np", ".", "count_nonzero", "(", "np", ".", "logical_and", "(", "gt_ids", "==", "gt_inst", "[", "'instance_id'", "]", ",", "pred_mask", ")", ")", "\n", "if", "intersection", ">", "0", ":", "\n", "                    ", "gt_copy", "=", "gt_inst", ".", "copy", "(", ")", "\n", "pred_copy", "=", "pred_instance", ".", "copy", "(", ")", "\n", "gt_copy", "[", "'intersection'", "]", "=", "intersection", "\n", "pred_copy", "[", "'intersection'", "]", "=", "intersection", "\n", "matched_gt", ".", "append", "(", "gt_copy", ")", "\n", "gt2pred", "[", "label_name", "]", "[", "gt_num", "]", "[", "'matched_pred'", "]", ".", "append", "(", "pred_copy", ")", "\n", "", "", "pred_instance", "[", "'matched_gt'", "]", "=", "matched_gt", "\n", "num_pred_instances", "+=", "1", "\n", "pred2gt", "[", "label_name", "]", ".", "append", "(", "pred_instance", ")", "\n", "\n", "", "return", "gt2pred", ",", "pred2gt", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.print_results": [[310, 346], ["logging.info", "logging.info", "logging.info", "logging.info", "enumerate", "logging.info", "logging.info", "logging.info", "logging.info"], "methods", ["None"], ["", "def", "print_results", "(", "self", ",", "avgs", ")", ":", "\n", "        ", "sep", "=", "\"\"", "\n", "col1", "=", "\":\"", "\n", "lineLen", "=", "64", "\n", "\n", "logging", ".", "info", "(", "\"\"", ")", "\n", "logging", ".", "info", "(", "\"#\"", "*", "lineLen", ")", "\n", "line", "=", "\"\"", "\n", "line", "+=", "\"{:<15}\"", ".", "format", "(", "\"what\"", ")", "+", "sep", "+", "col1", "\n", "line", "+=", "\"{:>15}\"", ".", "format", "(", "\"AP\"", ")", "+", "sep", "\n", "line", "+=", "\"{:>15}\"", ".", "format", "(", "\"AP_50%\"", ")", "+", "sep", "\n", "line", "+=", "\"{:>15}\"", ".", "format", "(", "\"AP_25%\"", ")", "+", "sep", "\n", "logging", ".", "info", "(", "line", ")", "\n", "logging", ".", "info", "(", "\"#\"", "*", "lineLen", ")", "\n", "\n", "for", "(", "li", ",", "label_name", ")", "in", "enumerate", "(", "self", ".", "CLASS_LABELS", ")", ":", "\n", "            ", "ap_avg", "=", "avgs", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap\"", "]", "\n", "ap_50o", "=", "avgs", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap50%\"", "]", "\n", "ap_25o", "=", "avgs", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap25%\"", "]", "\n", "line", "=", "\"{:<15}\"", ".", "format", "(", "label_name", ")", "+", "sep", "+", "col1", "\n", "line", "+=", "sep", "+", "\"{:>15.3f}\"", ".", "format", "(", "ap_avg", ")", "+", "sep", "\n", "line", "+=", "sep", "+", "\"{:>15.3f}\"", ".", "format", "(", "ap_50o", ")", "+", "sep", "\n", "line", "+=", "sep", "+", "\"{:>15.3f}\"", ".", "format", "(", "ap_25o", ")", "+", "sep", "\n", "logging", ".", "info", "(", "line", ")", "\n", "\n", "", "all_ap_avg", "=", "avgs", "[", "\"all_ap\"", "]", "\n", "all_ap_50o", "=", "avgs", "[", "\"all_ap_50%\"", "]", "\n", "all_ap_25o", "=", "avgs", "[", "\"all_ap_25%\"", "]", "\n", "\n", "logging", ".", "info", "(", "\"-\"", "*", "lineLen", ")", "\n", "line", "=", "\"{:<15}\"", ".", "format", "(", "\"average\"", ")", "+", "sep", "+", "col1", "\n", "line", "+=", "\"{:>15.3f}\"", ".", "format", "(", "all_ap_avg", ")", "+", "sep", "\n", "line", "+=", "\"{:>15.3f}\"", ".", "format", "(", "all_ap_50o", ")", "+", "sep", "\n", "line", "+=", "\"{:>15.3f}\"", ".", "format", "(", "all_ap_25o", ")", "+", "sep", "\n", "logging", ".", "info", "(", "line", ")", "\n", "logging", ".", "info", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.write_to_benchmark": [[347, 363], ["os.makedirs", "os.makedirs", "open", "open.close", "os.path.join", "os.path.join", "open.write", "lib.scannet_benchmark_utils.util_3d.export_ids", "open.write", "os.path.join", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.export_ids", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "@", "staticmethod", "\n", "def", "write_to_benchmark", "(", "output_path", "=", "'benchmark_instance'", ",", "scene_id", "=", "None", ",", "pred_inst", "=", "{", "}", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "'predicted_masks'", ")", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "scene_id", "+", "'.txt'", ")", ",", "'w'", ")", "\n", "for", "instance_id", "in", "pred_inst", ":", "\n", "# for pred instance id starts from 0; in gt valid instance id starts from 1", "\n", "            ", "score", "=", "pred_inst", "[", "instance_id", "]", "[", "'conf'", "]", "\n", "label", "=", "pred_inst", "[", "instance_id", "]", "[", "'label_id'", "]", "\n", "mask", "=", "pred_inst", "[", "instance_id", "]", "[", "'pred_mask'", "]", "\n", "\n", "f", ".", "write", "(", "'predicted_masks/{}_{:03d}.txt {} {:.4f}'", ".", "format", "(", "scene_id", ",", "instance_id", ",", "label", ",", "score", ")", ")", "\n", "if", "instance_id", "<", "len", "(", "pred_inst", ")", "-", "1", ":", "\n", "                ", "f", ".", "write", "(", "'\\n'", ")", "\n", "", "util_3d", ".", "export_ids", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "'predicted_masks'", ",", "scene_id", "+", "'_%03d.txt'", "%", "(", "instance_id", ")", ")", ",", "mask", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.add_prediction": [[365, 367], ["None"], "methods", ["None"], ["", "def", "add_prediction", "(", "self", ",", "instance_info", ",", "id", ")", ":", "\n", "        ", "self", ".", "pred_instances", "[", "id", "]", "=", "instance_info", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.add_gt": [[368, 370], ["None"], "methods", ["None"], ["", "def", "add_gt", "(", "self", ",", "instance_info", ",", "id", ")", ":", "\n", "        ", "self", ".", "gt_instances", "[", "id", "]", "=", "instance_info", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.add_gt_in_benchmark_format": [[372, 377], ["os.path.join", "datasets.evaluation.scannet_benchmark_utils.util_3d.load_ids", "evaluate_semantic_instance.Evaluator.add_gt"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.load_ids", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.add_gt"], ["", "def", "add_gt_in_benchmark_format", "(", "self", ",", "scene_id", ")", ":", "\n", "        ", "gt_file_path", "=", "'/rhome/jhou/data/dataset/scannet/scannet_benchmark/gt_instance/'", "\n", "gt_file", "=", "os", ".", "path", ".", "join", "(", "gt_file_path", ",", "scene_id", "+", "'.txt'", ")", "\n", "gt_ids", "=", "util_3d", ".", "load_ids", "(", "gt_file", ")", "\n", "self", ".", "add_gt", "(", "gt_ids", ",", "scene_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.evaluate": [[371, 389], ["print", "enumerate", "print", "evaluate_semantic_instance.Evaluator.evaluate_matches", "evaluate_semantic_instance.Evaluator.compute_averages", "evaluate_semantic_instance.Evaluator.print_results", "len", "evaluate_semantic_instance.Evaluator.assign_instances_for_scan", "sys.stdout.write", "sys.stdout.flush"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.evaluate_matches", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.compute_averages", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.print_results", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.assign_instances_for_scan", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["# see scannet repo for generating gt data for val in benchmark format", "\n", "", "def", "add_gt_in_benchmark_format", "(", "self", ",", "scene_id", ")", ":", "\n", "        ", "gt_file_path", "=", "'/rhome/jhou/data/dataset/scannet/scannet_benchmark/gt_instance/'", "\n", "gt_file", "=", "os", ".", "path", ".", "join", "(", "gt_file_path", ",", "scene_id", "+", "'.txt'", ")", "\n", "gt_ids", "=", "util_3d", ".", "load_ids", "(", "gt_file", ")", "\n", "self", ".", "add_gt", "(", "gt_ids", ",", "scene_id", ")", "\n", "\n", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "print", "(", "'evaluating'", ",", "len", "(", "self", ".", "pred_instances", ")", ",", "'scans...'", ")", "\n", "matches", "=", "{", "}", "\n", "for", "i", ",", "scene_id", "in", "enumerate", "(", "self", ".", "pred_instances", ")", ":", "\n", "            ", "gt2pred", ",", "pred2gt", "=", "self", ".", "assign_instances_for_scan", "(", "scene_id", ")", "\n", "matches", "[", "scene_id", "]", "=", "{", "}", "\n", "matches", "[", "scene_id", "]", "[", "'gt'", "]", "=", "gt2pred", "\n", "matches", "[", "scene_id", "]", "[", "'pred'", "]", "=", "pred2gt", "\n", "sys", ".", "stdout", ".", "write", "(", "\"\\rscans processed: {}\"", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "print", "(", "''", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.setup_logging": [[43, 50], ["logging.StreamHandler", "logging.getLogger().setLevel", "logging.basicConfig", "logging.getLogger", "[].split", "os.uname"], "function", ["None"], ["def", "setup_logging", "(", ")", ":", "\n", "    ", "ch", "=", "logging", ".", "StreamHandler", "(", "sys", ".", "stdout", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "logging", ".", "basicConfig", "(", "\n", "format", "=", "os", ".", "uname", "(", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "' %(asctime)s %(message)s'", ",", "\n", "datefmt", "=", "'%m/%d %H:%M:%S'", ",", "\n", "handlers", "=", "[", "ch", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.write_result_file": [[390, 401], ["open", "f.write", "range", "len", "f.write", "_SPLITTER.join", "_SPLITTER.join", "str"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["ap_scores", "=", "self", ".", "evaluate_matches", "(", "matches", ")", "\n", "avgs", "=", "self", ".", "compute_averages", "(", "ap_scores", ")", "\n", "\n", "# print", "\n", "self", ".", "print_results", "(", "avgs", ")", "\n", "return", "avgs", "[", "'all_ap'", "]", ",", "avgs", "[", "'all_ap_50%'", "]", ",", "avgs", "[", "'all_ap_25%'", "]", "\n", "\n", "", "", "def", "write_result_file", "(", "avgs", ",", "filename", ")", ":", "\n", "    ", "_SPLITTER", "=", "','", "\n", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "_SPLITTER", ".", "join", "(", "[", "'class'", ",", "'class id'", ",", "'ap'", ",", "'ap50'", ",", "'ap25'", "]", ")", "+", "'\\n'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "VALID_CLASS_IDS", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.config": [[402, 409], ["argparse.ArgumentParser", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.parse_args"], ["            ", "class_name", "=", "CLASS_LABELS", "[", "i", "]", "\n", "class_id", "=", "VALID_CLASS_IDS", "[", "i", "]", "\n", "ap", "=", "avgs", "[", "\"classes\"", "]", "[", "class_name", "]", "[", "\"ap\"", "]", "\n", "ap50", "=", "avgs", "[", "\"classes\"", "]", "[", "class_name", "]", "[", "\"ap50%\"", "]", "\n", "ap25", "=", "avgs", "[", "\"classes\"", "]", "[", "class_name", "]", "[", "\"ap25%\"", "]", "\n", "f", ".", "write", "(", "_SPLITTER", ".", "join", "(", "[", "str", "(", "x", ")", "for", "x", "in", "[", "class_name", ",", "class_id", ",", "ap", ",", "ap50", ",", "ap25", "]", "]", ")", "+", "'\\n'", ")", "\n", "\n", "", "", "", "def", "config", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_label.Evaluator.__init__": [[35, 48], ["np.zeros", "np.max"], "methods", ["None"], ["class", "Evaluator", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "CLASS_LABELS", ",", "VALID_CLASS_IDS", ")", ":", "\n", "#CLASS_LABELS = ['wall', 'floor', 'cabinet', 'bed', 'chair', 'sofa', 'table', ", "\n", "#                'door', 'window', 'bookshelf', 'picture', 'counter', 'desk', ", "\n", "#                'curtain', 'refrigerator', 'shower curtain', 'toilet', 'sink', 'bathtub', 'otherfurniture']", "\n", "#VALID_CLASS_IDS = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 24, 28, 33, 34, 36, 39])", "\n", "        ", "self", ".", "CLASS_LABELS", "=", "CLASS_LABELS", "\n", "self", ".", "VALID_CLASS_IDS", "=", "VALID_CLASS_IDS", "\n", "self", ".", "UNKNOWN_ID", "=", "np", ".", "max", "(", "VALID_CLASS_IDS", ")", "+", "1", "\n", "self", ".", "gt", "=", "{", "}", "\n", "self", ".", "pred", "=", "{", "}", "\n", "\n", "max_id", "=", "self", ".", "UNKNOWN_ID", "\n", "self", ".", "confusion", "=", "np", ".", "zeros", "(", "(", "max_id", "+", "1", ",", "max_id", "+", "1", ")", ",", "dtype", "=", "np", ".", "ulonglong", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_label.Evaluator.update_confusion": [[49, 61], ["np.bincount().reshape", "scannet_benchmark_utils.util.print_error", "np.bincount", "gt_ids[].astype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error"], ["\n", "", "def", "update_confusion", "(", "self", ",", "pred_ids", ",", "gt_ids", ",", "sceneId", "=", "None", ")", ":", "\n", "# sanity checks", "\n", "        ", "if", "not", "pred_ids", ".", "shape", "==", "gt_ids", ".", "shape", ":", "\n", "            ", "util", ".", "print_error", "(", "'%s: number of predicted values does not match number of vertices'", "%", "pred_file", ",", "user_fault", "=", "True", ")", "\n", "\n", "", "n", "=", "self", ".", "confusion", ".", "shape", "[", "0", "]", "\n", "k", "=", "(", "gt_ids", ">=", "0", ")", "&", "(", "gt_ids", "<", "n", ")", "\n", "temporal", "=", "np", ".", "bincount", "(", "n", "*", "gt_ids", "[", "k", "]", ".", "astype", "(", "int", ")", "+", "pred_ids", "[", "k", "]", ",", "minlength", "=", "n", "**", "2", ")", ".", "reshape", "(", "n", ",", "n", ")", "\n", "\n", "for", "valid_class_row", "in", "self", ".", "VALID_CLASS_IDS", ":", "\n", "            ", "for", "valid_class_col", "in", "self", ".", "VALID_CLASS_IDS", ":", "\n", "                ", "self", ".", "confusion", "[", "valid_class_row", "]", "[", "valid_class_col", "]", "+=", "temporal", "[", "valid_class_row", "]", "[", "valid_class_col", "]", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_label.Evaluator.write_to_benchmark": [[62, 66], ["os.makedirs", "scannet_benchmark_utils.util_3d.export_ids", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.export_ids"], ["\n", "", "", "", "@", "staticmethod", "\n", "def", "write_to_benchmark", "(", "base", "=", "'benchmark_segmentation'", ",", "sceneId", "=", "None", ",", "pred_ids", "=", "None", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "base", ",", "exist_ok", "=", "True", ")", "\n", "util_3d", ".", "export_ids", "(", "'{}.txt'", ".", "format", "(", "os", ".", "path", ".", "join", "(", "base", ",", "sceneId", ")", ")", ",", "pred_ids", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_label.Evaluator.get_iou": [[67, 82], ["np.longlong", "np.longlong", "float", "np.longlong", "confusion[].sum", "float", "confusion[].sum", "float"], "methods", ["None"], ["\n", "", "def", "get_iou", "(", "self", ",", "label_id", ",", "confusion", ")", ":", "\n", "        ", "if", "not", "label_id", "in", "self", ".", "VALID_CLASS_IDS", ":", "\n", "            ", "return", "float", "(", "'nan'", ")", "\n", "# #true positives", "\n", "", "tp", "=", "np", ".", "longlong", "(", "confusion", "[", "label_id", ",", "label_id", "]", ")", "\n", "# #false negatives", "\n", "fn", "=", "np", ".", "longlong", "(", "confusion", "[", "label_id", ",", ":", "]", ".", "sum", "(", ")", ")", "-", "tp", "\n", "# #false positives", "\n", "not_ignored", "=", "[", "l", "for", "l", "in", "self", ".", "VALID_CLASS_IDS", "if", "not", "l", "==", "label_id", "]", "\n", "fp", "=", "np", ".", "longlong", "(", "confusion", "[", "not_ignored", ",", "label_id", "]", ".", "sum", "(", ")", ")", "\n", "\n", "denom", "=", "(", "tp", "+", "fp", "+", "fn", ")", "\n", "if", "denom", "==", "0", ":", "\n", "            ", "return", "float", "(", "'nan'", ")", "\n", "", "return", "(", "float", "(", "tp", ")", "/", "denom", ",", "tp", ",", "denom", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_label.Evaluator.write_result_file": [[83, 105], ["print", "open", "f.write", "range", "f.write", "f.write", "f.write", "range", "f.write", "range", "len", "f.write", "len", "f.write", "len", "f.write", "range", "f.write", "np.array().mean", "len", "f.write", "np.array"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["\n", "", "def", "write_result_file", "(", "self", ",", "confusion", ",", "ious", ",", "filename", ")", ":", "\n", "        ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "'iou scores\\n'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "                ", "label_id", "=", "self", ".", "VALID_CLASS_IDS", "[", "i", "]", "\n", "label_name", "=", "self", ".", "CLASS_LABELS", "[", "i", "]", "\n", "iou", "=", "ious", "[", "label_name", "]", "[", "0", "]", "\n", "f", ".", "write", "(", "'{0:<14s}({1:<2d}): {2:>5.3f}\\n'", ".", "format", "(", "label_name", ",", "label_id", ",", "iou", ")", ")", "\n", "", "f", ".", "write", "(", "\"{0:<14s}: {1:>5.3f}\"", ".", "format", "(", "'mean'", ",", "np", ".", "array", "(", "[", "ious", "[", "k", "]", "[", "0", "]", "for", "k", "in", "ious", "]", ")", ".", "mean", "(", ")", ")", ")", "\n", "\n", "f", ".", "write", "(", "'\\nconfusion matrix\\n'", ")", "\n", "f", ".", "write", "(", "'\\t\\t\\t'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "#f.write('\\t{0:<14s}({1:<2d})'.format(CLASS_LABELS[i], VALID_CLASS_IDS[i]))", "\n", "                ", "f", ".", "write", "(", "'{0:<8d}'", ".", "format", "(", "self", ".", "VALID_CLASS_IDS", "[", "i", "]", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "for", "r", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "                ", "f", ".", "write", "(", "'{0:<14s}({1:<2d})'", ".", "format", "(", "self", ".", "CLASS_LABELS", "[", "r", "]", ",", "self", ".", "VALID_CLASS_IDS", "[", "r", "]", ")", ")", "\n", "for", "c", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "                    ", "f", ".", "write", "(", "'\\t{0:>5.3f}'", ".", "format", "(", "confusion", "[", "self", ".", "VALID_CLASS_IDS", "[", "r", "]", ",", "self", ".", "VALID_CLASS_IDS", "[", "c", "]", "]", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "", "", "print", "(", "'wrote results to'", ",", "filename", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_label.Evaluator.evaluate_confusion": [[106, 134], ["range", "logging.info", "logging.info", "range", "len", "evaluate_semantic_label.Evaluator.get_iou", "len", "logging.info", "evaluate_semantic_label.Evaluator.write_result_file", "logging.info", "logging.info"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.get_iou", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.write_result_file"], ["\n", "", "def", "evaluate_confusion", "(", "self", ",", "output_file", "=", "None", ")", ":", "\n", "        ", "class_ious", "=", "{", "}", "\n", "counter", "=", "0", "\n", "summation", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "            ", "label_name", "=", "self", ".", "CLASS_LABELS", "[", "i", "]", "\n", "label_id", "=", "self", ".", "VALID_CLASS_IDS", "[", "i", "]", "\n", "class_ious", "[", "label_name", "]", "=", "self", ".", "get_iou", "(", "label_id", ",", "self", ".", "confusion", ")", "\n", "# print", "\n", "", "logging", ".", "info", "(", "'classes          IoU'", ")", "\n", "logging", ".", "info", "(", "'----------------------------'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "            ", "label_name", "=", "self", ".", "CLASS_LABELS", "[", "i", "]", "\n", "try", ":", "\n", "                ", "logging", ".", "info", "(", "'{0:<14s}: {1:>5.3f}   ({2:>6d}/{3:<6d})'", ".", "format", "(", "label_name", ",", "class_ious", "[", "label_name", "]", "[", "0", "]", ",", "class_ious", "[", "label_name", "]", "[", "1", "]", ",", "class_ious", "[", "label_name", "]", "[", "2", "]", ")", ")", "\n", "summation", "+=", "class_ious", "[", "label_name", "]", "[", "0", "]", "\n", "counter", "+=", "1", "\n", "", "except", ":", "\n", "                ", "logging", ".", "info", "(", "'{0:<14s}: nan     (   nan/nan   )'", ".", "format", "(", "label_name", ")", ")", "\n", "\n", "", "", "logging", ".", "info", "(", "\"{0:<14s}: {1:>5.3f}\"", ".", "format", "(", "'mean'", ",", "summation", "/", "counter", ")", ")", "\n", "\n", "if", "output_file", ":", "\n", "            ", "self", ".", "write_result_file", "(", "self", ".", "confusion", ",", "class_ious", ",", "output_file", ")", "\n", "\n", "", "return", "summation", "/", "counter", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_label.config": [[135, 142], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.parse_args"], ["", "", "def", "config", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--pred_path'", ",", "required", "=", "True", ",", "help", "=", "'path to directory of predicted .txt files'", ")", "\n", "parser", ".", "add_argument", "(", "'--gt_path'", ",", "required", "=", "True", ",", "help", "=", "'path to gt files'", ")", "\n", "parser", ".", "add_argument", "(", "'--output_file'", ",", "type", "=", "str", ",", "default", "=", "'./semantic_label_evaluation.txt'", ")", "\n", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_label.main": [[143, 172], ["evaluate_semantic_label.config", "np.array", "evaluate_semantic_label.Evaluator", "print", "enumerate", "evaluate_semantic_label.Evaluator.evaluate_confusion", "os.listdir", "os.path.join", "scannet_benchmark_utils.util_3d.load_ids", "os.path.join", "scannet_benchmark_utils.util_3d.load_ids", "evaluate_semantic_label.Evaluator.update_confusion", "sys.stdout.write", "sys.stdout.flush", "len", "os.path.isfile", "scannet_benchmark_utils.util.print_error", "os.listdir", "os.path.join.split"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.config", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.evaluate_confusion", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.load_ids", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.load_ids", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.update_confusion", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error"], ["", "def", "main", "(", ")", ":", "\n", "    ", "opt", "=", "config", "(", ")", "\n", "\n", "#------------------------- ScanNet --------------------------", "\n", "CLASS_LABELS", "=", "[", "'wall'", ",", "'floor'", ",", "'cabinet'", ",", "'bed'", ",", "'chair'", ",", "'sofa'", ",", "'table'", ",", "\n", "'door'", ",", "'window'", ",", "'bookshelf'", ",", "'picture'", ",", "'counter'", ",", "'desk'", ",", "\n", "'curtain'", ",", "'refrigerator'", ",", "'shower curtain'", ",", "'toilet'", ",", "'sink'", ",", "'bathtub'", ",", "'otherfurniture'", "]", "\n", "VALID_CLASS_IDS", "=", "np", ".", "array", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "14", ",", "16", ",", "24", ",", "28", ",", "33", ",", "34", ",", "36", ",", "39", "]", ")", "\n", "evaluator", "=", "Evaluator", "(", "CLASS_LABELS", "=", "CLASS_LABELS", ",", "VALID_CLASS_IDS", "=", "VALID_CLASS_IDS", ")", "\n", "\n", "print", "(", "'reading'", ",", "len", "(", "os", ".", "listdir", "(", "opt", ".", "pred_path", ")", ")", "-", "1", ",", "'scans...'", ")", "\n", "for", "i", ",", "pred_file", "in", "enumerate", "(", "os", ".", "listdir", "(", "opt", ".", "pred_path", ")", ")", ":", "\n", "        ", "if", "pred_file", "==", "'semantic_label_evaluation.txt'", ":", "\n", "            ", "continue", "\n", "\n", "", "gt_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "gt_path", ",", "pred_file", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "gt_file", ")", ":", "\n", "            ", "util", ".", "print_error", "(", "'Result file {} does not match any gt file'", ".", "format", "(", "pred_file", ")", ",", "user_fault", "=", "True", ")", "\n", "", "gt_ids", "=", "util_3d", ".", "load_ids", "(", "gt_file", ")", "\n", "\n", "pred_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "pred_path", ",", "pred_file", ")", "\n", "pred_ids", "=", "util_3d", ".", "load_ids", "(", "pred_file", ")", "\n", "\n", "evaluator", ".", "update_confusion", "(", "pred_ids", ",", "gt_ids", ",", "pred_file", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "sys", ".", "stdout", ".", "write", "(", "\"\\rscans processed: {}\"", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "# evaluate", "\n", "", "evaluator", ".", "evaluate_confusion", "(", "opt", ".", "output_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection_helper.voc_ap": [[24, 56], ["numpy.arange", "numpy.concatenate", "numpy.concatenate", "range", "numpy.sum", "numpy.maximum", "numpy.where", "numpy.sum", "numpy.max"], "function", ["None"], ["def", "voc_ap", "(", "rec", ",", "prec", ",", "use_07_metric", "=", "False", ")", ":", "\n", "    ", "\"\"\" ap = voc_ap(rec, prec, [use_07_metric])\n    Compute VOC AP given precision and recall.\n    If use_07_metric is true, uses the\n    VOC 07 11 point method (default:False).\n    \"\"\"", "\n", "if", "use_07_metric", ":", "\n", "# 11 point metric", "\n", "        ", "ap", "=", "0.", "\n", "for", "t", "in", "np", ".", "arange", "(", "0.", ",", "1.1", ",", "0.1", ")", ":", "\n", "            ", "if", "np", ".", "sum", "(", "rec", ">=", "t", ")", "==", "0", ":", "\n", "                ", "p", "=", "0", "\n", "", "else", ":", "\n", "                ", "p", "=", "np", ".", "max", "(", "prec", "[", "rec", ">=", "t", "]", ")", "\n", "", "ap", "=", "ap", "+", "p", "/", "11.", "\n", "", "", "else", ":", "\n", "# correct AP calculation", "\n", "# first append sentinel values at the end", "\n", "        ", "mrec", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "rec", ",", "[", "1.", "]", ")", ")", "\n", "mpre", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "prec", ",", "[", "0.", "]", ")", ")", "\n", "\n", "# compute the precision envelope", "\n", "for", "i", "in", "range", "(", "mpre", ".", "size", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "mpre", "[", "i", "-", "1", "]", "=", "np", ".", "maximum", "(", "mpre", "[", "i", "-", "1", "]", ",", "mpre", "[", "i", "]", ")", "\n", "\n", "# to calculate area under PR curve, look for points", "\n", "# where X axis (recall) changes value", "\n", "", "i", "=", "np", ".", "where", "(", "mrec", "[", "1", ":", "]", "!=", "mrec", "[", ":", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "# and sum (\\Delta recall) * prec", "\n", "ap", "=", "np", ".", "sum", "(", "(", "mrec", "[", "i", "+", "1", "]", "-", "mrec", "[", "i", "]", ")", "*", "mpre", "[", "i", "+", "1", "]", ")", "\n", "", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection_helper.get_iou": [[61, 68], ["metric_util.calc_iou"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.metric_util.calc_iou"], ["def", "get_iou", "(", "bb1", ",", "bb2", ")", ":", "\n", "    ", "\"\"\" Compute IoU of two bounding boxes.\n        ** Define your bod IoU function HERE **\n    \"\"\"", "\n", "#pass", "\n", "iou3d", "=", "calc_iou", "(", "bb1", ",", "bb2", ")", "\n", "return", "iou3d", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection_helper.get_iou_main": [[74, 76], ["get_iou_func"], "function", ["None"], ["", "def", "get_iou_main", "(", "get_iou_func", ",", "args", ")", ":", "\n", "    ", "return", "get_iou_func", "(", "*", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection_helper.eval_det_cls": [[77, 162], ["gt.keys", "pred.keys", "pred.keys", "numpy.array", "numpy.array", "numpy.argsort", "numpy.sort", "len", "numpy.zeros", "numpy.zeros", "range", "numpy.cumsum", "numpy.cumsum", "evaluate_object_detection_helper.voc_ap", "numpy.array", "len", "BB[].astype", "R[].astype", "float", "numpy.maximum", "len", "image_ids.append", "np.array.append", "np.array.append", "range", "numpy.array", "evaluate_object_detection_helper.get_iou_main", "numpy.finfo"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.voc_ap", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.get_iou_main"], ["", "def", "eval_det_cls", "(", "pred", ",", "gt", ",", "ovthresh", "=", "0.25", ",", "use_07_metric", "=", "False", ",", "get_iou_func", "=", "get_iou", ")", ":", "\n", "    ", "\"\"\" Generic functions to compute precision/recall for object detection\n        for a single class.\n        Input:\n            pred: map of {img_id: [(bbox, score)]} where bbox is numpy array of size 6\n            gt: map of {img_id: [bbox]}\n            ovthresh: scalar, iou threshold\n            use_07_metric: bool, if True use VOC07 11 point method\n        Output:\n            rec: numpy array of length nd\n            prec: numpy array of length nd\n            ap: scalar, average precision\n    \"\"\"", "\n", "\n", "# construct gt objects", "\n", "class_recs", "=", "{", "}", "# {img_id: {'bbox': bbox list, 'det': matched list}}", "\n", "npos", "=", "0", "\n", "for", "img_id", "in", "gt", ".", "keys", "(", ")", ":", "\n", "        ", "bbox", "=", "np", ".", "array", "(", "gt", "[", "img_id", "]", ")", "# bbox: (n,6). n: number of bounding box in an img_id. 6 value is 3 value of center and 3 value of length", "\n", "det", "=", "[", "False", "]", "*", "len", "(", "bbox", ")", "# length = n", "\n", "npos", "+=", "len", "(", "bbox", ")", "# sum of GT bounding boxes in all scenes", "\n", "class_recs", "[", "img_id", "]", "=", "{", "'bbox'", ":", "bbox", ",", "'det'", ":", "det", "}", "\n", "# pad empty list to all other imgids", "\n", "", "for", "img_id", "in", "pred", ".", "keys", "(", ")", ":", "\n", "        ", "if", "img_id", "not", "in", "gt", ":", "\n", "            ", "class_recs", "[", "img_id", "]", "=", "{", "'bbox'", ":", "np", ".", "array", "(", "[", "]", ")", ",", "'det'", ":", "[", "]", "}", "\n", "\n", "# construct dets", "\n", "", "", "image_ids", "=", "[", "]", "\n", "confidence", "=", "[", "]", "\n", "BB", "=", "[", "]", "\n", "for", "img_id", "in", "pred", ".", "keys", "(", ")", ":", "\n", "        ", "for", "box", ",", "score", "in", "pred", "[", "img_id", "]", ":", "\n", "            ", "image_ids", ".", "append", "(", "img_id", ")", "\n", "confidence", ".", "append", "(", "score", ")", "\n", "BB", ".", "append", "(", "box", ")", "\n", "", "", "confidence", "=", "np", ".", "array", "(", "confidence", ")", "\n", "BB", "=", "np", ".", "array", "(", "BB", ")", "# (nd,4 or 8,3 or 6)", "\n", "\n", "# sort by confidence", "\n", "sorted_ind", "=", "np", ".", "argsort", "(", "-", "confidence", ")", "# sort in descending order. Meaning: largest confidence first", "\n", "sorted_scores", "=", "np", ".", "sort", "(", "-", "confidence", ")", "\n", "BB", "=", "BB", "[", "sorted_ind", ",", "...", "]", "\n", "image_ids", "=", "[", "image_ids", "[", "x", "]", "for", "x", "in", "sorted_ind", "]", "\n", "\n", "# go down dets and mark TPs and FPs", "\n", "nd", "=", "len", "(", "image_ids", ")", "#nd: number of bounding boxes in all scenes", "\n", "tp", "=", "np", ".", "zeros", "(", "nd", ")", "\n", "fp", "=", "np", ".", "zeros", "(", "nd", ")", "\n", "for", "d", "in", "range", "(", "nd", ")", ":", "\n", "#if d%100==0: print(d)", "\n", "        ", "R", "=", "class_recs", "[", "image_ids", "[", "d", "]", "]", "# all GT BB in a scene according to the level of confidence", "\n", "bb", "=", "BB", "[", "d", ",", "...", "]", ".", "astype", "(", "float", ")", "\n", "ovmax", "=", "-", "np", ".", "inf", "\n", "BBGT", "=", "R", "[", "'bbox'", "]", ".", "astype", "(", "float", ")", "\n", "\n", "if", "BBGT", ".", "size", ">", "0", ":", "\n", "# compute overlaps", "\n", "            ", "for", "j", "in", "range", "(", "BBGT", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "iou", "=", "get_iou_main", "(", "get_iou_func", ",", "(", "bb", ",", "BBGT", "[", "j", ",", "...", "]", ")", ")", "\n", "if", "iou", ">", "ovmax", ":", "\n", "                    ", "ovmax", "=", "iou", "# ovmax is the largest iou between BB and all ground truth boxes in BBGT", "\n", "jmax", "=", "j", "\n", "\n", "#print d, ovmax", "\n", "", "", "", "if", "ovmax", ">", "ovthresh", ":", "\n", "            ", "if", "not", "R", "[", "'det'", "]", "[", "jmax", "]", ":", "\n", "                ", "tp", "[", "d", "]", "=", "1.", "# if this BB have IoU > 0.25 with a GT box in BBGT, and this GTbox still not has any BB assigned to it, then this BB is TP", "\n", "R", "[", "'det'", "]", "[", "jmax", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "fp", "[", "d", "]", "=", "1.", "#else, if this BB have IoU > 0.25 with a GT box in BBGT, and this GTbox already has a BB1 assigned to it (meaning that BB1 has higher confidence than this BB), then this BB is FP", "\n", "", "", "else", ":", "\n", "            ", "fp", "[", "d", "]", "=", "1.", "#if this BB does not have IoU>0.25 with any GT boxes in BBGT, then it is FP", "\n", "\n", "# compute precision recall", "\n", "", "", "fp", "=", "np", ".", "cumsum", "(", "fp", ")", "\n", "tp", "=", "np", ".", "cumsum", "(", "tp", ")", "\n", "rec", "=", "tp", "/", "float", "(", "npos", ")", "\n", "#print('NPOS: ', npos)", "\n", "# avoid divide by zero in case the first detection matches a difficult", "\n", "# ground truth", "\n", "prec", "=", "tp", "/", "np", ".", "maximum", "(", "tp", "+", "fp", ",", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", "\n", "ap", "=", "voc_ap", "(", "rec", ",", "prec", ",", "use_07_metric", ")", "\n", "\n", "return", "rec", ",", "prec", ",", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection_helper.eval_det_cls_wrapper": [[163, 167], ["evaluate_object_detection_helper.eval_det_cls"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det_cls"], ["", "def", "eval_det_cls_wrapper", "(", "arguments", ")", ":", "\n", "    ", "pred", ",", "gt", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", "=", "arguments", "\n", "rec", ",", "prec", ",", "ap", "=", "eval_det_cls", "(", "pred", ",", "gt", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", ")", "\n", "return", "(", "rec", ",", "prec", ",", "ap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection_helper.eval_det": [[168, 210], ["pred_all.keys", "gt_all.keys", "gt.keys", "evaluate_object_detection_helper.eval_det_cls", "[].append", "[].append"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det_cls"], ["", "def", "eval_det", "(", "pred_all", ",", "gt_all", ",", "ovthresh", "=", "0.25", ",", "use_07_metric", "=", "False", ",", "get_iou_func", "=", "get_iou", ")", ":", "\n", "    ", "\"\"\" Generic functions to compute precision/recall for object detection\n        for multiple classes.\n        Input:\n            pred_all: map of {img_id: [(classname, bbox, score)]}  where \n                _img_id: anything, can be integer or string \n                _classname:  can be string or integer\n                _bbox: numpy array of size 6\n                _score: float\n            gt_all: map of {img_id: [(classname, bbox)]}\n            ovthresh: scalar, iou threshold\n            use_07_metric: bool, if true use VOC07 11 point method\n        Output:\n            rec: {classname: rec}\n            prec: {classname: prec_all}\n            ap: {classname: scalar}\n    \"\"\"", "\n", "pred", "=", "{", "}", "# map {classname: pred}", "\n", "gt", "=", "{", "}", "# map {classname: gt}", "\n", "for", "img_id", "in", "pred_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", ",", "score", "in", "pred_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "pred", ":", "pred", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "pred", "[", "classname", "]", ":", "\n", "                ", "pred", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "pred", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "(", "bbox", ",", "score", ")", ")", "\n", "", "", "for", "img_id", "in", "gt_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", "in", "gt_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "gt", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "bbox", ")", "\n", "\n", "", "", "rec", "=", "{", "}", "\n", "prec", "=", "{", "}", "\n", "ap", "=", "{", "}", "\n", "\n", "for", "classname", "in", "gt", ".", "keys", "(", ")", ":", "\n", "        ", "rec", "[", "classname", "]", ",", "prec", "[", "classname", "]", ",", "ap", "[", "classname", "]", "=", "eval_det_cls", "(", "pred", "[", "classname", "]", ",", "gt", "[", "classname", "]", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", ")", "\n", "", "return", "rec", ",", "prec", ",", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection_helper.eval_det_multiprocessing": [[212, 259], ["pred_all.keys", "gt_all.keys", "multiprocessing.Pool", "multiprocessing.Pool.map", "multiprocessing.Pool.close", "enumerate", "gt.keys", "print", "[].append", "[].append", "gt.keys"], "function", ["None"], ["def", "eval_det_multiprocessing", "(", "pred_all", ",", "gt_all", ",", "ovthresh", "=", "0.25", ",", "use_07_metric", "=", "False", ",", "get_iou_func", "=", "get_iou", ")", ":", "\n", "    ", "\"\"\" Generic functions to compute precision/recall for object detection\n        for multiple classes.\n        Input:\n            pred_all: map of {img_id: [(classname, bbox, score)]}\n            gt_all: map of {img_id: [(classname, bbox)]}\n            ovthresh: scalar, iou threshold\n            use_07_metric: bool, if true use VOC07 11 point method\n        Output:\n            rec: {classname: rec}\n            prec: {classname: prec_all}\n            ap: {classname: scalar}\n    \"\"\"", "\n", "pred", "=", "{", "}", "# map {classname: pred}", "\n", "gt", "=", "{", "}", "# map {classname: gt}", "\n", "for", "img_id", "in", "pred_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", ",", "score", "in", "pred_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "pred", ":", "pred", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "pred", "[", "classname", "]", ":", "\n", "                ", "pred", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "pred", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "(", "bbox", ",", "score", ")", ")", "\n", "", "", "for", "img_id", "in", "gt_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", "in", "gt_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "gt", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "bbox", ")", "\n", "\n", "", "", "rec", "=", "{", "}", "\n", "prec", "=", "{", "}", "\n", "ap", "=", "{", "}", "\n", "p", "=", "Pool", "(", "processes", "=", "10", ")", "\n", "ret_values", "=", "p", ".", "map", "(", "eval_det_cls_wrapper", ",", "[", "(", "pred", "[", "classname", "]", ",", "gt", "[", "classname", "]", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", ")", "for", "classname", "in", "gt", ".", "keys", "(", ")", "if", "classname", "in", "pred", "]", ")", "\n", "p", ".", "close", "(", ")", "\n", "for", "i", ",", "classname", "in", "enumerate", "(", "gt", ".", "keys", "(", ")", ")", ":", "\n", "        ", "if", "classname", "in", "pred", ":", "\n", "            ", "rec", "[", "classname", "]", ",", "prec", "[", "classname", "]", ",", "ap", "[", "classname", "]", "=", "ret_values", "[", "i", "]", "\n", "", "else", ":", "\n", "            ", "rec", "[", "classname", "]", "=", "0", "\n", "prec", "[", "classname", "]", "=", "0", "\n", "ap", "[", "classname", "]", "=", "0", "\n", "", "print", "(", "classname", ",", "ap", "[", "classname", "]", ")", "\n", "\n", "", "return", "rec", ",", "prec", ",", "ap", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.Instance.__init__": [[92, 98], ["int", "int", "int", "util_3d.Instance.get_label_id", "util_3d.Instance.get_instance_verts"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.get_label_id", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.get_instance_verts"], ["med_dist", "=", "-", "1", "\n", "dist_conf", "=", "0.0", "\n", "\n", "def", "__init__", "(", "self", ",", "mesh_vert_instances", ",", "instance_id", ")", ":", "\n", "        ", "if", "(", "instance_id", "==", "-", "1", ")", ":", "\n", "            ", "return", "\n", "", "self", ".", "instance_id", "=", "int", "(", "instance_id", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.Instance.get_label_id": [[99, 101], ["int"], "methods", ["None"], ["self", ".", "label_id", "=", "int", "(", "self", ".", "get_label_id", "(", "instance_id", ")", ")", "\n", "self", ".", "vert_count", "=", "int", "(", "self", ".", "get_instance_verts", "(", "mesh_vert_instances", ",", "instance_id", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.Instance.get_instance_verts": [[102, 104], ["None"], "methods", ["None"], ["", "def", "get_label_id", "(", "self", ",", "instance_id", ")", ":", "\n", "        ", "return", "int", "(", "instance_id", "//", "1000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.Instance.to_json": [[105, 107], ["json.dumps"], "methods", ["None"], ["", "def", "get_instance_verts", "(", "self", ",", "mesh_vert_instances", ",", "instance_id", ")", ":", "\n", "        ", "return", "(", "mesh_vert_instances", "==", "instance_id", ")", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.Instance.to_dict": [[108, 116], ["None"], "methods", ["None"], ["", "def", "to_json", "(", "self", ")", ":", "\n", "        ", "return", "json", ".", "dumps", "(", "self", ",", "default", "=", "lambda", "o", ":", "o", ".", "__dict__", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ")", "\n", "\n", "", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "dict", "=", "{", "}", "\n", "dict", "[", "\"instance_id\"", "]", "=", "self", ".", "instance_id", "\n", "dict", "[", "\"label_id\"", "]", "=", "self", ".", "label_id", "\n", "dict", "[", "\"vert_count\"", "]", "=", "self", ".", "vert_count", "\n", "dict", "[", "\"med_dist\"", "]", "=", "self", ".", "med_dist", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.Instance.from_json": [[117, 124], ["int", "int", "int", "float", "float"], "methods", ["None"], ["dict", "[", "\"dist_conf\"", "]", "=", "self", ".", "dist_conf", "\n", "return", "dict", "\n", "\n", "", "def", "from_json", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "instance_id", "=", "int", "(", "data", "[", "\"instance_id\"", "]", ")", "\n", "self", ".", "label_id", "=", "int", "(", "data", "[", "\"label_id\"", "]", ")", "\n", "self", ".", "vert_count", "=", "int", "(", "data", "[", "\"vert_count\"", "]", ")", "\n", "if", "(", "\"med_dist\"", "in", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.Instance.__str__": [[125, 127], ["str"], "methods", ["None"], ["            ", "self", ".", "med_dist", "=", "float", "(", "data", "[", "\"med_dist\"", "]", ")", "\n", "self", ".", "dist_conf", "=", "float", "(", "data", "[", "\"dist_conf\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.transform_points": [[10, 18], ["numpy.concatenate", "numpy.matmul", "numpy.transpose", "numpy.transpose", "len", "numpy.ones"], "function", ["None"], ["", "try", ":", "\n", "    ", "from", "plyfile", "import", "PlyData", ",", "PlyElement", "\n", "", "except", ":", "\n", "    ", "print", "(", "\"Please install the module 'plyfile' for PLY i/o, e.g.\"", ")", "\n", "print", "(", "\"pip install plyfile\"", ")", "\n", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n", "", "from", ".", "import", "util", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.export_ids": [[20, 24], ["open", "f.write"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["# matrix: 4x4 np array", "\n", "# points Nx3 np array", "\n", "def", "transform_points", "(", "matrix", ",", "points", ")", ":", "\n", "    ", "assert", "len", "(", "points", ".", "shape", ")", "==", "2", "and", "points", ".", "shape", "[", "1", "]", "==", "3", "\n", "num_points", "=", "points", ".", "shape", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.load_ids": [[26, 30], ["open().read().splitlines", "numpy.array", "open().read", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["p", "=", "np", ".", "matmul", "(", "matrix", ",", "np", ".", "transpose", "(", "p", ")", ")", "\n", "p", "=", "np", ".", "transpose", "(", "p", ")", "\n", "p", "[", ":", ",", ":", "3", "]", "/=", "p", "[", ":", ",", "3", ",", "None", "]", "\n", "return", "p", "[", ":", ",", ":", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.read_mesh_vertices": [[32, 42], ["os.path.isfile", "open", "plyfile.PlyData.read", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "def", "export_ids", "(", "filename", ",", "ids", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "id", "in", "ids", ":", "\n", "            ", "f", ".", "write", "(", "'%d\\n'", "%", "id", ")", "\n", "\n", "\n", "", "", "", "def", "load_ids", "(", "filename", ")", ":", "\n", "    ", "ids", "=", "open", "(", "filename", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "ids", "=", "np", ".", "array", "(", "ids", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.export_instance_ids_for_eval": [[45, 66], ["os.path.join", "numpy.unique", "numpy.zeros", "os.path.splitext", "os.path.dirname", "os.path.isdir", "os.mkdir", "open", "enumerate", "os.path.basename", "os.path.join", "numpy.where", "f.write", "numpy.copy", "util_3d.export_ids", "str"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.export_ids"], ["    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "plydata", "=", "PlyData", ".", "read", "(", "f", ")", "\n", "num_verts", "=", "plydata", "[", "'vertex'", "]", ".", "count", "\n", "vertices", "=", "np", ".", "zeros", "(", "shape", "=", "[", "num_verts", ",", "3", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vertices", "[", ":", ",", "0", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'x'", "]", "\n", "vertices", "[", ":", ",", "1", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'y'", "]", "\n", "vertices", "[", ":", ",", "2", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'z'", "]", "\n", "", "return", "vertices", "\n", "\n", "\n", "# export 3d instance labels for instance evaluation", "\n", "", "def", "export_instance_ids_for_eval", "(", "filename", ",", "label_ids", ",", "instance_ids", ")", ":", "\n", "    ", "assert", "label_ids", ".", "shape", "[", "0", "]", "==", "instance_ids", ".", "shape", "[", "0", "]", "\n", "output_mask_path_relative", "=", "'predicted_masks'", "\n", "name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "filename", ")", ")", "[", "0", "]", "\n", "output_mask_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ",", "output_mask_path_relative", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "output_mask_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "output_mask_path", ")", "\n", "", "insts", "=", "np", ".", "unique", "(", "instance_ids", ")", "\n", "zero_mask", "=", "np", ".", "zeros", "(", "shape", "=", "(", "instance_ids", ".", "shape", "[", "0", "]", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.export_detection_ids_for_eval": [[66, 83], ["numpy.unique", "open", "enumerate", "numpy.where", "numpy.amax", "numpy.amin", "f.write"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "idx", ",", "inst_id", "in", "enumerate", "(", "insts", ")", ":", "\n", "            ", "if", "inst_id", "==", "0", ":", "# 0 -> no instance for this vertex", "\n", "                ", "continue", "\n", "\n", "", "loc", "=", "np", ".", "where", "(", "instance_ids", "==", "inst_id", ")", "\n", "label_id", "=", "label_ids", "[", "loc", "[", "0", "]", "[", "0", "]", "]", "\n", "\n", "# write mask indexing", "\n", "output_mask_file_relavtive", "=", "os", ".", "path", ".", "join", "(", "output_mask_path_relative", ",", "name", "+", "'_'", "+", "str", "(", "idx", ")", "+", "'.txt'", ")", "\n", "f", ".", "write", "(", "'%s %d %f\\n'", "%", "(", "output_mask_file_relavtive", ",", "label_id", ",", "1.0", ")", ")", "\n", "\n", "# write mask", "\n", "mask", "=", "np", ".", "copy", "(", "zero_mask", ")", "\n", "mask", "[", "loc", "[", "0", "]", "]", "=", "1", "\n", "output_mask_file", "=", "os", ".", "path", ".", "join", "(", "output_mask_path", ",", "name", "+", "'_'", "+", "str", "(", "idx", ")", "+", "'.txt'", ")", "\n", "export_ids", "(", "output_mask_file", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.read_instance_prediction_file": [[128, 149], ["open().read().splitlines", "os.path.abspath", "line.split", "os.path.isabs", "os.path.join", "os.path.abspath", "int", "float", "open().read", "len", "util.print_error", "util.print_error", "os.path.dirname", "os.path.commonprefix", "util.print_error", "float", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"(\"", "+", "str", "(", "self", ".", "instance_id", ")", "+", "\")\"", "\n", "\n", "", "", "def", "read_instance_prediction_file", "(", "filename", ",", "pred_path", ")", ":", "\n", "    ", "lines", "=", "open", "(", "filename", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "instance_info", "=", "{", "}", "\n", "abs_pred_path", "=", "os", ".", "path", ".", "abspath", "(", "pred_path", ")", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "parts", "=", "line", ".", "split", "(", "' '", ")", "\n", "if", "len", "(", "parts", ")", "!=", "3", ":", "\n", "            ", "util", ".", "print_error", "(", "'invalid instance prediction file. Expected (per line): [rel path prediction] [label id prediction] [confidence prediction]'", ")", "\n", "", "if", "os", ".", "path", ".", "isabs", "(", "parts", "[", "0", "]", ")", ":", "\n", "            ", "util", ".", "print_error", "(", "'invalid instance prediction file. First entry in line must be a relative path'", ")", "\n", "", "mask_file", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ",", "parts", "[", "0", "]", ")", "\n", "mask_file", "=", "os", ".", "path", ".", "abspath", "(", "mask_file", ")", "\n", "# check that mask_file lives inside prediction path", "\n", "if", "os", ".", "path", ".", "commonprefix", "(", "[", "mask_file", ",", "abs_pred_path", "]", ")", "!=", "abs_pred_path", ":", "\n", "            ", "util", ".", "print_error", "(", "'predicted mask {} in prediction text file {} points outside of prediction path.'", ".", "format", "(", "mask_file", ",", "filename", ")", ")", "\n", "\n", "", "info", "=", "{", "}", "\n", "info", "[", "\"label_id\"", "]", "=", "int", "(", "float", "(", "parts", "[", "1", "]", ")", ")", "\n", "info", "[", "\"conf\"", "]", "=", "float", "(", "parts", "[", "2", "]", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util_3d.get_instances": [[151, 163], ["numpy.unique", "util_3d.Instance", "instances[].append", "util_3d.Instance.to_dict"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.to_dict"], ["", "return", "instance_info", "\n", "\n", "\n", "", "def", "get_instances", "(", "ids", ",", "class_ids", ",", "class_labels", ",", "id2label", ")", ":", "\n", "    ", "instances", "=", "{", "}", "\n", "for", "label", "in", "class_labels", ":", "\n", "        ", "instances", "[", "label", "]", "=", "[", "]", "\n", "", "instance_ids", "=", "np", ".", "unique", "(", "ids", ")", "\n", "for", "id", "in", "instance_ids", ":", "\n", "        ", "if", "id", "==", "0", ":", "\n", "            ", "continue", "\n", "", "inst", "=", "Instance", "(", "ids", ",", "id", ")", "\n", "if", "inst", ".", "label_id", "in", "class_ids", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.metric_util.calc_iou": [[18, 41], ["numpy.array().min", "numpy.array().max", "numpy.array", "numpy.array"], "function", ["None"], ["\n", "# Mesh IO", "\n", "import", "trimesh", "\n", "\n", "\n", "# ----------------------------------------", "\n", "# Precision and Recall", "\n", "# ----------------------------------------", "\n", "\n", "def", "multi_scene_precision_recall", "(", "labels", ",", "pred", ",", "iou_thresh", ",", "conf_thresh", ",", "label_mask", ",", "pred_mask", "=", "None", ")", ":", "\n", "    ", "'''\n    Args:\n        labels: (B, N, 6)\n        pred: (B, M, 6)\n        iou_thresh: scalar\n        conf_thresh: scalar\n        label_mask: (B, N,) with values in 0 or 1 to indicate which GT boxes to consider.\n        pred_mask: (B, M,) with values in 0 or 1 to indicate which PRED boxes to consider.\n    Returns:\n        TP,FP,FN,Precision,Recall\n    '''", "\n", "# Make sure the masks are not Torch tensor, otherwise the mask==1 returns uint8 array instead", "\n", "# of True/False array as in numpy", "\n", "assert", "(", "not", "torch", ".", "is_tensor", "(", "label_mask", ")", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection.compute_averages": [[43, 58], ["numpy.where", "numpy.where", "numpy.nanmean", "numpy.nanmean", "enumerate", "numpy.isclose", "numpy.isclose", "numpy.average", "numpy.average"], "function", ["None"], ["def", "compute_averages", "(", "aps", ")", ":", "\n", "    ", "d_inf", "=", "0", "\n", "o50", "=", "np", ".", "where", "(", "np", ".", "isclose", "(", "opt", ".", "overlaps", ",", "0.5", ")", ")", "\n", "o25", "=", "np", ".", "where", "(", "np", ".", "isclose", "(", "opt", ".", "overlaps", ",", "0.25", ")", ")", "\n", "avg_dict", "=", "{", "}", "\n", "#avg_dict['all_ap']     = np.nanmean(aps[ d_inf,:,:  ])", "\n", "avg_dict", "[", "'all_ap_50%'", "]", "=", "np", ".", "nanmean", "(", "aps", "[", "d_inf", ",", ":", ",", "o50", "]", ")", "\n", "avg_dict", "[", "'all_ap_25%'", "]", "=", "np", ".", "nanmean", "(", "aps", "[", "d_inf", ",", ":", ",", "o25", "]", ")", "\n", "avg_dict", "[", "\"classes\"", "]", "=", "{", "}", "\n", "for", "(", "li", ",", "label_name", ")", "in", "enumerate", "(", "CLASS_LABELS", ")", ":", "\n", "        ", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "=", "{", "}", "\n", "#avg_dict[\"classes\"][label_name][\"ap\"]       = np.average(aps[ d_inf,li,  :])", "\n", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap50%\"", "]", "=", "np", ".", "average", "(", "aps", "[", "d_inf", ",", "li", ",", "o50", "]", ")", "\n", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap25%\"", "]", "=", "np", ".", "average", "(", "aps", "[", "d_inf", ",", "li", ",", "o25", "]", ")", "\n", "", "return", "avg_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection.print_results": [[59, 90], ["print", "print", "print", "print", "enumerate", "print", "print", "print", "print"], "function", ["None"], ["", "def", "print_results", "(", "avgs", ")", ":", "\n", "    ", "sep", "=", "\"\"", "\n", "col1", "=", "\":\"", "\n", "lineLen", "=", "64", "\n", "\n", "print", "(", "\"\"", ")", "\n", "print", "(", "\"#\"", "*", "lineLen", ")", "\n", "line", "=", "\"\"", "\n", "line", "+=", "\"{:<15}\"", ".", "format", "(", "\"what\"", ")", "+", "sep", "+", "col1", "\n", "line", "+=", "\"{:>15}\"", ".", "format", "(", "\"AP_50%\"", ")", "+", "sep", "\n", "line", "+=", "\"{:>15}\"", ".", "format", "(", "\"AP_25%\"", ")", "+", "sep", "\n", "print", "(", "line", ")", "\n", "print", "(", "\"#\"", "*", "lineLen", ")", "\n", "\n", "for", "(", "li", ",", "label_name", ")", "in", "enumerate", "(", "CLASS_LABELS", ")", ":", "\n", "        ", "ap_50o", "=", "avgs", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap50%\"", "]", "\n", "ap_25o", "=", "avgs", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap25%\"", "]", "\n", "line", "=", "\"{:<15}\"", ".", "format", "(", "label_name", ")", "+", "sep", "+", "col1", "\n", "line", "+=", "sep", "+", "\"{:>15.3f}\"", ".", "format", "(", "ap_50o", ")", "+", "sep", "\n", "line", "+=", "sep", "+", "\"{:>15.3f}\"", ".", "format", "(", "ap_25o", ")", "+", "sep", "\n", "print", "(", "line", ")", "\n", "\n", "", "all_ap_50o", "=", "avgs", "[", "\"all_ap_50%\"", "]", "\n", "all_ap_25o", "=", "avgs", "[", "\"all_ap_25%\"", "]", "\n", "\n", "print", "(", "\"-\"", "*", "lineLen", ")", "\n", "line", "=", "\"{:<15}\"", ".", "format", "(", "\"average\"", ")", "+", "sep", "+", "col1", "\n", "line", "+=", "\"{:>15.3f}\"", ".", "format", "(", "all_ap_50o", ")", "+", "sep", "\n", "line", "+=", "\"{:>15.3f}\"", ".", "format", "(", "all_ap_25o", ")", "+", "sep", "\n", "print", "(", "line", ")", "\n", "print", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection.write_result_file": [[92, 102], ["open", "f.write", "range", "len", "f.write", "_SPLITTER.join", "_SPLITTER.join", "str"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "write_result_file", "(", "avgs", ",", "filename", ")", ":", "\n", "    ", "_SPLITTER", "=", "','", "\n", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "_SPLITTER", ".", "join", "(", "[", "'class'", ",", "'class id'", ",", "'ap50'", ",", "'ap25'", "]", ")", "+", "'\\n'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "VALID_CLASS_IDS", ")", ")", ":", "\n", "            ", "class_name", "=", "CLASS_LABELS", "[", "i", "]", "\n", "class_id", "=", "VALID_CLASS_IDS", "[", "i", "]", "\n", "ap50", "=", "avgs", "[", "\"classes\"", "]", "[", "class_name", "]", "[", "\"ap50%\"", "]", "\n", "ap25", "=", "avgs", "[", "\"classes\"", "]", "[", "class_name", "]", "[", "\"ap25%\"", "]", "\n", "f", ".", "write", "(", "_SPLITTER", ".", "join", "(", "[", "str", "(", "x", ")", "for", "x", "in", "[", "class_name", ",", "class_id", ",", "ap50", ",", "ap25", "]", "]", ")", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection.evaluate": [[103, 150], ["print", "numpy.zeros", "range", "enumerate", "evaluate_object_detection.compute_averages", "evaluate_object_detection.print_results", "evaluate_object_detection.write_result_file", "len", "len", "os.path.abspath", "os.path.basename", "open().read().splitlines", "open().read().splitlines", "evaluate_object_detection_helper.eval_det", "len", "len", "line.split", "numpy.array", "int", "float", "pred_all[].append", "line.split", "numpy.array", "int", "gt_all[].append", "CLASS_LABELS.index", "open().read", "len", "util.print_error", "float", "open().read", "len", "util.print_error", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "open", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.compute_averages", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.print_results", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.write_result_file", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error"], ["", "", "", "def", "evaluate", "(", "pred_files", ",", "gt_files", ",", "pred_path", ",", "output_file", ")", ":", "\n", "    ", "print", "(", "'evaluating'", ",", "len", "(", "pred_files", ")", ",", "'scans...'", ")", "\n", "overlaps", "=", "opt", ".", "overlaps", "\n", "ap_scores", "=", "np", ".", "zeros", "(", "(", "1", ",", "len", "(", "CLASS_LABELS", ")", ",", "len", "(", "overlaps", ")", ")", ",", "np", ".", "float", ")", "\n", "pred_all", "=", "{", "}", "\n", "gt_all", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_files", ")", ")", ":", "\n", "        ", "matches_key", "=", "os", ".", "path", ".", "abspath", "(", "gt_files", "[", "i", "]", ")", "\n", "image_id", "=", "os", ".", "path", ".", "basename", "(", "matches_key", ")", "\n", "# assign gt to predictions", "\n", "pred_all", "[", "image_id", "]", "=", "[", "]", "\n", "gt_all", "[", "image_id", "]", "=", "[", "]", "\n", "#read prediction file", "\n", "lines", "=", "open", "(", "pred_files", "[", "i", "]", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "parts", "=", "line", ".", "split", "(", "' '", ")", "\n", "if", "len", "(", "parts", ")", "!=", "8", ":", "\n", "                ", "util", ".", "print_error", "(", "'invalid object detection prediction file. Expected (per line): [minx] [miny] [minz] [maxx] [maxy] [maxz] [label_id] [score]'", ",", "user_fault", "=", "True", ")", "\n", "", "bbox", "=", "np", ".", "array", "(", "[", "float", "(", "parts", "[", "0", "]", ")", ",", "float", "(", "parts", "[", "1", "]", ")", ",", "float", "(", "parts", "[", "2", "]", ")", ",", "float", "(", "parts", "[", "3", "]", ")", ",", "float", "(", "parts", "[", "4", "]", ")", ",", "float", "(", "parts", "[", "5", "]", ")", "]", ")", "\n", "class_id", "=", "int", "(", "float", "(", "parts", "[", "6", "]", ")", ")", "\n", "if", "not", "class_id", "in", "VALID_CLASS_IDS", ":", "\n", "                ", "continue", "\n", "", "classname", "=", "ID_TO_LABEL", "[", "class_id", "]", "\n", "score", "=", "float", "(", "parts", "[", "7", "]", ")", "\n", "pred_all", "[", "image_id", "]", ".", "append", "(", "(", "classname", ",", "bbox", ",", "score", ")", ")", "\n", "#read ground truth file ", "\n", "", "lines", "=", "open", "(", "gt_files", "[", "i", "]", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "            ", "parts", "=", "line", ".", "split", "(", "' '", ")", "\n", "if", "len", "(", "parts", ")", "!=", "7", ":", "\n", "                ", "util", ".", "print_error", "(", "'invalid object detection ground truth file. Expected (per line): [minx] [miny] [minz] [maxx] [maxy] [maxz] [label_id]'", ",", "user_fault", "=", "True", ")", "\n", "", "bbox", "=", "np", ".", "array", "(", "[", "float", "(", "parts", "[", "0", "]", ")", ",", "float", "(", "parts", "[", "1", "]", ")", ",", "float", "(", "parts", "[", "2", "]", ")", ",", "float", "(", "parts", "[", "3", "]", ")", ",", "float", "(", "parts", "[", "4", "]", ")", ",", "float", "(", "parts", "[", "5", "]", ")", "]", ")", "\n", "class_id", "=", "int", "(", "float", "(", "parts", "[", "6", "]", ")", ")", "\n", "if", "not", "class_id", "in", "VALID_CLASS_IDS", ":", "\n", "                ", "continue", "\n", "", "classname", "=", "ID_TO_LABEL", "[", "class_id", "]", "\n", "gt_all", "[", "image_id", "]", ".", "append", "(", "(", "classname", ",", "bbox", ")", ")", "\n", "", "", "for", "oi", ",", "overlap_th", "in", "enumerate", "(", "overlaps", ")", ":", "\n", "        ", "_", ",", "_", ",", "ap_dict", "=", "eval_det", "(", "pred_all", ",", "gt_all", ",", "ovthresh", "=", "overlap_th", ")", "\n", "for", "label", "in", "ap_dict", ":", "\n", "            ", "id", "=", "CLASS_LABELS", ".", "index", "(", "label", ")", "\n", "ap_scores", "[", "0", ",", "id", ",", "oi", "]", "=", "ap_dict", "[", "label", "]", "\n", "#print(ap_scores)", "\n", "", "", "avgs", "=", "compute_averages", "(", "ap_scores", ")", "\n", "# print", "\n", "print_results", "(", "avgs", ")", "\n", "write_result_file", "(", "avgs", ",", "output_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_object_detection.main": [[152, 166], ["range", "evaluate_object_detection.evaluate", "len", "util.print_error", "len", "os.path.join", "gt_files.append", "os.path.join", "os.listdir", "os.path.isfile", "util.print_error", "f.endswith"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.evaluate", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error"], ["", "def", "main", "(", ")", ":", "\n", "    ", "pred_files", "=", "[", "f", "for", "f", "in", "os", ".", "listdir", "(", "opt", ".", "pred_path", ")", "if", "f", ".", "endswith", "(", "'.txt'", ")", "and", "f", "!=", "'object_detection_evaluation.txt'", "]", "\n", "gt_files", "=", "[", "]", "\n", "if", "len", "(", "pred_files", ")", "==", "0", ":", "\n", "        ", "util", ".", "print_error", "(", "'No result files found.'", ",", "user_fault", "=", "True", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "pred_files", ")", ")", ":", "\n", "        ", "gt_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "gt_path", ",", "pred_files", "[", "i", "]", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "gt_file", ")", ":", "\n", "            ", "util", ".", "print_error", "(", "'Result file {} does not match any gt file'", ".", "format", "(", "pred_files", "[", "i", "]", ")", ",", "user_fault", "=", "True", ")", "\n", "", "gt_files", ".", "append", "(", "gt_file", ")", "\n", "pred_files", "[", "i", "]", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "pred_path", ",", "pred_files", "[", "i", "]", ")", "\n", "\n", "# evaluate", "\n", "", "evaluate", "(", "pred_files", ",", "gt_files", ",", "opt", ".", "pred_path", ",", "opt", ".", "output_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util.print_error": [[7, 12], ["sys.stderr.write", "sys.exit", "sys.exit", "str"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["sys", ".", "exit", "(", "-", "1", ")", "\n", "", "try", ":", "\n", "    ", "import", "imageio", "\n", "", "except", ":", "\n", "    ", "print", "(", "\"Please install the module 'imageio' for image processing, e.g.\"", ")", "\n", "print", "(", "\"pip install imageio\"", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util.represents_int": [[15, 21], ["int"], "function", ["None"], ["# print an error message and quit", "\n", "", "def", "print_error", "(", "message", ",", "user_fault", "=", "False", ")", ":", "\n", "    ", "sys", ".", "stderr", ".", "write", "(", "'ERROR: '", "+", "str", "(", "message", ")", "+", "'\\n'", ")", "\n", "if", "user_fault", ":", "\n", "      ", "sys", ".", "exit", "(", "2", ")", "\n", "", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util.read_label_mapping": [[23, 34], ["os.path.isfile", "dict", "util.represents_int", "open", "csv.DictReader", "int", "dict.keys", "int", "dict.items"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.represents_int"], ["# if string s represents an int", "\n", "", "def", "represents_int", "(", "s", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "int", "(", "s", ")", "\n", "return", "True", "\n", "", "except", "ValueError", ":", "\n", "        ", "return", "False", "\n", "\n", "\n", "", "", "def", "read_label_mapping", "(", "filename", ",", "label_from", "=", "'raw_category'", ",", "label_to", "=", "'nyu40id'", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "mapping", "=", "dict", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util.read_scene_types_mapping": [[37, 47], ["os.path.isfile", "dict", "open().read().splitlines", "line.split", "open().read", "x[].strip", "int", "int", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["for", "row", "in", "reader", ":", "\n", "            ", "mapping", "[", "row", "[", "label_from", "]", "]", "=", "int", "(", "row", "[", "label_to", "]", ")", "\n", "# if ints convert ", "\n", "", "", "if", "represents_int", "(", "[", "key", "for", "key", "in", "mapping", ".", "keys", "(", ")", "]", "[", "0", "]", ")", ":", "\n", "        ", "mapping", "=", "{", "int", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "mapping", ".", "items", "(", ")", "}", "\n", "", "return", "mapping", "\n", "\n", "\n", "# input: scene_types.txt or scene_types_all.txt", "\n", "", "def", "read_scene_types_mapping", "(", "filename", ",", "remove_spaces", "=", "True", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util.visualize_label_image": [[50, 58], ["numpy.zeros", "util.create_color_palette", "enumerate", "imageio.imwrite"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.create_color_palette"], ["lines", "=", "[", "line", ".", "split", "(", "'\\t'", ")", "for", "line", "in", "lines", "]", "\n", "if", "remove_spaces", ":", "\n", "        ", "mapping", "=", "{", "x", "[", "1", "]", ".", "strip", "(", ")", ":", "int", "(", "x", "[", "0", "]", ")", "for", "x", "in", "lines", "}", "\n", "", "else", ":", "\n", "        ", "mapping", "=", "{", "x", "[", "1", "]", ":", "int", "(", "x", "[", "0", "]", ")", "for", "x", "in", "lines", "}", "\n", "", "return", "mapping", "\n", "\n", "\n", "# color by label", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util.visualize_instance_image": [[61, 70], ["numpy.zeros", "util.create_color_palette", "numpy.unique", "enumerate", "imageio.imwrite", "len"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.create_color_palette"], ["width", "=", "image", ".", "shape", "[", "1", "]", "\n", "vis_image", "=", "np", ".", "zeros", "(", "[", "height", ",", "width", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "color_palette", "=", "create_color_palette", "(", ")", "\n", "for", "idx", ",", "color", "in", "enumerate", "(", "color_palette", ")", ":", "\n", "        ", "vis_image", "[", "image", "==", "idx", "]", "=", "color", "\n", "", "imageio", ".", "imwrite", "(", "filename", ",", "vis_image", ")", "\n", "\n", "\n", "# color by different instances (mod length of color palette)", "\n", "", "def", "visualize_instance_image", "(", "filename", ",", "image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.util.create_color_palette": [[73, 116], ["None"], "function", ["None"], ["vis_image", "=", "np", ".", "zeros", "(", "[", "height", ",", "width", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "color_palette", "=", "create_color_palette", "(", ")", "\n", "instances", "=", "np", ".", "unique", "(", "image", ")", "\n", "for", "idx", ",", "inst", "in", "enumerate", "(", "instances", ")", ":", "\n", "        ", "vis_image", "[", "image", "==", "inst", "]", "=", "color_palette", "[", "inst", "%", "len", "(", "color_palette", ")", "]", "\n", "", "imageio", ".", "imwrite", "(", "filename", ",", "vis_image", ")", "\n", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.evaluation.evaluate_semantic_instance.Evaluator.add_gt_from_benchmark": [[371, 381], ["evaluate_semantic_instance.Evaluator.add_gt", "os.path.join", "datasets.evaluation.scannet_benchmark_utils.util_3d.load_ids", "os.path.join", "datasets.evaluation.scannet_benchmark_utils.util_3d.load_ids"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.add_gt", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.load_ids", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.load_ids"], ["# see scannet repo for generating gt data for val in benchmark format", "\n", "", "def", "add_gt_in_benchmark_format", "(", "self", ",", "scene_id", ")", ":", "\n", "        ", "gt_file_path", "=", "'/rhome/jhou/data/dataset/scannet/scannet_benchmark/gt_instance/'", "\n", "gt_file", "=", "os", ".", "path", ".", "join", "(", "gt_file_path", ",", "scene_id", "+", "'.txt'", ")", "\n", "gt_ids", "=", "util_3d", ".", "load_ids", "(", "gt_file", ")", "\n", "self", ".", "add_gt", "(", "gt_ids", ",", "scene_id", ")", "\n", "\n", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "print", "(", "'evaluating'", ",", "len", "(", "self", ".", "pred_instances", ")", ",", "'scans...'", ")", "\n", "matches", "=", "{", "}", "\n", "for", "i", ",", "scene_id", "in", "enumerate", "(", "self", ".", "pred_instances", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.Instance.__init__": [[95, 101], ["int", "int", "int", "util_3d.Instance.get_label_id", "util_3d.Instance.get_instance_verts"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.get_label_id", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.get_instance_verts"], ["def", "__init__", "(", "self", ",", "mesh_vert_instances", ",", "instance_id", ")", ":", "\n", "        ", "if", "(", "instance_id", "==", "-", "1", ")", ":", "\n", "            ", "return", "\n", "", "self", ".", "instance_id", "=", "int", "(", "instance_id", ")", "\n", "self", ".", "label_id", "=", "int", "(", "self", ".", "get_label_id", "(", "instance_id", ")", ")", "\n", "self", ".", "vert_count", "=", "int", "(", "self", ".", "get_instance_verts", "(", "mesh_vert_instances", ",", "instance_id", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.Instance.get_label_id": [[102, 104], ["int"], "methods", ["None"], ["", "def", "get_label_id", "(", "self", ",", "instance_id", ")", ":", "\n", "        ", "return", "int", "(", "instance_id", "//", "1000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.Instance.get_instance_verts": [[105, 107], ["None"], "methods", ["None"], ["", "def", "get_instance_verts", "(", "self", ",", "mesh_vert_instances", ",", "instance_id", ")", ":", "\n", "        ", "return", "(", "mesh_vert_instances", "==", "instance_id", ")", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.Instance.to_json": [[108, 110], ["json.dumps"], "methods", ["None"], ["", "def", "to_json", "(", "self", ")", ":", "\n", "        ", "return", "json", ".", "dumps", "(", "self", ",", "default", "=", "lambda", "o", ":", "o", ".", "__dict__", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.Instance.to_dict": [[111, 119], ["None"], "methods", ["None"], ["", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "dict", "=", "{", "}", "\n", "dict", "[", "\"instance_id\"", "]", "=", "self", ".", "instance_id", "\n", "dict", "[", "\"label_id\"", "]", "=", "self", ".", "label_id", "\n", "dict", "[", "\"vert_count\"", "]", "=", "self", ".", "vert_count", "\n", "dict", "[", "\"med_dist\"", "]", "=", "self", ".", "med_dist", "\n", "dict", "[", "\"dist_conf\"", "]", "=", "self", ".", "dist_conf", "\n", "return", "dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.Instance.from_json": [[120, 127], ["int", "int", "int", "float", "float"], "methods", ["None"], ["", "def", "from_json", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "instance_id", "=", "int", "(", "data", "[", "\"instance_id\"", "]", ")", "\n", "self", ".", "label_id", "=", "int", "(", "data", "[", "\"label_id\"", "]", ")", "\n", "self", ".", "vert_count", "=", "int", "(", "data", "[", "\"vert_count\"", "]", ")", "\n", "if", "(", "\"med_dist\"", "in", "data", ")", ":", "\n", "            ", "self", ".", "med_dist", "=", "float", "(", "data", "[", "\"med_dist\"", "]", ")", "\n", "self", ".", "dist_conf", "=", "float", "(", "data", "[", "\"dist_conf\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.Instance.__str__": [[128, 130], ["str"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"(\"", "+", "str", "(", "self", ".", "instance_id", ")", "+", "\")\"", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.transform_points": [[22, 30], ["np.concatenate", "np.matmul", "np.transpose", "np.transpose", "len", "np.ones"], "function", ["None"], ["def", "transform_points", "(", "matrix", ",", "points", ")", ":", "\n", "    ", "assert", "len", "(", "points", ".", "shape", ")", "==", "2", "and", "points", ".", "shape", "[", "1", "]", "==", "3", "\n", "num_points", "=", "points", ".", "shape", "[", "0", "]", "\n", "p", "=", "np", ".", "concatenate", "(", "[", "points", ",", "np", ".", "ones", "(", "(", "num_points", ",", "1", ")", ")", "]", ",", "axis", "=", "1", ")", "\n", "p", "=", "np", ".", "matmul", "(", "matrix", ",", "np", ".", "transpose", "(", "p", ")", ")", "\n", "p", "=", "np", ".", "transpose", "(", "p", ")", "\n", "p", "[", ":", ",", ":", "3", "]", "/=", "p", "[", ":", ",", "3", ",", "None", "]", "\n", "return", "p", "[", ":", ",", ":", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.export_ids": [[32, 36], ["open", "f.write"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "export_ids", "(", "filename", ",", "ids", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "id", "in", "ids", ":", "\n", "            ", "f", ".", "write", "(", "'%d\\n'", "%", "id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.load_ids": [[38, 42], ["open().read().splitlines", "np.array", "open().read", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "", "", "def", "load_ids", "(", "filename", ")", ":", "\n", "    ", "ids", "=", "open", "(", "filename", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "ids", "=", "np", ".", "array", "(", "ids", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.read_mesh_vertices": [[44, 54], ["os.path.isfile", "open", "PlyData.read", "np.zeros"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "def", "read_mesh_vertices", "(", "filename", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "plydata", "=", "PlyData", ".", "read", "(", "f", ")", "\n", "num_verts", "=", "plydata", "[", "'vertex'", "]", ".", "count", "\n", "vertices", "=", "np", ".", "zeros", "(", "shape", "=", "[", "num_verts", ",", "3", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vertices", "[", ":", ",", "0", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'x'", "]", "\n", "vertices", "[", ":", ",", "1", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'y'", "]", "\n", "vertices", "[", ":", ",", "2", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'z'", "]", "\n", "", "return", "vertices", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.export_instance_ids_for_eval": [[57, 83], ["os.path.join", "np.unique", "np.zeros", "os.path.splitext", "os.path.dirname", "os.path.isdir", "os.mkdir", "open", "enumerate", "os.path.basename", "np.where", "os.path.join", "f.write", "np.copy", "os.path.join", "util_3d.export_ids", "str", "str"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.export_ids"], ["", "def", "export_instance_ids_for_eval", "(", "filename", ",", "label_ids", ",", "instance_ids", ")", ":", "\n", "    ", "assert", "label_ids", ".", "shape", "[", "0", "]", "==", "instance_ids", ".", "shape", "[", "0", "]", "\n", "output_mask_path_relative", "=", "'predicted_masks'", "\n", "name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "filename", ")", ")", "[", "0", "]", "\n", "output_mask_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ",", "output_mask_path_relative", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "output_mask_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "output_mask_path", ")", "\n", "", "insts", "=", "np", ".", "unique", "(", "instance_ids", ")", "\n", "zero_mask", "=", "np", ".", "zeros", "(", "shape", "=", "(", "instance_ids", ".", "shape", "[", "0", "]", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "idx", ",", "inst_id", "in", "enumerate", "(", "insts", ")", ":", "\n", "            ", "if", "inst_id", "==", "0", ":", "# 0 -> no instance for this vertex", "\n", "                ", "continue", "\n", "\n", "", "loc", "=", "np", ".", "where", "(", "instance_ids", "==", "inst_id", ")", "\n", "label_id", "=", "label_ids", "[", "loc", "[", "0", "]", "[", "0", "]", "]", "\n", "\n", "# write mask indexing", "\n", "output_mask_file_relavtive", "=", "os", ".", "path", ".", "join", "(", "output_mask_path_relative", ",", "name", "+", "'_'", "+", "str", "(", "idx", ")", "+", "'.txt'", ")", "\n", "f", ".", "write", "(", "'%s %d %f\\n'", "%", "(", "output_mask_file_relavtive", ",", "label_id", ",", "1.0", ")", ")", "\n", "\n", "# write mask", "\n", "mask", "=", "np", ".", "copy", "(", "zero_mask", ")", "\n", "mask", "[", "loc", "[", "0", "]", "]", "=", "1", "\n", "output_mask_file", "=", "os", ".", "path", ".", "join", "(", "output_mask_path", ",", "name", "+", "'_'", "+", "str", "(", "idx", ")", "+", "'.txt'", ")", "\n", "export_ids", "(", "output_mask_file", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.read_instance_prediction_file": [[131, 152], ["open().read().splitlines", "os.path.abspath", "line.split", "os.path.isabs", "os.path.join", "os.path.abspath", "int", "float", "open().read", "len", "util.print_error", "util.print_error", "os.path.dirname", "os.path.commonprefix", "util.print_error", "float", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error"], ["", "", "def", "read_instance_prediction_file", "(", "filename", ",", "pred_path", ")", ":", "\n", "    ", "lines", "=", "open", "(", "filename", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "instance_info", "=", "{", "}", "\n", "abs_pred_path", "=", "os", ".", "path", ".", "abspath", "(", "pred_path", ")", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "parts", "=", "line", ".", "split", "(", "' '", ")", "\n", "if", "len", "(", "parts", ")", "!=", "3", ":", "\n", "            ", "util", ".", "print_error", "(", "'invalid instance prediction file. Expected (per line): [rel path prediction] [label id prediction] [confidence prediction]'", ")", "\n", "", "if", "os", ".", "path", ".", "isabs", "(", "parts", "[", "0", "]", ")", ":", "\n", "            ", "util", ".", "print_error", "(", "'invalid instance prediction file. First entry in line must be a relative path'", ")", "\n", "", "mask_file", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ",", "parts", "[", "0", "]", ")", "\n", "mask_file", "=", "os", ".", "path", ".", "abspath", "(", "mask_file", ")", "\n", "# check that mask_file lives inside prediction path", "\n", "if", "os", ".", "path", ".", "commonprefix", "(", "[", "mask_file", ",", "abs_pred_path", "]", ")", "!=", "abs_pred_path", ":", "\n", "            ", "util", ".", "print_error", "(", "'predicted mask {} in prediction text file {} points outside of prediction path.'", ".", "format", "(", "mask_file", ",", "filename", ")", ")", "\n", "\n", "", "info", "=", "{", "}", "\n", "info", "[", "\"label_id\"", "]", "=", "int", "(", "float", "(", "parts", "[", "1", "]", ")", ")", "\n", "info", "[", "\"conf\"", "]", "=", "float", "(", "parts", "[", "2", "]", ")", "\n", "instance_info", "[", "mask_file", "]", "=", "info", "\n", "", "return", "instance_info", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util_3d.get_instances": [[154, 166], ["np.unique", "util_3d.Instance", "instances[].append", "util_3d.Instance.to_dict"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.to_dict"], ["", "def", "get_instances", "(", "ids", ",", "class_ids", ",", "class_labels", ",", "id2label", ")", ":", "\n", "    ", "instances", "=", "{", "}", "\n", "for", "label", "in", "class_labels", ":", "\n", "        ", "instances", "[", "label", "]", "=", "[", "]", "\n", "", "instance_ids", "=", "np", ".", "unique", "(", "ids", ")", "\n", "for", "id", "in", "instance_ids", ":", "\n", "        ", "if", "id", "==", "0", ":", "\n", "            ", "continue", "\n", "", "inst", "=", "Instance", "(", "ids", ",", "id", ")", "\n", "if", "inst", ".", "label_id", "in", "class_ids", ":", "\n", "            ", "instances", "[", "id2label", "[", "inst", ".", "label_id", "]", "]", ".", "append", "(", "inst", ".", "to_dict", "(", ")", ")", "\n", "", "", "return", "instances", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util.print_error": [[16, 21], ["sys.stderr.write", "sys.exit", "sys.exit", "str"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "print_error", "(", "message", ",", "user_fault", "=", "False", ")", ":", "\n", "    ", "sys", ".", "stderr", ".", "write", "(", "'ERROR: '", "+", "str", "(", "message", ")", "+", "'\\n'", ")", "\n", "if", "user_fault", ":", "\n", "      ", "sys", ".", "exit", "(", "2", ")", "\n", "", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util.represents_int": [[24, 30], ["int"], "function", ["None"], ["", "def", "represents_int", "(", "s", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "int", "(", "s", ")", "\n", "return", "True", "\n", "", "except", "ValueError", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util.read_label_mapping": [[32, 43], ["os.path.isfile", "dict", "util.represents_int", "open", "csv.DictReader", "int", "int", "dict.items", "dict.keys"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.represents_int"], ["", "", "def", "read_label_mapping", "(", "filename", ",", "label_from", "=", "'raw_category'", ",", "label_to", "=", "'nyu40id'", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "mapping", "=", "dict", "(", ")", "\n", "with", "open", "(", "filename", ")", "as", "csvfile", ":", "\n", "        ", "reader", "=", "csv", ".", "DictReader", "(", "csvfile", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "row", "in", "reader", ":", "\n", "            ", "mapping", "[", "row", "[", "label_from", "]", "]", "=", "int", "(", "row", "[", "label_to", "]", ")", "\n", "# if ints convert ", "\n", "", "", "if", "represents_int", "(", "[", "key", "for", "key", "in", "mapping", ".", "keys", "(", ")", "]", "[", "0", "]", ")", ":", "\n", "        ", "mapping", "=", "{", "int", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "mapping", ".", "items", "(", ")", "}", "\n", "", "return", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util.read_scene_types_mapping": [[46, 56], ["os.path.isfile", "dict", "open().read().splitlines", "line.split", "open().read", "x[].strip", "int", "int", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "def", "read_scene_types_mapping", "(", "filename", ",", "remove_spaces", "=", "True", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "mapping", "=", "dict", "(", ")", "\n", "lines", "=", "open", "(", "filename", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "lines", "=", "[", "line", ".", "split", "(", "'\\t'", ")", "for", "line", "in", "lines", "]", "\n", "if", "remove_spaces", ":", "\n", "        ", "mapping", "=", "{", "x", "[", "1", "]", ".", "strip", "(", ")", ":", "int", "(", "x", "[", "0", "]", ")", "for", "x", "in", "lines", "}", "\n", "", "else", ":", "\n", "        ", "mapping", "=", "{", "x", "[", "1", "]", ":", "int", "(", "x", "[", "0", "]", ")", "for", "x", "in", "lines", "}", "\n", "", "return", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util.visualize_label_image": [[59, 67], ["np.zeros", "create_color_palette", "enumerate", "imageio.imwrite"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.create_color_palette"], ["", "def", "visualize_label_image", "(", "filename", ",", "image", ")", ":", "\n", "    ", "height", "=", "image", ".", "shape", "[", "0", "]", "\n", "width", "=", "image", ".", "shape", "[", "1", "]", "\n", "vis_image", "=", "np", ".", "zeros", "(", "[", "height", ",", "width", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "color_palette", "=", "create_color_palette", "(", ")", "\n", "for", "idx", ",", "color", "in", "enumerate", "(", "color_palette", ")", ":", "\n", "        ", "vis_image", "[", "image", "==", "idx", "]", "=", "color", "\n", "", "imageio", ".", "imwrite", "(", "filename", ",", "vis_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_benchmark_utils.util.visualize_instance_image": [[70, 79], ["np.zeros", "create_color_palette", "np.unique", "enumerate", "imageio.imwrite", "len"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.create_color_palette"], ["", "def", "visualize_instance_image", "(", "filename", ",", "image", ")", ":", "\n", "    ", "height", "=", "image", ".", "shape", "[", "0", "]", "\n", "width", "=", "image", ".", "shape", "[", "1", "]", "\n", "vis_image", "=", "np", ".", "zeros", "(", "[", "height", ",", "width", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "color_palette", "=", "create_color_palette", "(", ")", "\n", "instances", "=", "np", ".", "unique", "(", "image", ")", "\n", "for", "idx", ",", "inst", "in", "enumerate", "(", "instances", ")", ":", "\n", "        ", "vis_image", "[", "image", "==", "inst", "]", "=", "color_palette", "[", "inst", "%", "len", "(", "color_palette", ")", "]", "\n", "", "imageio", ".", "imwrite", "(", "filename", ",", "vis_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.__init__": [[65, 84], ["range", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "CLASS_LABELS", ",", "VALID_CLASS_IDS", ",", "benchmark", "=", "False", ")", ":", "\n", "# ---------- Label info ---------- #", "\n", "#CLASS_LABELS = ['cabinet', 'bed', 'chair', 'sofa', 'table', 'door', ", "\n", "#                'window', 'bookshelf', 'picture', 'counter',", "\n", "#                'desk', 'curtain', 'refrigerator', 'shower curtain',", "\n", "#                'toilet', 'sink', 'bathtub', 'otherfurniture']", "\n", "#VALID_CLASS_IDS = np.array([3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 24, 28, 33, 34, 36, 39])", "\n", "\n", "        ", "self", ".", "CLASS_LABELS", "=", "CLASS_LABELS", "\n", "self", ".", "VALID_CLASS_IDS", "=", "VALID_CLASS_IDS", "\n", "self", ".", "ID_TO_LABEL", "=", "{", "}", "\n", "self", ".", "LABEL_TO_ID", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "VALID_CLASS_IDS", ")", ")", ":", "\n", "            ", "self", ".", "LABEL_TO_ID", "[", "CLASS_LABELS", "[", "i", "]", "]", "=", "VALID_CLASS_IDS", "[", "i", "]", "\n", "self", ".", "ID_TO_LABEL", "[", "VALID_CLASS_IDS", "[", "i", "]", "]", "=", "CLASS_LABELS", "[", "i", "]", "\n", "\n", "", "self", ".", "pred_instances", "=", "{", "}", "\n", "self", ".", "gt_instances", "=", "{", "}", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.evaluate_matches": [[85, 233], ["numpy.zeros", "enumerate", "zip", "enumerate", "len", "len", "len", "enumerate", "numpy.empty", "numpy.empty", "numpy.ones", "numpy.zeros", "enumerate", "numpy.append", "numpy.append", "numpy.argsort", "numpy.cumsum", "numpy.unique", "len", "numpy.zeros", "numpy.zeros", "numpy.append", "enumerate", "numpy.copy", "numpy.append", "numpy.append", "numpy.convolve", "numpy.dot", "len", "numpy.ones", "len", "len", "len", "float", "len", "float", "float", "float", "float", "float", "float", "numpy.append", "numpy.append", "max", "min", "numpy.append", "numpy.append", "numpy.append"], "methods", ["None"], ["", "def", "evaluate_matches", "(", "self", ",", "matches", ")", ":", "\n", "# results: class x overlap", "\n", "        ", "ap", "=", "np", ".", "zeros", "(", "(", "len", "(", "self", ".", "distance_threshes", ")", ",", "len", "(", "self", ".", "CLASS_LABELS", ")", ",", "len", "(", "self", ".", "overlaps", ")", ")", ",", "np", ".", "float", ")", "\n", "for", "di", ",", "(", "min_region_size", ",", "distance_thresh", ",", "distance_conf", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "min_region_sizes", ",", "self", ".", "distance_threshes", ",", "self", ".", "distance_confs", ")", ")", ":", "\n", "            ", "for", "oi", ",", "overlap_th", "in", "enumerate", "(", "self", ".", "overlaps", ")", ":", "\n", "                ", "pred_visited", "=", "{", "}", "\n", "for", "m", "in", "matches", ":", "\n", "                    ", "for", "p", "in", "matches", "[", "m", "]", "[", "'pred'", "]", ":", "\n", "                        ", "for", "label_name", "in", "self", ".", "CLASS_LABELS", ":", "\n", "                            ", "for", "p", "in", "matches", "[", "m", "]", "[", "'pred'", "]", "[", "label_name", "]", ":", "\n", "                                ", "if", "'filename'", "in", "p", ":", "\n", "                                    ", "pred_visited", "[", "p", "[", "'filename'", "]", "]", "=", "False", "\n", "", "", "", "", "", "for", "li", ",", "label_name", "in", "enumerate", "(", "self", ".", "CLASS_LABELS", ")", ":", "\n", "                    ", "y_true", "=", "np", ".", "empty", "(", "0", ")", "\n", "y_score", "=", "np", ".", "empty", "(", "0", ")", "\n", "hard_false_negatives", "=", "0", "\n", "has_gt", "=", "False", "\n", "has_pred", "=", "False", "\n", "for", "m", "in", "matches", ":", "\n", "                        ", "pred_instances", "=", "matches", "[", "m", "]", "[", "'pred'", "]", "[", "label_name", "]", "\n", "gt_instances", "=", "matches", "[", "m", "]", "[", "'gt'", "]", "[", "label_name", "]", "\n", "# filter groups in ground truth", "\n", "gt_instances", "=", "[", "gt", "for", "gt", "in", "gt_instances", "if", "gt", "[", "'instance_id'", "]", ">=", "1000", "and", "gt", "[", "'vert_count'", "]", ">=", "min_region_size", "and", "gt", "[", "'med_dist'", "]", "<=", "distance_thresh", "and", "gt", "[", "'dist_conf'", "]", ">=", "distance_conf", "]", "\n", "if", "gt_instances", ":", "\n", "                            ", "has_gt", "=", "True", "\n", "", "if", "pred_instances", ":", "\n", "                            ", "has_pred", "=", "True", "\n", "\n", "", "cur_true", "=", "np", ".", "ones", "(", "len", "(", "gt_instances", ")", ")", "\n", "cur_score", "=", "np", ".", "ones", "(", "len", "(", "gt_instances", ")", ")", "*", "(", "-", "float", "(", "\"inf\"", ")", ")", "\n", "cur_match", "=", "np", ".", "zeros", "(", "len", "(", "gt_instances", ")", ",", "dtype", "=", "np", ".", "bool", ")", "\n", "# collect matches", "\n", "for", "(", "gti", ",", "gt", ")", "in", "enumerate", "(", "gt_instances", ")", ":", "\n", "                            ", "found_match", "=", "False", "\n", "num_pred", "=", "len", "(", "gt", "[", "'matched_pred'", "]", ")", "\n", "for", "pred", "in", "gt", "[", "'matched_pred'", "]", ":", "\n", "# greedy assignments", "\n", "                                ", "if", "pred_visited", "[", "pred", "[", "'filename'", "]", "]", ":", "\n", "                                    ", "continue", "\n", "", "overlap", "=", "float", "(", "pred", "[", "'intersection'", "]", ")", "/", "(", "gt", "[", "'vert_count'", "]", "+", "pred", "[", "'vert_count'", "]", "-", "pred", "[", "'intersection'", "]", ")", "\n", "if", "overlap", ">", "overlap_th", ":", "\n", "                                    ", "confidence", "=", "pred", "[", "'confidence'", "]", "\n", "# if already have a prediction for this gt,", "\n", "# the prediction with the lower score is automatically a false positive", "\n", "if", "cur_match", "[", "gti", "]", ":", "\n", "                                        ", "max_score", "=", "max", "(", "cur_score", "[", "gti", "]", ",", "confidence", ")", "\n", "min_score", "=", "min", "(", "cur_score", "[", "gti", "]", ",", "confidence", ")", "\n", "cur_score", "[", "gti", "]", "=", "max_score", "\n", "# append false positive", "\n", "cur_true", "=", "np", ".", "append", "(", "cur_true", ",", "0", ")", "\n", "cur_score", "=", "np", ".", "append", "(", "cur_score", ",", "min_score", ")", "\n", "cur_match", "=", "np", ".", "append", "(", "cur_match", ",", "True", ")", "\n", "# otherwise set score", "\n", "", "else", ":", "\n", "                                        ", "found_match", "=", "True", "\n", "cur_match", "[", "gti", "]", "=", "True", "\n", "cur_score", "[", "gti", "]", "=", "confidence", "\n", "pred_visited", "[", "pred", "[", "'filename'", "]", "]", "=", "True", "\n", "", "", "", "if", "not", "found_match", ":", "\n", "                                ", "hard_false_negatives", "+=", "1", "\n", "# remove non-matched ground truth instances", "\n", "", "", "cur_true", "=", "cur_true", "[", "cur_match", "==", "True", "]", "\n", "cur_score", "=", "cur_score", "[", "cur_match", "==", "True", "]", "\n", "\n", "# collect non-matched predictions as false positive", "\n", "for", "pred", "in", "pred_instances", ":", "\n", "                            ", "found_gt", "=", "False", "\n", "for", "gt", "in", "pred", "[", "'matched_gt'", "]", ":", "\n", "                                ", "overlap", "=", "float", "(", "gt", "[", "'intersection'", "]", ")", "/", "(", "gt", "[", "'vert_count'", "]", "+", "pred", "[", "'vert_count'", "]", "-", "gt", "[", "'intersection'", "]", ")", "\n", "if", "overlap", ">", "overlap_th", ":", "\n", "                                    ", "found_gt", "=", "True", "\n", "break", "\n", "", "", "if", "not", "found_gt", ":", "\n", "                                ", "num_ignore", "=", "pred", "[", "'void_intersection'", "]", "\n", "for", "gt", "in", "pred", "[", "'matched_gt'", "]", ":", "\n", "# group?", "\n", "                                    ", "if", "gt", "[", "'instance_id'", "]", "<", "1000", ":", "\n", "                                        ", "num_ignore", "+=", "gt", "[", "'intersection'", "]", "\n", "# small ground truth instances", "\n", "", "if", "gt", "[", "'vert_count'", "]", "<", "min_region_size", "or", "gt", "[", "'med_dist'", "]", ">", "distance_thresh", "or", "gt", "[", "'dist_conf'", "]", "<", "distance_conf", ":", "\n", "                                        ", "num_ignore", "+=", "gt", "[", "'intersection'", "]", "\n", "", "", "proportion_ignore", "=", "float", "(", "num_ignore", ")", "/", "pred", "[", "'vert_count'", "]", "\n", "# if not ignored append false positive", "\n", "if", "proportion_ignore", "<=", "overlap_th", ":", "\n", "                                    ", "cur_true", "=", "np", ".", "append", "(", "cur_true", ",", "0", ")", "\n", "confidence", "=", "pred", "[", "\"confidence\"", "]", "\n", "cur_score", "=", "np", ".", "append", "(", "cur_score", ",", "confidence", ")", "\n", "\n", "# append to overall results", "\n", "", "", "", "y_true", "=", "np", ".", "append", "(", "y_true", ",", "cur_true", ")", "\n", "y_score", "=", "np", ".", "append", "(", "y_score", ",", "cur_score", ")", "\n", "\n", "# compute average precision", "\n", "", "if", "has_gt", "and", "has_pred", ":", "\n", "# compute precision recall curve first", "\n", "\n", "# sorting and cumsum", "\n", "                        ", "score_arg_sort", "=", "np", ".", "argsort", "(", "y_score", ")", "\n", "y_score_sorted", "=", "y_score", "[", "score_arg_sort", "]", "\n", "y_true_sorted", "=", "y_true", "[", "score_arg_sort", "]", "\n", "y_true_sorted_cumsum", "=", "np", ".", "cumsum", "(", "y_true_sorted", ")", "\n", "\n", "# unique thresholds", "\n", "(", "thresholds", ",", "unique_indices", ")", "=", "np", ".", "unique", "(", "y_score_sorted", ",", "return_index", "=", "True", ")", "\n", "num_prec_recall", "=", "len", "(", "unique_indices", ")", "+", "1", "\n", "\n", "# prepare precision recall", "\n", "num_examples", "=", "len", "(", "y_score_sorted", ")", "\n", "try", ":", "\n", "                            ", "num_true_examples", "=", "y_true_sorted_cumsum", "[", "-", "1", "]", "\n", "", "except", ":", "\n", "                            ", "num_true_examples", "=", "0", "\n", "\n", "", "precision", "=", "np", ".", "zeros", "(", "num_prec_recall", ")", "\n", "recall", "=", "np", ".", "zeros", "(", "num_prec_recall", ")", "\n", "\n", "# deal with the first point", "\n", "y_true_sorted_cumsum", "=", "np", ".", "append", "(", "y_true_sorted_cumsum", ",", "0", ")", "\n", "# deal with remaining", "\n", "for", "idx_res", ",", "idx_scores", "in", "enumerate", "(", "unique_indices", ")", ":", "\n", "                            ", "cumsum", "=", "y_true_sorted_cumsum", "[", "idx_scores", "-", "1", "]", "\n", "tp", "=", "num_true_examples", "-", "cumsum", "\n", "fp", "=", "num_examples", "-", "idx_scores", "-", "tp", "\n", "fn", "=", "cumsum", "+", "hard_false_negatives", "\n", "p", "=", "float", "(", "tp", ")", "/", "(", "tp", "+", "fp", ")", "\n", "r", "=", "float", "(", "tp", ")", "/", "(", "tp", "+", "fn", ")", "\n", "precision", "[", "idx_res", "]", "=", "p", "\n", "recall", "[", "idx_res", "]", "=", "r", "\n", "\n", "# first point in curve is artificial", "\n", "", "precision", "[", "-", "1", "]", "=", "1.", "\n", "recall", "[", "-", "1", "]", "=", "0.", "\n", "\n", "# compute average of precision-recall curve", "\n", "recall_for_conv", "=", "np", ".", "copy", "(", "recall", ")", "\n", "recall_for_conv", "=", "np", ".", "append", "(", "recall_for_conv", "[", "0", "]", ",", "recall_for_conv", ")", "\n", "recall_for_conv", "=", "np", ".", "append", "(", "recall_for_conv", ",", "0.", ")", "\n", "\n", "stepWidths", "=", "np", ".", "convolve", "(", "recall_for_conv", ",", "[", "-", "0.5", ",", "0", ",", "0.5", "]", ",", "'valid'", ")", "\n", "# integrate is now simply a dot product", "\n", "ap_current", "=", "np", ".", "dot", "(", "precision", ",", "stepWidths", ")", "\n", "\n", "", "elif", "has_gt", ":", "\n", "                        ", "ap_current", "=", "0.0", "\n", "", "else", ":", "\n", "                        ", "ap_current", "=", "float", "(", "'nan'", ")", "\n", "", "ap", "[", "di", ",", "li", ",", "oi", "]", "=", "ap_current", "\n", "", "", "", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.compute_averages": [[234, 252], ["numpy.where", "numpy.where", "numpy.where", "numpy.nanmean", "numpy.nanmean", "numpy.nanmean", "enumerate", "numpy.isclose", "numpy.isclose", "numpy.logical_not", "numpy.average", "numpy.average", "numpy.average", "numpy.isclose"], "methods", ["None"], ["", "def", "compute_averages", "(", "self", ",", "aps", ")", ":", "\n", "        ", "d_inf", "=", "0", "\n", "o50", "=", "np", ".", "where", "(", "np", ".", "isclose", "(", "self", ".", "overlaps", ",", "0.5", ")", ")", "\n", "o25", "=", "np", ".", "where", "(", "np", ".", "isclose", "(", "self", ".", "overlaps", ",", "0.25", ")", ")", "\n", "oAllBut25", "=", "np", ".", "where", "(", "np", ".", "logical_not", "(", "np", ".", "isclose", "(", "self", ".", "overlaps", ",", "0.25", ")", ")", ")", "\n", "avg_dict", "=", "{", "}", "\n", "#avg_dict['all_ap']     = np.nanmean(aps[ d_inf,:,:  ])", "\n", "avg_dict", "[", "'all_ap'", "]", "=", "np", ".", "nanmean", "(", "aps", "[", "d_inf", ",", ":", ",", "oAllBut25", "]", ")", "\n", "avg_dict", "[", "'all_ap_50%'", "]", "=", "np", ".", "nanmean", "(", "aps", "[", "d_inf", ",", ":", ",", "o50", "]", ")", "\n", "avg_dict", "[", "'all_ap_25%'", "]", "=", "np", ".", "nanmean", "(", "aps", "[", "d_inf", ",", ":", ",", "o25", "]", ")", "\n", "avg_dict", "[", "\"classes\"", "]", "=", "{", "}", "\n", "for", "(", "li", ",", "label_name", ")", "in", "enumerate", "(", "self", ".", "CLASS_LABELS", ")", ":", "\n", "            ", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "=", "{", "}", "\n", "#avg_dict[\"classes\"][label_name][\"ap\"]       = np.average(aps[ d_inf,li,  :])", "\n", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap\"", "]", "=", "np", ".", "average", "(", "aps", "[", "d_inf", ",", "li", ",", "oAllBut25", "]", ")", "\n", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap50%\"", "]", "=", "np", ".", "average", "(", "aps", "[", "d_inf", ",", "li", ",", "o50", "]", ")", "\n", "avg_dict", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap25%\"", "]", "=", "np", ".", "average", "(", "aps", "[", "d_inf", ",", "li", ",", "o25", "]", ")", "\n", "", "return", "avg_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.assign_instances_for_scan": [[253, 309], ["util_3d.get_instances", "copy.deepcopy", "numpy.logical_not", "numpy.in1d", "int", "numpy.count_nonzero", "numpy.count_nonzero", "enumerate", "pred2gt[].append", "str", "numpy.logical_and", "numpy.count_nonzero", "str", "numpy.logical_and", "gt_inst.copy", "pred_instance.copy", "matched_gt.append", "[].append"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.get_instances"], ["", "def", "assign_instances_for_scan", "(", "self", ",", "scene_id", ")", ":", "\n", "# get gt instances", "\n", "        ", "gt_ids", "=", "self", ".", "gt_instances", "[", "scene_id", "]", "\n", "gt_instances", "=", "util_3d", ".", "get_instances", "(", "gt_ids", ",", "self", ".", "VALID_CLASS_IDS", ",", "self", ".", "CLASS_LABELS", ",", "self", ".", "ID_TO_LABEL", ")", "\n", "# associate", "\n", "gt2pred", "=", "deepcopy", "(", "gt_instances", ")", "\n", "for", "label", "in", "gt2pred", ":", "\n", "            ", "for", "gt", "in", "gt2pred", "[", "label", "]", ":", "\n", "                ", "gt", "[", "'matched_pred'", "]", "=", "[", "]", "\n", "\n", "", "", "pred2gt", "=", "{", "}", "\n", "for", "label", "in", "self", ".", "CLASS_LABELS", ":", "\n", "            ", "pred2gt", "[", "label", "]", "=", "[", "]", "\n", "", "num_pred_instances", "=", "0", "\n", "# mask of void labels in the groundtruth", "\n", "bool_void", "=", "np", ".", "logical_not", "(", "np", ".", "in1d", "(", "gt_ids", "//", "1000", ",", "self", ".", "VALID_CLASS_IDS", ")", ")", "\n", "\n", "# go thru all prediction masks", "\n", "for", "instance_id", "in", "self", ".", "pred_instances", "[", "scene_id", "]", ":", "\n", "            ", "label_id", "=", "int", "(", "self", ".", "pred_instances", "[", "scene_id", "]", "[", "instance_id", "]", "[", "'label_id'", "]", ")", "\n", "conf", "=", "self", ".", "pred_instances", "[", "scene_id", "]", "[", "instance_id", "]", "[", "'conf'", "]", "\n", "if", "not", "label_id", "in", "self", ".", "ID_TO_LABEL", ":", "\n", "                ", "continue", "\n", "", "label_name", "=", "self", ".", "ID_TO_LABEL", "[", "label_id", "]", "\n", "# read the mask", "\n", "pred_mask", "=", "self", ".", "pred_instances", "[", "scene_id", "]", "[", "instance_id", "]", "[", "'pred_mask'", "]", "\n", "# convert to binary", "\n", "num", "=", "np", ".", "count_nonzero", "(", "pred_mask", ")", "\n", "if", "num", "<", "self", ".", "min_region_sizes", "[", "0", "]", ":", "\n", "                ", "continue", "# skip if empty", "\n", "\n", "", "pred_instance", "=", "{", "}", "\n", "pred_instance", "[", "'filename'", "]", "=", "str", "(", "scene_id", ")", "+", "'/'", "+", "str", "(", "instance_id", ")", "\n", "pred_instance", "[", "'pred_id'", "]", "=", "num_pred_instances", "\n", "pred_instance", "[", "'label_id'", "]", "=", "label_id", "\n", "pred_instance", "[", "'vert_count'", "]", "=", "num", "\n", "pred_instance", "[", "'confidence'", "]", "=", "conf", "\n", "pred_instance", "[", "'void_intersection'", "]", "=", "np", ".", "count_nonzero", "(", "np", ".", "logical_and", "(", "bool_void", ",", "pred_mask", ")", ")", "\n", "\n", "# matched gt instances", "\n", "matched_gt", "=", "[", "]", "\n", "# go thru all gt instances with matching label", "\n", "for", "(", "gt_num", ",", "gt_inst", ")", "in", "enumerate", "(", "gt2pred", "[", "label_name", "]", ")", ":", "\n", "                ", "intersection", "=", "np", ".", "count_nonzero", "(", "np", ".", "logical_and", "(", "gt_ids", "==", "gt_inst", "[", "'instance_id'", "]", ",", "pred_mask", ")", ")", "\n", "if", "intersection", ">", "0", ":", "\n", "                    ", "gt_copy", "=", "gt_inst", ".", "copy", "(", ")", "\n", "pred_copy", "=", "pred_instance", ".", "copy", "(", ")", "\n", "gt_copy", "[", "'intersection'", "]", "=", "intersection", "\n", "pred_copy", "[", "'intersection'", "]", "=", "intersection", "\n", "matched_gt", ".", "append", "(", "gt_copy", ")", "\n", "gt2pred", "[", "label_name", "]", "[", "gt_num", "]", "[", "'matched_pred'", "]", ".", "append", "(", "pred_copy", ")", "\n", "", "", "pred_instance", "[", "'matched_gt'", "]", "=", "matched_gt", "\n", "num_pred_instances", "+=", "1", "\n", "pred2gt", "[", "label_name", "]", ".", "append", "(", "pred_instance", ")", "\n", "\n", "", "return", "gt2pred", ",", "pred2gt", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.print_results": [[310, 346], ["logging.info", "logging.info", "logging.info", "logging.info", "enumerate", "logging.info", "logging.info", "logging.info", "logging.info"], "methods", ["None"], ["", "def", "print_results", "(", "self", ",", "avgs", ")", ":", "\n", "        ", "sep", "=", "\"\"", "\n", "col1", "=", "\":\"", "\n", "lineLen", "=", "64", "\n", "\n", "logging", ".", "info", "(", "\"\"", ")", "\n", "logging", ".", "info", "(", "\"#\"", "*", "lineLen", ")", "\n", "line", "=", "\"\"", "\n", "line", "+=", "\"{:<15}\"", ".", "format", "(", "\"what\"", ")", "+", "sep", "+", "col1", "\n", "line", "+=", "\"{:>15}\"", ".", "format", "(", "\"AP\"", ")", "+", "sep", "\n", "line", "+=", "\"{:>15}\"", ".", "format", "(", "\"AP_50%\"", ")", "+", "sep", "\n", "line", "+=", "\"{:>15}\"", ".", "format", "(", "\"AP_25%\"", ")", "+", "sep", "\n", "logging", ".", "info", "(", "line", ")", "\n", "logging", ".", "info", "(", "\"#\"", "*", "lineLen", ")", "\n", "\n", "for", "(", "li", ",", "label_name", ")", "in", "enumerate", "(", "self", ".", "CLASS_LABELS", ")", ":", "\n", "            ", "ap_avg", "=", "avgs", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap\"", "]", "\n", "ap_50o", "=", "avgs", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap50%\"", "]", "\n", "ap_25o", "=", "avgs", "[", "\"classes\"", "]", "[", "label_name", "]", "[", "\"ap25%\"", "]", "\n", "line", "=", "\"{:<15}\"", ".", "format", "(", "label_name", ")", "+", "sep", "+", "col1", "\n", "line", "+=", "sep", "+", "\"{:>15.3f}\"", ".", "format", "(", "ap_avg", ")", "+", "sep", "\n", "line", "+=", "sep", "+", "\"{:>15.3f}\"", ".", "format", "(", "ap_50o", ")", "+", "sep", "\n", "line", "+=", "sep", "+", "\"{:>15.3f}\"", ".", "format", "(", "ap_25o", ")", "+", "sep", "\n", "logging", ".", "info", "(", "line", ")", "\n", "\n", "", "all_ap_avg", "=", "avgs", "[", "\"all_ap\"", "]", "\n", "all_ap_50o", "=", "avgs", "[", "\"all_ap_50%\"", "]", "\n", "all_ap_25o", "=", "avgs", "[", "\"all_ap_25%\"", "]", "\n", "\n", "logging", ".", "info", "(", "\"-\"", "*", "lineLen", ")", "\n", "line", "=", "\"{:<15}\"", ".", "format", "(", "\"average\"", ")", "+", "sep", "+", "col1", "\n", "line", "+=", "\"{:>15.3f}\"", ".", "format", "(", "all_ap_avg", ")", "+", "sep", "\n", "line", "+=", "\"{:>15.3f}\"", ".", "format", "(", "all_ap_50o", ")", "+", "sep", "\n", "line", "+=", "\"{:>15.3f}\"", ".", "format", "(", "all_ap_25o", ")", "+", "sep", "\n", "logging", ".", "info", "(", "line", ")", "\n", "logging", ".", "info", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.write_to_benchmark": [[347, 363], ["os.makedirs", "os.makedirs", "open", "open.close", "os.path.join", "os.path.join", "open.write", "util_3d.export_ids", "open.write", "os.path.join", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.export_ids", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "@", "staticmethod", "\n", "def", "write_to_benchmark", "(", "output_path", "=", "'benchmark_instance'", ",", "scene_id", "=", "None", ",", "pred_inst", "=", "{", "}", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "'predicted_masks'", ")", ",", "exist_ok", "=", "True", ")", "\n", "f", "=", "open", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "scene_id", "+", "'.txt'", ")", ",", "'w'", ")", "\n", "for", "instance_id", "in", "pred_inst", ":", "\n", "# for pred instance id starts from 0; in gt valid instance id starts from 1", "\n", "            ", "score", "=", "pred_inst", "[", "instance_id", "]", "[", "'conf'", "]", "\n", "label", "=", "pred_inst", "[", "instance_id", "]", "[", "'label_id'", "]", "\n", "mask", "=", "pred_inst", "[", "instance_id", "]", "[", "'pred_mask'", "]", "\n", "\n", "f", ".", "write", "(", "'predicted_masks/{}_{:03d}.txt {} {:.4f}'", ".", "format", "(", "scene_id", ",", "instance_id", ",", "label", ",", "score", ")", ")", "\n", "if", "instance_id", "<", "len", "(", "pred_inst", ")", "-", "1", ":", "\n", "                ", "f", ".", "write", "(", "'\\n'", ")", "\n", "", "util_3d", ".", "export_ids", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "'predicted_masks'", ",", "scene_id", "+", "'_%03d.txt'", "%", "(", "instance_id", ")", ")", ",", "mask", ")", "\n", "", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.add_prediction": [[365, 367], ["None"], "methods", ["None"], ["", "def", "add_prediction", "(", "self", ",", "instance_info", ",", "id", ")", ":", "\n", "        ", "self", ".", "pred_instances", "[", "id", "]", "=", "instance_info", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.add_gt": [[368, 370], ["None"], "methods", ["None"], ["", "def", "add_gt", "(", "self", ",", "instance_info", ",", "id", ")", ":", "\n", "        ", "self", ".", "gt_instances", "[", "id", "]", "=", "instance_info", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.evaluate": [[371, 389], ["print", "enumerate", "print", "evaluate_semantic_instance.Evaluator.evaluate_matches", "evaluate_semantic_instance.Evaluator.compute_averages", "evaluate_semantic_instance.Evaluator.print_results", "len", "evaluate_semantic_instance.Evaluator.assign_instances_for_scan", "sys.stdout.write", "sys.stdout.flush"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.evaluate_matches", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.compute_averages", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.print_results", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.Evaluator.assign_instances_for_scan", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["# see scannet repo for generating gt data for val in benchmark format", "\n", "", "def", "add_gt_in_benchmark_format", "(", "self", ",", "scene_id", ")", ":", "\n", "        ", "gt_file_path", "=", "'/rhome/jhou/data/dataset/scannet/scannet_benchmark/gt_instance/'", "\n", "gt_file", "=", "os", ".", "path", ".", "join", "(", "gt_file_path", ",", "scene_id", "+", "'.txt'", ")", "\n", "gt_ids", "=", "util_3d", ".", "load_ids", "(", "gt_file", ")", "\n", "self", ".", "add_gt", "(", "gt_ids", ",", "scene_id", ")", "\n", "\n", "", "def", "evaluate", "(", "self", ")", ":", "\n", "        ", "print", "(", "'evaluating'", ",", "len", "(", "self", ".", "pred_instances", ")", ",", "'scans...'", ")", "\n", "matches", "=", "{", "}", "\n", "for", "i", ",", "scene_id", "in", "enumerate", "(", "self", ".", "pred_instances", ")", ":", "\n", "            ", "gt2pred", ",", "pred2gt", "=", "self", ".", "assign_instances_for_scan", "(", "scene_id", ")", "\n", "matches", "[", "scene_id", "]", "=", "{", "}", "\n", "matches", "[", "scene_id", "]", "[", "'gt'", "]", "=", "gt2pred", "\n", "matches", "[", "scene_id", "]", "[", "'pred'", "]", "=", "pred2gt", "\n", "sys", ".", "stdout", ".", "write", "(", "\"\\rscans processed: {}\"", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "", "print", "(", "''", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.setup_logging": [[43, 50], ["logging.StreamHandler", "logging.getLogger().setLevel", "logging.basicConfig", "logging.getLogger", "[].split", "os.uname"], "function", ["None"], ["def", "setup_logging", "(", ")", ":", "\n", "    ", "ch", "=", "logging", ".", "StreamHandler", "(", "sys", ".", "stdout", ")", "\n", "logging", ".", "getLogger", "(", ")", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "logging", ".", "basicConfig", "(", "\n", "format", "=", "os", ".", "uname", "(", ")", "[", "1", "]", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "' %(asctime)s %(message)s'", ",", "\n", "datefmt", "=", "'%m/%d %H:%M:%S'", ",", "\n", "handlers", "=", "[", "ch", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.write_result_file": [[390, 401], ["open", "f.write", "range", "len", "f.write", "_SPLITTER.join", "_SPLITTER.join", "str"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["ap_scores", "=", "self", ".", "evaluate_matches", "(", "matches", ")", "\n", "avgs", "=", "self", ".", "compute_averages", "(", "ap_scores", ")", "\n", "\n", "# print", "\n", "self", ".", "print_results", "(", "avgs", ")", "\n", "return", "avgs", "[", "'all_ap'", "]", ",", "avgs", "[", "'all_ap_50%'", "]", ",", "avgs", "[", "'all_ap_25%'", "]", "\n", "\n", "", "", "def", "write_result_file", "(", "avgs", ",", "filename", ")", ":", "\n", "    ", "_SPLITTER", "=", "','", "\n", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "_SPLITTER", ".", "join", "(", "[", "'class'", ",", "'class id'", ",", "'ap'", ",", "'ap50'", ",", "'ap25'", "]", ")", "+", "'\\n'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "VALID_CLASS_IDS", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_instance.config": [[402, 409], ["argparse.ArgumentParser", "argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.parse_args"], ["            ", "class_name", "=", "CLASS_LABELS", "[", "i", "]", "\n", "class_id", "=", "VALID_CLASS_IDS", "[", "i", "]", "\n", "ap", "=", "avgs", "[", "\"classes\"", "]", "[", "class_name", "]", "[", "\"ap\"", "]", "\n", "ap50", "=", "avgs", "[", "\"classes\"", "]", "[", "class_name", "]", "[", "\"ap50%\"", "]", "\n", "ap25", "=", "avgs", "[", "\"classes\"", "]", "[", "class_name", "]", "[", "\"ap25%\"", "]", "\n", "f", ".", "write", "(", "_SPLITTER", ".", "join", "(", "[", "str", "(", "x", ")", "for", "x", "in", "[", "class_name", ",", "class_id", ",", "ap", ",", "ap50", ",", "ap25", "]", "]", ")", "+", "'\\n'", ")", "\n", "\n", "", "", "", "def", "config", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.__init__": [[95, 101], ["int", "int", "int", "util_3d.Instance.get_label_id", "util_3d.Instance.get_instance_verts"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.get_label_id", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.get_instance_verts"], ["def", "__init__", "(", "self", ",", "mesh_vert_instances", ",", "instance_id", ")", ":", "\n", "        ", "if", "(", "instance_id", "==", "-", "1", ")", ":", "\n", "            ", "return", "\n", "", "self", ".", "instance_id", "=", "int", "(", "instance_id", ")", "\n", "self", ".", "label_id", "=", "int", "(", "self", ".", "get_label_id", "(", "instance_id", ")", ")", "\n", "self", ".", "vert_count", "=", "int", "(", "self", ".", "get_instance_verts", "(", "mesh_vert_instances", ",", "instance_id", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.get_label_id": [[102, 104], ["int"], "methods", ["None"], ["", "def", "get_label_id", "(", "self", ",", "instance_id", ")", ":", "\n", "        ", "return", "int", "(", "instance_id", "//", "1000", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.get_instance_verts": [[105, 107], ["None"], "methods", ["None"], ["", "def", "get_instance_verts", "(", "self", ",", "mesh_vert_instances", ",", "instance_id", ")", ":", "\n", "        ", "return", "(", "mesh_vert_instances", "==", "instance_id", ")", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.to_json": [[108, 110], ["json.dumps"], "methods", ["None"], ["", "def", "to_json", "(", "self", ")", ":", "\n", "        ", "return", "json", ".", "dumps", "(", "self", ",", "default", "=", "lambda", "o", ":", "o", ".", "__dict__", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.to_dict": [[111, 119], ["None"], "methods", ["None"], ["", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "dict", "=", "{", "}", "\n", "dict", "[", "\"instance_id\"", "]", "=", "self", ".", "instance_id", "\n", "dict", "[", "\"label_id\"", "]", "=", "self", ".", "label_id", "\n", "dict", "[", "\"vert_count\"", "]", "=", "self", ".", "vert_count", "\n", "dict", "[", "\"med_dist\"", "]", "=", "self", ".", "med_dist", "\n", "dict", "[", "\"dist_conf\"", "]", "=", "self", ".", "dist_conf", "\n", "return", "dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.from_json": [[120, 127], ["int", "int", "int", "float", "float"], "methods", ["None"], ["", "def", "from_json", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "instance_id", "=", "int", "(", "data", "[", "\"instance_id\"", "]", ")", "\n", "self", ".", "label_id", "=", "int", "(", "data", "[", "\"label_id\"", "]", ")", "\n", "self", ".", "vert_count", "=", "int", "(", "data", "[", "\"vert_count\"", "]", ")", "\n", "if", "(", "\"med_dist\"", "in", "data", ")", ":", "\n", "            ", "self", ".", "med_dist", "=", "float", "(", "data", "[", "\"med_dist\"", "]", ")", "\n", "self", ".", "dist_conf", "=", "float", "(", "data", "[", "\"dist_conf\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.__str__": [[128, 130], ["str"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"(\"", "+", "str", "(", "self", ".", "instance_id", ")", "+", "\")\"", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.transform_points": [[22, 30], ["np.concatenate", "np.matmul", "np.transpose", "np.transpose", "len", "np.ones"], "function", ["None"], ["def", "transform_points", "(", "matrix", ",", "points", ")", ":", "\n", "    ", "assert", "len", "(", "points", ".", "shape", ")", "==", "2", "and", "points", ".", "shape", "[", "1", "]", "==", "3", "\n", "num_points", "=", "points", ".", "shape", "[", "0", "]", "\n", "p", "=", "np", ".", "concatenate", "(", "[", "points", ",", "np", ".", "ones", "(", "(", "num_points", ",", "1", ")", ")", "]", ",", "axis", "=", "1", ")", "\n", "p", "=", "np", ".", "matmul", "(", "matrix", ",", "np", ".", "transpose", "(", "p", ")", ")", "\n", "p", "=", "np", ".", "transpose", "(", "p", ")", "\n", "p", "[", ":", ",", ":", "3", "]", "/=", "p", "[", ":", ",", "3", ",", "None", "]", "\n", "return", "p", "[", ":", ",", ":", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.export_ids": [[32, 36], ["open", "f.write"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "export_ids", "(", "filename", ",", "ids", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "id", "in", "ids", ":", "\n", "            ", "f", ".", "write", "(", "'%d\\n'", "%", "id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.load_ids": [[38, 42], ["open().read().splitlines", "np.array", "open().read", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "", "", "def", "load_ids", "(", "filename", ")", ":", "\n", "    ", "ids", "=", "open", "(", "filename", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "ids", "=", "np", ".", "array", "(", "ids", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.read_mesh_vertices": [[44, 54], ["os.path.isfile", "open", "PlyData.read", "np.zeros"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "def", "read_mesh_vertices", "(", "filename", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "plydata", "=", "PlyData", ".", "read", "(", "f", ")", "\n", "num_verts", "=", "plydata", "[", "'vertex'", "]", ".", "count", "\n", "vertices", "=", "np", ".", "zeros", "(", "shape", "=", "[", "num_verts", ",", "3", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vertices", "[", ":", ",", "0", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'x'", "]", "\n", "vertices", "[", ":", ",", "1", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'y'", "]", "\n", "vertices", "[", ":", ",", "2", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'z'", "]", "\n", "", "return", "vertices", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.export_instance_ids_for_eval": [[57, 83], ["os.path.join", "np.unique", "np.zeros", "os.path.splitext", "os.path.dirname", "os.path.isdir", "os.mkdir", "open", "enumerate", "os.path.basename", "np.where", "os.path.join", "f.write", "np.copy", "os.path.join", "util_3d.export_ids", "str", "str"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.export_ids"], ["", "def", "export_instance_ids_for_eval", "(", "filename", ",", "label_ids", ",", "instance_ids", ")", ":", "\n", "    ", "assert", "label_ids", ".", "shape", "[", "0", "]", "==", "instance_ids", ".", "shape", "[", "0", "]", "\n", "output_mask_path_relative", "=", "'predicted_masks'", "\n", "name", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "filename", ")", ")", "[", "0", "]", "\n", "output_mask_path", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ",", "output_mask_path_relative", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "output_mask_path", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "output_mask_path", ")", "\n", "", "insts", "=", "np", ".", "unique", "(", "instance_ids", ")", "\n", "zero_mask", "=", "np", ".", "zeros", "(", "shape", "=", "(", "instance_ids", ".", "shape", "[", "0", "]", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "idx", ",", "inst_id", "in", "enumerate", "(", "insts", ")", ":", "\n", "            ", "if", "inst_id", "==", "0", ":", "# 0 -> no instance for this vertex", "\n", "                ", "continue", "\n", "\n", "", "loc", "=", "np", ".", "where", "(", "instance_ids", "==", "inst_id", ")", "\n", "label_id", "=", "label_ids", "[", "loc", "[", "0", "]", "[", "0", "]", "]", "\n", "\n", "# write mask indexing", "\n", "output_mask_file_relavtive", "=", "os", ".", "path", ".", "join", "(", "output_mask_path_relative", ",", "name", "+", "'_'", "+", "str", "(", "idx", ")", "+", "'.txt'", ")", "\n", "f", ".", "write", "(", "'%s %d %f\\n'", "%", "(", "output_mask_file_relavtive", ",", "label_id", ",", "1.0", ")", ")", "\n", "\n", "# write mask", "\n", "mask", "=", "np", ".", "copy", "(", "zero_mask", ")", "\n", "mask", "[", "loc", "[", "0", "]", "]", "=", "1", "\n", "output_mask_file", "=", "os", ".", "path", ".", "join", "(", "output_mask_path", ",", "name", "+", "'_'", "+", "str", "(", "idx", ")", "+", "'.txt'", ")", "\n", "export_ids", "(", "output_mask_file", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.read_instance_prediction_file": [[131, 152], ["open().read().splitlines", "os.path.abspath", "line.split", "os.path.isabs", "os.path.join", "os.path.abspath", "int", "float", "open().read", "len", "util.print_error", "util.print_error", "os.path.dirname", "os.path.commonprefix", "util.print_error", "float", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error"], ["", "", "def", "read_instance_prediction_file", "(", "filename", ",", "pred_path", ")", ":", "\n", "    ", "lines", "=", "open", "(", "filename", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "instance_info", "=", "{", "}", "\n", "abs_pred_path", "=", "os", ".", "path", ".", "abspath", "(", "pred_path", ")", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "parts", "=", "line", ".", "split", "(", "' '", ")", "\n", "if", "len", "(", "parts", ")", "!=", "3", ":", "\n", "            ", "util", ".", "print_error", "(", "'invalid instance prediction file. Expected (per line): [rel path prediction] [label id prediction] [confidence prediction]'", ")", "\n", "", "if", "os", ".", "path", ".", "isabs", "(", "parts", "[", "0", "]", ")", ":", "\n", "            ", "util", ".", "print_error", "(", "'invalid instance prediction file. First entry in line must be a relative path'", ")", "\n", "", "mask_file", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ",", "parts", "[", "0", "]", ")", "\n", "mask_file", "=", "os", ".", "path", ".", "abspath", "(", "mask_file", ")", "\n", "# check that mask_file lives inside prediction path", "\n", "if", "os", ".", "path", ".", "commonprefix", "(", "[", "mask_file", ",", "abs_pred_path", "]", ")", "!=", "abs_pred_path", ":", "\n", "            ", "util", ".", "print_error", "(", "'predicted mask {} in prediction text file {} points outside of prediction path.'", ".", "format", "(", "mask_file", ",", "filename", ")", ")", "\n", "\n", "", "info", "=", "{", "}", "\n", "info", "[", "\"label_id\"", "]", "=", "int", "(", "float", "(", "parts", "[", "1", "]", ")", ")", "\n", "info", "[", "\"conf\"", "]", "=", "float", "(", "parts", "[", "2", "]", ")", "\n", "instance_info", "[", "mask_file", "]", "=", "info", "\n", "", "return", "instance_info", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.get_instances": [[154, 166], ["np.unique", "util_3d.Instance", "instances[].append", "util_3d.Instance.to_dict"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.Instance.to_dict"], ["", "def", "get_instances", "(", "ids", ",", "class_ids", ",", "class_labels", ",", "id2label", ")", ":", "\n", "    ", "instances", "=", "{", "}", "\n", "for", "label", "in", "class_labels", ":", "\n", "        ", "instances", "[", "label", "]", "=", "[", "]", "\n", "", "instance_ids", "=", "np", ".", "unique", "(", "ids", ")", "\n", "for", "id", "in", "instance_ids", ":", "\n", "        ", "if", "id", "==", "0", ":", "\n", "            ", "continue", "\n", "", "inst", "=", "Instance", "(", "ids", ",", "id", ")", "\n", "if", "inst", ".", "label_id", "in", "class_ids", ":", "\n", "            ", "instances", "[", "id2label", "[", "inst", ".", "label_id", "]", "]", ".", "append", "(", "inst", ".", "to_dict", "(", ")", ")", "\n", "", "", "return", "instances", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.__init__": [[36, 45], ["np.zeros", "np.max"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "CLASS_LABELS", ",", "VALID_CLASS_IDS", ")", ":", "\n", "#CLASS_LABELS = ['wall', 'floor', 'cabinet', 'bed', 'chair', 'sofa', 'table', ", "\n", "#                'door', 'window', 'bookshelf', 'picture', 'counter', 'desk', ", "\n", "#                'curtain', 'refrigerator', 'shower curtain', 'toilet', 'sink', 'bathtub', 'otherfurniture']", "\n", "#VALID_CLASS_IDS = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 24, 28, 33, 34, 36, 39])", "\n", "        ", "self", ".", "CLASS_LABELS", "=", "CLASS_LABELS", "\n", "self", ".", "VALID_CLASS_IDS", "=", "VALID_CLASS_IDS", "\n", "self", ".", "UNKNOWN_ID", "=", "np", ".", "max", "(", "VALID_CLASS_IDS", ")", "+", "1", "\n", "self", ".", "gt", "=", "{", "}", "\n", "self", ".", "pred", "=", "{", "}", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.update_confusion": [[46, 58], ["np.bincount().reshape", "util.print_error", "np.bincount", "gt_ids[].astype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error"], ["\n", "max_id", "=", "self", ".", "UNKNOWN_ID", "\n", "self", ".", "confusion", "=", "np", ".", "zeros", "(", "(", "max_id", "+", "1", ",", "max_id", "+", "1", ")", ",", "dtype", "=", "np", ".", "ulonglong", ")", "\n", "\n", "", "def", "update_confusion", "(", "self", ",", "pred_ids", ",", "gt_ids", ",", "sceneId", "=", "None", ")", ":", "\n", "# sanity checks", "\n", "        ", "if", "not", "pred_ids", ".", "shape", "==", "gt_ids", ".", "shape", ":", "\n", "            ", "util", ".", "print_error", "(", "'%s: number of predicted values does not match number of vertices'", "%", "pred_file", ",", "user_fault", "=", "True", ")", "\n", "\n", "", "n", "=", "self", ".", "confusion", ".", "shape", "[", "0", "]", "\n", "k", "=", "(", "gt_ids", ">=", "0", ")", "&", "(", "gt_ids", "<", "n", ")", "\n", "temporal", "=", "np", ".", "bincount", "(", "n", "*", "gt_ids", "[", "k", "]", ".", "astype", "(", "int", ")", "+", "pred_ids", "[", "k", "]", ",", "minlength", "=", "n", "**", "2", ")", ".", "reshape", "(", "n", ",", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.write_to_benchmark": [[59, 63], ["os.makedirs", "util_3d.export_ids", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.export_ids"], ["for", "valid_class_row", "in", "self", ".", "VALID_CLASS_IDS", ":", "\n", "            ", "for", "valid_class_col", "in", "self", ".", "VALID_CLASS_IDS", ":", "\n", "                ", "self", ".", "confusion", "[", "valid_class_row", "]", "[", "valid_class_col", "]", "+=", "temporal", "[", "valid_class_row", "]", "[", "valid_class_col", "]", "\n", "\n", "", "", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.get_iou": [[64, 79], ["np.longlong", "np.longlong", "float", "np.longlong", "confusion[].sum", "float", "confusion[].sum", "float"], "methods", ["None"], ["def", "write_to_benchmark", "(", "base", "=", "'benchmark_segmentation'", ",", "sceneId", "=", "None", ",", "pred_ids", "=", "None", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "base", ",", "exist_ok", "=", "True", ")", "\n", "util_3d", ".", "export_ids", "(", "'{}.txt'", ".", "format", "(", "os", ".", "path", ".", "join", "(", "base", ",", "sceneId", ")", ")", ",", "pred_ids", ")", "\n", "\n", "", "def", "get_iou", "(", "self", ",", "label_id", ",", "confusion", ")", ":", "\n", "        ", "if", "not", "label_id", "in", "self", ".", "VALID_CLASS_IDS", ":", "\n", "            ", "return", "float", "(", "'nan'", ")", "\n", "# #true positives", "\n", "", "tp", "=", "np", ".", "longlong", "(", "confusion", "[", "label_id", ",", "label_id", "]", ")", "\n", "# #false negatives", "\n", "fn", "=", "np", ".", "longlong", "(", "confusion", "[", "label_id", ",", ":", "]", ".", "sum", "(", ")", ")", "-", "tp", "\n", "# #false positives", "\n", "not_ignored", "=", "[", "l", "for", "l", "in", "self", ".", "VALID_CLASS_IDS", "if", "not", "l", "==", "label_id", "]", "\n", "fp", "=", "np", ".", "longlong", "(", "confusion", "[", "not_ignored", ",", "label_id", "]", ".", "sum", "(", ")", ")", "\n", "\n", "denom", "=", "(", "tp", "+", "fp", "+", "fn", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.write_result_file": [[80, 102], ["print", "open", "f.write", "range", "f.write", "f.write", "f.write", "range", "f.write", "range", "len", "f.write", "len", "f.write", "len", "f.write", "range", "f.write", "np.array().mean", "len", "f.write", "np.array"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["if", "denom", "==", "0", ":", "\n", "            ", "return", "float", "(", "'nan'", ")", "\n", "", "return", "(", "float", "(", "tp", ")", "/", "denom", ",", "tp", ",", "denom", ")", "\n", "\n", "", "def", "write_result_file", "(", "self", ",", "confusion", ",", "ious", ",", "filename", ")", ":", "\n", "        ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "'iou scores\\n'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "                ", "label_id", "=", "self", ".", "VALID_CLASS_IDS", "[", "i", "]", "\n", "label_name", "=", "self", ".", "CLASS_LABELS", "[", "i", "]", "\n", "iou", "=", "ious", "[", "label_name", "]", "[", "0", "]", "\n", "f", ".", "write", "(", "'{0:<14s}({1:<2d}): {2:>5.3f}\\n'", ".", "format", "(", "label_name", ",", "label_id", ",", "iou", ")", ")", "\n", "", "f", ".", "write", "(", "\"{0:<14s}: {1:>5.3f}\"", ".", "format", "(", "'mean'", ",", "np", ".", "array", "(", "[", "ious", "[", "k", "]", "[", "0", "]", "for", "k", "in", "ious", "]", ")", ".", "mean", "(", ")", ")", ")", "\n", "\n", "f", ".", "write", "(", "'\\nconfusion matrix\\n'", ")", "\n", "f", ".", "write", "(", "'\\t\\t\\t'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "#f.write('\\t{0:<14s}({1:<2d})'.format(CLASS_LABELS[i], VALID_CLASS_IDS[i]))", "\n", "                ", "f", ".", "write", "(", "'{0:<8d}'", ".", "format", "(", "self", ".", "VALID_CLASS_IDS", "[", "i", "]", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "for", "r", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "                ", "f", ".", "write", "(", "'{0:<14s}({1:<2d})'", ".", "format", "(", "self", ".", "CLASS_LABELS", "[", "r", "]", ",", "self", ".", "VALID_CLASS_IDS", "[", "r", "]", ")", ")", "\n", "for", "c", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.evaluate_confusion": [[103, 130], ["range", "logging.info", "logging.info", "range", "logging.info", "len", "evaluate_semantic_label.Evaluator.get_iou", "len", "evaluate_semantic_label.Evaluator.write_result_file", "logging.info", "logging.info"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.get_iou", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.write_result_file"], ["                    ", "f", ".", "write", "(", "'\\t{0:>5.3f}'", ".", "format", "(", "confusion", "[", "self", ".", "VALID_CLASS_IDS", "[", "r", "]", ",", "self", ".", "VALID_CLASS_IDS", "[", "c", "]", "]", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "", "", "print", "(", "'wrote results to'", ",", "filename", ")", "\n", "\n", "", "def", "evaluate_confusion", "(", "self", ",", "output_file", "=", "None", ")", ":", "\n", "        ", "class_ious", "=", "{", "}", "\n", "counter", "=", "0", "\n", "summation", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "            ", "label_name", "=", "self", ".", "CLASS_LABELS", "[", "i", "]", "\n", "label_id", "=", "self", ".", "VALID_CLASS_IDS", "[", "i", "]", "\n", "class_ious", "[", "label_name", "]", "=", "self", ".", "get_iou", "(", "label_id", ",", "self", ".", "confusion", ")", "\n", "# print", "\n", "", "logging", ".", "info", "(", "'classes          IoU'", ")", "\n", "logging", ".", "info", "(", "'----------------------------'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "VALID_CLASS_IDS", ")", ")", ":", "\n", "            ", "label_name", "=", "self", ".", "CLASS_LABELS", "[", "i", "]", "\n", "try", ":", "\n", "                ", "logging", ".", "info", "(", "'{0:<14s}: {1:>5.3f}   ({2:>6d}/{3:<6d})'", ".", "format", "(", "label_name", ",", "class_ious", "[", "label_name", "]", "[", "0", "]", ",", "class_ious", "[", "label_name", "]", "[", "1", "]", ",", "class_ious", "[", "label_name", "]", "[", "2", "]", ")", ")", "\n", "summation", "+=", "class_ious", "[", "label_name", "]", "[", "0", "]", "\n", "counter", "+=", "1", "\n", "", "except", ":", "\n", "                ", "logging", ".", "info", "(", "'{0:<14s}: nan     (   nan/nan   )'", ".", "format", "(", "label_name", ")", ")", "\n", "\n", "", "", "logging", ".", "info", "(", "\"{0:<14s}: {1:>5.3f}\"", ".", "format", "(", "'mean'", ",", "summation", "/", "counter", ")", ")", "\n", "\n", "if", "output_file", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.config": [[131, 138], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.parse_args"], ["            ", "self", ".", "write_result_file", "(", "self", ".", "confusion", ",", "class_ious", ",", "output_file", ")", "\n", "\n", "", "return", "summation", "/", "counter", "\n", "\n", "", "", "def", "config", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--pred_path'", ",", "required", "=", "True", ",", "help", "=", "'path to directory of predicted .txt files'", ")", "\n", "parser", ".", "add_argument", "(", "'--gt_path'", ",", "required", "=", "True", ",", "help", "=", "'path to gt files'", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.main": [[139, 176], ["evaluate_semantic_label.config", "logging.StreamHandler", "logging.getLogger().setLevel", "logging.basicConfig", "np.array", "evaluate_semantic_label.Evaluator", "print", "enumerate", "evaluate_semantic_label.Evaluator.evaluate_confusion", "os.listdir", "os.path.join", "util_3d.load_ids", "os.path.join", "util_3d.load_ids", "evaluate_semantic_label.Evaluator.update_confusion", "sys.stdout.write", "sys.stdout.flush", "logging.getLogger", "len", "os.path.isfile", "util.print_error", "os.listdir", "os.path.join.split", "[].split", "os.uname"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.config", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.evaluate_confusion", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.load_ids", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util_3d.load_ids", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.evaluate_semantic_label.Evaluator.update_confusion", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error"], ["parser", ".", "add_argument", "(", "'--output_file'", ",", "type", "=", "str", ",", "default", "=", "'./semantic_label_evaluation.txt'", ")", "\n", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "opt", "\n", "\n", "", "def", "main", "(", ")", ":", "\n", "    ", "opt", "=", "config", "(", ")", "\n", "\n", "#------------------------- ScanNet --------------------------", "\n", "CLASS_LABELS", "=", "[", "'wall'", ",", "'floor'", ",", "'cabinet'", ",", "'bed'", ",", "'chair'", ",", "'sofa'", ",", "'table'", ",", "\n", "'door'", ",", "'window'", ",", "'bookshelf'", ",", "'picture'", ",", "'counter'", ",", "'desk'", ",", "\n", "'curtain'", ",", "'refrigerator'", ",", "'shower curtain'", ",", "'toilet'", ",", "'sink'", ",", "'bathtub'", ",", "'otherfurniture'", "]", "\n", "VALID_CLASS_IDS", "=", "np", ".", "array", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "14", ",", "16", ",", "24", ",", "28", ",", "33", ",", "34", ",", "36", ",", "39", "]", ")", "\n", "evaluator", "=", "Evaluator", "(", "CLASS_LABELS", "=", "CLASS_LABELS", ",", "VALID_CLASS_IDS", "=", "VALID_CLASS_IDS", ")", "\n", "\n", "print", "(", "'reading'", ",", "len", "(", "os", ".", "listdir", "(", "opt", ".", "pred_path", ")", ")", "-", "1", ",", "'scans...'", ")", "\n", "for", "i", ",", "pred_file", "in", "enumerate", "(", "os", ".", "listdir", "(", "opt", ".", "pred_path", ")", ")", ":", "\n", "        ", "if", "pred_file", "==", "'semantic_label_evaluation.txt'", ":", "\n", "            ", "continue", "\n", "\n", "", "gt_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "gt_path", ",", "pred_file", ")", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "gt_file", ")", ":", "\n", "            ", "util", ".", "print_error", "(", "'Result file {} does not match any gt file'", ".", "format", "(", "pred_file", ")", ",", "user_fault", "=", "True", ")", "\n", "", "gt_ids", "=", "util_3d", ".", "load_ids", "(", "gt_file", ")", "\n", "\n", "pred_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "pred_path", ",", "pred_file", ")", "\n", "pred_ids", "=", "util_3d", ".", "load_ids", "(", "pred_file", ")", "\n", "\n", "evaluator", ".", "update_confusion", "(", "pred_ids", ",", "gt_ids", ",", "pred_file", ".", "split", "(", "'.'", ")", "[", "0", "]", ")", "\n", "sys", ".", "stdout", ".", "write", "(", "\"\\rscans processed: {}\"", ".", "format", "(", "i", "+", "1", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "# evaluate", "\n", "", "evaluator", ".", "evaluate_confusion", "(", "opt", ".", "output_file", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "main", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.print_error": [[16, 21], ["sys.stderr.write", "sys.exit", "sys.exit", "str"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "print_error", "(", "message", ",", "user_fault", "=", "False", ")", ":", "\n", "    ", "sys", ".", "stderr", ".", "write", "(", "'ERROR: '", "+", "str", "(", "message", ")", "+", "'\\n'", ")", "\n", "if", "user_fault", ":", "\n", "      ", "sys", ".", "exit", "(", "2", ")", "\n", "", "sys", ".", "exit", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.represents_int": [[24, 30], ["int"], "function", ["None"], ["", "def", "represents_int", "(", "s", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "int", "(", "s", ")", "\n", "return", "True", "\n", "", "except", "ValueError", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.read_label_mapping": [[32, 43], ["os.path.isfile", "dict", "util.represents_int", "open", "csv.DictReader", "int", "int", "dict.items", "dict.keys"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.represents_int"], ["", "", "def", "read_label_mapping", "(", "filename", ",", "label_from", "=", "'raw_category'", ",", "label_to", "=", "'nyu40id'", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "mapping", "=", "dict", "(", ")", "\n", "with", "open", "(", "filename", ")", "as", "csvfile", ":", "\n", "        ", "reader", "=", "csv", ".", "DictReader", "(", "csvfile", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "row", "in", "reader", ":", "\n", "            ", "mapping", "[", "row", "[", "label_from", "]", "]", "=", "int", "(", "row", "[", "label_to", "]", ")", "\n", "# if ints convert ", "\n", "", "", "if", "represents_int", "(", "[", "key", "for", "key", "in", "mapping", ".", "keys", "(", ")", "]", "[", "0", "]", ")", ":", "\n", "        ", "mapping", "=", "{", "int", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "mapping", ".", "items", "(", ")", "}", "\n", "", "return", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.read_scene_types_mapping": [[46, 56], ["os.path.isfile", "dict", "open().read().splitlines", "line.split", "open().read", "x[].strip", "int", "int", "open"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "def", "read_scene_types_mapping", "(", "filename", ",", "remove_spaces", "=", "True", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "mapping", "=", "dict", "(", ")", "\n", "lines", "=", "open", "(", "filename", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "lines", "=", "[", "line", ".", "split", "(", "'\\t'", ")", "for", "line", "in", "lines", "]", "\n", "if", "remove_spaces", ":", "\n", "        ", "mapping", "=", "{", "x", "[", "1", "]", ".", "strip", "(", ")", ":", "int", "(", "x", "[", "0", "]", ")", "for", "x", "in", "lines", "}", "\n", "", "else", ":", "\n", "        ", "mapping", "=", "{", "x", "[", "1", "]", ":", "int", "(", "x", "[", "0", "]", ")", "for", "x", "in", "lines", "}", "\n", "", "return", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.visualize_label_image": [[59, 67], ["np.zeros", "create_color_palette", "enumerate", "imageio.imwrite"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.create_color_palette"], ["", "def", "visualize_label_image", "(", "filename", ",", "image", ")", ":", "\n", "    ", "height", "=", "image", ".", "shape", "[", "0", "]", "\n", "width", "=", "image", ".", "shape", "[", "1", "]", "\n", "vis_image", "=", "np", ".", "zeros", "(", "[", "height", ",", "width", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "color_palette", "=", "create_color_palette", "(", ")", "\n", "for", "idx", ",", "color", "in", "enumerate", "(", "color_palette", ")", ":", "\n", "        ", "vis_image", "[", "image", "==", "idx", "]", "=", "color", "\n", "", "imageio", ".", "imwrite", "(", "filename", ",", "vis_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scripts.util.visualize_instance_image": [[70, 79], ["np.zeros", "create_color_palette", "np.unique", "enumerate", "imageio.imwrite", "len"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.create_color_palette"], ["", "def", "visualize_instance_image", "(", "filename", ",", "image", ")", ":", "\n", "    ", "height", "=", "image", ".", "shape", "[", "0", "]", "\n", "width", "=", "image", ".", "shape", "[", "1", "]", "\n", "vis_image", "=", "np", ".", "zeros", "(", "[", "height", ",", "width", ",", "3", "]", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "color_palette", "=", "create_color_palette", "(", ")", "\n", "instances", "=", "np", ".", "unique", "(", "image", ")", "\n", "for", "idx", ",", "inst", "in", "enumerate", "(", "instances", ")", ":", "\n", "        ", "vis_image", "[", "image", "==", "inst", "]", "=", "color_palette", "[", "inst", "%", "len", "(", "color_palette", ")", "]", "\n", "", "imageio", ".", "imwrite", "(", "filename", ",", "vis_image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resunet.MinkUNetBase.__init__": [[31, 33], ["models.resnet.ResNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["bn_momentum", "=", "config", ".", "bn_momentum", "\n", "\n", "def", "space_n_time_m", "(", "n", ",", "m", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resunet.MinkUNetBase.network_initialization": [[34, 175], ["models.modules.common.conv", "models.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.modules.common.conv", "models.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.modules.common.conv", "models.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.modules.common.conv", "models.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.modules.common.conv_tr", "models.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.modules.common.conv_tr", "models.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.modules.common.conv_tr", "models.resnet.get_norm", "MinkowskiEngine.MinkowskiReLU", "MinkowskiEngine.MinkowskiReLU", "torch.Sequential", "resunet.MinkUNetBase.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["      ", "return", "n", "if", "D", "==", "3", "else", "[", "n", ",", "n", ",", "n", ",", "m", "]", "\n", "\n", "", "if", "D", "==", "4", ":", "\n", "      ", "self", ".", "OUT_PIXEL_DIST", "=", "space_n_time_m", "(", "self", ".", "OUT_PIXEL_DIST", ",", "1", ")", "\n", "\n", "# Output of the first conv concated to conv6", "\n", "", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "self", ".", "conv1p1s1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "\n", "self", ".", "bn1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "0", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "dilation", "=", "dilations", "[", "0", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv2p1s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "dilation", "=", "dilations", "[", "1", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv3p2s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn3", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "dilation", "=", "dilations", "[", "2", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv4p4s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "dilation", "=", "dilations", "[", "3", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr4p8s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "4", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "4", "]", "+", "self", ".", "PLANES", "[", "2", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block5", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "self", ".", "LAYERS", "[", "4", "]", ",", "\n", "dilation", "=", "dilations", "[", "4", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr5p4s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr5", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "5", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "5", "]", "+", "self", ".", "PLANES", "[", "1", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block6", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "self", ".", "LAYERS", "[", "5", "]", ",", "\n", "dilation", "=", "dilations", "[", "5", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr6p2s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr6", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "6", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "relu", "=", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "\n", "self", ".", "PLANES", "[", "6", "]", "+", "self", ".", "PLANES", "[", "0", "]", "*", "self", ".", "BLOCK", ".", "expansion", ",", "\n", "512", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "D", "=", "D", ")", ",", "ME", ".", "MinkowskiBatchNorm", "(", "512", ")", ",", "ME", ".", "MinkowskiReLU", "(", ")", ",", "\n", "conv", "(", "512", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "out", "=", "self", ".", "conv1p1s1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b1p1", "=", "self", ".", "block1", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resunet.MinkUNetBase.forward": [[176, 222], ["resunet.MinkUNetBase.conv1p1s1", "resunet.MinkUNetBase.bn1", "resunet.MinkUNetBase.relu", "resunet.MinkUNetBase.block1", "resunet.MinkUNetBase.conv2p1s2", "resunet.MinkUNetBase.bn2", "resunet.MinkUNetBase.relu", "resunet.MinkUNetBase.block2", "resunet.MinkUNetBase.conv3p2s2", "resunet.MinkUNetBase.bn3", "resunet.MinkUNetBase.relu", "resunet.MinkUNetBase.block3", "resunet.MinkUNetBase.conv4p4s2", "resunet.MinkUNetBase.bn4", "resunet.MinkUNetBase.relu", "resunet.MinkUNetBase.block4", "resunet.MinkUNetBase.convtr4p8s2", "resunet.MinkUNetBase.bntr4", "resunet.MinkUNetBase.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetBase.block5", "resunet.MinkUNetBase.convtr5p4s2", "resunet.MinkUNetBase.bntr5", "resunet.MinkUNetBase.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetBase.block6", "resunet.MinkUNetBase.convtr6p2s2", "resunet.MinkUNetBase.bntr6", "resunet.MinkUNetBase.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetBase.final"], "methods", ["None"], ["\n", "out", "=", "self", ".", "conv2p1s2", "(", "out_b1p1", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b2p2", "=", "self", ".", "block2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3p2s2", "(", "out_b2p2", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b3p4", "=", "self", ".", "block3", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv4p4s2", "(", "out_b3p4", ")", "\n", "out", "=", "self", ".", "bn4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "# pixel_dist=8", "\n", "out", "=", "self", ".", "block4", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr4p8s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b3p4", ")", "\n", "out", "=", "self", ".", "block5", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr5p4s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr5", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b2p2", ")", "\n", "out", "=", "self", ".", "block6", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr6p2s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr6", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b1p1", ")", "\n", "return", "self", ".", "final", "(", "out", ")", "\n", "\n", "\n", "", "", "class", "ResUNet14", "(", "MinkUNetBase", ")", ":", "\n", "  ", "BLOCK", "=", "BasicBlock", "\n", "LAYERS", "=", "(", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resunet.MinkUNetHyper.__init__": [[289, 291], ["resunet.MinkUNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["bn_momentum", "=", "config", ".", "bn_momentum", "\n", "\n", "def", "space_n_time_m", "(", "n", ",", "m", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resunet.MinkUNetHyper.network_initialization": [[292, 438], ["models.modules.common.conv", "models.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "models.modules.common.conv", "models.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "models.modules.common.conv", "models.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "models.modules.common.conv", "models.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "MinkowskiEngine.MinkowskiPoolingTranspose", "MinkowskiEngine.MinkowskiPoolingTranspose", "models.modules.common.conv_tr", "models.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "MinkowskiEngine.MinkowskiPoolingTranspose", "MinkowskiEngine.MinkowskiPoolingTranspose", "models.modules.common.conv_tr", "models.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "MinkowskiEngine.MinkowskiPoolingTranspose", "MinkowskiEngine.MinkowskiPoolingTranspose", "models.modules.common.conv_tr", "models.resnet.get_norm", "MinkowskiEngine.MinkowskiReLU", "MinkowskiEngine.MinkowskiReLU", "torch.Sequential", "resunet.MinkUNetHyper.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["      ", "return", "n", "if", "D", "==", "3", "else", "[", "n", ",", "n", ",", "n", ",", "m", "]", "\n", "\n", "", "if", "D", "==", "4", ":", "\n", "      ", "self", ".", "OUT_PIXEL_DIST", "=", "space_n_time_m", "(", "self", ".", "OUT_PIXEL_DIST", ",", "1", ")", "\n", "\n", "# Output of the first conv concated to conv6", "\n", "", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "self", ".", "conv1p1s1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "\n", "self", ".", "bn1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "0", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "dilation", "=", "dilations", "[", "0", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv2p1s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "dilation", "=", "dilations", "[", "1", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv3p2s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn3", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "dilation", "=", "dilations", "[", "2", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv4p4s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "dilation", "=", "dilations", "[", "3", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "pool_tr4", "=", "ME", ".", "MinkowskiPoolingTranspose", "(", "kernel_size", "=", "8", ",", "stride", "=", "8", ",", "dimension", "=", "D", ")", "\n", "out_pool4", "=", "self", ".", "inplanes", "\n", "self", ".", "convtr4p8s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "4", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "4", "]", "+", "self", ".", "PLANES", "[", "2", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block5", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "self", ".", "LAYERS", "[", "4", "]", ",", "\n", "dilation", "=", "dilations", "[", "4", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "pool_tr5", "=", "ME", ".", "MinkowskiPoolingTranspose", "(", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "dimension", "=", "D", ")", "\n", "out_pool5", "=", "self", ".", "inplanes", "\n", "self", ".", "convtr5p4s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr5", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "5", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "5", "]", "+", "self", ".", "PLANES", "[", "1", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block6", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "self", ".", "LAYERS", "[", "5", "]", ",", "\n", "dilation", "=", "dilations", "[", "5", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "pool_tr6", "=", "ME", ".", "MinkowskiPoolingTranspose", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "dimension", "=", "D", ")", "\n", "out_pool6", "=", "self", ".", "inplanes", "\n", "self", ".", "convtr6p2s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr6", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "6", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "relu", "=", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "\n", "out_pool5", "+", "out_pool6", "+", "self", ".", "PLANES", "[", "6", "]", "+", "self", ".", "PLANES", "[", "0", "]", "*", "self", ".", "BLOCK", ".", "expansion", ",", "\n", "512", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "D", "=", "D", ")", ",", "ME", ".", "MinkowskiBatchNorm", "(", "512", ")", ",", "ME", ".", "MinkowskiReLU", "(", ")", ",", "\n", "conv", "(", "512", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "out", "=", "self", ".", "conv1p1s1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b1p1", "=", "self", ".", "block1", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resunet.MinkUNetHyper.forward": [[439, 487], ["resunet.MinkUNetHyper.conv1p1s1", "resunet.MinkUNetHyper.bn1", "resunet.MinkUNetHyper.relu", "resunet.MinkUNetHyper.block1", "resunet.MinkUNetHyper.conv2p1s2", "resunet.MinkUNetHyper.bn2", "resunet.MinkUNetHyper.relu", "resunet.MinkUNetHyper.block2", "resunet.MinkUNetHyper.conv3p2s2", "resunet.MinkUNetHyper.bn3", "resunet.MinkUNetHyper.relu", "resunet.MinkUNetHyper.block3", "resunet.MinkUNetHyper.conv4p4s2", "resunet.MinkUNetHyper.bn4", "resunet.MinkUNetHyper.relu", "resunet.MinkUNetHyper.block4", "resunet.MinkUNetHyper.convtr4p8s2", "resunet.MinkUNetHyper.bntr4", "resunet.MinkUNetHyper.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetHyper.block5", "resunet.MinkUNetHyper.pool_tr5", "resunet.MinkUNetHyper.convtr5p4s2", "resunet.MinkUNetHyper.bntr5", "resunet.MinkUNetHyper.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetHyper.block6", "resunet.MinkUNetHyper.pool_tr6", "resunet.MinkUNetHyper.convtr6p2s2", "resunet.MinkUNetHyper.bntr6", "resunet.MinkUNetHyper.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetHyper.final"], "methods", ["None"], ["\n", "out", "=", "self", ".", "conv2p1s2", "(", "out_b1p1", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b2p2", "=", "self", ".", "block2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3p2s2", "(", "out_b2p2", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b3p4", "=", "self", ".", "block3", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv4p4s2", "(", "out_b3p4", ")", "\n", "out", "=", "self", ".", "bn4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "# pixel_dist=8", "\n", "out", "=", "self", ".", "block4", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr4p8s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b3p4", ")", "\n", "out", "=", "self", ".", "block5", "(", "out", ")", "\n", "out_5", "=", "self", ".", "pool_tr5", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr5p4s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr5", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b2p2", ")", "\n", "out", "=", "self", ".", "block6", "(", "out", ")", "\n", "out_6", "=", "self", ".", "pool_tr6", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr6p2s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr6", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b1p1", ",", "out_6", ",", "out_5", ")", "\n", "return", "self", ".", "final", "(", "out", ")", "\n", "\n", "\n", "", "", "class", "MinkUNetHyper14INBN", "(", "MinkUNetHyper", ")", ":", "\n", "  ", "NORM_TYPE", "=", "NormType", ".", "INSTANCE_BATCH_NORM", "\n", "BLOCK", "=", "BasicBlockINBN", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resunet.STMinkUNetBase.__init__": [[498, 500], ["resunet.MinkUNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "\n", "", "class", "STResUNet18", "(", "STMinkUNetBase", ",", "ResUNet18", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.common.get_norm": [[10, 17], ["MinkowskiEngine.MinkowskiBatchNorm", "MinkowskiEngine.MinkowskiInstanceNorm", "ValueError"], "function", ["None"], ["    ", "raise", "ValueError", "(", "f'Type {norm_type}, not defined'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resnet.ResNetBase.__init__": [[24, 32], ["models.model.Model.__init__", "resnet.ResNetBase.network_initialization", "resnet.ResNetBase.weight_initialization"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.res16unet.Res16UNetBase.network_initialization", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase.weight_initialization"], ["\n", "self", ".", "network_initialization", "(", "in_channels", ",", "out_channels", ",", "config", ",", "D", ")", "\n", "self", ".", "weight_initialization", "(", ")", "\n", "\n", "", "def", "network_initialization", "(", "self", ",", "in_channels", ",", "out_channels", ",", "config", ",", "D", ")", ":", "\n", "\n", "    ", "def", "space_n_time_m", "(", "n", ",", "m", ")", ":", "\n", "      ", "return", "n", "if", "D", "==", "3", "else", "[", "n", ",", "n", ",", "n", ",", "m", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resnet.ResNetBase.network_initialization": [[33, 82], ["models.modules.common.conv", "models.modules.common.get_norm", "MinkowskiEngine.MinkowskiReLU", "models.modules.common.sum_pool", "resnet.ResNetBase._make_layer", "resnet.ResNetBase._make_layer", "resnet.ResNetBase._make_layer", "resnet.ResNetBase._make_layer", "models.modules.common.conv", "resnet.ResNetBase.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.sum_pool", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv"], ["", "if", "D", "==", "4", ":", "\n", "      ", "self", ".", "OUT_PIXEL_DIST", "=", "space_n_time_m", "(", "self", ".", "OUT_PIXEL_DIST", ",", "1", ")", "\n", "\n", "", "dilations", "=", "config", ".", "dilations", "\n", "bn_momentum", "=", "config", ".", "bn_momentum", "\n", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "self", ".", "conv1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "D", "=", "D", ")", "\n", "\n", "self", ".", "bn1", "=", "get_norm", "(", "NormType", ".", "BATCH_NORM", ",", "self", ".", "inplanes", ",", "D", "=", "self", ".", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "relu", "=", "ME", ".", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "pool", "=", "sum_pool", "(", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "D", "=", "D", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "0", "]", ",", "1", ")", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "1", "]", ",", "1", ")", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "2", "]", ",", "1", ")", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "3", "]", ",", "1", ")", ")", "\n", "\n", "self", ".", "final", "=", "conv", "(", "\n", "self", ".", "PLANES", "[", "3", "]", "*", "self", ".", "BLOCK", ".", "expansion", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "\n", "", "def", "weight_initialization", "(", "self", ")", ":", "\n", "    ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "      ", "if", "isinstance", "(", "m", ",", "ME", ".", "MinkowskiBatchNorm", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn", ".", "bias", ",", "0", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resnet.ResNetBase.weight_initialization": [[83, 88], ["resnet.ResNetBase.modules", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["\n", "", "", "", "def", "_make_layer", "(", "self", ",", "\n", "block", ",", "\n", "planes", ",", "\n", "blocks", ",", "\n", "stride", "=", "1", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resnet.ResNetBase._make_layer": [[89, 131], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "models.modules.common.conv", "models.modules.common.get_norm", "block"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["dilation", "=", "1", ",", "\n", "norm_type", "=", "NormType", ".", "BATCH_NORM", ",", "\n", "bn_momentum", "=", "0.1", ")", ":", "\n", "    ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "      ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ",", "\n", "D", "=", "self", ".", "D", ")", ",", "\n", "get_norm", "(", "norm_type", ",", "planes", "*", "block", ".", "expansion", ",", "D", "=", "self", ".", "D", ",", "bn_momentum", "=", "bn_momentum", ")", ",", "\n", ")", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "\n", "downsample", "=", "downsample", ",", "\n", "conv_type", "=", "self", ".", "CONV_TYPE", ",", "\n", "D", "=", "self", ".", "D", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "      ", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "dilation", ",", "\n", "conv_type", "=", "self", ".", "CONV_TYPE", ",", "\n", "D", "=", "self", ".", "D", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resnet.ResNetBase.forward": [[132, 145], ["resnet.ResNetBase.conv1", "resnet.ResNetBase.bn1", "resnet.ResNetBase.relu", "resnet.ResNetBase.pool", "resnet.ResNetBase.layer1", "resnet.ResNetBase.layer2", "resnet.ResNetBase.layer3", "resnet.ResNetBase.layer4", "resnet.ResNetBase.final"], "methods", ["None"], ["\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n", "\n", "", "", "class", "ResNet14", "(", "ResNetBase", ")", ":", "\n", "  ", "BLOCK", "=", "BasicBlock", "\n", "LAYERS", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.resnet.STResNetBase.__init__": [[176, 178], ["resnet.ResNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["  ", "pass", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.wrapper.Wrapper.__init__": [[19, 22], ["torch.nn.Module.__init__", "wrapper.Wrapper.initialize_filter"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.wrapper.Wrapper.initialize_filter"], ["\n", "", "def", "forward", "(", "self", ",", "x", ",", "coords", ",", "colors", "=", "None", ")", ":", "\n", "    ", "soutput", "=", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.wrapper.Wrapper.initialize_filter": [[23, 25], ["NotImplementedError"], "methods", ["None"], ["# During training, make the network invariant to the filter", "\n", "if", "not", "self", ".", "training", "or", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "# Filter requires the model to finish the forward pass", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.wrapper.Wrapper.forward": [[26, 37], ["wrapper.Wrapper.model", "wrapper.Wrapper.filter.initialize_coords", "MinkowskiEngine.SparseTensor", "wrapper.Wrapper.filter", "random.random"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.conditional_random_fields.MeanField.initialize_coords"], ["      ", "wrapper_coords", "=", "self", ".", "filter", ".", "initialize_coords", "(", "self", ".", "model", ",", "coords", ",", "colors", ")", "\n", "finput", "=", "SparseTensor", "(", "soutput", ".", "F", ",", "wrapper_coords", ")", "\n", "soutput", "=", "self", ".", "filter", "(", "finput", ")", "\n", "\n", "", "return", "soutput", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.residual_block.BasicBlockBase.__init__": [[19, 42], ["torch.Module.__init__", "MinkowskiEngine.MinkowskiConvolution", "MinkowskiEngine.MinkowskiConvolution", "models.common.get_norm", "MinkowskiEngine.MinkowskiConvolution", "MinkowskiEngine.MinkowskiConvolution", "models.common.get_norm"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["bn_momentum", "=", "0.1", ",", "\n", "D", "=", "3", ")", ":", "\n", "    ", "super", "(", "BasicBlockBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "ME", ".", "MinkowskiConvolution", "(", "\n", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "dimension", "=", "D", ")", "\n", "self", ".", "norm1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "planes", ",", "bn_momentum", "=", "bn_momentum", ",", "D", "=", "D", ")", "\n", "self", ".", "conv2", "=", "ME", ".", "MinkowskiConvolution", "(", "\n", "planes", ",", "\n", "planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "dilation", ",", "\n", "has_bias", "=", "False", ",", "\n", "dimension", "=", "D", ")", "\n", "self", ".", "norm2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "planes", ",", "bn_momentum", "=", "bn_momentum", ",", "D", "=", "D", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "out", "=", "MEF", ".", "relu", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.residual_block.BasicBlockBase.forward": [[43, 60], ["residual_block.BasicBlockBase.conv1", "residual_block.BasicBlockBase.norm1", "MinkowskiEngine.relu", "MinkowskiEngine.relu", "residual_block.BasicBlockBase.conv2", "residual_block.BasicBlockBase.norm2", "MinkowskiEngine.relu", "MinkowskiEngine.relu", "residual_block.BasicBlockBase.downsample"], "methods", ["None"], ["\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "norm2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "      ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "MEF", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "BasicBlockBN", "(", "BasicBlockBase", ")", ":", "\n", "  ", "NORM_TYPE", "=", "'BN'", "\n", "\n", "\n", "", "class", "BasicBlockIN", "(", "BasicBlockBase", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.residual_block.get_block": [[70, 84], ["residual_block.BasicBlockBN", "residual_block.BasicBlockIN", "ValueError"], "function", ["None"], ["bn_momentum", "=", "0.1", ",", "\n", "D", "=", "3", ")", ":", "\n", "  ", "if", "norm_type", "==", "'BN'", ":", "\n", "    ", "return", "BasicBlockBN", "(", "inplanes", ",", "planes", ",", "stride", ",", "dilation", ",", "downsample", ",", "bn_momentum", ",", "D", ")", "\n", "", "elif", "norm_type", "==", "'IN'", ":", "\n", "    ", "return", "BasicBlockIN", "(", "inplanes", ",", "planes", ",", "stride", ",", "dilation", ",", "downsample", ",", "bn_momentum", ",", "D", ")", "\n", "", "else", ":", "\n", "    ", "raise", "ValueError", "(", "f'Type {norm_type}, not defined'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.model.Model.__init__": [[17, 22], ["MinkowskiEngine.MinkowskiNetwork.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "\n", "", "", "class", "HighDimensionalModel", "(", "Model", ")", ":", "\n", "  ", "\"\"\"\n  Base network for all spatio (temporal) chromatic sparse convnet\n  \"\"\"", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.model.HighDimensionalModel.__init__": [[29, 32], ["model.Model.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.res16unet.Res16UNetBase.__init__": [[27, 29], ["models.resnet.ResNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "dilations", "=", "self", ".", "DILATIONS", "\n", "bn_momentum", "=", "config", ".", "optimizer", ".", "bn_momentum", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.res16unet.Res16UNetBase.network_initialization": [[30, 201], ["print", "models.modules.common.conv", "models.resnet.get_norm", "models.modules.common.conv", "models.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.modules.common.conv", "models.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.modules.common.conv", "models.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.modules.common.conv", "models.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.modules.common.conv_tr", "models.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.modules.common.conv_tr", "models.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.modules.common.conv_tr", "models.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.modules.common.conv_tr", "models.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.modules.common.conv", "MinkowskiEngine.MinkowskiReLU", "res16unet.Res16UNetBase.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv"], ["def", "space_n_time_m", "(", "n", ",", "m", ")", ":", "\n", "      ", "return", "n", "if", "D", "==", "3", "else", "[", "n", ",", "n", ",", "n", ",", "m", "]", "\n", "\n", "", "if", "D", "==", "4", ":", "\n", "      ", "self", ".", "OUT_PIXEL_DIST", "=", "space_n_time_m", "(", "self", ".", "OUT_PIXEL_DIST", ",", "1", ")", "\n", "\n", "# Output of the first conv concated to conv6", "\n", "", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "print", "(", "\"building model, \"", ",", "in_channels", ")", "\n", "self", ".", "conv0p1s1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "net", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "\n", "self", ".", "bn0", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv1p1s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "dilation", "=", "dilations", "[", "0", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv2p2s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "dilation", "=", "dilations", "[", "1", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv3p4s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn3", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "dilation", "=", "dilations", "[", "2", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv4p8s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "dilation", "=", "dilations", "[", "3", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr4p16s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "4", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "4", "]", "+", "self", ".", "PLANES", "[", "2", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block5", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "self", ".", "LAYERS", "[", "4", "]", ",", "\n", "dilation", "=", "dilations", "[", "4", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr5p8s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr5", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "5", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "5", "]", "+", "self", ".", "PLANES", "[", "1", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block6", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "self", ".", "LAYERS", "[", "5", "]", ",", "\n", "dilation", "=", "dilations", "[", "5", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr6p4s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr6", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "6", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "6", "]", "+", "self", ".", "PLANES", "[", "0", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block7", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "self", ".", "LAYERS", "[", "6", "]", ",", "\n", "dilation", "=", "dilations", "[", "6", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr7p2s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "7", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr7", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "7", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "7", "]", "+", "self", ".", "INIT_DIM", "\n", "self", ".", "block8", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "7", "]", ",", "\n", "self", ".", "LAYERS", "[", "7", "]", ",", "\n", "dilation", "=", "dilations", "[", "7", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "final", "=", "conv", "(", "self", ".", "PLANES", "[", "7", "]", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "self", ".", "relu", "=", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "offsets_pre", "=", "conv", "(", "self", ".", "inplanes", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "self", ".", "bntr_offset", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "offsets", "=", "conv", "(", "self", ".", "inplanes", ",", "3", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.res16unet.Res16UNetBase.forward": [[203, 262], ["res16unet.Res16UNetBase.conv0p1s1", "res16unet.Res16UNetBase.bn0", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.conv1p1s2", "res16unet.Res16UNetBase.bn1", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block1", "res16unet.Res16UNetBase.conv2p2s2", "res16unet.Res16UNetBase.bn2", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block2", "res16unet.Res16UNetBase.conv3p4s2", "res16unet.Res16UNetBase.bn3", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block3", "res16unet.Res16UNetBase.conv4p8s2", "res16unet.Res16UNetBase.bn4", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block4", "res16unet.Res16UNetBase.convtr4p16s2", "res16unet.Res16UNetBase.bntr4", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block5", "res16unet.Res16UNetBase.convtr5p8s2", "res16unet.Res16UNetBase.bntr5", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block6", "res16unet.Res16UNetBase.convtr6p4s2", "res16unet.Res16UNetBase.bntr6", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block7", "res16unet.Res16UNetBase.convtr7p2s2", "res16unet.Res16UNetBase.bntr7", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block8", "res16unet.Res16UNetBase.final"], "methods", ["None"], ["    ", "out", "=", "self", ".", "conv0p1s1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn0", "(", "out", ")", "\n", "out_p1", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv1p1s2", "(", "out_p1", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out_b1p2", "=", "self", ".", "block1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2p2s2", "(", "out_b1p2", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out_b2p4", "=", "self", ".", "block2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3p4s2", "(", "out_b2p4", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out_b3p8", "=", "self", ".", "block3", "(", "out", ")", "\n", "\n", "# pixel_dist=16", "\n", "out", "=", "self", ".", "conv4p8s2", "(", "out_b3p8", ")", "\n", "out", "=", "self", ".", "bn4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "block4", "(", "out", ")", "\n", "\n", "# pixel_dist=8", "\n", "out", "=", "self", ".", "convtr4p16s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b3p8", ")", "\n", "out", "=", "self", ".", "block5", "(", "out", ")", "\n", "\n", "# pixel_dist=4", "\n", "out", "=", "self", ".", "convtr5p8s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr5", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b2p4", ")", "\n", "out", "=", "self", ".", "block6", "(", "out", ")", "\n", "\n", "# pixel_dist=2", "\n", "out", "=", "self", ".", "convtr6p4s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr6", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b1p2", ")", "\n", "out", "=", "self", ".", "block7", "(", "out", ")", "\n", "\n", "# pixel_dist=1", "\n", "out", "=", "self", ".", "convtr7p2s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr7", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_p1", ")", "\n", "out", "=", "self", ".", "block8", "(", "out", ")", "\n", "\n", "offsets", "=", "self", ".", "offsets_pre", "(", "out", ")", "\n", "offsets", "=", "self", ".", "bntr_offset", "(", "offsets", ")", "\n", "offsets", "=", "self", ".", "relu", "(", "offsets", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.res16unet.STRes16UNetBase.__init__": [[345, 347], ["res16unet.Res16UNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["", "class", "STRes16UNetBase", "(", "Res16UNetBase", ")", ":", "\n", "\n", "  ", "CONV_TYPE", "=", "ConvType", ".", "SPATIAL_HYPERCUBE_TEMPORAL_HYPERCROSS", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.__init__.add_models": [[11, 13], ["MODELS.extend", "getattr", "dir", "models.resunet", "models.res16unet"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.__init__.get_models": [[16, 19], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.__init__.load_model": [[20, 35], ["__init__.get_models", "print", "print"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.__init__.get_models"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.backbone_module.Pointnet2Backbone.__init__": [[32, 73], ["torch.Module.__init__", "models.backbone.pointnet2.pointnet2_modules.PointnetSAModuleVotes", "models.backbone.pointnet2.pointnet2_modules.PointnetSAModuleVotes", "models.backbone.pointnet2.pointnet2_modules.PointnetSAModuleVotes", "models.backbone.pointnet2.pointnet2_modules.PointnetSAModuleVotes", "models.backbone.pointnet2.pointnet2_modules.PointnetFPModule", "models.backbone.pointnet2.pointnet2_modules.PointnetFPModule"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "input_feature_dim", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "sa1", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "2048", ",", "\n", "radius", "=", "0.2", ",", "\n", "nsample", "=", "64", ",", "\n", "mlp", "=", "[", "input_feature_dim", ",", "64", ",", "64", ",", "128", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "sa2", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "1024", ",", "\n", "radius", "=", "0.4", ",", "\n", "nsample", "=", "32", ",", "\n", "mlp", "=", "[", "128", ",", "128", ",", "128", ",", "256", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "sa3", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "512", ",", "\n", "radius", "=", "0.8", ",", "\n", "nsample", "=", "16", ",", "\n", "mlp", "=", "[", "256", ",", "128", ",", "128", ",", "256", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "sa4", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "256", ",", "\n", "radius", "=", "1.2", ",", "\n", "nsample", "=", "16", ",", "\n", "mlp", "=", "[", "256", ",", "128", ",", "128", ",", "256", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "fp1", "=", "PointnetFPModule", "(", "mlp", "=", "[", "256", "+", "256", ",", "256", ",", "256", "]", ")", "\n", "self", ".", "fp2", "=", "PointnetFPModule", "(", "mlp", "=", "[", "256", "+", "256", ",", "256", ",", "256", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.backbone_module.Pointnet2Backbone._break_up_pc": [[74, 82], ["pc[].contiguous", "pc[].transpose().contiguous", "pc.size", "pc[].transpose"], "methods", ["None"], ["", "def", "_break_up_pc", "(", "self", ",", "pc", ")", ":", "\n", "        ", "xyz", "=", "pc", "[", "...", ",", "0", ":", "3", "]", ".", "contiguous", "(", ")", "\n", "features", "=", "(", "\n", "pc", "[", "...", ",", "3", ":", "]", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "if", "pc", ".", "size", "(", "-", "1", ")", ">", "3", "else", "None", "\n", ")", "\n", "\n", "return", "xyz", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.backbone_module.Pointnet2Backbone.forward": [[83, 134], ["backbone_module.Pointnet2Backbone._break_up_pc", "backbone_module.Pointnet2Backbone.sa1", "backbone_module.Pointnet2Backbone.sa2", "backbone_module.Pointnet2Backbone.sa3", "backbone_module.Pointnet2Backbone.sa4", "backbone_module.Pointnet2Backbone.fp1", "backbone_module.Pointnet2Backbone.fp2"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone._break_up_pc"], ["", "def", "forward", "(", "self", ",", "pointcloud", ":", "torch", ".", "cuda", ".", "FloatTensor", ",", "end_points", "=", "None", ")", ":", "\n", "        ", "r\"\"\"\n            Forward pass of the network\n\n            Parameters\n            ----------\n            pointcloud: Variable(torch.cuda.FloatTensor)\n                (B, N, 3 + input_feature_dim) tensor\n                Point cloud to run predicts on\n                Each point in the point-cloud MUST\n                be formated as (x, y, z, features...)\n\n            Returns\n            ----------\n            end_points: {XXX_xyz, XXX_features, XXX_inds}\n                XXX_xyz: float32 Tensor of shape (B,K,3)\n                XXX_features: float32 Tensor of shape (B,K,D)\n                XXX-inds: int64 Tensor of shape (B,K) values in [0,N-1]\n        \"\"\"", "\n", "if", "not", "end_points", ":", "end_points", "=", "{", "}", "\n", "batch_size", "=", "pointcloud", ".", "shape", "[", "0", "]", "\n", "\n", "xyz", ",", "features", "=", "self", ".", "_break_up_pc", "(", "pointcloud", ")", "\n", "\n", "# --------- 4 SET ABSTRACTION LAYERS ---------", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa1", "(", "xyz", ",", "features", ")", "\n", "end_points", "[", "'sa1_inds'", "]", "=", "fps_inds", "\n", "end_points", "[", "'sa1_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa1_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa2", "(", "xyz", ",", "features", ")", "# this fps_inds is just 0,1,...,1023", "\n", "end_points", "[", "'sa2_inds'", "]", "=", "fps_inds", "\n", "end_points", "[", "'sa2_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa2_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa3", "(", "xyz", ",", "features", ")", "# this fps_inds is just 0,1,...,511", "\n", "end_points", "[", "'sa3_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa3_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa4", "(", "xyz", ",", "features", ")", "# this fps_inds is just 0,1,...,255", "\n", "end_points", "[", "'sa4_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa4_features'", "]", "=", "features", "\n", "\n", "# --------- 2 FEATURE UPSAMPLING LAYERS --------", "\n", "features", "=", "self", ".", "fp1", "(", "end_points", "[", "'sa3_xyz'", "]", ",", "end_points", "[", "'sa4_xyz'", "]", ",", "end_points", "[", "'sa3_features'", "]", ",", "end_points", "[", "'sa4_features'", "]", ")", "\n", "features", "=", "self", ".", "fp2", "(", "end_points", "[", "'sa2_xyz'", "]", ",", "end_points", "[", "'sa3_xyz'", "]", ",", "end_points", "[", "'sa2_features'", "]", ",", "features", ")", "\n", "end_points", "[", "'fp2_features'", "]", "=", "features", "\n", "end_points", "[", "'fp2_xyz'", "]", "=", "end_points", "[", "'sa2_xyz'", "]", "\n", "num_seed", "=", "end_points", "[", "'fp2_xyz'", "]", ".", "shape", "[", "1", "]", "\n", "end_points", "[", "'fp2_inds'", "]", "=", "end_points", "[", "'sa1_inds'", "]", "[", ":", ",", "0", ":", "num_seed", "]", "# indices among the entire input point clouds", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.backbone_module.SparseConvBackbone.__init__": [[138, 153], ["torch.Module.__init__", "models.backbone.sparseconv.config.get_config", "models.backbone.sparseconv.models_sparseconv.load_model"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.config.get_config", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.__init__.load_model"], ["    ", "def", "__init__", "(", "self", ",", "\n", "input_feature_dim", "=", "3", ",", "\n", "output_feature_dim", "=", "256", ",", "\n", "num_seed", "=", "1024", ",", "\n", "model", "=", "'Res16UNet34C'", ",", "\n", "config", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "config", "=", "get_config", "(", "[", "\"--conv1_kernel_size\"", ",", "\"3\"", ",", "\"--model\"", ",", "model", "]", ")", "\n", "\n", "# from pdb import set_trace; set_trace()", "\n", "self", ".", "net", "=", "load_model", "(", "model", ")", "(", "\n", "input_feature_dim", ",", "output_feature_dim", ",", "config", ")", "\n", "self", ".", "num_seed", "=", "num_seed", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.backbone_module.SparseConvBackbone.forward": [[154, 181], ["MinkowskiEngine.SparseTensor().to", "backbone_module.SparseConvBackbone.net", "points.view.view.size", "points.view.view.view", "range", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "models.backbone.pointnet2.pointnet2_utils.furthest_point_sample().squeeze().long", "sampled_inds.append", "sampled_feartures.append", "sampled_points.append", "MinkowskiEngine.SparseTensor", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "feats.cpu", "models.backbone.pointnet2.pointnet2_utils.furthest_point_sample().squeeze", "coords.cpu().int", "models.backbone.pointnet2.pointnet2_utils.furthest_point_sample", "coords.cpu", "points[].unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "points", ",", "coords", ",", "feats", ",", "inds", ",", "end_points", "=", "None", ")", ":", "\n", "        ", "inputs", "=", "ME", ".", "SparseTensor", "(", "feats", ".", "cpu", "(", ")", ",", "coords", "=", "coords", ".", "cpu", "(", ")", ".", "int", "(", ")", ")", ".", "to", "(", "coords", ".", "device", ")", "\n", "outputs", "=", "self", ".", "net", "(", "inputs", ")", "\n", "features", "=", "outputs", ".", "F", "\n", "\n", "# randomly down-sample to num_seed points & create batches", "\n", "bsz", ",", "num_points", ",", "_", "=", "points", ".", "size", "(", ")", "\n", "points", "=", "points", ".", "view", "(", "-", "1", ",", "3", ")", "\n", "batch_ids", "=", "coords", "[", ":", ",", "0", "]", "\n", "voxel_ids", "=", "inds", "+", "batch_ids", "*", "num_points", "\n", "\n", "sampled_inds", ",", "sampled_feartures", ",", "sampled_points", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "b", "in", "range", "(", "bsz", ")", ":", "\n", "            ", "sampled_id", "=", "furthest_point_sample", "(", "\n", "points", "[", "voxel_ids", "[", "batch_ids", "==", "b", "]", "]", ".", "unsqueeze", "(", "0", ")", ",", "\n", "self", ".", "num_seed", ")", ".", "squeeze", "(", "0", ")", ".", "long", "(", ")", "\n", "\n", "sampled_inds", ".", "append", "(", "inds", "[", "batch_ids", "==", "b", "]", "[", "sampled_id", "]", ")", "\n", "sampled_feartures", ".", "append", "(", "features", "[", "batch_ids", "==", "b", "]", "[", "sampled_id", "]", ")", "\n", "sampled_points", ".", "append", "(", "points", "[", "voxel_ids", "[", "batch_ids", "==", "b", "]", "]", "[", "sampled_id", "]", ")", "\n", "\n", "", "end_points", "[", "'fp2_features'", "]", "=", "torch", ".", "stack", "(", "sampled_feartures", ",", "0", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "end_points", "[", "'fp2_xyz'", "]", "=", "torch", ".", "stack", "(", "sampled_points", ",", "0", ")", "\n", "end_points", "[", "'fp2_inds'", "]", "=", "torch", ".", "stack", "(", "sampled_inds", ",", "0", ")", "\n", "\n", "# from pdb import set_trace; set_trace()", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.voting_module.VotingModule.__init__": [[17, 37], ["torch.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "self", ",", "vote_factor", ",", "seed_feature_dim", ")", ":", "\n", "        ", "\"\"\" Votes generation from seed point features.\n\n        Args:\n            vote_facotr: int\n                number of votes generated from each seed point\n            seed_feature_dim: int\n                number of channels of seed point features\n            vote_feature_dim: int\n                number of channels of vote features\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vote_factor", "=", "vote_factor", "\n", "self", ".", "in_dim", "=", "seed_feature_dim", "\n", "self", ".", "out_dim", "=", "self", ".", "in_dim", "# due to residual feature, in_dim has to be == out_dim", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "in_dim", ",", "self", ".", "in_dim", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "in_dim", ",", "self", ".", "in_dim", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "self", ".", "in_dim", ",", "(", "3", "+", "self", ".", "out_dim", ")", "*", "self", ".", "vote_factor", ",", "1", ")", "\n", "self", ".", "bn1", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "self", ".", "in_dim", ")", "\n", "self", ".", "bn2", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "self", ".", "in_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.voting_module.VotingModule.forward": [[38, 66], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "voting_module.VotingModule.conv3", "net.transpose().view.transpose().view.transpose().view", "vote_xyz.contiguous().view.contiguous().view.contiguous().view", "vote_features.transpose().contiguous.transpose().contiguous.contiguous().view", "vote_features.transpose().contiguous.transpose().contiguous.transpose().contiguous", "voting_module.VotingModule.bn1", "voting_module.VotingModule.bn2", "seed_xyz.unsqueeze", "seed_features.transpose().unsqueeze", "voting_module.VotingModule.conv1", "voting_module.VotingModule.conv2", "net.transpose().view.transpose().view.transpose", "vote_xyz.contiguous().view.contiguous().view.contiguous", "vote_features.transpose().contiguous.transpose().contiguous.contiguous", "vote_features.transpose().contiguous.transpose().contiguous.transpose", "seed_features.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "seed_xyz", ",", "seed_features", ")", ":", "\n", "        ", "\"\"\" Forward pass.\n\n        Arguments:\n            seed_xyz: (batch_size, num_seed, 3) Pytorch tensor\n            seed_features: (batch_size, feature_dim, num_seed) Pytorch tensor\n        Returns:\n            vote_xyz: (batch_size, num_seed*vote_factor, 3)\n            vote_features: (batch_size, vote_feature_dim, num_seed*vote_factor)\n        \"\"\"", "\n", "batch_size", "=", "seed_xyz", ".", "shape", "[", "0", "]", "\n", "num_seed", "=", "seed_xyz", ".", "shape", "[", "1", "]", "\n", "num_vote", "=", "num_seed", "*", "self", ".", "vote_factor", "\n", "net", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "seed_features", ")", ")", ")", "\n", "net", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "net", ")", ")", ")", "\n", "net", "=", "self", ".", "conv3", "(", "net", ")", "# (batch_size, (3+out_dim)*vote_factor, num_seed)", "\n", "\n", "net", "=", "net", ".", "transpose", "(", "2", ",", "1", ")", ".", "view", "(", "batch_size", ",", "num_seed", ",", "self", ".", "vote_factor", ",", "3", "+", "self", ".", "out_dim", ")", "\n", "offset", "=", "net", "[", ":", ",", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "vote_xyz", "=", "seed_xyz", ".", "unsqueeze", "(", "2", ")", "+", "offset", "\n", "vote_xyz", "=", "vote_xyz", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "num_vote", ",", "3", ")", "\n", "\n", "residual_features", "=", "net", "[", ":", ",", ":", ",", ":", ",", "3", ":", "]", "# (batch_size, num_seed, vote_factor, out_dim)", "\n", "vote_features", "=", "seed_features", ".", "transpose", "(", "2", ",", "1", ")", ".", "unsqueeze", "(", "2", ")", "+", "residual_features", "\n", "vote_features", "=", "vote_features", ".", "contiguous", "(", ")", ".", "view", "(", "batch_size", ",", "num_vote", ",", "self", ".", "out_dim", ")", "\n", "vote_features", "=", "vote_features", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "vote_xyz", ",", "vote_features", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.boxnet.BoxNet.__init__": [[39, 59], ["torch.Module.__init__", "backbone_module.Pointnet2Backbone", "proposal_module.ProposalModule"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "mean_size_arr", ",", "\n", "input_feature_dim", "=", "0", ",", "num_proposal", "=", "128", ",", "vote_factor", "=", "1", ",", "sampling", "=", "'vote_fps'", ",", "backbone", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "num_heading_bin", "=", "num_heading_bin", "\n", "self", ".", "num_size_cluster", "=", "num_size_cluster", "\n", "self", ".", "mean_size_arr", "=", "mean_size_arr", "\n", "assert", "(", "mean_size_arr", ".", "shape", "[", "0", "]", "==", "self", ".", "num_size_cluster", ")", "\n", "self", ".", "input_feature_dim", "=", "input_feature_dim", "\n", "self", ".", "num_proposal", "=", "num_proposal", "\n", "self", ".", "vote_factor", "=", "vote_factor", "\n", "self", ".", "sampling", "=", "sampling", "\n", "\n", "# Backbone point feature learning", "\n", "self", ".", "backbone_net", "=", "Pointnet2Backbone", "(", "input_feature_dim", "=", "self", ".", "input_feature_dim", ")", "\n", "\n", "# Box proposal, aggregation and detection", "\n", "self", ".", "pnet", "=", "ProposalModule", "(", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "\n", "mean_size_arr", ",", "num_proposal", ",", "sampling", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.boxnet.BoxNet.forward": [[60, 89], ["boxnet.BoxNet.backbone_net", "boxnet.BoxNet.pnet"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\" Forward pass of the network\n\n        Args:\n            inputs: dict\n                {point_clouds}\n\n                point_clouds: Variable(torch.cuda.FloatTensor)\n                    (B, N, 3 + input_channels) tensor\n                    Point cloud to run predicts on\n                    Each point in the point-cloud MUST\n                    be formated as (x, y, z, features...)\n        Returns:\n            end_points: dict\n        \"\"\"", "\n", "end_points", "=", "{", "}", "\n", "batch_size", "=", "inputs", "[", "'point_clouds'", "]", ".", "shape", "[", "0", "]", "\n", "\n", "end_points", "=", "self", ".", "backbone_net", "(", "inputs", "[", "'point_clouds'", "]", ",", "end_points", ")", "\n", "xyz", "=", "end_points", "[", "'fp2_xyz'", "]", "\n", "features", "=", "end_points", "[", "'fp2_features'", "]", "\n", "end_points", "[", "'seed_inds'", "]", "=", "end_points", "[", "'fp2_inds'", "]", "\n", "end_points", "[", "'seed_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'seed_features'", "]", "=", "features", "\n", "\n", "# Directly predict bounding boxes (skips voting) ", "\n", "end_points", "=", "self", ".", "pnet", "(", "xyz", ",", "features", ",", "end_points", ")", "\n", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.__init__": [[234, 244], ["ap_helper.APCalculator.reset"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset"], ["def", "__init__", "(", "self", ",", "ap_iou_thresh", "=", "0.25", ",", "class2type_map", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            ap_iou_thresh: float between 0 and 1.0\n                IoU threshold to judge whether a prediction is positive.\n            class2type_map: [optional] dict {class_int:class_name}\n        \"\"\"", "\n", "self", ".", "ap_iou_thresh", "=", "ap_iou_thresh", "\n", "self", ".", "class2type_map", "=", "class2type_map", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.step": [[245, 260], ["len", "range", "len"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "batch_pred_map_cls", ",", "batch_gt_map_cls", ")", ":", "\n", "        ", "\"\"\" Accumulate one batch of prediction and groundtruth.\n        \n        Args:\n            batch_pred_map_cls: a list of lists [[(pred_cls, pred_box_params, score),...],...]\n            batch_gt_map_cls: a list of lists [[(gt_cls, gt_box_params),...],...]\n                should have the same length with batch_pred_map_cls (batch_size)\n        \"\"\"", "\n", "\n", "bsize", "=", "len", "(", "batch_pred_map_cls", ")", "\n", "assert", "(", "bsize", "==", "len", "(", "batch_gt_map_cls", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "self", ".", "gt_map_cls", "[", "self", ".", "scan_cnt", "]", "=", "batch_gt_map_cls", "[", "i", "]", "\n", "self", ".", "pred_map_cls", "[", "self", ".", "scan_cnt", "]", "=", "batch_pred_map_cls", "[", "i", "]", "\n", "self", ".", "scan_cnt", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.compute_metrics": [[261, 281], ["lib.utils.eval_det.eval_det_multiprocessing", "sorted", "numpy.mean", "sorted", "numpy.mean", "ap.keys", "list", "ap.keys", "str", "ap.values", "str", "rec_list.append", "rec_list.append"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det_multiprocessing"], ["", "", "def", "compute_metrics", "(", "self", ")", ":", "\n", "        ", "\"\"\" Use accumulated predictions and groundtruths to compute Average Precision.\n        \"\"\"", "\n", "rec", ",", "prec", ",", "ap", "=", "eval_det_multiprocessing", "(", "self", ".", "pred_map_cls", ",", "self", ".", "gt_map_cls", ",", "ovthresh", "=", "self", ".", "ap_iou_thresh", ",", "get_iou_func", "=", "get_iou_obb", ")", "\n", "ret_dict", "=", "{", "}", "\n", "for", "key", "in", "sorted", "(", "ap", ".", "keys", "(", ")", ")", ":", "\n", "            ", "clsname", "=", "self", ".", "class2type_map", "[", "key", "]", "if", "self", ".", "class2type_map", "else", "str", "(", "key", ")", "\n", "ret_dict", "[", "'%s Average Precision'", "%", "(", "clsname", ")", "]", "=", "ap", "[", "key", "]", "\n", "", "ret_dict", "[", "'mAP'", "]", "=", "np", ".", "mean", "(", "list", "(", "ap", ".", "values", "(", ")", ")", ")", "\n", "rec_list", "=", "[", "]", "\n", "for", "key", "in", "sorted", "(", "ap", ".", "keys", "(", ")", ")", ":", "\n", "            ", "clsname", "=", "self", ".", "class2type_map", "[", "key", "]", "if", "self", ".", "class2type_map", "else", "str", "(", "key", ")", "\n", "try", ":", "\n", "                ", "ret_dict", "[", "'%s Recall'", "%", "(", "clsname", ")", "]", "=", "rec", "[", "key", "]", "[", "-", "1", "]", "\n", "rec_list", ".", "append", "(", "rec", "[", "key", "]", "[", "-", "1", "]", ")", "\n", "", "except", ":", "\n", "                ", "ret_dict", "[", "'%s Recall'", "%", "(", "clsname", ")", "]", "=", "0", "\n", "rec_list", ".", "append", "(", "0", ")", "\n", "", "", "ret_dict", "[", "'AR'", "]", "=", "np", ".", "mean", "(", "rec_list", ")", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.APCalculator.reset": [[282, 286], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "gt_map_cls", "=", "{", "}", "# {scan_id: [(classname, bbox)]}", "\n", "self", ".", "pred_map_cls", "=", "{", "}", "# {scan_id: [(classname, bbox, score)]}", "\n", "self", ".", "scan_cnt", "=", "0", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.flip_axis_back_camera": [[18, 26], ["numpy.copy"], "function", ["None"], ["def", "flip_axis_back_camera", "(", "pc", ")", ":", "\n", "    ", "''' Flip X-right,Y-forward,Z-up to X-right,Y-down,Z-forward\n    Input and output are both (N,3) array\n    '''", "\n", "pc2", "=", "np", ".", "copy", "(", "pc", ")", "\n", "pc2", "[", "...", ",", "1", "]", "*=", "-", "1", "\n", "pc2", "[", "...", ",", "[", "0", ",", "1", ",", "2", "]", "]", "=", "pc2", "[", "...", ",", "[", "0", ",", "2", ",", "1", "]", "]", "# cam X,Y,Z = depth X,-Z,Y", "\n", "return", "pc2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.flip_axis_to_camera": [[27, 35], ["numpy.copy"], "function", ["None"], ["", "def", "flip_axis_to_camera", "(", "pc", ")", ":", "\n", "    ", "''' Flip X-right,Y-forward,Z-up to X-right,Y-down,Z-forward\n    Input and output are both (N,3) array\n    '''", "\n", "pc2", "=", "np", ".", "copy", "(", "pc", ")", "\n", "pc2", "[", "...", ",", "[", "0", ",", "1", ",", "2", "]", "]", "=", "pc2", "[", "...", ",", "[", "0", ",", "2", ",", "1", "]", "]", "# cam X,Y,Z = depth X,-Z,Y", "\n", "pc2", "[", "...", ",", "1", "]", "*=", "-", "1", "\n", "return", "pc2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.flip_axis_to_depth": [[36, 41], ["numpy.copy"], "function", ["None"], ["", "def", "flip_axis_to_depth", "(", "pc", ")", ":", "\n", "    ", "pc2", "=", "np", ".", "copy", "(", "pc", ")", "\n", "pc2", "[", "...", ",", "[", "0", ",", "1", ",", "2", "]", "]", "=", "pc2", "[", "...", ",", "[", "0", ",", "2", ",", "1", "]", "]", "# depth X,Y,Z = cam X,Z,-Y", "\n", "pc2", "[", "...", ",", "2", "]", "*=", "-", "1", "\n", "return", "pc2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.softmax": [[42, 48], ["numpy.exp", "numpy.sum", "numpy.max", "len", "len"], "function", ["None"], ["", "def", "softmax", "(", "x", ")", ":", "\n", "    ", "''' Numpy function for softmax'''", "\n", "shape", "=", "x", ".", "shape", "\n", "probs", "=", "np", ".", "exp", "(", "x", "-", "np", ".", "max", "(", "x", ",", "axis", "=", "len", "(", "shape", ")", "-", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "probs", "/=", "np", ".", "sum", "(", "probs", ",", "axis", "=", "len", "(", "shape", ")", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.parse_predictions": [[49, 187], ["torch.argmax", "torch.gather", "torch.gather.squeeze_", "torch.argmax", "torch.gather", "torch.gather.squeeze_", "torch.argmax", "ap_helper.softmax", "numpy.max", "numpy.zeros", "ap_helper.flip_axis_to_camera", "range", "numpy.ones", "end_points[].detach().cpu().numpy", "range", "torch.argmax.unsqueeze", "torch.argmax.unsqueeze().unsqueeze().repeat", "end_points[].detach().cpu().numpy", "pred_center.detach().cpu().numpy", "range", "range", "ap_helper.softmax", "numpy.zeros", "range", "config_dict[].class2angle", "config_dict[].class2size", "lib.utils.box_util.get_3d_box", "end_points[].cpu().numpy", "range", "end_points[].detach().cpu", "numpy.zeros", "range", "lib.utils.nms.nms_2d_faster", "numpy.zeros", "range", "range", "batch_pred_map_cls.append", "batch_pred_map_cls.append", "torch.argmax.unsqueeze().unsqueeze", "end_points[].detach().cpu", "pred_center.detach().cpu", "pred_heading_class[].detach().cpu().numpy", "pred_heading_residual[].detach().cpu().numpy", "int", "pred_size_residual[].detach().cpu().numpy", "ap_helper.flip_axis_to_depth", "datasets.sunrgbd.sunrgbd_utils.extract_pc_in_box3d", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.where", "len", "numpy.zeros", "range", "lib.utils.nms.nms_3d_faster", "numpy.zeros", "range", "pred_size_class[].detach().cpu().numpy", "end_points[].cpu", "len", "end_points[].detach", "numpy.min", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.max", "numpy.where", "len", "numpy.zeros", "range", "lib.utils.nms.nms_3d_faster_samecls", "torch.argmax.unsqueeze", "end_points[].detach", "pred_center.detach", "pred_heading_class[].detach().cpu", "pred_heading_residual[].detach().cpu", "pred_size_residual[].detach().cpu", "numpy.min", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.max", "numpy.where", "len", "range", "pred_sem_cls[].item", "range", "pred_size_class[].detach().cpu", "pred_heading_class[].detach", "pred_heading_residual[].detach", "pred_size_residual[].detach", "pred_size_class[].detach"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.softmax", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.flip_axis_to_camera", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.softmax", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.get_3d_box", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nms.nms_2d_faster", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.flip_axis_to_depth", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.extract_pc_in_box3d", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nms.nms_3d_faster", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nms.nms_3d_faster_samecls"], ["", "def", "parse_predictions", "(", "end_points", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Parse predictions to OBB parameters and suppress overlapping boxes\n    \n    Args:\n        end_points: dict\n            {point_clouds, center, heading_scores, heading_residuals,\n            size_scores, size_residuals, sem_cls_scores}\n        config_dict: dict\n            {dataset_config, remove_empty_box, use_3d_nms, nms_iou,\n            use_old_type_nms, conf_thresh, per_class_proposal}\n\n    Returns:\n        batch_pred_map_cls: a list of len == batch size (BS)\n            [pred_list_i], i = 0, 1, ..., BS-1\n            where pred_list_i = [(pred_sem_cls, box_params, box_score)_j]\n            where j = 0, ..., num of valid detections - 1 from sample input i\n    \"\"\"", "\n", "pred_center", "=", "end_points", "[", "'center'", "]", "# B,num_proposal,3", "\n", "pred_heading_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'heading_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_heading_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_residuals'", "]", ",", "2", ",", "\n", "pred_heading_class", ".", "unsqueeze", "(", "-", "1", ")", ")", "# B,num_proposal,1", "\n", "pred_heading_residual", ".", "squeeze_", "(", "2", ")", "\n", "pred_size_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'size_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_size_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_residuals'", "]", ",", "2", ",", "\n", "pred_size_class", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", ")", "# B,num_proposal,1,3", "\n", "pred_size_residual", ".", "squeeze_", "(", "2", ")", "\n", "pred_sem_cls", "=", "torch", ".", "argmax", "(", "end_points", "[", "'sem_cls_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "sem_cls_probs", "=", "softmax", "(", "end_points", "[", "'sem_cls_scores'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "# B,num_proposal,10", "\n", "pred_sem_cls_prob", "=", "np", ".", "max", "(", "sem_cls_probs", ",", "-", "1", ")", "# B,num_proposal", "\n", "\n", "num_proposal", "=", "pred_center", ".", "shape", "[", "1", "]", "\n", "# Since we operate in upright_depth coord for points, while util functions", "\n", "# assume upright_camera coord.", "\n", "bsize", "=", "pred_center", ".", "shape", "[", "0", "]", "\n", "pred_corners_3d_upright_camera", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "num_proposal", ",", "8", ",", "3", ")", ")", "\n", "pred_center_upright_camera", "=", "flip_axis_to_camera", "(", "pred_center", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "num_proposal", ")", ":", "\n", "            ", "heading_angle", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2angle", "(", "pred_heading_class", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "pred_heading_residual", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "box_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size", "(", "int", "(", "pred_size_class", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "pred_size_residual", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "corners_3d_upright_camera", "=", "get_3d_box", "(", "box_size", ",", "heading_angle", ",", "pred_center_upright_camera", "[", "i", ",", "j", ",", ":", "]", ")", "\n", "pred_corners_3d_upright_camera", "[", "i", ",", "j", "]", "=", "corners_3d_upright_camera", "\n", "\n", "", "", "K", "=", "pred_center", ".", "shape", "[", "1", "]", "# K==num_proposal", "\n", "nonempty_box_mask", "=", "np", ".", "ones", "(", "(", "bsize", ",", "K", ")", ")", "\n", "\n", "if", "config_dict", "[", "'remove_empty_box'", "]", ":", "\n", "# -------------------------------------", "\n", "# Remove predicted boxes without any point within them..", "\n", "        ", "batch_pc", "=", "end_points", "[", "'point_clouds'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", ":", ",", ":", ",", "0", ":", "3", "]", "# B,N,3", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "pc", "=", "batch_pc", "[", "i", ",", ":", ",", ":", "]", "# (N,3)", "\n", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "box3d", "=", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", ":", "]", "# (8,3)", "\n", "box3d", "=", "flip_axis_to_depth", "(", "box3d", ")", "\n", "pc_in_box", ",", "inds", "=", "extract_pc_in_box3d", "(", "pc", ",", "box3d", ")", "\n", "if", "len", "(", "pc_in_box", ")", "<", "5", ":", "\n", "                    ", "nonempty_box_mask", "[", "i", ",", "j", "]", "=", "0", "\n", "# -------------------------------------", "\n", "\n", "", "", "", "", "obj_logits", "=", "end_points", "[", "'objectness_scores'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "obj_prob", "=", "softmax", "(", "obj_logits", ")", "[", ":", ",", ":", ",", "1", "]", "# (B,K)", "\n", "if", "not", "config_dict", "[", "'use_3d_nms'", "]", ":", "\n", "# ---------- NMS input: pred_with_prob in (B,K,7) -----------", "\n", "        ", "pred_mask", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "boxes_2d_with_prob", "=", "np", ".", "zeros", "(", "(", "K", ",", "5", ")", ")", "\n", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "boxes_2d_with_prob", "[", "j", ",", "0", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_2d_with_prob", "[", "j", ",", "2", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_2d_with_prob", "[", "j", ",", "1", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_2d_with_prob", "[", "j", ",", "3", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_2d_with_prob", "[", "j", ",", "4", "]", "=", "obj_prob", "[", "i", ",", "j", "]", "\n", "", "nonempty_box_inds", "=", "np", ".", "where", "(", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ")", "[", "0", "]", "\n", "pick", "=", "nms_2d_faster", "(", "boxes_2d_with_prob", "[", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "config_dict", "[", "'nms_iou'", "]", ",", "config_dict", "[", "'use_old_type_nms'", "]", ")", "\n", "assert", "(", "len", "(", "pick", ")", ">", "0", ")", "\n", "pred_mask", "[", "i", ",", "nonempty_box_inds", "[", "pick", "]", "]", "=", "1", "\n", "", "end_points", "[", "'pred_mask'", "]", "=", "pred_mask", "\n", "# ---------- NMS output: pred_mask in (B,K) -----------", "\n", "", "elif", "config_dict", "[", "'use_3d_nms'", "]", "and", "(", "not", "config_dict", "[", "'cls_nms'", "]", ")", ":", "\n", "# ---------- NMS input: pred_with_prob in (B,K,7) -----------", "\n", "        ", "pred_mask", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "boxes_3d_with_prob", "=", "np", ".", "zeros", "(", "(", "K", ",", "7", ")", ")", "\n", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "boxes_3d_with_prob", "[", "j", ",", "0", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "1", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "2", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "3", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "4", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "5", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "6", "]", "=", "obj_prob", "[", "i", ",", "j", "]", "\n", "", "nonempty_box_inds", "=", "np", ".", "where", "(", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ")", "[", "0", "]", "\n", "pick", "=", "nms_3d_faster", "(", "boxes_3d_with_prob", "[", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "config_dict", "[", "'nms_iou'", "]", ",", "config_dict", "[", "'use_old_type_nms'", "]", ")", "\n", "assert", "(", "len", "(", "pick", ")", ">", "0", ")", "\n", "pred_mask", "[", "i", ",", "nonempty_box_inds", "[", "pick", "]", "]", "=", "1", "\n", "", "end_points", "[", "'pred_mask'", "]", "=", "pred_mask", "\n", "# ---------- NMS output: pred_mask in (B,K) -----------", "\n", "", "elif", "config_dict", "[", "'use_3d_nms'", "]", "and", "config_dict", "[", "'cls_nms'", "]", ":", "\n", "# ---------- NMS input: pred_with_prob in (B,K,8) -----------", "\n", "        ", "pred_mask", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "            ", "boxes_3d_with_prob", "=", "np", ".", "zeros", "(", "(", "K", ",", "8", ")", ")", "\n", "for", "j", "in", "range", "(", "K", ")", ":", "\n", "                ", "boxes_3d_with_prob", "[", "j", ",", "0", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "1", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "2", "]", "=", "np", ".", "min", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "3", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "0", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "4", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "1", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "5", "]", "=", "np", ".", "max", "(", "pred_corners_3d_upright_camera", "[", "i", ",", "j", ",", ":", ",", "2", "]", ")", "\n", "boxes_3d_with_prob", "[", "j", ",", "6", "]", "=", "obj_prob", "[", "i", ",", "j", "]", "\n", "boxes_3d_with_prob", "[", "j", ",", "7", "]", "=", "pred_sem_cls", "[", "i", ",", "j", "]", "# only suppress if the two boxes are of the same class!!", "\n", "", "nonempty_box_inds", "=", "np", ".", "where", "(", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ")", "[", "0", "]", "\n", "pick", "=", "nms_3d_faster_samecls", "(", "boxes_3d_with_prob", "[", "nonempty_box_mask", "[", "i", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "config_dict", "[", "'nms_iou'", "]", ",", "config_dict", "[", "'use_old_type_nms'", "]", ")", "\n", "assert", "(", "len", "(", "pick", ")", ">", "0", ")", "\n", "pred_mask", "[", "i", ",", "nonempty_box_inds", "[", "pick", "]", "]", "=", "1", "\n", "", "end_points", "[", "'pred_mask'", "]", "=", "pred_mask", "\n", "# ---------- NMS output: pred_mask in (B,K) -----------", "\n", "\n", "", "batch_pred_map_cls", "=", "[", "]", "# a list (len: batch_size) of list (len: num of predictions per sample) of tuples of pred_cls, pred_box and conf (0-1)", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "if", "config_dict", "[", "'per_class_proposal'", "]", ":", "\n", "            ", "cur_list", "=", "[", "]", "\n", "for", "ii", "in", "range", "(", "config_dict", "[", "'dataset_config'", "]", ".", "num_class", ")", ":", "\n", "                ", "cur_list", "+=", "[", "(", "ii", ",", "pred_corners_3d_upright_camera", "[", "i", ",", "j", "]", ",", "sem_cls_probs", "[", "i", ",", "j", ",", "ii", "]", "*", "obj_prob", "[", "i", ",", "j", "]", ")", "for", "j", "in", "range", "(", "pred_center", ".", "shape", "[", "1", "]", ")", "if", "pred_mask", "[", "i", ",", "j", "]", "==", "1", "and", "obj_prob", "[", "i", ",", "j", "]", ">", "config_dict", "[", "'conf_thresh'", "]", "]", "\n", "", "batch_pred_map_cls", ".", "append", "(", "cur_list", ")", "\n", "", "else", ":", "\n", "            ", "batch_pred_map_cls", ".", "append", "(", "[", "(", "pred_sem_cls", "[", "i", ",", "j", "]", ".", "item", "(", ")", ",", "pred_corners_3d_upright_camera", "[", "i", ",", "j", "]", ",", "obj_prob", "[", "i", ",", "j", "]", ")", "for", "j", "in", "range", "(", "pred_center", ".", "shape", "[", "1", "]", ")", "if", "pred_mask", "[", "i", ",", "j", "]", "==", "1", "and", "obj_prob", "[", "i", ",", "j", "]", ">", "config_dict", "[", "'conf_thresh'", "]", "]", ")", "\n", "", "", "end_points", "[", "'batch_pred_map_cls'", "]", "=", "batch_pred_map_cls", "\n", "\n", "return", "batch_pred_map_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.ap_helper.parse_groundtruths": [[188, 231], ["numpy.zeros", "ap_helper.flip_axis_to_camera", "range", "range", "center_label[].detach().cpu().numpy", "range", "batch_gt_map_cls.append", "config_dict[].class2angle", "config_dict[].class2size", "lib.utils.box_util.get_3d_box", "center_label[].detach().cpu", "heading_class_label[].detach().cpu().numpy", "heading_residual_label[].detach().cpu().numpy", "int", "size_residual_label[].detach().cpu().numpy", "size_class_label[].detach().cpu().numpy", "sem_cls_label[].item", "range", "center_label[].detach", "heading_class_label[].detach().cpu", "heading_residual_label[].detach().cpu", "size_residual_label[].detach().cpu", "size_class_label[].detach().cpu", "heading_class_label[].detach", "heading_residual_label[].detach", "size_residual_label[].detach", "size_class_label[].detach"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.flip_axis_to_camera", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.get_3d_box"], ["", "def", "parse_groundtruths", "(", "end_points", ",", "config_dict", ")", ":", "\n", "    ", "\"\"\" Parse groundtruth labels to OBB parameters.\n    \n    Args:\n        end_points: dict\n            {center_label, heading_class_label, heading_residual_label,\n            size_class_label, size_residual_label, sem_cls_label,\n            box_label_mask}\n        config_dict: dict\n            {dataset_config}\n\n    Returns:\n        batch_gt_map_cls: a list  of len == batch_size (BS)\n            [gt_list_i], i = 0, 1, ..., BS-1\n            where gt_list_i = [(gt_sem_cls, gt_box_params)_j]\n            where j = 0, ..., num of objects - 1 at sample input i\n    \"\"\"", "\n", "center_label", "=", "end_points", "[", "'center_label'", "]", "\n", "heading_class_label", "=", "end_points", "[", "'heading_class_label'", "]", "\n", "heading_residual_label", "=", "end_points", "[", "'heading_residual_label'", "]", "\n", "size_class_label", "=", "end_points", "[", "'size_class_label'", "]", "\n", "size_residual_label", "=", "end_points", "[", "'size_residual_label'", "]", "\n", "box_label_mask", "=", "end_points", "[", "'box_label_mask'", "]", "\n", "sem_cls_label", "=", "end_points", "[", "'sem_cls_label'", "]", "\n", "bsize", "=", "center_label", ".", "shape", "[", "0", "]", "\n", "\n", "K2", "=", "center_label", ".", "shape", "[", "1", "]", "# K2==MAX_NUM_OBJ", "\n", "gt_corners_3d_upright_camera", "=", "np", ".", "zeros", "(", "(", "bsize", ",", "K2", ",", "8", ",", "3", ")", ")", "\n", "gt_center_upright_camera", "=", "flip_axis_to_camera", "(", "center_label", "[", ":", ",", ":", ",", "0", ":", "3", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "K2", ")", ":", "\n", "            ", "if", "box_label_mask", "[", "i", ",", "j", "]", "==", "0", ":", "continue", "\n", "heading_angle", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2angle", "(", "heading_class_label", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "heading_residual_label", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "box_size", "=", "config_dict", "[", "'dataset_config'", "]", ".", "class2size", "(", "int", "(", "size_class_label", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "size_residual_label", "[", "i", ",", "j", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "corners_3d_upright_camera", "=", "get_3d_box", "(", "box_size", ",", "heading_angle", ",", "gt_center_upright_camera", "[", "i", ",", "j", ",", ":", "]", ")", "\n", "gt_corners_3d_upright_camera", "[", "i", ",", "j", "]", "=", "corners_3d_upright_camera", "\n", "\n", "", "", "batch_gt_map_cls", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "bsize", ")", ":", "\n", "        ", "batch_gt_map_cls", ".", "append", "(", "[", "(", "sem_cls_label", "[", "i", ",", "j", "]", ".", "item", "(", ")", ",", "gt_corners_3d_upright_camera", "[", "i", ",", "j", "]", ")", "for", "j", "in", "range", "(", "gt_corners_3d_upright_camera", ".", "shape", "[", "1", "]", ")", "if", "box_label_mask", "[", "i", ",", "j", "]", "==", "1", "]", ")", "\n", "", "end_points", "[", "'batch_gt_map_cls'", "]", "=", "batch_gt_map_cls", "\n", "\n", "return", "batch_gt_map_cls", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.votenet.VoteNet.__init__": [[46, 79], ["torch.Module.__init__", "voting_module.VotingModule", "proposal_module.ProposalModule", "backbone_module.Pointnet2Backbone", "backbone_module.SparseConvBackbone"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "mean_size_arr", ",", "\n", "input_feature_dim", "=", "0", ",", "num_proposal", "=", "128", ",", "vote_factor", "=", "1", ",", "sampling", "=", "'vote_fps'", ",", "\n", "backbone", "=", "'pointnet2'", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "num_heading_bin", "=", "num_heading_bin", "\n", "self", ".", "num_size_cluster", "=", "num_size_cluster", "\n", "self", ".", "mean_size_arr", "=", "mean_size_arr", "\n", "assert", "(", "mean_size_arr", ".", "shape", "[", "0", "]", "==", "self", ".", "num_size_cluster", ")", "\n", "self", ".", "input_feature_dim", "=", "input_feature_dim", "\n", "self", ".", "num_proposal", "=", "num_proposal", "\n", "self", ".", "vote_factor", "=", "vote_factor", "\n", "self", ".", "sampling", "=", "sampling", "\n", "self", ".", "backbone", "=", "backbone", "\n", "\n", "# Backbone point feature learning", "\n", "if", "backbone", "==", "'pointnet2'", ":", "\n", "            ", "self", ".", "backbone_net", "=", "Pointnet2Backbone", "(", "input_feature_dim", "=", "self", ".", "input_feature_dim", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "backbone_net", "=", "SparseConvBackbone", "(", "\n", "input_feature_dim", "=", "self", ".", "input_feature_dim", "+", "3", ",", "\n", "output_feature_dim", "=", "256", ",", "\n", "num_seed", "=", "1024", ")", "\n", "\n", "# from pdb import set_trace; set_trace()", "\n", "\n", "# Hough voting", "\n", "", "self", ".", "vgen", "=", "VotingModule", "(", "self", ".", "vote_factor", ",", "256", ")", "\n", "\n", "# Vote aggregation and detection", "\n", "self", ".", "pnet", "=", "ProposalModule", "(", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "\n", "mean_size_arr", ",", "num_proposal", ",", "sampling", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.votenet.VoteNet.forward": [[80, 128], ["votenet.VoteNet.vgen", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "features.div.div.div", "votenet.VoteNet.pnet", "votenet.VoteNet.backbone_net", "votenet.VoteNet.backbone_net", "torch.norm.unsqueeze", "torch.norm.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "\"\"\" Forward pass of the network\n\n        Args:\n            inputs: dict\n                {point_clouds}\n\n                point_clouds: Variable(torch.cuda.FloatTensor)\n                    (B, N, 3 + input_channels) tensor\n                    Point cloud to run predicts on\n                    Each point in the point-cloud MUST\n                    be formated as (x, y, z, features...)\n        Returns:\n            end_points: dict\n        \"\"\"", "\n", "end_points", "=", "{", "}", "\n", "batch_size", "=", "inputs", "[", "'point_clouds'", "]", ".", "shape", "[", "0", "]", "\n", "\n", "if", "self", ".", "backbone", "==", "'pointnet2'", ":", "\n", "            ", "end_points", "=", "self", ".", "backbone_net", "(", "\n", "inputs", "[", "'point_clouds'", "]", ",", "end_points", ")", "\n", "", "else", ":", "\n", "            ", "end_points", "=", "self", ".", "backbone_net", "(", "\n", "inputs", "[", "'point_clouds'", "]", ",", "\n", "inputs", "[", "'voxel_coords'", "]", ",", "\n", "inputs", "[", "'voxel_feats'", "]", ",", "\n", "inputs", "[", "'voxel_inds'", "]", ",", "\n", "end_points", ")", "\n", "\n", "\n", "# from pdb import set_trace; set_trace()", "\n", "\n", "# --------- HOUGH VOTING ---------", "\n", "", "xyz", "=", "end_points", "[", "'fp2_xyz'", "]", "\n", "features", "=", "end_points", "[", "'fp2_features'", "]", "\n", "end_points", "[", "'seed_inds'", "]", "=", "end_points", "[", "'fp2_inds'", "]", "\n", "end_points", "[", "'seed_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'seed_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", "=", "self", ".", "vgen", "(", "xyz", ",", "features", ")", "\n", "features_norm", "=", "torch", ".", "norm", "(", "features", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "features", "=", "features", ".", "div", "(", "features_norm", ".", "unsqueeze", "(", "1", ")", ")", "\n", "end_points", "[", "'vote_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'vote_features'", "]", "=", "features", "\n", "\n", "end_points", "=", "self", ".", "pnet", "(", "xyz", ",", "features", ",", "end_points", ")", "\n", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.softmax": [[14, 20], ["numpy.exp", "numpy.sum", "numpy.max", "len", "len"], "function", ["None"], ["def", "softmax", "(", "x", ")", ":", "\n", "    ", "''' Numpy function for softmax'''", "\n", "shape", "=", "x", ".", "shape", "\n", "probs", "=", "np", ".", "exp", "(", "x", "-", "np", ".", "max", "(", "x", ",", "axis", "=", "len", "(", "shape", ")", "-", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "probs", "/=", "np", ".", "sum", "(", "probs", ",", "axis", "=", "len", "(", "shape", ")", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.dump_results": [[21, 139], ["end_points[].cpu().numpy", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "torch.argmax", "torch.gather", "pred_heading_class.detach().cpu().numpy.detach().cpu().numpy", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu().numpy", "torch.argmax", "torch.gather", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu().numpy", "range", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].cpu().numpy", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "range", "os.path.exists", "os.system", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "pred_heading_class.detach().cpu().numpy.unsqueeze", "torch.argmax.unsqueeze().unsqueeze().repeat", "lib.utils.pc_util.write_ply", "lib.utils.pc_util.write_ply", "lib.utils.pc_util.write_ply", "lib.utils.pc_util.write_ply", "lib.utils.pc_util.write_ply_color", "range", "range", "range", "end_points[].cpu", "end_points[].detach().cpu", "end_points[].detach().cpu", "end_points[].detach().cpu", "pred_heading_class.detach().cpu().numpy.detach().cpu", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu", "dump_helper.softmax", "os.path.join", "os.path.join", "lib.utils.pc_util.write_ply", "lib.utils.pc_util.write_ply", "lib.utils.pc_util.write_ply", "os.path.join", "numpy.sum", "lib.utils.pc_util.write_ply", "numpy.sum", "range", "end_points[].cpu", "end_points[].cpu", "end_points[].cpu", "end_points[].cpu", "end_points[].cpu", "end_points[].cpu", "end_points[].detach().cpu", "end_points[].detach().cpu", "numpy.sum", "lib.utils.pc_util.write_ply", "numpy.sum", "lib.utils.pc_util.write_ply", "os.path.join", "os.path.join", "config.param2obb", "np.vstack.append", "len", "numpy.vstack", "lib.utils.pc_util.write_oriented_bbox", "open", "open.close", "open", "open.close", "end_points[].detach().cpu", "end_points[].detach().cpu", "end_points[].detach().cpu", "torch.argmax.unsqueeze().unsqueeze", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "config.param2obb", "np.vstack.append", "len", "numpy.vstack", "lib.utils.pc_util.write_oriented_bbox", "lib.utils.pc_util.write_oriented_bbox", "lib.utils.pc_util.write_oriented_bbox", "lib.utils.pc_util.write_oriented_bbox", "os.path.join", "os.path.join", "tuple", "os.path.join", "os.path.join", "open.write", "open.write", "open.write", "open.write", "os.path.join", "open.write", "open.write", "open.write", "end_points[].detach", "end_points[].detach", "end_points[].detach", "pred_heading_class.detach().cpu().numpy.detach", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze().detach", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze().detach", "tuple", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "end_points[].detach", "end_points[].detach", "end_points[].detach", "end_points[].detach", "end_points[].detach", "torch.argmax.unsqueeze", "str", "str", "str", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze", "str", "str", "numpy.logical_and", "list", "list", "t[].flatten", "t[].flatten"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply_color", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.softmax", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.param2obb", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.param2obb", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "dump_results", "(", "end_points", ",", "dump_dir", ",", "config", ",", "inference_switch", "=", "False", ")", ":", "\n", "    ", "''' Dump results.\n\n    Args:\n        end_points: dict\n            {..., pred_mask}\n            pred_mask is a binary mask array of size (batch_size, num_proposal) computed by running NMS and empty box removal\n    Returns:\n        None\n    '''", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "dump_dir", ")", ":", "\n", "        ", "os", ".", "system", "(", "'mkdir %s'", "%", "(", "dump_dir", ")", ")", "\n", "\n", "# INPUT", "\n", "", "point_clouds", "=", "end_points", "[", "'point_clouds'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "batch_size", "=", "point_clouds", ".", "shape", "[", "0", "]", "\n", "\n", "# NETWORK OUTPUTS", "\n", "seed_xyz", "=", "end_points", "[", "'seed_xyz'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,num_seed,3)", "\n", "if", "'vote_xyz'", "in", "end_points", ":", "\n", "        ", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "vote_xyz", "=", "end_points", "[", "'vote_xyz'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,num_seed,3)", "\n", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "objectness_scores", "=", "end_points", "[", "'objectness_scores'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,2)", "\n", "pred_center", "=", "end_points", "[", "'center'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,3)", "\n", "pred_heading_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'heading_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_heading_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_residuals'", "]", ",", "2", ",", "pred_heading_class", ".", "unsqueeze", "(", "-", "1", ")", ")", "# B,num_proposal,1", "\n", "pred_heading_class", "=", "pred_heading_class", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,num_proposal", "\n", "pred_heading_residual", "=", "pred_heading_residual", ".", "squeeze", "(", "2", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,num_proposal", "\n", "pred_size_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'size_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_size_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_residuals'", "]", ",", "2", ",", "pred_size_class", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", ")", "# B,num_proposal,1,3", "\n", "pred_size_residual", "=", "pred_size_residual", ".", "squeeze", "(", "2", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,num_proposal,3", "\n", "\n", "# OTHERS", "\n", "pred_mask", "=", "end_points", "[", "'pred_mask'", "]", "# B,num_proposal", "\n", "idx_beg", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "pc", "=", "point_clouds", "[", "i", ",", ":", ",", ":", "]", "\n", "objectness_prob", "=", "softmax", "(", "objectness_scores", "[", "i", ",", ":", ",", ":", "]", ")", "[", ":", ",", "1", "]", "# (K,)", "\n", "\n", "# Dump various point clouds", "\n", "pc_util", ".", "write_ply", "(", "pc", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "seed_xyz", "[", "i", ",", ":", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_seed_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "if", "'vote_xyz'", "in", "end_points", ":", "\n", "            ", "pc_util", ".", "write_ply", "(", "end_points", "[", "'vote_xyz'", "]", "[", "i", ",", ":", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_vgen_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "aggregated_vote_xyz", "[", "i", ",", ":", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_aggregated_vote_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "aggregated_vote_xyz", "[", "i", ",", ":", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_aggregated_vote_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "", "pc_util", ".", "write_ply", "(", "pred_center", "[", "i", ",", ":", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_proposal_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "if", "np", ".", "sum", "(", "objectness_prob", ">", "DUMP_CONF_THRESH", ")", ">", "0", ":", "\n", "            ", "pc_util", ".", "write_ply", "(", "pred_center", "[", "i", ",", "objectness_prob", ">", "DUMP_CONF_THRESH", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_confident_proposal_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "\n", "# Dump predicted bounding boxes", "\n", "", "if", "np", ".", "sum", "(", "objectness_prob", ">", "DUMP_CONF_THRESH", ")", ">", "0", ":", "\n", "            ", "num_proposal", "=", "pred_center", ".", "shape", "[", "1", "]", "\n", "obbs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "num_proposal", ")", ":", "\n", "                ", "obb", "=", "config", ".", "param2obb", "(", "pred_center", "[", "i", ",", "j", ",", "0", ":", "3", "]", ",", "pred_heading_class", "[", "i", ",", "j", "]", ",", "pred_heading_residual", "[", "i", ",", "j", "]", ",", "\n", "pred_size_class", "[", "i", ",", "j", "]", ",", "pred_size_residual", "[", "i", ",", "j", "]", ")", "\n", "obbs", ".", "append", "(", "obb", ")", "\n", "", "if", "len", "(", "obbs", ")", ">", "0", ":", "\n", "                ", "obbs", "=", "np", ".", "vstack", "(", "tuple", "(", "obbs", ")", ")", "# (num_proposal, 7)", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", "[", "objectness_prob", ">", "DUMP_CONF_THRESH", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_confident_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", "[", "np", ".", "logical_and", "(", "objectness_prob", ">", "DUMP_CONF_THRESH", ",", "pred_mask", "[", "i", ",", ":", "]", "==", "1", ")", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_confident_nms_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", "[", "pred_mask", "[", "i", ",", ":", "]", "==", "1", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_nms_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "\n", "# Return if it is at inference time. No dumping of groundtruths", "\n", "", "", "", "if", "inference_switch", ":", "\n", "        ", "return", "\n", "\n", "# LABELS", "\n", "", "gt_center", "=", "end_points", "[", "'center_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,MAX_NUM_OBJ,3)", "\n", "gt_mask", "=", "end_points", "[", "'box_label_mask'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2", "\n", "gt_heading_class", "=", "end_points", "[", "'heading_class_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2", "\n", "gt_heading_residual", "=", "end_points", "[", "'heading_residual_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2", "\n", "gt_size_class", "=", "end_points", "[", "'size_class_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2", "\n", "gt_size_residual", "=", "end_points", "[", "'size_residual_label'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,K2,3", "\n", "objectness_label", "=", "end_points", "[", "'objectness_label'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,)", "\n", "objectness_mask", "=", "end_points", "[", "'objectness_mask'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,)", "\n", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "if", "np", ".", "sum", "(", "objectness_label", "[", "i", ",", ":", "]", ")", ">", "0", ":", "\n", "            ", "pc_util", ".", "write_ply", "(", "pred_center", "[", "i", ",", "objectness_label", "[", "i", ",", ":", "]", ">", "0", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_positive_proposal_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "", "if", "np", ".", "sum", "(", "objectness_mask", "[", "i", ",", ":", "]", ")", ">", "0", ":", "\n", "            ", "pc_util", ".", "write_ply", "(", "pred_center", "[", "i", ",", "objectness_mask", "[", "i", ",", ":", "]", ">", "0", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_mask_proposal_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "", "pc_util", ".", "write_ply", "(", "gt_center", "[", "i", ",", ":", ",", "0", ":", "3", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_centroid_pc.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "pc_util", ".", "write_ply_color", "(", "pred_center", "[", "i", ",", ":", ",", "0", ":", "3", "]", ",", "objectness_label", "[", "i", ",", ":", "]", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_proposal_pc_objectness_label.obj'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "\n", "# Dump GT bounding boxes", "\n", "obbs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "gt_center", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "if", "gt_mask", "[", "i", ",", "j", "]", "==", "0", ":", "continue", "\n", "obb", "=", "config", ".", "param2obb", "(", "gt_center", "[", "i", ",", "j", ",", "0", ":", "3", "]", ",", "gt_heading_class", "[", "i", ",", "j", "]", ",", "gt_heading_residual", "[", "i", ",", "j", "]", ",", "\n", "gt_size_class", "[", "i", ",", "j", "]", ",", "gt_size_residual", "[", "i", ",", "j", "]", ")", "\n", "obbs", ".", "append", "(", "obb", ")", "\n", "", "if", "len", "(", "obbs", ")", ">", "0", ":", "\n", "            ", "obbs", "=", "np", ".", "vstack", "(", "tuple", "(", "obbs", ")", ")", "# (num_gt_objects, 7)", "\n", "pc_util", ".", "write_oriented_bbox", "(", "obbs", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_bbox.ply'", "%", "(", "idx_beg", "+", "i", ")", ")", ")", "\n", "\n", "# OPTIONALL, also dump prediction and gt details", "\n", "", "", "if", "'batch_pred_map_cls'", "in", "end_points", ":", "\n", "        ", "for", "ii", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "fout", "=", "open", "(", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_pred_map_cls.txt'", "%", "(", "ii", ")", ")", ",", "'w'", ")", "\n", "for", "t", "in", "end_points", "[", "'batch_pred_map_cls'", "]", "[", "ii", "]", ":", "\n", "                ", "fout", ".", "write", "(", "str", "(", "t", "[", "0", "]", ")", "+", "' '", ")", "\n", "fout", ".", "write", "(", "\",\"", ".", "join", "(", "[", "str", "(", "x", ")", "for", "x", "in", "list", "(", "t", "[", "1", "]", ".", "flatten", "(", ")", ")", "]", ")", ")", "\n", "fout", ".", "write", "(", "' '", "+", "str", "(", "t", "[", "2", "]", ")", ")", "\n", "fout", ".", "write", "(", "'\\n'", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "", "", "if", "'batch_gt_map_cls'", "in", "end_points", ":", "\n", "        ", "for", "ii", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "fout", "=", "open", "(", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'%06d_gt_map_cls.txt'", "%", "(", "ii", ")", ")", ",", "'w'", ")", "\n", "for", "t", "in", "end_points", "[", "'batch_gt_map_cls'", "]", "[", "ii", "]", ":", "\n", "                ", "fout", ".", "write", "(", "str", "(", "t", "[", "0", "]", ")", "+", "' '", ")", "\n", "fout", ".", "write", "(", "\",\"", ".", "join", "(", "[", "str", "(", "x", ")", "for", "x", "in", "list", "(", "t", "[", "1", "]", ".", "flatten", "(", ")", ")", "]", ")", ")", "\n", "fout", ".", "write", "(", "'\\n'", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.dump_results_": [[140, 192], ["end_points[].cpu().numpy", "end_points[].detach().cpu().numpy", "end_points[].detach().cpu().numpy", "torch.argmax", "torch.gather", "pred_heading_class.detach().cpu().numpy.detach().cpu().numpy", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu().numpy", "torch.argmax", "torch.gather", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu().numpy", "str", "os.makedirs", "lib.utils.pc_util.write_ply", "os.path.exists", "os.system", "pred_heading_class.detach().cpu().numpy.unsqueeze", "torch.argmax.unsqueeze().unsqueeze().repeat", "dump_helper.softmax", "os.path.join", "os.path.join", "numpy.sum", "range", "enumerate", "end_points[].cpu", "end_points[].detach().cpu", "end_points[].detach().cpu", "pred_heading_class.detach().cpu().numpy.detach().cpu", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze().detach().cpu", "str.cpu().numpy", "config.param2obb", "np.vstack.append", "len", "numpy.vstack", "lib.utils.pc_util.write_oriented_bbox_", "torch.argmax.unsqueeze().unsqueeze", "tuple", "os.path.join", "end_points[].detach", "end_points[].detach", "pred_heading_class.detach().cpu().numpy.detach", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze().detach", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze().detach", "str.cpu", "torch.argmax.unsqueeze", "numpy.logical_and", "pred_heading_residual.squeeze().detach().cpu().numpy.squeeze", "pred_size_residual.squeeze().detach().cpu().numpy.squeeze"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.dump_helper.softmax", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.param2obb", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox_"], ["", "", "", "def", "dump_results_", "(", "end_points", ",", "dump_dir", ",", "config", ")", ":", "\n", "    ", "''' Dump results.\n\n    Args:\n        end_points: dict\n            {..., pred_mask}\n            pred_mask is a binary mask array of size (batch_size, num_proposal) computed by running NMS and empty box removal\n    Returns:\n        None\n    '''", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "dump_dir", ")", ":", "\n", "        ", "os", ".", "system", "(", "'mkdir %s'", "%", "(", "dump_dir", ")", ")", "\n", "\n", "# INPUT", "\n", "", "point_clouds", "=", "end_points", "[", "'point_clouds'", "]", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "batch_size", "=", "point_clouds", ".", "shape", "[", "0", "]", "\n", "\n", "# NETWORK OUTPUTS", "\n", "objectness_scores", "=", "end_points", "[", "'objectness_scores'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,2)", "\n", "pred_center", "=", "end_points", "[", "'center'", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# (B,K,3)", "\n", "pred_heading_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'heading_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_heading_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_residuals'", "]", ",", "2", ",", "pred_heading_class", ".", "unsqueeze", "(", "-", "1", ")", ")", "# B,num_proposal,1", "\n", "pred_heading_class", "=", "pred_heading_class", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,num_proposal", "\n", "pred_heading_residual", "=", "pred_heading_residual", ".", "squeeze", "(", "2", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,num_proposal", "\n", "pred_size_class", "=", "torch", ".", "argmax", "(", "end_points", "[", "'size_scores'", "]", ",", "-", "1", ")", "# B,num_proposal", "\n", "pred_size_residual", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_residuals'", "]", ",", "2", ",", "pred_size_class", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", ")", "# B,num_proposal,1,3", "\n", "pred_size_residual", "=", "pred_size_residual", ".", "squeeze", "(", "2", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# B,num_proposal,3", "\n", "\n", "# OTHERS", "\n", "pred_mask", "=", "end_points", "[", "'pred_mask'", "]", "# B,num_proposal", "\n", "pc", "=", "point_clouds", "[", "0", ",", ":", ",", ":", "]", "\n", "objectness_prob", "=", "softmax", "(", "objectness_scores", "[", "0", ",", ":", ",", ":", "]", ")", "[", ":", ",", "1", "]", "# (K,)", "\n", "\n", "# Dump various point clouds", "\n", "scan_idx", "=", "end_points", "[", "'scan_idx'", "]", "\n", "scan_idx", "=", "str", "(", "scan_idx", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "0", "]", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "scan_idx", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "pc", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "scan_idx", ",", "'pc.ply'", ")", ")", "\n", "\n", "# Dump predicted bounding boxes", "\n", "if", "np", ".", "sum", "(", "objectness_prob", ">", "DUMP_CONF_THRESH", ")", ">", "0", ":", "\n", "        ", "num_proposal", "=", "pred_center", ".", "shape", "[", "1", "]", "\n", "obbs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "num_proposal", ")", ":", "\n", "            ", "obb", "=", "config", ".", "param2obb", "(", "pred_center", "[", "0", ",", "j", ",", "0", ":", "3", "]", ",", "pred_heading_class", "[", "0", ",", "j", "]", ",", "pred_heading_residual", "[", "0", ",", "j", "]", ",", "\n", "pred_size_class", "[", "0", ",", "j", "]", ",", "pred_size_residual", "[", "0", ",", "j", "]", ")", "\n", "obbs", ".", "append", "(", "obb", ")", "\n", "", "if", "len", "(", "obbs", ")", ">", "0", ":", "\n", "            ", "obbs", "=", "np", ".", "vstack", "(", "tuple", "(", "obbs", ")", ")", "# (num_proposal, 7)", "\n", "obbs", "=", "obbs", "[", "np", ".", "logical_and", "(", "objectness_prob", ">", "DUMP_CONF_THRESH", ",", "pred_mask", "[", "0", ",", ":", "]", "==", "1", ")", ",", ":", "]", "\n", "", "for", "idx", ",", "obb", "in", "enumerate", "(", "obbs", ")", ":", "\n", "            ", "pc_util", ".", "write_oriented_bbox_", "(", "obb", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "scan_idx", ",", "'{}.ply'", ".", "format", "(", "idx", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper.compute_vote_loss": [[18, 64], ["end_points[].long", "torch.gather", "torch.gather", "end_points[].long.view().repeat", "torch.gather", "torch.gather", "end_points[].repeat", "vote_xyz.view", "torch.gather.view", "lib.utils.nn_distance.nn_distance", "torch.min", "torch.min", "votes_dist.view.view", "torch.sum", "torch.sum", "end_points[].long.view", "torch.sum", "torch.sum", "torch.gather.float", "torch.gather.float"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.nn_distance"], ["def", "compute_vote_loss", "(", "end_points", ")", ":", "\n", "    ", "\"\"\" Compute vote loss: Match predicted votes to GT votes.\n\n    Args:\n        end_points: dict (read-only)\n    \n    Returns:\n        vote_loss: scalar Tensor\n            \n    Overall idea:\n        If the seed point belongs to an object (votes_label_mask == 1),\n        then we require it to vote for the object center.\n\n        Each seed point may vote for multiple translations v1,v2,v3\n        A seed point may also be in the boxes of multiple objects:\n        o1,o2,o3 with corresponding GT votes c1,c2,c3\n\n        Then the loss for this seed point is:\n            min(d(v_i,c_j)) for i=1,2,3 and j=1,2,3\n    \"\"\"", "\n", "\n", "# Load ground truth votes and assign them to seed points", "\n", "batch_size", "=", "end_points", "[", "'seed_xyz'", "]", ".", "shape", "[", "0", "]", "\n", "num_seed", "=", "end_points", "[", "'seed_xyz'", "]", ".", "shape", "[", "1", "]", "# B,num_seed,3", "\n", "vote_xyz", "=", "end_points", "[", "'vote_xyz'", "]", "# B,num_seed*vote_factor,3", "\n", "seed_inds", "=", "end_points", "[", "'seed_inds'", "]", ".", "long", "(", ")", "# B,num_seed in [0,num_points-1]", "\n", "\n", "# Get groundtruth votes for the seed points", "\n", "# vote_label_mask: Use gather to select B,num_seed from B,num_point", "\n", "#   non-object point has no GT vote mask = 0, object point has mask = 1", "\n", "# vote_label: Use gather to select B,num_seed,9 from B,num_point,9", "\n", "#   with inds in shape B,num_seed,9 and 9 = GT_VOTE_FACTOR * 3", "\n", "seed_gt_votes_mask", "=", "torch", ".", "gather", "(", "end_points", "[", "'vote_label_mask'", "]", ",", "1", ",", "seed_inds", ")", "\n", "seed_inds_expand", "=", "seed_inds", ".", "view", "(", "batch_size", ",", "num_seed", ",", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "3", "*", "GT_VOTE_FACTOR", ")", "\n", "seed_gt_votes", "=", "torch", ".", "gather", "(", "end_points", "[", "'vote_label'", "]", ",", "1", ",", "seed_inds_expand", ")", "\n", "seed_gt_votes", "+=", "end_points", "[", "'seed_xyz'", "]", ".", "repeat", "(", "1", ",", "1", ",", "3", ")", "\n", "\n", "# Compute the min of min of distance", "\n", "vote_xyz_reshape", "=", "vote_xyz", ".", "view", "(", "batch_size", "*", "num_seed", ",", "-", "1", ",", "3", ")", "# from B,num_seed*vote_factor,3 to B*num_seed,vote_factor,3", "\n", "seed_gt_votes_reshape", "=", "seed_gt_votes", ".", "view", "(", "batch_size", "*", "num_seed", ",", "GT_VOTE_FACTOR", ",", "3", ")", "# from B,num_seed,3*GT_VOTE_FACTOR to B*num_seed,GT_VOTE_FACTOR,3", "\n", "# A predicted vote to no where is not penalized as long as there is a good vote near the GT vote.", "\n", "dist1", ",", "_", ",", "dist2", ",", "_", "=", "nn_distance", "(", "vote_xyz_reshape", ",", "seed_gt_votes_reshape", ",", "l1", "=", "True", ")", "\n", "votes_dist", ",", "_", "=", "torch", ".", "min", "(", "dist2", ",", "dim", "=", "1", ")", "# (B*num_seed,vote_factor) to (B*num_seed,)", "\n", "votes_dist", "=", "votes_dist", ".", "view", "(", "batch_size", ",", "num_seed", ")", "\n", "vote_loss", "=", "torch", ".", "sum", "(", "votes_dist", "*", "seed_gt_votes_mask", ".", "float", "(", ")", ")", "/", "(", "torch", ".", "sum", "(", "seed_gt_votes_mask", ".", "float", "(", ")", ")", "+", "1e-6", ")", "\n", "return", "vote_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper.compute_objectness_loss": [[65, 106], ["lib.utils.nn_distance.nn_distance", "torch.sqrt", "torch.sqrt", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.Tensor().cuda", "torch.Tensor().cuda", "objectness_scores.transpose", "torch.sum", "torch.sum", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.sum", "torch.sum", "torch.Tensor", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.nn_distance"], ["", "def", "compute_objectness_loss", "(", "end_points", ")", ":", "\n", "    ", "\"\"\" Compute objectness loss for the proposals.\n\n    Args:\n        end_points: dict (read-only)\n\n    Returns:\n        objectness_loss: scalar Tensor\n        objectness_label: (batch_size, num_seed) Tensor with value 0 or 1\n        objectness_mask: (batch_size, num_seed) Tensor with value 0 or 1\n        object_assignment: (batch_size, num_seed) Tensor with long int\n            within [0,num_gt_object-1]\n    \"\"\"", "\n", "# Associate proposal and GT objects by point-to-point distances", "\n", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", "\n", "gt_center", "=", "end_points", "[", "'center_label'", "]", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "B", "=", "gt_center", ".", "shape", "[", "0", "]", "\n", "K", "=", "aggregated_vote_xyz", ".", "shape", "[", "1", "]", "\n", "K2", "=", "gt_center", ".", "shape", "[", "1", "]", "\n", "dist1", ",", "ind1", ",", "dist2", ",", "_", "=", "nn_distance", "(", "aggregated_vote_xyz", ",", "gt_center", ")", "# dist1: BxK, dist2: BxK2", "\n", "\n", "# Generate objectness label and mask", "\n", "# objectness_label: 1 if pred object center is within NEAR_THRESHOLD of any GT object", "\n", "# objectness_mask: 0 if pred object center is in gray zone (DONOTCARE), 1 otherwise", "\n", "euclidean_dist1", "=", "torch", ".", "sqrt", "(", "dist1", "+", "1e-6", ")", "\n", "objectness_label", "=", "torch", ".", "zeros", "(", "(", "B", ",", "K", ")", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "objectness_mask", "=", "torch", ".", "zeros", "(", "(", "B", ",", "K", ")", ")", ".", "cuda", "(", ")", "\n", "objectness_label", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", "<", "NEAR_THRESHOLD", "]", "=", "1", "\n", "objectness_mask", "[", "euclidean_dist1", ">", "FAR_THRESHOLD", "]", "=", "1", "\n", "\n", "# Compute objectness loss", "\n", "objectness_scores", "=", "end_points", "[", "'objectness_scores'", "]", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "torch", ".", "Tensor", "(", "OBJECTNESS_CLS_WEIGHTS", ")", ".", "cuda", "(", ")", ",", "reduction", "=", "'none'", ")", "\n", "objectness_loss", "=", "criterion", "(", "objectness_scores", ".", "transpose", "(", "2", ",", "1", ")", ",", "objectness_label", ")", "\n", "objectness_loss", "=", "torch", ".", "sum", "(", "objectness_loss", "*", "objectness_mask", ")", "/", "(", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "\n", "# Set assignment", "\n", "object_assignment", "=", "ind1", "# (B,K) with values in 0,1,...,K2-1", "\n", "\n", "return", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper.compute_box_and_sem_cls_loss": [[107, 182], ["lib.utils.nn_distance.nn_distance", "end_points[].float", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.gather", "torch.gather", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_.scatter_", "lib.utils.nn_distance.huber_loss", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.gather", "torch.gather", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_", "torch.cuda.FloatTensor().zero_.scatter_", "torch.cuda.FloatTensor().zero_.unsqueeze().repeat", "torch.sum", "torch.sum", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.sum", "torch.sum", "torch.mean", "torch.mean", "torch.gather", "torch.gather", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "end_points[].transpose", "torch.sum", "torch.sum", "torch.gather.unsqueeze", "torch.sum", "torch.sum", "end_points[].transpose", "torch.sum", "torch.sum", "object_assignment.unsqueeze().repeat", "torch.gather.unsqueeze", "lib.utils.nn_distance.huber_loss", "torch.sum", "torch.sum", "end_points[].transpose", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor().zero_.unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "object_assignment.unsqueeze", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy", "torch.from_numpy", "mean_size_arr.astype"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.nn_distance", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.huber_loss", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.huber_loss"], ["", "def", "compute_box_and_sem_cls_loss", "(", "end_points", ",", "config", ")", ":", "\n", "    ", "\"\"\" Compute 3D bounding box and semantic classification loss.\n\n    Args:\n        end_points: dict (read-only)\n\n    Returns:\n        center_loss\n        heading_cls_loss\n        heading_reg_loss\n        size_cls_loss\n        size_reg_loss\n        sem_cls_loss\n    \"\"\"", "\n", "\n", "num_heading_bin", "=", "config", ".", "num_heading_bin", "\n", "num_size_cluster", "=", "config", ".", "num_size_cluster", "\n", "num_class", "=", "config", ".", "num_class", "\n", "mean_size_arr", "=", "config", ".", "mean_size_arr", "\n", "\n", "object_assignment", "=", "end_points", "[", "'object_assignment'", "]", "\n", "batch_size", "=", "object_assignment", ".", "shape", "[", "0", "]", "\n", "\n", "# Compute center loss", "\n", "pred_center", "=", "end_points", "[", "'center'", "]", "\n", "gt_center", "=", "end_points", "[", "'center_label'", "]", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "dist1", ",", "ind1", ",", "dist2", ",", "_", "=", "nn_distance", "(", "pred_center", ",", "gt_center", ")", "# dist1: BxK, dist2: BxK2", "\n", "box_label_mask", "=", "end_points", "[", "'box_label_mask'", "]", "\n", "objectness_label", "=", "end_points", "[", "'objectness_label'", "]", ".", "float", "(", ")", "\n", "centroid_reg_loss1", "=", "torch", ".", "sum", "(", "dist1", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "centroid_reg_loss2", "=", "torch", ".", "sum", "(", "dist2", "*", "box_label_mask", ")", "/", "(", "torch", ".", "sum", "(", "box_label_mask", ")", "+", "1e-6", ")", "\n", "center_loss", "=", "centroid_reg_loss1", "+", "centroid_reg_loss2", "\n", "\n", "# Compute heading loss", "\n", "heading_class_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_class_label'", "]", ",", "1", ",", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_heading_class", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "heading_class_loss", "=", "criterion_heading_class", "(", "end_points", "[", "'heading_scores'", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "heading_class_label", ")", "# (B,K)", "\n", "heading_class_loss", "=", "torch", ".", "sum", "(", "heading_class_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "heading_residual_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'heading_residual_label'", "]", ",", "1", ",", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "heading_residual_normalized_label", "=", "heading_residual_label", "/", "(", "np", ".", "pi", "/", "num_heading_bin", ")", "\n", "\n", "# Ref: https://discuss.pytorch.org/t/convert-int-into-one-hot-format/507/3", "\n", "heading_label_one_hot", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "batch_size", ",", "heading_class_label", ".", "shape", "[", "1", "]", ",", "num_heading_bin", ")", ".", "zero_", "(", ")", "\n", "heading_label_one_hot", ".", "scatter_", "(", "2", ",", "heading_class_label", ".", "unsqueeze", "(", "-", "1", ")", ",", "1", ")", "# src==1 so it's *one-hot* (B,K,num_heading_bin)", "\n", "heading_residual_normalized_loss", "=", "huber_loss", "(", "torch", ".", "sum", "(", "end_points", "[", "'heading_residuals_normalized'", "]", "*", "heading_label_one_hot", ",", "-", "1", ")", "-", "heading_residual_normalized_label", ",", "delta", "=", "1.0", ")", "# (B,K)", "\n", "heading_residual_normalized_loss", "=", "torch", ".", "sum", "(", "heading_residual_normalized_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "# Compute size loss", "\n", "size_class_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_class_label'", "]", ",", "1", ",", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_size_class", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "size_class_loss", "=", "criterion_size_class", "(", "end_points", "[", "'size_scores'", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "size_class_label", ")", "# (B,K)", "\n", "size_class_loss", "=", "torch", ".", "sum", "(", "size_class_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "size_residual_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'size_residual_label'", "]", ",", "1", ",", "object_assignment", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "3", ")", ")", "# select (B,K,3) from (B,K2,3)", "\n", "size_label_one_hot", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "batch_size", ",", "size_class_label", ".", "shape", "[", "1", "]", ",", "num_size_cluster", ")", ".", "zero_", "(", ")", "\n", "size_label_one_hot", ".", "scatter_", "(", "2", ",", "size_class_label", ".", "unsqueeze", "(", "-", "1", ")", ",", "1", ")", "# src==1 so it's *one-hot* (B,K,num_size_cluster)", "\n", "size_label_one_hot_tiled", "=", "size_label_one_hot", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "3", ")", "# (B,K,num_size_cluster,3)", "\n", "predicted_size_residual_normalized", "=", "torch", ".", "sum", "(", "end_points", "[", "'size_residuals_normalized'", "]", "*", "size_label_one_hot_tiled", ",", "2", ")", "# (B,K,3)", "\n", "\n", "mean_size_arr_expanded", "=", "torch", ".", "from_numpy", "(", "mean_size_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "# (1,1,num_size_cluster,3) ", "\n", "mean_size_label", "=", "torch", ".", "sum", "(", "size_label_one_hot_tiled", "*", "mean_size_arr_expanded", ",", "2", ")", "# (B,K,3)", "\n", "size_residual_label_normalized", "=", "size_residual_label", "/", "mean_size_label", "# (B,K,3)", "\n", "size_residual_normalized_loss", "=", "torch", ".", "mean", "(", "huber_loss", "(", "predicted_size_residual_normalized", "-", "size_residual_label_normalized", ",", "delta", "=", "1.0", ")", ",", "-", "1", ")", "# (B,K,3) -> (B,K)", "\n", "size_residual_normalized_loss", "=", "torch", ".", "sum", "(", "size_residual_normalized_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "# 3.4 Semantic cls loss", "\n", "sem_cls_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'sem_cls_label'", "]", ",", "1", ",", "object_assignment", ")", "# select (B,K) from (B,K2)", "\n", "criterion_sem_cls", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "'none'", ")", "\n", "sem_cls_loss", "=", "criterion_sem_cls", "(", "end_points", "[", "'sem_cls_scores'", "]", ".", "transpose", "(", "2", ",", "1", ")", ",", "sem_cls_label", ")", "# (B,K)", "\n", "sem_cls_loss", "=", "torch", ".", "sum", "(", "sem_cls_loss", "*", "objectness_label", ")", "/", "(", "torch", ".", "sum", "(", "objectness_label", ")", "+", "1e-6", ")", "\n", "\n", "return", "center_loss", ",", "heading_class_loss", ",", "heading_residual_normalized_loss", ",", "size_class_loss", ",", "size_residual_normalized_loss", ",", "sem_cls_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper.get_loss": [[183, 248], ["loss_helper.compute_vote_loss", "loss_helper.compute_objectness_loss", "loss_helper.compute_box_and_sem_cls_loss", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "float", "torch.sum", "torch.sum", "objectness_label.float().cuda", "torch.sum", "torch.sum", "float", "torch.sum", "torch.sum", "objectness_mask.float", "objectness_label.float", "objectness_label.long"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper.compute_vote_loss", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper_boxnet.compute_objectness_loss", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper.compute_box_and_sem_cls_loss"], ["", "def", "get_loss", "(", "end_points", ",", "config", ")", ":", "\n", "    ", "\"\"\" Loss functions\n\n    Args:\n        end_points: dict\n            {   \n                seed_xyz, seed_inds, vote_xyz,\n                center,\n                heading_scores, heading_residuals_normalized,\n                size_scores, size_residuals_normalized,\n                sem_cls_scores, #seed_logits,#\n                center_label,\n                heading_class_label, heading_residual_label,\n                size_class_label, size_residual_label,\n                sem_cls_label,\n                box_label_mask,\n                vote_label, vote_label_mask\n            }\n        config: dataset config instance\n    Returns:\n        loss: pytorch scalar tensor\n        end_points: dict\n    \"\"\"", "\n", "\n", "# Vote loss", "\n", "vote_loss", "=", "compute_vote_loss", "(", "end_points", ")", "\n", "end_points", "[", "'vote_loss'", "]", "=", "vote_loss", "\n", "\n", "# Obj loss", "\n", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "=", "compute_objectness_loss", "(", "end_points", ")", "\n", "end_points", "[", "'objectness_loss'", "]", "=", "objectness_loss", "\n", "end_points", "[", "'objectness_label'", "]", "=", "objectness_label", "\n", "end_points", "[", "'objectness_mask'", "]", "=", "objectness_mask", "\n", "end_points", "[", "'object_assignment'", "]", "=", "object_assignment", "\n", "total_num_proposal", "=", "objectness_label", ".", "shape", "[", "0", "]", "*", "objectness_label", ".", "shape", "[", "1", "]", "\n", "end_points", "[", "'pos_ratio'", "]", "=", "torch", ".", "sum", "(", "objectness_label", ".", "float", "(", ")", ".", "cuda", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "\n", "end_points", "[", "'neg_ratio'", "]", "=", "torch", ".", "sum", "(", "objectness_mask", ".", "float", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "-", "end_points", "[", "'pos_ratio'", "]", "\n", "\n", "# Box loss and sem cls loss", "\n", "center_loss", ",", "heading_cls_loss", ",", "heading_reg_loss", ",", "size_cls_loss", ",", "size_reg_loss", ",", "sem_cls_loss", "=", "compute_box_and_sem_cls_loss", "(", "end_points", ",", "config", ")", "\n", "end_points", "[", "'center_loss'", "]", "=", "center_loss", "\n", "end_points", "[", "'heading_cls_loss'", "]", "=", "heading_cls_loss", "\n", "end_points", "[", "'heading_reg_loss'", "]", "=", "heading_reg_loss", "\n", "end_points", "[", "'size_cls_loss'", "]", "=", "size_cls_loss", "\n", "end_points", "[", "'size_reg_loss'", "]", "=", "size_reg_loss", "\n", "end_points", "[", "'sem_cls_loss'", "]", "=", "sem_cls_loss", "\n", "box_loss", "=", "center_loss", "+", "0.1", "*", "heading_cls_loss", "+", "heading_reg_loss", "+", "0.1", "*", "size_cls_loss", "+", "size_reg_loss", "\n", "end_points", "[", "'box_loss'", "]", "=", "box_loss", "\n", "\n", "# Final loss function", "\n", "loss", "=", "vote_loss", "+", "0.5", "*", "objectness_loss", "+", "box_loss", "+", "0.1", "*", "sem_cls_loss", "\n", "loss", "*=", "10", "\n", "end_points", "[", "'loss'", "]", "=", "loss", "\n", "\n", "# --------------------------------------------", "\n", "# Some other statistics", "\n", "obj_pred_val", "=", "torch", ".", "argmax", "(", "end_points", "[", "'objectness_scores'", "]", ",", "2", ")", "# B,K", "\n", "obj_acc", "=", "torch", ".", "sum", "(", "(", "obj_pred_val", "==", "objectness_label", ".", "long", "(", ")", ")", ".", "float", "(", ")", "*", "objectness_mask", ")", "/", "(", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'obj_acc'", "]", "=", "obj_acc", "\n", "\n", "return", "loss", ",", "end_points", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.proposal_module.ProposalModule.__init__": [[48, 77], ["torch.Module.__init__", "pointnet2_modules.PointnetSAModuleVotes", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "mean_size_arr", ",", "num_proposal", ",", "sampling", ",", "seed_feat_dim", "=", "256", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "num_heading_bin", "=", "num_heading_bin", "\n", "self", ".", "num_size_cluster", "=", "num_size_cluster", "\n", "self", ".", "mean_size_arr", "=", "mean_size_arr", "\n", "self", ".", "num_proposal", "=", "num_proposal", "\n", "self", ".", "sampling", "=", "sampling", "\n", "self", ".", "seed_feat_dim", "=", "seed_feat_dim", "\n", "\n", "# Vote clustering", "\n", "self", ".", "vote_aggregation", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "self", ".", "num_proposal", ",", "\n", "radius", "=", "0.3", ",", "\n", "nsample", "=", "16", ",", "\n", "mlp", "=", "[", "self", ".", "seed_feat_dim", ",", "128", ",", "128", ",", "128", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "# Object proposal/detection", "\n", "# Objectness scores (2), center residual (3),", "\n", "# heading class+residual (num_heading_bin*2), size class+residual(num_size_cluster*4)", "\n", "self", ".", "conv1", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "128", ",", "1", ")", "\n", "self", ".", "conv2", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "128", ",", "1", ")", "\n", "self", ".", "conv3", "=", "torch", ".", "nn", ".", "Conv1d", "(", "128", ",", "2", "+", "3", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", "*", "4", "+", "self", ".", "num_class", ",", "1", ")", "\n", "self", ".", "bn1", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn2", "=", "torch", ".", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.proposal_module.ProposalModule.forward": [[78, 114], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "proposal_module.ProposalModule.conv3", "proposal_module.decode_scores", "proposal_module.ProposalModule.vote_aggregation", "proposal_module.ProposalModule.bn1", "proposal_module.ProposalModule.bn2", "pointnet2_utils.furthest_point_sample", "proposal_module.ProposalModule.vote_aggregation", "proposal_module.ProposalModule.conv1", "proposal_module.ProposalModule.conv2", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "torch.randint().cuda", "proposal_module.ProposalModule.vote_aggregation", "log_string", "exit", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.randint"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.proposal_module.decode_scores"], ["", "def", "forward", "(", "self", ",", "xyz", ",", "features", ",", "end_points", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            xyz: (B,K,3)\n            features: (B,C,K)\n        Returns:\n            scores: (B,num_proposal,2+3+NH*2+NS*4) \n        \"\"\"", "\n", "if", "self", ".", "sampling", "==", "'vote_fps'", ":", "\n", "# Farthest point sampling (FPS) on votes", "\n", "            ", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "vote_aggregation", "(", "xyz", ",", "features", ")", "\n", "sample_inds", "=", "fps_inds", "\n", "", "elif", "self", ".", "sampling", "==", "'seed_fps'", ":", "\n", "# FPS on seed and choose the votes corresponding to the seeds", "\n", "# This gets us a slightly better coverage of *object* votes than vote_fps (which tends to get more cluster votes)", "\n", "            ", "sample_inds", "=", "pointnet2_utils", ".", "furthest_point_sample", "(", "end_points", "[", "'seed_xyz'", "]", ",", "self", ".", "num_proposal", ")", "\n", "xyz", ",", "features", ",", "_", "=", "self", ".", "vote_aggregation", "(", "xyz", ",", "features", ",", "sample_inds", ")", "\n", "", "elif", "self", ".", "sampling", "==", "'random'", ":", "\n", "# Random sampling from the votes", "\n", "            ", "num_seed", "=", "end_points", "[", "'seed_xyz'", "]", ".", "shape", "[", "1", "]", "\n", "batch_size", "=", "end_points", "[", "'seed_xyz'", "]", ".", "shape", "[", "0", "]", "\n", "sample_inds", "=", "torch", ".", "randint", "(", "0", ",", "num_seed", ",", "(", "batch_size", ",", "self", ".", "num_proposal", ")", ",", "dtype", "=", "torch", ".", "int", ")", ".", "cuda", "(", ")", "\n", "xyz", ",", "features", ",", "_", "=", "self", ".", "vote_aggregation", "(", "xyz", ",", "features", ",", "sample_inds", ")", "\n", "", "else", ":", "\n", "            ", "log_string", "(", "'Unknown sampling strategy: %s. Exiting!'", "%", "(", "self", ".", "sampling", ")", ")", "\n", "exit", "(", ")", "\n", "", "end_points", "[", "'aggregated_vote_xyz'", "]", "=", "xyz", "# (batch_size, num_proposal, 3)", "\n", "end_points", "[", "'aggregated_vote_inds'", "]", "=", "sample_inds", "# (batch_size, num_proposal,) # should be 0,1,2,...,num_proposal", "\n", "\n", "# --------- PROPOSAL GENERATION ---------", "\n", "net", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "features", ")", ")", ")", "\n", "net", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "net", ")", ")", ")", "\n", "net", "=", "self", ".", "conv3", "(", "net", ")", "# (batch_size, 2+3+num_heading_bin*2+num_size_cluster*4, num_proposal)", "\n", "\n", "end_points", "=", "decode_scores", "(", "net", ",", "end_points", ",", "self", ".", "num_class", ",", "self", ".", "num_heading_bin", ",", "self", ".", "num_size_cluster", ",", "self", ".", "mean_size_arr", ")", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.proposal_module.decode_scores": [[18, 45], ["net.transpose", "net_transposed[].view", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda().unsqueeze", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "mean_size_arr.astype"], "function", ["None"], ["def", "decode_scores", "(", "net", ",", "end_points", ",", "num_class", ",", "num_heading_bin", ",", "num_size_cluster", ",", "mean_size_arr", ")", ":", "\n", "    ", "net_transposed", "=", "net", ".", "transpose", "(", "2", ",", "1", ")", "# (batch_size, 1024, ..)", "\n", "batch_size", "=", "net_transposed", ".", "shape", "[", "0", "]", "\n", "num_proposal", "=", "net_transposed", ".", "shape", "[", "1", "]", "\n", "\n", "objectness_scores", "=", "net_transposed", "[", ":", ",", ":", ",", "0", ":", "2", "]", "\n", "end_points", "[", "'objectness_scores'", "]", "=", "objectness_scores", "\n", "\n", "base_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", "# (batch_size, num_proposal, 3)", "\n", "center", "=", "base_xyz", "+", "net_transposed", "[", ":", ",", ":", ",", "2", ":", "5", "]", "# (batch_size, num_proposal, 3)", "\n", "end_points", "[", "'center'", "]", "=", "center", "\n", "\n", "heading_scores", "=", "net_transposed", "[", ":", ",", ":", ",", "5", ":", "5", "+", "num_heading_bin", "]", "\n", "heading_residuals_normalized", "=", "net_transposed", "[", ":", ",", ":", ",", "5", "+", "num_heading_bin", ":", "5", "+", "num_heading_bin", "*", "2", "]", "\n", "end_points", "[", "'heading_scores'", "]", "=", "heading_scores", "# Bxnum_proposalxnum_heading_bin", "\n", "end_points", "[", "'heading_residuals_normalized'", "]", "=", "heading_residuals_normalized", "# Bxnum_proposalxnum_heading_bin (should be -1 to 1)", "\n", "end_points", "[", "'heading_residuals'", "]", "=", "heading_residuals_normalized", "*", "(", "np", ".", "pi", "/", "num_heading_bin", ")", "# Bxnum_proposalxnum_heading_bin", "\n", "\n", "size_scores", "=", "net_transposed", "[", ":", ",", ":", ",", "5", "+", "num_heading_bin", "*", "2", ":", "5", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", "]", "\n", "size_residuals_normalized", "=", "net_transposed", "[", ":", ",", ":", ",", "5", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", ":", "5", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", "*", "4", "]", ".", "view", "(", "[", "batch_size", ",", "num_proposal", ",", "num_size_cluster", ",", "3", "]", ")", "# Bxnum_proposalxnum_size_clusterx3", "\n", "end_points", "[", "'size_scores'", "]", "=", "size_scores", "\n", "end_points", "[", "'size_residuals_normalized'", "]", "=", "size_residuals_normalized", "\n", "end_points", "[", "'size_residuals'", "]", "=", "size_residuals_normalized", "*", "torch", ".", "from_numpy", "(", "mean_size_arr", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "cuda", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "sem_cls_scores", "=", "net_transposed", "[", ":", ",", ":", ",", "5", "+", "num_heading_bin", "*", "2", "+", "num_size_cluster", "*", "4", ":", "]", "# Bxnum_proposalx10", "\n", "end_points", "[", "'sem_cls_scores'", "]", "=", "sem_cls_scores", "\n", "return", "end_points", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper_boxnet.compute_objectness_loss": [[20, 60], ["nn_distance.nn_distance", "end_points[].long", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.ones().cuda", "torch.ones().cuda", "torch.CrossEntropyLoss", "nn.CrossEntropyLoss.", "aggregated_vote_inds.long", "torch.Tensor().cuda", "torch.Tensor().cuda", "objectness_scores.transpose", "torch.sum", "torch.sum", "torch.ones", "torch.ones", "torch.sum", "torch.sum", "torch.Tensor", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.nn_distance"], ["def", "compute_objectness_loss", "(", "end_points", ")", ":", "\n", "    ", "\"\"\" Compute objectness loss for the proposals.\n\n    Args:\n        end_points: dict (read-only)\n\n    Returns:\n        objectness_loss: scalar Tensor\n        objectness_label: (batch_size, num_seed) Tensor with value 0 or 1\n        objectness_mask: (batch_size, num_seed) Tensor with value 0 or 1\n        object_assignment: (batch_size, num_seed) Tensor with long int\n            within [0,num_gt_object-1]\n    \"\"\"", "\n", "# Associate proposal and GT objects by point-to-point distances", "\n", "aggregated_vote_xyz", "=", "end_points", "[", "'aggregated_vote_xyz'", "]", "\n", "gt_center", "=", "end_points", "[", "'center_label'", "]", "[", ":", ",", ":", ",", "0", ":", "3", "]", "\n", "B", "=", "gt_center", ".", "shape", "[", "0", "]", "\n", "K", "=", "aggregated_vote_xyz", ".", "shape", "[", "1", "]", "\n", "K2", "=", "gt_center", ".", "shape", "[", "1", "]", "\n", "dist1", ",", "ind1", ",", "dist2", ",", "_", "=", "nn_distance", "(", "aggregated_vote_xyz", ",", "gt_center", ")", "# dist1: BxK, dist2: BxK2", "\n", "\n", "# Generate objectness label and mask", "\n", "# NOTE: Different from VoteNet, here we use seed label as objectness label.", "\n", "seed_inds", "=", "end_points", "[", "'seed_inds'", "]", ".", "long", "(", ")", "# B,num_seed in [0,num_points-1]", "\n", "seed_gt_votes_mask", "=", "torch", ".", "gather", "(", "end_points", "[", "'vote_label_mask'", "]", ",", "1", ",", "seed_inds", ")", "\n", "end_points", "[", "'seed_labels'", "]", "=", "seed_gt_votes_mask", "\n", "aggregated_vote_inds", "=", "end_points", "[", "'aggregated_vote_inds'", "]", "\n", "objectness_label", "=", "torch", ".", "gather", "(", "end_points", "[", "'seed_labels'", "]", ",", "1", ",", "aggregated_vote_inds", ".", "long", "(", ")", ")", "# select (B,K) from (B,1024)", "\n", "objectness_mask", "=", "torch", ".", "ones", "(", "(", "objectness_label", ".", "shape", "[", "0", "]", ",", "objectness_label", ".", "shape", "[", "1", "]", ")", ")", ".", "cuda", "(", ")", "# no ignore zone anymore", "\n", "\n", "# Compute objectness loss", "\n", "objectness_scores", "=", "end_points", "[", "'objectness_scores'", "]", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "torch", ".", "Tensor", "(", "OBJECTNESS_CLS_WEIGHTS", ")", ".", "cuda", "(", ")", ",", "reduction", "=", "'none'", ")", "\n", "objectness_loss", "=", "criterion", "(", "objectness_scores", ".", "transpose", "(", "2", ",", "1", ")", ",", "objectness_label", ")", "\n", "objectness_loss", "=", "torch", ".", "sum", "(", "objectness_loss", "*", "objectness_mask", ")", "/", "(", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "\n", "# Set assignment", "\n", "object_assignment", "=", "ind1", "# (B,K) with values in 0,1,...,K2-1", "\n", "\n", "return", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper_boxnet.get_loss": [[62, 123], ["loss_helper_boxnet.compute_objectness_loss", "loss_helper.compute_box_and_sem_cls_loss", "torch.argmax", "torch.argmax", "torch.sum", "torch.sum", "float", "torch.sum", "torch.sum", "objectness_label.float().cuda", "torch.sum", "torch.sum", "float", "torch.sum", "torch.sum", "objectness_mask.float", "objectness_label.float", "objectness_label.long"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper_boxnet.compute_objectness_loss", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models.loss_helper.compute_box_and_sem_cls_loss"], ["", "def", "get_loss", "(", "end_points", ",", "config", ")", ":", "\n", "    ", "\"\"\" Loss functions\n\n    Args:\n        end_points: dict\n            {   \n                seed_xyz, seed_inds,\n                center,\n                heading_scores, heading_residuals_normalized,\n                size_scores, size_residuals_normalized,\n                sem_cls_scores, #seed_logits,#\n                center_label,\n                heading_class_label, heading_residual_label,\n                size_class_label, size_residual_label,\n                sem_cls_label,\n                box_label_mask,\n                vote_label, vote_label_mask\n            }\n        config: dataset config instance\n    Returns:\n        loss: pytorch scalar tensor\n        end_points: dict\n    \"\"\"", "\n", "\n", "# Obj loss", "\n", "objectness_loss", ",", "objectness_label", ",", "objectness_mask", ",", "object_assignment", "=", "compute_objectness_loss", "(", "end_points", ")", "\n", "end_points", "[", "'objectness_loss'", "]", "=", "objectness_loss", "\n", "end_points", "[", "'objectness_label'", "]", "=", "objectness_label", "\n", "end_points", "[", "'objectness_mask'", "]", "=", "objectness_mask", "\n", "end_points", "[", "'object_assignment'", "]", "=", "object_assignment", "\n", "total_num_proposal", "=", "objectness_label", ".", "shape", "[", "0", "]", "*", "objectness_label", ".", "shape", "[", "1", "]", "\n", "end_points", "[", "'pos_ratio'", "]", "=", "torch", ".", "sum", "(", "objectness_label", ".", "float", "(", ")", ".", "cuda", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "\n", "end_points", "[", "'neg_ratio'", "]", "=", "torch", ".", "sum", "(", "objectness_mask", ".", "float", "(", ")", ")", "/", "float", "(", "total_num_proposal", ")", "-", "end_points", "[", "'pos_ratio'", "]", "\n", "\n", "# Box loss and sem cls loss", "\n", "center_loss", ",", "heading_cls_loss", ",", "heading_reg_loss", ",", "size_cls_loss", ",", "size_reg_loss", ",", "sem_cls_loss", "=", "compute_box_and_sem_cls_loss", "(", "end_points", ",", "config", ")", "\n", "end_points", "[", "'center_loss'", "]", "=", "center_loss", "\n", "end_points", "[", "'heading_cls_loss'", "]", "=", "heading_cls_loss", "\n", "end_points", "[", "'heading_reg_loss'", "]", "=", "heading_reg_loss", "\n", "end_points", "[", "'size_cls_loss'", "]", "=", "size_cls_loss", "\n", "end_points", "[", "'size_reg_loss'", "]", "=", "size_reg_loss", "\n", "end_points", "[", "'sem_cls_loss'", "]", "=", "sem_cls_loss", "\n", "box_loss", "=", "center_loss", "+", "0.1", "*", "heading_cls_loss", "+", "heading_reg_loss", "+", "0.1", "*", "size_cls_loss", "+", "size_reg_loss", "\n", "end_points", "[", "'box_loss'", "]", "=", "box_loss", "\n", "\n", "# Final loss function", "\n", "loss", "=", "0.5", "*", "objectness_loss", "+", "box_loss", "+", "0.1", "*", "sem_cls_loss", "\n", "loss", "*=", "10", "\n", "end_points", "[", "'loss'", "]", "=", "loss", "\n", "\n", "# --------------------------------------------", "\n", "# Some other statistics", "\n", "obj_pred_val", "=", "torch", ".", "argmax", "(", "end_points", "[", "'objectness_scores'", "]", ",", "2", ")", "# B,K", "\n", "obj_acc", "=", "torch", ".", "sum", "(", "(", "obj_pred_val", "==", "objectness_label", ".", "long", "(", ")", ")", ".", "float", "(", ")", "*", "objectness_mask", ")", "/", "(", "torch", ".", "sum", "(", "objectness_mask", ")", "+", "1e-6", ")", "\n", "end_points", "[", "'obj_acc'", "]", "=", "obj_acc", "\n", "\n", "return", "loss", ",", "end_points", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.senet_block.SELayer.__init__": [[17, 25], ["torch.Module.__init__", "torch.Sequential", "MinkowskiEngine.MinkowskiGlobalPooling", "MinkowskiEngine.MinkowskiBroadcastMultiplication", "MinkowskiEngine.MinkowskiLinear", "MinkowskiEngine.MinkowskiReLU", "MinkowskiEngine.MinkowskiLinear", "MinkowskiEngine.MinkowskiSigmoid"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "ME", ".", "MinkowskiLinear", "(", "channel", ",", "channel", "//", "reduction", ")", ",", "ME", ".", "MinkowskiReLU", "(", "inplace", "=", "True", ")", ",", "\n", "ME", ".", "MinkowskiLinear", "(", "channel", "//", "reduction", ",", "channel", ")", ",", "ME", ".", "MinkowskiSigmoid", "(", ")", ")", "\n", "self", ".", "pooling", "=", "ME", ".", "MinkowskiGlobalPooling", "(", "dimension", "=", "D", ")", "\n", "self", ".", "broadcast_mul", "=", "ME", ".", "MinkowskiBroadcastMultiplication", "(", "dimension", "=", "D", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "y", "=", "self", ".", "pooling", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.senet_block.SELayer.forward": [[26, 30], ["senet_block.SELayer.pooling", "senet_block.SELayer.fc", "senet_block.SELayer.broadcast_mul"], "methods", ["None"], ["y", "=", "self", ".", "fc", "(", "y", ")", "\n", "return", "self", ".", "broadcast_mul", "(", "x", ",", "y", ")", "\n", "\n", "\n", "", "", "class", "SEBasicBlock", "(", "BasicBlock", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.senet_block.SEBasicBlock.__init__": [[34, 52], ["models.modules.resnet_block.BasicBlock.__init__", "senet_block.SELayer"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["planes", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "downsample", "=", "None", ",", "\n", "conv_type", "=", "ConvType", ".", "HYPERCUBE", ",", "\n", "reduction", "=", "16", ",", "\n", "D", "=", "-", "1", ")", ":", "\n", "    ", "super", "(", "SEBasicBlock", ",", "self", ")", ".", "__init__", "(", "\n", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "\n", "downsample", "=", "downsample", ",", "\n", "conv_type", "=", "conv_type", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "se", "=", "SELayer", "(", "planes", ",", "reduction", "=", "reduction", ",", "D", "=", "D", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "residual", "=", "x", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.senet_block.SEBasicBlock.forward": [[53, 71], ["senet_block.SEBasicBlock.conv1", "senet_block.SEBasicBlock.norm1", "senet_block.SEBasicBlock.relu", "senet_block.SEBasicBlock.conv2", "senet_block.SEBasicBlock.norm2", "senet_block.SEBasicBlock.se", "senet_block.SEBasicBlock.relu", "senet_block.SEBasicBlock.downsample"], "methods", ["None"], ["\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "norm2", "(", "out", ")", "\n", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "      ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "SEBasicBlockSN", "(", "SEBasicBlock", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.senet_block.SEBottleneck.__init__": [[87, 105], ["models.modules.resnet_block.Bottleneck.__init__", "senet_block.SELayer"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["planes", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "downsample", "=", "None", ",", "\n", "conv_type", "=", "ConvType", ".", "HYPERCUBE", ",", "\n", "D", "=", "3", ",", "\n", "reduction", "=", "16", ")", ":", "\n", "    ", "super", "(", "SEBottleneck", ",", "self", ")", ".", "__init__", "(", "\n", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "\n", "downsample", "=", "downsample", ",", "\n", "conv_type", "=", "conv_type", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "se", "=", "SELayer", "(", "planes", "*", "self", ".", "expansion", ",", "reduction", "=", "reduction", ",", "D", "=", "D", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "residual", "=", "x", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.senet_block.SEBottleneck.forward": [[106, 128], ["senet_block.SEBottleneck.conv1", "senet_block.SEBottleneck.norm1", "senet_block.SEBottleneck.relu", "senet_block.SEBottleneck.conv2", "senet_block.SEBottleneck.norm2", "senet_block.SEBottleneck.relu", "senet_block.SEBottleneck.conv3", "senet_block.SEBottleneck.norm3", "senet_block.SEBottleneck.se", "senet_block.SEBottleneck.relu", "senet_block.SEBottleneck.downsample"], "methods", ["None"], ["\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "norm2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "norm3", "(", "out", ")", "\n", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "      ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n", "\n", "", "", "class", "SEBottleneckSN", "(", "SEBottleneck", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.ConvType.__new__": [[40, 45], ["object.__new__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.ConvType.__new__"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.ConvType.__int__": [[46, 48], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm": [[19, 26], ["MinkowskiEngine.MinkowskiBatchNorm", "MinkowskiEngine.MinkowskiInstanceNorm", "ValueError"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.convert_region_type": [[65, 70], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.convert_conv_type": [[72, 115], ["isinstance", "isinstance", "kernel_size.append", "isinstance", "kernel_size.append", "axis_types.append"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv": [[117, 139], ["common.convert_conv_type", "MinkowskiEngine.KernelGenerator", "MinkowskiEngine.MinkowskiConvolution"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.convert_conv_type"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr": [[141, 168], ["common.convert_conv_type", "MinkowskiEngine.KernelGenerator", "MinkowskiEngine.MinkowskiConvolutionTranspose"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.convert_conv_type"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.avg_pool": [[170, 187], ["common.convert_conv_type", "MinkowskiEngine.KernelGenerator", "MinkowskiEngine.MinkowskiAvgPooling"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.convert_conv_type"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.avg_unpool": [[189, 201], ["common.convert_conv_type", "MinkowskiEngine.KernelGenerator", "MinkowskiEngine.MinkowskiAvgUnpooling"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.convert_conv_type"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.sum_pool": [[203, 215], ["common.convert_conv_type", "MinkowskiEngine.KernelGenerator", "MinkowskiEngine.MinkowskiSumPooling"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.convert_conv_type"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.resnet_block.BasicBlockBase.__init__": [[15, 41], ["torch.Module.__init__", "model.modules.common.conv", "model.modules.common.get_norm", "model.modules.common.conv", "model.modules.common.get_norm", "MinkowskiEngine.MinkowskiReLU"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["def", "__init__", "(", "self", ",", "\n", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "downsample", "=", "None", ",", "\n", "conv_type", "=", "ConvType", ".", "HYPERCUBE", ",", "\n", "bn_momentum", "=", "0.1", ",", "\n", "D", "=", "3", ")", ":", "\n", "    ", "super", "(", "BasicBlockBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "conv", "(", "\n", "inplanes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "conv_type", "=", "conv_type", ",", "D", "=", "D", ")", "\n", "self", ".", "norm1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "planes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "conv2", "=", "conv", "(", "\n", "planes", ",", "\n", "planes", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "dilation", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "conv_type", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "norm2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "planes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "relu", "=", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.resnet_block.BasicBlockBase.forward": [[42, 59], ["resnet_block.BasicBlockBase.conv1", "resnet_block.BasicBlockBase.norm1", "resnet_block.BasicBlockBase.relu", "resnet_block.BasicBlockBase.conv2", "resnet_block.BasicBlockBase.norm2", "resnet_block.BasicBlockBase.relu", "resnet_block.BasicBlockBase.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "norm2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "      ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.resnet_block.BottleneckBase.__init__": [[67, 89], ["torch.Module.__init__", "model.modules.common.conv", "model.modules.common.get_norm", "model.modules.common.conv", "model.modules.common.get_norm", "model.modules.common.conv", "model.modules.common.get_norm", "MinkowskiEngine.MinkowskiReLU"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["\n", "\n", "", "class", "BasicBlockINBN", "(", "BasicBlockBase", ")", ":", "\n", "  ", "NORM_TYPE", "=", "NormType", ".", "INSTANCE_BATCH_NORM", "\n", "\n", "\n", "", "class", "BottleneckBase", "(", "nn", ".", "Module", ")", ":", "\n", "  ", "expansion", "=", "4", "\n", "NORM_TYPE", "=", "NormType", ".", "BATCH_NORM", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "downsample", "=", "None", ",", "\n", "conv_type", "=", "ConvType", ".", "HYPERCUBE", ",", "\n", "bn_momentum", "=", "0.1", ",", "\n", "D", "=", "3", ")", ":", "\n", "    ", "super", "(", "BottleneckBase", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "D", "=", "D", ")", "\n", "self", ".", "norm1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "planes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.resnet_block.BottleneckBase.forward": [[90, 111], ["resnet_block.BottleneckBase.conv1", "resnet_block.BottleneckBase.norm1", "resnet_block.BottleneckBase.relu", "resnet_block.BottleneckBase.conv2", "resnet_block.BottleneckBase.norm2", "resnet_block.BottleneckBase.relu", "resnet_block.BottleneckBase.conv3", "resnet_block.BottleneckBase.norm3", "resnet_block.BottleneckBase.relu", "resnet_block.BottleneckBase.downsample"], "methods", ["None"], ["self", ".", "conv2", "=", "conv", "(", "\n", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "dilation", "=", "dilation", ",", "conv_type", "=", "conv_type", ",", "D", "=", "D", ")", "\n", "self", ".", "norm2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "planes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv3", "=", "conv", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ",", "kernel_size", "=", "1", ",", "D", "=", "D", ")", "\n", "self", ".", "norm3", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "planes", "*", "self", ".", "expansion", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "relu", "=", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "norm2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.votenet.ddp_main.single_proc_run": [[14, 22], ["lib.ddp_trainer.DetectionTrainer", "torch.cuda.is_available", "Exception", "lib.ddp_trainer.DetectionTrainer.train", "lib.ddp_trainer.DetectionTrainer.test"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.train", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.test"], ["\n", "def", "single_proc_run", "(", "config", ")", ":", "\n", "  ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "    ", "raise", "Exception", "(", "'No GPUs FOUND.'", ")", "\n", "", "trainer", "=", "SegmentationTrainer", "(", "config", ")", "\n", "if", "config", ".", "train", ".", "is_train", ":", "\n", "    ", "trainer", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "    ", "trainer", ".", "test", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.votenet.ddp_main.main": [[23, 35], ["hydra.main", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed", "random.randint", "lib.distributed.multi_proc_run", "ddp_main.single_proc_run"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.main", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.multiprocessing_utils.multi_proc_run", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.single_proc_run"], ["\n", "", "", "@", "hydra", ".", "main", "(", "config_path", "=", "'config'", ",", "config_name", "=", "'default.yaml'", ")", "\n", "def", "main", "(", "config", ")", ":", "\n", "\n", "# fix seed", "\n", "  ", "np", ".", "random", ".", "seed", "(", "config", ".", "misc", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "config", ".", "misc", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "config", ".", "misc", ".", "seed", ")", "\n", "\n", "# Convert to dict", "\n", "if", "config", ".", "misc", ".", "num_gpus", ">", "1", ":", "\n", "      ", "multi_proc_run", "(", "config", ".", "misc", ".", "num_gpus", ",", "fun", "=", "single_proc_run", ",", "fun_args", "=", "(", "config", ",", ")", ")", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nms.nms_2d": [[13, 43], ["numpy.argsort", "pick.append", "range", "numpy.delete", "max", "max", "min", "min", "print", "suppress.append"], "function", ["None"], ["def", "nms_2d", "(", "boxes", ",", "overlap_threshold", ")", ":", "\n", "    ", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "2", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "score", "=", "boxes", "[", ":", ",", "4", "]", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "\n", "I", "=", "np", ".", "argsort", "(", "score", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "suppress", "=", "[", "last", "-", "1", "]", "\n", "for", "pos", "in", "range", "(", "last", "-", "1", ")", ":", "\n", "            ", "j", "=", "I", "[", "pos", "]", "\n", "xx1", "=", "max", "(", "x1", "[", "i", "]", ",", "x1", "[", "j", "]", ")", "\n", "yy1", "=", "max", "(", "y1", "[", "i", "]", ",", "y1", "[", "j", "]", ")", "\n", "xx2", "=", "min", "(", "x2", "[", "i", "]", ",", "x2", "[", "j", "]", ")", "\n", "yy2", "=", "min", "(", "y2", "[", "i", "]", ",", "y2", "[", "j", "]", ")", "\n", "w", "=", "xx2", "-", "xx1", "\n", "h", "=", "yy2", "-", "yy1", "\n", "if", "(", "w", ">", "0", "and", "h", ">", "0", ")", ":", "\n", "                ", "o", "=", "w", "*", "h", "/", "area", "[", "j", "]", "\n", "print", "(", "'Overlap is'", ",", "o", ")", "\n", "if", "(", "o", ">", "overlap_threshold", ")", ":", "\n", "                    ", "suppress", ".", "append", "(", "pos", ")", "\n", "", "", "", "I", "=", "np", ".", "delete", "(", "I", ",", "suppress", ")", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nms.nms_2d_faster": [[44, 76], ["numpy.argsort", "pick.append", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.delete", "numpy.concatenate", "numpy.where"], "function", ["None"], ["", "def", "nms_2d_faster", "(", "boxes", ",", "overlap_threshold", ",", "old_type", "=", "False", ")", ":", "\n", "    ", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "2", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "score", "=", "boxes", "[", ":", ",", "4", "]", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "\n", "\n", "I", "=", "np", ".", "argsort", "(", "score", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "\n", "w", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "\n", "if", "old_type", ":", "\n", "            ", "o", "=", "(", "w", "*", "h", ")", "/", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "", "else", ":", "\n", "            ", "inter", "=", "w", "*", "h", "\n", "o", "=", "inter", "/", "(", "area", "[", "i", "]", "+", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "-", "inter", ")", "\n", "\n", "", "I", "=", "np", ".", "delete", "(", "I", ",", "np", ".", "concatenate", "(", "(", "[", "last", "-", "1", "]", ",", "np", ".", "where", "(", "o", ">", "overlap_threshold", ")", "[", "0", "]", ")", ")", ")", "\n", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nms.nms_3d_faster": [[77, 114], ["numpy.argsort", "pick.append", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.delete", "numpy.concatenate", "numpy.where"], "function", ["None"], ["", "def", "nms_3d_faster", "(", "boxes", ",", "overlap_threshold", ",", "old_type", "=", "False", ")", ":", "\n", "    ", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "z1", "=", "boxes", "[", ":", ",", "2", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "4", "]", "\n", "z2", "=", "boxes", "[", ":", ",", "5", "]", "\n", "score", "=", "boxes", "[", ":", ",", "6", "]", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "*", "(", "z2", "-", "z1", ")", "\n", "\n", "I", "=", "np", ".", "argsort", "(", "score", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz1", "=", "np", ".", "maximum", "(", "z1", "[", "i", "]", ",", "z1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz2", "=", "np", ".", "minimum", "(", "z2", "[", "i", "]", ",", "z2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "\n", "l", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "w", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0", ",", "zz2", "-", "zz1", ")", "\n", "\n", "if", "old_type", ":", "\n", "            ", "o", "=", "(", "l", "*", "w", "*", "h", ")", "/", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "", "else", ":", "\n", "            ", "inter", "=", "l", "*", "w", "*", "h", "\n", "o", "=", "inter", "/", "(", "area", "[", "i", "]", "+", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "-", "inter", ")", "\n", "\n", "", "I", "=", "np", ".", "delete", "(", "I", ",", "np", ".", "concatenate", "(", "(", "[", "last", "-", "1", "]", ",", "np", ".", "where", "(", "o", ">", "overlap_threshold", ")", "[", "0", "]", ")", ")", ")", "\n", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nms.nms_3d_faster_samecls": [[115, 156], ["numpy.argsort", "pick.append", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.delete", "numpy.concatenate", "numpy.where"], "function", ["None"], ["", "def", "nms_3d_faster_samecls", "(", "boxes", ",", "overlap_threshold", ",", "old_type", "=", "False", ")", ":", "\n", "    ", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "z1", "=", "boxes", "[", ":", ",", "2", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "4", "]", "\n", "z2", "=", "boxes", "[", ":", ",", "5", "]", "\n", "score", "=", "boxes", "[", ":", ",", "6", "]", "\n", "cls", "=", "boxes", "[", ":", ",", "7", "]", "\n", "area", "=", "(", "x2", "-", "x1", ")", "*", "(", "y2", "-", "y1", ")", "*", "(", "z2", "-", "z1", ")", "\n", "\n", "I", "=", "np", ".", "argsort", "(", "score", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz1", "=", "np", ".", "maximum", "(", "z1", "[", "i", "]", ",", "z1", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "zz2", "=", "np", ".", "minimum", "(", "z2", "[", "i", "]", ",", "z2", "[", "I", "[", ":", "last", "-", "1", "]", "]", ")", "\n", "cls1", "=", "cls", "[", "i", "]", "\n", "cls2", "=", "cls", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "\n", "l", "=", "np", ".", "maximum", "(", "0", ",", "xx2", "-", "xx1", ")", "\n", "w", "=", "np", ".", "maximum", "(", "0", ",", "yy2", "-", "yy1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0", ",", "zz2", "-", "zz1", ")", "\n", "\n", "if", "old_type", ":", "\n", "            ", "o", "=", "(", "l", "*", "w", "*", "h", ")", "/", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "\n", "", "else", ":", "\n", "            ", "inter", "=", "l", "*", "w", "*", "h", "\n", "o", "=", "inter", "/", "(", "area", "[", "i", "]", "+", "area", "[", "I", "[", ":", "last", "-", "1", "]", "]", "-", "inter", ")", "\n", "", "o", "=", "o", "*", "(", "cls1", "==", "cls2", ")", "\n", "\n", "I", "=", "np", ".", "delete", "(", "I", ",", "np", ".", "concatenate", "(", "(", "[", "last", "-", "1", "]", ",", "np", ".", "where", "(", "o", ">", "overlap_threshold", ")", "[", "0", "]", ")", ")", ")", "\n", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nms.nms_crnr_dist": [[158, 174], ["numpy.argsort", "pick.append", "numpy.delete", "scores.append", "numpy.concatenate", "pc_util.bbox_corner_dist_measure", "numpy.where", "numpy.array"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.bbox_corner_dist_measure"], ["", "def", "nms_crnr_dist", "(", "boxes", ",", "conf", ",", "overlap_threshold", ")", ":", "\n", "\n", "    ", "I", "=", "np", ".", "argsort", "(", "conf", ")", "\n", "pick", "=", "[", "]", "\n", "while", "(", "I", ".", "size", "!=", "0", ")", ":", "\n", "        ", "last", "=", "I", ".", "size", "\n", "i", "=", "I", "[", "-", "1", "]", "\n", "pick", ".", "append", "(", "i", ")", "\n", "\n", "scores", "=", "[", "]", "\n", "for", "ind", "in", "I", "[", ":", "-", "1", "]", ":", "\n", "            ", "scores", ".", "append", "(", "bbox_corner_dist_measure", "(", "boxes", "[", "i", ",", ":", "]", ",", "boxes", "[", "ind", ",", ":", "]", ")", ")", "\n", "\n", "", "I", "=", "np", ".", "delete", "(", "I", ",", "np", ".", "concatenate", "(", "(", "[", "last", "-", "1", "]", ",", "np", ".", "where", "(", "np", ".", "array", "(", "scores", ")", ">", "overlap_threshold", ")", "[", "0", "]", ")", ")", ")", "\n", "\n", "", "return", "pick", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.create_color_palette": [[12, 55], ["None"], "function", ["None"], ["    ", "return", "[", "\n", "(", "0", ",", "0", ",", "0", ")", ",", "\n", "(", "174", ",", "199", ",", "232", ")", ",", "# wall", "\n", "(", "152", ",", "223", ",", "138", ")", ",", "# floor", "\n", "(", "31", ",", "119", ",", "180", ")", ",", "# cabinet", "\n", "(", "255", ",", "187", ",", "120", ")", ",", "# bed", "\n", "(", "188", ",", "189", ",", "34", ")", ",", "# chair", "\n", "(", "140", ",", "86", ",", "75", ")", ",", "# sofa", "\n", "(", "255", ",", "152", ",", "150", ")", ",", "# table", "\n", "(", "214", ",", "39", ",", "40", ")", ",", "# door", "\n", "(", "197", ",", "176", ",", "213", ")", ",", "# window", "\n", "(", "148", ",", "103", ",", "189", ")", ",", "# bookshelf", "\n", "(", "196", ",", "156", ",", "148", ")", ",", "# picture", "\n", "(", "23", ",", "190", ",", "207", ")", ",", "# counter", "\n", "(", "178", ",", "76", ",", "76", ")", ",", "\n", "(", "247", ",", "182", ",", "210", ")", ",", "# desk", "\n", "(", "66", ",", "188", ",", "102", ")", ",", "\n", "(", "219", ",", "219", ",", "141", ")", ",", "# curtain", "\n", "(", "140", ",", "57", ",", "197", ")", ",", "\n", "(", "202", ",", "185", ",", "52", ")", ",", "\n", "(", "51", ",", "176", ",", "203", ")", ",", "\n", "(", "200", ",", "54", ",", "131", ")", ",", "\n", "(", "92", ",", "193", ",", "61", ")", ",", "\n", "(", "78", ",", "71", ",", "183", ")", ",", "\n", "(", "172", ",", "114", ",", "82", ")", ",", "\n", "(", "255", ",", "127", ",", "14", ")", ",", "# refrigerator", "\n", "(", "91", ",", "163", ",", "138", ")", ",", "\n", "(", "153", ",", "98", ",", "156", ")", ",", "\n", "(", "140", ",", "153", ",", "101", ")", ",", "\n", "(", "158", ",", "218", ",", "229", ")", ",", "# shower curtain", "\n", "(", "100", ",", "125", ",", "154", ")", ",", "\n", "(", "178", ",", "127", ",", "135", ")", ",", "\n", "(", "120", ",", "185", ",", "128", ")", ",", "\n", "(", "146", ",", "111", ",", "194", ")", ",", "\n", "(", "44", ",", "160", ",", "44", ")", ",", "# toilet", "\n", "(", "112", ",", "128", ",", "144", ")", ",", "# sink", "\n", "(", "96", ",", "207", ",", "209", ")", ",", "\n", "(", "227", ",", "119", ",", "194", ")", ",", "# bathtub", "\n", "(", "213", ",", "92", ",", "176", ")", ",", "\n", "(", "94", ",", "106", ",", "211", ")", ",", "\n", "(", "82", ",", "84", ",", "163", ")", ",", "# otherfurn", "\n", "(", "100", ",", "85", ",", "144", ")", ",", "\n", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.write_triangle_mesh": [[57, 60], ["trimesh.Trimesh", "trimesh.Trimesh.export"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.export"], ["    ", "mesh", "=", "trimesh", ".", "Trimesh", "(", "vertices", "=", "vertices", ",", "vertex_colors", "=", "colors", ",", "faces", "=", "faces", ",", "process", "=", "False", ")", "\n", "mesh", ".", "export", "(", "outputFile", ")", "\n", "\n", "", "def", "read_triangle_mesh", "(", "filename", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.read_triangle_mesh": [[61, 73], ["trimesh.load_mesh", "isinstance", "isinstance"], "function", ["None"], ["    ", "mesh", "=", "trimesh", ".", "load_mesh", "(", "filename", ",", "process", "=", "False", ")", "\n", "if", "isinstance", "(", "mesh", ",", "trimesh", ".", "PointCloud", ")", ":", "\n", "        ", "vertices", "=", "mesh", ".", "vertices", "\n", "colors", "=", "mesh", ".", "colors", "\n", "faces", "=", "None", "\n", "", "elif", "isinstance", "(", "mesh", ",", "trimesh", ".", "Trimesh", ")", ":", "\n", "        ", "vertices", "=", "mesh", ".", "vertices", "\n", "colors", "=", "mesh", ".", "visual", ".", "vertex_colors", "\n", "faces", "=", "mesh", ".", "faces", "\n", "\n", "", "return", "vertices", ",", "colors", ",", "faces", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.io3d.generate_bbox_mesh": [[74, 195], ["compute_length_vec3"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.random_sampling": [[36, 45], ["numpy.random.choice"], "function", ["None"], ["def", "random_sampling", "(", "pc", ",", "num_sample", ",", "replace", "=", "None", ",", "return_choices", "=", "False", ")", ":", "\n", "    ", "\"\"\" Input is NxC, output is num_samplexC\n    \"\"\"", "\n", "if", "replace", "is", "None", ":", "replace", "=", "(", "pc", ".", "shape", "[", "0", "]", "<", "num_sample", ")", "\n", "choices", "=", "np", ".", "random", ".", "choice", "(", "pc", ".", "shape", "[", "0", "]", ",", "num_sample", ",", "replace", "=", "replace", ")", "\n", "if", "return_choices", ":", "\n", "        ", "return", "pc", "[", "choices", "]", ",", "choices", "\n", "", "else", ":", "\n", "        ", "return", "pc", "[", "choices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_volume_batch": [[50, 65], ["range", "pc_util.point_cloud_to_volume", "numpy.vstack", "numpy.concatenate", "numpy.squeeze", "vol_list.append", "vol_list.append", "point_cloud_to_volume.flatten", "numpy.expand_dims", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_volume"], ["", "", "def", "point_cloud_to_volume_batch", "(", "point_clouds", ",", "vsize", "=", "12", ",", "radius", "=", "1.0", ",", "flatten", "=", "True", ")", ":", "\n", "    ", "\"\"\" Input is BxNx3 batch of point cloud\n        Output is Bx(vsize^3)\n    \"\"\"", "\n", "vol_list", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "point_clouds", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "vol", "=", "point_cloud_to_volume", "(", "np", ".", "squeeze", "(", "point_clouds", "[", "b", ",", ":", ",", ":", "]", ")", ",", "vsize", ",", "radius", ")", "\n", "if", "flatten", ":", "\n", "            ", "vol_list", ".", "append", "(", "vol", ".", "flatten", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "vol_list", ".", "append", "(", "np", ".", "expand_dims", "(", "np", ".", "expand_dims", "(", "vol", ",", "-", "1", ")", ",", "0", ")", ")", "\n", "", "", "if", "flatten", ":", "\n", "        ", "return", "np", ".", "vstack", "(", "vol_list", ")", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "concatenate", "(", "vol_list", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_volume": [[67, 78], ["numpy.zeros", "locations.astype.astype", "float"], "function", ["None"], ["", "", "def", "point_cloud_to_volume", "(", "points", ",", "vsize", ",", "radius", "=", "1.0", ")", ":", "\n", "    ", "\"\"\" input is Nx3 points.\n        output is vsize*vsize*vsize\n        assumes points are in range [-radius, radius]\n    \"\"\"", "\n", "vol", "=", "np", ".", "zeros", "(", "(", "vsize", ",", "vsize", ",", "vsize", ")", ")", "\n", "voxel", "=", "2", "*", "radius", "/", "float", "(", "vsize", ")", "\n", "locations", "=", "(", "points", "+", "radius", ")", "/", "voxel", "\n", "locations", "=", "locations", ".", "astype", "(", "int", ")", "\n", "vol", "[", "locations", "[", ":", ",", "0", "]", ",", "locations", "[", ":", ",", "1", "]", ",", "locations", "[", ":", ",", "2", "]", "]", "=", "1.0", "\n", "return", "vol", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.volume_to_point_cloud": [[79, 95], ["range", "numpy.vstack", "range", "len", "numpy.zeros", "range", "np.vstack.append", "numpy.array"], "function", ["None"], ["", "def", "volume_to_point_cloud", "(", "vol", ")", ":", "\n", "    ", "\"\"\" vol is occupancy grid (value = 0 or 1) of size vsize*vsize*vsize\n        return Nx3 numpy array.\n    \"\"\"", "\n", "vsize", "=", "vol", ".", "shape", "[", "0", "]", "\n", "assert", "(", "vol", ".", "shape", "[", "1", "]", "==", "vsize", "and", "vol", ".", "shape", "[", "1", "]", "==", "vsize", ")", "\n", "points", "=", "[", "]", "\n", "for", "a", "in", "range", "(", "vsize", ")", ":", "\n", "        ", "for", "b", "in", "range", "(", "vsize", ")", ":", "\n", "            ", "for", "c", "in", "range", "(", "vsize", ")", ":", "\n", "                ", "if", "vol", "[", "a", ",", "b", ",", "c", "]", "==", "1", ":", "\n", "                    ", "points", ".", "append", "(", "np", ".", "array", "(", "[", "a", ",", "b", ",", "c", "]", ")", ")", "\n", "", "", "", "", "if", "len", "(", "points", ")", "==", "0", ":", "\n", "        ", "return", "np", ".", "zeros", "(", "(", "0", ",", "3", ")", ")", "\n", "", "points", "=", "np", ".", "vstack", "(", "points", ")", "\n", "return", "points", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_volume_v2_batch": [[96, 106], ["range", "numpy.concatenate", "pc_util.point_cloud_to_volume_v2", "vol_list.append", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_volume_v2"], ["", "def", "point_cloud_to_volume_v2_batch", "(", "point_clouds", ",", "vsize", "=", "12", ",", "radius", "=", "1.0", ",", "num_sample", "=", "128", ")", ":", "\n", "    ", "\"\"\" Input is BxNx3 a batch of point cloud\n        Output is BxVxVxVxnum_samplex3\n        Added on Feb 19\n    \"\"\"", "\n", "vol_list", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "point_clouds", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "vol", "=", "point_cloud_to_volume_v2", "(", "point_clouds", "[", "b", ",", ":", ",", ":", "]", ",", "vsize", ",", "radius", ",", "num_sample", ")", "\n", "vol_list", ".", "append", "(", "np", ".", "expand_dims", "(", "vol", ",", "0", ")", ")", "\n", "", "return", "np", ".", "concatenate", "(", "vol_list", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_volume_v2": [[107, 144], ["numpy.zeros", "locations.astype.astype", "range", "range", "float", "tuple", "loc2pc[].append", "range", "range", "numpy.zeros", "numpy.vstack", "pc_util.random_sampling", "numpy.lib.pad", "numpy.array"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.random_sampling"], ["", "def", "point_cloud_to_volume_v2", "(", "points", ",", "vsize", ",", "radius", "=", "1.0", ",", "num_sample", "=", "128", ")", ":", "\n", "    ", "\"\"\" input is Nx3 points\n        output is vsize*vsize*vsize*num_sample*3\n        assumes points are in range [-radius, radius]\n        samples num_sample points in each voxel, if there are less than\n        num_sample points, replicate the points\n        Added on Feb 19\n    \"\"\"", "\n", "vol", "=", "np", ".", "zeros", "(", "(", "vsize", ",", "vsize", ",", "vsize", ",", "num_sample", ",", "3", ")", ")", "\n", "voxel", "=", "2", "*", "radius", "/", "float", "(", "vsize", ")", "\n", "locations", "=", "(", "points", "+", "radius", ")", "/", "voxel", "\n", "locations", "=", "locations", ".", "astype", "(", "int", ")", "\n", "loc2pc", "=", "{", "}", "\n", "for", "n", "in", "range", "(", "points", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "loc", "=", "tuple", "(", "locations", "[", "n", ",", ":", "]", ")", "\n", "if", "loc", "not", "in", "loc2pc", ":", "\n", "            ", "loc2pc", "[", "loc", "]", "=", "[", "]", "\n", "", "loc2pc", "[", "loc", "]", ".", "append", "(", "points", "[", "n", ",", ":", "]", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "vsize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "vsize", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "vsize", ")", ":", "\n", "                ", "if", "(", "i", ",", "j", ",", "k", ")", "not", "in", "loc2pc", ":", "\n", "                    ", "vol", "[", "i", ",", "j", ",", "k", ",", ":", ",", ":", "]", "=", "np", ".", "zeros", "(", "(", "num_sample", ",", "3", ")", ")", "\n", "", "else", ":", "\n", "                    ", "pc", "=", "loc2pc", "[", "(", "i", ",", "j", ",", "k", ")", "]", "# a list of (3,) arrays", "\n", "pc", "=", "np", ".", "vstack", "(", "pc", ")", "# kx3", "\n", "# Sample/pad to num_sample points", "\n", "if", "pc", ".", "shape", "[", "0", "]", ">", "num_sample", ":", "\n", "                        ", "pc", "=", "random_sampling", "(", "pc", ",", "num_sample", ",", "False", ")", "\n", "", "elif", "pc", ".", "shape", "[", "0", "]", "<", "num_sample", ":", "\n", "                        ", "pc", "=", "np", ".", "lib", ".", "pad", "(", "pc", ",", "(", "(", "0", ",", "num_sample", "-", "pc", ".", "shape", "[", "0", "]", ")", ",", "(", "0", ",", "0", ")", ")", ",", "'edge'", ")", "\n", "# Normalize", "\n", "", "pc_center", "=", "(", "np", ".", "array", "(", "[", "i", ",", "j", ",", "k", "]", ")", "+", "0.5", ")", "*", "voxel", "-", "radius", "\n", "pc", "=", "(", "pc", "-", "pc_center", ")", "/", "voxel", "# shift and scale", "\n", "vol", "[", "i", ",", "j", ",", "k", ",", ":", ",", ":", "]", "=", "pc", "\n", "", "", "", "", "return", "vol", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_image_batch": [[145, 155], ["range", "numpy.concatenate", "pc_util.point_cloud_to_image", "img_list.append", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_image"], ["", "def", "point_cloud_to_image_batch", "(", "point_clouds", ",", "imgsize", ",", "radius", "=", "1.0", ",", "num_sample", "=", "128", ")", ":", "\n", "    ", "\"\"\" Input is BxNx3 a batch of point cloud\n        Output is BxIxIxnum_samplex3\n        Added on Feb 19\n    \"\"\"", "\n", "img_list", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "point_clouds", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "img", "=", "point_cloud_to_image", "(", "point_clouds", "[", "b", ",", ":", ",", ":", "]", ",", "imgsize", ",", "radius", ",", "num_sample", ")", "\n", "img_list", ".", "append", "(", "np", ".", "expand_dims", "(", "img", ",", "0", ")", ")", "\n", "", "return", "np", ".", "concatenate", "(", "img_list", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_image": [[157, 190], ["numpy.zeros", "locations.astype.astype", "range", "range", "float", "tuple", "loc2pc[].append", "range", "numpy.zeros", "numpy.vstack", "pc_util.random_sampling", "numpy.lib.pad", "numpy.array"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.random_sampling"], ["", "def", "point_cloud_to_image", "(", "points", ",", "imgsize", ",", "radius", "=", "1.0", ",", "num_sample", "=", "128", ")", ":", "\n", "    ", "\"\"\" input is Nx3 points\n        output is imgsize*imgsize*num_sample*3\n        assumes points are in range [-radius, radius]\n        samples num_sample points in each pixel, if there are less than\n        num_sample points, replicate the points\n        Added on Feb 19\n    \"\"\"", "\n", "img", "=", "np", ".", "zeros", "(", "(", "imgsize", ",", "imgsize", ",", "num_sample", ",", "3", ")", ")", "\n", "pixel", "=", "2", "*", "radius", "/", "float", "(", "imgsize", ")", "\n", "locations", "=", "(", "points", "[", ":", ",", "0", ":", "2", "]", "+", "radius", ")", "/", "pixel", "# Nx2", "\n", "locations", "=", "locations", ".", "astype", "(", "int", ")", "\n", "loc2pc", "=", "{", "}", "\n", "for", "n", "in", "range", "(", "points", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "loc", "=", "tuple", "(", "locations", "[", "n", ",", ":", "]", ")", "\n", "if", "loc", "not", "in", "loc2pc", ":", "\n", "            ", "loc2pc", "[", "loc", "]", "=", "[", "]", "\n", "", "loc2pc", "[", "loc", "]", ".", "append", "(", "points", "[", "n", ",", ":", "]", ")", "\n", "", "for", "i", "in", "range", "(", "imgsize", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "imgsize", ")", ":", "\n", "            ", "if", "(", "i", ",", "j", ")", "not", "in", "loc2pc", ":", "\n", "                ", "img", "[", "i", ",", "j", ",", ":", ",", ":", "]", "=", "np", ".", "zeros", "(", "(", "num_sample", ",", "3", ")", ")", "\n", "", "else", ":", "\n", "                ", "pc", "=", "loc2pc", "[", "(", "i", ",", "j", ")", "]", "\n", "pc", "=", "np", ".", "vstack", "(", "pc", ")", "\n", "if", "pc", ".", "shape", "[", "0", "]", ">", "num_sample", ":", "\n", "                    ", "pc", "=", "random_sampling", "(", "pc", ",", "num_sample", ",", "False", ")", "\n", "", "elif", "pc", ".", "shape", "[", "0", "]", "<", "num_sample", ":", "\n", "                    ", "pc", "=", "np", ".", "lib", ".", "pad", "(", "pc", ",", "(", "(", "0", ",", "num_sample", "-", "pc", ".", "shape", "[", "0", "]", ")", ",", "(", "0", ",", "0", ")", ")", ",", "'edge'", ")", "\n", "", "pc_center", "=", "(", "np", ".", "array", "(", "[", "i", ",", "j", "]", ")", "+", "0.5", ")", "*", "pixel", "-", "radius", "\n", "pc", "[", ":", ",", "0", ":", "2", "]", "=", "(", "pc", "[", ":", ",", "0", ":", "2", "]", "-", "pc_center", ")", "/", "pixel", "\n", "img", "[", "i", ",", "j", ",", ":", ",", ":", "]", "=", "pc", "\n", "", "", "", "return", "img", "\n", "# ----------------------------------------", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.read_ply": [[194, 200], ["PlyData.read", "numpy.array"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "def", "read_ply", "(", "filename", ")", ":", "\n", "    ", "\"\"\" read XYZ point cloud from filename PLY file \"\"\"", "\n", "plydata", "=", "PlyData", ".", "read", "(", "filename", ")", "\n", "pc", "=", "plydata", "[", "'vertex'", "]", ".", "data", "\n", "pc_array", "=", "np", ".", "array", "(", "[", "[", "x", ",", "y", ",", "z", "]", "for", "x", ",", "y", ",", "z", "in", "pc", "]", ")", "\n", "return", "pc_array", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply": [[202, 208], ["numpy.array", "PlyElement.describe", "PlyData().write", "range", "PlyData"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.describe", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "write_ply", "(", "points", ",", "filename", ",", "text", "=", "True", ")", ":", "\n", "    ", "\"\"\" input: Nx3, write points to filename as PLY format. \"\"\"", "\n", "points", "=", "[", "(", "points", "[", "i", ",", "0", "]", ",", "points", "[", "i", ",", "1", "]", ",", "points", "[", "i", ",", "2", "]", ")", "for", "i", "in", "range", "(", "points", ".", "shape", "[", "0", "]", ")", "]", "\n", "vertex", "=", "np", ".", "array", "(", "points", ",", "dtype", "=", "[", "(", "'x'", ",", "'f4'", ")", ",", "(", "'y'", ",", "'f4'", ")", ",", "(", "'z'", ",", "'f4'", ")", "]", ")", "\n", "el", "=", "PlyElement", ".", "describe", "(", "vertex", ",", "'vertex'", ",", "comments", "=", "[", "'vertices'", "]", ")", "\n", "PlyData", "(", "[", "el", "]", ",", "text", "=", "text", ")", ".", "write", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply_color": [[209, 229], ["labels.astype.astype", "range", "numpy.array", "PlyElement.describe", "PlyData().write", "colormap", "np.array.append", "numpy.max", "numpy.max", "range", "int", "PlyData", "float"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.describe", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "write_ply_color", "(", "points", ",", "labels", ",", "filename", ",", "num_classes", "=", "None", ",", "colormap", "=", "pyplot", ".", "cm", ".", "jet", ")", ":", "\n", "    ", "\"\"\" Color (N,3) points with labels (N) within range 0 ~ num_classes-1 as OBJ file \"\"\"", "\n", "labels", "=", "labels", ".", "astype", "(", "int", ")", "\n", "N", "=", "points", ".", "shape", "[", "0", "]", "\n", "if", "num_classes", "is", "None", ":", "\n", "        ", "num_classes", "=", "np", ".", "max", "(", "labels", ")", "+", "1", "\n", "", "else", ":", "\n", "        ", "assert", "(", "num_classes", ">", "np", ".", "max", "(", "labels", ")", ")", "\n", "\n", "", "vertex", "=", "[", "]", "\n", "#colors = [pyplot.cm.jet(i/float(num_classes)) for i in range(num_classes)]    ", "\n", "colors", "=", "[", "colormap", "(", "i", "/", "float", "(", "num_classes", ")", ")", "for", "i", "in", "range", "(", "num_classes", ")", "]", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "c", "=", "colors", "[", "labels", "[", "i", "]", "]", "\n", "c", "=", "[", "int", "(", "x", "*", "255", ")", "for", "x", "in", "c", "]", "\n", "vertex", ".", "append", "(", "(", "points", "[", "i", ",", "0", "]", ",", "points", "[", "i", ",", "1", "]", ",", "points", "[", "i", ",", "2", "]", ",", "c", "[", "0", "]", ",", "c", "[", "1", "]", ",", "c", "[", "2", "]", ")", ")", "\n", "", "vertex", "=", "np", ".", "array", "(", "vertex", ",", "dtype", "=", "[", "(", "'x'", ",", "'f4'", ")", ",", "(", "'y'", ",", "'f4'", ")", ",", "(", "'z'", ",", "'f4'", ")", ",", "(", "'red'", ",", "'u1'", ")", ",", "(", "'green'", ",", "'u1'", ")", ",", "(", "'blue'", ",", "'u1'", ")", "]", ")", "\n", "\n", "el", "=", "PlyElement", ".", "describe", "(", "vertex", ",", "'vertex'", ",", "comments", "=", "[", "'vertices'", "]", ")", "\n", "PlyData", "(", "[", "el", "]", ",", "text", "=", "True", ")", ".", "write", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply_rgb": [[230, 239], ["colors.astype.astype", "open", "range", "open.close", "open.write"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "write_ply_rgb", "(", "points", ",", "colors", ",", "out_filename", ",", "num_classes", "=", "None", ")", ":", "\n", "    ", "\"\"\" Color (N,3) points with RGB colors (N,3) within range [0,255] as OBJ file \"\"\"", "\n", "colors", "=", "colors", ".", "astype", "(", "int", ")", "\n", "N", "=", "points", ".", "shape", "[", "0", "]", "\n", "fout", "=", "open", "(", "out_filename", ",", "'w'", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "c", "=", "colors", "[", "i", ",", ":", "]", "\n", "fout", ".", "write", "(", "'v %f %f %f %d %d %d\\n'", "%", "(", "points", "[", "i", ",", "0", "]", ",", "points", "[", "i", ",", "1", "]", ",", "points", "[", "i", ",", "2", "]", ",", "c", "[", "0", "]", ",", "c", "[", "1", "]", ",", "c", "[", "2", "]", ")", ")", "\n", "", "fout", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.pyplot_draw_point_cloud": [[244, 253], ["plt.figure", "plt.figure.add_subplot", "fig.add_subplot.scatter", "fig.add_subplot.set_xlabel", "fig.add_subplot.set_ylabel", "fig.add_subplot.set_zlabel"], "function", ["None"], ["", "def", "pyplot_draw_point_cloud", "(", "points", ",", "output_filename", ")", ":", "\n", "    ", "\"\"\" points is a Nx3 numpy array \"\"\"", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ",", "projection", "=", "'3d'", ")", "\n", "ax", ".", "scatter", "(", "points", "[", ":", ",", "0", "]", ",", "points", "[", ":", ",", "1", "]", ",", "points", "[", ":", ",", "2", "]", ")", "\n", "ax", ".", "set_xlabel", "(", "'x'", ")", "\n", "ax", ".", "set_ylabel", "(", "'y'", ")", "\n", "ax", ".", "set_zlabel", "(", "'z'", ")", "\n", "#savefig(output_filename)", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.pyplot_draw_volume": [[255, 261], ["pc_util.volume_to_point_cloud", "pc_util.pyplot_draw_point_cloud"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.volume_to_point_cloud", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.pyplot_draw_point_cloud"], ["", "def", "pyplot_draw_volume", "(", "vol", ",", "output_filename", ")", ":", "\n", "    ", "\"\"\" vol is of size vsize*vsize*vsize\n        output an image to output_filename\n    \"\"\"", "\n", "points", "=", "volume_to_point_cloud", "(", "vol", ")", "\n", "pyplot_draw_point_cloud", "(", "points", ",", "output_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.rotate_point_cloud": [[265, 277], ["points.mean", "numpy.array", "numpy.dot", "numpy.sin", "numpy.cos", "numpy.random.uniform"], "function", ["None"], ["", "def", "rotate_point_cloud", "(", "points", ",", "rotation_matrix", "=", "None", ")", ":", "\n", "    ", "\"\"\" Input: (n,3), Output: (n,3) \"\"\"", "\n", "# Rotate in-place around Z axis.", "\n", "if", "rotation_matrix", "is", "None", ":", "\n", "        ", "rotation_angle", "=", "np", ".", "random", ".", "uniform", "(", ")", "*", "2", "*", "np", ".", "pi", "\n", "sinval", ",", "cosval", "=", "np", ".", "sin", "(", "rotation_angle", ")", ",", "np", ".", "cos", "(", "rotation_angle", ")", "\n", "rotation_matrix", "=", "np", ".", "array", "(", "[", "[", "cosval", ",", "sinval", ",", "0", "]", ",", "\n", "[", "-", "sinval", ",", "cosval", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "", "ctr", "=", "points", ".", "mean", "(", "axis", "=", "0", ")", "\n", "rotated_data", "=", "np", ".", "dot", "(", "points", "-", "ctr", ",", "rotation_matrix", ")", "+", "ctr", "\n", "return", "rotated_data", ",", "rotation_matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.rotate_pc_along_y": [[278, 287], ["numpy.cos", "numpy.sin", "numpy.array", "numpy.dot", "numpy.transpose"], "function", ["None"], ["", "def", "rotate_pc_along_y", "(", "pc", ",", "rot_angle", ")", ":", "\n", "    ", "''' Input ps is NxC points with first 3 channels as XYZ\n        z is facing forward, x is left ward, y is downward\n    '''", "\n", "cosval", "=", "np", ".", "cos", "(", "rot_angle", ")", "\n", "sinval", "=", "np", ".", "sin", "(", "rot_angle", ")", "\n", "rotmat", "=", "np", ".", "array", "(", "[", "[", "cosval", ",", "-", "sinval", "]", ",", "[", "sinval", ",", "cosval", "]", "]", ")", "\n", "pc", "[", ":", ",", "[", "0", ",", "2", "]", "]", "=", "np", ".", "dot", "(", "pc", "[", ":", ",", "[", "0", ",", "2", "]", "]", ",", "np", ".", "transpose", "(", "rotmat", ")", ")", "\n", "return", "pc", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.roty": [[288, 295], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "roty", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "0", ",", "s", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "-", "s", ",", "0", ",", "c", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.roty_batch": [[296, 311], ["numpy.zeros", "numpy.cos", "numpy.sin", "tuple", "list"], "function", ["None"], ["", "def", "roty_batch", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\n    t: (x1,x2,...xn)\n    return: (x1,x2,...,xn,3,3)\n    \"\"\"", "\n", "input_shape", "=", "t", ".", "shape", "\n", "output", "=", "np", ".", "zeros", "(", "tuple", "(", "list", "(", "input_shape", ")", "+", "[", "3", ",", "3", "]", ")", ")", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "output", "[", "...", ",", "0", ",", "0", "]", "=", "c", "\n", "output", "[", "...", ",", "0", ",", "2", "]", "=", "s", "\n", "output", "[", "...", ",", "1", ",", "1", "]", "=", "1", "\n", "output", "[", "...", ",", "2", ",", "0", "]", "=", "-", "s", "\n", "output", "[", "...", ",", "2", ",", "2", "]", "=", "c", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.rotz": [[312, 319], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "rotz", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the z-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "-", "s", ",", "0", "]", ",", "\n", "[", "s", ",", "c", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.bbox_corner_dist_measure": [[324, 345], ["range", "max", "print", "sum", "numpy.linalg.norm().sum", "numpy.linalg.norm", "range", "range", "numpy.linalg.norm"], "function", ["None"], ["", "def", "bbox_corner_dist_measure", "(", "crnr1", ",", "crnr2", ")", ":", "\n", "    ", "\"\"\" compute distance between box corners to replace iou\n    Args:\n        crnr1, crnr2: Nx3 points of box corners in camera axis (y points down)\n        output is a scalar between 0 and 1        \n    \"\"\"", "\n", "\n", "dist", "=", "sys", ".", "maxsize", "\n", "for", "y", "in", "range", "(", "4", ")", ":", "\n", "        ", "rows", "=", "(", "[", "(", "x", "+", "y", ")", "%", "4", "for", "x", "in", "range", "(", "4", ")", "]", "+", "[", "4", "+", "(", "x", "+", "y", ")", "%", "4", "for", "x", "in", "range", "(", "4", ")", "]", ")", "\n", "d_", "=", "np", ".", "linalg", ".", "norm", "(", "crnr2", "[", "rows", ",", ":", "]", "-", "crnr1", ",", "axis", "=", "1", ")", ".", "sum", "(", ")", "/", "8.0", "\n", "if", "d_", "<", "dist", ":", "\n", "            ", "dist", "=", "d_", "\n", "\n", "", "", "u", "=", "sum", "(", "[", "np", ".", "linalg", ".", "norm", "(", "x", "[", "0", ",", ":", "]", "-", "x", "[", "6", ",", ":", "]", ")", "for", "x", "in", "[", "crnr1", ",", "crnr2", "]", "]", ")", "/", "2.0", "\n", "\n", "measure", "=", "max", "(", "1.0", "-", "dist", "/", "u", ",", "0", ")", "\n", "print", "(", "measure", ")", "\n", "\n", "\n", "return", "measure", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.point_cloud_to_bbox": [[347, 358], ["numpy.concatenate", "len", "points.min", "points.max"], "function", ["None"], ["", "def", "point_cloud_to_bbox", "(", "points", ")", ":", "\n", "    ", "\"\"\" Extract the axis aligned box from a pcl or batch of pcls\n    Args:\n        points: Nx3 points or BxNx3\n        output is 6 dim: xyz pos of center and 3 lengths        \n    \"\"\"", "\n", "which_dim", "=", "len", "(", "points", ".", "shape", ")", "-", "2", "# first dim if a single cloud and second if batch", "\n", "mn", ",", "mx", "=", "points", ".", "min", "(", "which_dim", ")", ",", "points", ".", "max", "(", "which_dim", ")", "\n", "lengths", "=", "mx", "-", "mn", "\n", "cntr", "=", "0.5", "*", "(", "mn", "+", "mx", ")", "\n", "return", "np", ".", "concatenate", "(", "[", "cntr", ",", "lengths", "]", ",", "axis", "=", "which_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_bbox": [[359, 389], ["trimesh.scene.Scene", "trimesh.util.concatenate", "trimesh.util.concatenate.export", "numpy.eye", "trimesh.creation.box", "trimesh.scene.Scene.add_geometry", "trimesh.scene.Scene.dump", "pc_util.write_bbox.convert_box_to_trimesh_fmt"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.export"], ["", "def", "write_bbox", "(", "scene_bbox", ",", "out_filename", ")", ":", "\n", "    ", "\"\"\"Export scene bbox to meshes\n    Args:\n        scene_bbox: (N x 6 numpy array): xyz pos of center and 3 lengths\n        out_filename: (string) filename\n\n    Note:\n        To visualize the boxes in MeshLab.\n        1. Select the objects (the boxes)\n        2. Filters -> Polygon and Quad Mesh -> Turn into Quad-Dominant Mesh\n        3. Select Wireframe view.\n    \"\"\"", "\n", "def", "convert_box_to_trimesh_fmt", "(", "box", ")", ":", "\n", "        ", "ctr", "=", "box", "[", ":", "3", "]", "\n", "lengths", "=", "box", "[", "3", ":", "]", "\n", "trns", "=", "np", ".", "eye", "(", "4", ")", "\n", "trns", "[", "0", ":", "3", ",", "3", "]", "=", "ctr", "\n", "trns", "[", "3", ",", "3", "]", "=", "1.0", "\n", "box_trimesh_fmt", "=", "trimesh", ".", "creation", ".", "box", "(", "lengths", ",", "trns", ")", "\n", "return", "box_trimesh_fmt", "\n", "\n", "", "scene", "=", "trimesh", ".", "scene", ".", "Scene", "(", ")", "\n", "for", "box", "in", "scene_bbox", ":", "\n", "        ", "scene", ".", "add_geometry", "(", "convert_box_to_trimesh_fmt", "(", "box", ")", ")", "\n", "\n", "", "mesh_list", "=", "trimesh", ".", "util", ".", "concatenate", "(", "scene", ".", "dump", "(", ")", ")", "\n", "# save to ply file    ", "\n", "mesh_list", ".", "export", "(", "out_filename", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox": [[390, 427], ["trimesh.scene.Scene", "trimesh.util.concatenate", "trimesh.util.concatenate.export", "numpy.zeros", "numpy.cos", "numpy.sin", "numpy.array", "numpy.eye", "pc_util.write_oriented_bbox.heading2rotmat"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.export"], ["", "def", "write_oriented_bbox", "(", "scene_bbox", ",", "out_filename", ")", ":", "\n", "    ", "\"\"\"Export oriented (around Z axis) scene bbox to meshes\n    Args:\n        scene_bbox: (N x 7 numpy array): xyz pos of center and 3 lengths (dx,dy,dz)\n            and heading angle around Z axis.\n            Y forward, X right, Z upward. heading angle of positive X is 0,\n            heading angle of positive Y is 90 degrees.\n        out_filename: (string) filename\n    \"\"\"", "\n", "def", "heading2rotmat", "(", "heading_angle", ")", ":", "\n", "        ", "pass", "\n", "rotmat", "=", "np", ".", "zeros", "(", "(", "3", ",", "3", ")", ")", "\n", "rotmat", "[", "2", ",", "2", "]", "=", "1", "\n", "cosval", "=", "np", ".", "cos", "(", "heading_angle", ")", "\n", "sinval", "=", "np", ".", "sin", "(", "heading_angle", ")", "\n", "rotmat", "[", "0", ":", "2", ",", "0", ":", "2", "]", "=", "np", ".", "array", "(", "[", "[", "cosval", ",", "-", "sinval", "]", ",", "[", "sinval", ",", "cosval", "]", "]", ")", "\n", "return", "rotmat", "\n", "\n", "", "def", "convert_oriented_box_to_trimesh_fmt", "(", "box", ")", ":", "\n", "        ", "ctr", "=", "box", "[", ":", "3", "]", "\n", "lengths", "=", "box", "[", "3", ":", "6", "]", "\n", "trns", "=", "np", ".", "eye", "(", "4", ")", "\n", "trns", "[", "0", ":", "3", ",", "3", "]", "=", "ctr", "\n", "trns", "[", "3", ",", "3", "]", "=", "1.0", "\n", "trns", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "heading2rotmat", "(", "box", "[", "6", "]", ")", "\n", "box_trimesh_fmt", "=", "trimesh", ".", "creation", ".", "box", "(", "lengths", ",", "trns", ")", "\n", "return", "box_trimesh_fmt", "\n", "\n", "", "scene", "=", "trimesh", ".", "scene", ".", "Scene", "(", ")", "\n", "for", "box", "in", "scene_bbox", ":", "\n", "        ", "scene", ".", "add_geometry", "(", "convert_oriented_box_to_trimesh_fmt", "(", "box", ")", ")", "\n", "\n", "", "mesh_list", "=", "trimesh", ".", "util", ".", "concatenate", "(", "scene", ".", "dump", "(", ")", ")", "\n", "# save to ply file    ", "\n", "mesh_list", ".", "export", "(", "out_filename", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.generate_bbox_mesh": [[428, 544], ["compute_length_vec3"], "function", ["None"], ["", "def", "generate_bbox_mesh", "(", "bbox", ",", "output_file", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    bbox: np array (n, 6),\n    output_file: string\n    \"\"\"", "\n", "def", "create_cylinder_mesh", "(", "radius", ",", "p0", ",", "p1", ",", "stacks", "=", "10", ",", "slices", "=", "10", ")", ":", "\n", "\n", "        ", "def", "compute_length_vec3", "(", "vec3", ")", ":", "\n", "            ", "return", "math", ".", "sqrt", "(", "vec3", "[", "0", "]", "*", "vec3", "[", "0", "]", "+", "vec3", "[", "1", "]", "*", "vec3", "[", "1", "]", "+", "vec3", "[", "2", "]", "*", "vec3", "[", "2", "]", ")", "\n", "\n", "", "def", "rotation", "(", "axis", ",", "angle", ")", ":", "\n", "            ", "rot", "=", "np", ".", "eye", "(", "4", ")", "\n", "c", "=", "np", ".", "cos", "(", "-", "angle", ")", "\n", "s", "=", "np", ".", "sin", "(", "-", "angle", ")", "\n", "t", "=", "1.0", "-", "c", "\n", "axis", "/=", "compute_length_vec3", "(", "axis", ")", "\n", "x", "=", "axis", "[", "0", "]", "\n", "y", "=", "axis", "[", "1", "]", "\n", "z", "=", "axis", "[", "2", "]", "\n", "rot", "[", "0", ",", "0", "]", "=", "1", "+", "t", "*", "(", "x", "*", "x", "-", "1", ")", "\n", "rot", "[", "0", ",", "1", "]", "=", "z", "*", "s", "+", "t", "*", "x", "*", "y", "\n", "rot", "[", "0", ",", "2", "]", "=", "-", "y", "*", "s", "+", "t", "*", "x", "*", "z", "\n", "rot", "[", "1", ",", "0", "]", "=", "-", "z", "*", "s", "+", "t", "*", "x", "*", "y", "\n", "rot", "[", "1", ",", "1", "]", "=", "1", "+", "t", "*", "(", "y", "*", "y", "-", "1", ")", "\n", "rot", "[", "1", ",", "2", "]", "=", "x", "*", "s", "+", "t", "*", "y", "*", "z", "\n", "rot", "[", "2", ",", "0", "]", "=", "y", "*", "s", "+", "t", "*", "x", "*", "z", "\n", "rot", "[", "2", ",", "1", "]", "=", "-", "x", "*", "s", "+", "t", "*", "y", "*", "z", "\n", "rot", "[", "2", ",", "2", "]", "=", "1", "+", "t", "*", "(", "z", "*", "z", "-", "1", ")", "\n", "return", "rot", "\n", "\n", "", "verts", "=", "[", "]", "\n", "indices", "=", "[", "]", "\n", "diff", "=", "(", "p1", "-", "p0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "height", "=", "compute_length_vec3", "(", "diff", ")", "\n", "for", "i", "in", "range", "(", "stacks", "+", "1", ")", ":", "\n", "            ", "for", "i2", "in", "range", "(", "slices", ")", ":", "\n", "                ", "theta", "=", "i2", "*", "2.0", "*", "math", ".", "pi", "/", "slices", "\n", "pos", "=", "np", ".", "array", "(", "[", "radius", "*", "math", ".", "cos", "(", "theta", ")", ",", "radius", "*", "math", ".", "sin", "(", "theta", ")", ",", "height", "*", "i", "/", "stacks", "]", ")", "\n", "verts", ".", "append", "(", "pos", ")", "\n", "", "", "for", "i", "in", "range", "(", "stacks", ")", ":", "\n", "            ", "for", "i2", "in", "range", "(", "slices", ")", ":", "\n", "                ", "i2p1", "=", "math", ".", "fmod", "(", "i2", "+", "1", ",", "slices", ")", "\n", "indices", ".", "append", "(", "np", ".", "array", "(", "[", "(", "i", "+", "1", ")", "*", "slices", "+", "i2", ",", "i", "*", "slices", "+", "i2", ",", "i", "*", "slices", "+", "i2p1", "]", ",", "dtype", "=", "np", ".", "uint32", ")", ")", "\n", "indices", ".", "append", "(", "np", ".", "array", "(", "[", "(", "i", "+", "1", ")", "*", "slices", "+", "i2", ",", "i", "*", "slices", "+", "i2p1", ",", "(", "i", "+", "1", ")", "*", "slices", "+", "i2p1", "]", ",", "dtype", "=", "np", ".", "uint32", ")", ")", "\n", "", "", "transform", "=", "np", ".", "eye", "(", "4", ")", "\n", "va", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "1", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vb", "=", "diff", "\n", "vb", "/=", "compute_length_vec3", "(", "vb", ")", "\n", "axis", "=", "np", ".", "cross", "(", "vb", ",", "va", ")", "\n", "angle", "=", "np", ".", "arccos", "(", "np", ".", "clip", "(", "np", ".", "dot", "(", "va", ",", "vb", ")", ",", "-", "1", ",", "1", ")", ")", "\n", "if", "angle", "!=", "0", ":", "\n", "            ", "if", "compute_length_vec3", "(", "axis", ")", "==", "0", ":", "\n", "                ", "dotx", "=", "va", "[", "0", "]", "\n", "if", "(", "math", ".", "fabs", "(", "dotx", ")", "!=", "1.0", ")", ":", "\n", "                    ", "axis", "=", "np", ".", "array", "(", "[", "1", ",", "0", ",", "0", "]", ")", "-", "dotx", "*", "va", "\n", "", "else", ":", "\n", "                    ", "axis", "=", "np", ".", "array", "(", "[", "0", ",", "1", ",", "0", "]", ")", "-", "va", "[", "1", "]", "*", "va", "\n", "", "axis", "/=", "compute_length_vec3", "(", "axis", ")", "\n", "", "transform", "=", "rotation", "(", "axis", ",", "-", "angle", ")", "\n", "", "transform", "[", ":", "3", ",", "3", "]", "+=", "p0", "\n", "verts", "=", "[", "np", ".", "dot", "(", "transform", ",", "np", ".", "array", "(", "[", "v", "[", "0", "]", ",", "v", "[", "1", "]", ",", "v", "[", "2", "]", ",", "1.0", "]", ")", ")", "for", "v", "in", "verts", "]", "\n", "verts", "=", "[", "np", ".", "array", "(", "[", "v", "[", "0", "]", ",", "v", "[", "1", "]", ",", "v", "[", "2", "]", "]", ")", "/", "v", "[", "3", "]", "for", "v", "in", "verts", "]", "\n", "\n", "return", "verts", ",", "indices", "\n", "\n", "", "def", "get_bbox_edges", "(", "bbox_min", ",", "bbox_max", ")", ":", "\n", "        ", "def", "get_bbox_verts", "(", "bbox_min", ",", "bbox_max", ")", ":", "\n", "            ", "verts", "=", "[", "\n", "np", ".", "array", "(", "[", "bbox_min", "[", "0", "]", ",", "bbox_min", "[", "1", "]", ",", "bbox_min", "[", "2", "]", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "bbox_max", "[", "0", "]", ",", "bbox_min", "[", "1", "]", ",", "bbox_min", "[", "2", "]", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "bbox_max", "[", "0", "]", ",", "bbox_max", "[", "1", "]", ",", "bbox_min", "[", "2", "]", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "bbox_min", "[", "0", "]", ",", "bbox_max", "[", "1", "]", ",", "bbox_min", "[", "2", "]", "]", ")", ",", "\n", "\n", "np", ".", "array", "(", "[", "bbox_min", "[", "0", "]", ",", "bbox_min", "[", "1", "]", ",", "bbox_max", "[", "2", "]", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "bbox_max", "[", "0", "]", ",", "bbox_min", "[", "1", "]", ",", "bbox_max", "[", "2", "]", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "bbox_max", "[", "0", "]", ",", "bbox_max", "[", "1", "]", ",", "bbox_max", "[", "2", "]", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "bbox_min", "[", "0", "]", ",", "bbox_max", "[", "1", "]", ",", "bbox_max", "[", "2", "]", "]", ")", "\n", "]", "\n", "return", "verts", "\n", "\n", "", "box_verts", "=", "get_bbox_verts", "(", "bbox_min", ",", "bbox_max", ")", "\n", "edges", "=", "[", "\n", "(", "box_verts", "[", "0", "]", ",", "box_verts", "[", "1", "]", ")", ",", "\n", "(", "box_verts", "[", "1", "]", ",", "box_verts", "[", "2", "]", ")", ",", "\n", "(", "box_verts", "[", "2", "]", ",", "box_verts", "[", "3", "]", ")", ",", "\n", "(", "box_verts", "[", "3", "]", ",", "box_verts", "[", "0", "]", ")", ",", "\n", "\n", "(", "box_verts", "[", "4", "]", ",", "box_verts", "[", "5", "]", ")", ",", "\n", "(", "box_verts", "[", "5", "]", ",", "box_verts", "[", "6", "]", ")", ",", "\n", "(", "box_verts", "[", "6", "]", ",", "box_verts", "[", "7", "]", ")", ",", "\n", "(", "box_verts", "[", "7", "]", ",", "box_verts", "[", "4", "]", ")", ",", "\n", "\n", "(", "box_verts", "[", "0", "]", ",", "box_verts", "[", "4", "]", ")", ",", "\n", "(", "box_verts", "[", "1", "]", ",", "box_verts", "[", "5", "]", ")", ",", "\n", "(", "box_verts", "[", "2", "]", ",", "box_verts", "[", "6", "]", ")", ",", "\n", "(", "box_verts", "[", "3", "]", ",", "box_verts", "[", "7", "]", ")", "\n", "]", "\n", "return", "edges", "\n", "\n", "", "radius", "=", "0.02", "\n", "offset", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "verts", "=", "[", "]", "\n", "indices", "=", "[", "]", "\n", "for", "box", "in", "bbox", ":", "\n", "        ", "box_min", "=", "np", ".", "array", "(", "[", "box", "[", "0", "]", ",", "box", "[", "1", "]", ",", "box", "[", "2", "]", "]", ")", "\n", "box_max", "=", "np", ".", "array", "(", "[", "box", "[", "3", "]", ",", "box", "[", "4", "]", ",", "box", "[", "5", "]", "]", ")", "\n", "edges", "=", "get_bbox_edges", "(", "box_min", ",", "box_max", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "edges", ")", ")", ":", "\n", "            ", "cyl_verts", ",", "cyl_ind", "=", "create_cylinder_mesh", "(", "radius", ",", "edges", "[", "k", "]", "[", "0", "]", ",", "edges", "[", "k", "]", "[", "1", "]", ")", "\n", "cur_num_verts", "=", "len", "(", "verts", ")", "\n", "cyl_verts", "=", "[", "x", "+", "offset", "for", "x", "in", "cyl_verts", "]", "\n", "cyl_ind", "=", "[", "x", "+", "cur_num_verts", "for", "x", "in", "cyl_ind", "]", "\n", "verts", ".", "extend", "(", "cyl_verts", ")", "\n", "indices", ".", "extend", "(", "cyl_ind", ")", "\n", "\n", "", "", "return", "verts", ",", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox_": [[545, 610], ["pc_util.write_oriented_bbox.convert_oriented_box_to_trimesh_fmt"], "function", ["None"], ["", "def", "write_oriented_bbox_", "(", "scene_bbox", ",", "out_filename", ")", ":", "\n", "    ", "\"\"\"Export oriented (around Z axis) scene bbox to meshes\n    Args:\n        scene_bbox: (N x 7 numpy array): xyz pos of center and 3 lengths (dx,dy,dz)\n            and heading angle around Z axis.\n            Y forward, X right, Z upward. heading angle of positive X is 0,\n            heading angle of positive Y is 90 degrees.\n        out_filename: (string) filename\n    \"\"\"", "\n", "\n", "def", "write_ply_mesh", "(", "verts", ",", "colors", ",", "indices", ",", "output_file", ")", ":", "\n", "        ", "if", "colors", "is", "None", ":", "\n", "            ", "colors", "=", "np", ".", "zeros_like", "(", "verts", ")", "\n", "", "if", "indices", "is", "None", ":", "\n", "            ", "indices", "=", "[", "]", "\n", "\n", "", "file", "=", "open", "(", "output_file", ",", "'w'", ")", "\n", "file", ".", "write", "(", "'ply \\n'", ")", "\n", "file", ".", "write", "(", "'format ascii 1.0\\n'", ")", "\n", "file", ".", "write", "(", "'element vertex {:d}\\n'", ".", "format", "(", "len", "(", "verts", ")", ")", ")", "\n", "file", ".", "write", "(", "'property float x\\n'", ")", "\n", "file", ".", "write", "(", "'property float y\\n'", ")", "\n", "file", ".", "write", "(", "'property float z\\n'", ")", "\n", "file", ".", "write", "(", "'property uchar red\\n'", ")", "\n", "file", ".", "write", "(", "'property uchar green\\n'", ")", "\n", "file", ".", "write", "(", "'property uchar blue\\n'", ")", "\n", "file", ".", "write", "(", "'element face {:d}\\n'", ".", "format", "(", "len", "(", "indices", ")", ")", ")", "\n", "file", ".", "write", "(", "'property list uchar uint vertex_indices\\n'", ")", "\n", "file", ".", "write", "(", "'end_header\\n'", ")", "\n", "for", "vert", ",", "color", "in", "zip", "(", "verts", ",", "colors", ")", ":", "\n", "            ", "file", ".", "write", "(", "\"{:f} {:f} {:f} {:d} {:d} {:d}\\n\"", ".", "format", "(", "vert", "[", "0", "]", ",", "vert", "[", "1", "]", ",", "vert", "[", "2", "]", ",", "int", "(", "color", "[", "0", "]", "*", "255", ")", ",", "int", "(", "color", "[", "1", "]", "*", "255", ")", ",", "int", "(", "color", "[", "2", "]", "*", "255", ")", ")", ")", "\n", "", "for", "ind", "in", "indices", ":", "\n", "            ", "file", ".", "write", "(", "'3 {:d} {:d} {:d}\\n'", ".", "format", "(", "ind", "[", "0", "]", ",", "ind", "[", "1", "]", ",", "ind", "[", "2", "]", ")", ")", "\n", "", "file", ".", "close", "(", ")", "\n", "\n", "", "def", "heading2rotmat", "(", "heading_angle", ")", ":", "\n", "        ", "pass", "\n", "rotmat", "=", "np", ".", "zeros", "(", "(", "3", ",", "3", ")", ")", "\n", "rotmat", "[", "2", ",", "2", "]", "=", "1", "\n", "cosval", "=", "np", ".", "cos", "(", "heading_angle", ")", "\n", "sinval", "=", "np", ".", "sin", "(", "heading_angle", ")", "\n", "rotmat", "[", "0", ":", "2", ",", "0", ":", "2", "]", "=", "np", ".", "array", "(", "[", "[", "cosval", ",", "-", "sinval", "]", ",", "[", "sinval", ",", "cosval", "]", "]", ")", "\n", "return", "rotmat", "\n", "\n", "", "def", "convert_oriented_box_to_trimesh_fmt", "(", "box", ")", ":", "\n", "        ", "ctr", "=", "box", "[", ":", "3", "]", "\n", "lengths", "=", "box", "[", "3", ":", "6", "]", "\n", "trns", "=", "np", ".", "eye", "(", "4", ")", "\n", "trns", "[", "0", ":", "3", ",", "3", "]", "=", "ctr", "\n", "trns", "[", "3", ",", "3", "]", "=", "1.0", "\n", "trns", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "heading2rotmat", "(", "box", "[", "6", "]", ")", "\n", "box", "=", "np", ".", "array", "(", "[", "[", "-", "0.5", ",", "-", "0.5", ",", "-", "0.5", ",", "0.5", ",", "0.5", ",", "0.5", "]", "]", ")", "\n", "box", "[", ":", ",", "0", "]", "=", "box", "[", ":", ",", "0", "]", "*", "lengths", "[", "0", "]", "+", "trns", "[", "0", ",", "3", "]", "\n", "box", "[", ":", ",", "1", "]", "=", "box", "[", ":", ",", "1", "]", "*", "lengths", "[", "1", "]", "+", "trns", "[", "1", ",", "3", "]", "\n", "box", "[", ":", ",", "2", "]", "=", "box", "[", ":", ",", "2", "]", "*", "lengths", "[", "2", "]", "+", "trns", "[", "2", ",", "3", "]", "\n", "box", "[", ":", ",", "3", "]", "=", "box", "[", ":", ",", "3", "]", "*", "lengths", "[", "0", "]", "+", "trns", "[", "0", ",", "3", "]", "\n", "box", "[", ":", ",", "4", "]", "=", "box", "[", ":", ",", "4", "]", "*", "lengths", "[", "1", "]", "+", "trns", "[", "1", ",", "3", "]", "\n", "box", "[", ":", ",", "5", "]", "=", "box", "[", ":", ",", "5", "]", "*", "lengths", "[", "2", "]", "+", "trns", "[", "2", ",", "3", "]", "\n", "vertices", ",", "indices", "=", "generate_bbox_mesh", "(", "box", ")", "\n", "return", "vertices", ",", "indices", "\n", "\n", "", "verts", ",", "inds", "=", "convert_oriented_box_to_trimesh_fmt", "(", "scene_bbox", ")", "\n", "write_ply_mesh", "(", "verts", ",", "None", ",", "inds", ",", "out_filename", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox_camera_coord": [[611, 649], ["trimesh.scene.Scene", "trimesh.util.concatenate", "trimesh.util.concatenate.export", "numpy.zeros", "numpy.cos", "numpy.sin", "numpy.array", "numpy.array", "numpy.eye", "pc_util.write_oriented_bbox.heading2rotmat"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.export"], ["", "def", "write_oriented_bbox_camera_coord", "(", "scene_bbox", ",", "out_filename", ")", ":", "\n", "    ", "\"\"\"Export oriented (around Y axis) scene bbox to meshes\n    Args:\n        scene_bbox: (N x 7 numpy array): xyz pos of center and 3 lengths (dx,dy,dz)\n            and heading angle around Y axis.\n            Z forward, X rightward, Y downward. heading angle of positive X is 0,\n            heading angle of negative Z is 90 degrees.\n        out_filename: (string) filename\n    \"\"\"", "\n", "def", "heading2rotmat", "(", "heading_angle", ")", ":", "\n", "        ", "pass", "\n", "rotmat", "=", "np", ".", "zeros", "(", "(", "3", ",", "3", ")", ")", "\n", "rotmat", "[", "1", ",", "1", "]", "=", "1", "\n", "cosval", "=", "np", ".", "cos", "(", "heading_angle", ")", "\n", "sinval", "=", "np", ".", "sin", "(", "heading_angle", ")", "\n", "rotmat", "[", "0", ",", ":", "]", "=", "np", ".", "array", "(", "[", "cosval", ",", "0", ",", "sinval", "]", ")", "\n", "rotmat", "[", "2", ",", ":", "]", "=", "np", ".", "array", "(", "[", "-", "sinval", ",", "0", ",", "cosval", "]", ")", "\n", "return", "rotmat", "\n", "\n", "", "def", "convert_oriented_box_to_trimesh_fmt", "(", "box", ")", ":", "\n", "        ", "ctr", "=", "box", "[", ":", "3", "]", "\n", "lengths", "=", "box", "[", "3", ":", "6", "]", "\n", "trns", "=", "np", ".", "eye", "(", "4", ")", "\n", "trns", "[", "0", ":", "3", ",", "3", "]", "=", "ctr", "\n", "trns", "[", "3", ",", "3", "]", "=", "1.0", "\n", "trns", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "heading2rotmat", "(", "box", "[", "6", "]", ")", "\n", "box_trimesh_fmt", "=", "trimesh", ".", "creation", ".", "box", "(", "lengths", ",", "trns", ")", "\n", "return", "box_trimesh_fmt", "\n", "\n", "", "scene", "=", "trimesh", ".", "scene", ".", "Scene", "(", ")", "\n", "for", "box", "in", "scene_bbox", ":", "\n", "        ", "scene", ".", "add_geometry", "(", "convert_oriented_box_to_trimesh_fmt", "(", "box", ")", ")", "\n", "\n", "", "mesh_list", "=", "trimesh", ".", "util", ".", "concatenate", "(", "scene", ".", "dump", "(", ")", ")", "\n", "# save to ply file    ", "\n", "mesh_list", ".", "export", "(", "out_filename", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_lines_as_cylinders": [[650, 669], ["trimesh.scene.Scene", "trimesh.util.concatenate", "trimesh.util.concatenate.export", "trimesh.geometry.align_vectors", "numpy.sqrt", "trimesh.scene.Scene.add_geometry", "trimesh.scene.Scene.dump", "numpy.dot", "trimesh.creation.cylinder"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.export"], ["", "def", "write_lines_as_cylinders", "(", "pcl", ",", "filename", ",", "rad", "=", "0.005", ",", "res", "=", "64", ")", ":", "\n", "    ", "\"\"\"Create lines represented as cylinders connecting pairs of 3D points\n    Args:\n        pcl: (N x 2 x 3 numpy array): N pairs of xyz pos             \n        filename: (string) filename for the output mesh (ply) file\n        rad: radius for the cylinder\n        res: number of sections used to create the cylinder\n    \"\"\"", "\n", "scene", "=", "trimesh", ".", "scene", ".", "Scene", "(", ")", "\n", "for", "src", ",", "tgt", "in", "pcl", ":", "\n", "# compute line", "\n", "        ", "vec", "=", "tgt", "-", "src", "\n", "M", "=", "trimesh", ".", "geometry", ".", "align_vectors", "(", "[", "0", ",", "0", ",", "1", "]", ",", "vec", ",", "False", ")", "\n", "vec", "=", "tgt", "-", "src", "# compute again since align_vectors modifies vec in-place!", "\n", "M", "[", ":", "3", ",", "3", "]", "=", "0.5", "*", "src", "+", "0.5", "*", "tgt", "\n", "height", "=", "np", ".", "sqrt", "(", "np", ".", "dot", "(", "vec", ",", "vec", ")", ")", "\n", "scene", ".", "add_geometry", "(", "trimesh", ".", "creation", ".", "cylinder", "(", "radius", "=", "rad", ",", "height", "=", "height", ",", "sections", "=", "res", ",", "transform", "=", "M", ")", ")", "\n", "", "mesh_list", "=", "trimesh", ".", "util", ".", "concatenate", "(", "scene", ".", "dump", "(", ")", ")", "\n", "mesh_list", ".", "export", "(", "'%s.ply'", "%", "(", "filename", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.metric_util.multi_scene_precision_recall": [[27, 55], ["range", "torch.is_tensor", "torch.is_tensor", "numpy.ones", "numpy.ones", "metric_util.single_scene_precision_recall", "metric_util.precision_recall"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.metric_util.single_scene_precision_recall", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.metric_util.precision_recall"], ["def", "multi_scene_precision_recall", "(", "labels", ",", "pred", ",", "iou_thresh", ",", "conf_thresh", ",", "label_mask", ",", "pred_mask", "=", "None", ")", ":", "\n", "    ", "'''\n    Args:\n        labels: (B, N, 6)\n        pred: (B, M, 6)\n        iou_thresh: scalar\n        conf_thresh: scalar\n        label_mask: (B, N,) with values in 0 or 1 to indicate which GT boxes to consider.\n        pred_mask: (B, M,) with values in 0 or 1 to indicate which PRED boxes to consider.\n    Returns:\n        TP,FP,FN,Precision,Recall\n    '''", "\n", "# Make sure the masks are not Torch tensor, otherwise the mask==1 returns uint8 array instead", "\n", "# of True/False array as in numpy", "\n", "assert", "(", "not", "torch", ".", "is_tensor", "(", "label_mask", ")", ")", "\n", "assert", "(", "not", "torch", ".", "is_tensor", "(", "pred_mask", ")", ")", "\n", "TP", ",", "FP", ",", "FN", "=", "0", ",", "0", ",", "0", "\n", "if", "label_mask", "is", "None", ":", "label_mask", "=", "np", ".", "ones", "(", "(", "labels", ".", "shape", "[", "0", "]", ",", "labels", ".", "shape", "[", "1", "]", ")", ")", "\n", "if", "pred_mask", "is", "None", ":", "pred_mask", "=", "np", ".", "ones", "(", "(", "pred", ".", "shape", "[", "0", "]", ",", "pred", ".", "shape", "[", "1", "]", ")", ")", "\n", "for", "batch_idx", "in", "range", "(", "labels", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "TP_i", ",", "FP_i", ",", "FN_i", "=", "single_scene_precision_recall", "(", "labels", "[", "batch_idx", ",", "label_mask", "[", "batch_idx", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "pred", "[", "batch_idx", ",", "pred_mask", "[", "batch_idx", ",", ":", "]", "==", "1", ",", ":", "]", ",", "\n", "iou_thresh", ",", "conf_thresh", ")", "\n", "TP", "+=", "TP_i", "\n", "FP", "+=", "FP_i", "\n", "FN", "+=", "FN_i", "\n", "\n", "", "return", "TP", ",", "FP", ",", "FN", ",", "precision_recall", "(", "TP", ",", "FP", ",", "FN", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.metric_util.single_scene_precision_recall": [[57, 93], ["numpy.zeros", "range", "good_match_arr.any().sum", "range", "good_match_arr.any().sum", "metric_util.calc_iou", "good_match_arr.any", "good_match_arr.any", "numpy.where"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.metric_util.calc_iou"], ["", "def", "single_scene_precision_recall", "(", "labels", ",", "pred", ",", "iou_thresh", ",", "conf_thresh", ")", ":", "\n", "    ", "\"\"\"Compute P and R for predicted bounding boxes. Ignores classes!\n    Args:\n        labels: (N x bbox) ground-truth bounding boxes (6 dims) \n        pred: (M x (bbox + conf)) predicted bboxes with confidence and maybe classification\n    Returns:\n        TP, FP, FN\n    \"\"\"", "\n", "\n", "\n", "# for each pred box with high conf (C), compute IoU with all gt boxes. ", "\n", "# TP = number of times IoU > th ; FP = C - TP ", "\n", "# FN - number of scene objects without good match", "\n", "\n", "gt_bboxes", "=", "labels", "[", ":", ",", ":", "6", "]", "\n", "\n", "num_scene_bboxes", "=", "gt_bboxes", ".", "shape", "[", "0", "]", "\n", "conf", "=", "pred", "[", ":", ",", "6", "]", "\n", "\n", "conf_pred_bbox", "=", "pred", "[", "np", ".", "where", "(", "conf", ">", "conf_thresh", ")", "[", "0", "]", ",", ":", "6", "]", "\n", "num_conf_pred_bboxes", "=", "conf_pred_bbox", ".", "shape", "[", "0", "]", "\n", "\n", "# init an array to keep iou between generated and scene bboxes", "\n", "iou_arr", "=", "np", ".", "zeros", "(", "[", "num_conf_pred_bboxes", ",", "num_scene_bboxes", "]", ")", "\n", "for", "g_idx", "in", "range", "(", "num_conf_pred_bboxes", ")", ":", "\n", "        ", "for", "s_idx", "in", "range", "(", "num_scene_bboxes", ")", ":", "\n", "            ", "iou_arr", "[", "g_idx", ",", "s_idx", "]", "=", "calc_iou", "(", "conf_pred_bbox", "[", "g_idx", ",", ":", "]", ",", "gt_bboxes", "[", "s_idx", ",", ":", "]", ")", "\n", "\n", "\n", "", "", "good_match_arr", "=", "(", "iou_arr", ">=", "iou_thresh", ")", "\n", "\n", "TP", "=", "good_match_arr", ".", "any", "(", "axis", "=", "1", ")", ".", "sum", "(", ")", "\n", "FP", "=", "num_conf_pred_bboxes", "-", "TP", "\n", "FN", "=", "num_scene_bboxes", "-", "good_match_arr", ".", "any", "(", "axis", "=", "0", ")", ".", "sum", "(", ")", "\n", "\n", "return", "TP", ",", "FP", ",", "FN", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.metric_util.precision_recall": [[95, 99], ["None"], "function", ["None"], ["", "def", "precision_recall", "(", "TP", ",", "FP", ",", "FN", ")", ":", "\n", "    ", "Prec", "=", "1.0", "*", "TP", "/", "(", "TP", "+", "FP", ")", "if", "TP", "+", "FP", ">", "0", "else", "0", "\n", "Rec", "=", "1.0", "*", "TP", "/", "(", "TP", "+", "FN", ")", "\n", "return", "Prec", ",", "Rec", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.metric_util.calc_iou": [[101, 124], ["numpy.array().min", "numpy.array().max", "box_a[].prod", "box_b[].prod", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "calc_iou", "(", "box_a", ",", "box_b", ")", ":", "\n", "    ", "\"\"\"Computes IoU of two axis aligned bboxes.\n    Args:\n        box_a, box_b: 6D of center and lengths        \n    Returns:\n        iou\n    \"\"\"", "\n", "\n", "max_a", "=", "box_a", "[", "0", ":", "3", "]", "+", "box_a", "[", "3", ":", "6", "]", "/", "2", "\n", "max_b", "=", "box_b", "[", "0", ":", "3", "]", "+", "box_b", "[", "3", ":", "6", "]", "/", "2", "\n", "min_max", "=", "np", ".", "array", "(", "[", "max_a", ",", "max_b", "]", ")", ".", "min", "(", "0", ")", "\n", "\n", "min_a", "=", "box_a", "[", "0", ":", "3", "]", "-", "box_a", "[", "3", ":", "6", "]", "/", "2", "\n", "min_b", "=", "box_b", "[", "0", ":", "3", "]", "-", "box_b", "[", "3", ":", "6", "]", "/", "2", "\n", "max_min", "=", "np", ".", "array", "(", "[", "min_a", ",", "min_b", "]", ")", ".", "max", "(", "0", ")", "\n", "if", "not", "(", "(", "min_max", ">", "max_min", ")", ".", "all", "(", ")", ")", ":", "\n", "        ", "return", "0.0", "\n", "\n", "", "intersection", "=", "(", "min_max", "-", "max_min", ")", ".", "prod", "(", ")", "\n", "vol_a", "=", "box_a", "[", "3", ":", "6", "]", ".", "prod", "(", ")", "\n", "vol_b", "=", "box_b", "[", "3", ":", "6", "]", ".", "prod", "(", ")", "\n", "union", "=", "vol_a", "+", "vol_b", "-", "intersection", "\n", "return", "1.0", "*", "intersection", "/", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_logger.Logger.__init__": [[17, 20], ["tensorflow.summary.FileWriter"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "log_dir", ")", ":", "\n", "        ", "\"\"\"Create a summary writer logging to log_dir.\"\"\"", "\n", "self", ".", "writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "log_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_logger.Logger.scalar_summary": [[21, 25], ["tensorflow.Summary", "tf_logger.Logger.writer.add_summary", "tensorflow.Summary.Value"], "methods", ["None"], ["", "def", "scalar_summary", "(", "self", ",", "tag", ",", "value", ",", "step", ")", ":", "\n", "        ", "\"\"\"Log a scalar variable.\"\"\"", "\n", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "tag", ",", "simple_value", "=", "value", ")", "]", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_logger.Logger.image_summary": [[26, 48], ["enumerate", "tensorflow.Summary", "tf_logger.Logger.writer.add_summary", "scipy.misc.toimage().save", "tensorflow.Summary.Image", "img_summaries.append", "StringIO", "tensorflow.Summary.Value", "BytesIO", "scipy.misc.toimage", "BytesIO.getvalue"], "methods", ["None"], ["", "def", "image_summary", "(", "self", ",", "tag", ",", "images", ",", "step", ")", ":", "\n", "        ", "\"\"\"Log a list of images.\"\"\"", "\n", "\n", "img_summaries", "=", "[", "]", "\n", "for", "i", ",", "img", "in", "enumerate", "(", "images", ")", ":", "\n", "# Write the image to a string", "\n", "            ", "try", ":", "\n", "                ", "s", "=", "StringIO", "(", ")", "\n", "", "except", ":", "\n", "                ", "s", "=", "BytesIO", "(", ")", "\n", "", "scipy", ".", "misc", ".", "toimage", "(", "img", ")", ".", "save", "(", "s", ",", "format", "=", "\"png\"", ")", "\n", "\n", "# Create an Image object", "\n", "img_sum", "=", "tf", ".", "Summary", ".", "Image", "(", "encoded_image_string", "=", "s", ".", "getvalue", "(", ")", ",", "\n", "height", "=", "img", ".", "shape", "[", "0", "]", ",", "\n", "width", "=", "img", ".", "shape", "[", "1", "]", ")", "\n", "# Create a Summary value", "\n", "img_summaries", ".", "append", "(", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'%s/%d'", "%", "(", "tag", ",", "i", ")", ",", "image", "=", "img_sum", ")", ")", "\n", "\n", "# Create and write Summary", "\n", "", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "img_summaries", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_logger.Logger.histo_summary": [[49, 76], ["numpy.histogram", "tensorflow.HistogramProto", "float", "float", "int", "float", "float", "tensorflow.Summary", "tf_logger.Logger.writer.add_summary", "tf_logger.Logger.writer.flush", "numpy.min", "numpy.max", "numpy.prod", "numpy.sum", "numpy.sum", "tensorflow.HistogramProto.bucket_limit.append", "tensorflow.HistogramProto.bucket.append", "tensorflow.Summary.Value"], "methods", ["None"], ["", "def", "histo_summary", "(", "self", ",", "tag", ",", "values", ",", "step", ",", "bins", "=", "1000", ")", ":", "\n", "        ", "\"\"\"Log a histogram of the tensor of values.\"\"\"", "\n", "\n", "# Create a histogram using numpy", "\n", "counts", ",", "bin_edges", "=", "np", ".", "histogram", "(", "values", ",", "bins", "=", "bins", ")", "\n", "\n", "# Fill the fields of the histogram proto", "\n", "hist", "=", "tf", ".", "HistogramProto", "(", ")", "\n", "hist", ".", "min", "=", "float", "(", "np", ".", "min", "(", "values", ")", ")", "\n", "hist", ".", "max", "=", "float", "(", "np", ".", "max", "(", "values", ")", ")", "\n", "hist", ".", "num", "=", "int", "(", "np", ".", "prod", "(", "values", ".", "shape", ")", ")", "\n", "hist", ".", "sum", "=", "float", "(", "np", ".", "sum", "(", "values", ")", ")", "\n", "hist", ".", "sum_squares", "=", "float", "(", "np", ".", "sum", "(", "values", "**", "2", ")", ")", "\n", "\n", "# Drop the start of the first bin", "\n", "bin_edges", "=", "bin_edges", "[", "1", ":", "]", "\n", "\n", "# Add bin edges and counts", "\n", "for", "edge", "in", "bin_edges", ":", "\n", "            ", "hist", ".", "bucket_limit", ".", "append", "(", "edge", ")", "\n", "", "for", "c", "in", "counts", ":", "\n", "            ", "hist", ".", "bucket", ".", "append", "(", "c", ")", "\n", "\n", "# Create and write Summary", "\n", "", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "tag", ",", "histo", "=", "hist", ")", "]", ")", "\n", "self", ".", "writer", ".", "add_summary", "(", "summary", ",", "step", ")", "\n", "self", ".", "writer", ".", "flush", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.polygon_clip": [[16, 63], ["box_util.polygon_clip.inside"], "function", ["None"], ["def", "polygon_clip", "(", "subjectPolygon", ",", "clipPolygon", ")", ":", "\n", "   ", "\"\"\" Clip a polygon with another polygon.\n\n   Ref: https://rosettacode.org/wiki/Sutherland-Hodgman_polygon_clipping#Python\n\n   Args:\n     subjectPolygon: a list of (x,y) 2d points, any polygon.\n     clipPolygon: a list of (x,y) 2d points, has to be *convex*\n   Note:\n     **points have to be counter-clockwise ordered**\n\n   Return:\n     a list of (x,y) vertex point for the intersection polygon.\n   \"\"\"", "\n", "def", "inside", "(", "p", ")", ":", "\n", "      ", "return", "(", "cp2", "[", "0", "]", "-", "cp1", "[", "0", "]", ")", "*", "(", "p", "[", "1", "]", "-", "cp1", "[", "1", "]", ")", ">", "(", "cp2", "[", "1", "]", "-", "cp1", "[", "1", "]", ")", "*", "(", "p", "[", "0", "]", "-", "cp1", "[", "0", "]", ")", "\n", "\n", "", "def", "computeIntersection", "(", ")", ":", "\n", "      ", "dc", "=", "[", "cp1", "[", "0", "]", "-", "cp2", "[", "0", "]", ",", "cp1", "[", "1", "]", "-", "cp2", "[", "1", "]", "]", "\n", "dp", "=", "[", "s", "[", "0", "]", "-", "e", "[", "0", "]", ",", "s", "[", "1", "]", "-", "e", "[", "1", "]", "]", "\n", "n1", "=", "cp1", "[", "0", "]", "*", "cp2", "[", "1", "]", "-", "cp1", "[", "1", "]", "*", "cp2", "[", "0", "]", "\n", "n2", "=", "s", "[", "0", "]", "*", "e", "[", "1", "]", "-", "s", "[", "1", "]", "*", "e", "[", "0", "]", "\n", "n3", "=", "1.0", "/", "(", "dc", "[", "0", "]", "*", "dp", "[", "1", "]", "-", "dc", "[", "1", "]", "*", "dp", "[", "0", "]", ")", "\n", "return", "[", "(", "n1", "*", "dp", "[", "0", "]", "-", "n2", "*", "dc", "[", "0", "]", ")", "*", "n3", ",", "(", "n1", "*", "dp", "[", "1", "]", "-", "n2", "*", "dc", "[", "1", "]", ")", "*", "n3", "]", "\n", "\n", "", "outputList", "=", "subjectPolygon", "\n", "cp1", "=", "clipPolygon", "[", "-", "1", "]", "\n", "\n", "for", "clipVertex", "in", "clipPolygon", ":", "\n", "      ", "cp2", "=", "clipVertex", "\n", "inputList", "=", "outputList", "\n", "outputList", "=", "[", "]", "\n", "s", "=", "inputList", "[", "-", "1", "]", "\n", "\n", "for", "subjectVertex", "in", "inputList", ":", "\n", "         ", "e", "=", "subjectVertex", "\n", "if", "inside", "(", "e", ")", ":", "\n", "            ", "if", "not", "inside", "(", "s", ")", ":", "\n", "               ", "outputList", ".", "append", "(", "computeIntersection", "(", ")", ")", "\n", "", "outputList", ".", "append", "(", "e", ")", "\n", "", "elif", "inside", "(", "s", ")", ":", "\n", "            ", "outputList", ".", "append", "(", "computeIntersection", "(", ")", ")", "\n", "", "s", "=", "e", "\n", "", "cp1", "=", "cp2", "\n", "if", "len", "(", "outputList", ")", "==", "0", ":", "\n", "          ", "return", "None", "\n", "", "", "return", "(", "outputList", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.poly_area": [[64, 67], ["numpy.abs", "numpy.dot", "numpy.dot", "numpy.roll", "numpy.roll"], "function", ["None"], ["", "def", "poly_area", "(", "x", ",", "y", ")", ":", "\n", "    ", "\"\"\" Ref: http://stackoverflow.com/questions/24467972/calculate-area-of-polygon-given-x-y-coordinates \"\"\"", "\n", "return", "0.5", "*", "np", ".", "abs", "(", "np", ".", "dot", "(", "x", ",", "np", ".", "roll", "(", "y", ",", "1", ")", ")", "-", "np", ".", "dot", "(", "y", ",", "np", ".", "roll", "(", "x", ",", "1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.convex_hull_intersection": [[68, 79], ["box_util.polygon_clip", "scipy.spatial.ConvexHull"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.polygon_clip"], ["", "def", "convex_hull_intersection", "(", "p1", ",", "p2", ")", ":", "\n", "    ", "\"\"\" Compute area of two convex hull's intersection area.\n        p1,p2 are a list of (x,y) tuples of hull vertices.\n        return a list of (x,y) for the intersection and its volume\n    \"\"\"", "\n", "inter_p", "=", "polygon_clip", "(", "p1", ",", "p2", ")", "\n", "if", "inter_p", "is", "not", "None", ":", "\n", "        ", "hull_inter", "=", "ConvexHull", "(", "inter_p", ")", "\n", "return", "inter_p", ",", "hull_inter", ".", "volume", "\n", "", "else", ":", "\n", "        ", "return", "None", ",", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.box3d_vol": [[80, 86], ["numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "", "def", "box3d_vol", "(", "corners", ")", ":", "\n", "    ", "''' corners: (8,3) no assumption on axis direction '''", "\n", "a", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "corners", "[", "0", ",", ":", "]", "-", "corners", "[", "1", ",", ":", "]", ")", "**", "2", ")", ")", "\n", "b", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "corners", "[", "1", ",", ":", "]", "-", "corners", "[", "2", ",", ":", "]", ")", "**", "2", ")", ")", "\n", "c", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "corners", "[", "0", ",", ":", "]", "-", "corners", "[", "4", ",", ":", "]", ")", "**", "2", ")", ")", "\n", "return", "a", "*", "b", "*", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.is_clockwise": [[87, 91], ["numpy.dot", "numpy.dot", "numpy.roll", "numpy.roll"], "function", ["None"], ["", "def", "is_clockwise", "(", "p", ")", ":", "\n", "    ", "x", "=", "p", "[", ":", ",", "0", "]", "\n", "y", "=", "p", "[", ":", ",", "1", "]", "\n", "return", "np", ".", "dot", "(", "x", ",", "np", ".", "roll", "(", "y", ",", "1", ")", ")", "-", "np", ".", "dot", "(", "y", ",", "np", ".", "roll", "(", "x", ",", "1", ")", ")", ">", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.box3d_iou": [[92, 118], ["box_util.poly_area", "box_util.poly_area", "box_util.convex_hull_intersection", "min", "max", "box_util.box3d_vol", "box_util.box3d_vol", "max", "range", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.poly_area", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.poly_area", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.convex_hull_intersection", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.box3d_vol", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.box3d_vol"], ["", "def", "box3d_iou", "(", "corners1", ",", "corners2", ")", ":", "\n", "    ", "''' Compute 3D bounding box IoU.\n\n    Input:\n        corners1: numpy array (8,3), assume up direction is negative Y\n        corners2: numpy array (8,3), assume up direction is negative Y\n    Output:\n        iou: 3D bounding box IoU\n        iou_2d: bird's eye view 2D bounding box IoU\n\n    todo (rqi): add more description on corner points' orders.\n    '''", "\n", "# corner points are in counter clockwise order", "\n", "rect1", "=", "[", "(", "corners1", "[", "i", ",", "0", "]", ",", "corners1", "[", "i", ",", "2", "]", ")", "for", "i", "in", "range", "(", "3", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "rect2", "=", "[", "(", "corners2", "[", "i", ",", "0", "]", ",", "corners2", "[", "i", ",", "2", "]", ")", "for", "i", "in", "range", "(", "3", ",", "-", "1", ",", "-", "1", ")", "]", "\n", "area1", "=", "poly_area", "(", "np", ".", "array", "(", "rect1", ")", "[", ":", ",", "0", "]", ",", "np", ".", "array", "(", "rect1", ")", "[", ":", ",", "1", "]", ")", "\n", "area2", "=", "poly_area", "(", "np", ".", "array", "(", "rect2", ")", "[", ":", ",", "0", "]", ",", "np", ".", "array", "(", "rect2", ")", "[", ":", ",", "1", "]", ")", "\n", "inter", ",", "inter_area", "=", "convex_hull_intersection", "(", "rect1", ",", "rect2", ")", "\n", "iou_2d", "=", "inter_area", "/", "(", "area1", "+", "area2", "-", "inter_area", ")", "\n", "ymax", "=", "min", "(", "corners1", "[", "0", ",", "1", "]", ",", "corners2", "[", "0", ",", "1", "]", ")", "\n", "ymin", "=", "max", "(", "corners1", "[", "4", ",", "1", "]", ",", "corners2", "[", "4", ",", "1", "]", ")", "\n", "inter_vol", "=", "inter_area", "*", "max", "(", "0.0", ",", "ymax", "-", "ymin", ")", "\n", "vol1", "=", "box3d_vol", "(", "corners1", ")", "\n", "vol2", "=", "box3d_vol", "(", "corners2", ")", "\n", "iou", "=", "inter_vol", "/", "(", "vol1", "+", "vol2", "-", "inter_vol", ")", "\n", "return", "iou", ",", "iou_2d", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.get_iou": [[120, 169], ["max", "max", "min", "min", "float"], "function", ["None"], ["", "def", "get_iou", "(", "bb1", ",", "bb2", ")", ":", "\n", "    ", "\"\"\"\n    Calculate the Intersection over Union (IoU) of two 2D bounding boxes.\n\n    Parameters\n    ----------\n    bb1 : dict\n        Keys: {'x1', 'x2', 'y1', 'y2'}\n        The (x1, y1) position is at the top left corner,\n        the (x2, y2) position is at the bottom right corner\n    bb2 : dict\n        Keys: {'x1', 'x2', 'y1', 'y2'}\n        The (x, y) position is at the top left corner,\n        the (x2, y2) position is at the bottom right corner\n\n    Returns\n    -------\n    float\n        in [0, 1]\n    \"\"\"", "\n", "assert", "bb1", "[", "'x1'", "]", "<", "bb1", "[", "'x2'", "]", "\n", "assert", "bb1", "[", "'y1'", "]", "<", "bb1", "[", "'y2'", "]", "\n", "assert", "bb2", "[", "'x1'", "]", "<", "bb2", "[", "'x2'", "]", "\n", "assert", "bb2", "[", "'y1'", "]", "<", "bb2", "[", "'y2'", "]", "\n", "\n", "# determine the coordinates of the intersection rectangle", "\n", "x_left", "=", "max", "(", "bb1", "[", "'x1'", "]", ",", "bb2", "[", "'x1'", "]", ")", "\n", "y_top", "=", "max", "(", "bb1", "[", "'y1'", "]", ",", "bb2", "[", "'y1'", "]", ")", "\n", "x_right", "=", "min", "(", "bb1", "[", "'x2'", "]", ",", "bb2", "[", "'x2'", "]", ")", "\n", "y_bottom", "=", "min", "(", "bb1", "[", "'y2'", "]", ",", "bb2", "[", "'y2'", "]", ")", "\n", "\n", "if", "x_right", "<", "x_left", "or", "y_bottom", "<", "y_top", ":", "\n", "        ", "return", "0.0", "\n", "\n", "# The intersection of two axis-aligned bounding boxes is always an", "\n", "# axis-aligned bounding box", "\n", "", "intersection_area", "=", "(", "x_right", "-", "x_left", ")", "*", "(", "y_bottom", "-", "y_top", ")", "\n", "\n", "# compute the area of both AABBs", "\n", "bb1_area", "=", "(", "bb1", "[", "'x2'", "]", "-", "bb1", "[", "'x1'", "]", ")", "*", "(", "bb1", "[", "'y2'", "]", "-", "bb1", "[", "'y1'", "]", ")", "\n", "bb2_area", "=", "(", "bb2", "[", "'x2'", "]", "-", "bb2", "[", "'x1'", "]", ")", "*", "(", "bb2", "[", "'y2'", "]", "-", "bb2", "[", "'y1'", "]", ")", "\n", "\n", "# compute the intersection over union by taking the intersection", "\n", "# area and dividing it by the sum of prediction + ground-truth", "\n", "# areas - the interesection area", "\n", "iou", "=", "intersection_area", "/", "float", "(", "bb1_area", "+", "bb2_area", "-", "intersection_area", ")", "\n", "assert", "iou", ">=", "0.0", "\n", "assert", "iou", "<=", "1.0", "\n", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.box2d_iou": [[170, 181], ["box_util.get_iou"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.get_iou"], ["", "def", "box2d_iou", "(", "box1", ",", "box2", ")", ":", "\n", "    ", "''' Compute 2D bounding box IoU.\n\n    Input:\n        box1: tuple of (xmin,ymin,xmax,ymax)\n        box2: tuple of (xmin,ymin,xmax,ymax)\n    Output:\n        iou: 2D IoU scalar\n    '''", "\n", "return", "get_iou", "(", "{", "'x1'", ":", "box1", "[", "0", "]", ",", "'y1'", ":", "box1", "[", "1", "]", ",", "'x2'", ":", "box1", "[", "2", "]", ",", "'y2'", ":", "box1", "[", "3", "]", "}", ",", "{", "'x1'", ":", "box2", "[", "0", "]", ",", "'y1'", ":", "box2", "[", "1", "]", ",", "'x2'", ":", "box2", "[", "2", "]", ",", "'y2'", ":", "box2", "[", "3", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.roty": [[185, 192], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "roty", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "0", ",", "s", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "-", "s", ",", "0", ",", "c", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.roty_batch": [[193, 208], ["numpy.zeros", "numpy.cos", "numpy.sin", "tuple", "list"], "function", ["None"], ["", "def", "roty_batch", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\n    t: (x1,x2,...xn)\n    return: (x1,x2,...,xn,3,3)\n    \"\"\"", "\n", "input_shape", "=", "t", ".", "shape", "\n", "output", "=", "np", ".", "zeros", "(", "tuple", "(", "list", "(", "input_shape", ")", "+", "[", "3", ",", "3", "]", ")", ")", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "output", "[", "...", ",", "0", ",", "0", "]", "=", "c", "\n", "output", "[", "...", ",", "0", ",", "2", "]", "=", "s", "\n", "output", "[", "...", ",", "1", ",", "1", "]", "=", "1", "\n", "output", "[", "...", ",", "2", ",", "0", "]", "=", "-", "s", "\n", "output", "[", "...", ",", "2", ",", "2", "]", "=", "c", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.get_3d_box": [[210, 226], ["box_util.roty", "numpy.dot", "numpy.transpose", "numpy.vstack"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.roty"], ["", "def", "get_3d_box", "(", "box_size", ",", "heading_angle", ",", "center", ")", ":", "\n", "    ", "''' box_size is array(l,w,h), heading_angle is radius clockwise from pos x axis, center is xyz of box center\n        output (8,3) array for 3D box cornders\n        Similar to utils/compute_orientation_3d\n    '''", "\n", "R", "=", "roty", "(", "heading_angle", ")", "\n", "l", ",", "w", ",", "h", "=", "box_size", "\n", "x_corners", "=", "[", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", ",", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", "]", ";", "\n", "y_corners", "=", "[", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", "]", ";", "\n", "z_corners", "=", "[", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", ",", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", "]", ";", "\n", "corners_3d", "=", "np", ".", "dot", "(", "R", ",", "np", ".", "vstack", "(", "[", "x_corners", ",", "y_corners", ",", "z_corners", "]", ")", ")", "\n", "corners_3d", "[", "0", ",", ":", "]", "=", "corners_3d", "[", "0", ",", ":", "]", "+", "center", "[", "0", "]", ";", "\n", "corners_3d", "[", "1", ",", ":", "]", "=", "corners_3d", "[", "1", ",", ":", "]", "+", "center", "[", "1", "]", ";", "\n", "corners_3d", "[", "2", ",", ":", "]", "=", "corners_3d", "[", "2", ",", ":", "]", "+", "center", "[", "2", "]", ";", "\n", "corners_3d", "=", "np", ".", "transpose", "(", "corners_3d", ")", "\n", "return", "corners_3d", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.get_3d_box_batch": [[227, 248], ["box_util.roty_batch", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.zeros", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.matmul", "numpy.expand_dims", "tuple", "len", "numpy.transpose", "range", "len", "tuple", "list", "len"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.roty_batch"], ["", "def", "get_3d_box_batch", "(", "box_size", ",", "heading_angle", ",", "center", ")", ":", "\n", "    ", "''' box_size: [x1,x2,...,xn,3]\n        heading_angle: [x1,x2,...,xn]\n        center: [x1,x2,...,xn,3]\n    Return:\n        [x1,x3,...,xn,8,3]\n    '''", "\n", "input_shape", "=", "heading_angle", ".", "shape", "\n", "R", "=", "roty_batch", "(", "heading_angle", ")", "\n", "l", "=", "np", ".", "expand_dims", "(", "box_size", "[", "...", ",", "0", "]", ",", "-", "1", ")", "# [x1,...,xn,1]", "\n", "w", "=", "np", ".", "expand_dims", "(", "box_size", "[", "...", ",", "1", "]", ",", "-", "1", ")", "\n", "h", "=", "np", ".", "expand_dims", "(", "box_size", "[", "...", ",", "2", "]", ",", "-", "1", ")", "\n", "corners_3d", "=", "np", ".", "zeros", "(", "tuple", "(", "list", "(", "input_shape", ")", "+", "[", "8", ",", "3", "]", ")", ")", "\n", "corners_3d", "[", "...", ",", ":", ",", "0", "]", "=", "np", ".", "concatenate", "(", "(", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", ",", "l", "/", "2", ",", "l", "/", "2", ",", "-", "l", "/", "2", ",", "-", "l", "/", "2", ")", ",", "-", "1", ")", "\n", "corners_3d", "[", "...", ",", ":", ",", "1", "]", "=", "np", ".", "concatenate", "(", "(", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ",", "-", "h", "/", "2", ")", ",", "-", "1", ")", "\n", "corners_3d", "[", "...", ",", ":", ",", "2", "]", "=", "np", ".", "concatenate", "(", "(", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", ",", "w", "/", "2", ",", "-", "w", "/", "2", ",", "-", "w", "/", "2", ",", "w", "/", "2", ")", ",", "-", "1", ")", "\n", "tlist", "=", "[", "i", "for", "i", "in", "range", "(", "len", "(", "input_shape", ")", ")", "]", "\n", "tlist", "+=", "[", "len", "(", "input_shape", ")", "+", "1", ",", "len", "(", "input_shape", ")", "]", "\n", "corners_3d", "=", "np", ".", "matmul", "(", "corners_3d", ",", "np", ".", "transpose", "(", "R", ",", "tuple", "(", "tlist", ")", ")", ")", "\n", "corners_3d", "+=", "np", ".", "expand_dims", "(", "center", ",", "-", "2", ")", "\n", "return", "corners_3d", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_visualizer.Visualizer.__init__": [[16, 25], ["tf_logger.Logger", "os.path.join", "os.path.join", "open", "time.strftime", "log_file.write"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["    ", "def", "__init__", "(", "self", ",", "opt", ",", "name", "=", "'train'", ")", ":", "\n", "# self.opt = opt", "\n", "#self.logger = tf_logger.Logger(os.path.join(opt.logging_dir, opt.name))", "\n", "#self.log_name = os.path.join(opt.checkpoint_dir, opt.name, 'loss_log.txt')", "\n", "        ", "self", ".", "logger", "=", "tf_logger", ".", "Logger", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "log_dir", ",", "name", ")", ")", "\n", "self", ".", "log_name", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "log_dir", ",", "'tf_visualizer_log.txt'", ")", "\n", "with", "open", "(", "self", ".", "log_name", ",", "\"a\"", ")", "as", "log_file", ":", "\n", "            ", "now", "=", "time", ".", "strftime", "(", "\"%c\"", ")", "\n", "log_file", ".", "write", "(", "'================ Training Loss (%s) ================\\n'", "%", "now", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_visualizer.Visualizer.log_images": [[27, 31], ["visuals.items", "tf_visualizer.Visualizer.logger.image_summary"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_logger.Logger.image_summary"], ["", "", "def", "log_images", "(", "self", ",", "visuals", ",", "step", ")", ":", "\n", "            ", "for", "label", ",", "image_numpy", "in", "visuals", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "logger", ".", "image_summary", "(", "\n", "label", ",", "[", "image_numpy", "]", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_visualizer.Visualizer.log_scalars": [[33, 36], ["scalars.items", "tf_visualizer.Visualizer.logger.scalar_summary"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_logger.Logger.scalar_summary"], ["", "", "def", "log_scalars", "(", "self", ",", "scalars", ",", "step", ")", ":", "\n", "        ", "for", "label", ",", "val", "in", "scalars", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "logger", ".", "scalar_summary", "(", "label", ",", "val", ",", "step", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_visualizer.Visualizer.plot_current_points": [[38, 40], ["None"], "methods", ["None"], ["", "", "def", "plot_current_points", "(", "self", ",", "points", ",", "disp_offset", "=", "10", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.tf_visualizer.Visualizer.print_current_scalars": [[42, 50], ["scalars.items", "print", "open", "log_file.write"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["", "def", "print_current_scalars", "(", "self", ",", "epoch", ",", "i", ",", "scalars", ")", ":", "\n", "        ", "message", "=", "'(epoch: %d, iters: %d) '", "%", "(", "epoch", ",", "i", ")", "\n", "for", "k", ",", "v", "in", "scalars", ".", "items", "(", ")", ":", "\n", "            ", "message", "+=", "'%s: %.3f '", "%", "(", "k", ",", "v", ")", "\n", "\n", "", "print", "(", "message", ")", "\n", "with", "open", "(", "self", ".", "log_name", ",", "\"a\"", ")", "as", "log_file", ":", "\n", "            ", "log_file", ".", "write", "(", "'%s\\n'", "%", "message", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.huber_loss": [[15, 33], ["torch.abs", "torch.abs", "torch.clamp", "torch.clamp"], "function", ["None"], ["def", "huber_loss", "(", "error", ",", "delta", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n        error: Torch tensor (d1,d2,...,dk)\n    Returns:\n        loss: Torch tensor (d1,d2,...,dk)\n\n    x = error = pred - gt or dist(pred,gt)\n    0.5 * |x|^2                 if |x|<=d\n    0.5 * d^2 + d * (|x|-d)     if |x|>d\n    Ref: https://github.com/charlesq34/frustum-pointnets/blob/master/models/model_util.py\n    \"\"\"", "\n", "abs_error", "=", "torch", ".", "abs", "(", "error", ")", "\n", "#quadratic = torch.min(abs_error, torch.FloatTensor([delta]))", "\n", "quadratic", "=", "torch", ".", "clamp", "(", "abs_error", ",", "max", "=", "delta", ")", "\n", "linear", "=", "(", "abs_error", "-", "quadratic", ")", "\n", "loss", "=", "0.5", "*", "quadratic", "**", "2", "+", "delta", "*", "linear", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.nn_distance": [[34, 62], ["pc1.unsqueeze().repeat", "pc2.unsqueeze().repeat", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sum", "torch.sum", "pc1.unsqueeze", "pc2.unsqueeze", "nn_distance.huber_loss", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.abs", "torch.abs"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.huber_loss"], ["", "def", "nn_distance", "(", "pc1", ",", "pc2", ",", "l1smooth", "=", "False", ",", "delta", "=", "1.0", ",", "l1", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Input:\n        pc1: (B,N,C) torch tensor\n        pc2: (B,M,C) torch tensor\n        l1smooth: bool, whether to use l1smooth loss\n        delta: scalar, the delta used in l1smooth loss\n    Output:\n        dist1: (B,N) torch float32 tensor\n        idx1: (B,N) torch int64 tensor\n        dist2: (B,M) torch float32 tensor\n        idx2: (B,M) torch int64 tensor\n    \"\"\"", "\n", "N", "=", "pc1", ".", "shape", "[", "1", "]", "\n", "M", "=", "pc2", ".", "shape", "[", "1", "]", "\n", "pc1_expand_tile", "=", "pc1", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "M", ",", "1", ")", "\n", "pc2_expand_tile", "=", "pc2", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "N", ",", "1", ",", "1", ")", "\n", "pc_diff", "=", "pc1_expand_tile", "-", "pc2_expand_tile", "\n", "\n", "if", "l1smooth", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "huber_loss", "(", "pc_diff", ",", "delta", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "elif", "l1", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "torch", ".", "abs", "(", "pc_diff", ")", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "else", ":", "\n", "        ", "pc_dist", "=", "torch", ".", "sum", "(", "pc_diff", "**", "2", ",", "dim", "=", "-", "1", ")", "# (B,N,M)", "\n", "", "dist1", ",", "idx1", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "2", ")", "# (B,N)", "\n", "dist2", ",", "idx2", "=", "torch", ".", "min", "(", "pc_dist", ",", "dim", "=", "1", ")", "# (B,M)", "\n", "return", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.demo_nn_distance": [[63, 91], ["numpy.random.seed", "numpy.random.random", "numpy.random.random", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "nn_distance.nn_distance", "print", "print", "numpy.zeros", "range", "print", "print", "print", "nn_distance.nn_distance", "print", "print", "numpy.zeros", "range", "print", "np.random.random.astype", "np.random.random.astype", "range", "range", "numpy.sum", "numpy.abs", "numpy.minimum", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.nn_distance", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.nn_distance.nn_distance"], ["", "def", "demo_nn_distance", "(", ")", ":", "\n", "    ", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "pc1arr", "=", "np", ".", "random", ".", "random", "(", "(", "1", ",", "5", ",", "3", ")", ")", "\n", "pc2arr", "=", "np", ".", "random", ".", "random", "(", "(", "1", ",", "6", ",", "3", ")", ")", "\n", "pc1", "=", "torch", ".", "from_numpy", "(", "pc1arr", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "pc2", "=", "torch", ".", "from_numpy", "(", "pc2arr", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "=", "nn_distance", "(", "pc1", ",", "pc2", ")", "\n", "print", "(", "dist1", ")", "\n", "print", "(", "idx1", ")", "\n", "dist", "=", "np", ".", "zeros", "(", "(", "5", ",", "6", ")", ")", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "6", ")", ":", "\n", "            ", "dist", "[", "i", ",", "j", "]", "=", "np", ".", "sum", "(", "(", "pc1arr", "[", "0", ",", "i", ",", ":", "]", "-", "pc2arr", "[", "0", ",", "j", ",", ":", "]", ")", "**", "2", ")", "\n", "", "", "print", "(", "dist", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'L1smooth dists:'", ")", "\n", "dist1", ",", "idx1", ",", "dist2", ",", "idx2", "=", "nn_distance", "(", "pc1", ",", "pc2", ",", "True", ")", "\n", "print", "(", "dist1", ")", "\n", "print", "(", "idx1", ")", "\n", "dist", "=", "np", ".", "zeros", "(", "(", "5", ",", "6", ")", ")", "\n", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "6", ")", ":", "\n", "            ", "error", "=", "np", ".", "abs", "(", "pc1arr", "[", "0", ",", "i", ",", ":", "]", "-", "pc2arr", "[", "0", ",", "j", ",", ":", "]", ")", "\n", "quad", "=", "np", ".", "minimum", "(", "error", ",", "1.0", ")", "\n", "linear", "=", "error", "-", "quad", "\n", "loss", "=", "0.5", "*", "quad", "**", "2", "+", "1.0", "*", "linear", "\n", "dist", "[", "i", ",", "j", "]", "=", "np", ".", "sum", "(", "loss", ")", "\n", "", "", "print", "(", "dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.voc_ap": [[24, 56], ["numpy.arange", "numpy.concatenate", "numpy.concatenate", "range", "numpy.sum", "numpy.maximum", "numpy.where", "numpy.sum", "numpy.max"], "function", ["None"], ["def", "voc_ap", "(", "rec", ",", "prec", ",", "use_07_metric", "=", "False", ")", ":", "\n", "    ", "\"\"\" ap = voc_ap(rec, prec, [use_07_metric])\n    Compute VOC AP given precision and recall.\n    If use_07_metric is true, uses the\n    VOC 07 11 point method (default:False).\n    \"\"\"", "\n", "if", "use_07_metric", ":", "\n", "# 11 point metric", "\n", "        ", "ap", "=", "0.", "\n", "for", "t", "in", "np", ".", "arange", "(", "0.", ",", "1.1", ",", "0.1", ")", ":", "\n", "            ", "if", "np", ".", "sum", "(", "rec", ">=", "t", ")", "==", "0", ":", "\n", "                ", "p", "=", "0", "\n", "", "else", ":", "\n", "                ", "p", "=", "np", ".", "max", "(", "prec", "[", "rec", ">=", "t", "]", ")", "\n", "", "ap", "=", "ap", "+", "p", "/", "11.", "\n", "", "", "else", ":", "\n", "# correct AP calculation", "\n", "# first append sentinel values at the end", "\n", "        ", "mrec", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "rec", ",", "[", "1.", "]", ")", ")", "\n", "mpre", "=", "np", ".", "concatenate", "(", "(", "[", "0.", "]", ",", "prec", ",", "[", "0.", "]", ")", ")", "\n", "\n", "# compute the precision envelope", "\n", "for", "i", "in", "range", "(", "mpre", ".", "size", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "            ", "mpre", "[", "i", "-", "1", "]", "=", "np", ".", "maximum", "(", "mpre", "[", "i", "-", "1", "]", ",", "mpre", "[", "i", "]", ")", "\n", "\n", "# to calculate area under PR curve, look for points", "\n", "# where X axis (recall) changes value", "\n", "", "i", "=", "np", ".", "where", "(", "mrec", "[", "1", ":", "]", "!=", "mrec", "[", ":", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "# and sum (\\Delta recall) * prec", "\n", "ap", "=", "np", ".", "sum", "(", "(", "mrec", "[", "i", "+", "1", "]", "-", "mrec", "[", "i", "]", ")", "*", "mpre", "[", "i", "+", "1", "]", ")", "\n", "", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.get_iou": [[61, 68], ["lib.utils.metric_util.calc_iou"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.metric_util.calc_iou"], ["def", "get_iou", "(", "bb1", ",", "bb2", ")", ":", "\n", "    ", "\"\"\" Compute IoU of two bounding boxes.\n        ** Define your bod IoU function HERE **\n    \"\"\"", "\n", "#pass", "\n", "iou3d", "=", "calc_iou", "(", "bb1", ",", "bb2", ")", "\n", "return", "iou3d", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.get_iou_obb": [[70, 73], ["lib.utils.box_util.box3d_iou"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.box_util.box3d_iou"], ["def", "get_iou_obb", "(", "bb1", ",", "bb2", ")", ":", "\n", "    ", "iou3d", ",", "iou2d", "=", "box3d_iou", "(", "bb1", ",", "bb2", ")", "\n", "return", "iou3d", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.get_iou_main": [[74, 76], ["get_iou_func"], "function", ["None"], ["", "def", "get_iou_main", "(", "get_iou_func", ",", "args", ")", ":", "\n", "    ", "return", "get_iou_func", "(", "*", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det_cls": [[77, 162], ["gt.keys", "pred.keys", "pred.keys", "numpy.array", "numpy.array", "numpy.argsort", "numpy.sort", "len", "numpy.zeros", "numpy.zeros", "range", "numpy.cumsum", "numpy.cumsum", "eval_det.voc_ap", "numpy.array", "len", "BB[].astype", "R[].astype", "float", "numpy.maximum", "len", "image_ids.append", "np.array.append", "np.array.append", "range", "numpy.array", "eval_det.get_iou_main", "numpy.finfo"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.voc_ap", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.get_iou_main"], ["", "def", "eval_det_cls", "(", "pred", ",", "gt", ",", "ovthresh", "=", "0.25", ",", "use_07_metric", "=", "False", ",", "get_iou_func", "=", "get_iou", ")", ":", "\n", "    ", "\"\"\" Generic functions to compute precision/recall for object detection\n        for a single class.\n        Input:\n            pred: map of {img_id: [(bbox, score)]} where bbox is numpy array\n            gt: map of {img_id: [bbox]}\n            ovthresh: scalar, iou threshold\n            use_07_metric: bool, if True use VOC07 11 point method\n        Output:\n            rec: numpy array of length nd\n            prec: numpy array of length nd\n            ap: scalar, average precision\n    \"\"\"", "\n", "\n", "# construct gt objects", "\n", "class_recs", "=", "{", "}", "# {img_id: {'bbox': bbox list, 'det': matched list}}", "\n", "npos", "=", "0", "\n", "for", "img_id", "in", "gt", ".", "keys", "(", ")", ":", "\n", "        ", "bbox", "=", "np", ".", "array", "(", "gt", "[", "img_id", "]", ")", "\n", "det", "=", "[", "False", "]", "*", "len", "(", "bbox", ")", "\n", "npos", "+=", "len", "(", "bbox", ")", "\n", "class_recs", "[", "img_id", "]", "=", "{", "'bbox'", ":", "bbox", ",", "'det'", ":", "det", "}", "\n", "# pad empty list to all other imgids", "\n", "", "for", "img_id", "in", "pred", ".", "keys", "(", ")", ":", "\n", "        ", "if", "img_id", "not", "in", "gt", ":", "\n", "            ", "class_recs", "[", "img_id", "]", "=", "{", "'bbox'", ":", "np", ".", "array", "(", "[", "]", ")", ",", "'det'", ":", "[", "]", "}", "\n", "\n", "# construct dets", "\n", "", "", "image_ids", "=", "[", "]", "\n", "confidence", "=", "[", "]", "\n", "BB", "=", "[", "]", "\n", "for", "img_id", "in", "pred", ".", "keys", "(", ")", ":", "\n", "        ", "for", "box", ",", "score", "in", "pred", "[", "img_id", "]", ":", "\n", "            ", "image_ids", ".", "append", "(", "img_id", ")", "\n", "confidence", ".", "append", "(", "score", ")", "\n", "BB", ".", "append", "(", "box", ")", "\n", "", "", "confidence", "=", "np", ".", "array", "(", "confidence", ")", "\n", "BB", "=", "np", ".", "array", "(", "BB", ")", "# (nd,4 or 8,3 or 6)", "\n", "\n", "# sort by confidence", "\n", "sorted_ind", "=", "np", ".", "argsort", "(", "-", "confidence", ")", "\n", "sorted_scores", "=", "np", ".", "sort", "(", "-", "confidence", ")", "\n", "BB", "=", "BB", "[", "sorted_ind", ",", "...", "]", "\n", "image_ids", "=", "[", "image_ids", "[", "x", "]", "for", "x", "in", "sorted_ind", "]", "\n", "\n", "# go down dets and mark TPs and FPs", "\n", "nd", "=", "len", "(", "image_ids", ")", "\n", "tp", "=", "np", ".", "zeros", "(", "nd", ")", "\n", "fp", "=", "np", ".", "zeros", "(", "nd", ")", "\n", "for", "d", "in", "range", "(", "nd", ")", ":", "\n", "#if d%100==0: print(d)", "\n", "        ", "R", "=", "class_recs", "[", "image_ids", "[", "d", "]", "]", "\n", "bb", "=", "BB", "[", "d", ",", "...", "]", ".", "astype", "(", "float", ")", "\n", "ovmax", "=", "-", "np", ".", "inf", "\n", "BBGT", "=", "R", "[", "'bbox'", "]", ".", "astype", "(", "float", ")", "\n", "\n", "if", "BBGT", ".", "size", ">", "0", ":", "\n", "# compute overlaps", "\n", "            ", "for", "j", "in", "range", "(", "BBGT", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "iou", "=", "get_iou_main", "(", "get_iou_func", ",", "(", "bb", ",", "BBGT", "[", "j", ",", "...", "]", ")", ")", "\n", "if", "iou", ">", "ovmax", ":", "\n", "                    ", "ovmax", "=", "iou", "\n", "jmax", "=", "j", "\n", "\n", "#print d, ovmax", "\n", "", "", "", "if", "ovmax", ">", "ovthresh", ":", "\n", "            ", "if", "not", "R", "[", "'det'", "]", "[", "jmax", "]", ":", "\n", "                ", "tp", "[", "d", "]", "=", "1.", "\n", "R", "[", "'det'", "]", "[", "jmax", "]", "=", "1", "\n", "", "else", ":", "\n", "                ", "fp", "[", "d", "]", "=", "1.", "\n", "", "", "else", ":", "\n", "            ", "fp", "[", "d", "]", "=", "1.", "\n", "\n", "# compute precision recall", "\n", "", "", "fp", "=", "np", ".", "cumsum", "(", "fp", ")", "\n", "tp", "=", "np", ".", "cumsum", "(", "tp", ")", "\n", "rec", "=", "tp", "/", "float", "(", "npos", ")", "\n", "#print('NPOS: ', npos)", "\n", "# avoid divide by zero in case the first detection matches a difficult", "\n", "# ground truth", "\n", "prec", "=", "tp", "/", "np", ".", "maximum", "(", "tp", "+", "fp", ",", "np", ".", "finfo", "(", "np", ".", "float64", ")", ".", "eps", ")", "\n", "ap", "=", "voc_ap", "(", "rec", ",", "prec", ",", "use_07_metric", ")", "\n", "\n", "return", "rec", ",", "prec", ",", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det_cls_wrapper": [[163, 167], ["eval_det.eval_det_cls"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det_cls"], ["", "def", "eval_det_cls_wrapper", "(", "arguments", ")", ":", "\n", "    ", "pred", ",", "gt", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", "=", "arguments", "\n", "rec", ",", "prec", ",", "ap", "=", "eval_det_cls", "(", "pred", ",", "gt", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", ")", "\n", "return", "(", "rec", ",", "prec", ",", "ap", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det": [[168, 208], ["pred_all.keys", "gt_all.keys", "gt.keys", "print", "eval_det.eval_det_cls", "print", "[].append", "[].append"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det_cls"], ["", "def", "eval_det", "(", "pred_all", ",", "gt_all", ",", "ovthresh", "=", "0.25", ",", "use_07_metric", "=", "False", ",", "get_iou_func", "=", "get_iou", ")", ":", "\n", "    ", "\"\"\" Generic functions to compute precision/recall for object detection\n        for multiple classes.\n        Input:\n            pred_all: map of {img_id: [(classname, bbox, score)]}\n            gt_all: map of {img_id: [(classname, bbox)]}\n            ovthresh: scalar, iou threshold\n            use_07_metric: bool, if true use VOC07 11 point method\n        Output:\n            rec: {classname: rec}\n            prec: {classname: prec_all}\n            ap: {classname: scalar}\n    \"\"\"", "\n", "pred", "=", "{", "}", "# map {classname: pred}", "\n", "gt", "=", "{", "}", "# map {classname: gt}", "\n", "for", "img_id", "in", "pred_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", ",", "score", "in", "pred_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "pred", ":", "pred", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "pred", "[", "classname", "]", ":", "\n", "                ", "pred", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "pred", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "(", "bbox", ",", "score", ")", ")", "\n", "", "", "for", "img_id", "in", "gt_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", "in", "gt_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "gt", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "bbox", ")", "\n", "\n", "", "", "rec", "=", "{", "}", "\n", "prec", "=", "{", "}", "\n", "ap", "=", "{", "}", "\n", "for", "classname", "in", "gt", ".", "keys", "(", ")", ":", "\n", "        ", "print", "(", "'Computing AP for class: '", ",", "classname", ")", "\n", "rec", "[", "classname", "]", ",", "prec", "[", "classname", "]", ",", "ap", "[", "classname", "]", "=", "eval_det_cls", "(", "pred", "[", "classname", "]", ",", "gt", "[", "classname", "]", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", ")", "\n", "print", "(", "classname", ",", "ap", "[", "classname", "]", ")", "\n", "\n", "", "return", "rec", ",", "prec", ",", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.eval_det.eval_det_multiprocessing": [[210, 257], ["pred_all.keys", "gt_all.keys", "multiprocessing.Pool", "multiprocessing.Pool.map", "multiprocessing.Pool.close", "enumerate", "gt.keys", "print", "[].append", "[].append", "gt.keys"], "function", ["None"], ["def", "eval_det_multiprocessing", "(", "pred_all", ",", "gt_all", ",", "ovthresh", "=", "0.25", ",", "use_07_metric", "=", "False", ",", "get_iou_func", "=", "get_iou", ")", ":", "\n", "    ", "\"\"\" Generic functions to compute precision/recall for object detection\n        for multiple classes.\n        Input:\n            pred_all: map of {img_id: [(classname, bbox, score)]}\n            gt_all: map of {img_id: [(classname, bbox)]}\n            ovthresh: scalar, iou threshold\n            use_07_metric: bool, if true use VOC07 11 point method\n        Output:\n            rec: {classname: rec}\n            prec: {classname: prec_all}\n            ap: {classname: scalar}\n    \"\"\"", "\n", "pred", "=", "{", "}", "# map {classname: pred}", "\n", "gt", "=", "{", "}", "# map {classname: gt}", "\n", "for", "img_id", "in", "pred_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", ",", "score", "in", "pred_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "pred", ":", "pred", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "pred", "[", "classname", "]", ":", "\n", "                ", "pred", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "pred", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "(", "bbox", ",", "score", ")", ")", "\n", "", "", "for", "img_id", "in", "gt_all", ".", "keys", "(", ")", ":", "\n", "        ", "for", "classname", ",", "bbox", "in", "gt_all", "[", "img_id", "]", ":", "\n", "            ", "if", "classname", "not", "in", "gt", ":", "gt", "[", "classname", "]", "=", "{", "}", "\n", "if", "img_id", "not", "in", "gt", "[", "classname", "]", ":", "\n", "                ", "gt", "[", "classname", "]", "[", "img_id", "]", "=", "[", "]", "\n", "", "gt", "[", "classname", "]", "[", "img_id", "]", ".", "append", "(", "bbox", ")", "\n", "\n", "", "", "rec", "=", "{", "}", "\n", "prec", "=", "{", "}", "\n", "ap", "=", "{", "}", "\n", "p", "=", "Pool", "(", "processes", "=", "10", ")", "\n", "ret_values", "=", "p", ".", "map", "(", "eval_det_cls_wrapper", ",", "[", "(", "pred", "[", "classname", "]", ",", "gt", "[", "classname", "]", ",", "ovthresh", ",", "use_07_metric", ",", "get_iou_func", ")", "for", "classname", "in", "gt", ".", "keys", "(", ")", "if", "classname", "in", "pred", "]", ")", "\n", "p", ".", "close", "(", ")", "\n", "for", "i", ",", "classname", "in", "enumerate", "(", "gt", ".", "keys", "(", ")", ")", ":", "\n", "        ", "if", "classname", "in", "pred", ":", "\n", "            ", "rec", "[", "classname", "]", ",", "prec", "[", "classname", "]", ",", "ap", "[", "classname", "]", "=", "ret_values", "[", "i", "]", "\n", "", "else", ":", "\n", "            ", "rec", "[", "classname", "]", "=", "0", "\n", "prec", "[", "classname", "]", "=", "0", "\n", "ap", "[", "classname", "]", "=", "0", "\n", "", "print", "(", "classname", ",", "ap", "[", "classname", "]", ")", "\n", "\n", "", "return", "rec", ",", "prec", ",", "ap", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.batch_load_scannet_data.export_one_scan": [[26, 57], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "load_scannet_data.export", "numpy.logical_not", "len", "print", "numpy.in1d", "print", "numpy.save", "numpy.save", "numpy.save", "numpy.save", "numpy.in1d", "numpy.unique", "numpy.random.choice"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.export"], ["def", "export_one_scan", "(", "scan_name", ",", "output_filename_prefix", ")", ":", "\n", "    ", "mesh_file", "=", "os", ".", "path", ".", "join", "(", "SCANNET_DIR", ",", "scan_name", ",", "scan_name", "+", "'_vh_clean_2.ply'", ")", "\n", "agg_file", "=", "os", ".", "path", ".", "join", "(", "SCANNET_DIR", ",", "scan_name", ",", "scan_name", "+", "'.aggregation.json'", ")", "\n", "seg_file", "=", "os", ".", "path", ".", "join", "(", "SCANNET_DIR", ",", "scan_name", ",", "scan_name", "+", "'_vh_clean_2.0.010000.segs.json'", ")", "\n", "meta_file", "=", "os", ".", "path", ".", "join", "(", "SCANNET_DIR", ",", "scan_name", ",", "scan_name", "+", "'.txt'", ")", "# includes axisAlignment info for the train set scans.   ", "\n", "mesh_vertices", ",", "semantic_labels", ",", "instance_labels", ",", "instance_bboxes", ",", "instance2semantic", "=", "export", "(", "mesh_file", ",", "agg_file", ",", "seg_file", ",", "meta_file", ",", "LABEL_MAP_FILE", ",", "None", ")", "\n", "\n", "mask", "=", "np", ".", "logical_not", "(", "np", ".", "in1d", "(", "semantic_labels", ",", "DONOTCARE_CLASS_IDS", ")", ")", "\n", "mesh_vertices", "=", "mesh_vertices", "[", "mask", ",", ":", "]", "\n", "semantic_labels", "=", "semantic_labels", "[", "mask", "]", "\n", "instance_labels", "=", "instance_labels", "[", "mask", "]", "\n", "\n", "num_instances", "=", "len", "(", "np", ".", "unique", "(", "instance_labels", ")", ")", "\n", "print", "(", "'Num of instances: '", ",", "num_instances", ")", "\n", "\n", "bbox_mask", "=", "np", ".", "in1d", "(", "instance_bboxes", "[", ":", ",", "-", "1", "]", ",", "OBJ_CLASS_IDS", ")", "\n", "instance_bboxes", "=", "instance_bboxes", "[", "bbox_mask", ",", ":", "]", "\n", "print", "(", "'Num of care instances: '", ",", "instance_bboxes", ".", "shape", "[", "0", "]", ")", "\n", "\n", "N", "=", "mesh_vertices", ".", "shape", "[", "0", "]", "\n", "if", "N", ">", "MAX_NUM_POINT", ":", "\n", "        ", "choices", "=", "np", ".", "random", ".", "choice", "(", "N", ",", "MAX_NUM_POINT", ",", "replace", "=", "False", ")", "\n", "mesh_vertices", "=", "mesh_vertices", "[", "choices", ",", ":", "]", "\n", "semantic_labels", "=", "semantic_labels", "[", "choices", "]", "\n", "instance_labels", "=", "instance_labels", "[", "choices", "]", "\n", "\n", "", "np", ".", "save", "(", "output_filename_prefix", "+", "'_vert.npy'", ",", "mesh_vertices", ")", "\n", "np", ".", "save", "(", "output_filename_prefix", "+", "'_sem_label.npy'", ",", "semantic_labels", ")", "\n", "np", ".", "save", "(", "output_filename_prefix", "+", "'_ins_label.npy'", ",", "instance_labels", ")", "\n", "np", ".", "save", "(", "output_filename_prefix", "+", "'_bbox.npy'", ",", "instance_bboxes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.batch_load_scannet_data.batch_export": [[58, 77], ["os.path.exists", "print", "os.mkdir", "print", "print", "print", "os.path.join", "os.path.isfile", "print", "datetime.datetime.now", "print", "print", "batch_load_scannet_data.export_one_scan", "print"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.batch_load_scannet_data.export_one_scan"], ["", "def", "batch_export", "(", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "OUTPUT_FOLDER", ")", ":", "\n", "        ", "print", "(", "'Creating new data folder: {}'", ".", "format", "(", "OUTPUT_FOLDER", ")", ")", "\n", "os", ".", "mkdir", "(", "OUTPUT_FOLDER", ")", "\n", "\n", "", "for", "scan_name", "in", "TRAIN_SCAN_NAMES", ":", "\n", "        ", "print", "(", "'-'", "*", "20", "+", "'begin'", ")", "\n", "print", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ")", "\n", "print", "(", "scan_name", ")", "\n", "output_filename_prefix", "=", "os", ".", "path", ".", "join", "(", "OUTPUT_FOLDER", ",", "scan_name", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "output_filename_prefix", "+", "'_vert.npy'", ")", ":", "\n", "            ", "print", "(", "'File already exists. skipping.'", ")", "\n", "print", "(", "'-'", "*", "20", "+", "'done'", ")", "\n", "continue", "\n", "", "try", ":", "\n", "            ", "export_one_scan", "(", "scan_name", ",", "output_filename_prefix", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "'Failed export scan: %s'", "%", "(", "scan_name", ")", ")", "\n", "", "print", "(", "'-'", "*", "20", "+", "'done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.model_util_scannet.ScannetDatasetConfig.__init__": [[16, 31], ["numpy.array", "range", "numpy.load", "enumerate", "os.path.join", "list"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "18", "\n", "self", ".", "num_heading_bin", "=", "1", "\n", "self", ".", "num_size_cluster", "=", "18", "\n", "\n", "self", ".", "type2class", "=", "{", "'cabinet'", ":", "0", ",", "'bed'", ":", "1", ",", "'chair'", ":", "2", ",", "'sofa'", ":", "3", ",", "'table'", ":", "4", ",", "'door'", ":", "5", ",", "\n", "'window'", ":", "6", ",", "'bookshelf'", ":", "7", ",", "'picture'", ":", "8", ",", "'counter'", ":", "9", ",", "'desk'", ":", "10", ",", "'curtain'", ":", "11", ",", "\n", "'refrigerator'", ":", "12", ",", "'showercurtrain'", ":", "13", ",", "'toilet'", ":", "14", ",", "'sink'", ":", "15", ",", "'bathtub'", ":", "16", ",", "'garbagebin'", ":", "17", "}", "\n", "self", ".", "class2type", "=", "{", "self", ".", "type2class", "[", "t", "]", ":", "t", "for", "t", "in", "self", ".", "type2class", "}", "\n", "self", ".", "nyu40ids", "=", "np", ".", "array", "(", "[", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "14", ",", "16", ",", "24", ",", "28", ",", "33", ",", "34", ",", "36", ",", "39", "]", ")", "\n", "self", ".", "nyu40id2class", "=", "{", "nyu40id", ":", "i", "for", "i", ",", "nyu40id", "in", "enumerate", "(", "list", "(", "self", ".", "nyu40ids", ")", ")", "}", "\n", "self", ".", "mean_size_arr", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data/scannet_means.npz'", ")", ")", "[", "'arr_0'", "]", "\n", "self", ".", "type_mean_size", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "self", ".", "num_size_cluster", ")", ":", "\n", "            ", "self", ".", "type_mean_size", "[", "self", ".", "class2type", "[", "i", "]", "]", "=", "self", ".", "mean_size_arr", "[", "i", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.model_util_scannet.ScannetDatasetConfig.angle2class": [[32, 44], ["None"], "methods", ["None"], ["", "", "def", "angle2class", "(", "self", ",", "angle", ")", ":", "\n", "        ", "''' Convert continuous angle to discrete class\n            [optinal] also small regression number from  \n            class center angle to current angle.\n           \n            angle is from 0-2pi (or -pi~pi), class center at 0, 1*(2pi/N), 2*(2pi/N) ...  (N-1)*(2pi/N)\n            return is class of int32 of 0,1,...,N-1 and a number such that\n                class*(2pi/N) + number = angle\n\n            NOT USED.\n        '''", "\n", "assert", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.model_util_scannet.ScannetDatasetConfig.class2angle": [[45, 50], ["None"], "methods", ["None"], ["", "def", "class2angle", "(", "self", ",", "pred_cls", ",", "residual", ",", "to_label_format", "=", "True", ")", ":", "\n", "        ", "''' Inverse function to angle2class.\n        \n        As ScanNet only has axis-alined boxes so angles are always 0. '''", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.model_util_scannet.ScannetDatasetConfig.size2class": [[51, 56], ["None"], "methods", ["None"], ["", "def", "size2class", "(", "self", ",", "size", ",", "type_name", ")", ":", "\n", "        ", "''' Convert 3D box size (l,w,h) to size class and size residual '''", "\n", "size_class", "=", "self", ".", "type2class", "[", "type_name", "]", "\n", "size_residual", "=", "size", "-", "self", ".", "type_mean_size", "[", "type_name", "]", "\n", "return", "size_class", ",", "size_residual", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.model_util_scannet.ScannetDatasetConfig.class2size": [[57, 60], ["None"], "methods", ["None"], ["", "def", "class2size", "(", "self", ",", "pred_cls", ",", "residual", ")", ":", "\n", "        ", "''' Inverse function to size2class '''", "\n", "return", "self", ".", "mean_size_arr", "[", "pred_cls", ",", ":", "]", "+", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.model_util_scannet.ScannetDatasetConfig.param2obb": [[61, 69], ["model_util_scannet.ScannetDatasetConfig.class2angle", "model_util_scannet.ScannetDatasetConfig.class2size", "numpy.zeros", "int"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size"], ["", "def", "param2obb", "(", "self", ",", "center", ",", "heading_class", ",", "heading_residual", ",", "size_class", ",", "size_residual", ")", ":", "\n", "        ", "heading_angle", "=", "self", ".", "class2angle", "(", "heading_class", ",", "heading_residual", ")", "\n", "box_size", "=", "self", ".", "class2size", "(", "int", "(", "size_class", ")", ",", "size_residual", ")", "\n", "obb", "=", "np", ".", "zeros", "(", "(", "7", ",", ")", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "center", "\n", "obb", "[", "3", ":", "6", "]", "=", "box_size", "\n", "obb", "[", "6", "]", "=", "heading_angle", "*", "-", "1", "\n", "return", "obb", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.model_util_scannet.rotate_aligned_boxes": [[70, 92], ["numpy.dot", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.stack", "numpy.concatenate", "numpy.transpose", "numpy.zeros", "numpy.dot", "numpy.max", "numpy.max", "numpy.transpose"], "function", ["None"], ["", "", "def", "rotate_aligned_boxes", "(", "input_boxes", ",", "rot_mat", ")", ":", "\n", "    ", "centers", ",", "lengths", "=", "input_boxes", "[", ":", ",", "0", ":", "3", "]", ",", "input_boxes", "[", ":", ",", "3", ":", "6", "]", "\n", "new_centers", "=", "np", ".", "dot", "(", "centers", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "\n", "dx", ",", "dy", "=", "lengths", "[", ":", ",", "0", "]", "/", "2.0", ",", "lengths", "[", ":", ",", "1", "]", "/", "2.0", "\n", "new_x", "=", "np", ".", "zeros", "(", "(", "dx", ".", "shape", "[", "0", "]", ",", "4", ")", ")", "\n", "new_y", "=", "np", ".", "zeros", "(", "(", "dx", ".", "shape", "[", "0", "]", ",", "4", ")", ")", "\n", "\n", "for", "i", ",", "crnr", "in", "enumerate", "(", "[", "(", "-", "1", ",", "-", "1", ")", ",", "(", "1", ",", "-", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "-", "1", ",", "1", ")", "]", ")", ":", "\n", "        ", "crnrs", "=", "np", ".", "zeros", "(", "(", "dx", ".", "shape", "[", "0", "]", ",", "3", ")", ")", "\n", "crnrs", "[", ":", ",", "0", "]", "=", "crnr", "[", "0", "]", "*", "dx", "\n", "crnrs", "[", ":", ",", "1", "]", "=", "crnr", "[", "1", "]", "*", "dy", "\n", "crnrs", "=", "np", ".", "dot", "(", "crnrs", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "new_x", "[", ":", ",", "i", "]", "=", "crnrs", "[", ":", ",", "0", "]", "\n", "new_y", "[", ":", ",", "i", "]", "=", "crnrs", "[", ":", ",", "1", "]", "\n", "\n", "\n", "", "new_dx", "=", "2.0", "*", "np", ".", "max", "(", "new_x", ",", "1", ")", "\n", "new_dy", "=", "2.0", "*", "np", ".", "max", "(", "new_y", ",", "1", ")", "\n", "new_lengths", "=", "np", ".", "stack", "(", "(", "new_dx", ",", "new_dy", ",", "lengths", "[", ":", ",", "2", "]", ")", ",", "axis", "=", "1", ")", "\n", "\n", "return", "np", ".", "concatenate", "(", "[", "new_centers", ",", "new_lengths", "]", ",", "axis", "=", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.read_aggregation": [[26, 43], ["os.path.isfile", "open", "json.load", "len", "range", "label_to_segs[].extend"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["def", "read_aggregation", "(", "filename", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "object_id_to_segs", "=", "{", "}", "\n", "label_to_segs", "=", "{", "}", "\n", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "num_objects", "=", "len", "(", "data", "[", "'segGroups'", "]", ")", "\n", "for", "i", "in", "range", "(", "num_objects", ")", ":", "\n", "            ", "object_id", "=", "data", "[", "'segGroups'", "]", "[", "i", "]", "[", "'objectId'", "]", "+", "1", "# instance ids should be 1-indexed", "\n", "label", "=", "data", "[", "'segGroups'", "]", "[", "i", "]", "[", "'label'", "]", "\n", "segs", "=", "data", "[", "'segGroups'", "]", "[", "i", "]", "[", "'segments'", "]", "\n", "object_id_to_segs", "[", "object_id", "]", "=", "segs", "\n", "if", "label", "in", "label_to_segs", ":", "\n", "                ", "label_to_segs", "[", "label", "]", ".", "extend", "(", "segs", ")", "\n", "", "else", ":", "\n", "                ", "label_to_segs", "[", "label", "]", "=", "segs", "\n", "", "", "", "return", "object_id_to_segs", ",", "label_to_segs", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.read_segmentation": [[45, 58], ["os.path.isfile", "open", "json.load", "len", "range", "seg_to_verts[].append"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["", "def", "read_segmentation", "(", "filename", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "seg_to_verts", "=", "{", "}", "\n", "with", "open", "(", "filename", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "num_verts", "=", "len", "(", "data", "[", "'segIndices'", "]", ")", "\n", "for", "i", "in", "range", "(", "num_verts", ")", ":", "\n", "            ", "seg_id", "=", "data", "[", "'segIndices'", "]", "[", "i", "]", "\n", "if", "seg_id", "in", "seg_to_verts", ":", "\n", "                ", "seg_to_verts", "[", "seg_id", "]", ".", "append", "(", "i", ")", "\n", "", "else", ":", "\n", "                ", "seg_to_verts", "[", "seg_id", "]", "=", "[", "i", "]", "\n", "", "", "", "return", "seg_to_verts", ",", "num_verts", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.export": [[60, 130], ["scannet_utils.read_label_mapping", "scannet_utils.read_mesh_vertices_rgb", "open().readlines", "np.array().reshape", "np.ones", "np.dot", "load_scannet_data.read_aggregation", "load_scannet_data.read_segmentation", "np.zeros", "label_to_segs.items", "np.zeros", "len", "object_id_to_segs.items", "np.zeros", "np.array().reshape.transpose", "np.unique", "np.min", "np.min", "np.min", "np.max", "np.max", "np.max", "np.array", "np.save", "np.save", "np.save", "np.save", "open", "np.array", "list", "len", "float", "object_id_to_segs.keys", "line.rstrip().strip().split", "line.rstrip().strip", "line.rstrip"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.read_label_mapping", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.read_mesh_vertices_rgb", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.read_aggregation", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.read_segmentation"], ["", "def", "export", "(", "mesh_file", ",", "agg_file", ",", "seg_file", ",", "meta_file", ",", "label_map_file", ",", "output_file", "=", "None", ")", ":", "\n", "    ", "\"\"\" points are XYZ RGB (RGB in 0-255),\n    semantic label as nyu40 ids,\n    instance label as 1-#instance,\n    box as (cx,cy,cz,dx,dy,dz,semantic_label)\n    \"\"\"", "\n", "label_map", "=", "scannet_utils", ".", "read_label_mapping", "(", "label_map_file", ",", "\n", "label_from", "=", "'raw_category'", ",", "label_to", "=", "'nyu40id'", ")", "\n", "mesh_vertices", "=", "scannet_utils", ".", "read_mesh_vertices_rgb", "(", "mesh_file", ")", "\n", "\n", "# Load scene axis alignment matrix", "\n", "lines", "=", "open", "(", "meta_file", ")", ".", "readlines", "(", ")", "\n", "for", "line", "in", "lines", ":", "\n", "        ", "if", "'axisAlignment'", "in", "line", ":", "\n", "            ", "axis_align_matrix", "=", "[", "float", "(", "x", ")", "for", "x", "in", "line", ".", "rstrip", "(", ")", ".", "strip", "(", "'axisAlignment = '", ")", ".", "split", "(", "' '", ")", "]", "\n", "break", "\n", "", "", "axis_align_matrix", "=", "np", ".", "array", "(", "axis_align_matrix", ")", ".", "reshape", "(", "(", "4", ",", "4", ")", ")", "\n", "pts", "=", "np", ".", "ones", "(", "(", "mesh_vertices", ".", "shape", "[", "0", "]", ",", "4", ")", ")", "\n", "pts", "[", ":", ",", "0", ":", "3", "]", "=", "mesh_vertices", "[", ":", ",", "0", ":", "3", "]", "\n", "pts", "=", "np", ".", "dot", "(", "pts", ",", "axis_align_matrix", ".", "transpose", "(", ")", ")", "# Nx4", "\n", "mesh_vertices", "[", ":", ",", "0", ":", "3", "]", "=", "pts", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "# Load semantic and instance labels", "\n", "object_id_to_segs", ",", "label_to_segs", "=", "read_aggregation", "(", "agg_file", ")", "\n", "seg_to_verts", ",", "num_verts", "=", "read_segmentation", "(", "seg_file", ")", "\n", "label_ids", "=", "np", ".", "zeros", "(", "shape", "=", "(", "num_verts", ")", ",", "dtype", "=", "np", ".", "uint32", ")", "# 0: unannotated", "\n", "object_id_to_label_id", "=", "{", "}", "\n", "for", "label", ",", "segs", "in", "label_to_segs", ".", "items", "(", ")", ":", "\n", "        ", "label_id", "=", "label_map", "[", "label", "]", "\n", "for", "seg", "in", "segs", ":", "\n", "            ", "verts", "=", "seg_to_verts", "[", "seg", "]", "\n", "label_ids", "[", "verts", "]", "=", "label_id", "\n", "", "", "instance_ids", "=", "np", ".", "zeros", "(", "shape", "=", "(", "num_verts", ")", ",", "dtype", "=", "np", ".", "uint32", ")", "# 0: unannotated", "\n", "num_instances", "=", "len", "(", "np", ".", "unique", "(", "list", "(", "object_id_to_segs", ".", "keys", "(", ")", ")", ")", ")", "\n", "for", "object_id", ",", "segs", "in", "object_id_to_segs", ".", "items", "(", ")", ":", "\n", "        ", "for", "seg", "in", "segs", ":", "\n", "            ", "verts", "=", "seg_to_verts", "[", "seg", "]", "\n", "instance_ids", "[", "verts", "]", "=", "object_id", "\n", "if", "object_id", "not", "in", "object_id_to_label_id", ":", "\n", "                ", "object_id_to_label_id", "[", "object_id", "]", "=", "label_ids", "[", "verts", "]", "[", "0", "]", "\n", "", "", "", "instance_bboxes", "=", "np", ".", "zeros", "(", "(", "num_instances", ",", "7", ")", ")", "\n", "for", "obj_id", "in", "object_id_to_segs", ":", "\n", "        ", "label_id", "=", "object_id_to_label_id", "[", "obj_id", "]", "\n", "obj_pc", "=", "mesh_vertices", "[", "instance_ids", "==", "obj_id", ",", "0", ":", "3", "]", "\n", "if", "len", "(", "obj_pc", ")", "==", "0", ":", "continue", "\n", "# Compute axis aligned box", "\n", "# An axis aligned bounding box is parameterized by", "\n", "# (cx,cy,cz) and (dx,dy,dz) and label id", "\n", "# where (cx,cy,cz) is the center point of the box,", "\n", "# dx is the x-axis length of the box.", "\n", "xmin", "=", "np", ".", "min", "(", "obj_pc", "[", ":", ",", "0", "]", ")", "\n", "ymin", "=", "np", ".", "min", "(", "obj_pc", "[", ":", ",", "1", "]", ")", "\n", "zmin", "=", "np", ".", "min", "(", "obj_pc", "[", ":", ",", "2", "]", ")", "\n", "xmax", "=", "np", ".", "max", "(", "obj_pc", "[", ":", ",", "0", "]", ")", "\n", "ymax", "=", "np", ".", "max", "(", "obj_pc", "[", ":", ",", "1", "]", ")", "\n", "zmax", "=", "np", ".", "max", "(", "obj_pc", "[", ":", ",", "2", "]", ")", "\n", "bbox", "=", "np", ".", "array", "(", "[", "(", "xmin", "+", "xmax", ")", "/", "2", ",", "(", "ymin", "+", "ymax", ")", "/", "2", ",", "(", "zmin", "+", "zmax", ")", "/", "2", ",", "\n", "xmax", "-", "xmin", ",", "ymax", "-", "ymin", ",", "zmax", "-", "zmin", ",", "label_id", "]", ")", "\n", "# NOTE: this assumes obj_id is in 1,2,3,.,,,.NUM_INSTANCES", "\n", "instance_bboxes", "[", "obj_id", "-", "1", ",", ":", "]", "=", "bbox", "\n", "\n", "", "if", "output_file", "is", "not", "None", ":", "\n", "        ", "np", ".", "save", "(", "output_file", "+", "'_vert.npy'", ",", "mesh_vertices", ")", "\n", "np", ".", "save", "(", "output_file", "+", "'_sem_label.npy'", ",", "label_ids", ")", "\n", "np", ".", "save", "(", "output_file", "+", "'_ins_label.npy'", ",", "instance_ids", ")", "\n", "np", ".", "save", "(", "output_file", "+", "'_bbox.npy'", ",", "instance_bboxes", ")", "\n", "\n", "", "return", "mesh_vertices", ",", "label_ids", ",", "instance_ids", ",", "instance_bboxes", ",", "object_id_to_label_id", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.main": [[131, 144], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "load_scannet_data.export", "os.path.split"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.parse_args", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.load_scannet_data.export"], ["", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--scan_path'", ",", "required", "=", "True", ",", "help", "=", "'path to scannet scene (e.g., data/ScanNet/v2/scene0000_00'", ")", "\n", "parser", ".", "add_argument", "(", "'--output_file'", ",", "required", "=", "True", ",", "help", "=", "'output file'", ")", "\n", "parser", ".", "add_argument", "(", "'--label_map_file'", ",", "required", "=", "True", ",", "help", "=", "'path to scannetv2-labels.combined.tsv'", ")", "\n", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "scan_name", "=", "os", ".", "path", ".", "split", "(", "opt", ".", "scan_path", ")", "[", "-", "1", "]", "\n", "mesh_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "scan_path", ",", "scan_name", "+", "'_vh_clean_2.ply'", ")", "\n", "agg_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "scan_path", ",", "scan_name", "+", "'.aggregation.json'", ")", "\n", "seg_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "scan_path", ",", "scan_name", "+", "'_vh_clean_2.0.010000.segs.json'", ")", "\n", "meta_file", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "scan_path", ",", "scan_name", "+", "'.txt'", ")", "# includes axisAlignment info for the train set scans.", "\n", "export", "(", "mesh_file", ",", "agg_file", ",", "seg_file", ",", "meta_file", ",", "opt", ".", "label_map_file", ",", "opt", ".", "output_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.represents_int": [[25, 32], ["int"], "function", ["None"], ["", "def", "represents_int", "(", "s", ")", ":", "\n", "    ", "''' if string s represents an int. '''", "\n", "try", ":", "\n", "        ", "int", "(", "s", ")", "\n", "return", "True", "\n", "", "except", "ValueError", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.read_label_mapping": [[34, 44], ["os.path.isfile", "dict", "scannet_utils.represents_int", "open", "csv.DictReader", "int", "list", "int", "dict.keys", "dict.items"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.represents_int"], ["", "", "def", "read_label_mapping", "(", "filename", ",", "label_from", "=", "'raw_category'", ",", "label_to", "=", "'nyu40id'", ")", ":", "\n", "    ", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "mapping", "=", "dict", "(", ")", "\n", "with", "open", "(", "filename", ")", "as", "csvfile", ":", "\n", "        ", "reader", "=", "csv", ".", "DictReader", "(", "csvfile", ",", "delimiter", "=", "'\\t'", ")", "\n", "for", "row", "in", "reader", ":", "\n", "            ", "mapping", "[", "row", "[", "label_from", "]", "]", "=", "int", "(", "row", "[", "label_to", "]", ")", "\n", "", "", "if", "represents_int", "(", "list", "(", "mapping", ".", "keys", "(", ")", ")", "[", "0", "]", ")", ":", "\n", "        ", "mapping", "=", "{", "int", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "mapping", ".", "items", "(", ")", "}", "\n", "", "return", "mapping", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.read_mesh_vertices": [[45, 57], ["os.path.isfile", "open", "PlyData.read", "np.zeros"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "def", "read_mesh_vertices", "(", "filename", ")", ":", "\n", "    ", "\"\"\" read XYZ for each vertex.\n    \"\"\"", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "plydata", "=", "PlyData", ".", "read", "(", "f", ")", "\n", "num_verts", "=", "plydata", "[", "'vertex'", "]", ".", "count", "\n", "vertices", "=", "np", ".", "zeros", "(", "shape", "=", "[", "num_verts", ",", "3", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vertices", "[", ":", ",", "0", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'x'", "]", "\n", "vertices", "[", ":", ",", "1", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'y'", "]", "\n", "vertices", "[", ":", ",", "2", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'z'", "]", "\n", "", "return", "vertices", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_utils.read_mesh_vertices_rgb": [[58, 74], ["os.path.isfile", "open", "PlyData.read", "np.zeros"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "def", "read_mesh_vertices_rgb", "(", "filename", ")", ":", "\n", "    ", "\"\"\" read XYZ RGB for each vertex.\n    Note: RGB values are in 0-255\n    \"\"\"", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "filename", ")", "\n", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "plydata", "=", "PlyData", ".", "read", "(", "f", ")", "\n", "num_verts", "=", "plydata", "[", "'vertex'", "]", ".", "count", "\n", "vertices", "=", "np", ".", "zeros", "(", "shape", "=", "[", "num_verts", ",", "6", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "vertices", "[", ":", ",", "0", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'x'", "]", "\n", "vertices", "[", ":", ",", "1", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'y'", "]", "\n", "vertices", "[", ":", ",", "2", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'z'", "]", "\n", "vertices", "[", ":", ",", "3", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'red'", "]", "\n", "vertices", "[", ":", ",", "4", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'green'", "]", "\n", "vertices", "[", ":", ",", "5", "]", "=", "plydata", "[", "'vertex'", "]", ".", "data", "[", "'blue'", "]", "\n", "", "return", "vertices", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_detection_dataset.ScannetDetectionDataset.__init__": [[28, 63], ["os.path.join", "list", "set", "os.path.join", "len", "print", "len", "print", "torch.load", "open", "f.read().splitlines", "len", "os.path.basename", "os.listdir", "x.startswith", "f.read"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["    ", "def", "__init__", "(", "self", ",", "split_set", "=", "'train'", ",", "num_points", "=", "20000", ",", "\n", "use_color", "=", "False", ",", "use_height", "=", "False", ",", "augment", "=", "False", ",", "by_scenes", "=", "None", ",", "by_points", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'scannet_train_detection_data'", ")", "\n", "all_scan_names", "=", "list", "(", "set", "(", "[", "os", ".", "path", ".", "basename", "(", "x", ")", "[", "0", ":", "12", "]", "for", "x", "in", "os", ".", "listdir", "(", "self", ".", "data_path", ")", "if", "x", ".", "startswith", "(", "'scene'", ")", "]", ")", ")", "\n", "#if split_set=='all':            ", "\n", "#    self.scan_names = all_scan_names", "\n", "if", "split_set", "in", "[", "'train'", ",", "'val'", ",", "'test'", "]", ":", "\n", "            ", "split_filenames", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'scannet/meta_data'", ",", "\n", "'scannetv2_{}.txt'", ".", "format", "(", "split_set", ")", ")", "\n", "\n", "if", "by_scenes", "!=", "None", "and", "split_set", "==", "'train'", ":", "\n", "                ", "split_filenames", "=", "by_scenes", "\n", "\n", "", "self", ".", "sampled_bbox", "=", "{", "}", "\n", "if", "by_points", "!=", "None", "and", "split_set", "==", "'train'", ":", "\n", "                ", "self", ".", "sampled_bbox", "=", "torch", ".", "load", "(", "by_points", ")", "\n", "\n", "", "with", "open", "(", "split_filenames", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "self", ".", "scan_names", "=", "f", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "# remove unavailiable scans", "\n", "", "num_scans", "=", "len", "(", "self", ".", "scan_names", ")", "\n", "self", ".", "scan_names", "=", "[", "sname", "for", "sname", "in", "self", ".", "scan_names", "if", "sname", "in", "all_scan_names", "]", "\n", "\n", "print", "(", "'kept {} scans out of {}'", ".", "format", "(", "len", "(", "self", ".", "scan_names", ")", ",", "num_scans", ")", ")", "\n", "num_scans", "=", "len", "(", "self", ".", "scan_names", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'illegal split name'", ")", "\n", "return", "\n", "\n", "", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "use_color", "=", "use_color", "\n", "self", ".", "use_height", "=", "use_height", "\n", "self", ".", "augment", "=", "augment", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_detection_dataset.ScannetDetectionDataset.__len__": [[64, 66], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "scan_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_detection_dataset.ScannetDetectionDataset.__getitem__": [[67, 214], ["numpy.load", "os.path.exists", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "lib.utils.pc_util.random_sampling", "numpy.zeros", "numpy.zeros", "numpy.unique", "numpy.tile", "numpy.concatenate.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.tile.astype", "numpy.zeros.astype", "numpy.array().astype", "numpy.load", "numpy.load", "numpy.load", "numpy.ones", "numpy.ones", "numpy.zeros_like().astype", "numpy.percentile", "numpy.concatenate", "lib.utils.pc_util.rotz", "numpy.dot", "datasets.scannet.model_util_scannet.rotate_aligned_boxes", "datasets.scannet.model_util_scannet.rotate_aligned_boxes.astype", "os.path.join", "os.path.join", "numpy.ones", "len", "numpy.random.random", "numpy.random.random", "numpy.transpose", "numpy.where", "numpy.array", "os.path.join", "os.path.join", "os.path.join", "numpy.zeros_like", "numpy.expand_dims", "numpy.where", "numpy.random.random", "x.min", "x.max"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.rotz", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.model_util_scannet.rotate_aligned_boxes"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Returns a dict with following keys:\n            point_clouds: (N,3+C)\n            center_label: (MAX_NUM_OBJ,3) for GT box center XYZ\n            sem_cls_label: (MAX_NUM_OBJ,) semantic class index\n            angle_class_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_HEADING_BIN-1\n            angle_residual_label: (MAX_NUM_OBJ,)\n            size_classe_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_SIZE_CLUSTER\n            size_residual_label: (MAX_NUM_OBJ,3)\n            box_label_mask: (MAX_NUM_OBJ) as 0/1 with 1 indicating a unique box\n            point_votes: (N,3) with votes XYZ\n            point_votes_mask: (N,) with 0/1 with 1 indicating the point is in one of the object's OBB.\n            scan_idx: int scan index in scan_names list\n            pcl_color: unused\n        \"\"\"", "\n", "\n", "scan_name", "=", "self", ".", "scan_names", "[", "idx", "]", "\n", "mesh_vertices", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_vert.npy'", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_ins_label.npy'", ")", ":", "\n", "            ", "instance_labels", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_ins_label.npy'", ")", "\n", "semantic_labels", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_sem_label.npy'", ")", "\n", "instance_bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "\n", "", "else", ":", "\n", "            ", "instance_labels", "=", "np", ".", "ones", "(", "mesh_vertices", ".", "shape", "[", "0", "]", ")", "\n", "semantic_labels", "=", "np", ".", "ones", "(", "mesh_vertices", ".", "shape", "[", "0", "]", ")", "\n", "instance_bboxes", "=", "np", ".", "ones", "(", "(", "12", ",", "7", ")", ")", "+", "2", "\n", "\n", "#from lib.utils.io3d import generate_bbox_mesh, write_triangle_mesh", "\n", "#new_instance_box = np.zeros_like(instance_bboxes)", "\n", "#new_instance_box[:, 0] = instance_bboxes[:, 0] - instance_bboxes[:, 3] / 2.0", "\n", "#new_instance_box[:, 1] = instance_bboxes[:, 1] - instance_bboxes[:, 4] / 2.0", "\n", "#new_instance_box[:, 2] = instance_bboxes[:, 2] - instance_bboxes[:, 5] / 2.0", "\n", "#new_instance_box[:, 3] = instance_bboxes[:, 0] + instance_bboxes[:, 3] / 2.0", "\n", "#new_instance_box[:, 4] = instance_bboxes[:, 1] + instance_bboxes[:, 4] / 2.0", "\n", "#new_instance_box[:, 5] = instance_bboxes[:, 2] + instance_bboxes[:, 5] / 2.0", "\n", "#import ipdb", "\n", "#ipdb.set_trace()", "\n", "#vertices, _, faces = generate_bbox_mesh(new_instance_box)", "\n", "#write_triangle_mesh(vertices, None, faces, 'test1.ply')", "\n", "\n", "", "if", "self", ".", "sampled_bbox", "and", "scan_name", "in", "self", ".", "sampled_bbox", ":", "\n", "            ", "sampled_bbox", "=", "self", ".", "sampled_bbox", "[", "scan_name", "]", "[", "0", "]", "\n", "sampled_instances", "=", "self", ".", "sampled_bbox", "[", "scan_name", "]", "[", "1", "]", "\n", "mask_valid", "=", "np", ".", "zeros_like", "(", "instance_labels", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "for", "sampled_instance", "in", "sampled_instances", ":", "\n", "                ", "mask_valid", "=", "mask_valid", "|", "(", "instance_labels", "==", "sampled_instance", ")", "\n", "", "mask_nonvalid", "=", "~", "mask_valid", "\n", "\n", "semantic_labels", "[", "mask_nonvalid", "]", "=", "-", "1", "\n", "instance_labels", "[", "mask_nonvalid", "]", "=", "-", "1", "\n", "\n", "if", "len", "(", "instance_bboxes", ")", "!=", "0", ":", "\n", "                ", "instance_bboxes", "=", "instance_bboxes", "[", "sampled_bbox", "]", "\n", "\n", "\n", "# subsampling happens here", "\n", "\n", "", "", "point_cloud", "=", "mesh_vertices", "[", ":", ",", "0", ":", "3", "]", "# do not use color for now", "\n", "pcl_color", "=", "(", "mesh_vertices", "[", ":", ",", "3", ":", "6", "]", "-", "MEAN_COLOR_RGB", ")", "/", "256.0", "\n", "#pcl_color = np.ones_like(mesh_vertices[:,3:6])", "\n", "\n", "if", "self", ".", "use_height", ":", "\n", "            ", "floor_height", "=", "np", ".", "percentile", "(", "point_cloud", "[", ":", ",", "2", "]", ",", "0.99", ")", "\n", "height", "=", "point_cloud", "[", ":", ",", "2", "]", "-", "floor_height", "\n", "point_cloud", "=", "np", ".", "concatenate", "(", "[", "point_cloud", ",", "np", ".", "expand_dims", "(", "height", ",", "1", ")", "]", ",", "1", ")", "\n", "\n", "# ------------------------------- LABELS ------------------------------        ", "\n", "", "target_bboxes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "6", ")", ")", "\n", "target_bboxes_mask", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "angle_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "angle_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "\n", "point_cloud", ",", "choices", "=", "pc_util", ".", "random_sampling", "(", "point_cloud", ",", "\n", "self", ".", "num_points", ",", "return_choices", "=", "True", ")", "\n", "instance_labels", "=", "instance_labels", "[", "choices", "]", "\n", "semantic_labels", "=", "semantic_labels", "[", "choices", "]", "\n", "\n", "pcl_color", "=", "pcl_color", "[", "choices", "]", "\n", "\n", "target_bboxes_mask", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "1", "\n", "target_bboxes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "instance_bboxes", "[", ":", ",", "0", ":", "6", "]", "\n", "\n", "# ------------------------------- DATA AUGMENTATION ------------------------------        ", "\n", "if", "self", ".", "augment", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the YZ plane", "\n", "                ", "point_cloud", "[", ":", ",", "0", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "0", "]", "\n", "target_bboxes", "[", ":", ",", "0", "]", "=", "-", "1", "*", "target_bboxes", "[", ":", ",", "0", "]", "\n", "\n", "", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the XZ plane", "\n", "                ", "point_cloud", "[", ":", ",", "1", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "1", "]", "\n", "target_bboxes", "[", ":", ",", "1", "]", "=", "-", "1", "*", "target_bboxes", "[", ":", ",", "1", "]", "\n", "\n", "# Rotation along up-axis/Z-axis", "\n", "", "rot_angle", "=", "(", "np", ".", "random", ".", "random", "(", ")", "*", "np", ".", "pi", "/", "18", ")", "-", "np", ".", "pi", "/", "36", "# -5 ~ +5 degree", "\n", "rot_mat", "=", "pc_util", ".", "rotz", "(", "rot_angle", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "target_bboxes", "=", "rotate_aligned_boxes", "(", "target_bboxes", ",", "rot_mat", ")", "\n", "\n", "# compute votes *AFTER* augmentation", "\n", "# generate votes", "\n", "# Note: since there's no map between bbox instance labels and", "\n", "# pc instance_labels (it had been filtered ", "\n", "# in the data preparation step) we'll compute the instance bbox", "\n", "# from the points sharing the same instance label. ", "\n", "", "point_votes", "=", "np", ".", "zeros", "(", "[", "self", ".", "num_points", ",", "3", "]", ")", "\n", "point_votes_mask", "=", "np", ".", "zeros", "(", "self", ".", "num_points", ")", "\n", "for", "i_instance", "in", "np", ".", "unique", "(", "instance_labels", ")", ":", "\n", "# find all points belong to that instance", "\n", "            ", "ind", "=", "np", ".", "where", "(", "instance_labels", "==", "i_instance", ")", "[", "0", "]", "\n", "# find the semantic label            ", "\n", "if", "semantic_labels", "[", "ind", "[", "0", "]", "]", "in", "DC", ".", "nyu40ids", ":", "\n", "                ", "x", "=", "point_cloud", "[", "ind", ",", ":", "3", "]", "\n", "center", "=", "0.5", "*", "(", "x", ".", "min", "(", "0", ")", "+", "x", ".", "max", "(", "0", ")", ")", "\n", "point_votes", "[", "ind", ",", ":", "]", "=", "center", "-", "x", "\n", "point_votes_mask", "[", "ind", "]", "=", "1.0", "\n", "", "", "point_votes", "=", "np", ".", "tile", "(", "point_votes", ",", "(", "1", ",", "3", ")", ")", "# make 3 votes identical ", "\n", "\n", "class_ind", "=", "[", "np", ".", "where", "(", "DC", ".", "nyu40ids", "==", "x", ")", "[", "0", "]", "[", "0", "]", "for", "x", "in", "instance_bboxes", "[", ":", ",", "-", "1", "]", "]", "\n", "# NOTE: set size class as semantic class. Consider use size2class.", "\n", "size_classes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "class_ind", "\n", "size_residuals", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "target_bboxes", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", ",", "3", ":", "6", "]", "-", "DC", ".", "mean_size_arr", "[", "class_ind", ",", ":", "]", "\n", "\n", "ret_dict", "=", "{", "}", "\n", "ret_dict", "[", "'point_clouds'", "]", "=", "point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'center_label'", "]", "=", "target_bboxes", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", "0", ":", "3", "]", "\n", "ret_dict", "[", "'heading_class_label'", "]", "=", "angle_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'heading_residual_label'", "]", "=", "angle_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'size_class_label'", "]", "=", "size_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'size_residual_label'", "]", "=", "size_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "target_bboxes_semcls", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "target_bboxes_semcls", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "=", "[", "DC", ".", "nyu40id2class", "[", "x", "]", "for", "x", "in", "instance_bboxes", "[", ":", ",", "-", "1", "]", "[", "0", ":", "instance_bboxes", ".", "shape", "[", "0", "]", "]", "]", "\n", "ret_dict", "[", "'sem_cls_label'", "]", "=", "target_bboxes_semcls", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'box_label_mask'", "]", "=", "target_bboxes_mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label'", "]", "=", "point_votes", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label_mask'", "]", "=", "point_votes_mask", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'scan_idx'", "]", "=", "np", ".", "array", "(", "idx", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'pcl_color'", "]", "=", "pcl_color", "\n", "ret_dict", "[", "'scan_name'", "]", "=", "scan_name", "\n", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_detection_dataset.viz_votes": [[217, 226], ["lib.utils.pc_util.write_ply", "lib.utils.pc_util.write_ply"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply"], ["", "", "def", "viz_votes", "(", "pc", ",", "point_votes", ",", "point_votes_mask", ",", "name", "=", "''", ")", ":", "\n", "    ", "\"\"\" Visualize point votes and point votes mask labels\n    pc: (N,3 or 6), point_votes: (N,9), point_votes_mask: (N,)\n    \"\"\"", "\n", "inds", "=", "(", "point_votes_mask", "==", "1", ")", "\n", "pc_obj", "=", "pc", "[", "inds", ",", "0", ":", "3", "]", "\n", "pc_obj_voted1", "=", "pc_obj", "+", "point_votes", "[", "inds", ",", "0", ":", "3", "]", "\n", "pc_util", ".", "write_ply", "(", "pc_obj", ",", "'pc_obj{}.ply'", ".", "format", "(", "name", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_obj_voted1", ",", "'pc_obj_voted1{}.ply'", ".", "format", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.scannet_detection_dataset.viz_obb": [[227, 252], ["range", "lib.utils.pc_util.write_oriented_bbox", "lib.utils.pc_util.write_ply", "numpy.zeros", "print", "oriented_boxes.append"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply"], ["", "def", "viz_obb", "(", "pc", ",", "label", ",", "mask", ",", "angle_classes", ",", "angle_residuals", ",", "\n", "size_classes", ",", "size_residuals", ",", "name", "=", "''", ")", ":", "\n", "    ", "\"\"\" Visualize oriented bounding box ground truth\n    pc: (N,3)\n    label: (K,3)  K == MAX_NUM_OBJ\n    mask: (K,)\n    angle_classes: (K,)\n    angle_residuals: (K,)\n    size_classes: (K,)\n    size_residuals: (K,3)\n    \"\"\"", "\n", "oriented_boxes", "=", "[", "]", "\n", "K", "=", "label", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "        ", "if", "mask", "[", "i", "]", "==", "0", ":", "continue", "\n", "obb", "=", "np", ".", "zeros", "(", "7", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "label", "[", "i", ",", "0", ":", "3", "]", "\n", "heading_angle", "=", "0", "# hard code to 0", "\n", "box_size", "=", "DC", ".", "mean_size_arr", "[", "size_classes", "[", "i", "]", ",", ":", "]", "+", "size_residuals", "[", "i", ",", ":", "]", "\n", "obb", "[", "3", ":", "6", "]", "=", "box_size", "\n", "obb", "[", "6", "]", "=", "-", "1", "*", "heading_angle", "\n", "print", "(", "obb", ")", "\n", "oriented_boxes", ".", "append", "(", "obb", ")", "\n", "", "pc_util", ".", "write_oriented_bbox", "(", "oriented_boxes", ",", "'gt_obbs{}.ply'", ".", "format", "(", "name", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "label", "[", "mask", "==", "1", ",", ":", "]", ",", "'gt_centroids{}.ply'", ".", "format", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.get_raw2scannet_label_map": [[10, 23], ["range", "line.rstrip", "len", "lines[].split", "open"], "function", ["None"], ["def", "get_raw2scannet_label_map", "(", ")", ":", "\n", "    ", "lines", "=", "[", "line", ".", "rstrip", "(", ")", "for", "line", "in", "open", "(", "'scannetv2-labels.combined.tsv'", ")", "]", "\n", "lines", "=", "lines", "[", "1", ":", "]", "\n", "raw2scannet", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "lines", ")", ")", ":", "\n", "        ", "elements", "=", "lines", "[", "i", "]", ".", "split", "(", "'\\t'", ")", "\n", "# raw_name = elements[0]", "\n", "# nyu40_name = elements[6]", "\n", "raw_name", "=", "elements", "[", "1", "]", "\n", "nyu40_id", "=", "elements", "[", "4", "]", "\n", "nyu40_name", "=", "elements", "[", "7", "]", "\n", "raw2scannet", "[", "raw_name", "]", "=", "nyu40_id", "\n", "", "return", "raw2scannet", "\n", "", "g_raw2scannet", "=", "get_raw2scannet_label_map", "(", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.parse_args": [[26, 32], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--input'", ",", "default", "=", "'/canis/Datasets/ScanNet/public/v2/scans/'", ")", "\n", "parser", ".", "add_argument", "(", "'--output'", ",", "default", "=", "'./output'", ")", "\n", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.main": [[33, 78], ["os.listdir", "print", "os.path.join", "range", "os.path.join", "plyfile.PlyData().read", "numpy.array", "os.path.join", "numpy.zeros", "numpy.zeros", "range", "torch.save", "open", "json.load", "len", "segid_to_pointid[].append", "open", "json.load", "len", "numpy.array", "os.path.join", "plyfile.PlyData", "list", "instance_segids.append", "labels.append"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["", "def", "main", "(", "config", ")", ":", "\n", "    ", "for", "scene_name", "in", "os", ".", "listdir", "(", "config", ".", "input", ")", ":", "\n", "        ", "print", "(", "scene_name", ")", "\n", "# Over-segmented segments: maps from segment to vertex/point IDs", "\n", "segid_to_pointid", "=", "{", "}", "\n", "segfile", "=", "os", ".", "path", ".", "join", "(", "config", ".", "input", ",", "scene_name", ",", "'%s_vh_clean_2.0.010000.segs.json'", "%", "(", "scene_name", ")", ")", "\n", "with", "open", "(", "segfile", ")", "as", "jsondata", ":", "\n", "            ", "d", "=", "json", ".", "load", "(", "jsondata", ")", "\n", "seg", "=", "d", "[", "'segIndices'", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "seg", ")", ")", ":", "\n", "            ", "if", "seg", "[", "i", "]", "not", "in", "segid_to_pointid", ":", "\n", "                ", "segid_to_pointid", "[", "seg", "[", "i", "]", "]", "=", "[", "]", "\n", "", "segid_to_pointid", "[", "seg", "[", "i", "]", "]", ".", "append", "(", "i", ")", "\n", "\n", "# Raw points in XYZRGBA", "\n", "", "ply_filename", "=", "os", ".", "path", ".", "join", "(", "config", ".", "input", ",", "scene_name", ",", "'%s_vh_clean_2.ply'", "%", "(", "scene_name", ")", ")", "\n", "f", "=", "plyfile", ".", "PlyData", "(", ")", ".", "read", "(", "ply_filename", ")", "\n", "points", "=", "np", ".", "array", "(", "[", "list", "(", "x", ")", "for", "x", "in", "f", ".", "elements", "[", "0", "]", "]", ")", "\n", "\n", "# Instances over-segmented segment IDs: annotation on segments", "\n", "instance_segids", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "annotation_filename", "=", "os", ".", "path", ".", "join", "(", "config", ".", "input", ",", "scene_name", ",", "'%s.aggregation.json'", "%", "(", "scene_name", ")", ")", "\n", "with", "open", "(", "annotation_filename", ")", "as", "jsondata", ":", "\n", "            ", "d", "=", "json", ".", "load", "(", "jsondata", ")", "\n", "for", "x", "in", "d", "[", "'segGroups'", "]", ":", "\n", "                ", "instance_segids", ".", "append", "(", "x", "[", "'segments'", "]", ")", "\n", "labels", ".", "append", "(", "x", "[", "'label'", "]", ")", "\n", "\n", "\n", "# Each instance's points", "\n", "", "", "instance_labels", "=", "np", ".", "zeros", "(", "points", ".", "shape", "[", "0", "]", ")", "\n", "semantic_labels", "=", "np", ".", "zeros", "(", "points", ".", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "instance_segids", ")", ")", ":", "\n", "            ", "segids", "=", "instance_segids", "[", "i", "]", "\n", "pointids", "=", "[", "]", "\n", "for", "segid", "in", "segids", ":", "\n", "                ", "pointids", "+=", "segid_to_pointid", "[", "segid", "]", "\n", "", "pointids", "=", "np", ".", "array", "(", "pointids", ")", "\n", "instance_labels", "[", "pointids", "]", "=", "i", "+", "1", "\n", "semantic_labels", "[", "pointids", "]", "=", "RAW2SCANNET", "[", "labels", "[", "i", "]", "]", "\n", "\n", "", "colors", "=", "points", "[", ":", ",", "3", ":", "6", "]", "\n", "points", "=", "points", "[", ":", ",", "0", ":", "3", "]", "# XYZ+RGB+NORMAL", "\n", "torch", ".", "save", "(", "(", "points", ",", "colors", ",", "semantic_labels", ",", "instance_labels", ")", ",", "os", ".", "path", ".", "join", "(", "config", ".", "output", ",", "scene_name", "+", "'.pth'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.__init__": [[33, 54], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "print", "exit"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "root_dir", ",", "split", "=", "'training'", ",", "use_v1", "=", "False", ")", ":", "\n", "        ", "self", ".", "root_dir", "=", "root_dir", "\n", "self", ".", "split", "=", "split", "\n", "assert", "(", "self", ".", "split", "==", "'training'", ")", "\n", "self", ".", "split_dir", "=", "os", ".", "path", ".", "join", "(", "root_dir", ")", "\n", "\n", "if", "split", "==", "'training'", ":", "\n", "            ", "self", ".", "num_samples", "=", "10335", "\n", "", "elif", "split", "==", "'testing'", ":", "\n", "            ", "self", ".", "num_samples", "=", "2860", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Unknown split: %s'", "%", "(", "split", ")", ")", "\n", "exit", "(", "-", "1", ")", "\n", "\n", "", "self", ".", "image_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'image'", ")", "\n", "self", ".", "calib_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'calib'", ")", "\n", "self", ".", "depth_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'depth'", ")", "\n", "if", "use_v1", ":", "\n", "            ", "self", ".", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'label_v1'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "label_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "split_dir", ",", "'label'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.__len__": [[55, 57], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_image": [[58, 61], ["os.path.join", "sunrgbd_utils.load_image"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.load_image"], ["", "def", "get_image", "(", "self", ",", "idx", ")", ":", "\n", "        ", "img_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_dir", ",", "'%06d.jpg'", "%", "(", "idx", ")", ")", "\n", "return", "sunrgbd_utils", ".", "load_image", "(", "img_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_depth": [[62, 65], ["os.path.join", "sunrgbd_utils.load_depth_points_mat"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.load_depth_points_mat"], ["", "def", "get_depth", "(", "self", ",", "idx", ")", ":", "\n", "        ", "depth_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "depth_dir", ",", "'%06d.mat'", "%", "(", "idx", ")", ")", "\n", "return", "sunrgbd_utils", ".", "load_depth_points_mat", "(", "depth_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_calibration": [[66, 69], ["os.path.join", "sunrgbd_utils.SUNRGBD_Calibration"], "methods", ["None"], ["", "def", "get_calibration", "(", "self", ",", "idx", ")", ":", "\n", "        ", "calib_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "calib_dir", ",", "'%06d.txt'", "%", "(", "idx", ")", ")", "\n", "return", "sunrgbd_utils", ".", "SUNRGBD_Calibration", "(", "calib_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_label_objects": [[70, 73], ["os.path.join", "sunrgbd_utils.read_sunrgbd_label"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.read_sunrgbd_label"], ["", "def", "get_label_objects", "(", "self", ",", "idx", ")", ":", "\n", "        ", "label_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_dir", ",", "'%06d.txt'", "%", "(", "idx", ")", ")", "\n", "return", "sunrgbd_utils", ".", "read_sunrgbd_label", "(", "label_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.data_viz": [[74, 170], ["os.path.join", "sunrgbd_data.sunrgbd_object", "numpy.array", "numpy.random.seed", "numpy.random.shuffle", "range", "range", "len", "print", "sunrgbd_data.sunrgbd_object.get_depth", "print", "sunrgbd_data.sunrgbd_object.get_calibration", "sunrgbd.get_calibration.project_upright_depth_to_image", "print", "print", "plt.cm.get_cmap", "sunrgbd_data.sunrgbd_object.get_image", "cv2.cvtColor", "range", "PIL.Image.fromarray().save", "sunrgbd_data.sunrgbd_object.get_label_objects", "print", "sunrgbd_data.sunrgbd_object.get_image", "cv2.cvtColor", "enumerate", "PIL.Image.fromarray().save", "numpy.concatenate", "numpy.concatenate", "print", "print", "pc_util.write_ply", "pc_util.write_ply", "print", "print", "print", "input", "cv2.circle", "os.path.exists", "os.mkdir", "os.path.join", "cv2.rectangle", "cv2.putText", "os.path.join", "pc_util.random_sampling", "pc_util.write_ply_rgb", "numpy.zeros", "print", "np.vstack.append", "len", "numpy.vstack", "pc_util.write_oriented_bbox", "print", "sunrgbd_utils.compute_box_3d", "sunrgbd_utils.compute_orientation_3d", "print", "box3d.append", "ori3d.append", "os.path.join", "os.path.join", "len", "numpy.array", "PIL.Image.fromarray", "PIL.Image.fromarray", "os.path.join", "numpy.array", "tuple", "os.path.join", "int", "int", "tuple", "int", "int", "int", "int", "max", "max", "plt.cm.get_cmap.", "int", "numpy.round", "numpy.round", "int", "int", "range"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_depth", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_calibration", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_image", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_image", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_label_objects", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_image", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply_rgb", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.compute_box_3d", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.compute_orientation_3d"], ["", "", "def", "data_viz", "(", "data_dir", ",", "dump_dir", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'data_viz_dump'", ")", ")", ":", "\n", "    ", "''' Examine and visualize SUN RGB-D data. '''", "\n", "sunrgbd", "=", "sunrgbd_object", "(", "data_dir", ")", "\n", "idxs", "=", "np", ".", "array", "(", "range", "(", "1", ",", "len", "(", "sunrgbd", ")", "+", "1", ")", ")", "\n", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "idxs", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "sunrgbd", ")", ")", ":", "\n", "        ", "data_idx", "=", "idxs", "[", "idx", "]", "\n", "print", "(", "'-'", "*", "10", ",", "'data index: '", ",", "data_idx", ")", "\n", "pc", "=", "sunrgbd", ".", "get_depth", "(", "data_idx", ")", "\n", "print", "(", "'Point cloud shape:'", ",", "pc", ".", "shape", ")", "\n", "\n", "# Project points to image", "\n", "calib", "=", "sunrgbd", ".", "get_calibration", "(", "data_idx", ")", "\n", "uv", ",", "d", "=", "calib", ".", "project_upright_depth_to_image", "(", "pc", "[", ":", ",", "0", ":", "3", "]", ")", "\n", "print", "(", "'Point UV:'", ",", "uv", ")", "\n", "print", "(", "'Point depth:'", ",", "d", ")", "\n", "\n", "import", "matplotlib", ".", "pyplot", "as", "plt", "\n", "cmap", "=", "plt", ".", "cm", ".", "get_cmap", "(", "'hsv'", ",", "256", ")", "\n", "cmap", "=", "np", ".", "array", "(", "[", "cmap", "(", "i", ")", "for", "i", "in", "range", "(", "256", ")", "]", ")", "[", ":", ",", ":", "3", "]", "*", "255", "\n", "\n", "img", "=", "sunrgbd", ".", "get_image", "(", "data_idx", ")", "\n", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "for", "i", "in", "range", "(", "uv", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "depth", "=", "d", "[", "i", "]", "\n", "color", "=", "cmap", "[", "int", "(", "120.0", "/", "depth", ")", ",", ":", "]", "\n", "cv2", ".", "circle", "(", "img", ",", "(", "int", "(", "np", ".", "round", "(", "uv", "[", "i", ",", "0", "]", ")", ")", ",", "int", "(", "np", ".", "round", "(", "uv", "[", "i", ",", "1", "]", ")", ")", ")", ",", "2", ",", "\n", "color", "=", "tuple", "(", "color", ")", ",", "thickness", "=", "-", "1", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "dump_dir", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "dump_dir", ")", "\n", "", "Image", ".", "fromarray", "(", "img", ")", ".", "save", "(", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'img_depth.jpg'", ")", ")", "\n", "\n", "# Load box labels", "\n", "objects", "=", "sunrgbd", ".", "get_label_objects", "(", "data_idx", ")", "\n", "print", "(", "'Objects:'", ",", "objects", ")", "\n", "\n", "# Draw 2D boxes on image", "\n", "img", "=", "sunrgbd", ".", "get_image", "(", "data_idx", ")", "\n", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "for", "i", ",", "obj", "in", "enumerate", "(", "objects", ")", ":", "\n", "            ", "cv2", ".", "rectangle", "(", "img", ",", "(", "int", "(", "obj", ".", "xmin", ")", ",", "int", "(", "obj", ".", "ymin", ")", ")", ",", "\n", "(", "int", "(", "obj", ".", "xmax", ")", ",", "int", "(", "obj", ".", "ymax", ")", ")", ",", "(", "0", ",", "255", ",", "0", ")", ",", "2", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "'%d %s'", "%", "(", "i", ",", "obj", ".", "classname", ")", ",", "(", "max", "(", "int", "(", "obj", ".", "xmin", ")", ",", "15", ")", ",", "\n", "max", "(", "int", "(", "obj", ".", "ymin", ")", ",", "15", ")", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "0.8", ",", "\n", "(", "255", ",", "0", ",", "0", ")", ",", "2", ")", "\n", "", "Image", ".", "fromarray", "(", "img", ")", ".", "save", "(", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'img_box2d.jpg'", ")", ")", "\n", "\n", "# Dump OBJ files for the colored point cloud ", "\n", "for", "num_point", "in", "[", "10000", ",", "20000", ",", "40000", ",", "80000", "]", ":", "\n", "            ", "sampled_pcrgb", "=", "pc_util", ".", "random_sampling", "(", "pc", ",", "num_point", ")", "\n", "pc_util", ".", "write_ply_rgb", "(", "sampled_pcrgb", "[", ":", ",", "0", ":", "3", "]", ",", "\n", "(", "sampled_pcrgb", "[", ":", ",", "3", ":", "]", "*", "256", ")", ".", "astype", "(", "np", ".", "int8", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'pcrgb_%dk.obj'", "%", "(", "num_point", "//", "1000", ")", ")", ")", "\n", "# Dump OBJ files for 3D bounding boxes", "\n", "# l,w,h correspond to dx,dy,dz", "\n", "# heading angle is from +X rotating towards -Y", "\n", "# (+X is degree, -Y is 90 degrees)", "\n", "", "oriented_boxes", "=", "[", "]", "\n", "for", "obj", "in", "objects", ":", "\n", "            ", "obb", "=", "np", ".", "zeros", "(", "(", "7", ")", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "obj", ".", "centroid", "\n", "# Some conversion to map with default setting of w,l,h", "\n", "# and angle in box dumping", "\n", "obb", "[", "3", ":", "6", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", "]", ")", "*", "2", "\n", "obb", "[", "6", "]", "=", "-", "1", "*", "obj", ".", "heading_angle", "\n", "print", "(", "'Object cls, heading, l, w, h:'", ",", "obj", ".", "classname", ",", "obj", ".", "heading_angle", ",", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", ")", "\n", "oriented_boxes", ".", "append", "(", "obb", ")", "\n", "", "if", "len", "(", "oriented_boxes", ")", ">", "0", ":", "\n", "            ", "oriented_boxes", "=", "np", ".", "vstack", "(", "tuple", "(", "oriented_boxes", ")", ")", "\n", "pc_util", ".", "write_oriented_bbox", "(", "oriented_boxes", ",", "\n", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'obbs.ply'", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'-'", "*", "30", ")", "\n", "continue", "\n", "\n", "# Draw 3D boxes on depth points", "\n", "", "box3d", "=", "[", "]", "\n", "ori3d", "=", "[", "]", "\n", "for", "obj", "in", "objects", ":", "\n", "            ", "corners_3d_image", ",", "corners_3d", "=", "sunrgbd_utils", ".", "compute_box_3d", "(", "obj", ",", "calib", ")", "\n", "ori_3d_image", ",", "ori_3d", "=", "sunrgbd_utils", ".", "compute_orientation_3d", "(", "obj", ",", "calib", ")", "\n", "print", "(", "'Corners 3D: '", ",", "corners_3d", ")", "\n", "box3d", ".", "append", "(", "corners_3d", ")", "\n", "ori3d", ".", "append", "(", "ori_3d", ")", "\n", "", "pc_box3d", "=", "np", ".", "concatenate", "(", "box3d", ",", "0", ")", "\n", "pc_ori3d", "=", "np", ".", "concatenate", "(", "ori3d", ",", "0", ")", "\n", "print", "(", "pc_box3d", ".", "shape", ")", "\n", "print", "(", "pc_ori3d", ".", "shape", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_box3d", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'box3d_corners.ply'", ")", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_ori3d", ",", "os", ".", "path", ".", "join", "(", "dump_dir", ",", "'box3d_ori.ply'", ")", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'Point clouds and bounding boxes saved to PLY files under %s'", "%", "(", "dump_dir", ")", ")", "\n", "print", "(", "'Type anything to continue to the next sample...'", ")", "\n", "input", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.extract_sunrgbd_data": [[171, 262], ["sunrgbd_data.sunrgbd_object", "int", "os.path.exists", "os.mkdir", "print", "sunrgbd_data.sunrgbd_object.get_label_objects", "sunrgbd_data.sunrgbd_object.get_depth", "pc_util.random_sampling", "numpy.savez_compressed", "numpy.save", "line.rstrip", "open", "numpy.zeros", "numpy.array", "object_list.append", "len", "numpy.zeros", "numpy.vstack", "os.path.join", "os.path.join", "numpy.zeros", "numpy.zeros().astype", "numpy.arange", "numpy.savez_compressed", "os.path.join", "len", "len", "numpy.zeros", "sunrgbd_utils.my_compute_box_3d", "sunrgbd_utils.extract_pc_in_box3d", "range", "numpy.minimum", "numpy.array", "numpy.expand_dims", "len", "print", "int", "int"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_label_objects", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_depth", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.my_compute_box_3d", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.extract_pc_in_box3d"], ["", "", "def", "extract_sunrgbd_data", "(", "idx_filename", ",", "split", ",", "output_folder", ",", "num_point", "=", "20000", ",", "\n", "type_whitelist", "=", "DEFAULT_TYPE_WHITELIST", ",", "\n", "save_votes", "=", "False", ",", "use_v1", "=", "False", ",", "skip_empty_scene", "=", "True", ")", ":", "\n", "    ", "\"\"\" Extract scene point clouds and \n    bounding boxes (centroids, box sizes, heading angles, semantic classes).\n    Dumped point clouds and boxes are in upright depth coord.\n\n    Args:\n        idx_filename: a TXT file where each line is an int number (index)\n        split: training or testing\n        save_votes: whether to compute and save Ground truth votes.\n        use_v1: use the SUN RGB-D V1 data\n        skip_empty_scene: if True, skip scenes that contain no object (no objet in whitelist)\n\n    Dumps:\n        <id>_pc.npz of (N,6) where N is for number of subsampled points and 6 is\n            for XYZ and RGB (in 0~1) in upright depth coord\n        <id>_bbox.npy of (K,8) where K is the number of objects, 8 is for\n            centroids (cx,cy,cz), dimension (l,w,h), heanding_angle and semantic_class\n        <id>_votes.npz of (N,10) with 0/1 indicating whether the point belongs to an object,\n            then three sets of GT votes for up to three objects. If the point is only in one\n            object's OBB, then the three GT votes are the same.\n    \"\"\"", "\n", "dataset", "=", "sunrgbd_object", "(", "'./sunrgbd_trainval'", ",", "split", ",", "use_v1", "=", "use_v1", ")", "\n", "data_idx_list", "=", "[", "int", "(", "line", ".", "rstrip", "(", ")", ")", "for", "line", "in", "open", "(", "idx_filename", ")", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "output_folder", ")", "\n", "\n", "", "for", "data_idx", "in", "data_idx_list", ":", "\n", "        ", "print", "(", "'------------- '", ",", "data_idx", ")", "\n", "objects", "=", "dataset", ".", "get_label_objects", "(", "data_idx", ")", "\n", "\n", "# Skip scenes with 0 object", "\n", "if", "skip_empty_scene", "and", "(", "len", "(", "objects", ")", "==", "0", "or", "len", "(", "[", "obj", "for", "obj", "in", "objects", "if", "obj", ".", "classname", "in", "type_whitelist", "]", ")", "==", "0", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "object_list", "=", "[", "]", "\n", "for", "obj", "in", "objects", ":", "\n", "            ", "if", "obj", ".", "classname", "not", "in", "type_whitelist", ":", "continue", "\n", "obb", "=", "np", ".", "zeros", "(", "(", "8", ")", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "obj", ".", "centroid", "\n", "# Note that compared with that in data_viz, we do not time 2 to l,w.h", "\n", "# neither do we flip the heading angle", "\n", "obb", "[", "3", ":", "6", "]", "=", "np", ".", "array", "(", "[", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", "]", ")", "\n", "obb", "[", "6", "]", "=", "obj", ".", "heading_angle", "\n", "obb", "[", "7", "]", "=", "sunrgbd_utils", ".", "type2class", "[", "obj", ".", "classname", "]", "\n", "object_list", ".", "append", "(", "obb", ")", "\n", "", "if", "len", "(", "object_list", ")", "==", "0", ":", "\n", "            ", "obbs", "=", "np", ".", "zeros", "(", "(", "0", ",", "8", ")", ")", "\n", "", "else", ":", "\n", "            ", "obbs", "=", "np", ".", "vstack", "(", "object_list", ")", "# (K,8)", "\n", "\n", "", "pc_upright_depth", "=", "dataset", ".", "get_depth", "(", "data_idx", ")", "\n", "pc_upright_depth_subsampled", "=", "pc_util", ".", "random_sampling", "(", "pc_upright_depth", ",", "num_point", ")", "\n", "\n", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'%06d_pc.npz'", "%", "(", "data_idx", ")", ")", ",", "\n", "pc", "=", "pc_upright_depth_subsampled", ")", "\n", "np", ".", "save", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'%06d_bbox.npy'", "%", "(", "data_idx", ")", ")", ",", "obbs", ")", "\n", "\n", "if", "save_votes", ":", "\n", "            ", "N", "=", "pc_upright_depth_subsampled", ".", "shape", "[", "0", "]", "\n", "point_votes", "=", "np", ".", "zeros", "(", "(", "N", ",", "10", ")", ")", "# 3 votes and 1 vote mask ", "\n", "point_vote_idx", "=", "np", ".", "zeros", "(", "(", "N", ")", ")", ".", "astype", "(", "np", ".", "int32", ")", "# in the range of [0,2]", "\n", "indices", "=", "np", ".", "arange", "(", "N", ")", "\n", "for", "obj", "in", "objects", ":", "\n", "                ", "if", "obj", ".", "classname", "not", "in", "type_whitelist", ":", "continue", "\n", "try", ":", "\n", "# Find all points in this object's OBB", "\n", "                    ", "box3d_pts_3d", "=", "sunrgbd_utils", ".", "my_compute_box_3d", "(", "obj", ".", "centroid", ",", "\n", "np", ".", "array", "(", "[", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", "]", ")", ",", "obj", ".", "heading_angle", ")", "\n", "pc_in_box3d", ",", "inds", "=", "sunrgbd_utils", ".", "extract_pc_in_box3d", "(", "pc_upright_depth_subsampled", ",", "box3d_pts_3d", ")", "\n", "# Assign first dimension to indicate it is in an object box", "\n", "point_votes", "[", "inds", ",", "0", "]", "=", "1", "\n", "# Add the votes (all 0 if the point is not in any object's OBB)", "\n", "votes", "=", "np", ".", "expand_dims", "(", "obj", ".", "centroid", ",", "0", ")", "-", "pc_in_box3d", "[", ":", ",", "0", ":", "3", "]", "\n", "sparse_inds", "=", "indices", "[", "inds", "]", "# turn dense True,False inds to sparse number-wise inds", "\n", "for", "i", "in", "range", "(", "len", "(", "sparse_inds", ")", ")", ":", "\n", "                        ", "j", "=", "sparse_inds", "[", "i", "]", "\n", "point_votes", "[", "j", ",", "int", "(", "point_vote_idx", "[", "j", "]", "*", "3", "+", "1", ")", ":", "int", "(", "(", "point_vote_idx", "[", "j", "]", "+", "1", ")", "*", "3", "+", "1", ")", "]", "=", "votes", "[", "i", ",", ":", "]", "\n", "# Populate votes with the fisrt vote", "\n", "if", "point_vote_idx", "[", "j", "]", "==", "0", ":", "\n", "                            ", "point_votes", "[", "j", ",", "4", ":", "7", "]", "=", "votes", "[", "i", ",", ":", "]", "\n", "point_votes", "[", "j", ",", "7", ":", "10", "]", "=", "votes", "[", "i", ",", ":", "]", "\n", "", "", "point_vote_idx", "[", "inds", "]", "=", "np", ".", "minimum", "(", "2", ",", "point_vote_idx", "[", "inds", "]", "+", "1", ")", "\n", "", "except", ":", "\n", "                    ", "print", "(", "'ERROR ----'", ",", "data_idx", ",", "obj", ".", "classname", ")", "\n", "", "", "np", ".", "savez_compressed", "(", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'%06d_votes.npz'", "%", "(", "data_idx", ")", ")", ",", "\n", "point_votes", "=", "point_votes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.get_box3d_dim_statistics": [[264, 305], ["sunrgbd_data.sunrgbd_object", "numpy.vstack", "sorted", "int", "print", "sunrgbd_data.sunrgbd_object.get_calibration", "sunrgbd_data.sunrgbd_object.get_label_objects", "range", "set", "range", "numpy.median", "print", "line.rstrip", "open", "len", "dimension_list.append", "type_list.append", "ry_list.append", "open", "pickle.dump", "pickle.dump", "pickle.dump", "len", "numpy.arctan2", "numpy.array", "box3d_list.append"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_calibration", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_data.sunrgbd_object.get_label_objects"], ["", "", "", "def", "get_box3d_dim_statistics", "(", "idx_filename", ",", "\n", "type_whitelist", "=", "DEFAULT_TYPE_WHITELIST", ",", "\n", "save_path", "=", "None", ")", ":", "\n", "    ", "\"\"\" Collect 3D bounding box statistics.\n    Used for computing mean box sizes. \"\"\"", "\n", "dataset", "=", "sunrgbd_object", "(", "'./sunrgbd_trainval'", ")", "\n", "dimension_list", "=", "[", "]", "\n", "type_list", "=", "[", "]", "\n", "ry_list", "=", "[", "]", "\n", "data_idx_list", "=", "[", "int", "(", "line", ".", "rstrip", "(", ")", ")", "for", "line", "in", "open", "(", "idx_filename", ")", "]", "\n", "for", "data_idx", "in", "data_idx_list", ":", "\n", "        ", "print", "(", "'------------- '", ",", "data_idx", ")", "\n", "calib", "=", "dataset", ".", "get_calibration", "(", "data_idx", ")", "# 3 by 4 matrix", "\n", "objects", "=", "dataset", ".", "get_label_objects", "(", "data_idx", ")", "\n", "for", "obj_idx", "in", "range", "(", "len", "(", "objects", ")", ")", ":", "\n", "            ", "obj", "=", "objects", "[", "obj_idx", "]", "\n", "if", "obj", ".", "classname", "not", "in", "type_whitelist", ":", "continue", "\n", "heading_angle", "=", "-", "1", "*", "np", ".", "arctan2", "(", "obj", ".", "orientation", "[", "1", "]", ",", "obj", ".", "orientation", "[", "0", "]", ")", "\n", "dimension_list", ".", "append", "(", "np", ".", "array", "(", "[", "obj", ".", "l", ",", "obj", ".", "w", ",", "obj", ".", "h", "]", ")", ")", "\n", "type_list", ".", "append", "(", "obj", ".", "classname", ")", "\n", "ry_list", ".", "append", "(", "heading_angle", ")", "\n", "\n", "", "", "import", "cPickle", "as", "pickle", "\n", "if", "save_path", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "save_path", ",", "'wb'", ")", "as", "fp", ":", "\n", "            ", "pickle", ".", "dump", "(", "type_list", ",", "fp", ")", "\n", "pickle", ".", "dump", "(", "dimension_list", ",", "fp", ")", "\n", "pickle", ".", "dump", "(", "ry_list", ",", "fp", ")", "\n", "\n", "# Get average box size for different catgories", "\n", "", "", "box3d_pts", "=", "np", ".", "vstack", "(", "dimension_list", ")", "\n", "for", "class_type", "in", "sorted", "(", "set", "(", "type_list", ")", ")", ":", "\n", "        ", "cnt", "=", "0", "\n", "box3d_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dimension_list", ")", ")", ":", "\n", "            ", "if", "type_list", "[", "i", "]", "==", "class_type", ":", "\n", "                ", "cnt", "+=", "1", "\n", "box3d_list", ".", "append", "(", "dimension_list", "[", "i", "]", ")", "\n", "", "", "median_box3d", "=", "np", ".", "median", "(", "box3d_list", ",", "0", ")", "\n", "print", "(", "\"\\'%s\\': np.array([%f,%f,%f]),\"", "%", "(", "class_type", ",", "median_box3d", "[", "0", "]", "*", "2", ",", "median_box3d", "[", "1", "]", "*", "2", ",", "median_box3d", "[", "2", "]", "*", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.__init__": [[15, 37], ["numpy.zeros", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "10", "\n", "self", ".", "num_heading_bin", "=", "12", "\n", "self", ".", "num_size_cluster", "=", "10", "\n", "\n", "self", ".", "type2class", "=", "{", "'bed'", ":", "0", ",", "'table'", ":", "1", ",", "'sofa'", ":", "2", ",", "'chair'", ":", "3", ",", "'toilet'", ":", "4", ",", "'desk'", ":", "5", ",", "'dresser'", ":", "6", ",", "'night_stand'", ":", "7", ",", "'bookshelf'", ":", "8", ",", "'bathtub'", ":", "9", "}", "\n", "self", ".", "class2type", "=", "{", "self", ".", "type2class", "[", "t", "]", ":", "t", "for", "t", "in", "self", ".", "type2class", "}", "\n", "self", ".", "type2onehotclass", "=", "{", "'bed'", ":", "0", ",", "'table'", ":", "1", ",", "'sofa'", ":", "2", ",", "'chair'", ":", "3", ",", "'toilet'", ":", "4", ",", "'desk'", ":", "5", ",", "'dresser'", ":", "6", ",", "'night_stand'", ":", "7", ",", "'bookshelf'", ":", "8", ",", "'bathtub'", ":", "9", "}", "\n", "self", ".", "type_mean_size", "=", "{", "'bathtub'", ":", "np", ".", "array", "(", "[", "0.765840", ",", "1.398258", ",", "0.472728", "]", ")", ",", "\n", "'bed'", ":", "np", ".", "array", "(", "[", "2.114256", ",", "1.620300", ",", "0.927272", "]", ")", ",", "\n", "'bookshelf'", ":", "np", ".", "array", "(", "[", "0.404671", ",", "1.071108", ",", "1.688889", "]", ")", ",", "\n", "'chair'", ":", "np", ".", "array", "(", "[", "0.591958", ",", "0.552978", ",", "0.827272", "]", ")", ",", "\n", "'desk'", ":", "np", ".", "array", "(", "[", "0.695190", ",", "1.346299", ",", "0.736364", "]", ")", ",", "\n", "'dresser'", ":", "np", ".", "array", "(", "[", "0.528526", ",", "1.002642", ",", "1.172878", "]", ")", ",", "\n", "'night_stand'", ":", "np", ".", "array", "(", "[", "0.500618", ",", "0.632163", ",", "0.683424", "]", ")", ",", "\n", "'sofa'", ":", "np", ".", "array", "(", "[", "0.923508", ",", "1.867419", ",", "0.845495", "]", ")", ",", "\n", "'table'", ":", "np", ".", "array", "(", "[", "0.791118", ",", "1.279516", ",", "0.718182", "]", ")", ",", "\n", "'toilet'", ":", "np", ".", "array", "(", "[", "0.699104", ",", "0.454178", ",", "0.756250", "]", ")", "}", "\n", "\n", "self", ".", "mean_size_arr", "=", "np", ".", "zeros", "(", "(", "self", ".", "num_size_cluster", ",", "3", ")", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_size_cluster", ")", ":", "\n", "            ", "self", ".", "mean_size_arr", "[", "i", ",", ":", "]", "=", "self", ".", "type_mean_size", "[", "self", ".", "class2type", "[", "i", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.size2class": [[38, 43], ["None"], "methods", ["None"], ["", "", "def", "size2class", "(", "self", ",", "size", ",", "type_name", ")", ":", "\n", "        ", "''' Convert 3D box size (l,w,h) to size class and size residual '''", "\n", "size_class", "=", "self", ".", "type2class", "[", "type_name", "]", "\n", "size_residual", "=", "size", "-", "self", ".", "type_mean_size", "[", "type_name", "]", "\n", "return", "size_class", ",", "size_residual", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size": [[44, 48], ["None"], "methods", ["None"], ["", "def", "class2size", "(", "self", ",", "pred_cls", ",", "residual", ")", ":", "\n", "        ", "''' Inverse function to size2class '''", "\n", "mean_size", "=", "self", ".", "type_mean_size", "[", "self", ".", "class2type", "[", "pred_cls", "]", "]", "\n", "return", "mean_size", "+", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.angle2class": [[49, 66], ["int", "float"], "methods", ["None"], ["", "def", "angle2class", "(", "self", ",", "angle", ")", ":", "\n", "        ", "''' Convert continuous angle to discrete class\n            [optinal] also small regression number from  \n            class center angle to current angle.\n           \n            angle is from 0-2pi (or -pi~pi), class center at 0, 1*(2pi/N), 2*(2pi/N) ...  (N-1)*(2pi/N)\n            return is class of int32 of 0,1,...,N-1 and a number such that\n                class*(2pi/N) + number = angle\n        '''", "\n", "num_class", "=", "self", ".", "num_heading_bin", "\n", "angle", "=", "angle", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "assert", "(", "angle", ">=", "0", "and", "angle", "<=", "2", "*", "np", ".", "pi", ")", "\n", "angle_per_class", "=", "2", "*", "np", ".", "pi", "/", "float", "(", "num_class", ")", "\n", "shifted_angle", "=", "(", "angle", "+", "angle_per_class", "/", "2", ")", "%", "(", "2", "*", "np", ".", "pi", ")", "\n", "class_id", "=", "int", "(", "shifted_angle", "/", "angle_per_class", ")", "\n", "residual_angle", "=", "shifted_angle", "-", "(", "class_id", "*", "angle_per_class", "+", "angle_per_class", "/", "2", ")", "\n", "return", "class_id", ",", "residual_angle", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle": [[67, 76], ["float"], "methods", ["None"], ["", "def", "class2angle", "(", "self", ",", "pred_cls", ",", "residual", ",", "to_label_format", "=", "True", ")", ":", "\n", "        ", "''' Inverse function to angle2class '''", "\n", "num_class", "=", "self", ".", "num_heading_bin", "\n", "angle_per_class", "=", "2", "*", "np", ".", "pi", "/", "float", "(", "num_class", ")", "\n", "angle_center", "=", "pred_cls", "*", "angle_per_class", "\n", "angle", "=", "angle_center", "+", "residual", "\n", "if", "to_label_format", "and", "angle", ">", "np", ".", "pi", ":", "\n", "            ", "angle", "=", "angle", "-", "2", "*", "np", ".", "pi", "\n", "", "return", "angle", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.param2obb": [[77, 85], ["model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "model_util_sunrgbd.SunrgbdDatasetConfig.class2size", "numpy.zeros", "int"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size"], ["", "def", "param2obb", "(", "self", ",", "center", ",", "heading_class", ",", "heading_residual", ",", "size_class", ",", "size_residual", ")", ":", "\n", "        ", "heading_angle", "=", "self", ".", "class2angle", "(", "heading_class", ",", "heading_residual", ")", "\n", "box_size", "=", "self", ".", "class2size", "(", "int", "(", "size_class", ")", ",", "size_residual", ")", "\n", "obb", "=", "np", ".", "zeros", "(", "(", "7", ",", ")", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "center", "\n", "obb", "[", "3", ":", "6", "]", "=", "box_size", "\n", "obb", "[", "6", "]", "=", "heading_angle", "*", "-", "1", "\n", "return", "obb", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.__init__": [[41, 64], ["os.path.join", "sorted", "os.path.join", "os.path.join", "list", "set", "int", "len", "os.path.basename", "os.listdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "split_set", "=", "'train'", ",", "num_points", "=", "20000", ",", "\n", "use_color", "=", "False", ",", "use_height", "=", "False", ",", "use_v1", "=", "False", ",", "\n", "augment", "=", "False", ",", "scan_idx_list", "=", "None", ")", ":", "\n", "\n", "        ", "assert", "(", "num_points", "<=", "50000", ")", "\n", "self", ".", "use_v1", "=", "use_v1", "\n", "if", "use_v1", ":", "\n", "            ", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "\n", "'sunrgbd/sunrgbd_pc_bbox_votes_50k_v1_%s'", "%", "(", "split_set", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "\n", "'sunrgbd/sunrgbd_pc_bbox_votes_50k_v2_%s'", "%", "(", "split_set", ")", ")", "\n", "\n", "", "self", ".", "raw_data_path", "=", "os", ".", "path", ".", "join", "(", "ROOT_DIR", ",", "'sunrgbd/sunrgbd_trainval'", ")", "\n", "self", ".", "scan_names", "=", "sorted", "(", "list", "(", "set", "(", "[", "os", ".", "path", ".", "basename", "(", "x", ")", "[", "0", ":", "6", "]", "for", "x", "in", "os", ".", "listdir", "(", "self", ".", "data_path", ")", "]", ")", ")", ")", "\n", "if", "scan_idx_list", "is", "not", "None", ":", "\n", "            ", "self", ".", "scan_names", "=", "[", "self", ".", "scan_names", "[", "i", "]", "for", "i", "in", "scan_idx_list", "]", "\n", "", "self", ".", "scan_names", "=", "self", ".", "scan_names", "[", ":", "int", "(", "len", "(", "self", ".", "scan_names", ")", ")", "]", "\n", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "augment", "=", "augment", "\n", "self", ".", "use_color", "=", "use_color", "\n", "self", ".", "use_height", "=", "use_height", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.__len__": [[65, 67], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "scan_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset.__getitem__": [[68, 212], ["numpy.load", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "range", "pc_util.random_sampling", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros.astype", "numpy.zeros", "numpy.zeros.astype", "target_bboxes_mask.astype", "point_votes.astype", "point_votes_mask.astype", "numpy.array().astype", "numpy.load", "numpy.load", "numpy.percentile", "numpy.concatenate", "sunrgbd_utils.rotz", "numpy.zeros_like", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.dot", "numpy.expand_dims", "DC.angle2class", "DC.size2class", "sunrgbd_utils.my_compute_box_3d", "numpy.min", "numpy.min", "numpy.min", "numpy.max", "numpy.max", "numpy.max", "numpy.array", "numpy.concatenate.astype", "numpy.zeros.astype", "numpy.concatenate.astype", "os.path.join", "numpy.random.random", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.expand_dims", "numpy.clip", "numpy.expand_dims", "numpy.tile", "numpy.array", "os.path.join", "os.path.join", "numpy.expand_dims", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.random_sampling", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.rotz", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.angle2class", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.size2class", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.my_compute_box_3d", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Returns a dict with following keys:\n            point_clouds: (N,3+C)\n            center_label: (MAX_NUM_OBJ,3) for GT box center XYZ\n            heading_class_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_HEADING_BIN-1\n            heading_residual_label: (MAX_NUM_OBJ,)\n            size_classe_label: (MAX_NUM_OBJ,) with int values in 0,...,NUM_SIZE_CLUSTER\n            size_residual_label: (MAX_NUM_OBJ,3)\n            sem_cls_label: (MAX_NUM_OBJ,) semantic class index\n            box_label_mask: (MAX_NUM_OBJ) as 0/1 with 1 indicating a unique box\n            vote_label: (N,9) with votes XYZ (3 votes: X1Y1Z1, X2Y2Z2, X3Y3Z3)\n                if there is only one vote than X1==X2==X3 etc.\n            vote_label_mask: (N,) with 0/1 with 1 indicating the point\n                is in one of the object's OBB.\n            scan_idx: int scan index in scan_names list\n            max_gt_bboxes: unused\n        \"\"\"", "\n", "scan_name", "=", "self", ".", "scan_names", "[", "idx", "]", "\n", "point_cloud", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_pc.npz'", ")", "[", "'pc'", "]", "# Nx6", "\n", "bboxes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_bbox.npy'", ")", "# K,8", "\n", "point_votes", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "data_path", ",", "scan_name", ")", "+", "'_votes.npz'", ")", "[", "'point_votes'", "]", "# Nx10", "\n", "\n", "point_cloud", "=", "point_cloud", "[", ":", ",", "0", ":", "6", "]", "\n", "point_cloud", "[", ":", ",", "3", ":", "]", "=", "(", "point_cloud", "[", ":", ",", "3", ":", "]", "-", "MEAN_COLOR_RGB", ")", "\n", "\n", "if", "self", ".", "use_height", ":", "\n", "            ", "floor_height", "=", "np", ".", "percentile", "(", "point_cloud", "[", ":", ",", "2", "]", ",", "0.99", ")", "\n", "height", "=", "point_cloud", "[", ":", ",", "2", "]", "-", "floor_height", "\n", "point_cloud", "=", "np", ".", "concatenate", "(", "[", "point_cloud", ",", "np", ".", "expand_dims", "(", "height", ",", "1", ")", "]", ",", "1", ")", "# (N,4) or (N,7)", "\n", "\n", "# ------------------------------- DATA AUGMENTATION ------------------------------", "\n", "", "if", "self", ".", "augment", ":", "\n", "            ", "if", "np", ".", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "# Flipping along the YZ plane", "\n", "                ", "point_cloud", "[", ":", ",", "0", "]", "=", "-", "1", "*", "point_cloud", "[", ":", ",", "0", "]", "\n", "bboxes", "[", ":", ",", "0", "]", "=", "-", "1", "*", "bboxes", "[", ":", ",", "0", "]", "\n", "bboxes", "[", ":", ",", "6", "]", "=", "np", ".", "pi", "-", "bboxes", "[", ":", ",", "6", "]", "\n", "point_votes", "[", ":", ",", "[", "1", ",", "4", ",", "7", "]", "]", "=", "-", "1", "*", "point_votes", "[", ":", ",", "[", "1", ",", "4", ",", "7", "]", "]", "\n", "\n", "# Rotation along up-axis/Z-axis", "\n", "", "rot_angle", "=", "(", "np", ".", "random", ".", "random", "(", ")", "*", "np", ".", "pi", "/", "3", ")", "-", "np", ".", "pi", "/", "6", "# -30 ~ +30 degree", "\n", "rot_mat", "=", "sunrgbd_utils", ".", "rotz", "(", "rot_angle", ")", "\n", "\n", "point_votes_end", "=", "np", ".", "zeros_like", "(", "point_votes", ")", "\n", "point_votes_end", "[", ":", ",", "1", ":", "4", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "+", "point_votes", "[", ":", ",", "1", ":", "4", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "point_votes_end", "[", ":", ",", "4", ":", "7", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "+", "point_votes", "[", ":", ",", "4", ":", "7", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "point_votes_end", "[", ":", ",", "7", ":", "10", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "+", "point_votes", "[", ":", ",", "7", ":", "10", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "point_cloud", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "bboxes", "[", ":", ",", "0", ":", "3", "]", "=", "np", ".", "dot", "(", "bboxes", "[", ":", ",", "0", ":", "3", "]", ",", "np", ".", "transpose", "(", "rot_mat", ")", ")", "\n", "bboxes", "[", ":", ",", "6", "]", "-=", "rot_angle", "\n", "point_votes", "[", ":", ",", "1", ":", "4", "]", "=", "point_votes_end", "[", ":", ",", "1", ":", "4", "]", "-", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "point_votes", "[", ":", ",", "4", ":", "7", "]", "=", "point_votes_end", "[", ":", ",", "4", ":", "7", "]", "-", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "point_votes", "[", ":", ",", "7", ":", "10", "]", "=", "point_votes_end", "[", ":", ",", "7", ":", "10", "]", "-", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "\n", "\n", "# Augment RGB color", "\n", "if", "self", ".", "use_color", ":", "\n", "                ", "rgb_color", "=", "point_cloud", "[", ":", ",", "3", ":", "6", "]", "+", "MEAN_COLOR_RGB", "\n", "rgb_color", "*=", "(", "1", "+", "0.4", "*", "np", ".", "random", ".", "random", "(", "3", ")", "-", "0.2", ")", "# brightness change for each channel", "\n", "rgb_color", "+=", "(", "0.1", "*", "np", ".", "random", ".", "random", "(", "3", ")", "-", "0.05", ")", "# color shift for each channel", "\n", "rgb_color", "+=", "np", ".", "expand_dims", "(", "(", "0.05", "*", "np", ".", "random", ".", "random", "(", "point_cloud", ".", "shape", "[", "0", "]", ")", "-", "0.025", ")", ",", "-", "1", ")", "# jittering on each pixel", "\n", "rgb_color", "=", "np", ".", "clip", "(", "rgb_color", ",", "0", ",", "1", ")", "\n", "# randomly drop out 30% of the points' colors", "\n", "rgb_color", "*=", "np", ".", "expand_dims", "(", "np", ".", "random", ".", "random", "(", "point_cloud", ".", "shape", "[", "0", "]", ")", ">", "0.3", ",", "-", "1", ")", "\n", "point_cloud", "[", ":", ",", "3", ":", "6", "]", "=", "rgb_color", "-", "MEAN_COLOR_RGB", "\n", "\n", "# Augment point cloud scale: 0.85x-1.15x", "\n", "", "scale_ratio", "=", "np", ".", "random", ".", "random", "(", ")", "*", "0.3", "+", "0.85", "\n", "scale_ratio", "=", "np", ".", "expand_dims", "(", "np", ".", "tile", "(", "scale_ratio", ",", "3", ")", ",", "0", ")", "\n", "point_cloud", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "bboxes", "[", ":", ",", "0", ":", "3", "]", "*=", "scale_ratio", "\n", "bboxes", "[", ":", ",", "3", ":", "6", "]", "*=", "scale_ratio", "\n", "point_votes", "[", ":", ",", "1", ":", "4", "]", "*=", "scale_ratio", "\n", "point_votes", "[", ":", ",", "4", ":", "7", "]", "*=", "scale_ratio", "\n", "point_votes", "[", ":", ",", "7", ":", "10", "]", "*=", "scale_ratio", "\n", "if", "self", ".", "use_height", ":", "\n", "                ", "point_cloud", "[", ":", ",", "-", "1", "]", "*=", "scale_ratio", "[", "0", ",", "0", "]", "\n", "\n", "# ------------------------------- LABELS ------------------------------", "\n", "", "", "box3d_centers", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "box3d_sizes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "angle_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "angle_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_classes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", ")", ")", "\n", "size_residuals", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "3", ")", ")", "\n", "label_mask", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "label_mask", "[", "0", ":", "bboxes", ".", "shape", "[", "0", "]", "]", "=", "1", "\n", "max_bboxes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "8", ")", ")", "\n", "max_bboxes", "[", "0", ":", "bboxes", ".", "shape", "[", "0", "]", ",", ":", "]", "=", "bboxes", "\n", "\n", "for", "i", "in", "range", "(", "bboxes", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "bbox", "=", "bboxes", "[", "i", "]", "\n", "semantic_class", "=", "bbox", "[", "7", "]", "\n", "box3d_center", "=", "bbox", "[", "0", ":", "3", "]", "\n", "angle_class", ",", "angle_residual", "=", "DC", ".", "angle2class", "(", "bbox", "[", "6", "]", ")", "\n", "# NOTE: The mean size stored in size2class is of full length of box edges,", "\n", "# while in sunrgbd_data.py data dumping we dumped *half* length l,w,h.. so have to time it by 2 here ", "\n", "box3d_size", "=", "bbox", "[", "3", ":", "6", "]", "*", "2", "\n", "size_class", ",", "size_residual", "=", "DC", ".", "size2class", "(", "box3d_size", ",", "DC", ".", "class2type", "[", "semantic_class", "]", ")", "\n", "box3d_centers", "[", "i", ",", ":", "]", "=", "box3d_center", "\n", "angle_classes", "[", "i", "]", "=", "angle_class", "\n", "angle_residuals", "[", "i", "]", "=", "angle_residual", "\n", "size_classes", "[", "i", "]", "=", "size_class", "\n", "size_residuals", "[", "i", "]", "=", "size_residual", "\n", "box3d_sizes", "[", "i", ",", ":", "]", "=", "box3d_size", "\n", "\n", "", "target_bboxes_mask", "=", "label_mask", "\n", "target_bboxes", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ",", "6", ")", ")", "\n", "for", "i", "in", "range", "(", "bboxes", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "bbox", "=", "bboxes", "[", "i", "]", "\n", "corners_3d", "=", "sunrgbd_utils", ".", "my_compute_box_3d", "(", "bbox", "[", "0", ":", "3", "]", ",", "bbox", "[", "3", ":", "6", "]", ",", "bbox", "[", "6", "]", ")", "\n", "# compute axis aligned box", "\n", "xmin", "=", "np", ".", "min", "(", "corners_3d", "[", ":", ",", "0", "]", ")", "\n", "ymin", "=", "np", ".", "min", "(", "corners_3d", "[", ":", ",", "1", "]", ")", "\n", "zmin", "=", "np", ".", "min", "(", "corners_3d", "[", ":", ",", "2", "]", ")", "\n", "xmax", "=", "np", ".", "max", "(", "corners_3d", "[", ":", ",", "0", "]", ")", "\n", "ymax", "=", "np", ".", "max", "(", "corners_3d", "[", ":", ",", "1", "]", ")", "\n", "zmax", "=", "np", ".", "max", "(", "corners_3d", "[", ":", ",", "2", "]", ")", "\n", "target_bbox", "=", "np", ".", "array", "(", "[", "(", "xmin", "+", "xmax", ")", "/", "2", ",", "(", "ymin", "+", "ymax", ")", "/", "2", ",", "(", "zmin", "+", "zmax", ")", "/", "2", ",", "xmax", "-", "xmin", ",", "ymax", "-", "ymin", ",", "zmax", "-", "zmin", "]", ")", "\n", "target_bboxes", "[", "i", ",", ":", "]", "=", "target_bbox", "\n", "\n", "", "point_cloud", ",", "choices", "=", "pc_util", ".", "random_sampling", "(", "point_cloud", ",", "self", ".", "num_points", ",", "return_choices", "=", "True", ")", "\n", "point_votes_mask", "=", "point_votes", "[", "choices", ",", "0", "]", "\n", "point_votes", "=", "point_votes", "[", "choices", ",", "1", ":", "]", "\n", "\n", "ret_dict", "=", "{", "}", "\n", "ret_dict", "[", "'point_clouds'", "]", "=", "point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", ":", "3", "]", "\n", "ret_dict", "[", "'center_label'", "]", "=", "target_bboxes", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", "0", ":", "3", "]", "\n", "ret_dict", "[", "'heading_class_label'", "]", "=", "angle_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'heading_residual_label'", "]", "=", "angle_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'size_class_label'", "]", "=", "size_classes", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'size_residual_label'", "]", "=", "size_residuals", ".", "astype", "(", "np", ".", "float32", ")", "\n", "target_bboxes_semcls", "=", "np", ".", "zeros", "(", "(", "MAX_NUM_OBJ", ")", ")", "\n", "target_bboxes_semcls", "[", "0", ":", "bboxes", ".", "shape", "[", "0", "]", "]", "=", "bboxes", "[", ":", ",", "-", "1", "]", "# from 0 to 9", "\n", "ret_dict", "[", "'sem_cls_label'", "]", "=", "target_bboxes_semcls", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'box_label_mask'", "]", "=", "target_bboxes_mask", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label'", "]", "=", "point_votes", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ret_dict", "[", "'vote_label_mask'", "]", "=", "point_votes_mask", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'scan_idx'", "]", "=", "np", ".", "array", "(", "idx", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "ret_dict", "[", "'max_gt_bboxes'", "]", "=", "max_bboxes", "\n", "ret_dict", "[", "'pcl_color'", "]", "=", "point_cloud", ".", "astype", "(", "np", ".", "float32", ")", "[", ":", ",", "3", ":", "6", "]", "\n", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_detection_dataset.viz_votes": [[214, 227], ["pc_util.write_ply", "pc_util.write_ply", "pc_util.write_ply", "pc_util.write_ply"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply"], ["", "", "def", "viz_votes", "(", "pc", ",", "point_votes", ",", "point_votes_mask", ")", ":", "\n", "    ", "\"\"\" Visualize point votes and point votes mask labels\n    pc: (N,3 or 6), point_votes: (N,9), point_votes_mask: (N,)\n    \"\"\"", "\n", "inds", "=", "(", "point_votes_mask", "==", "1", ")", "\n", "pc_obj", "=", "pc", "[", "inds", ",", "0", ":", "3", "]", "\n", "pc_obj_voted1", "=", "pc_obj", "+", "point_votes", "[", "inds", ",", "0", ":", "3", "]", "\n", "pc_obj_voted2", "=", "pc_obj", "+", "point_votes", "[", "inds", ",", "3", ":", "6", "]", "\n", "pc_obj_voted3", "=", "pc_obj", "+", "point_votes", "[", "inds", ",", "6", ":", "9", "]", "\n", "pc_util", ".", "write_ply", "(", "pc_obj", ",", "'pc_obj.ply'", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_obj_voted1", ",", "'pc_obj_voted1.ply'", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_obj_voted2", ",", "'pc_obj_voted2.ply'", ")", "\n", "pc_util", ".", "write_ply", "(", "pc_obj_voted3", ",", "'pc_obj_voted3.ply'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_detection_dataset.viz_obb": [[228, 253], ["range", "pc_util.write_oriented_bbox", "pc_util.write_ply", "numpy.zeros", "DC.class2angle", "DC.class2size", "print", "oriented_boxes.append"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_oriented_bbox", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.utils.pc_util.write_ply", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2angle", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.model_util_sunrgbd.SunrgbdDatasetConfig.class2size"], ["", "def", "viz_obb", "(", "pc", ",", "label", ",", "mask", ",", "angle_classes", ",", "angle_residuals", ",", "\n", "size_classes", ",", "size_residuals", ")", ":", "\n", "    ", "\"\"\" Visualize oriented bounding box ground truth\n    pc: (N,3)\n    label: (K,3)  K == MAX_NUM_OBJ\n    mask: (K,)\n    angle_classes: (K,)\n    angle_residuals: (K,)\n    size_classes: (K,)\n    size_residuals: (K,3)\n    \"\"\"", "\n", "oriented_boxes", "=", "[", "]", "\n", "K", "=", "label", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "        ", "if", "mask", "[", "i", "]", "==", "0", ":", "continue", "\n", "obb", "=", "np", ".", "zeros", "(", "7", ")", "\n", "obb", "[", "0", ":", "3", "]", "=", "label", "[", "i", ",", "0", ":", "3", "]", "\n", "heading_angle", "=", "DC", ".", "class2angle", "(", "angle_classes", "[", "i", "]", ",", "angle_residuals", "[", "i", "]", ")", "\n", "box_size", "=", "DC", ".", "class2size", "(", "size_classes", "[", "i", "]", ",", "size_residuals", "[", "i", "]", ")", "\n", "obb", "[", "3", ":", "6", "]", "=", "box_size", "\n", "obb", "[", "6", "]", "=", "-", "1", "*", "heading_angle", "\n", "print", "(", "obb", ")", "\n", "oriented_boxes", ".", "append", "(", "obb", ")", "\n", "", "pc_util", ".", "write_oriented_bbox", "(", "oriented_boxes", ",", "'gt_obbs.ply'", ")", "\n", "pc_util", ".", "write_ply", "(", "label", "[", "mask", "==", "1", ",", ":", "]", ",", "'gt_centroids.ply'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_detection_dataset.get_sem_cls_statistics": [[254, 270], ["sunrgbd_detection_dataset.SunrgbdDetectionVotesDataset", "range", "print", "len", "print"], "function", ["None"], ["", "def", "get_sem_cls_statistics", "(", ")", ":", "\n", "    ", "\"\"\" Compute number of objects for each semantic class \"\"\"", "\n", "d", "=", "SunrgbdDetectionVotesDataset", "(", "use_height", "=", "True", ",", "use_color", "=", "True", ",", "use_v1", "=", "True", ",", "augment", "=", "True", ")", "\n", "sem_cls_cnt", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "d", ")", ")", ":", "\n", "        ", "if", "i", "%", "10", "==", "0", ":", "print", "(", "i", ")", "\n", "sample", "=", "d", "[", "i", "]", "\n", "pc", "=", "sample", "[", "'point_clouds'", "]", "\n", "sem_cls", "=", "sample", "[", "'sem_cls_label'", "]", "\n", "mask", "=", "sample", "[", "'box_label_mask'", "]", "\n", "for", "j", "in", "sem_cls", ":", "\n", "            ", "if", "mask", "[", "j", "]", "==", "0", ":", "continue", "\n", "if", "sem_cls", "[", "j", "]", "not", "in", "sem_cls_cnt", ":", "\n", "                ", "sem_cls_cnt", "[", "sem_cls", "[", "j", "]", "]", "=", "0", "\n", "", "sem_cls_cnt", "[", "sem_cls", "[", "j", "]", "]", "+=", "1", "\n", "", "", "print", "(", "sem_cls_cnt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNObject3d.__init__": [[41, 59], ["line.split", "numpy.array", "numpy.array", "numpy.array", "numpy.zeros", "float", "numpy.arctan2"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "line", ")", ":", "\n", "        ", "data", "=", "line", ".", "split", "(", "' '", ")", "\n", "data", "[", "1", ":", "]", "=", "[", "float", "(", "x", ")", "for", "x", "in", "data", "[", "1", ":", "]", "]", "\n", "self", ".", "classname", "=", "data", "[", "0", "]", "\n", "self", ".", "xmin", "=", "data", "[", "1", "]", "\n", "self", ".", "ymin", "=", "data", "[", "2", "]", "\n", "self", ".", "xmax", "=", "data", "[", "1", "]", "+", "data", "[", "3", "]", "\n", "self", ".", "ymax", "=", "data", "[", "2", "]", "+", "data", "[", "4", "]", "\n", "self", ".", "box2d", "=", "np", ".", "array", "(", "[", "self", ".", "xmin", ",", "self", ".", "ymin", ",", "self", ".", "xmax", ",", "self", ".", "ymax", "]", ")", "\n", "self", ".", "centroid", "=", "np", ".", "array", "(", "[", "data", "[", "5", "]", ",", "data", "[", "6", "]", ",", "data", "[", "7", "]", "]", ")", "\n", "self", ".", "unused_dimension", "=", "np", ".", "array", "(", "[", "data", "[", "8", "]", ",", "data", "[", "9", "]", ",", "data", "[", "10", "]", "]", ")", "\n", "self", ".", "w", "=", "data", "[", "8", "]", "\n", "self", ".", "l", "=", "data", "[", "9", "]", "\n", "self", ".", "h", "=", "data", "[", "10", "]", "\n", "self", ".", "orientation", "=", "np", ".", "zeros", "(", "(", "3", ",", ")", ")", "\n", "self", ".", "orientation", "[", "0", "]", "=", "data", "[", "11", "]", "\n", "self", ".", "orientation", "[", "1", "]", "=", "data", "[", "12", "]", "\n", "self", ".", "heading_angle", "=", "-", "1", "*", "np", ".", "arctan2", "(", "self", ".", "orientation", "[", "1", "]", ",", "self", ".", "orientation", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.__init__": [[89, 99], ["numpy.array", "numpy.reshape", "numpy.array", "numpy.reshape", "line.rstrip", "open", "float", "float", "lines[].split", "lines[].split"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "calib_filepath", ")", ":", "\n", "        ", "lines", "=", "[", "line", ".", "rstrip", "(", ")", "for", "line", "in", "open", "(", "calib_filepath", ")", "]", "\n", "Rtilt", "=", "np", ".", "array", "(", "[", "float", "(", "x", ")", "for", "x", "in", "lines", "[", "0", "]", ".", "split", "(", "' '", ")", "]", ")", "\n", "self", ".", "Rtilt", "=", "np", ".", "reshape", "(", "Rtilt", ",", "(", "3", ",", "3", ")", ",", "order", "=", "'F'", ")", "\n", "K", "=", "np", ".", "array", "(", "[", "float", "(", "x", ")", "for", "x", "in", "lines", "[", "1", "]", ".", "split", "(", "' '", ")", "]", ")", "\n", "self", ".", "K", "=", "np", ".", "reshape", "(", "K", ",", "(", "3", ",", "3", ")", ",", "order", "=", "'F'", ")", "\n", "self", ".", "f_u", "=", "self", ".", "K", "[", "0", ",", "0", "]", "\n", "self", ".", "f_v", "=", "self", ".", "K", "[", "1", ",", "1", "]", "\n", "self", ".", "c_u", "=", "self", ".", "K", "[", "0", ",", "2", "]", "\n", "self", ".", "c_v", "=", "self", ".", "K", "[", "1", ",", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_camera": [[100, 107], ["numpy.dot", "sunrgbd_utils.flip_axis_to_camera", "numpy.transpose", "numpy.transpose", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.flip_axis_to_camera"], ["", "def", "project_upright_depth_to_camera", "(", "self", ",", "pc", ")", ":", "\n", "        ", "''' project point cloud from depth coord to camera coordinate\n            Input: (N,3) Output: (N,3)\n        '''", "\n", "# Project upright depth to depth coordinate", "\n", "pc2", "=", "np", ".", "dot", "(", "np", ".", "transpose", "(", "self", ".", "Rtilt", ")", ",", "np", ".", "transpose", "(", "pc", "[", ":", ",", "0", ":", "3", "]", ")", ")", "# (3,n)", "\n", "return", "flip_axis_to_camera", "(", "np", ".", "transpose", "(", "pc2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_image": [[108, 115], ["sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_camera", "numpy.dot", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_camera"], ["", "def", "project_upright_depth_to_image", "(", "self", ",", "pc", ")", ":", "\n", "        ", "''' Input: (N,3) Output: (N,2) UV and (N,) depth '''", "\n", "pc2", "=", "self", ".", "project_upright_depth_to_camera", "(", "pc", ")", "\n", "uv", "=", "np", ".", "dot", "(", "pc2", ",", "np", ".", "transpose", "(", "self", ".", "K", ")", ")", "# (n,3)", "\n", "uv", "[", ":", ",", "0", "]", "/=", "uv", "[", ":", ",", "2", "]", "\n", "uv", "[", ":", ",", "1", "]", "/=", "uv", "[", ":", ",", "2", "]", "\n", "return", "uv", "[", ":", ",", "0", ":", "2", "]", ",", "pc2", "[", ":", ",", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_upright_camera": [[116, 118], ["sunrgbd_utils.flip_axis_to_camera"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.flip_axis_to_camera"], ["", "def", "project_upright_depth_to_upright_camera", "(", "self", ",", "pc", ")", ":", "\n", "        ", "return", "flip_axis_to_camera", "(", "pc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_camera_to_upright_depth": [[119, 121], ["sunrgbd_utils.flip_axis_to_depth"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.flip_axis_to_depth"], ["", "def", "project_upright_camera_to_upright_depth", "(", "self", ",", "pc", ")", ":", "\n", "        ", "return", "flip_axis_to_depth", "(", "pc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_image_to_camera": [[122, 131], ["numpy.zeros"], "methods", ["None"], ["", "def", "project_image_to_camera", "(", "self", ",", "uv_depth", ")", ":", "\n", "        ", "n", "=", "uv_depth", ".", "shape", "[", "0", "]", "\n", "x", "=", "(", "(", "uv_depth", "[", ":", ",", "0", "]", "-", "self", ".", "c_u", ")", "*", "uv_depth", "[", ":", ",", "2", "]", ")", "/", "self", ".", "f_u", "\n", "y", "=", "(", "(", "uv_depth", "[", ":", ",", "1", "]", "-", "self", ".", "c_v", ")", "*", "uv_depth", "[", ":", ",", "2", "]", ")", "/", "self", ".", "f_v", "\n", "pts_3d_camera", "=", "np", ".", "zeros", "(", "(", "n", ",", "3", ")", ")", "\n", "pts_3d_camera", "[", ":", ",", "0", "]", "=", "x", "\n", "pts_3d_camera", "[", ":", ",", "1", "]", "=", "y", "\n", "pts_3d_camera", "[", ":", ",", "2", "]", "=", "uv_depth", "[", ":", ",", "2", "]", "\n", "return", "pts_3d_camera", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_image_to_upright_camerea": [[132, 137], ["sunrgbd_utils.SUNRGBD_Calibration.project_image_to_camera", "sunrgbd_utils.flip_axis_to_depth", "numpy.transpose", "sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_upright_camera", "numpy.dot", "numpy.transpose"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_image_to_camera", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.flip_axis_to_depth", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_upright_camera"], ["", "def", "project_image_to_upright_camerea", "(", "self", ",", "uv_depth", ")", ":", "\n", "        ", "pts_3d_camera", "=", "self", ".", "project_image_to_camera", "(", "uv_depth", ")", "\n", "pts_3d_depth", "=", "flip_axis_to_depth", "(", "pts_3d_camera", ")", "\n", "pts_3d_upright_depth", "=", "np", ".", "transpose", "(", "np", ".", "dot", "(", "self", ".", "Rtilt", ",", "np", ".", "transpose", "(", "pts_3d_depth", ")", ")", ")", "\n", "return", "self", ".", "project_upright_depth_to_upright_camera", "(", "pts_3d_upright_depth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.flip_axis_to_camera": [[24, 32], ["numpy.copy"], "function", ["None"], ["def", "flip_axis_to_camera", "(", "pc", ")", ":", "\n", "    ", "''' Flip X-right,Y-forward,Z-up to X-right,Y-down,Z-forward\n        Input and output are both (N,3) array\n    '''", "\n", "pc2", "=", "np", ".", "copy", "(", "pc", ")", "\n", "pc2", "[", ":", ",", "[", "0", ",", "1", ",", "2", "]", "]", "=", "pc2", "[", ":", ",", "[", "0", ",", "2", ",", "1", "]", "]", "# cam X,Y,Z = depth X,-Z,Y", "\n", "pc2", "[", ":", ",", "1", "]", "*=", "-", "1", "\n", "return", "pc2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.flip_axis_to_depth": [[33, 38], ["numpy.copy"], "function", ["None"], ["", "def", "flip_axis_to_depth", "(", "pc", ")", ":", "\n", "    ", "pc2", "=", "np", ".", "copy", "(", "pc", ")", "\n", "pc2", "[", ":", ",", "[", "0", ",", "1", ",", "2", "]", "]", "=", "pc2", "[", ":", ",", "[", "0", ",", "2", ",", "1", "]", "]", "# depth X,Y,Z = cam X,Z,-Y", "\n", "pc2", "[", ":", ",", "2", "]", "*=", "-", "1", "\n", "return", "pc2", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.rotx": [[140, 147], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "", "def", "rotx", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the x-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "1", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "c", ",", "-", "s", "]", ",", "\n", "[", "0", ",", "s", ",", "c", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.roty": [[149, 156], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "roty", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the y-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "0", ",", "s", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "-", "s", ",", "0", ",", "c", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.rotz": [[158, 165], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "rotz", "(", "t", ")", ":", "\n", "    ", "\"\"\"Rotation about the z-axis.\"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "t", ")", "\n", "s", "=", "np", ".", "sin", "(", "t", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "-", "s", ",", "0", "]", ",", "\n", "[", "s", ",", "c", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.transform_from_rot_trans": [[167, 172], ["R.reshape.reshape", "t.reshape.reshape", "numpy.vstack", "numpy.hstack"], "function", ["None"], ["", "def", "transform_from_rot_trans", "(", "R", ",", "t", ")", ":", "\n", "    ", "\"\"\"Transforation matrix from rotation matrix and translation vector.\"\"\"", "\n", "R", "=", "R", ".", "reshape", "(", "3", ",", "3", ")", "\n", "t", "=", "t", ".", "reshape", "(", "3", ",", "1", ")", "\n", "return", "np", ".", "vstack", "(", "(", "np", ".", "hstack", "(", "[", "R", ",", "t", "]", ")", ",", "[", "0", ",", "0", ",", "0", ",", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.inverse_rigid_trans": [[174, 182], ["numpy.zeros_like", "numpy.transpose", "numpy.dot", "numpy.transpose"], "function", ["None"], ["", "def", "inverse_rigid_trans", "(", "Tr", ")", ":", "\n", "    ", "\"\"\"Inverse a rigid body transform matrix (3x4 as [R|t])\n        [R'|-R't; 0|1]\n    \"\"\"", "\n", "inv_Tr", "=", "np", ".", "zeros_like", "(", "Tr", ")", "# 3x4", "\n", "inv_Tr", "[", "0", ":", "3", ",", "0", ":", "3", "]", "=", "np", ".", "transpose", "(", "Tr", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", "\n", "inv_Tr", "[", "0", ":", "3", ",", "3", "]", "=", "np", ".", "dot", "(", "-", "np", ".", "transpose", "(", "Tr", "[", "0", ":", "3", ",", "0", ":", "3", "]", ")", ",", "Tr", "[", "0", ":", "3", ",", "3", "]", ")", "\n", "return", "inv_Tr", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.read_sunrgbd_label": [[183, 187], ["line.rstrip", "sunrgbd_utils.SUNObject3d", "open"], "function", ["None"], ["", "def", "read_sunrgbd_label", "(", "label_filename", ")", ":", "\n", "    ", "lines", "=", "[", "line", ".", "rstrip", "(", ")", "for", "line", "in", "open", "(", "label_filename", ")", "]", "\n", "objects", "=", "[", "SUNObject3d", "(", "line", ")", "for", "line", "in", "lines", "]", "\n", "return", "objects", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.load_image": [[188, 190], ["cv2.imread"], "function", ["None"], ["", "def", "load_image", "(", "img_filename", ")", ":", "\n", "    ", "return", "cv2", ".", "imread", "(", "img_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.load_depth_points": [[191, 194], ["numpy.loadtxt"], "function", ["None"], ["", "def", "load_depth_points", "(", "depth_filename", ")", ":", "\n", "    ", "depth", "=", "np", ".", "loadtxt", "(", "depth_filename", ")", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.load_depth_points_mat": [[195, 198], ["scipy.loadmat"], "function", ["None"], ["", "def", "load_depth_points_mat", "(", "depth_filename", ")", ":", "\n", "    ", "depth", "=", "sio", ".", "loadmat", "(", "depth_filename", ")", "[", "'instance'", "]", "\n", "return", "depth", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.random_shift_box2d": [[199, 213], ["numpy.array", "numpy.random.random", "numpy.random.random", "numpy.random.random", "numpy.random.random"], "function", ["None"], ["", "def", "random_shift_box2d", "(", "box2d", ",", "shift_ratio", "=", "0.1", ")", ":", "\n", "    ", "''' Randomly shift box center, randomly scale width and height \n    '''", "\n", "r", "=", "shift_ratio", "\n", "xmin", ",", "ymin", ",", "xmax", ",", "ymax", "=", "box2d", "\n", "h", "=", "ymax", "-", "ymin", "\n", "w", "=", "xmax", "-", "xmin", "\n", "cx", "=", "(", "xmin", "+", "xmax", ")", "/", "2.0", "\n", "cy", "=", "(", "ymin", "+", "ymax", ")", "/", "2.0", "\n", "cx2", "=", "cx", "+", "w", "*", "r", "*", "(", "np", ".", "random", ".", "random", "(", ")", "*", "2", "-", "1", ")", "\n", "cy2", "=", "cy", "+", "h", "*", "r", "*", "(", "np", ".", "random", ".", "random", "(", ")", "*", "2", "-", "1", ")", "\n", "h2", "=", "h", "*", "(", "1", "+", "np", ".", "random", ".", "random", "(", ")", "*", "2", "*", "r", "-", "r", ")", "# 0.9 to 1.1", "\n", "w2", "=", "w", "*", "(", "1", "+", "np", ".", "random", ".", "random", "(", ")", "*", "2", "*", "r", "-", "r", ")", "# 0.9 to 1.1", "\n", "return", "np", ".", "array", "(", "[", "cx2", "-", "w2", "/", "2.0", ",", "cy2", "-", "h2", "/", "2.0", ",", "cx2", "+", "w2", "/", "2.0", ",", "cy2", "+", "h2", "/", "2.0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.in_hull": [[214, 219], ["isinstance", "Delaunay", "Delaunay.find_simplex"], "function", ["None"], ["", "def", "in_hull", "(", "p", ",", "hull", ")", ":", "\n", "    ", "from", "scipy", ".", "spatial", "import", "Delaunay", "\n", "if", "not", "isinstance", "(", "hull", ",", "Delaunay", ")", ":", "\n", "        ", "hull", "=", "Delaunay", "(", "hull", ")", "\n", "", "return", "hull", ".", "find_simplex", "(", "p", ")", ">=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.extract_pc_in_box3d": [[220, 224], ["sunrgbd_utils.in_hull"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.in_hull"], ["", "def", "extract_pc_in_box3d", "(", "pc", ",", "box3d", ")", ":", "\n", "    ", "''' pc: (N,3), box3d: (8,3) '''", "\n", "box3d_roi_inds", "=", "in_hull", "(", "pc", "[", ":", ",", "0", ":", "3", "]", ",", "box3d", ")", "\n", "return", "pc", "[", "box3d_roi_inds", ",", ":", "]", ",", "box3d_roi_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.my_compute_box_3d": [[226, 237], ["sunrgbd_utils.rotz", "numpy.dot", "numpy.transpose", "numpy.vstack"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.rotz"], ["", "def", "my_compute_box_3d", "(", "center", ",", "size", ",", "heading_angle", ")", ":", "\n", "    ", "R", "=", "rotz", "(", "-", "1", "*", "heading_angle", ")", "\n", "l", ",", "w", ",", "h", "=", "size", "\n", "x_corners", "=", "[", "-", "l", ",", "l", ",", "l", ",", "-", "l", ",", "-", "l", ",", "l", ",", "l", ",", "-", "l", "]", "\n", "y_corners", "=", "[", "w", ",", "w", ",", "-", "w", ",", "-", "w", ",", "w", ",", "w", ",", "-", "w", ",", "-", "w", "]", "\n", "z_corners", "=", "[", "h", ",", "h", ",", "h", ",", "h", ",", "-", "h", ",", "-", "h", ",", "-", "h", ",", "-", "h", "]", "\n", "corners_3d", "=", "np", ".", "dot", "(", "R", ",", "np", ".", "vstack", "(", "[", "x_corners", ",", "y_corners", ",", "z_corners", "]", ")", ")", "\n", "corners_3d", "[", "0", ",", ":", "]", "+=", "center", "[", "0", "]", "\n", "corners_3d", "[", "1", ",", ":", "]", "+=", "center", "[", "1", "]", "\n", "corners_3d", "[", "2", ",", ":", "]", "+=", "center", "[", "2", "]", "\n", "return", "np", ".", "transpose", "(", "corners_3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.compute_box_3d": [[239, 271], ["sunrgbd_utils.rotz", "numpy.dot", "calib.project_upright_depth_to_image", "numpy.vstack", "numpy.transpose", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.rotz", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_image"], ["", "def", "compute_box_3d", "(", "obj", ",", "calib", ")", ":", "\n", "    ", "''' Takes an object and a projection matrix (P) and projects the 3d\n        bounding box into the image plane.\n        Returns:\n            corners_2d: (8,2) array in image coord.\n            corners_3d: (8,3) array in in upright depth coord.\n    '''", "\n", "center", "=", "obj", ".", "centroid", "\n", "\n", "# compute rotational matrix around yaw axis", "\n", "R", "=", "rotz", "(", "-", "1", "*", "obj", ".", "heading_angle", ")", "\n", "#b,a,c = dimension", "\n", "#print R, a,b,c", "\n", "\n", "# 3d bounding box dimensions", "\n", "l", "=", "obj", ".", "l", "# along heading arrow", "\n", "w", "=", "obj", ".", "w", "# perpendicular to heading arrow", "\n", "h", "=", "obj", ".", "h", "\n", "\n", "# rotate and translate 3d bounding box", "\n", "x_corners", "=", "[", "-", "l", ",", "l", ",", "l", ",", "-", "l", ",", "-", "l", ",", "l", ",", "l", ",", "-", "l", "]", "\n", "y_corners", "=", "[", "w", ",", "w", ",", "-", "w", ",", "-", "w", ",", "w", ",", "w", ",", "-", "w", ",", "-", "w", "]", "\n", "z_corners", "=", "[", "h", ",", "h", ",", "h", ",", "h", ",", "-", "h", ",", "-", "h", ",", "-", "h", ",", "-", "h", "]", "\n", "corners_3d", "=", "np", ".", "dot", "(", "R", ",", "np", ".", "vstack", "(", "[", "x_corners", ",", "y_corners", ",", "z_corners", "]", ")", ")", "\n", "corners_3d", "[", "0", ",", ":", "]", "+=", "center", "[", "0", "]", "\n", "corners_3d", "[", "1", ",", ":", "]", "+=", "center", "[", "1", "]", "\n", "corners_3d", "[", "2", ",", ":", "]", "+=", "center", "[", "2", "]", "\n", "\n", "# project the 3d bounding box into the image plane", "\n", "corners_2d", ",", "_", "=", "calib", ".", "project_upright_depth_to_image", "(", "np", ".", "transpose", "(", "corners_3d", ")", ")", "\n", "#print 'corners_2d: ', corners_2d", "\n", "return", "corners_2d", ",", "np", ".", "transpose", "(", "corners_3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.compute_orientation_3d": [[272, 291], ["numpy.array", "calib.project_upright_depth_to_image", "numpy.transpose", "numpy.transpose"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.SUNRGBD_Calibration.project_upright_depth_to_image"], ["", "def", "compute_orientation_3d", "(", "obj", ",", "calib", ")", ":", "\n", "    ", "''' Takes an object and a projection matrix (P) and projects the 3d\n        object orientation vector into the image plane.\n        Returns:\n            orientation_2d: (2,2) array in image coord.\n            orientation_3d: (2,3) array in depth coord.\n    '''", "\n", "\n", "# orientation in object coordinate system", "\n", "ori", "=", "obj", ".", "orientation", "\n", "orientation_3d", "=", "np", ".", "array", "(", "[", "[", "0", ",", "ori", "[", "0", "]", "]", ",", "[", "0", ",", "ori", "[", "1", "]", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "center", "=", "obj", ".", "centroid", "\n", "orientation_3d", "[", "0", ",", ":", "]", "=", "orientation_3d", "[", "0", ",", ":", "]", "+", "center", "[", "0", "]", "\n", "orientation_3d", "[", "1", ",", ":", "]", "=", "orientation_3d", "[", "1", ",", ":", "]", "+", "center", "[", "1", "]", "\n", "orientation_3d", "[", "2", ",", ":", "]", "=", "orientation_3d", "[", "2", ",", ":", "]", "+", "center", "[", "2", "]", "\n", "\n", "# project orientation into the image plane", "\n", "orientation_2d", ",", "_", "=", "calib", ".", "project_upright_depth_to_image", "(", "np", ".", "transpose", "(", "orientation_3d", ")", ")", "\n", "return", "orientation_2d", ",", "np", ".", "transpose", "(", "orientation_3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.draw_projected_box3d": [[292, 315], ["qs.astype.astype", "range", "cv2.line", "cv2.line", "cv2.line"], "function", ["None"], ["", "def", "draw_projected_box3d", "(", "image", ",", "qs", ",", "color", "=", "(", "255", ",", "255", ",", "255", ")", ",", "thickness", "=", "2", ")", ":", "\n", "    ", "''' Draw 3d bounding box in image\n        qs: (8,2) array of vertices for the 3d box in following order:\n            1 -------- 0\n           /|         /|\n          2 -------- 3 .\n          | |        | |\n          . 5 -------- 4\n          |/         |/\n          6 -------- 7\n    '''", "\n", "qs", "=", "qs", ".", "astype", "(", "np", ".", "int32", ")", "\n", "for", "k", "in", "range", "(", "0", ",", "4", ")", ":", "\n", "#http://docs.enthought.com/mayavi/mayavi/auto/mlab_helper_functions.html", "\n", "       ", "i", ",", "j", "=", "k", ",", "(", "k", "+", "1", ")", "%", "4", "\n", "cv2", ".", "line", "(", "image", ",", "(", "qs", "[", "i", ",", "0", "]", ",", "qs", "[", "i", ",", "1", "]", ")", ",", "(", "qs", "[", "j", ",", "0", "]", ",", "qs", "[", "j", ",", "1", "]", ")", ",", "color", ",", "thickness", ",", "cv2", ".", "CV_AA", ")", "# use LINE_AA for opencv3", "\n", "\n", "i", ",", "j", "=", "k", "+", "4", ",", "(", "k", "+", "1", ")", "%", "4", "+", "4", "\n", "cv2", ".", "line", "(", "image", ",", "(", "qs", "[", "i", ",", "0", "]", ",", "qs", "[", "i", ",", "1", "]", ")", ",", "(", "qs", "[", "j", ",", "0", "]", ",", "qs", "[", "j", ",", "1", "]", ")", ",", "color", ",", "thickness", ",", "cv2", ".", "CV_AA", ")", "\n", "\n", "i", ",", "j", "=", "k", ",", "k", "+", "4", "\n", "cv2", ".", "line", "(", "image", ",", "(", "qs", "[", "i", ",", "0", "]", ",", "qs", "[", "i", ",", "1", "]", ")", ",", "(", "qs", "[", "j", ",", "0", "]", ",", "qs", "[", "j", ",", "1", "]", ")", ",", "color", ",", "thickness", ",", "cv2", ".", "CV_AA", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.save_zipped_pickle": [[320, 323], ["gzip.open", "pickle.dump"], "function", ["None"], ["def", "save_zipped_pickle", "(", "obj", ",", "filename", ",", "protocol", "=", "-", "1", ")", ":", "\n", "    ", "with", "gzip", ".", "open", "(", "filename", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "obj", ",", "f", ",", "protocol", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sunrgbd.sunrgbd_utils.load_zipped_pickle": [[324, 328], ["gzip.open", "pickle.load"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["", "", "def", "load_zipped_pickle", "(", "filename", ")", ":", "\n", "    ", "with", "gzip", ".", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "loaded_object", "=", "pickle", ".", "load", "(", "f", ")", "\n", "return", "loaded_object", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.config.str2opt": [[10, 13], ["None"], "function", ["None"], ["def", "str2opt", "(", "arg", ")", ":", "\n", "    ", "assert", "arg", "in", "[", "'SGD'", ",", "'Adam'", "]", "\n", "return", "arg", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.config.str2scheduler": [[15, 18], ["None"], "function", ["None"], ["", "def", "str2scheduler", "(", "arg", ")", ":", "\n", "    ", "assert", "arg", "in", "[", "'StepLR'", ",", "'PolyLR'", ",", "'ExpLR'", ",", "'SquaredLR'", "]", "\n", "return", "arg", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.config.str2bool": [[20, 22], ["v.lower"], "function", ["None"], ["", "def", "str2bool", "(", "v", ")", ":", "\n", "    ", "return", "v", ".", "lower", "(", ")", "in", "(", "'true'", ",", "'1'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.config.str2list": [[24, 26], ["int", "l.split"], "function", ["None"], ["", "def", "str2list", "(", "l", ")", ":", "\n", "    ", "return", "[", "int", "(", "i", ")", "for", "i", "in", "l", ".", "split", "(", "','", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.config.add_argument_group": [[28, 32], ["parser.add_argument_group", "arg_lists.append"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.config.add_argument_group"], ["", "def", "add_argument_group", "(", "name", ")", ":", "\n", "    ", "arg", "=", "parser", ".", "add_argument_group", "(", "name", ")", "\n", "arg_lists", ".", "append", "(", "arg", ")", "\n", "return", "arg", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.config.get_config": [[264, 267], ["parser.parse_args"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet.collect_indoor3d_data.parse_args"], ["def", "get_config", "(", "args", "=", "None", ")", ":", "\n", "    ", "config", "=", "parser", ".", "parse_args", "(", "args", "=", "args", ")", "\n", "return", "config", "# Training settings", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.__init__": [[15, 43], ["None"], "methods", ["None"], ["def", "M", "(", "axis", ",", "theta", ")", ":", "\n", "  ", "return", "expm", "(", "np", ".", "cross", "(", "np", ".", "eye", "(", "3", ")", ",", "axis", "/", "norm", "(", "axis", ")", "*", "theta", ")", ")", "\n", "\n", "\n", "", "class", "Voxelizer", ":", "\n", "\n", "  ", "def", "__init__", "(", "self", ",", "\n", "voxel_size", "=", "1", ",", "\n", "clip_bound", "=", "None", ",", "\n", "use_augmentation", "=", "False", ",", "\n", "scale_augmentation_bound", "=", "None", ",", "\n", "rotation_augmentation_bound", "=", "None", ",", "\n", "translation_augmentation_ratio_bound", "=", "None", ",", "\n", "ignore_label", "=", "255", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      voxel_size: side length of a voxel\n      clip_bound: boundary of the voxelizer. Points outside the bound will be deleted\n        expects either None or an array like ((-100, 100), (-100, 100), (-100, 100)).\n      scale_augmentation_bound: None or (0.9, 1.1)\n      rotation_augmentation_bound: None or ((np.pi / 6, np.pi / 6), None, None) for 3 axis.\n        Use random order of x, y, z to prevent bias.\n      translation_augmentation_bound: ((-5, 5), (0, 0), (-10, 10))\n      ignore_label: label assigned for ignore (not a training label).\n    \"\"\"", "\n", "self", ".", "voxel_size", "=", "voxel_size", "\n", "self", ".", "clip_bound", "=", "clip_bound", "\n", "self", ".", "ignore_label", "=", "ignore_label", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.get_transformation_matrix": [[44, 75], ["numpy.eye", "numpy.fill_diagonal", "numpy.eye", "numpy.eye", "isinstance", "numpy.random.uniform", "enumerate", "numpy.random.shuffle", "ValueError", "numpy.zeros", "rot_mats.append", "numpy.random.uniform", "voxelizer.M"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.M"], ["# Augmentation", "\n", "self", ".", "use_augmentation", "=", "use_augmentation", "\n", "self", ".", "scale_augmentation_bound", "=", "scale_augmentation_bound", "\n", "self", ".", "rotation_augmentation_bound", "=", "rotation_augmentation_bound", "\n", "self", ".", "translation_augmentation_ratio_bound", "=", "translation_augmentation_ratio_bound", "\n", "\n", "", "def", "get_transformation_matrix", "(", "self", ")", ":", "\n", "    ", "voxelization_matrix", ",", "rotation_matrix", "=", "np", ".", "eye", "(", "4", ")", ",", "np", ".", "eye", "(", "4", ")", "\n", "# Get clip boundary from config or pointcloud.", "\n", "# Get inner clip bound to crop from.", "\n", "\n", "# Transform pointcloud coordinate to voxel coordinate.", "\n", "# 1. Random rotation", "\n", "rot_mat", "=", "np", ".", "eye", "(", "3", ")", "\n", "if", "self", ".", "use_augmentation", "and", "self", ".", "rotation_augmentation_bound", "is", "not", "None", ":", "\n", "      ", "if", "isinstance", "(", "self", ".", "rotation_augmentation_bound", ",", "collections", ".", "Iterable", ")", ":", "\n", "        ", "rot_mats", "=", "[", "]", "\n", "for", "axis_ind", ",", "rot_bound", "in", "enumerate", "(", "self", ".", "rotation_augmentation_bound", ")", ":", "\n", "          ", "theta", "=", "0", "\n", "axis", "=", "np", ".", "zeros", "(", "3", ")", "\n", "axis", "[", "axis_ind", "]", "=", "1", "\n", "if", "rot_bound", "is", "not", "None", ":", "\n", "            ", "theta", "=", "np", ".", "random", ".", "uniform", "(", "*", "rot_bound", ")", "\n", "", "rot_mats", ".", "append", "(", "M", "(", "axis", ",", "theta", ")", ")", "\n", "# Use random order", "\n", "", "np", ".", "random", ".", "shuffle", "(", "rot_mats", ")", "\n", "rot_mat", "=", "rot_mats", "[", "0", "]", "@", "rot_mats", "[", "1", "]", "@", "rot_mats", "[", "2", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", ")", "\n", "", "", "rotation_matrix", "[", ":", "3", ",", ":", "3", "]", "=", "rot_mat", "\n", "# 2. Scale and translate to the voxel space.", "\n", "scale", "=", "1", "/", "self", ".", "voxel_size", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip": [[76, 107], ["numpy.min().astype", "numpy.max().astype", "isinstance", "numpy.multiply", "numpy.min", "numpy.max", "bound_size.max"], "methods", ["None"], ["if", "self", ".", "use_augmentation", "and", "self", ".", "scale_augmentation_bound", "is", "not", "None", ":", "\n", "      ", "scale", "*=", "np", ".", "random", ".", "uniform", "(", "*", "self", ".", "scale_augmentation_bound", ")", "\n", "", "np", ".", "fill_diagonal", "(", "voxelization_matrix", "[", ":", "3", ",", ":", "3", "]", ",", "scale", ")", "\n", "# Get final transformation matrix.", "\n", "return", "voxelization_matrix", ",", "rotation_matrix", "\n", "\n", "", "def", "clip", "(", "self", ",", "coords", ",", "center", "=", "None", ",", "trans_aug_ratio", "=", "None", ")", ":", "\n", "    ", "bound_min", "=", "np", ".", "min", "(", "coords", ",", "0", ")", ".", "astype", "(", "float", ")", "\n", "bound_max", "=", "np", ".", "max", "(", "coords", ",", "0", ")", ".", "astype", "(", "float", ")", "\n", "bound_size", "=", "bound_max", "-", "bound_min", "\n", "if", "center", "is", "None", ":", "\n", "      ", "center", "=", "bound_min", "+", "bound_size", "*", "0.5", "\n", "", "if", "trans_aug_ratio", "is", "not", "None", ":", "\n", "      ", "trans", "=", "np", ".", "multiply", "(", "trans_aug_ratio", ",", "bound_size", ")", "\n", "center", "+=", "trans", "\n", "", "lim", "=", "self", ".", "clip_bound", "\n", "\n", "if", "isinstance", "(", "self", ".", "clip_bound", ",", "(", "int", ",", "float", ")", ")", ":", "\n", "      ", "if", "bound_size", ".", "max", "(", ")", "<", "self", ".", "clip_bound", ":", "\n", "        ", "return", "None", "\n", "", "else", ":", "\n", "        ", "clip_inds", "=", "(", "(", "coords", "[", ":", ",", "0", "]", ">=", "(", "-", "lim", "+", "center", "[", "0", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "0", "]", "<", "(", "lim", "+", "center", "[", "0", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "1", "]", ">=", "(", "-", "lim", "+", "center", "[", "1", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "1", "]", "<", "(", "lim", "+", "center", "[", "1", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "2", "]", ">=", "(", "-", "lim", "+", "center", "[", "2", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "2", "]", "<", "(", "lim", "+", "center", "[", "2", "]", ")", ")", ")", "\n", "return", "clip_inds", "\n", "\n", "# Clip points outside the limit", "\n", "", "", "clip_inds", "=", "(", "(", "coords", "[", ":", ",", "0", "]", ">=", "(", "lim", "[", "0", "]", "[", "0", "]", "+", "center", "[", "0", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "0", "]", "<", "(", "lim", "[", "0", "]", "[", "1", "]", "+", "center", "[", "0", "]", ")", ")", "&"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.voxelize": [[108, 146], ["voxelizer.Voxelizer.get_transformation_matrix", "numpy.hstack", "numpy.floor", "numpy.floor.min", "numpy.eye", "numpy.floor", "MinkowskiEngine.utils.sparse_quantize", "numpy.zeros", "voxelizer.Voxelizer.clip", "rigid_transformation.flatten", "enumerate", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.get_transformation_matrix", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip"], ["(", "coords", "[", ":", ",", "1", "]", ">=", "(", "lim", "[", "1", "]", "[", "0", "]", "+", "center", "[", "1", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "1", "]", "<", "(", "lim", "[", "1", "]", "[", "1", "]", "+", "center", "[", "1", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "2", "]", ">=", "(", "lim", "[", "2", "]", "[", "0", "]", "+", "center", "[", "2", "]", ")", ")", "&", "(", "coords", "[", ":", ",", "2", "]", "<", "(", "lim", "[", "2", "]", "[", "1", "]", "+", "center", "[", "2", "]", ")", ")", ")", "\n", "return", "clip_inds", "\n", "\n", "", "def", "voxelize", "(", "self", ",", "coords", ",", "feats", ",", "labels", ",", "instances", ",", "center", "=", "None", ")", ":", "\n", "\n", "    ", "assert", "coords", ".", "shape", "[", "1", "]", "==", "3", "and", "coords", ".", "shape", "[", "0", "]", "==", "feats", ".", "shape", "[", "0", "]", "and", "coords", ".", "shape", "[", "0", "]", "\n", "if", "self", ".", "clip_bound", "is", "not", "None", ":", "\n", "      ", "trans_aug_ratio", "=", "np", ".", "zeros", "(", "3", ")", "\n", "if", "self", ".", "use_augmentation", "and", "self", ".", "translation_augmentation_ratio_bound", "is", "not", "None", ":", "\n", "        ", "for", "axis_ind", ",", "trans_ratio_bound", "in", "enumerate", "(", "self", ".", "translation_augmentation_ratio_bound", ")", ":", "\n", "          ", "trans_aug_ratio", "[", "axis_ind", "]", "=", "np", ".", "random", ".", "uniform", "(", "*", "trans_ratio_bound", ")", "\n", "\n", "", "", "clip_inds", "=", "self", ".", "clip", "(", "coords", ",", "center", ",", "trans_aug_ratio", ")", "\n", "if", "clip_inds", "is", "not", "None", ":", "\n", "        ", "coords", ",", "feats", "=", "coords", "[", "clip_inds", "]", ",", "feats", "[", "clip_inds", "]", "\n", "if", "labels", "is", "not", "None", ":", "\n", "          ", "labels", "=", "labels", "[", "clip_inds", "]", "\n", "", "if", "instances", "is", "not", "None", ":", "\n", "          ", "instances", "=", "instances", "[", "clip_inds", "]", "\n", "\n", "# Get rotation and scale", "\n", "", "", "", "M_v", ",", "M_r", "=", "self", ".", "get_transformation_matrix", "(", ")", "\n", "# Apply transformations", "\n", "rigid_transformation", "=", "M_v", "\n", "if", "self", ".", "use_augmentation", ":", "\n", "      ", "rigid_transformation", "=", "M_r", "@", "rigid_transformation", "\n", "\n", "", "homo_coords", "=", "np", ".", "hstack", "(", "(", "coords", ",", "np", ".", "ones", "(", "(", "coords", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "dtype", "=", "coords", ".", "dtype", ")", ")", ")", "\n", "coords_aug", "=", "np", ".", "floor", "(", "homo_coords", "@", "rigid_transformation", ".", "T", "[", ":", ",", ":", "3", "]", ")", "\n", "\n", "# Align all coordinates to the origin.", "\n", "min_coords", "=", "coords_aug", ".", "min", "(", "0", ")", "\n", "M_t", "=", "np", ".", "eye", "(", "4", ")", "\n", "M_t", "[", ":", "3", ",", "-", "1", "]", "=", "-", "min_coords", "\n", "rigid_transformation", "=", "M_t", "@", "rigid_transformation", "\n", "coords_aug", "=", "np", ".", "floor", "(", "coords_aug", "-", "min_coords", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.voxelize_temporal": [[147, 204], ["voxelizer.Voxelizer.get_transformation_matrix", "zip", "tuple", "numpy.hstack", "MinkowskiEngine.utils.sparse_quantize", "coords_tc.append", "feats_tc.append", "labels_tc.append", "transformation_tc.append", "return_args.append", "len", "numpy.zeros", "voxelizer.Voxelizer.clip", "numpy.floor", "rigid_transformation.flatten", "enumerate", "numpy.ones", "numpy.random.uniform"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.get_transformation_matrix", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.clip"], ["\n", "# key = self.hash(coords_aug)  # floor happens by astype(np.uint64)", "\n", "mapping", ",", "colabels", "=", "ME", ".", "utils", ".", "sparse_quantize", "(", "\n", "coords_aug", ",", "feats", ",", "labels", "=", "labels", ",", "return_index", "=", "True", ",", "ignore_label", "=", "self", ".", "ignore_label", ")", "\n", "coords_aug", "=", "coords_aug", "[", "mapping", "]", "\n", "feats", "=", "feats", "[", "mapping", "]", "\n", "labels", "=", "colabels", "\n", "instances", "=", "instances", "[", "mapping", "]", "\n", "\n", "return", "coords_aug", ",", "feats", ",", "labels", ",", "instances", ",", "rigid_transformation", ".", "flatten", "(", ")", "\n", "\n", "", "def", "voxelize_temporal", "(", "self", ",", "\n", "coords_t", ",", "\n", "feats_t", ",", "\n", "labels_t", ",", "\n", "centers", "=", "None", ",", "\n", "return_transformation", "=", "False", ")", ":", "\n", "# Legacy code, remove", "\n", "    ", "if", "centers", "is", "None", ":", "\n", "      ", "centers", "=", "[", "\n", "None", ",", "\n", "]", "*", "len", "(", "coords_t", ")", "\n", "", "coords_tc", ",", "feats_tc", ",", "labels_tc", ",", "transformation_tc", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n", "# ######################### Data Augmentation #############################", "\n", "# Get rotation and scale", "\n", "M_v", ",", "M_r", "=", "self", ".", "get_transformation_matrix", "(", ")", "\n", "# Apply transformations", "\n", "rigid_transformation", "=", "M_v", "\n", "if", "self", ".", "use_augmentation", ":", "\n", "      ", "rigid_transformation", "=", "M_r", "@", "rigid_transformation", "\n", "# ######################### Voxelization #############################", "\n", "# Voxelize coords", "\n", "", "for", "coords", ",", "feats", ",", "labels", ",", "center", "in", "zip", "(", "coords_t", ",", "feats_t", ",", "labels_t", ",", "centers", ")", ":", "\n", "\n", "###################################", "\n", "# Clip the data if bound exists", "\n", "      ", "if", "self", ".", "clip_bound", "is", "not", "None", ":", "\n", "        ", "trans_aug_ratio", "=", "np", ".", "zeros", "(", "3", ")", "\n", "if", "self", ".", "use_augmentation", "and", "self", ".", "translation_augmentation_ratio_bound", "is", "not", "None", ":", "\n", "          ", "for", "axis_ind", ",", "trans_ratio_bound", "in", "enumerate", "(", "self", ".", "translation_augmentation_ratio_bound", ")", ":", "\n", "            ", "trans_aug_ratio", "[", "axis_ind", "]", "=", "np", ".", "random", ".", "uniform", "(", "*", "trans_ratio_bound", ")", "\n", "\n", "", "", "clip_inds", "=", "self", ".", "clip", "(", "coords", ",", "center", ",", "trans_aug_ratio", ")", "\n", "if", "clip_inds", "is", "not", "None", ":", "\n", "          ", "coords", ",", "feats", "=", "coords", "[", "clip_inds", "]", ",", "feats", "[", "clip_inds", "]", "\n", "if", "labels", "is", "not", "None", ":", "\n", "            ", "labels", "=", "labels", "[", "clip_inds", "]", "\n", "###################################", "\n", "\n", "", "", "", "homo_coords", "=", "np", ".", "hstack", "(", "(", "coords", ",", "np", ".", "ones", "(", "(", "coords", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "dtype", "=", "coords", ".", "dtype", ")", ")", ")", "\n", "coords_aug", "=", "np", ".", "floor", "(", "homo_coords", "@", "rigid_transformation", ".", "T", ")", "[", ":", ",", ":", "3", "]", "\n", "\n", "coords_aug", ",", "feats", ",", "labels", "=", "ME", ".", "utils", ".", "sparse_quantize", "(", "\n", "coords_aug", ",", "feats", ",", "labels", "=", "labels", ",", "ignore_label", "=", "self", ".", "ignore_label", ")", "\n", "\n", "coords_tc", ".", "append", "(", "coords_aug", ")", "\n", "feats_tc", ".", "append", "(", "feats", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.M": [[9, 11], ["scipy.linalg.expm", "numpy.cross", "numpy.eye", "scipy.linalg.norm"], "function", ["None"], ["import", "numpy", "as", "np", "\n", "import", "MinkowskiEngine", "as", "ME", "\n", "from", "scipy", ".", "linalg", "import", "expm", ",", "norm", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.test": [[206, 215], ["numpy.random.rand", "numpy.floor", "voxelizer.Voxelizer", "print", "numpy.random.rand", "voxelizer.Voxelizer.voxelize", "numpy.random.rand"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.Voxelizer.voxelize"], ["transformation_tc", ".", "append", "(", "rigid_transformation", ".", "flatten", "(", ")", ")", "\n", "\n", "", "return_args", "=", "[", "coords_tc", ",", "feats_tc", ",", "labels_tc", "]", "\n", "if", "return_transformation", ":", "\n", "      ", "return_args", ".", "append", "(", "transformation_tc", ")", "\n", "\n", "", "return", "tuple", "(", "return_args", ")", "\n", "\n", "\n", "", "", "def", "test", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelized_dataset.VoxelizationDataset.__init__": [[26, 29], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dataset", ",", "voxel_size", "=", "0.05", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "VOXEL_SIZE", "=", "voxel_size", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelized_dataset.VoxelizationDataset.__len__": [[30, 32], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelized_dataset.VoxelizationDataset.__getitem__": [[33, 44], ["numpy.floor", "MinkowskiEngine.utils.sparse_quantize", "coords[].astype", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "ret_dict", "=", "self", ".", "dataset", "[", "idx", "]", "\n", "\n", "# voxelization", "\n", "coords", "=", "np", ".", "floor", "(", "ret_dict", "[", "'point_clouds'", "]", "/", "self", ".", "VOXEL_SIZE", ")", "\n", "inds", "=", "ME", ".", "utils", ".", "sparse_quantize", "(", "coords", ",", "return_index", "=", "True", ")", "\n", "coords", "=", "coords", "[", "inds", "]", ".", "astype", "(", "np", ".", "int32", ")", "\n", "colors", "=", "ret_dict", "[", "'pcl_color'", "]", "[", "inds", "]", "\n", "\n", "ret_dict", "[", "'voxel'", "]", "=", "(", "coords", ",", "np", ".", "array", "(", "inds", ",", "dtype", "=", "np", ".", "int32", ")", ",", "colors", ")", "\n", "return", "ret_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelized_dataset.collate_fn": [[46, 70], ["torch.utils.data._utils.collate.default_collate", "numpy.array", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().float", "data.append", "voxel.append", "torch.from_numpy", "enumerate", "range"], "function", ["None"], ["", "", "def", "collate_fn", "(", "samples", ")", ":", "\n", "    ", "data", ",", "voxel", "=", "[", "]", ",", "[", "]", "\n", "for", "sample", "in", "samples", ":", "\n", "        ", "data", ".", "append", "(", "{", "w", ":", "sample", "[", "w", "]", "for", "w", "in", "sample", "if", "w", "!=", "'voxel'", "}", ")", "\n", "voxel", ".", "append", "(", "sample", "[", "'voxel'", "]", ")", "\n", "\n", "# for non-voxel data, use default collate", "\n", "", "data_batch", "=", "default_collate", "(", "data", ")", "\n", "\n", "batch_ids", "=", "np", ".", "array", "(", "\n", "[", "b", "for", "b", ",", "v", "in", "enumerate", "(", "voxel", ")", "for", "_", "in", "range", "(", "v", "[", "0", "]", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "voxel_ids", "=", "np", ".", "concatenate", "(", "[", "v", "[", "1", "]", "for", "v", "in", "voxel", "]", ",", "0", ")", "\n", "\n", "coords", "=", "np", ".", "concatenate", "(", "[", "v", "[", "0", "]", "for", "v", "in", "voxel", "]", ",", "0", ")", "\n", "coords", "=", "np", ".", "concatenate", "(", "[", "batch_ids", "[", ":", ",", "None", "]", ",", "coords", "]", ",", "1", ")", "\n", "\n", "colors", "=", "np", ".", "concatenate", "(", "[", "v", "[", "2", "]", "for", "v", "in", "voxel", "]", ",", "0", ")", "\n", "\n", "data_batch", "[", "'voxel_coords'", "]", "=", "torch", ".", "from_numpy", "(", "coords", ")", "\n", "data_batch", "[", "'voxel_inds'", "]", "=", "torch", ".", "from_numpy", "(", "voxel_ids", ")", "\n", "#data_batch['voxel_feats'] = data_batch['point_clouds'].new_ones(batch_ids.shape[0], 3)", "\n", "data_batch", "[", "'voxel_feats'", "]", "=", "torch", ".", "from_numpy", "(", "colors", ")", ".", "float", "(", ")", "\n", "\n", "return", "data_batch", "\n", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resunet.MinkUNetBase.__init__": [[31, 33], ["models.backbone.sparseconv.models_sparseconv.resnet.ResNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["bn_momentum", "=", "config", ".", "bn_momentum", "\n", "\n", "def", "space_n_time_m", "(", "n", ",", "m", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resunet.MinkUNetBase.network_initialization": [[34, 175], ["models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "MinkowskiEngine.MinkowskiReLU", "MinkowskiEngine.MinkowskiReLU", "torch.Sequential", "resunet.MinkUNetBase.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["      ", "return", "n", "if", "D", "==", "3", "else", "[", "n", ",", "n", ",", "n", ",", "m", "]", "\n", "\n", "", "if", "D", "==", "4", ":", "\n", "      ", "self", ".", "OUT_PIXEL_DIST", "=", "space_n_time_m", "(", "self", ".", "OUT_PIXEL_DIST", ",", "1", ")", "\n", "\n", "# Output of the first conv concated to conv6", "\n", "", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "self", ".", "conv1p1s1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "\n", "self", ".", "bn1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "0", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "dilation", "=", "dilations", "[", "0", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv2p1s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "dilation", "=", "dilations", "[", "1", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv3p2s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn3", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "dilation", "=", "dilations", "[", "2", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv4p4s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "dilation", "=", "dilations", "[", "3", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr4p8s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "4", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "4", "]", "+", "self", ".", "PLANES", "[", "2", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block5", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "self", ".", "LAYERS", "[", "4", "]", ",", "\n", "dilation", "=", "dilations", "[", "4", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr5p4s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr5", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "5", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "5", "]", "+", "self", ".", "PLANES", "[", "1", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block6", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "self", ".", "LAYERS", "[", "5", "]", ",", "\n", "dilation", "=", "dilations", "[", "5", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr6p2s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr6", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "6", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "relu", "=", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "\n", "self", ".", "PLANES", "[", "6", "]", "+", "self", ".", "PLANES", "[", "0", "]", "*", "self", ".", "BLOCK", ".", "expansion", ",", "\n", "512", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "D", "=", "D", ")", ",", "ME", ".", "MinkowskiBatchNorm", "(", "512", ")", ",", "ME", ".", "MinkowskiReLU", "(", ")", ",", "\n", "conv", "(", "512", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "out", "=", "self", ".", "conv1p1s1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b1p1", "=", "self", ".", "block1", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resunet.MinkUNetBase.forward": [[176, 222], ["resunet.MinkUNetBase.conv1p1s1", "resunet.MinkUNetBase.bn1", "resunet.MinkUNetBase.relu", "resunet.MinkUNetBase.block1", "resunet.MinkUNetBase.conv2p1s2", "resunet.MinkUNetBase.bn2", "resunet.MinkUNetBase.relu", "resunet.MinkUNetBase.block2", "resunet.MinkUNetBase.conv3p2s2", "resunet.MinkUNetBase.bn3", "resunet.MinkUNetBase.relu", "resunet.MinkUNetBase.block3", "resunet.MinkUNetBase.conv4p4s2", "resunet.MinkUNetBase.bn4", "resunet.MinkUNetBase.relu", "resunet.MinkUNetBase.block4", "resunet.MinkUNetBase.convtr4p8s2", "resunet.MinkUNetBase.bntr4", "resunet.MinkUNetBase.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetBase.block5", "resunet.MinkUNetBase.convtr5p4s2", "resunet.MinkUNetBase.bntr5", "resunet.MinkUNetBase.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetBase.block6", "resunet.MinkUNetBase.convtr6p2s2", "resunet.MinkUNetBase.bntr6", "resunet.MinkUNetBase.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetBase.final"], "methods", ["None"], ["\n", "out", "=", "self", ".", "conv2p1s2", "(", "out_b1p1", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b2p2", "=", "self", ".", "block2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3p2s2", "(", "out_b2p2", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b3p4", "=", "self", ".", "block3", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv4p4s2", "(", "out_b3p4", ")", "\n", "out", "=", "self", ".", "bn4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "# pixel_dist=8", "\n", "out", "=", "self", ".", "block4", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr4p8s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b3p4", ")", "\n", "out", "=", "self", ".", "block5", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr5p4s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr5", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b2p2", ")", "\n", "out", "=", "self", ".", "block6", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr6p2s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr6", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b1p1", ")", "\n", "return", "self", ".", "final", "(", "out", ")", "\n", "\n", "\n", "", "", "class", "ResUNet14", "(", "MinkUNetBase", ")", ":", "\n", "  ", "BLOCK", "=", "BasicBlock", "\n", "LAYERS", "=", "(", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resunet.MinkUNetHyper.__init__": [[289, 291], ["resunet.MinkUNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["bn_momentum", "=", "config", ".", "bn_momentum", "\n", "\n", "def", "space_n_time_m", "(", "n", ",", "m", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resunet.MinkUNetHyper.network_initialization": [[292, 438], ["models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "MinkowskiEngine.MinkowskiPoolingTranspose", "MinkowskiEngine.MinkowskiPoolingTranspose", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "MinkowskiEngine.MinkowskiPoolingTranspose", "MinkowskiEngine.MinkowskiPoolingTranspose", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "resunet.MinkUNetHyper._make_layer", "MinkowskiEngine.MinkowskiPoolingTranspose", "MinkowskiEngine.MinkowskiPoolingTranspose", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "MinkowskiEngine.MinkowskiReLU", "MinkowskiEngine.MinkowskiReLU", "torch.Sequential", "resunet.MinkUNetHyper.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["      ", "return", "n", "if", "D", "==", "3", "else", "[", "n", ",", "n", ",", "n", ",", "m", "]", "\n", "\n", "", "if", "D", "==", "4", ":", "\n", "      ", "self", ".", "OUT_PIXEL_DIST", "=", "space_n_time_m", "(", "self", ".", "OUT_PIXEL_DIST", ",", "1", ")", "\n", "\n", "# Output of the first conv concated to conv6", "\n", "", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "self", ".", "conv1p1s1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "\n", "self", ".", "bn1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "0", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "dilation", "=", "dilations", "[", "0", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv2p1s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "dilation", "=", "dilations", "[", "1", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv3p2s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn3", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "dilation", "=", "dilations", "[", "2", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv4p4s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "dilation", "=", "dilations", "[", "3", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "pool_tr4", "=", "ME", ".", "MinkowskiPoolingTranspose", "(", "kernel_size", "=", "8", ",", "stride", "=", "8", ",", "dimension", "=", "D", ")", "\n", "out_pool4", "=", "self", ".", "inplanes", "\n", "self", ".", "convtr4p8s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "4", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "4", "]", "+", "self", ".", "PLANES", "[", "2", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block5", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "self", ".", "LAYERS", "[", "4", "]", ",", "\n", "dilation", "=", "dilations", "[", "4", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "pool_tr5", "=", "ME", ".", "MinkowskiPoolingTranspose", "(", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "dimension", "=", "D", ")", "\n", "out_pool5", "=", "self", ".", "inplanes", "\n", "self", ".", "convtr5p4s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr5", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "5", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "5", "]", "+", "self", ".", "PLANES", "[", "1", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block6", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "self", ".", "LAYERS", "[", "5", "]", ",", "\n", "dilation", "=", "dilations", "[", "5", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "pool_tr6", "=", "ME", ".", "MinkowskiPoolingTranspose", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "dimension", "=", "D", ")", "\n", "out_pool6", "=", "self", ".", "inplanes", "\n", "self", ".", "convtr6p2s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr6", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "6", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "relu", "=", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "final", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "\n", "out_pool5", "+", "out_pool6", "+", "self", ".", "PLANES", "[", "6", "]", "+", "self", ".", "PLANES", "[", "0", "]", "*", "self", ".", "BLOCK", ".", "expansion", ",", "\n", "512", ",", "\n", "kernel_size", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "D", "=", "D", ")", ",", "ME", ".", "MinkowskiBatchNorm", "(", "512", ")", ",", "ME", ".", "MinkowskiReLU", "(", ")", ",", "\n", "conv", "(", "512", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "out", "=", "self", ".", "conv1p1s1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b1p1", "=", "self", ".", "block1", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resunet.MinkUNetHyper.forward": [[439, 487], ["resunet.MinkUNetHyper.conv1p1s1", "resunet.MinkUNetHyper.bn1", "resunet.MinkUNetHyper.relu", "resunet.MinkUNetHyper.block1", "resunet.MinkUNetHyper.conv2p1s2", "resunet.MinkUNetHyper.bn2", "resunet.MinkUNetHyper.relu", "resunet.MinkUNetHyper.block2", "resunet.MinkUNetHyper.conv3p2s2", "resunet.MinkUNetHyper.bn3", "resunet.MinkUNetHyper.relu", "resunet.MinkUNetHyper.block3", "resunet.MinkUNetHyper.conv4p4s2", "resunet.MinkUNetHyper.bn4", "resunet.MinkUNetHyper.relu", "resunet.MinkUNetHyper.block4", "resunet.MinkUNetHyper.convtr4p8s2", "resunet.MinkUNetHyper.bntr4", "resunet.MinkUNetHyper.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetHyper.block5", "resunet.MinkUNetHyper.pool_tr5", "resunet.MinkUNetHyper.convtr5p4s2", "resunet.MinkUNetHyper.bntr5", "resunet.MinkUNetHyper.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetHyper.block6", "resunet.MinkUNetHyper.pool_tr6", "resunet.MinkUNetHyper.convtr6p2s2", "resunet.MinkUNetHyper.bntr6", "resunet.MinkUNetHyper.relu", "MinkowskiEngine.cat", "MinkowskiEngine.cat", "resunet.MinkUNetHyper.final"], "methods", ["None"], ["\n", "out", "=", "self", ".", "conv2p1s2", "(", "out_b1p1", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b2p2", "=", "self", ".", "block2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3p2s2", "(", "out_b2p2", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out_b3p4", "=", "self", ".", "block3", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv4p4s2", "(", "out_b3p4", ")", "\n", "out", "=", "self", ".", "bn4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "# pixel_dist=8", "\n", "out", "=", "self", ".", "block4", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr4p8s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b3p4", ")", "\n", "out", "=", "self", ".", "block5", "(", "out", ")", "\n", "out_5", "=", "self", ".", "pool_tr5", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr5p4s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr5", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b2p2", ")", "\n", "out", "=", "self", ".", "block6", "(", "out", ")", "\n", "out_6", "=", "self", ".", "pool_tr6", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "convtr6p2s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr6", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b1p1", ",", "out_6", ",", "out_5", ")", "\n", "return", "self", ".", "final", "(", "out", ")", "\n", "\n", "\n", "", "", "class", "MinkUNetHyper14INBN", "(", "MinkUNetHyper", ")", ":", "\n", "  ", "NORM_TYPE", "=", "NormType", ".", "INSTANCE_BATCH_NORM", "\n", "BLOCK", "=", "BasicBlockINBN", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resunet.STMinkUNetBase.__init__": [[498, 500], ["resunet.MinkUNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "\n", "", "class", "STResUNet18", "(", "STMinkUNetBase", ",", "ResUNet18", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.conditional_random_fields.MeanField.__init__": [[29, 67], ["models.backbone.sparseconv.models_sparseconv.model.HighDimensionalModel.__init__", "MinkowskiEngine.MinkowskiConvolution", "MinkowskiEngine.convert_region_type", "range", "torch.Softmax", "torch.Softmax", "MinkowskiEngine.MinkowskiConvolutionFunction", "MinkowskiEngine.convert_region_type"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.convert_region_type", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.convert_region_type"], ["def", "__init__", "(", "self", ",", "nchannels", ",", "spatial_sigma", ",", "chromatic_sigma", ",", "meanfield_iterations", ",", "is_temporal", ",", "\n", "config", ",", "**", "kwargs", ")", ":", "\n", "    ", "D", "=", "7", "if", "is_temporal", "else", "6", "\n", "self", ".", "is_temporal", "=", "is_temporal", "\n", "# Setup metadata", "\n", "super", "(", "MeanField", ",", "self", ")", ".", "__init__", "(", "nchannels", ",", "nchannels", ",", "config", ",", "D", "=", "D", ")", "\n", "\n", "self", ".", "spatial_sigma", "=", "spatial_sigma", "\n", "self", ".", "chromatic_sigma", "=", "chromatic_sigma", "\n", "# temporal sigma is 1", "\n", "self", ".", "meanfield_iterations", "=", "meanfield_iterations", "\n", "\n", "self", ".", "pixel_dist", "=", "1", "\n", "self", ".", "stride", "=", "1", "\n", "self", ".", "dilation", "=", "1", "\n", "\n", "conv", "=", "MinkowskiConvolution", "(", "\n", "nchannels", ",", "\n", "nchannels", ",", "\n", "kernel_size", "=", "config", ".", "wrapper_kernel_size", ",", "\n", "has_bias", "=", "False", ",", "\n", "region_type", "=", "convert_region_type", "(", "config", ".", "wrapper_region_type", ")", ",", "\n", "dimension", "=", "D", ")", "\n", "\n", "# Create a region_offset", "\n", "self", ".", "region_type_", ",", "self", ".", "region_offset_", ",", "_", "=", "me_convert_region_type", "(", "\n", "conv", ".", "region_type", ",", "1", ",", "conv", ".", "kernel_size", ",", "conv", ".", "up_stride", ",", "conv", ".", "dilation", ",", "conv", ".", "region_offset", ",", "\n", "conv", ".", "axis_types", ",", "conv", ".", "dimension", ")", "\n", "\n", "# Check whether the mapping is required", "\n", "self", ".", "requires_mapping", "=", "False", "\n", "self", ".", "conv", "=", "conv", "\n", "self", ".", "kernel", "=", "conv", ".", "kernel", "\n", "self", ".", "convs", "=", "{", "}", "\n", "self", ".", "softmaxes", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "self", ".", "meanfield_iterations", ")", ":", "\n", "      ", "self", ".", "softmaxes", "[", "i", "]", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "self", ".", "convs", "[", "i", "]", "=", "MinkowskiConvolutionFunction", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.conditional_random_fields.MeanField.initialize_coords": [[68, 124], ["torch.prod", "torch.prod", "torch.prod", "torch.prod", "model.get_coords", "model.permute_feature().int", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "conditional_random_fields.MeanField.get_index_map", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "conditional_random_fields.MeanField.get_index_map", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.sparse.FloatTensor", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "MinkowskiEngine.convert_to_int_tensor", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.Size", "torch.Size", "torch.Size", "torch.Size", "model.permute_feature", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "conditional_random_fields.MeanField.size", "conditional_random_fields.MeanField.size", "conditional_random_fields.MeanField.in_mapping.cuda", "conditional_random_fields.MeanField.out_mapping.cuda", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "torch.floor().int", "conditional_random_fields.MeanField.long", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "conditional_random_fields.MeanField.size", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "conditional_random_fields.MeanField.long", "conditional_random_fields.MeanField.size", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "conditional_random_fields.MeanField.size", "conditional_random_fields.MeanField.size", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "out_coords[].float", "model.permute_feature().int.float", "in_coords[].float", "in_color.float", "in_coords[].float", "in_color.float"], "methods", ["None"], ["", "", "def", "initialize_coords", "(", "self", ",", "model", ",", "in_coords", ",", "in_color", ")", ":", "\n", "    ", "if", "torch", ".", "prod", "(", "convert_to_int_tensor", "(", "model", ".", "OUT_PIXEL_DIST", ",", "model", ".", "D", ")", ")", "!=", "1", ":", "\n", "      ", "self", ".", "requires_mapping", "=", "True", "\n", "\n", "out_coords", "=", "model", ".", "get_coords", "(", "model", ".", "OUT_PIXEL_DIST", ")", "\n", "out_color", "=", "model", ".", "permute_feature", "(", "in_color", ",", "model", ".", "OUT_PIXEL_DIST", ")", ".", "int", "(", ")", "\n", "\n", "# Tri/Bi-lateral grid", "\n", "out_tri_coords", "=", "torch", ".", "cat", "(", "\n", "[", "\n", "(", "torch", ".", "floor", "(", "out_coords", "[", ":", ",", ":", "3", "]", ".", "float", "(", ")", "/", "self", ".", "spatial_sigma", ")", ")", ".", "int", "(", ")", ",", "\n", "(", "torch", ".", "floor", "(", "out_color", ".", "float", "(", ")", "/", "self", ".", "chromatic_sigma", ")", ")", ".", "int", "(", ")", ",", "\n", "out_coords", "[", ":", ",", "3", ":", "]", "# (time and) batch", "\n", "]", ",", "\n", "dim", "=", "1", ")", "\n", "orig_tri_coords", "=", "torch", ".", "cat", "(", "\n", "[", "\n", "(", "torch", ".", "floor", "(", "in_coords", "[", ":", ",", ":", "3", "]", ".", "float", "(", ")", "/", "self", ".", "spatial_sigma", ")", ")", ".", "int", "(", ")", ",", "\n", "(", "torch", ".", "floor", "(", "in_color", ".", "float", "(", ")", "/", "self", ".", "chromatic_sigma", ")", ")", ".", "int", "(", ")", ",", "\n", "in_coords", "[", ":", ",", "3", ":", "]", "# (time and) batch", "\n", "]", ",", "\n", "dim", "=", "1", ")", "\n", "\n", "crf_tri_coords", "=", "torch", ".", "cat", "(", "(", "out_tri_coords", ",", "orig_tri_coords", ")", ",", "dim", "=", "0", ")", "\n", "\n", "# Create a trilateral Grid", "\n", "# super(MeanField, self).initialize_coords_with_duplicates(crf_tri_coords)", "\n", "\n", "# Create Sparse matrix mappings to/from the CRF coords", "\n", "in_cols", "=", "self", ".", "get_index_map", "(", "out_tri_coords", ",", "1", ")", "\n", "self", ".", "in_mapping", "=", "torch", ".", "sparse", ".", "FloatTensor", "(", "\n", "torch", ".", "stack", "(", "(", "in_cols", ".", "long", "(", ")", ",", "torch", ".", "arange", "(", "in_cols", ".", "size", "(", "0", ")", ",", "out", "=", "torch", ".", "LongTensor", "(", ")", ")", ")", ")", ",", "\n", "torch", ".", "ones", "(", "in_cols", ".", "size", "(", "0", ")", ")", ",", "torch", ".", "Size", "(", "(", "self", ".", "n_rows", ",", "in_cols", ".", "size", "(", "0", ")", ")", ")", ")", "\n", "\n", "out_cols", "=", "self", ".", "get_index_map", "(", "orig_tri_coords", ",", "1", ")", "\n", "self", ".", "out_mapping", "=", "torch", ".", "sparse", ".", "FloatTensor", "(", "\n", "torch", ".", "stack", "(", "(", "torch", ".", "arange", "(", "out_cols", ".", "size", "(", "0", ")", ",", "out", "=", "torch", ".", "LongTensor", "(", ")", ")", ",", "out_cols", ".", "long", "(", ")", ")", ")", ",", "\n", "torch", ".", "ones", "(", "out_cols", ".", "size", "(", "0", ")", ")", ",", "torch", ".", "Size", "(", "(", "out_cols", ".", "size", "(", "0", ")", ",", "self", ".", "n_rows", ")", ")", ")", "\n", "\n", "if", "self", ".", "config", ".", "is_cuda", ":", "\n", "        ", "self", ".", "in_mapping", ",", "self", ".", "out_mapping", "=", "self", ".", "in_mapping", ".", "cuda", "(", ")", ",", "self", ".", "out_mapping", ".", "cuda", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "      ", "self", ".", "requires_mapping", "=", "False", "\n", "\n", "out_coords", "=", "in_coords", "\n", "out_color", "=", "in_color", "\n", "crf_tri_coords", "=", "torch", ".", "cat", "(", "\n", "[", "\n", "(", "torch", ".", "floor", "(", "in_coords", "[", ":", ",", ":", "3", "]", ".", "float", "(", ")", "/", "self", ".", "spatial_sigma", ")", ")", ".", "int", "(", ")", ",", "\n", "(", "torch", ".", "floor", "(", "in_color", ".", "float", "(", ")", "/", "self", ".", "chromatic_sigma", ")", ")", ".", "int", "(", ")", ",", "\n", "in_coords", "[", ":", ",", "3", ":", "]", ",", "# (time and) batch", "\n", "]", ",", "\n", "dim", "=", "1", ")", "\n", "\n", "", "return", "crf_tri_coords", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.conditional_random_fields.MeanField.forward": [[125, 147], ["range", "MinkowskiEngine.SparseTensor", "conditional_random_fields.MeanField.convs[].apply", "models.backbone.sparseconv.lib.math_functions.SparseMM", "torch.autograd.Variable", "torch.autograd.Variable", "models.backbone.sparseconv.lib.math_functions.SparseMM", "torch.autograd.Variable", "torch.autograd.Variable"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "xf", "=", "x", ".", "F", "\n", "if", "self", ".", "requires_mapping", ":", "\n", "# Map the network output to CRF input", "\n", "      ", "xf", "=", "SparseMM", "(", ")", "(", "Variable", "(", "self", ".", "in_mapping", ")", ",", "xf", ")", "\n", "\n", "", "out", "=", "xf", "\n", "for", "i", "in", "range", "(", "self", ".", "meanfield_iterations", ")", ":", "# Meanfield iteration", "\n", "# Normalization", "\n", "      ", "out", "=", "self", ".", "softmaxes", "[", "i", "]", "(", "out", ")", "\n", "# Pairwise potential", "\n", "out", "=", "self", ".", "convs", "[", "i", "]", ".", "apply", "(", "out", ",", "self", ".", "conv", ".", "kernel", ",", "x", ".", "pixel_dist", ",", "self", ".", "conv", ".", "stride", ",", "\n", "self", ".", "conv", ".", "kernel_size", ",", "self", ".", "conv", ".", "dilation", ",", "self", ".", "region_type_", ",", "\n", "self", ".", "region_offset_", ",", "x", ".", "coords_key", ",", "x", ".", "coords_key", ",", "x", ".", "C", ")", "\n", "# Add unary", "\n", "out", "+=", "xf", "\n", "\n", "", "if", "self", ".", "requires_mapping", ":", "\n", "# Map the CRF output to the origianl space", "\n", "      ", "out", "=", "SparseMM", "(", ")", "(", "Variable", "(", "self", ".", "out_mapping", ")", ",", "out", ")", "\n", "\n", "", "return", "SparseTensor", "(", "out", ",", "coords_key", "=", "x", ".", "coords_key", ",", "coords_manager", "=", "x", ".", "C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.conditional_random_fields.BilateralCRF.initialize_filter": [[152, 161], ["NetClass", "conditional_random_fields.MeanField"], "methods", ["None"], ["def", "initialize_filter", "(", "self", ",", "NetClass", ",", "in_nchannel", ",", "out_nchannel", ",", "config", ")", ":", "\n", "    ", "self", ".", "model", "=", "NetClass", "(", "in_nchannel", ",", "out_nchannel", ",", "config", ")", "\n", "self", ".", "filter", "=", "MeanField", "(", "\n", "out_nchannel", ",", "\n", "spatial_sigma", "=", "config", ".", "crf_spatial_sigma", ",", "\n", "chromatic_sigma", "=", "config", ".", "crf_chromatic_sigma", ",", "\n", "meanfield_iterations", "=", "config", ".", "meanfield_iterations", ",", "\n", "is_temporal", "=", "False", ",", "\n", "config", "=", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.conditional_random_fields.TrilateralCRF.initialize_filter": [[166, 175], ["NetClass", "conditional_random_fields.MeanField"], "methods", ["None"], ["def", "initialize_filter", "(", "self", ",", "NetClass", ",", "in_nchannel", ",", "out_nchannel", ",", "config", ")", ":", "\n", "    ", "self", ".", "model", "=", "NetClass", "(", "in_nchannel", ",", "out_nchannel", ",", "config", ")", "\n", "self", ".", "filter", "=", "MeanField", "(", "\n", "out_nchannel", ",", "\n", "spatial_sigma", "=", "config", ".", "crf_spatial_sigma", ",", "\n", "chromatic_sigma", "=", "config", ".", "crf_chromatic_sigma", ",", "\n", "meanfield_iterations", "=", "config", ".", "meanfield_iterations", ",", "\n", "is_temporal", "=", "True", ",", "\n", "config", "=", "config", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resnet.ResNetBase.__init__": [[24, 32], ["models.backbone.sparseconv.models_sparseconv.model.Model.__init__", "resnet.ResNetBase.network_initialization", "resnet.ResNetBase.weight_initialization"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.res16unet.Res16UNetBase.network_initialization", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase.weight_initialization"], ["\n", "self", ".", "network_initialization", "(", "in_channels", ",", "out_channels", ",", "config", ",", "D", ")", "\n", "self", ".", "weight_initialization", "(", ")", "\n", "\n", "", "def", "network_initialization", "(", "self", ",", "in_channels", ",", "out_channels", ",", "config", ",", "D", ")", ":", "\n", "\n", "    ", "def", "space_n_time_m", "(", "n", ",", "m", ")", ":", "\n", "      ", "return", "n", "if", "D", "==", "3", "else", "[", "n", ",", "n", ",", "n", ",", "m", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resnet.ResNetBase.network_initialization": [[33, 82], ["models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.modules.common.get_norm", "MinkowskiEngine.MinkowskiReLU", "models.backbone.sparseconv.models_sparseconv.modules.common.sum_pool", "resnet.ResNetBase._make_layer", "resnet.ResNetBase._make_layer", "resnet.ResNetBase._make_layer", "resnet.ResNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "resnet.ResNetBase.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.sum_pool", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv"], ["", "if", "D", "==", "4", ":", "\n", "      ", "self", ".", "OUT_PIXEL_DIST", "=", "space_n_time_m", "(", "self", ".", "OUT_PIXEL_DIST", ",", "1", ")", "\n", "\n", "", "dilations", "=", "config", ".", "dilations", "\n", "bn_momentum", "=", "config", ".", "bn_momentum", "\n", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "self", ".", "conv1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "D", "=", "D", ")", "\n", "\n", "self", ".", "bn1", "=", "get_norm", "(", "NormType", ".", "BATCH_NORM", ",", "self", ".", "inplanes", ",", "D", "=", "self", ".", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "relu", "=", "ME", ".", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "pool", "=", "sum_pool", "(", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "D", "=", "D", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "0", "]", ",", "1", ")", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "1", "]", ",", "1", ")", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "2", "]", ",", "1", ")", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "3", "]", ",", "1", ")", ")", "\n", "\n", "self", ".", "final", "=", "conv", "(", "\n", "self", ".", "PLANES", "[", "3", "]", "*", "self", ".", "BLOCK", ".", "expansion", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "\n", "", "def", "weight_initialization", "(", "self", ")", ":", "\n", "    ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "      ", "if", "isinstance", "(", "m", ",", "ME", ".", "MinkowskiBatchNorm", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn", ".", "bias", ",", "0", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resnet.ResNetBase.weight_initialization": [[83, 88], ["resnet.ResNetBase.modules", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["\n", "", "", "", "def", "_make_layer", "(", "self", ",", "\n", "block", ",", "\n", "planes", ",", "\n", "blocks", ",", "\n", "stride", "=", "1", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resnet.ResNetBase._make_layer": [[89, 131], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.modules.common.get_norm", "block"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["dilation", "=", "1", ",", "\n", "norm_type", "=", "NormType", ".", "BATCH_NORM", ",", "\n", "bn_momentum", "=", "0.1", ")", ":", "\n", "    ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "      ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "False", ",", "\n", "D", "=", "self", ".", "D", ")", ",", "\n", "get_norm", "(", "norm_type", ",", "planes", "*", "block", ".", "expansion", ",", "D", "=", "self", ".", "D", ",", "bn_momentum", "=", "bn_momentum", ")", ",", "\n", ")", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "\n", "downsample", "=", "downsample", ",", "\n", "conv_type", "=", "self", ".", "CONV_TYPE", ",", "\n", "D", "=", "self", ".", "D", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "      ", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "dilation", ",", "\n", "conv_type", "=", "self", ".", "CONV_TYPE", ",", "\n", "D", "=", "self", ".", "D", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resnet.ResNetBase.forward": [[132, 145], ["resnet.ResNetBase.conv1", "resnet.ResNetBase.bn1", "resnet.ResNetBase.relu", "resnet.ResNetBase.pool", "resnet.ResNetBase.layer1", "resnet.ResNetBase.layer2", "resnet.ResNetBase.layer3", "resnet.ResNetBase.layer4", "resnet.ResNetBase.final"], "methods", ["None"], ["\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n", "\n", "", "", "class", "ResNet14", "(", "ResNetBase", ")", ":", "\n", "  ", "BLOCK", "=", "BasicBlock", "\n", "LAYERS", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.resnet.STResNetBase.__init__": [[176, 178], ["resnet.ResNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["  ", "pass", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.wrapper.Wrapper.__init__": [[18, 21], ["torch.nn.Module.__init__", "wrapper.Wrapper.initialize_filter"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.wrapper.Wrapper.initialize_filter"], ["    ", "raise", "NotImplementedError", "(", "'Must initialize a model and a filter'", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "coords", ",", "colors", "=", "None", ")", ":", "\n", "    ", "soutput", "=", "self", ".", "model", "(", "x", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.wrapper.Wrapper.initialize_filter": [[22, 24], ["NotImplementedError"], "methods", ["None"], ["\n", "# During training, make the network invariant to the filter", "\n", "if", "not", "self", ".", "training", "or", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.wrapper.Wrapper.forward": [[25, 36], ["wrapper.Wrapper.model", "wrapper.Wrapper.filter.initialize_coords", "MinkowskiEngine.SparseTensor", "wrapper.Wrapper.filter", "random.random"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.conditional_random_fields.MeanField.initialize_coords"], ["# Filter requires the model to finish the forward pass", "\n", "      ", "wrapper_coords", "=", "self", ".", "filter", ".", "initialize_coords", "(", "self", ".", "model", ",", "coords", ",", "colors", ")", "\n", "finput", "=", "SparseTensor", "(", "soutput", ".", "F", ",", "wrapper_coords", ")", "\n", "soutput", "=", "self", ".", "filter", "(", "finput", ")", "\n", "\n", "", "return", "soutput", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.model.Model.__init__": [[18, 23], ["MinkowskiEngine.MinkowskiNetwork.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "", "", "class", "HighDimensionalModel", "(", "Model", ")", ":", "\n", "  ", "\"\"\"\n  Base network for all spatio (temporal) chromatic sparse convnet\n  \"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.model.HighDimensionalModel.__init__": [[30, 33], ["model.Model.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.res16unet.Res16UNetBase.__init__": [[27, 29], ["models.backbone.sparseconv.models_sparseconv.resnet.ResNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "dilations", "=", "self", ".", "DILATIONS", "\n", "bn_momentum", "=", "config", ".", "optimizer", ".", "bn_momentum", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.res16unet.Res16UNetBase.network_initialization": [[30, 200], ["models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv_tr", "models.backbone.sparseconv.models_sparseconv.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "models.backbone.sparseconv.models_sparseconv.modules.common.conv", "MinkowskiEngine.MinkowskiReLU", "res16unet.Res16UNetBase.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv"], ["def", "space_n_time_m", "(", "n", ",", "m", ")", ":", "\n", "      ", "return", "n", "if", "D", "==", "3", "else", "[", "n", ",", "n", ",", "n", ",", "m", "]", "\n", "\n", "", "if", "D", "==", "4", ":", "\n", "      ", "self", ".", "OUT_PIXEL_DIST", "=", "space_n_time_m", "(", "self", ".", "OUT_PIXEL_DIST", ",", "1", ")", "\n", "\n", "# Output of the first conv concated to conv6", "\n", "", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "print", "(", "\"building model, \"", ",", "in_channels", ")", "\n", "self", ".", "conv0p1s1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "net", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "\n", "self", ".", "bn0", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv1p1s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "dilation", "=", "dilations", "[", "0", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv2p2s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "dilation", "=", "dilations", "[", "1", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv3p4s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn3", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "dilation", "=", "dilations", "[", "2", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv4p8s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "dilation", "=", "dilations", "[", "3", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr4p16s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "4", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "4", "]", "+", "self", ".", "PLANES", "[", "2", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block5", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "self", ".", "LAYERS", "[", "4", "]", ",", "\n", "dilation", "=", "dilations", "[", "4", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr5p8s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr5", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "5", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "5", "]", "+", "self", ".", "PLANES", "[", "1", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block6", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "self", ".", "LAYERS", "[", "5", "]", ",", "\n", "dilation", "=", "dilations", "[", "5", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr6p4s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr6", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "6", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "6", "]", "+", "self", ".", "PLANES", "[", "0", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block7", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "self", ".", "LAYERS", "[", "6", "]", ",", "\n", "dilation", "=", "dilations", "[", "6", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr7p2s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "7", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr7", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "7", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "7", "]", "+", "self", ".", "INIT_DIM", "\n", "self", ".", "block8", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "7", "]", ",", "\n", "self", ".", "LAYERS", "[", "7", "]", ",", "\n", "dilation", "=", "dilations", "[", "7", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "final", "=", "conv", "(", "self", ".", "PLANES", "[", "7", "]", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "self", ".", "relu", "=", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "offsets_pre", "=", "conv", "(", "self", ".", "inplanes", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "self", ".", "bntr_offset", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "offsets", "=", "conv", "(", "self", ".", "inplanes", ",", "3", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.res16unet.Res16UNetBase.forward": [[201, 260], ["res16unet.Res16UNetBase.conv0p1s1", "res16unet.Res16UNetBase.bn0", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.conv1p1s2", "res16unet.Res16UNetBase.bn1", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block1", "res16unet.Res16UNetBase.conv2p2s2", "res16unet.Res16UNetBase.bn2", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block2", "res16unet.Res16UNetBase.conv3p4s2", "res16unet.Res16UNetBase.bn3", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block3", "res16unet.Res16UNetBase.conv4p8s2", "res16unet.Res16UNetBase.bn4", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block4", "res16unet.Res16UNetBase.convtr4p16s2", "res16unet.Res16UNetBase.bntr4", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block5", "res16unet.Res16UNetBase.convtr5p8s2", "res16unet.Res16UNetBase.bntr5", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block6", "res16unet.Res16UNetBase.convtr6p4s2", "res16unet.Res16UNetBase.bntr6", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block7", "res16unet.Res16UNetBase.convtr7p2s2", "res16unet.Res16UNetBase.bntr7", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block8", "res16unet.Res16UNetBase.final"], "methods", ["None"], ["\n", "", "def", "forward", "(", "self", ",", "x", ",", "detach", "=", "False", ")", ":", "\n", "    ", "out", "=", "self", ".", "conv0p1s1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn0", "(", "out", ")", "\n", "out_p1", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv1p1s2", "(", "out_p1", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out_b1p2", "=", "self", ".", "block1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2p2s2", "(", "out_b1p2", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out_b2p4", "=", "self", ".", "block2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3p4s2", "(", "out_b2p4", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out_b3p8", "=", "self", ".", "block3", "(", "out", ")", "\n", "\n", "# pixel_dist=16", "\n", "out", "=", "self", ".", "conv4p8s2", "(", "out_b3p8", ")", "\n", "out", "=", "self", ".", "bn4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "block4", "(", "out", ")", "\n", "\n", "# pixel_dist=8", "\n", "out", "=", "self", ".", "convtr4p16s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b3p8", ")", "\n", "out", "=", "self", ".", "block5", "(", "out", ")", "\n", "\n", "# pixel_dist=4", "\n", "out", "=", "self", ".", "convtr5p8s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr5", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b2p4", ")", "\n", "out", "=", "self", ".", "block6", "(", "out", ")", "\n", "\n", "# pixel_dist=2", "\n", "out", "=", "self", ".", "convtr6p4s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr6", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b1p2", ")", "\n", "out", "=", "self", ".", "block7", "(", "out", ")", "\n", "\n", "# pixel_dist=1", "\n", "out", "=", "self", ".", "convtr7p2s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr7", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_p1", ")", "\n", "out", "=", "self", ".", "block8", "(", "out", ")", "\n", "\n", "offsets", "=", "self", ".", "offsets_pre", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.res16unet.STRes16UNetBase.__init__": [[343, 345], ["res16unet.Res16UNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["\n", "\n", "", "class", "STRes16UNetBase", "(", "Res16UNetBase", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.__init__.add_models": [[15, 17], ["MODELS.extend", "getattr", "dir", "models.backbone.sparseconv.models_sparseconv.resunet", "models.backbone.sparseconv.models_sparseconv.res16unet"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.__init__.get_models": [[25, 28], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.__init__.get_wrappers": [[30, 32], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.__init__.load_model": [[34, 49], ["__init__.get_models", "print", "print"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.__init__.get_models"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.__init__.load_wrapper": [[51, 66], ["__init__.get_wrappers", "print", "print"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.models_sparseconv.__init__.get_wrappers"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules._PointnetSAModuleBase.__init__": [[28, 33], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "npoint", "=", "None", "\n", "self", ".", "groupers", "=", "None", "\n", "self", ".", "mlps", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules._PointnetSAModuleBase.forward": [[34, 76], ["xyz.transpose().contiguous", "range", "pointnet2_utils.gather_operation().transpose().contiguous", "len", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "new_features.squeeze.squeeze.squeeze", "new_features_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "xyz.transpose", "pointnet2_utils.gather_operation().transpose", "new_features.squeeze.squeeze.size", "pointnet2_utils.gather_operation", "pointnet2_utils.furthest_point_sample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "\n", "features", ":", "torch", ".", "Tensor", "=", "None", ")", "->", "(", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "r\"\"\"\n        Parameters\n        ----------\n        xyz : torch.Tensor\n            (B, N, 3) tensor of the xyz coordinates of the features\n        features : torch.Tensor\n            (B, N, C) tensor of the descriptors of the the features\n\n        Returns\n        -------\n        new_xyz : torch.Tensor\n            (B, npoint, 3) tensor of the new features' xyz\n        new_features : torch.Tensor\n            (B, npoint, \\sum_k(mlps[k][-1])) tensor of the new_features descriptors\n        \"\"\"", "\n", "\n", "new_features_list", "=", "[", "]", "\n", "\n", "xyz_flipped", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "new_xyz", "=", "pointnet2_utils", ".", "gather_operation", "(", "\n", "xyz_flipped", ",", "\n", "pointnet2_utils", ".", "furthest_point_sample", "(", "xyz", ",", "self", ".", "npoint", ")", "\n", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "if", "self", ".", "npoint", "is", "not", "None", "else", "None", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "groupers", ")", ")", ":", "\n", "            ", "new_features", "=", "self", ".", "groupers", "[", "i", "]", "(", "\n", "xyz", ",", "new_xyz", ",", "features", "\n", ")", "# (B, C, npoint, nsample)", "\n", "\n", "new_features", "=", "self", ".", "mlps", "[", "i", "]", "(", "\n", "new_features", "\n", ")", "# (B, mlp[-1], npoint, nsample)", "\n", "new_features", "=", "F", ".", "max_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], npoint, 1)", "\n", "new_features", "=", "new_features", ".", "squeeze", "(", "-", "1", ")", "# (B, mlp[-1], npoint)", "\n", "\n", "new_features_list", ".", "append", "(", "new_features", ")", "\n", "\n", "", "return", "new_xyz", ",", "torch", ".", "cat", "(", "new_features_list", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetSAModuleMSG.__init__": [[95, 125], ["pointnet2_modules._PointnetSAModuleBase.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "len", "len", "len", "len", "pointnet2_modules.PointnetSAModuleMSG.groupers.append", "pointnet2_modules.PointnetSAModuleMSG.mlps.append", "pytorch_utils.SharedMLP", "pointnet2_utils.QueryAndGroup", "pointnet2_utils.GroupAll"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "*", ",", "\n", "npoint", ":", "int", ",", "\n", "radii", ":", "List", "[", "float", "]", ",", "\n", "nsamples", ":", "List", "[", "int", "]", ",", "\n", "mlps", ":", "List", "[", "List", "[", "int", "]", "]", ",", "\n", "bn", ":", "bool", "=", "True", ",", "\n", "use_xyz", ":", "bool", "=", "True", ",", "\n", "sample_uniformly", ":", "bool", "=", "False", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "len", "(", "radii", ")", "==", "len", "(", "nsamples", ")", "==", "len", "(", "mlps", ")", "\n", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "groupers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlps", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "radii", ")", ")", ":", "\n", "            ", "radius", "=", "radii", "[", "i", "]", "\n", "nsample", "=", "nsamples", "[", "i", "]", "\n", "self", ".", "groupers", ".", "append", "(", "\n", "pointnet2_utils", ".", "QueryAndGroup", "(", "radius", ",", "nsample", ",", "use_xyz", "=", "use_xyz", ",", "sample_uniformly", "=", "sample_uniformly", ")", "\n", "if", "npoint", "is", "not", "None", "else", "pointnet2_utils", ".", "GroupAll", "(", "use_xyz", ")", "\n", ")", "\n", "mlp_spec", "=", "mlps", "[", "i", "]", "\n", "if", "use_xyz", ":", "\n", "                ", "mlp_spec", "[", "0", "]", "+=", "3", "\n", "\n", "", "self", ".", "mlps", ".", "append", "(", "pt_utils", ".", "SharedMLP", "(", "mlp_spec", ",", "bn", "=", "bn", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetSAModule.__init__": [[144, 161], ["pointnet2_modules.PointnetSAModuleMSG.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "*", ",", "\n", "mlp", ":", "List", "[", "int", "]", ",", "\n", "npoint", ":", "int", "=", "None", ",", "\n", "radius", ":", "float", "=", "None", ",", "\n", "nsample", ":", "int", "=", "None", ",", "\n", "bn", ":", "bool", "=", "True", ",", "\n", "use_xyz", ":", "bool", "=", "True", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "mlps", "=", "[", "mlp", "]", ",", "\n", "npoint", "=", "npoint", ",", "\n", "radii", "=", "[", "radius", "]", ",", "\n", "nsamples", "=", "[", "nsample", "]", ",", "\n", "bn", "=", "bn", ",", "\n", "use_xyz", "=", "use_xyz", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetSAModuleVotes.__init__": [[168, 208], ["torch.Module.__init__", "pytorch_utils.SharedMLP", "pointnet2_utils.QueryAndGroup", "pointnet2_utils.GroupAll", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "*", ",", "\n", "mlp", ":", "List", "[", "int", "]", ",", "\n", "npoint", ":", "int", "=", "None", ",", "\n", "radius", ":", "float", "=", "None", ",", "\n", "nsample", ":", "int", "=", "None", ",", "\n", "bn", ":", "bool", "=", "True", ",", "\n", "use_xyz", ":", "bool", "=", "True", ",", "\n", "pooling", ":", "str", "=", "'max'", ",", "\n", "sigma", ":", "float", "=", "None", ",", "# for RBF pooling", "\n", "normalize_xyz", ":", "bool", "=", "False", ",", "# noramlize local XYZ with radius", "\n", "sample_uniformly", ":", "bool", "=", "False", ",", "\n", "ret_unique_cnt", ":", "bool", "=", "False", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "radius", "=", "radius", "\n", "self", ".", "nsample", "=", "nsample", "\n", "self", ".", "pooling", "=", "pooling", "\n", "self", ".", "mlp_module", "=", "None", "\n", "self", ".", "use_xyz", "=", "use_xyz", "\n", "self", ".", "sigma", "=", "sigma", "\n", "if", "self", ".", "sigma", "is", "None", ":", "\n", "            ", "self", ".", "sigma", "=", "self", ".", "radius", "/", "2", "\n", "", "self", ".", "normalize_xyz", "=", "normalize_xyz", "\n", "self", ".", "ret_unique_cnt", "=", "ret_unique_cnt", "\n", "\n", "if", "npoint", "is", "not", "None", ":", "\n", "            ", "self", ".", "grouper", "=", "pointnet2_utils", ".", "QueryAndGroup", "(", "radius", ",", "nsample", ",", "\n", "use_xyz", "=", "use_xyz", ",", "ret_grouped_xyz", "=", "True", ",", "normalize_xyz", "=", "normalize_xyz", ",", "\n", "sample_uniformly", "=", "sample_uniformly", ",", "ret_unique_cnt", "=", "ret_unique_cnt", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "grouper", "=", "pointnet2_utils", ".", "GroupAll", "(", "use_xyz", ",", "ret_grouped_xyz", "=", "True", ")", "\n", "\n", "", "mlp_spec", "=", "mlp", "\n", "if", "use_xyz", "and", "len", "(", "mlp_spec", ")", ">", "0", ":", "\n", "            ", "mlp_spec", "[", "0", "]", "+=", "3", "\n", "", "self", ".", "mlp_module", "=", "pt_utils", ".", "SharedMLP", "(", "mlp_spec", ",", "bn", "=", "bn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetSAModuleVotes.forward": [[210, 273], ["xyz.transpose().contiguous", "pointnet2_modules.PointnetSAModuleVotes.mlp_module", "torch.avg_pool2d.squeeze", "pointnet2_utils.furthest_point_sample", "pointnet2_utils.gather_operation().transpose().contiguous", "pointnet2_modules.PointnetSAModuleVotes.grouper", "pointnet2_modules.PointnetSAModuleVotes.grouper", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "xyz.transpose", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "pointnet2_utils.gather_operation().transpose", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.avg_pool2d.size", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "float", "pointnet2_utils.gather_operation", "torch.avg_pool2d.size", "torch.exp.unsqueeze", "torch.exp.unsqueeze", "torch.exp.unsqueeze", "grouped_xyz.pow().sum", "grouped_xyz.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "\n", "features", ":", "torch", ".", "Tensor", "=", "None", ",", "\n", "inds", ":", "torch", ".", "Tensor", "=", "None", ")", "->", "(", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "r\"\"\"\n        Parameters\n        ----------\n        xyz : torch.Tensor\n            (B, N, 3) tensor of the xyz coordinates of the features\n        features : torch.Tensor\n            (B, C, N) tensor of the descriptors of the the features\n        inds : torch.Tensor\n            (B, npoint) tensor that stores index to the xyz points (values in 0-N-1)\n\n        Returns\n        -------\n        new_xyz : torch.Tensor\n            (B, npoint, 3) tensor of the new features' xyz\n        new_features : torch.Tensor\n            (B, \\sum_k(mlps[k][-1]), npoint) tensor of the new_features descriptors\n        inds: torch.Tensor\n            (B, npoint) tensor of the inds\n        \"\"\"", "\n", "\n", "xyz_flipped", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "if", "inds", "is", "None", ":", "\n", "            ", "inds", "=", "pointnet2_utils", ".", "furthest_point_sample", "(", "xyz", ",", "self", ".", "npoint", ")", "\n", "", "else", ":", "\n", "            ", "assert", "(", "inds", ".", "shape", "[", "1", "]", "==", "self", ".", "npoint", ")", "\n", "", "new_xyz", "=", "pointnet2_utils", ".", "gather_operation", "(", "\n", "xyz_flipped", ",", "inds", "\n", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "if", "self", ".", "npoint", "is", "not", "None", "else", "None", "\n", "\n", "if", "not", "self", ".", "ret_unique_cnt", ":", "\n", "            ", "grouped_features", ",", "grouped_xyz", "=", "self", ".", "grouper", "(", "\n", "xyz", ",", "new_xyz", ",", "features", "\n", ")", "# (B, C, npoint, nsample)", "\n", "", "else", ":", "\n", "            ", "grouped_features", ",", "grouped_xyz", ",", "unique_cnt", "=", "self", ".", "grouper", "(", "\n", "xyz", ",", "new_xyz", ",", "features", "\n", ")", "# (B, C, npoint, nsample), (B,3,npoint,nsample), (B,npoint)", "\n", "\n", "", "new_features", "=", "self", ".", "mlp_module", "(", "\n", "grouped_features", "\n", ")", "# (B, mlp[-1], npoint, nsample)", "\n", "if", "self", ".", "pooling", "==", "'max'", ":", "\n", "            ", "new_features", "=", "F", ".", "max_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], npoint, 1)", "\n", "", "elif", "self", ".", "pooling", "==", "'avg'", ":", "\n", "            ", "new_features", "=", "F", ".", "avg_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], npoint, 1)", "\n", "", "elif", "self", ".", "pooling", "==", "'rbf'", ":", "\n", "# Use radial basis function kernel for weighted sum of features (normalized by nsample and sigma)", "\n", "# Ref: https://en.wikipedia.org/wiki/Radial_basis_function_kernel", "\n", "            ", "rbf", "=", "torch", ".", "exp", "(", "-", "1", "*", "grouped_xyz", ".", "pow", "(", "2", ")", ".", "sum", "(", "1", ",", "keepdim", "=", "False", ")", "/", "(", "self", ".", "sigma", "**", "2", ")", "/", "2", ")", "# (B, npoint, nsample)", "\n", "new_features", "=", "torch", ".", "sum", "(", "new_features", "*", "rbf", ".", "unsqueeze", "(", "1", ")", ",", "-", "1", ",", "keepdim", "=", "True", ")", "/", "float", "(", "self", ".", "nsample", ")", "# (B, mlp[-1], npoint, 1)", "\n", "", "new_features", "=", "new_features", ".", "squeeze", "(", "-", "1", ")", "# (B, mlp[-1], npoint)", "\n", "\n", "if", "not", "self", ".", "ret_unique_cnt", ":", "\n", "            ", "return", "new_xyz", ",", "new_features", ",", "inds", "\n", "", "else", ":", "\n", "            ", "return", "new_xyz", ",", "new_features", ",", "inds", ",", "unique_cnt", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetSAModuleMSGVotes.__init__": [[278, 308], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "len", "len", "len", "len", "pointnet2_modules.PointnetSAModuleMSGVotes.groupers.append", "pointnet2_modules.PointnetSAModuleMSGVotes.mlps.append", "pytorch_utils.SharedMLP", "pointnet2_utils.QueryAndGroup", "pointnet2_utils.GroupAll"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "*", ",", "\n", "mlps", ":", "List", "[", "List", "[", "int", "]", "]", ",", "\n", "npoint", ":", "int", ",", "\n", "radii", ":", "List", "[", "float", "]", ",", "\n", "nsamples", ":", "List", "[", "int", "]", ",", "\n", "bn", ":", "bool", "=", "True", ",", "\n", "use_xyz", ":", "bool", "=", "True", ",", "\n", "sample_uniformly", ":", "bool", "=", "False", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "(", "len", "(", "mlps", ")", "==", "len", "(", "nsamples", ")", "==", "len", "(", "radii", ")", ")", "\n", "\n", "self", ".", "npoint", "=", "npoint", "\n", "self", ".", "groupers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlps", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "radii", ")", ")", ":", "\n", "            ", "radius", "=", "radii", "[", "i", "]", "\n", "nsample", "=", "nsamples", "[", "i", "]", "\n", "self", ".", "groupers", ".", "append", "(", "\n", "pointnet2_utils", ".", "QueryAndGroup", "(", "radius", ",", "nsample", ",", "use_xyz", "=", "use_xyz", ",", "sample_uniformly", "=", "sample_uniformly", ")", "\n", "if", "npoint", "is", "not", "None", "else", "pointnet2_utils", ".", "GroupAll", "(", "use_xyz", ")", "\n", ")", "\n", "mlp_spec", "=", "mlps", "[", "i", "]", "\n", "if", "use_xyz", ":", "\n", "                ", "mlp_spec", "[", "0", "]", "+=", "3", "\n", "\n", "", "self", ".", "mlps", ".", "append", "(", "pt_utils", ".", "SharedMLP", "(", "mlp_spec", ",", "bn", "=", "bn", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetSAModuleMSGVotes.forward": [[309, 354], ["xyz.transpose().contiguous", "range", "pointnet2_utils.furthest_point_sample", "pointnet2_utils.gather_operation().transpose().contiguous", "len", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "new_features.squeeze.squeeze.squeeze", "new_features_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "xyz.transpose", "pointnet2_utils.gather_operation().transpose", "new_features.squeeze.squeeze.size", "pointnet2_utils.gather_operation"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "xyz", ":", "torch", ".", "Tensor", ",", "\n", "features", ":", "torch", ".", "Tensor", "=", "None", ",", "inds", ":", "torch", ".", "Tensor", "=", "None", ")", "->", "(", "torch", ".", "Tensor", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "r\"\"\"\n        Parameters\n        ----------\n        xyz : torch.Tensor\n            (B, N, 3) tensor of the xyz coordinates of the features\n        features : torch.Tensor\n            (B, C, C) tensor of the descriptors of the the features\n        inds : torch.Tensor\n            (B, npoint) tensor that stores index to the xyz points (values in 0-N-1)\n\n        Returns\n        -------\n        new_xyz : torch.Tensor\n            (B, npoint, 3) tensor of the new features' xyz\n        new_features : torch.Tensor\n            (B, \\sum_k(mlps[k][-1]), npoint) tensor of the new_features descriptors\n        inds: torch.Tensor\n            (B, npoint) tensor of the inds\n        \"\"\"", "\n", "new_features_list", "=", "[", "]", "\n", "\n", "xyz_flipped", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "if", "inds", "is", "None", ":", "\n", "            ", "inds", "=", "pointnet2_utils", ".", "furthest_point_sample", "(", "xyz", ",", "self", ".", "npoint", ")", "\n", "", "new_xyz", "=", "pointnet2_utils", ".", "gather_operation", "(", "\n", "xyz_flipped", ",", "inds", "\n", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "if", "self", ".", "npoint", "is", "not", "None", "else", "None", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "groupers", ")", ")", ":", "\n", "            ", "new_features", "=", "self", ".", "groupers", "[", "i", "]", "(", "\n", "xyz", ",", "new_xyz", ",", "features", "\n", ")", "# (B, C, npoint, nsample)", "\n", "new_features", "=", "self", ".", "mlps", "[", "i", "]", "(", "\n", "new_features", "\n", ")", "# (B, mlp[-1], npoint, nsample)", "\n", "new_features", "=", "F", ".", "max_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], npoint, 1)", "\n", "new_features", "=", "new_features", ".", "squeeze", "(", "-", "1", ")", "# (B, mlp[-1], npoint)", "\n", "\n", "new_features_list", ".", "append", "(", "new_features", ")", "\n", "\n", "", "return", "new_xyz", ",", "torch", ".", "cat", "(", "new_features_list", ",", "dim", "=", "1", ")", ",", "inds", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetFPModule.__init__": [[367, 370], ["torch.Module.__init__", "pytorch_utils.SharedMLP"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "*", ",", "mlp", ":", "List", "[", "int", "]", ",", "bn", ":", "bool", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mlp", "=", "pt_utils", ".", "SharedMLP", "(", "mlp", ",", "bn", "=", "bn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetFPModule.forward": [[371, 417], ["torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "pointnet2_modules.PointnetFPModule.mlp", "torch.cat.squeeze", "torch.cat.squeeze", "torch.cat.squeeze", "pointnet2_utils.three_nn", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "pointnet2_utils.three_interpolate", "known_feats.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "unknown.size", "known_feats.size"], "methods", ["None"], ["", "def", "forward", "(", "\n", "self", ",", "unknown", ":", "torch", ".", "Tensor", ",", "known", ":", "torch", ".", "Tensor", ",", "\n", "unknow_feats", ":", "torch", ".", "Tensor", ",", "known_feats", ":", "torch", ".", "Tensor", "\n", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "r\"\"\"\n        Parameters\n        ----------\n        unknown : torch.Tensor\n            (B, n, 3) tensor of the xyz positions of the unknown features\n        known : torch.Tensor\n            (B, m, 3) tensor of the xyz positions of the known features\n        unknow_feats : torch.Tensor\n            (B, C1, n) tensor of the features to be propigated to\n        known_feats : torch.Tensor\n            (B, C2, m) tensor of features to be propigated\n\n        Returns\n        -------\n        new_features : torch.Tensor\n            (B, mlp[-1], n) tensor of the features of the unknown features\n        \"\"\"", "\n", "\n", "if", "known", "is", "not", "None", ":", "\n", "            ", "dist", ",", "idx", "=", "pointnet2_utils", ".", "three_nn", "(", "unknown", ",", "known", ")", "\n", "dist_recip", "=", "1.0", "/", "(", "dist", "+", "1e-8", ")", "\n", "norm", "=", "torch", ".", "sum", "(", "dist_recip", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "weight", "=", "dist_recip", "/", "norm", "\n", "\n", "interpolated_feats", "=", "pointnet2_utils", ".", "three_interpolate", "(", "\n", "known_feats", ",", "idx", ",", "weight", "\n", ")", "\n", "", "else", ":", "\n", "            ", "interpolated_feats", "=", "known_feats", ".", "expand", "(", "\n", "*", "known_feats", ".", "size", "(", ")", "[", "0", ":", "2", "]", ",", "unknown", ".", "size", "(", "1", ")", "\n", ")", "\n", "\n", "", "if", "unknow_feats", "is", "not", "None", ":", "\n", "            ", "new_features", "=", "torch", ".", "cat", "(", "[", "interpolated_feats", ",", "unknow_feats", "]", ",", "\n", "dim", "=", "1", ")", "#(B, C2 + C1, n)", "\n", "", "else", ":", "\n", "            ", "new_features", "=", "interpolated_feats", "\n", "\n", "", "new_features", "=", "new_features", ".", "unsqueeze", "(", "-", "1", ")", "\n", "new_features", "=", "self", ".", "mlp", "(", "new_features", ")", "\n", "\n", "return", "new_features", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetLFPModuleMSG.__init__": [[422, 453], ["torch.Module.__init__", "pytorch_utils.SharedMLP", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "len", "len", "len", "len", "pointnet2_modules.PointnetLFPModuleMSG.groupers.append", "pointnet2_modules.PointnetLFPModuleMSG.mlps.append", "pointnet2_utils.QueryAndGroup", "pytorch_utils.SharedMLP"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "*", ",", "\n", "mlps", ":", "List", "[", "List", "[", "int", "]", "]", ",", "\n", "radii", ":", "List", "[", "float", "]", ",", "\n", "nsamples", ":", "List", "[", "int", "]", ",", "\n", "post_mlp", ":", "List", "[", "int", "]", ",", "\n", "bn", ":", "bool", "=", "True", ",", "\n", "use_xyz", ":", "bool", "=", "True", ",", "\n", "sample_uniformly", ":", "bool", "=", "False", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "(", "len", "(", "mlps", ")", "==", "len", "(", "nsamples", ")", "==", "len", "(", "radii", ")", ")", "\n", "\n", "self", ".", "post_mlp", "=", "pt_utils", ".", "SharedMLP", "(", "post_mlp", ",", "bn", "=", "bn", ")", "\n", "\n", "self", ".", "groupers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "mlps", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "radii", ")", ")", ":", "\n", "            ", "radius", "=", "radii", "[", "i", "]", "\n", "nsample", "=", "nsamples", "[", "i", "]", "\n", "self", ".", "groupers", ".", "append", "(", "\n", "pointnet2_utils", ".", "QueryAndGroup", "(", "radius", ",", "nsample", ",", "use_xyz", "=", "use_xyz", ",", "\n", "sample_uniformly", "=", "sample_uniformly", ")", "\n", ")", "\n", "mlp_spec", "=", "mlps", "[", "i", "]", "\n", "if", "use_xyz", ":", "\n", "                ", "mlp_spec", "[", "0", "]", "+=", "3", "\n", "\n", "", "self", ".", "mlps", ".", "append", "(", "pt_utils", ".", "SharedMLP", "(", "mlp_spec", ",", "bn", "=", "bn", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_modules.PointnetLFPModuleMSG.forward": [[454, 497], ["range", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "torch.cat().squeeze", "len", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "torch.cat.squeeze", "torch.cat.squeeze", "torch.cat.squeeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "pointnet2_modules.PointnetLFPModuleMSG.post_mlp", "new_features_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "xyz2", ":", "torch", ".", "Tensor", ",", "xyz1", ":", "torch", ".", "Tensor", ",", "\n", "features2", ":", "torch", ".", "Tensor", ",", "features1", ":", "torch", ".", "Tensor", ")", "->", "torch", ".", "Tensor", ":", "\n", "        ", "r\"\"\" Propagate features from xyz1 to xyz2.\n        Parameters\n        ----------\n        xyz2 : torch.Tensor\n            (B, N2, 3) tensor of the xyz coordinates of the features\n        xyz1 : torch.Tensor\n            (B, N1, 3) tensor of the xyz coordinates of the features\n        features2 : torch.Tensor\n            (B, C2, N2) tensor of the descriptors of the the features\n        features1 : torch.Tensor\n            (B, C1, N1) tensor of the descriptors of the the features\n\n        Returns\n        -------\n        new_features1 : torch.Tensor\n            (B, \\sum_k(mlps[k][-1]), N1) tensor of the new_features descriptors\n        \"\"\"", "\n", "new_features_list", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "groupers", ")", ")", ":", "\n", "            ", "new_features", "=", "self", ".", "groupers", "[", "i", "]", "(", "\n", "xyz1", ",", "xyz2", ",", "features1", "\n", ")", "# (B, C1, N2, nsample)", "\n", "new_features", "=", "self", ".", "mlps", "[", "i", "]", "(", "\n", "new_features", "\n", ")", "# (B, mlp[-1], N2, nsample)", "\n", "new_features", "=", "F", ".", "max_pool2d", "(", "\n", "new_features", ",", "kernel_size", "=", "[", "1", ",", "new_features", ".", "size", "(", "3", ")", "]", "\n", ")", "# (B, mlp[-1], N2, 1)", "\n", "new_features", "=", "new_features", ".", "squeeze", "(", "-", "1", ")", "# (B, mlp[-1], N2)", "\n", "\n", "if", "features2", "is", "not", "None", ":", "\n", "                ", "new_features", "=", "torch", ".", "cat", "(", "[", "new_features", ",", "features2", "]", ",", "\n", "dim", "=", "1", ")", "#(B, mlp[-1] + C2, N2)", "\n", "\n", "", "new_features", "=", "new_features", ".", "unsqueeze", "(", "-", "1", ")", "\n", "new_features", "=", "self", ".", "post_mlp", "(", "new_features", ")", "\n", "\n", "new_features_list", ".", "append", "(", "new_features", ")", "\n", "\n", "", "return", "torch", ".", "cat", "(", "new_features_list", ",", "dim", "=", "1", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.RandomDropout.__init__": [[41, 45], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "self", ",", "p", "=", "0.5", ",", "inplace", "=", "False", ")", ":", "\n", "        ", "super", "(", "RandomDropout", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "inplace", "=", "inplace", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.RandomDropout.forward": [[46, 49], ["pytorch_utils.feature_dropout_no_scaling", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "theta", "=", "torch", ".", "Tensor", "(", "1", ")", ".", "uniform_", "(", "0", ",", "self", ".", "p", ")", "[", "0", "]", "\n", "return", "pt_utils", ".", "feature_dropout_no_scaling", "(", "X", ",", "theta", ",", "self", ".", "train", ",", "self", ".", "inplace", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.FurthestPointSampling.forward": [[52, 74], ["_ext.furthest_point_sampling", "ctx.mark_non_differentiable"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "xyz", ",", "npoint", ")", ":", "\n", "# type: (Any, torch.Tensor, int) -> torch.Tensor", "\n", "        ", "r\"\"\"\n        Uses iterative furthest point sampling to select a set of npoint features that have the largest\n        minimum distance\n\n        Parameters\n        ----------\n        xyz : torch.Tensor\n            (B, N, 3) tensor where N > npoint\n        npoint : int32\n            number of features in the sampled set\n\n        Returns\n        -------\n        torch.Tensor\n            (B, npoint) tensor containing the set\n        \"\"\"", "\n", "fps_inds", "=", "_ext", ".", "furthest_point_sampling", "(", "xyz", ",", "npoint", ")", "\n", "ctx", ".", "mark_non_differentiable", "(", "fps_inds", ")", "\n", "return", "fps_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.FurthestPointSampling.backward": [[75, 78], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "xyz", ",", "a", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.GatherOperation.forward": [[84, 108], ["features.size", "_ext.gather_points"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ",", "idx", ")", ":", "\n", "# type: (Any, torch.Tensor, torch.Tensor) -> torch.Tensor", "\n", "        ", "r\"\"\"\n\n        Parameters\n        ----------\n        features : torch.Tensor\n            (B, C, N) tensor\n\n        idx : torch.Tensor\n            (B, npoint) tensor of the features to gather\n\n        Returns\n        -------\n        torch.Tensor\n            (B, C, npoint) tensor\n        \"\"\"", "\n", "\n", "_", ",", "C", ",", "N", "=", "features", ".", "size", "(", ")", "\n", "\n", "ctx", ".", "for_backwards", "=", "(", "idx", ",", "C", ",", "N", ")", "\n", "\n", "return", "_ext", ".", "gather_points", "(", "features", ",", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.GatherOperation.backward": [[109, 115], ["_ext.gather_points_grad", "grad_out.contiguous"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ")", ":", "\n", "        ", "idx", ",", "C", ",", "N", "=", "ctx", ".", "for_backwards", "\n", "\n", "grad_features", "=", "_ext", ".", "gather_points_grad", "(", "grad_out", ".", "contiguous", "(", ")", ",", "idx", ",", "N", ")", "\n", "return", "grad_features", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.ThreeNN.forward": [[121, 143], ["_ext.three_nn", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "unknown", ",", "known", ")", ":", "\n", "# type: (Any, torch.Tensor, torch.Tensor) -> Tuple[torch.Tensor, torch.Tensor]", "\n", "        ", "r\"\"\"\n            Find the three nearest neighbors of unknown in known\n        Parameters\n        ----------\n        unknown : torch.Tensor\n            (B, n, 3) tensor of known features\n        known : torch.Tensor\n            (B, m, 3) tensor of unknown features\n\n        Returns\n        -------\n        dist : torch.Tensor\n            (B, n, 3) l2 distance to the three nearest neighbors\n        idx : torch.Tensor\n            (B, n, 3) index of 3 nearest neighbors\n        \"\"\"", "\n", "dist2", ",", "idx", "=", "_ext", ".", "three_nn", "(", "unknown", ",", "known", ")", "\n", "\n", "return", "torch", ".", "sqrt", "(", "dist2", ")", ",", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.ThreeNN.backward": [[144, 147], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "a", "=", "None", ",", "b", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.ThreeInterpolate.forward": [[153, 178], ["features.size", "idx.size", "_ext.three_interpolate"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ",", "idx", ",", "weight", ")", ":", "\n", "# type(Any, torch.Tensor, torch.Tensor, torch.Tensor) -> Torch.Tensor", "\n", "        ", "r\"\"\"\n            Performs weight linear interpolation on 3 features\n        Parameters\n        ----------\n        features : torch.Tensor\n            (B, c, m) Features descriptors to be interpolated from\n        idx : torch.Tensor\n            (B, n, 3) three nearest neighbors of the target features in features\n        weight : torch.Tensor\n            (B, n, 3) weights\n\n        Returns\n        -------\n        torch.Tensor\n            (B, c, n) tensor of the interpolated features\n        \"\"\"", "\n", "B", ",", "c", ",", "m", "=", "features", ".", "size", "(", ")", "\n", "n", "=", "idx", ".", "size", "(", "1", ")", "\n", "\n", "ctx", ".", "three_interpolate_for_backward", "=", "(", "idx", ",", "weight", ",", "m", ")", "\n", "\n", "return", "_ext", ".", "three_interpolate", "(", "features", ",", "idx", ",", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.ThreeInterpolate.backward": [[179, 204], ["_ext.three_interpolate_grad", "grad_out.contiguous"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ")", ":", "\n", "# type: (Any, torch.Tensor) -> Tuple[torch.Tensor, torch.Tensor, torch.Tensor]", "\n", "        ", "r\"\"\"\n        Parameters\n        ----------\n        grad_out : torch.Tensor\n            (B, c, n) tensor with gradients of ouputs\n\n        Returns\n        -------\n        grad_features : torch.Tensor\n            (B, c, m) tensor with gradients of features\n\n        None\n\n        None\n        \"\"\"", "\n", "idx", ",", "weight", ",", "m", "=", "ctx", ".", "three_interpolate_for_backward", "\n", "\n", "grad_features", "=", "_ext", ".", "three_interpolate_grad", "(", "\n", "grad_out", ".", "contiguous", "(", ")", ",", "idx", ",", "weight", ",", "m", "\n", ")", "\n", "\n", "return", "grad_features", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.GroupingOperation.forward": [[210, 233], ["idx.size", "features.size", "_ext.group_points"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "features", ",", "idx", ")", ":", "\n", "# type: (Any, torch.Tensor, torch.Tensor) -> torch.Tensor", "\n", "        ", "r\"\"\"\n\n        Parameters\n        ----------\n        features : torch.Tensor\n            (B, C, N) tensor of features to group\n        idx : torch.Tensor\n            (B, npoint, nsample) tensor containing the indicies of features to group with\n\n        Returns\n        -------\n        torch.Tensor\n            (B, C, npoint, nsample) tensor\n        \"\"\"", "\n", "B", ",", "nfeatures", ",", "nsample", "=", "idx", ".", "size", "(", ")", "\n", "_", ",", "C", ",", "N", "=", "features", ".", "size", "(", ")", "\n", "\n", "ctx", ".", "for_backwards", "=", "(", "idx", ",", "N", ")", "\n", "\n", "return", "_ext", ".", "group_points", "(", "features", ",", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.GroupingOperation.backward": [[234, 255], ["_ext.group_points_grad", "grad_out.contiguous"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_out", ")", ":", "\n", "# type: (Any, torch.tensor) -> Tuple[torch.Tensor, torch.Tensor]", "\n", "        ", "r\"\"\"\n\n        Parameters\n        ----------\n        grad_out : torch.Tensor\n            (B, C, npoint, nsample) tensor of the gradients of the output from forward\n\n        Returns\n        -------\n        torch.Tensor\n            (B, C, N) gradient of the features\n        None\n        \"\"\"", "\n", "idx", ",", "N", "=", "ctx", ".", "for_backwards", "\n", "\n", "grad_features", "=", "_ext", ".", "group_points_grad", "(", "grad_out", ".", "contiguous", "(", ")", ",", "idx", ",", "N", ")", "\n", "\n", "return", "grad_features", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.BallQuery.forward": [[261, 285], ["_ext.ball_query", "ctx.mark_non_differentiable"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "radius", ",", "nsample", ",", "xyz", ",", "new_xyz", ")", ":", "\n", "# type: (Any, float, int, torch.Tensor, torch.Tensor) -> torch.Tensor", "\n", "        ", "r\"\"\"\n\n        Parameters\n        ----------\n        radius : float\n            radius of the balls\n        nsample : int\n            maximum number of features in the balls\n        xyz : torch.Tensor\n            (B, N, 3) xyz coordinates of the features\n        new_xyz : torch.Tensor\n            (B, npoint, 3) centers of the ball query\n\n        Returns\n        -------\n        torch.Tensor\n            (B, npoint, nsample) tensor with the indicies of the features that form the query balls\n        \"\"\"", "\n", "inds", "=", "_ext", ".", "ball_query", "(", "new_xyz", ",", "xyz", ",", "radius", ",", "nsample", ")", "\n", "ctx", ".", "mark_non_differentiable", "(", "inds", ")", "\n", "return", "inds", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.BallQuery.backward": [[286, 289], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "a", "=", "None", ")", ":", "\n", "        ", "return", "None", ",", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.QueryAndGroup.__init__": [[306, 316], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "radius", ",", "nsample", ",", "use_xyz", "=", "True", ",", "ret_grouped_xyz", "=", "False", ",", "normalize_xyz", "=", "False", ",", "sample_uniformly", "=", "False", ",", "ret_unique_cnt", "=", "False", ")", ":", "\n", "# type: (QueryAndGroup, float, int, bool) -> None", "\n", "        ", "super", "(", "QueryAndGroup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "radius", ",", "self", ".", "nsample", ",", "self", ".", "use_xyz", "=", "radius", ",", "nsample", ",", "use_xyz", "\n", "self", ".", "ret_grouped_xyz", "=", "ret_grouped_xyz", "\n", "self", ".", "normalize_xyz", "=", "normalize_xyz", "\n", "self", ".", "sample_uniformly", "=", "sample_uniformly", "\n", "self", ".", "ret_unique_cnt", "=", "ret_unique_cnt", "\n", "if", "self", ".", "ret_unique_cnt", ":", "\n", "            ", "assert", "(", "self", ".", "sample_uniformly", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.QueryAndGroup.forward": [[317, 377], ["ball_query", "xyz.transpose().contiguous", "grouping_operation", "new_xyz.transpose().unsqueeze", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "grouping_operation", "ret.append", "ret.append", "len", "tuple", "range", "xyz.transpose", "new_xyz.transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.unique", "torch.unique", "torch.unique", "torch.unique", "torch.randint", "torch.randint", "torch.randint", "torch.randint", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "xyz", ",", "new_xyz", ",", "features", "=", "None", ")", ":", "\n", "# type: (QueryAndGroup, torch.Tensor. torch.Tensor, torch.Tensor) -> Tuple[Torch.Tensor]", "\n", "        ", "r\"\"\"\n        Parameters\n        ----------\n        xyz : torch.Tensor\n            xyz coordinates of the features (B, N, 3)\n        new_xyz : torch.Tensor\n            centriods (B, npoint, 3)\n        features : torch.Tensor\n            Descriptors of the features (B, C, N)\n\n        Returns\n        -------\n        new_features : torch.Tensor\n            (B, 3 + C, npoint, nsample) tensor\n        \"\"\"", "\n", "idx", "=", "ball_query", "(", "self", ".", "radius", ",", "self", ".", "nsample", ",", "xyz", ",", "new_xyz", ")", "\n", "\n", "if", "self", ".", "sample_uniformly", ":", "\n", "            ", "unique_cnt", "=", "torch", ".", "zeros", "(", "(", "idx", ".", "shape", "[", "0", "]", ",", "idx", ".", "shape", "[", "1", "]", ")", ")", "\n", "for", "i_batch", "in", "range", "(", "idx", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "for", "i_region", "in", "range", "(", "idx", ".", "shape", "[", "1", "]", ")", ":", "\n", "                    ", "unique_ind", "=", "torch", ".", "unique", "(", "idx", "[", "i_batch", ",", "i_region", ",", ":", "]", ")", "\n", "num_unique", "=", "unique_ind", ".", "shape", "[", "0", "]", "\n", "unique_cnt", "[", "i_batch", ",", "i_region", "]", "=", "num_unique", "\n", "sample_ind", "=", "torch", ".", "randint", "(", "0", ",", "num_unique", ",", "(", "self", ".", "nsample", "-", "num_unique", ",", ")", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "all_ind", "=", "torch", ".", "cat", "(", "(", "unique_ind", ",", "unique_ind", "[", "sample_ind", "]", ")", ")", "\n", "idx", "[", "i_batch", ",", "i_region", ",", ":", "]", "=", "all_ind", "\n", "\n", "\n", "", "", "", "xyz_trans", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "grouped_xyz", "=", "grouping_operation", "(", "xyz_trans", ",", "idx", ")", "# (B, 3, npoint, nsample)", "\n", "grouped_xyz", "-=", "new_xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "if", "self", ".", "normalize_xyz", ":", "\n", "            ", "grouped_xyz", "/=", "self", ".", "radius", "\n", "\n", "", "if", "features", "is", "not", "None", ":", "\n", "            ", "grouped_features", "=", "grouping_operation", "(", "features", ",", "idx", ")", "\n", "if", "self", ".", "use_xyz", ":", "\n", "                ", "new_features", "=", "torch", ".", "cat", "(", "\n", "[", "grouped_xyz", ",", "grouped_features", "]", ",", "dim", "=", "1", "\n", ")", "# (B, C + 3, npoint, nsample)", "\n", "", "else", ":", "\n", "                ", "new_features", "=", "grouped_features", "\n", "", "", "else", ":", "\n", "            ", "assert", "(", "\n", "self", ".", "use_xyz", "\n", ")", ",", "\"Cannot have not features and not use xyz as a feature!\"", "\n", "new_features", "=", "grouped_xyz", "\n", "\n", "", "ret", "=", "[", "new_features", "]", "\n", "if", "self", ".", "ret_grouped_xyz", ":", "\n", "            ", "ret", ".", "append", "(", "grouped_xyz", ")", "\n", "", "if", "self", ".", "ret_unique_cnt", ":", "\n", "            ", "ret", ".", "append", "(", "unique_cnt", ")", "\n", "", "if", "len", "(", "ret", ")", "==", "1", ":", "\n", "            ", "return", "ret", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "return", "tuple", "(", "ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.GroupAll.__init__": [[387, 391], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "use_xyz", "=", "True", ",", "ret_grouped_xyz", "=", "False", ")", ":", "\n", "# type: (GroupAll, bool) -> None", "\n", "        ", "super", "(", "GroupAll", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_xyz", "=", "use_xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_utils.GroupAll.forward": [[392, 426], ["xyz.transpose().unsqueeze", "features.unsqueeze", "xyz.transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xyz", ",", "new_xyz", ",", "features", "=", "None", ")", ":", "\n", "# type: (GroupAll, torch.Tensor, torch.Tensor, torch.Tensor) -> Tuple[torch.Tensor]", "\n", "        ", "r\"\"\"\n        Parameters\n        ----------\n        xyz : torch.Tensor\n            xyz coordinates of the features (B, N, 3)\n        new_xyz : torch.Tensor\n            Ignored\n        features : torch.Tensor\n            Descriptors of the features (B, C, N)\n\n        Returns\n        -------\n        new_features : torch.Tensor\n            (B, C + 3, 1, N) tensor\n        \"\"\"", "\n", "\n", "grouped_xyz", "=", "xyz", ".", "transpose", "(", "1", ",", "2", ")", ".", "unsqueeze", "(", "2", ")", "\n", "if", "features", "is", "not", "None", ":", "\n", "            ", "grouped_features", "=", "features", ".", "unsqueeze", "(", "2", ")", "\n", "if", "self", ".", "use_xyz", ":", "\n", "                ", "new_features", "=", "torch", ".", "cat", "(", "\n", "[", "grouped_xyz", ",", "grouped_features", "]", ",", "dim", "=", "1", "\n", ")", "# (B, 3 + C, 1, N)", "\n", "", "else", ":", "\n", "                ", "new_features", "=", "grouped_features", "\n", "", "", "else", ":", "\n", "            ", "new_features", "=", "grouped_xyz", "\n", "\n", "", "if", "self", ".", "ret_grouped_xyz", ":", "\n", "            ", "return", "new_features", ",", "grouped_xyz", "\n", "", "else", ":", "\n", "            ", "return", "new_features", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.SharedMLP.__init__": [[13, 35], ["torch.ReLU", "torch.ReLU", "torch.Sequential.__init__", "range", "pytorch_utils.SharedMLP.add_module", "len", "pytorch_utils.Conv2d"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "args", ":", "List", "[", "int", "]", ",", "\n", "*", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "first", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "args", ")", "-", "1", ")", ":", "\n", "            ", "self", ".", "add_module", "(", "\n", "name", "+", "'layer{}'", ".", "format", "(", "i", ")", ",", "\n", "Conv2d", "(", "\n", "args", "[", "i", "]", ",", "\n", "args", "[", "i", "+", "1", "]", ",", "\n", "bn", "=", "(", "not", "first", "or", "not", "preact", "or", "(", "i", "!=", "0", ")", ")", "and", "bn", ",", "\n", "activation", "=", "activation", "\n", "if", "(", "not", "first", "or", "not", "preact", "or", "(", "i", "!=", "0", ")", ")", "else", "None", ",", "\n", "preact", "=", "preact", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils._BNBase.__init__": [[41, 47], ["torch.Sequential.__init__", "pytorch_utils._BNBase.add_module", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "batch_norm"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ",", "batch_norm", "=", "None", ",", "name", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "name", "+", "\"bn\"", ",", "batch_norm", "(", "in_size", ")", ")", "\n", "\n", "nn", ".", "init", ".", "constant_", "(", "self", "[", "0", "]", ".", "weight", ",", "1.0", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "self", "[", "0", "]", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BatchNorm1d.__init__": [[51, 53], ["pytorch_utils._BNBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ":", "int", ",", "*", ",", "name", ":", "str", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "in_size", ",", "batch_norm", "=", "nn", ".", "BatchNorm1d", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BatchNorm2d.__init__": [[57, 59], ["pytorch_utils._BNBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ":", "int", ",", "name", ":", "str", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "in_size", ",", "batch_norm", "=", "nn", ".", "BatchNorm2d", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BatchNorm3d.__init__": [[63, 65], ["pytorch_utils._BNBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_size", ":", "int", ",", "name", ":", "str", "=", "\"\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "in_size", ",", "batch_norm", "=", "nn", ".", "BatchNorm3d", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils._ConvBase.__init__": [[69, 121], ["torch.Sequential.__init__", "conv", "init", "pytorch_utils._ConvBase.add_module", "torch.init.constant_", "torch.init.constant_", "batch_norm", "batch_norm", "pytorch_utils._ConvBase.add_module", "pytorch_utils._ConvBase.add_module", "pytorch_utils._ConvBase.add_module", "pytorch_utils._ConvBase.add_module"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "activation", ",", "\n", "bn", ",", "\n", "init", ",", "\n", "conv", "=", "None", ",", "\n", "batch_norm", "=", "None", ",", "\n", "bias", "=", "True", ",", "\n", "preact", "=", "False", ",", "\n", "name", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "bias", "=", "bias", "and", "(", "not", "bn", ")", "\n", "conv_unit", "=", "conv", "(", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "\n", "bias", "=", "bias", "\n", ")", "\n", "init", "(", "conv_unit", ".", "weight", ")", "\n", "if", "bias", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "conv_unit", ".", "bias", ",", "0", ")", "\n", "\n", "", "if", "bn", ":", "\n", "            ", "if", "not", "preact", ":", "\n", "                ", "bn_unit", "=", "batch_norm", "(", "out_size", ")", "\n", "", "else", ":", "\n", "                ", "bn_unit", "=", "batch_norm", "(", "in_size", ")", "\n", "\n", "", "", "if", "preact", ":", "\n", "            ", "if", "bn", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'bn'", ",", "bn_unit", ")", "\n", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'activation'", ",", "activation", ")", "\n", "\n", "", "", "self", ".", "add_module", "(", "name", "+", "'conv'", ",", "conv_unit", ")", "\n", "\n", "if", "not", "preact", ":", "\n", "            ", "if", "bn", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'bn'", ",", "bn_unit", ")", "\n", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'activation'", ",", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.Conv1d.__init__": [[125, 154], ["torch.ReLU", "torch.ReLU", "pytorch_utils._ConvBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ":", "int", ",", "\n", "out_size", ":", "int", ",", "\n", "*", ",", "\n", "kernel_size", ":", "int", "=", "1", ",", "\n", "stride", ":", "int", "=", "1", ",", "\n", "padding", ":", "int", "=", "0", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "init", "=", "nn", ".", "init", ".", "kaiming_normal_", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "activation", ",", "\n", "bn", ",", "\n", "init", ",", "\n", "conv", "=", "nn", ".", "Conv1d", ",", "\n", "batch_norm", "=", "BatchNorm1d", ",", "\n", "bias", "=", "bias", ",", "\n", "preact", "=", "preact", ",", "\n", "name", "=", "name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.Conv2d.__init__": [[159, 188], ["torch.ReLU", "torch.ReLU", "pytorch_utils._ConvBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ":", "int", ",", "\n", "out_size", ":", "int", ",", "\n", "*", ",", "\n", "kernel_size", ":", "Tuple", "[", "int", ",", "int", "]", "=", "(", "1", ",", "1", ")", ",", "\n", "stride", ":", "Tuple", "[", "int", ",", "int", "]", "=", "(", "1", ",", "1", ")", ",", "\n", "padding", ":", "Tuple", "[", "int", ",", "int", "]", "=", "(", "0", ",", "0", ")", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "init", "=", "nn", ".", "init", ".", "kaiming_normal_", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "activation", ",", "\n", "bn", ",", "\n", "init", ",", "\n", "conv", "=", "nn", ".", "Conv2d", ",", "\n", "batch_norm", "=", "BatchNorm2d", ",", "\n", "bias", "=", "bias", ",", "\n", "preact", "=", "preact", ",", "\n", "name", "=", "name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.Conv3d.__init__": [[193, 222], ["torch.ReLU", "torch.ReLU", "pytorch_utils._ConvBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ":", "int", ",", "\n", "out_size", ":", "int", ",", "\n", "*", ",", "\n", "kernel_size", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", "=", "(", "0", ",", "0", ",", "0", ")", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "init", "=", "nn", ".", "init", ".", "kaiming_normal_", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "in_size", ",", "\n", "out_size", ",", "\n", "kernel_size", ",", "\n", "stride", ",", "\n", "padding", ",", "\n", "activation", ",", "\n", "bn", ",", "\n", "init", ",", "\n", "conv", "=", "nn", ".", "Conv3d", ",", "\n", "batch_norm", "=", "BatchNorm3d", ",", "\n", "bias", "=", "bias", ",", "\n", "preact", "=", "preact", ",", "\n", "name", "=", "name", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.FC.__init__": [[227, 261], ["torch.ReLU", "torch.ReLU", "torch.Sequential.__init__", "torch.Linear", "torch.Linear", "pytorch_utils.FC.add_module", "init", "torch.init.constant_", "torch.init.constant_", "pytorch_utils.FC.add_module", "pytorch_utils.FC.add_module", "pytorch_utils.FC.add_module", "pytorch_utils.FC.add_module", "pytorch_utils.BatchNorm1d", "pytorch_utils.BatchNorm1d"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_size", ":", "int", ",", "\n", "out_size", ":", "int", ",", "\n", "*", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "bn", ":", "bool", "=", "False", ",", "\n", "init", "=", "None", ",", "\n", "preact", ":", "bool", "=", "False", ",", "\n", "name", ":", "str", "=", "\"\"", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "fc", "=", "nn", ".", "Linear", "(", "in_size", ",", "out_size", ",", "bias", "=", "not", "bn", ")", "\n", "if", "init", "is", "not", "None", ":", "\n", "            ", "init", "(", "fc", ".", "weight", ")", "\n", "", "if", "not", "bn", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "fc", ".", "bias", ",", "0", ")", "\n", "\n", "", "if", "preact", ":", "\n", "            ", "if", "bn", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'bn'", ",", "BatchNorm1d", "(", "in_size", ")", ")", "\n", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'activation'", ",", "activation", ")", "\n", "\n", "", "", "self", ".", "add_module", "(", "name", "+", "'fc'", ",", "fc", ")", "\n", "\n", "if", "not", "preact", ":", "\n", "            ", "if", "bn", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'bn'", ",", "BatchNorm1d", "(", "out_size", ")", ")", "\n", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "                ", "self", ".", "add_module", "(", "name", "+", "'activation'", ",", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.__init__": [[273, 290], ["pytorch_utils.BNMomentumScheduler.step", "isinstance", "RuntimeError", "type"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step"], ["    ", "def", "__init__", "(", "\n", "self", ",", "model", ",", "bn_lambda", ",", "last_epoch", "=", "-", "1", ",", "\n", "setter", "=", "set_bn_momentum_default", "\n", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "model", ",", "nn", ".", "Module", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"Class '{}' is not a PyTorch nn Module\"", ".", "format", "(", "\n", "type", "(", "model", ")", ".", "__name__", "\n", ")", "\n", ")", "\n", "\n", "", "self", ".", "model", "=", "model", "\n", "self", ".", "setter", "=", "setter", "\n", "self", ".", "lmbd", "=", "bn_lambda", "\n", "\n", "self", ".", "step", "(", "last_epoch", "+", "1", ")", "\n", "self", ".", "last_epoch", "=", "last_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.BNMomentumScheduler.step": [[291, 297], ["pytorch_utils.BNMomentumScheduler.model.apply", "pytorch_utils.BNMomentumScheduler.setter", "pytorch_utils.BNMomentumScheduler.lmbd"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "epoch", "=", "None", ")", ":", "\n", "        ", "if", "epoch", "is", "None", ":", "\n", "            ", "epoch", "=", "self", ".", "last_epoch", "+", "1", "\n", "\n", "", "self", ".", "last_epoch", "=", "epoch", "\n", "self", ".", "model", ".", "apply", "(", "self", ".", "setter", "(", "self", ".", "lmbd", "(", "epoch", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pytorch_utils.set_bn_momentum_default": [[262, 269], ["isinstance"], "function", ["None"], ["", "", "", "", "def", "set_bn_momentum_default", "(", "bn_momentum", ")", ":", "\n", "\n", "    ", "def", "fn", "(", "m", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm1d", ",", "nn", ".", "BatchNorm2d", ",", "nn", ".", "BatchNorm3d", ")", ")", ":", "\n", "            ", "m", ".", "momentum", "=", "bn_momentum", "\n", "\n", "", "", "return", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.pointnet2.pointnet2_test.test_interpolation_grad": [[18, 31], ["torch.randn().float().cuda", "torch.autograd.gradcheck", "torch.from_numpy().int().cuda", "torch.from_numpy().float().cuda", "pointnet2_utils.three_interpolate", "torch.randn().float", "torch.from_numpy().int", "torch.from_numpy().float", "torch.randn", "torch.from_numpy", "torch.from_numpy", "numpy.array", "numpy.array"], "function", ["None"], ["def", "test_interpolation_grad", "(", ")", ":", "\n", "    ", "batch_size", "=", "1", "\n", "feat_dim", "=", "2", "\n", "m", "=", "4", "\n", "feats", "=", "torch", ".", "randn", "(", "batch_size", ",", "feat_dim", ",", "m", ",", "requires_grad", "=", "True", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "def", "interpolate_func", "(", "inputs", ")", ":", "\n", "        ", "idx", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "[", "[", "0", ",", "1", ",", "2", "]", ",", "[", "1", ",", "2", ",", "3", "]", "]", "]", ")", ")", ".", "int", "(", ")", ".", "cuda", "(", ")", "\n", "weight", "=", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "[", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "2", ",", "2", ",", "2", "]", "]", "]", ")", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "interpolated_feats", "=", "pointnet2_utils", ".", "three_interpolate", "(", "inputs", ",", "idx", ",", "weight", ")", "\n", "return", "interpolated_feats", "\n", "\n", "", "assert", "(", "gradcheck", "(", "interpolate_func", ",", "feats", ",", "atol", "=", "1e-1", ",", "rtol", "=", "1e-1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.semseg.ddp_main.single_proc_run": [[14, 24], ["torch.manual_seed", "torch.cuda.manual_seed", "lib.ddp_trainer.SegmentationTrainer", "torch.cuda.is_available", "Exception", "lib.ddp_trainer.SegmentationTrainer.train", "lib.ddp_trainer.SegmentationTrainer.test"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.train", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.test"], ["\n", "def", "single_proc_run", "(", "config", ")", ":", "\n", "  ", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "    ", "raise", "Exception", "(", "'No GPUs FOUND.'", ")", "\n", "", "trainer", "=", "SegmentationTrainer", "(", "config", ")", "\n", "if", "config", ".", "train", ".", "is_train", ":", "\n", "    ", "trainer", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "    ", "trainer", ".", "test", "(", ")", "\n", "\n", "", "", "@", "hydra", ".", "main", "(", "config_path", "=", "'config'", ",", "config_name", "=", "'default.yaml'", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.semseg.ddp_main.main": [[25, 32], ["hydra.main", "lib.distributed.multi_proc_run", "ddp_main.single_proc_run"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.main", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.multiprocessing_utils.multi_proc_run", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.single_proc_run"], ["def", "main", "(", "config", ")", ":", "\n", "\n", "# fix seed", "\n", "  ", "np", ".", "random", ".", "seed", "(", "config", ".", "misc", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "config", ".", "misc", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "config", ".", "misc", ".", "seed", ")", "\n", "\n", "# Convert to dict", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.read_txt": [[49, 68], ["numpy.array().astype", "pointcloud[].astype", "pointcloud[].astype", "open", "numpy.array", "print", "float", "l.split"], "methods", ["None"], ["IS_FULL_POINTCLOUD_EVAL", "=", "True", "\n", "\n", "DATA_PATH_FILE", "=", "{", "\n", "DatasetPhase", ".", "Train", ":", "'train.txt'", ",", "\n", "DatasetPhase", ".", "Val", ":", "'val.txt'", ",", "\n", "DatasetPhase", ".", "TrainVal", ":", "'trainval.txt'", ",", "\n", "DatasetPhase", ".", "Test", ":", "'test.txt'", "\n", "}", "\n", "\n", "def", "test_pointcloud", "(", "self", ",", "pred_dir", ")", ":", "\n", "    ", "print", "(", "'Running full pointcloud evaluation.'", ")", "\n", "# Join room by their area and room id.", "\n", "room_dict", "=", "defaultdict", "(", "list", ")", "\n", "for", "i", ",", "data_path", "in", "enumerate", "(", "self", ".", "data_paths", ")", ":", "\n", "      ", "area", ",", "room", "=", "data_path", ".", "split", "(", "os", ".", "sep", ")", "\n", "room", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "room", ")", "\n", "room_id", "=", "'_'", ".", "join", "(", "room", ".", "split", "(", "'_'", ")", "[", ":", "-", "1", "]", ")", "\n", "room_dict", "[", "(", "area", ",", "room_id", ")", "]", ".", "append", "(", "i", ")", "\n", "# Test independently for each room.", "\n", "", "sys", ".", "setrecursionlimit", "(", "100000", ")", "# Increase recursion limit for k-d tree.", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.convert_to_ply": [[69, 131], ["glob.glob", "tqdm.tqdm.tqdm", "os.path.join", "os.path.normpath().split", "os.path.join", "os.path.join", "os.path.exists", "os.path.split", "glob.glob", "enumerate", "os.path.join", "print", "os.path.join", "cls.read_txt", "os.path.split", "cls.CLASSES.index", "numpy.concatenate.append", "numpy.concatenate.append", "numpy.concatenate.append", "numpy.concatenate.append", "len", "print", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "MinkowskiEngine.utils.sparse_quantize", "numpy.concatenate", "lib.utils.mkdir_p", "lib.pc_utils.save_point_cloud", "os.path.normpath", "numpy.concatenate", "torch.save", "annotation_subfile.split", "numpy.ones", "numpy.ones", "len", "len"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.Stanford3DDatasetConverter.read_txt", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.mkdir_p", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.pc_utils.save_point_cloud"], ["pred_list", "=", "sorted", "(", "os", ".", "listdir", "(", "pred_dir", ")", ")", "\n", "hist", "=", "np", ".", "zeros", "(", "(", "self", ".", "NUM_LABELS", ",", "self", ".", "NUM_LABELS", ")", ")", "\n", "for", "room_idx", ",", "room_list", "in", "enumerate", "(", "room_dict", ".", "values", "(", ")", ")", ":", "\n", "      ", "print", "(", "f'Evaluating room {room_idx} / {len(room_dict)}.'", ")", "\n", "# Join all predictions and query pointclouds of split data.", "\n", "pred", "=", "np", ".", "zeros", "(", "(", "0", ",", "4", ")", ")", "\n", "pointcloud", "=", "np", ".", "zeros", "(", "(", "0", ",", "7", ")", ")", "\n", "for", "i", "in", "room_list", ":", "\n", "        ", "pred", "=", "np", ".", "vstack", "(", "(", "pred", ",", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "pred_dir", ",", "pred_list", "[", "i", "]", ")", ")", ")", ")", "\n", "pointcloud", "=", "np", ".", "vstack", "(", "(", "pointcloud", ",", "self", ".", "load_ply", "(", "i", ")", "[", "0", "]", ")", ")", "\n", "# Deduplicate all query pointclouds of split data.", "\n", "", "pointcloud", "=", "np", ".", "array", "(", "list", "(", "set", "(", "tuple", "(", "l", ")", "for", "l", "in", "pointcloud", ".", "tolist", "(", ")", ")", ")", ")", "\n", "# Run test for each room.", "\n", "pred_tree", "=", "spatial", ".", "KDTree", "(", "pred", "[", ":", ",", ":", "3", "]", ",", "leafsize", "=", "500", ")", "\n", "_", ",", "result", "=", "pred_tree", ".", "query", "(", "pointcloud", "[", ":", ",", ":", "3", "]", ")", "\n", "ptc_pred", "=", "pred", "[", "result", ",", "3", "]", ".", "astype", "(", "int", ")", "\n", "ptc_gt", "=", "pointcloud", "[", ":", ",", "-", "1", "]", ".", "astype", "(", "int", ")", "\n", "if", "self", ".", "IGNORE_LABELS", ":", "\n", "        ", "ptc_pred", "=", "self", ".", "label2masked", "[", "ptc_pred", "]", "\n", "ptc_gt", "=", "self", ".", "label2masked", "[", "ptc_gt", "]", "\n", "", "hist", "+=", "fast_hist", "(", "ptc_pred", ",", "ptc_gt", ",", "self", ".", "NUM_LABELS", ")", "\n", "# Print results.", "\n", "ious", "=", "[", "]", "\n", "print", "(", "'Per class IoU:'", ")", "\n", "for", "i", ",", "iou", "in", "enumerate", "(", "per_class_iu", "(", "hist", ")", "*", "100", ")", ":", "\n", "        ", "result_str", "=", "''", "\n", "if", "hist", ".", "sum", "(", "1", ")", "[", "i", "]", ":", "\n", "          ", "result_str", "+=", "f'{iou}'", "\n", "ious", ".", "append", "(", "iou", ")", "\n", "", "else", ":", "\n", "          ", "result_str", "+=", "'N/A'", "# Do not print if data not in ground truth.", "\n", "", "print", "(", "result_str", ")", "\n", "", "print", "(", "f'Average IoU: {np.nanmean(ious)}'", ")", "\n", "\n", "", "", "def", "_augment_coords_to_feats", "(", "self", ",", "coords", ",", "feats", ",", "labels", "=", "None", ")", ":", "\n", "# Center x,y", "\n", "    ", "coords_center", "=", "coords", ".", "mean", "(", "0", ",", "keepdims", "=", "True", ")", "\n", "coords_center", "[", "0", ",", "2", "]", "=", "0", "\n", "norm_coords", "=", "coords", "-", "coords_center", "\n", "feats", "=", "np", ".", "concatenate", "(", "(", "feats", ",", "norm_coords", ")", ",", "1", ")", "\n", "return", "coords", ",", "feats", ",", "labels", "\n", "\n", "\n", "", "", "class", "StanfordDataset", "(", "StanfordVoxelizationDatasetBase", ",", "VoxelizationDataset", ")", ":", "\n", "\n", "# Voxelization arguments", "\n", "  ", "VOXEL_SIZE", "=", "0.05", "# 5cm", "\n", "\n", "CLIP_BOUND", "=", "4", "# [-N, N]", "\n", "TEST_CLIP_BOUND", "=", "None", "\n", "\n", "# Augmentation arguments", "\n", "ROTATION_AUGMENTATION_BOUND", "=", "(", "(", "-", "np", ".", "pi", "/", "32", ",", "np", ".", "pi", "/", "32", ")", ",", "(", "-", "np", ".", "pi", "/", "32", ",", "np", ".", "pi", "/", "32", ")", ",", "(", "-", "np", ".", "pi", ",", "np", ".", "pi", ")", ")", "\n", "TRANSLATION_AUGMENTATION_RATIO_BOUND", "=", "(", "(", "-", "0.2", ",", "0.2", ")", ",", "(", "-", "0.2", ",", "0.2", ")", ",", "(", "-", "0.05", ",", "0.05", ")", ")", "\n", "\n", "# AUGMENT_COORDS_TO_FEATS = True", "\n", "# NUM_IN_CHANNEL = 6", "\n", "AUGMENT_COORDS_TO_FEATS", "=", "False", "\n", "NUM_IN_CHANNEL", "=", "3", "\n", "\n", "def", "__init__", "(", "self", ",", "\n", "config", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.stanford.stanford.generate_splits": [[133, 144], ["lib.utils.mkdir_p", "range", "os.path.join", "glob.glob", "os.path.join", "os.path.join", "os.path.relpath", "open", "f.write"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.utils.mkdir_p", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write"], ["input_transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "\n", "cache", "=", "False", ",", "\n", "augment_data", "=", "True", ",", "\n", "elastic_distortion", "=", "False", ",", "\n", "phase", "=", "DatasetPhase", ".", "Train", ")", ":", "\n", "    ", "if", "isinstance", "(", "phase", ",", "str", ")", ":", "\n", "      ", "phase", "=", "str2datasetphase_type", "(", "phase", ")", "\n", "", "if", "phase", "not", "in", "[", "DatasetPhase", ".", "Train", ",", "DatasetPhase", ".", "TrainVal", "]", ":", "\n", "      ", "self", ".", "CLIP_BOUND", "=", "self", ".", "TEST_CLIP_BOUND", "\n", "", "data_root", "=", "config", ".", "data", ".", "stanford3d_path", "\n", "if", "isinstance", "(", "self", ".", "DATA_PATH_FILE", "[", "phase", "]", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.compute_full_overlapping.make_open3d_point_cloud": [[14, 27], ["numpy.isnan().any", "open3d.geometry.PointCloud", "open3d.utility.Vector3dVector", "open3d.utility.Vector3dVector", "pcd.voxel_down_sample.voxel_down_sample", "numpy.isnan"], "function", ["None"], ["def", "make_open3d_point_cloud", "(", "xyz", ",", "color", "=", "None", ",", "voxel_size", "=", "None", ")", ":", "\n", "    ", "if", "np", ".", "isnan", "(", "xyz", ")", ".", "any", "(", ")", ":", "\n", "        ", "return", "None", "\n", "\n", "", "xyz", "=", "xyz", "[", ":", ",", ":", "3", "]", "\n", "pcd", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "xyz", ")", "\n", "if", "color", "is", "not", "None", ":", "\n", "        ", "pcd", ".", "colors", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "color", ")", "\n", "", "if", "voxel_size", "is", "not", "None", ":", "\n", "        ", "pcd", "=", "pcd", ".", "voxel_down_sample", "(", "voxel_size", ")", "\n", "\n", "", "return", "pcd", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.compute_full_overlapping.compute_overlap_ratio": [[29, 37], ["pcd0.voxel_down_sample", "pcd1.voxel_down_sample", "compute_full_overlapping.get_matching_indices", "compute_full_overlapping.get_matching_indices", "max", "float", "float", "float", "float", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.compute_full_overlapping.get_matching_indices", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.compute_full_overlapping.get_matching_indices"], ["", "def", "compute_overlap_ratio", "(", "pcd0", ",", "pcd1", ",", "voxel_size", ")", ":", "\n", "    ", "pcd0_down", "=", "pcd0", ".", "voxel_down_sample", "(", "voxel_size", ")", "\n", "pcd1_down", "=", "pcd1", ".", "voxel_down_sample", "(", "voxel_size", ")", "\n", "matching01", "=", "get_matching_indices", "(", "pcd0_down", ",", "pcd1_down", ",", "voxel_size", "*", "1.5", ",", "1", ")", "\n", "matching10", "=", "get_matching_indices", "(", "pcd1_down", ",", "pcd0_down", ",", "voxel_size", "*", "1.5", ",", "1", ")", "\n", "overlap0", "=", "float", "(", "len", "(", "matching01", ")", ")", "/", "float", "(", "len", "(", "pcd0_down", ".", "points", ")", ")", "\n", "overlap1", "=", "float", "(", "len", "(", "matching10", ")", ")", "/", "float", "(", "len", "(", "pcd1_down", ".", "points", ")", ")", "\n", "return", "max", "(", "overlap0", ",", "overlap1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.compute_full_overlapping.get_matching_indices": [[39, 48], ["enumerate", "pcd_tree.search_radius_vector_3d", "match_inds.append"], "function", ["None"], ["", "def", "get_matching_indices", "(", "source", ",", "pcd_tree", ",", "search_voxel_size", ",", "K", "=", "None", ")", ":", "\n", "    ", "match_inds", "=", "[", "]", "\n", "for", "i", ",", "point", "in", "enumerate", "(", "source", ".", "points", ")", ":", "\n", "        ", "[", "_", ",", "idx", ",", "_", "]", "=", "pcd_tree", ".", "search_radius_vector_3d", "(", "point", ",", "search_voxel_size", ")", "\n", "if", "K", "is", "not", "None", ":", "\n", "            ", "idx", "=", "idx", "[", ":", "K", "]", "\n", "", "for", "j", "in", "idx", ":", "\n", "            ", "match_inds", ".", "append", "(", "(", "i", ",", "j", ")", ")", "\n", "", "", "return", "match_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.generage_list.main": [[20, 29], ["glob.glob", "print", "os.path.join", "open", "os.path.join", "open", "line.strip().split", "float", "print", "line.strip"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "overlaps", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "target_dir", ",", "\"*/pcd/overlap.txt\"", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "target_dir", ",", "'overlap30.txt'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "for", "fo", "in", "overlaps", ":", "\n", "            ", "for", "line", "in", "open", "(", "fo", ")", ":", "\n", "                ", "pcd0", ",", "pcd1", ",", "op", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "float", "(", "op", ")", ">=", "0.3", ":", "\n", "                    ", "print", "(", "'{} {} {}'", ".", "format", "(", "pcd0", ",", "pcd1", ",", "op", ")", ",", "file", "=", "f", ")", "\n", "", "", "", "", "print", "(", "'done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.RGBDFrame.load": [[12, 20], ["numpy.asarray().reshape", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "numpy.asarray", "file_handle.read", "file_handle.read", "file_handle.read", "file_handle.read", "file_handle.read", "file_handle.read", "struct.unpack", "file_handle.read"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["  ", "def", "load", "(", "self", ",", "file_handle", ")", ":", "\n", "    ", "self", ".", "camera_to_world", "=", "np", ".", "asarray", "(", "struct", ".", "unpack", "(", "'f'", "*", "16", ",", "file_handle", ".", "read", "(", "16", "*", "4", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "4", ",", "4", ")", "\n", "self", ".", "timestamp_color", "=", "struct", ".", "unpack", "(", "'Q'", ",", "file_handle", ".", "read", "(", "8", ")", ")", "[", "0", "]", "\n", "self", ".", "timestamp_depth", "=", "struct", ".", "unpack", "(", "'Q'", ",", "file_handle", ".", "read", "(", "8", ")", ")", "[", "0", "]", "\n", "self", ".", "color_size_bytes", "=", "struct", ".", "unpack", "(", "'Q'", ",", "file_handle", ".", "read", "(", "8", ")", ")", "[", "0", "]", "\n", "self", ".", "depth_size_bytes", "=", "struct", ".", "unpack", "(", "'Q'", ",", "file_handle", ".", "read", "(", "8", ")", ")", "[", "0", "]", "\n", "self", ".", "color_data", "=", "b''", ".", "join", "(", "struct", ".", "unpack", "(", "'c'", "*", "self", ".", "color_size_bytes", ",", "file_handle", ".", "read", "(", "self", ".", "color_size_bytes", ")", ")", ")", "\n", "self", ".", "depth_data", "=", "b''", ".", "join", "(", "struct", ".", "unpack", "(", "'c'", "*", "self", ".", "depth_size_bytes", ",", "file_handle", ".", "read", "(", "self", ".", "depth_size_bytes", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.RGBDFrame.decompress_depth": [[22, 27], ["SensorData.RGBDFrame.decompress_depth_zlib"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.RGBDFrame.decompress_depth_zlib"], ["", "def", "decompress_depth", "(", "self", ",", "compression_type", ")", ":", "\n", "    ", "if", "compression_type", "==", "'zlib_ushort'", ":", "\n", "       ", "return", "self", ".", "decompress_depth_zlib", "(", ")", "\n", "", "else", ":", "\n", "       ", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.RGBDFrame.decompress_depth_zlib": [[29, 31], ["zlib.decompress"], "methods", ["None"], ["", "", "def", "decompress_depth_zlib", "(", "self", ")", ":", "\n", "    ", "return", "zlib", ".", "decompress", "(", "self", ".", "depth_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.RGBDFrame.decompress_color": [[33, 38], ["SensorData.RGBDFrame.decompress_color_jpeg"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.RGBDFrame.decompress_color_jpeg"], ["", "def", "decompress_color", "(", "self", ",", "compression_type", ")", ":", "\n", "    ", "if", "compression_type", "==", "'jpeg'", ":", "\n", "       ", "return", "self", ".", "decompress_color_jpeg", "(", ")", "\n", "", "else", ":", "\n", "       ", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.RGBDFrame.decompress_color_jpeg": [[40, 42], ["imageio.imread"], "methods", ["None"], ["", "", "def", "decompress_color_jpeg", "(", "self", ")", ":", "\n", "    ", "return", "imageio", ".", "imread", "(", "self", ".", "color_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.__init__": [[46, 49], ["SensorData.SensorData.load"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load"], ["  ", "def", "__init__", "(", "self", ",", "filename", ")", ":", "\n", "    ", "self", ".", "version", "=", "4", "\n", "self", ".", "load", "(", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load": [[51, 74], ["open", "numpy.asarray().reshape", "numpy.asarray().reshape", "numpy.asarray().reshape", "numpy.asarray().reshape", "range", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "SensorData.RGBDFrame", "SensorData.RGBDFrame.load", "SensorData.SensorData.frames.append", "f.read", "f.read", "f.read", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "f.read", "f.read", "f.read", "f.read", "f.read", "f.read", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "struct.unpack", "f.read", "f.read", "f.read", "f.read", "f.read", "f.read"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read"], ["", "def", "load", "(", "self", ",", "filename", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "f", ":", "\n", "      ", "version", "=", "struct", ".", "unpack", "(", "'I'", ",", "f", ".", "read", "(", "4", ")", ")", "[", "0", "]", "\n", "assert", "self", ".", "version", "==", "version", "\n", "strlen", "=", "struct", ".", "unpack", "(", "'Q'", ",", "f", ".", "read", "(", "8", ")", ")", "[", "0", "]", "\n", "self", ".", "sensor_name", "=", "b''", ".", "join", "(", "struct", ".", "unpack", "(", "'c'", "*", "strlen", ",", "f", ".", "read", "(", "strlen", ")", ")", ")", "\n", "self", ".", "intrinsic_color", "=", "np", ".", "asarray", "(", "struct", ".", "unpack", "(", "'f'", "*", "16", ",", "f", ".", "read", "(", "16", "*", "4", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "4", ",", "4", ")", "\n", "self", ".", "extrinsic_color", "=", "np", ".", "asarray", "(", "struct", ".", "unpack", "(", "'f'", "*", "16", ",", "f", ".", "read", "(", "16", "*", "4", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "4", ",", "4", ")", "\n", "self", ".", "intrinsic_depth", "=", "np", ".", "asarray", "(", "struct", ".", "unpack", "(", "'f'", "*", "16", ",", "f", ".", "read", "(", "16", "*", "4", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "4", ",", "4", ")", "\n", "self", ".", "extrinsic_depth", "=", "np", ".", "asarray", "(", "struct", ".", "unpack", "(", "'f'", "*", "16", ",", "f", ".", "read", "(", "16", "*", "4", ")", ")", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "4", ",", "4", ")", "\n", "self", ".", "color_compression_type", "=", "COMPRESSION_TYPE_COLOR", "[", "struct", ".", "unpack", "(", "'i'", ",", "f", ".", "read", "(", "4", ")", ")", "[", "0", "]", "]", "\n", "self", ".", "depth_compression_type", "=", "COMPRESSION_TYPE_DEPTH", "[", "struct", ".", "unpack", "(", "'i'", ",", "f", ".", "read", "(", "4", ")", ")", "[", "0", "]", "]", "\n", "self", ".", "color_width", "=", "struct", ".", "unpack", "(", "'I'", ",", "f", ".", "read", "(", "4", ")", ")", "[", "0", "]", "\n", "self", ".", "color_height", "=", "struct", ".", "unpack", "(", "'I'", ",", "f", ".", "read", "(", "4", ")", ")", "[", "0", "]", "\n", "self", ".", "depth_width", "=", "struct", ".", "unpack", "(", "'I'", ",", "f", ".", "read", "(", "4", ")", ")", "[", "0", "]", "\n", "self", ".", "depth_height", "=", "struct", ".", "unpack", "(", "'I'", ",", "f", ".", "read", "(", "4", ")", ")", "[", "0", "]", "\n", "self", ".", "depth_shift", "=", "struct", ".", "unpack", "(", "'f'", ",", "f", ".", "read", "(", "4", ")", ")", "[", "0", "]", "\n", "num_frames", "=", "struct", ".", "unpack", "(", "'Q'", ",", "f", ".", "read", "(", "8", ")", ")", "[", "0", "]", "\n", "self", ".", "frames", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_frames", ")", ":", "\n", "        ", "frame", "=", "RGBDFrame", "(", ")", "\n", "frame", ".", "load", "(", "f", ")", "\n", "self", ".", "frames", ".", "append", "(", "frame", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.export_depth_images": [[76, 91], ["print", "range", "os.path.exists", "os.makedirs", "len", "os.path.exists", "SensorData.SensorData.frames[].decompress_depth", "numpy.fromstring().reshape", "imageio.imwrite", "len", "os.path.join", "print", "cv2.resize", "os.path.join", "os.path.join", "numpy.fromstring", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.RGBDFrame.decompress_depth"], ["", "", "", "def", "export_depth_images", "(", "self", ",", "output_path", ",", "image_size", "=", "None", ",", "frame_skip", "=", "1", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "", "print", "(", "'exporting'", ",", "len", "(", "self", ".", "frames", ")", "//", "frame_skip", ",", "' depth frames to'", ",", "output_path", ")", "\n", "for", "f", "in", "range", "(", "0", ",", "len", "(", "self", ".", "frames", ")", ",", "frame_skip", ")", ":", "\n", "      ", "if", "os", ".", "path", ".", "exists", "(", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "str", "(", "f", ")", "+", "'.png'", ")", ")", ")", ":", "\n", "        ", "continue", "\n", "", "if", "f", "%", "100", "==", "0", ":", "\n", "        ", "print", "(", "'exporting'", ",", "f", ",", "'th depth frames to'", ",", "os", ".", "path", ".", "join", "(", "output_path", ",", "str", "(", "f", ")", "+", "'.png'", ")", ")", "\n", "\n", "", "depth_data", "=", "self", ".", "frames", "[", "f", "]", ".", "decompress_depth", "(", "self", ".", "depth_compression_type", ")", "\n", "depth", "=", "np", ".", "fromstring", "(", "depth_data", ",", "dtype", "=", "np", ".", "uint16", ")", ".", "reshape", "(", "self", ".", "depth_height", ",", "self", ".", "depth_width", ")", "\n", "if", "image_size", "is", "not", "None", ":", "\n", "        ", "depth", "=", "cv2", ".", "resize", "(", "depth", ",", "(", "image_size", "[", "1", "]", ",", "image_size", "[", "0", "]", ")", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "", "imageio", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "str", "(", "f", ")", "+", "'.png'", ")", ",", "depth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.export_color_images": [[93, 107], ["print", "range", "os.path.exists", "os.makedirs", "len", "os.path.exists", "SensorData.SensorData.frames[].decompress_color", "imageio.imwrite", "len", "os.path.join", "print", "cv2.resize", "os.path.join", "os.path.join", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.RGBDFrame.decompress_color"], ["", "", "def", "export_color_images", "(", "self", ",", "output_path", ",", "image_size", "=", "None", ",", "frame_skip", "=", "1", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "", "print", "(", "'exporting'", ",", "len", "(", "self", ".", "frames", ")", "//", "frame_skip", ",", "'color frames to'", ",", "output_path", ")", "\n", "for", "f", "in", "range", "(", "0", ",", "len", "(", "self", ".", "frames", ")", ",", "frame_skip", ")", ":", "\n", "      ", "if", "os", ".", "path", ".", "exists", "(", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "str", "(", "f", ")", "+", "'.png'", ")", ")", ")", ":", "\n", "        ", "continue", "\n", "", "if", "f", "%", "100", "==", "0", ":", "\n", "        ", "print", "(", "'exporting'", ",", "f", ",", "'th color frames to'", ",", "os", ".", "path", ".", "join", "(", "output_path", ",", "str", "(", "f", ")", "+", "'.png'", ")", ")", "\n", "", "color", "=", "self", ".", "frames", "[", "f", "]", ".", "decompress_color", "(", "self", ".", "color_compression_type", ")", "\n", "if", "image_size", "is", "not", "None", ":", "\n", "        ", "color", "=", "cv2", ".", "resize", "(", "color", ",", "(", "image_size", "[", "1", "]", ",", "image_size", "[", "0", "]", ")", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "# imageio.imwrite(os.path.join(output_path, str(f) + '.jpg'), color)", "\n", "", "imageio", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "str", "(", "f", ")", "+", "'.png'", ")", ",", "color", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.save_mat_to_file": [[109, 113], ["open", "numpy.savetxt"], "methods", ["None"], ["", "", "def", "save_mat_to_file", "(", "self", ",", "matrix", ",", "filename", ")", ":", "\n", "    ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "      ", "for", "line", "in", "matrix", ":", "\n", "        ", "np", ".", "savetxt", "(", "f", ",", "line", "[", "np", ".", "newaxis", "]", ",", "fmt", "=", "'%f'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.export_poses": [[115, 121], ["print", "range", "os.path.exists", "os.makedirs", "len", "SensorData.SensorData.save_mat_to_file", "len", "os.path.join", "str"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.save_mat_to_file"], ["", "", "", "def", "export_poses", "(", "self", ",", "output_path", ",", "frame_skip", "=", "1", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "", "print", "(", "'exporting'", ",", "len", "(", "self", ".", "frames", ")", "//", "frame_skip", ",", "'camera poses to'", ",", "output_path", ")", "\n", "for", "f", "in", "range", "(", "0", ",", "len", "(", "self", ".", "frames", ")", ",", "frame_skip", ")", ":", "\n", "      ", "self", ".", "save_mat_to_file", "(", "self", ".", "frames", "[", "f", "]", ".", "camera_to_world", ",", "os", ".", "path", ".", "join", "(", "output_path", ",", "str", "(", "f", ")", "+", "'.txt'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.export_intrinsics": [[123, 131], ["print", "SensorData.SensorData.save_mat_to_file", "SensorData.SensorData.save_mat_to_file", "SensorData.SensorData.save_mat_to_file", "SensorData.SensorData.save_mat_to_file", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.save_mat_to_file", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.save_mat_to_file", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.save_mat_to_file", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.save_mat_to_file"], ["", "", "def", "export_intrinsics", "(", "self", ",", "output_path", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "output_path", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "output_path", ")", "\n", "", "print", "(", "'exporting camera intrinsics to'", ",", "output_path", ")", "\n", "self", ".", "save_mat_to_file", "(", "self", ".", "intrinsic_color", ",", "os", ".", "path", ".", "join", "(", "output_path", ",", "'intrinsic_color.txt'", ")", ")", "\n", "self", ".", "save_mat_to_file", "(", "self", ".", "extrinsic_color", ",", "os", ".", "path", ".", "join", "(", "output_path", ",", "'extrinsic_color.txt'", ")", ")", "\n", "self", ".", "save_mat_to_file", "(", "self", ".", "intrinsic_depth", ",", "os", ".", "path", ".", "join", "(", "output_path", ",", "'intrinsic_depth.txt'", ")", ")", "\n", "self", ".", "save_mat_to_file", "(", "self", ".", "extrinsic_depth", ",", "os", ".", "path", ".", "join", "(", "output_path", ",", "'extrinsic_depth.txt'", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.reader.main": [[22, 38], ["print", "SensorData.SensorData", "print", "os.path.exists", "os.makedirs", "SensorData.SensorData.export_depth_images", "SensorData.SensorData.export_color_images", "SensorData.SensorData.export_poses", "SensorData.SensorData.export_intrinsics", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.export_depth_images", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.export_color_images", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.export_poses", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.export_intrinsics"], ["def", "main", "(", ")", ":", "\n", "  ", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "output_path", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "opt", ".", "output_path", ")", "\n", "\n", "# load the data", "\n", "", "print", "(", "'loading %s...'", "%", "opt", ".", "filename", ")", "\n", "sd", "=", "SensorData", "(", "opt", ".", "filename", ")", "\n", "print", "(", "'loaded!\\n'", ")", "\n", "if", "opt", ".", "export_depth_images", ":", "\n", "    ", "sd", ".", "export_depth_images", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "output_path", ",", "'depth'", ")", ",", "frame_skip", "=", "opt", ".", "frame_skip", ")", "\n", "", "if", "opt", ".", "export_color_images", ":", "\n", "    ", "sd", ".", "export_color_images", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "output_path", ",", "'color'", ")", ",", "frame_skip", "=", "opt", ".", "frame_skip", ")", "\n", "", "if", "opt", ".", "export_poses", ":", "\n", "    ", "sd", ".", "export_poses", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "output_path", ",", "'pose'", ")", ",", "frame_skip", "=", "opt", ".", "frame_skip", ")", "\n", "", "if", "opt", ".", "export_intrinsics", ":", "\n", "    ", "sd", ".", "export_intrinsics", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "output_path", ",", "'intrinsic'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyParseError.__init__": [[131, 147], ["Exception.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "message", ",", "element", "=", "None", ",", "row", "=", "None", ",", "prop", "=", "None", ")", ":", "\n", "        ", "self", ".", "message", "=", "message", "\n", "self", ".", "element", "=", "element", "\n", "self", ".", "row", "=", "row", "\n", "self", ".", "prop", "=", "prop", "\n", "\n", "s", "=", "''", "\n", "if", "self", ".", "element", ":", "\n", "            ", "s", "+=", "'element %r: '", "%", "self", ".", "element", ".", "name", "\n", "", "if", "self", ".", "row", "is", "not", "None", ":", "\n", "            ", "s", "+=", "'row %d: '", "%", "self", ".", "row", "\n", "", "if", "self", ".", "prop", ":", "\n", "            ", "s", "+=", "'property %r: '", "%", "self", ".", "prop", ".", "name", "\n", "", "s", "+=", "self", ".", "message", "\n", "\n", "Exception", ".", "__init__", "(", "self", ",", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyParseError.__repr__": [[148, 151], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "'PlyParseError(%r, element=%r, row=%r, prop=%r)'", "%", "\n", "self", ".", "message", ",", "self", ".", "element", ",", "self", ".", "row", ",", "self", ".", "prop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__init__": [[165, 192], ["list", "list"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "elements", "=", "[", "]", ",", "text", "=", "False", ",", "byte_order", "=", "'='", ",", "\n", "comments", "=", "[", "]", ",", "obj_info", "=", "[", "]", ")", ":", "\n", "        ", "'''\n        elements: sequence of PlyElement instances.\n\n        text: whether the resulting PLY file will be text (True) or\n            binary (False).\n\n        byte_order: '<' for little-endian, '>' for big-endian, or '='\n            for native.  This is only relevant if `text' is False.\n\n        comments: sequence of strings that will be placed in the header\n            between the 'ply' and 'format ...' lines.\n\n        obj_info: like comments, but will be placed in the header with\n            \"obj_info ...\" instead of \"comment ...\".\n\n        '''", "\n", "if", "byte_order", "==", "'='", "and", "not", "text", ":", "\n", "            ", "byte_order", "=", "_native_byte_order", "\n", "\n", "", "self", ".", "byte_order", "=", "byte_order", "\n", "self", ".", "text", "=", "text", "\n", "\n", "self", ".", "comments", "=", "list", "(", "comments", ")", "\n", "self", ".", "obj_info", "=", "list", "(", "obj_info", ")", "\n", "self", ".", "elements", "=", "elements", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData._get_elements": [[193, 195], ["None"], "methods", ["None"], ["", "def", "_get_elements", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_elements", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData._set_elements": [[196, 199], ["tuple", "plyfile.PlyData._index"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._index"], ["", "def", "_set_elements", "(", "self", ",", "elements", ")", ":", "\n", "        ", "self", ".", "_elements", "=", "tuple", "(", "elements", ")", "\n", "self", ".", "_index", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData._get_byte_order": [[202, 204], ["None"], "methods", ["None"], ["def", "_get_byte_order", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_byte_order", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData._set_byte_order": [[205, 210], ["ValueError"], "methods", ["None"], ["", "def", "_set_byte_order", "(", "self", ",", "byte_order", ")", ":", "\n", "        ", "if", "byte_order", "not", "in", "[", "'<'", ",", "'>'", ",", "'='", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\"byte order must be '<', '>', or '='\"", ")", "\n", "\n", "", "self", ".", "_byte_order", "=", "byte_order", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData._index": [[213, 218], ["dict", "len", "len", "ValueError"], "methods", ["None"], ["def", "_index", "(", "self", ")", ":", "\n", "        ", "self", ".", "_element_lookup", "=", "dict", "(", "(", "elt", ".", "name", ",", "elt", ")", "for", "elt", "in", "\n", "self", ".", "_elements", ")", "\n", "if", "len", "(", "self", ".", "_element_lookup", ")", "!=", "len", "(", "self", ".", "_elements", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"two elements with same name\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData._parse_header": [[219, 273], ["plyfile.PlyData", "stream.readline().decode().strip", "plyfile._split_line", "plyfile.PlyParseError", "comments.keys", "comments[].append", "plyfile.PlyParseError", "plyfile.PlyParseError", "len", "plyfile.PlyParseError", "plyfile.PlyParseError", "comments[].append", "plyfile.PlyElement._parse_multi", "len", "comments.keys", "stream.readline().decode", "comments.keys", "lines.append", "lines.append", "stream.readline().decode().strip.split", "stream.readline"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._split_line", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._parse_multi"], ["", "", "@", "staticmethod", "\n", "def", "_parse_header", "(", "stream", ")", ":", "\n", "        ", "'''\n        Parse a PLY header from a readable file-like stream.\n\n        '''", "\n", "lines", "=", "[", "]", "\n", "comments", "=", "{", "'comment'", ":", "[", "]", ",", "'obj_info'", ":", "[", "]", "}", "\n", "while", "True", ":", "\n", "            ", "line", "=", "stream", ".", "readline", "(", ")", ".", "decode", "(", "'ascii'", ")", ".", "strip", "(", ")", "\n", "fields", "=", "_split_line", "(", "line", ",", "1", ")", "\n", "\n", "if", "fields", "[", "0", "]", "==", "'end_header'", ":", "\n", "                ", "break", "\n", "\n", "", "elif", "fields", "[", "0", "]", "in", "comments", ".", "keys", "(", ")", ":", "\n", "                ", "lines", ".", "append", "(", "fields", ")", "\n", "", "else", ":", "\n", "                ", "lines", ".", "append", "(", "line", ".", "split", "(", ")", ")", "\n", "\n", "", "", "a", "=", "0", "\n", "if", "lines", "[", "a", "]", "!=", "[", "'ply'", "]", ":", "\n", "            ", "raise", "PlyParseError", "(", "\"expected 'ply'\"", ")", "\n", "\n", "", "a", "+=", "1", "\n", "while", "lines", "[", "a", "]", "[", "0", "]", "in", "comments", ".", "keys", "(", ")", ":", "\n", "            ", "comments", "[", "lines", "[", "a", "]", "[", "0", "]", "]", ".", "append", "(", "lines", "[", "a", "]", "[", "1", "]", ")", "\n", "a", "+=", "1", "\n", "\n", "", "if", "lines", "[", "a", "]", "[", "0", "]", "!=", "'format'", ":", "\n", "            ", "raise", "PlyParseError", "(", "\"expected 'format'\"", ")", "\n", "\n", "", "if", "lines", "[", "a", "]", "[", "2", "]", "!=", "'1.0'", ":", "\n", "            ", "raise", "PlyParseError", "(", "\"expected version '1.0'\"", ")", "\n", "\n", "", "if", "len", "(", "lines", "[", "a", "]", ")", "!=", "3", ":", "\n", "            ", "raise", "PlyParseError", "(", "\"too many fields after 'format'\"", ")", "\n", "\n", "", "fmt", "=", "lines", "[", "a", "]", "[", "1", "]", "\n", "\n", "if", "fmt", "not", "in", "_byte_order_map", ":", "\n", "            ", "raise", "PlyParseError", "(", "\"don't understand format %r\"", "%", "fmt", ")", "\n", "\n", "", "byte_order", "=", "_byte_order_map", "[", "fmt", "]", "\n", "text", "=", "fmt", "==", "'ascii'", "\n", "\n", "a", "+=", "1", "\n", "while", "a", "<", "len", "(", "lines", ")", "and", "lines", "[", "a", "]", "[", "0", "]", "in", "comments", ".", "keys", "(", ")", ":", "\n", "            ", "comments", "[", "lines", "[", "a", "]", "[", "0", "]", "]", ".", "append", "(", "lines", "[", "a", "]", "[", "1", "]", ")", "\n", "a", "+=", "1", "\n", "\n", "", "return", "PlyData", "(", "PlyElement", ".", "_parse_multi", "(", "lines", "[", "a", ":", "]", ")", ",", "\n", "text", ",", "byte_order", ",", "\n", "comments", "[", "'comment'", "]", ",", "comments", "[", "'obj_info'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.read": [[274, 290], ["plyfile._open_stream", "plyfile.PlyData._parse_header", "elt._read", "stream.close"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._open_stream", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData._parse_header", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._read"], ["", "@", "staticmethod", "\n", "def", "read", "(", "stream", ")", ":", "\n", "        ", "'''\n        Read PLY data from a readable file-like object or filename.\n\n        '''", "\n", "(", "must_close", ",", "stream", ")", "=", "_open_stream", "(", "stream", ",", "'read'", ")", "\n", "try", ":", "\n", "            ", "data", "=", "PlyData", ".", "_parse_header", "(", "stream", ")", "\n", "for", "elt", "in", "data", ":", "\n", "                ", "elt", ".", "_read", "(", "stream", ",", "data", ".", "text", ",", "data", ".", "byte_order", ")", "\n", "", "", "finally", ":", "\n", "            ", "if", "must_close", ":", "\n", "                ", "stream", ".", "close", "(", ")", "\n", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write": [[291, 305], ["plyfile._open_stream", "stream.write", "stream.write", "plyfile.PlyData.header.encode", "elt._write", "stream.close"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._open_stream", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.write", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._write"], ["", "def", "write", "(", "self", ",", "stream", ")", ":", "\n", "        ", "'''\n        Write PLY data to a writeable file-like object or filename.\n\n        '''", "\n", "(", "must_close", ",", "stream", ")", "=", "_open_stream", "(", "stream", ",", "'write'", ")", "\n", "try", ":", "\n", "            ", "stream", ".", "write", "(", "self", ".", "header", ".", "encode", "(", "'ascii'", ")", ")", "\n", "stream", ".", "write", "(", "b'\\r\\n'", ")", "\n", "for", "elt", "in", "self", ":", "\n", "                ", "elt", ".", "_write", "(", "stream", ",", "self", ".", "text", ",", "self", ".", "byte_order", ")", "\n", "", "", "finally", ":", "\n", "            ", "if", "must_close", ":", "\n", "                ", "stream", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.header": [[306, 332], ["lines.extend", "lines.append", "lines.append", "lines.append", "lines.append", "lines.append"], "methods", ["None"], ["", "", "", "@", "property", "\n", "def", "header", "(", "self", ")", ":", "\n", "        ", "'''\n        Provide PLY-formatted metadata for the instance.\n\n        '''", "\n", "lines", "=", "[", "'ply'", "]", "\n", "\n", "if", "self", ".", "text", ":", "\n", "            ", "lines", ".", "append", "(", "'format ascii 1.0'", ")", "\n", "", "else", ":", "\n", "            ", "lines", ".", "append", "(", "'format '", "+", "\n", "_byte_order_reverse", "[", "self", ".", "byte_order", "]", "+", "\n", "' 1.0'", ")", "\n", "\n", "# Some information is lost here, since all comments are placed", "\n", "# between the 'format' line and the first element.", "\n", "", "for", "c", "in", "self", ".", "comments", ":", "\n", "            ", "lines", ".", "append", "(", "'comment '", "+", "c", ")", "\n", "\n", "", "for", "c", "in", "self", ".", "obj_info", ":", "\n", "            ", "lines", ".", "append", "(", "'obj_info '", "+", "c", ")", "\n", "\n", "", "lines", ".", "extend", "(", "elt", ".", "header", "for", "elt", "in", "self", ".", "elements", ")", "\n", "lines", ".", "append", "(", "'end_header'", ")", "\n", "return", "'\\r\\n'", ".", "join", "(", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__iter__": [[333, 335], ["iter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "self", ".", "elements", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__len__": [[336, 338], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "elements", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__contains__": [[339, 341], ["None"], "methods", ["None"], ["", "def", "__contains__", "(", "self", ",", "name", ")", ":", "\n", "        ", "return", "name", "in", "self", ".", "_element_lookup", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__getitem__": [[342, 344], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "name", ")", ":", "\n", "        ", "return", "self", ".", "_element_lookup", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__str__": [[345, 347], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "header", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyData.__repr__": [[348, 353], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "'PlyData(%r, text=%r, byte_order=%r, '", "\n", "'comments=%r, obj_info=%r)'", "%", "\n", "(", "self", ".", "elements", ",", "self", ".", "text", ",", "self", ".", "byte_order", ",", "\n", "self", ".", "comments", ",", "self", ".", "obj_info", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.__init__": [[379, 398], ["str", "plyfile.PlyElement._check_name", "tuple", "plyfile.PlyElement._index", "list", "any", "isinstance"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._check_name", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._index"], ["def", "__init__", "(", "self", ",", "name", ",", "properties", ",", "count", ",", "comments", "=", "[", "]", ")", ":", "\n", "        ", "'''\n        This is not part of the public interface.  The preferred methods\n        of obtaining PlyElement instances are PlyData.read (to read from\n        a file) and PlyElement.describe (to construct from a numpy\n        array).\n\n        '''", "\n", "self", ".", "_name", "=", "str", "(", "name", ")", "\n", "self", ".", "_check_name", "(", ")", "\n", "self", ".", "_count", "=", "count", "\n", "\n", "self", ".", "_properties", "=", "tuple", "(", "properties", ")", "\n", "self", ".", "_index", "(", ")", "\n", "\n", "self", ".", "comments", "=", "list", "(", "comments", ")", "\n", "\n", "self", ".", "_have_list", "=", "any", "(", "isinstance", "(", "p", ",", "PlyListProperty", ")", "\n", "for", "p", "in", "self", ".", "properties", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.count": [[399, 402], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "count", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_count", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._get_data": [[403, 405], ["None"], "methods", ["None"], ["", "def", "_get_data", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._set_data": [[406, 410], ["len", "plyfile.PlyElement._check_sanity"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._check_sanity"], ["", "def", "_set_data", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "_data", "=", "data", "\n", "self", ".", "_count", "=", "len", "(", "data", ")", "\n", "self", ".", "_check_sanity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._check_sanity": [[413, 417], ["ValueError"], "methods", ["None"], ["def", "_check_sanity", "(", "self", ")", ":", "\n", "        ", "for", "prop", "in", "self", ".", "properties", ":", "\n", "            ", "if", "prop", ".", "name", "not", "in", "self", ".", "_data", ".", "dtype", ".", "fields", ":", "\n", "                ", "raise", "ValueError", "(", "\"dangling property %r\"", "%", "prop", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._get_properties": [[418, 420], ["None"], "methods", ["None"], ["", "", "", "def", "_get_properties", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_properties", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._set_properties": [[421, 425], ["tuple", "plyfile.PlyElement._check_sanity", "plyfile.PlyElement._index"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._check_sanity", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._index"], ["", "def", "_set_properties", "(", "self", ",", "properties", ")", ":", "\n", "        ", "self", ".", "_properties", "=", "tuple", "(", "properties", ")", "\n", "self", ".", "_check_sanity", "(", ")", "\n", "self", ".", "_index", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._index": [[428, 433], ["dict", "len", "len", "ValueError"], "methods", ["None"], ["def", "_index", "(", "self", ")", ":", "\n", "        ", "self", ".", "_property_lookup", "=", "dict", "(", "(", "prop", ".", "name", ",", "prop", ")", "\n", "for", "prop", "in", "self", ".", "_properties", ")", "\n", "if", "len", "(", "self", ".", "_property_lookup", ")", "!=", "len", "(", "self", ".", "_properties", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"two properties with same name\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.ply_property": [[434, 436], ["None"], "methods", ["None"], ["", "", "def", "ply_property", "(", "self", ",", "name", ")", ":", "\n", "        ", "return", "self", ".", "_property_lookup", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.name": [[437, 440], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_name", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._check_name": [[441, 445], ["any", "ValueError", "c.isspace"], "methods", ["None"], ["", "def", "_check_name", "(", "self", ")", ":", "\n", "        ", "if", "any", "(", "c", ".", "isspace", "(", ")", "for", "c", "in", "self", ".", "_name", ")", ":", "\n", "            ", "msg", "=", "\"element name %r contains spaces\"", "%", "self", ".", "_name", "\n", "raise", "ValueError", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.dtype": [[446, 456], ["prop.dtype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "", "def", "dtype", "(", "self", ",", "byte_order", "=", "'='", ")", ":", "\n", "        ", "'''\n        Return the numpy dtype of the in-memory representation of the\n        data.  (If there are no list properties, and the PLY format is\n        binary, then this also accurately describes the on-disk\n        representation of the element.)\n\n        '''", "\n", "return", "[", "(", "prop", ".", "name", ",", "prop", ".", "dtype", "(", "byte_order", ")", ")", "\n", "for", "prop", "in", "self", ".", "properties", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._parse_multi": [[457, 469], ["plyfile.PlyElement._parse_one", "elements.append"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._parse_one"], ["", "@", "staticmethod", "\n", "def", "_parse_multi", "(", "header_lines", ")", ":", "\n", "        ", "'''\n        Parse a list of PLY element definitions.\n\n        '''", "\n", "elements", "=", "[", "]", "\n", "while", "header_lines", ":", "\n", "            ", "(", "elt", ",", "header_lines", ")", "=", "PlyElement", ".", "_parse_one", "(", "header_lines", ")", "\n", "elements", ".", "append", "(", "elt", ")", "\n", "\n", "", "return", "elements", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._parse_one": [[470, 505], ["plyfile.PlyParseError", "len", "plyfile.PlyParseError", "len", "plyfile.PlyParseError", "int", "plyfile.PlyElement", "len", "comments.append", "properties.append", "plyfile.PlyProperty._parse_one"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._parse_one"], ["", "@", "staticmethod", "\n", "def", "_parse_one", "(", "lines", ")", ":", "\n", "        ", "'''\n        Consume one element definition.  The unconsumed input is\n        returned along with a PlyElement instance.\n\n        '''", "\n", "a", "=", "0", "\n", "line", "=", "lines", "[", "a", "]", "\n", "\n", "if", "line", "[", "0", "]", "!=", "'element'", ":", "\n", "            ", "raise", "PlyParseError", "(", "\"expected 'element'\"", ")", "\n", "", "if", "len", "(", "line", ")", ">", "3", ":", "\n", "            ", "raise", "PlyParseError", "(", "\"too many fields after 'element'\"", ")", "\n", "", "if", "len", "(", "line", ")", "<", "3", ":", "\n", "            ", "raise", "PlyParseError", "(", "\"too few fields after 'element'\"", ")", "\n", "\n", "", "(", "name", ",", "count", ")", "=", "(", "line", "[", "1", "]", ",", "int", "(", "line", "[", "2", "]", ")", ")", "\n", "\n", "comments", "=", "[", "]", "\n", "properties", "=", "[", "]", "\n", "while", "True", ":", "\n", "            ", "a", "+=", "1", "\n", "if", "a", ">=", "len", "(", "lines", ")", ":", "\n", "                ", "break", "\n", "\n", "", "if", "lines", "[", "a", "]", "[", "0", "]", "==", "'comment'", ":", "\n", "                ", "comments", ".", "append", "(", "lines", "[", "a", "]", "[", "1", "]", ")", "\n", "", "elif", "lines", "[", "a", "]", "[", "0", "]", "==", "'property'", ":", "\n", "                ", "properties", ".", "append", "(", "PlyProperty", ".", "_parse_one", "(", "lines", "[", "a", "]", ")", ")", "\n", "", "else", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "(", "PlyElement", "(", "name", ",", "properties", ",", "count", ",", "comments", ")", ",", "\n", "lines", "[", "a", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.describe": [[506, 566], ["len", "plyfile.PlyElement", "isinstance", "TypeError", "len", "ValueError", "properties.append", "isinstance", "ValueError", "ValueError", "plyfile.PlyListProperty", "plyfile._lookup_type", "plyfile.PlyProperty", "len", "val_types.get", "plyfile._lookup_type", "plyfile._lookup_type", "len", "ValueError", "len_types.get"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._lookup_type", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._lookup_type", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._lookup_type"], ["", "@", "staticmethod", "\n", "def", "describe", "(", "data", ",", "name", ",", "len_types", "=", "{", "}", ",", "val_types", "=", "{", "}", ",", "\n", "comments", "=", "[", "]", ")", ":", "\n", "        ", "'''\n        Construct a PlyElement from an array's metadata.\n\n        len_types and val_types can be given as mappings from list\n        property names to type strings (like 'u1', 'f4', etc., or\n        'int8', 'float32', etc.). These can be used to define the length\n        and value types of list properties.  List property lengths\n        always default to type 'u1' (8-bit unsigned integer), and value\n        types default to 'i4' (32-bit integer).\n\n        '''", "\n", "if", "not", "isinstance", "(", "data", ",", "_np", ".", "ndarray", ")", ":", "\n", "            ", "raise", "TypeError", "(", "\"only numpy arrays are supported\"", ")", "\n", "\n", "", "if", "len", "(", "data", ".", "shape", ")", "!=", "1", ":", "\n", "            ", "raise", "ValueError", "(", "\"only one-dimensional arrays are \"", "\n", "\"supported\"", ")", "\n", "\n", "", "count", "=", "len", "(", "data", ")", "\n", "\n", "properties", "=", "[", "]", "\n", "descr", "=", "data", ".", "dtype", ".", "descr", "\n", "\n", "for", "t", "in", "descr", ":", "\n", "            ", "if", "not", "isinstance", "(", "t", "[", "1", "]", ",", "str", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\"nested records not supported\"", ")", "\n", "\n", "", "if", "not", "t", "[", "0", "]", ":", "\n", "                ", "raise", "ValueError", "(", "\"field with empty name\"", ")", "\n", "\n", "", "if", "len", "(", "t", ")", "!=", "2", "or", "t", "[", "1", "]", "[", "1", "]", "==", "'O'", ":", "\n", "# non-scalar field, which corresponds to a list", "\n", "# property in PLY.", "\n", "\n", "                ", "if", "t", "[", "1", "]", "[", "1", "]", "==", "'O'", ":", "\n", "                    ", "if", "len", "(", "t", ")", "!=", "2", ":", "\n", "                        ", "raise", "ValueError", "(", "\"non-scalar object fields not \"", "\n", "\"supported\"", ")", "\n", "\n", "", "", "len_str", "=", "_data_type_reverse", "[", "len_types", ".", "get", "(", "t", "[", "0", "]", ",", "'u1'", ")", "]", "\n", "if", "t", "[", "1", "]", "[", "1", "]", "==", "'O'", ":", "\n", "                    ", "val_type", "=", "val_types", ".", "get", "(", "t", "[", "0", "]", ",", "'i4'", ")", "\n", "val_str", "=", "_lookup_type", "(", "val_type", ")", "\n", "", "else", ":", "\n", "                    ", "val_str", "=", "_lookup_type", "(", "t", "[", "1", "]", "[", "1", ":", "]", ")", "\n", "\n", "", "prop", "=", "PlyListProperty", "(", "t", "[", "0", "]", ",", "len_str", ",", "val_str", ")", "\n", "", "else", ":", "\n", "                ", "val_str", "=", "_lookup_type", "(", "t", "[", "1", "]", "[", "1", ":", "]", ")", "\n", "prop", "=", "PlyProperty", "(", "t", "[", "0", "]", ",", "val_str", ")", "\n", "\n", "", "properties", ".", "append", "(", "prop", ")", "\n", "\n", "", "elt", "=", "PlyElement", "(", "name", ",", "properties", ",", "count", ",", "comments", ")", "\n", "elt", ".", "data", "=", "data", "\n", "\n", "return", "elt", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._read": [[567, 592], ["plyfile.PlyElement._check_sanity", "plyfile.PlyElement._read_txt", "len", "len", "plyfile.PlyParseError", "plyfile.PlyElement._read_bin", "numpy.fromfile", "plyfile.PlyElement.dtype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._check_sanity", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._read_txt", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._read_bin", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "def", "_read", "(", "self", ",", "stream", ",", "text", ",", "byte_order", ")", ":", "\n", "        ", "'''\n        Read the actual data from a PLY file.\n\n        '''", "\n", "if", "text", ":", "\n", "            ", "self", ".", "_read_txt", "(", "stream", ")", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "_have_list", ":", "\n", "# There are list properties, so a simple load is", "\n", "# impossible.", "\n", "                ", "self", ".", "_read_bin", "(", "stream", ",", "byte_order", ")", "\n", "", "else", ":", "\n", "# There are no list properties, so loading the data is", "\n", "# much more straightforward.", "\n", "                ", "self", ".", "_data", "=", "_np", ".", "fromfile", "(", "stream", ",", "\n", "self", ".", "dtype", "(", "byte_order", ")", ",", "\n", "self", ".", "count", ")", "\n", "\n", "", "", "if", "len", "(", "self", ".", "_data", ")", "<", "self", ".", "count", ":", "\n", "            ", "k", "=", "len", "(", "self", ".", "_data", ")", "\n", "del", "self", ".", "_data", "\n", "raise", "PlyParseError", "(", "\"early end-of-file\"", ",", "self", ",", "k", ")", "\n", "\n", "", "self", ".", "_check_sanity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._write": [[593, 610], ["plyfile.PlyElement._write_txt", "plyfile.PlyElement._write_bin", "plyfile.PlyElement.data.astype().tofile", "plyfile.PlyElement.data.astype", "plyfile.PlyElement.dtype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._write_txt", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._write_bin", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "def", "_write", "(", "self", ",", "stream", ",", "text", ",", "byte_order", ")", ":", "\n", "        ", "'''\n        Write the data to a PLY file.\n\n        '''", "\n", "if", "text", ":", "\n", "            ", "self", ".", "_write_txt", "(", "stream", ")", "\n", "", "else", ":", "\n", "            ", "if", "self", ".", "_have_list", ":", "\n", "# There are list properties, so serialization is", "\n", "# slightly complicated.", "\n", "                ", "self", ".", "_write_bin", "(", "stream", ",", "byte_order", ")", "\n", "", "else", ":", "\n", "# no list properties, so serialization is", "\n", "# straightforward.", "\n", "                ", "self", ".", "data", ".", "astype", "(", "self", ".", "dtype", "(", "byte_order", ")", ",", "\n", "copy", "=", "False", ")", ".", "tofile", "(", "stream", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._read_txt": [[611, 642], ["numpy.empty", "itertools.islice", "iter", "iter", "plyfile.PlyParseError", "plyfile.PlyElement.dtype", "line.strip().split", "next", "plyfile.PlyParseError", "prop._from_fields", "line.strip", "plyfile.PlyParseError", "plyfile.PlyParseError"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._from_fields"], ["", "", "", "def", "_read_txt", "(", "self", ",", "stream", ")", ":", "\n", "        ", "'''\n        Load a PLY element from an ASCII-format PLY file.  The element\n        may contain list properties.\n\n        '''", "\n", "self", ".", "_data", "=", "_np", ".", "empty", "(", "self", ".", "count", ",", "dtype", "=", "self", ".", "dtype", "(", ")", ")", "\n", "\n", "k", "=", "0", "\n", "for", "line", "in", "_islice", "(", "iter", "(", "stream", ".", "readline", ",", "b''", ")", ",", "self", ".", "count", ")", ":", "\n", "            ", "fields", "=", "iter", "(", "line", ".", "strip", "(", ")", ".", "split", "(", ")", ")", "\n", "for", "prop", "in", "self", ".", "properties", ":", "\n", "                ", "try", ":", "\n", "                    ", "self", ".", "_data", "[", "prop", ".", "name", "]", "[", "k", "]", "=", "prop", ".", "_from_fields", "(", "fields", ")", "\n", "", "except", "StopIteration", ":", "\n", "                    ", "raise", "PlyParseError", "(", "\"early end-of-line\"", ",", "\n", "self", ",", "k", ",", "prop", ")", "\n", "", "except", "ValueError", ":", "\n", "                    ", "raise", "PlyParseError", "(", "\"malformed input\"", ",", "\n", "self", ",", "k", ",", "prop", ")", "\n", "", "", "try", ":", "\n", "                ", "next", "(", "fields", ")", "\n", "", "except", "StopIteration", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "raise", "PlyParseError", "(", "\"expected end-of-line\"", ",", "self", ",", "k", ")", "\n", "", "k", "+=", "1", "\n", "\n", "", "if", "k", "<", "self", ".", "count", ":", "\n", "            ", "del", "self", ".", "_data", "\n", "raise", "PlyParseError", "(", "\"early end-of-file\"", ",", "self", ",", "k", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._write_txt": [[643, 655], ["numpy.savetxt", "fields.extend", "prop._to_fields"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._to_fields"], ["", "", "def", "_write_txt", "(", "self", ",", "stream", ")", ":", "\n", "        ", "'''\n        Save a PLY element to an ASCII-format PLY file.  The element may\n        contain list properties.\n\n        '''", "\n", "for", "rec", "in", "self", ".", "data", ":", "\n", "            ", "fields", "=", "[", "]", "\n", "for", "prop", "in", "self", ".", "properties", ":", "\n", "                ", "fields", ".", "extend", "(", "prop", ".", "_to_fields", "(", "rec", "[", "prop", ".", "name", "]", ")", ")", "\n", "\n", "", "_np", ".", "savetxt", "(", "stream", ",", "[", "fields", "]", ",", "'%.18g'", ",", "newline", "=", "'\\r\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._read_bin": [[656, 672], ["numpy.empty", "_range", "plyfile.PlyElement.dtype", "prop._read_bin", "plyfile.PlyParseError"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._read_bin"], ["", "", "def", "_read_bin", "(", "self", ",", "stream", ",", "byte_order", ")", ":", "\n", "        ", "'''\n        Load a PLY element from a binary PLY file.  The element may\n        contain list properties.\n\n        '''", "\n", "self", ".", "_data", "=", "_np", ".", "empty", "(", "self", ".", "count", ",", "dtype", "=", "self", ".", "dtype", "(", "byte_order", ")", ")", "\n", "\n", "for", "k", "in", "_range", "(", "self", ".", "count", ")", ":", "\n", "            ", "for", "prop", "in", "self", ".", "properties", ":", "\n", "                ", "try", ":", "\n", "                    ", "self", ".", "_data", "[", "prop", ".", "name", "]", "[", "k", "]", "=", "prop", ".", "_read_bin", "(", "stream", ",", "byte_order", ")", "\n", "", "except", "StopIteration", ":", "\n", "                    ", "raise", "PlyParseError", "(", "\"early end-of-file\"", ",", "\n", "self", ",", "k", ",", "prop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement._write_bin": [[673, 682], ["prop._write_bin"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._write_bin"], ["", "", "", "", "def", "_write_bin", "(", "self", ",", "stream", ",", "byte_order", ")", ":", "\n", "        ", "'''\n        Save a PLY element to a binary PLY file.  The element may\n        contain list properties.\n\n        '''", "\n", "for", "rec", "in", "self", ".", "data", ":", "\n", "            ", "for", "prop", "in", "self", ".", "properties", ":", "\n", "                ", "prop", ".", "_write_bin", "(", "rec", "[", "prop", ".", "name", "]", ",", "stream", ",", "byte_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.header": [[683, 700], ["lines.extend", "lines.append", "list", "map"], "methods", ["None"], ["", "", "", "@", "property", "\n", "def", "header", "(", "self", ")", ":", "\n", "        ", "'''\n        Format this element's metadata as it would appear in a PLY\n        header.\n\n        '''", "\n", "lines", "=", "[", "'element %s %d'", "%", "(", "self", ".", "name", ",", "self", ".", "count", ")", "]", "\n", "\n", "# Some information is lost here, since all comments are placed", "\n", "# between the 'element' line and the first property definition.", "\n", "for", "c", "in", "self", ".", "comments", ":", "\n", "            ", "lines", ".", "append", "(", "'comment '", "+", "c", ")", "\n", "\n", "", "lines", ".", "extend", "(", "list", "(", "map", "(", "str", ",", "self", ".", "properties", ")", ")", ")", "\n", "\n", "return", "'\\r\\n'", ".", "join", "(", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.__getitem__": [[701, 703], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "        ", "return", "self", ".", "data", "[", "key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.__setitem__": [[704, 706], ["None"], "methods", ["None"], ["", "def", "__setitem__", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "        ", "self", ".", "data", "[", "key", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.__str__": [[707, 709], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "header", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyElement.__repr__": [[710, 714], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "'PlyElement(%r, %r, count=%d, comments=%r)'", "%", "\n", "(", "self", ".", "name", ",", "self", ".", "properties", ",", "self", ".", "count", ",", "\n", "self", ".", "comments", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty.__init__": [[724, 728], ["str", "plyfile.PlyProperty._check_name"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._check_name"], ["def", "__init__", "(", "self", ",", "name", ",", "val_dtype", ")", ":", "\n", "        ", "self", ".", "_name", "=", "str", "(", "name", ")", "\n", "self", ".", "_check_name", "(", ")", "\n", "self", ".", "val_dtype", "=", "val_dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._get_val_dtype": [[729, 731], ["None"], "methods", ["None"], ["", "def", "_get_val_dtype", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_val_dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._set_val_dtype": [[732, 734], ["plyfile._lookup_type"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._lookup_type"], ["", "def", "_set_val_dtype", "(", "self", ",", "val_dtype", ")", ":", "\n", "        ", "self", ".", "_val_dtype", "=", "_data_types", "[", "_lookup_type", "(", "val_dtype", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty.name": [[737, 740], ["None"], "methods", ["None"], ["@", "property", "\n", "def", "name", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_name", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._check_name": [[741, 745], ["any", "RuntimeError", "c.isspace"], "methods", ["None"], ["", "def", "_check_name", "(", "self", ")", ":", "\n", "        ", "if", "any", "(", "c", ".", "isspace", "(", ")", "for", "c", "in", "self", ".", "_name", ")", ":", "\n", "            ", "msg", "=", "\"Error: property name %r contains spaces\"", "%", "self", ".", "_name", "\n", "raise", "RuntimeError", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._parse_one": [[746, 769], ["plyfile.PlyListProperty", "plyfile.PlyProperty", "len", "plyfile.PlyParseError", "len", "plyfile.PlyParseError", "len", "plyfile.PlyParseError", "len", "plyfile.PlyParseError"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_parse_one", "(", "line", ")", ":", "\n", "        ", "assert", "line", "[", "0", "]", "==", "'property'", "\n", "\n", "if", "line", "[", "1", "]", "==", "'list'", ":", "\n", "            ", "if", "len", "(", "line", ")", ">", "5", ":", "\n", "                ", "raise", "PlyParseError", "(", "\"too many fields after \"", "\n", "\"'property list'\"", ")", "\n", "", "if", "len", "(", "line", ")", "<", "5", ":", "\n", "                ", "raise", "PlyParseError", "(", "\"too few fields after \"", "\n", "\"'property list'\"", ")", "\n", "\n", "", "return", "PlyListProperty", "(", "line", "[", "4", "]", ",", "line", "[", "2", "]", ",", "line", "[", "3", "]", ")", "\n", "\n", "", "else", ":", "\n", "            ", "if", "len", "(", "line", ")", ">", "3", ":", "\n", "                ", "raise", "PlyParseError", "(", "\"too many fields after \"", "\n", "\"'property'\"", ")", "\n", "", "if", "len", "(", "line", ")", "<", "3", ":", "\n", "                ", "raise", "PlyParseError", "(", "\"too few fields after \"", "\n", "\"'property'\"", ")", "\n", "\n", "", "return", "PlyProperty", "(", "line", "[", "2", "]", ",", "line", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty.dtype": [[770, 777], ["None"], "methods", ["None"], ["", "", "def", "dtype", "(", "self", ",", "byte_order", "=", "'='", ")", ":", "\n", "        ", "'''\n        Return the numpy dtype description for this property (as a tuple\n        of strings).\n\n        '''", "\n", "return", "byte_order", "+", "self", ".", "val_dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._from_fields": [[778, 785], ["numpy.dtype().type", "next", "numpy.dtype", "plyfile.PlyProperty.dtype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "def", "_from_fields", "(", "self", ",", "fields", ")", ":", "\n", "        ", "'''\n        Parse from generator.  Raise StopIteration if the property could\n        not be read.\n\n        '''", "\n", "return", "_np", ".", "dtype", "(", "self", ".", "dtype", "(", ")", ")", ".", "type", "(", "next", "(", "fields", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._to_fields": [[786, 792], ["numpy.dtype().type", "numpy.dtype", "plyfile.PlyProperty.dtype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "def", "_to_fields", "(", "self", ",", "data", ")", ":", "\n", "        ", "'''\n        Return generator over one item.\n\n        '''", "\n", "yield", "_np", ".", "dtype", "(", "self", ".", "dtype", "(", ")", ")", ".", "type", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._read_bin": [[793, 803], ["numpy.fromfile", "plyfile.PlyProperty.dtype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "def", "_read_bin", "(", "self", ",", "stream", ",", "byte_order", ")", ":", "\n", "        ", "'''\n        Read data from a binary stream.  Raise StopIteration if the\n        property could not be read.\n\n        '''", "\n", "try", ":", "\n", "            ", "return", "_np", ".", "fromfile", "(", "stream", ",", "self", ".", "dtype", "(", "byte_order", ")", ",", "1", ")", "[", "0", "]", "\n", "", "except", "IndexError", ":", "\n", "            ", "raise", "StopIteration", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty._write_bin": [[804, 810], ["numpy.dtype().type().tofile", "numpy.dtype().type", "numpy.dtype", "plyfile.PlyProperty.dtype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "", "def", "_write_bin", "(", "self", ",", "data", ",", "stream", ",", "byte_order", ")", ":", "\n", "        ", "'''\n        Write data to a binary stream.\n\n        '''", "\n", "_np", ".", "dtype", "(", "self", ".", "dtype", "(", "byte_order", ")", ")", ".", "type", "(", "data", ")", ".", "tofile", "(", "stream", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty.__str__": [[811, 814], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "val_str", "=", "_data_type_reverse", "[", "self", ".", "val_dtype", "]", "\n", "return", "'property %s %s'", "%", "(", "val_str", ",", "self", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyProperty.__repr__": [[815, 818], ["plyfile._lookup_type"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._lookup_type"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'PlyProperty(%r, %r)'", "%", "(", "self", ".", "name", ",", "\n", "_lookup_type", "(", "self", ".", "val_dtype", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.__init__": [[827, 831], ["plyfile.PlyProperty.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "name", ",", "len_dtype", ",", "val_dtype", ")", ":", "\n", "        ", "PlyProperty", ".", "__init__", "(", "self", ",", "name", ",", "val_dtype", ")", "\n", "\n", "self", ".", "len_dtype", "=", "len_dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._get_len_dtype": [[832, 834], ["None"], "methods", ["None"], ["", "def", "_get_len_dtype", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_len_dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._set_len_dtype": [[835, 837], ["plyfile._lookup_type"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._lookup_type"], ["", "def", "_set_len_dtype", "(", "self", ",", "len_dtype", ")", ":", "\n", "        ", "self", ".", "_len_dtype", "=", "_data_types", "[", "_lookup_type", "(", "len_dtype", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype": [[840, 846], ["None"], "methods", ["None"], ["def", "dtype", "(", "self", ",", "byte_order", "=", "'='", ")", ":", "\n", "        ", "'''\n        List properties always have a numpy dtype of \"object\".\n\n        '''", "\n", "return", "'|O'", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.list_dtype": [[847, 855], ["None"], "methods", ["None"], ["", "def", "list_dtype", "(", "self", ",", "byte_order", "=", "'='", ")", ":", "\n", "        ", "'''\n        Return the pair (len_dtype, val_dtype) (both numpy-friendly\n        strings).\n\n        '''", "\n", "return", "(", "byte_order", "+", "self", ".", "len_dtype", ",", "\n", "byte_order", "+", "self", ".", "val_dtype", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._from_fields": [[856, 866], ["plyfile.PlyListProperty.list_dtype", "int", "numpy.loadtxt", "numpy.dtype().type", "list", "len", "next", "itertools.islice", "numpy.dtype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.list_dtype", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "def", "_from_fields", "(", "self", ",", "fields", ")", ":", "\n", "        ", "(", "len_t", ",", "val_t", ")", "=", "self", ".", "list_dtype", "(", ")", "\n", "\n", "n", "=", "int", "(", "_np", ".", "dtype", "(", "len_t", ")", ".", "type", "(", "next", "(", "fields", ")", ")", ")", "\n", "\n", "data", "=", "_np", ".", "loadtxt", "(", "list", "(", "_islice", "(", "fields", ",", "n", ")", ")", ",", "val_t", ",", "ndmin", "=", "1", ")", "\n", "if", "len", "(", "data", ")", "<", "n", ":", "\n", "            ", "raise", "StopIteration", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._to_fields": [[867, 880], ["plyfile.PlyListProperty.list_dtype", "numpy.asarray().ravel", "numpy.dtype().type", "numpy.asarray", "numpy.dtype"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.list_dtype", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.dtype"], ["", "def", "_to_fields", "(", "self", ",", "data", ")", ":", "\n", "        ", "'''\n        Return generator over the (numerical) PLY representation of the\n        list data (length followed by actual data).\n\n        '''", "\n", "(", "len_t", ",", "val_t", ")", "=", "self", ".", "list_dtype", "(", ")", "\n", "\n", "data", "=", "_np", ".", "asarray", "(", "data", ",", "dtype", "=", "val_t", ")", ".", "ravel", "(", ")", "\n", "\n", "yield", "_np", ".", "dtype", "(", "len_t", ")", ".", "type", "(", "data", ".", "size", ")", "\n", "for", "x", "in", "data", ":", "\n", "            ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._read_bin": [[881, 894], ["plyfile.PlyListProperty.list_dtype", "numpy.fromfile", "len", "numpy.fromfile"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.list_dtype"], ["", "", "def", "_read_bin", "(", "self", ",", "stream", ",", "byte_order", ")", ":", "\n", "        ", "(", "len_t", ",", "val_t", ")", "=", "self", ".", "list_dtype", "(", "byte_order", ")", "\n", "\n", "try", ":", "\n", "            ", "n", "=", "_np", ".", "fromfile", "(", "stream", ",", "len_t", ",", "1", ")", "[", "0", "]", "\n", "", "except", "IndexError", ":", "\n", "            ", "raise", "StopIteration", "\n", "\n", "", "data", "=", "_np", ".", "fromfile", "(", "stream", ",", "val_t", ",", "n", ")", "\n", "if", "len", "(", "data", ")", "<", "n", ":", "\n", "            ", "raise", "StopIteration", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty._write_bin": [[895, 906], ["plyfile.PlyListProperty.list_dtype", "numpy.asarray().ravel", "numpy.array().tofile", "numpy.asarray().ravel.tofile", "numpy.asarray", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.list_dtype"], ["", "def", "_write_bin", "(", "self", ",", "data", ",", "stream", ",", "byte_order", ")", ":", "\n", "        ", "'''\n        Write data to a binary stream.\n\n        '''", "\n", "(", "len_t", ",", "val_t", ")", "=", "self", ".", "list_dtype", "(", "byte_order", ")", "\n", "\n", "data", "=", "_np", ".", "asarray", "(", "data", ",", "dtype", "=", "val_t", ")", ".", "ravel", "(", ")", "\n", "\n", "_np", ".", "array", "(", "data", ".", "size", ",", "dtype", "=", "len_t", ")", ".", "tofile", "(", "stream", ")", "\n", "data", ".", "tofile", "(", "stream", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.__str__": [[907, 911], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "len_str", "=", "_data_type_reverse", "[", "self", ".", "len_dtype", "]", "\n", "val_str", "=", "_data_type_reverse", "[", "self", ".", "val_dtype", "]", "\n", "return", "'property list %s %s %s'", "%", "(", "len_str", ",", "val_str", ",", "self", ".", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.PlyListProperty.__repr__": [[912, 917], ["plyfile._lookup_type", "plyfile._lookup_type"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._lookup_type", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._lookup_type"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "'PlyListProperty(%r, %r, %r)'", "%", "\n", "(", "self", ".", "name", ",", "\n", "_lookup_type", "(", "self", ".", "len_dtype", ")", ",", "\n", "_lookup_type", "(", "self", ".", "val_dtype", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._lookup_type": [[80, 89], ["ValueError"], "function", ["None"], ["def", "_lookup_type", "(", "type_str", ")", ":", "\n", "    ", "if", "type_str", "not", "in", "_data_type_reverse", ":", "\n", "        ", "try", ":", "\n", "            ", "type_str", "=", "_data_types", "[", "type_str", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "raise", "ValueError", "(", "\"field type %r not in %r\"", "%", "\n", "(", "type_str", ",", "_types_list", ")", ")", "\n", "\n", "", "", "return", "_data_type_reverse", "[", "type_str", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._split_line": [[91, 99], ["line.split", "len", "line.split.append", "len"], "function", ["None"], ["", "def", "_split_line", "(", "line", ",", "n", ")", ":", "\n", "    ", "fields", "=", "line", ".", "split", "(", "None", ",", "n", ")", "\n", "if", "len", "(", "fields", ")", "==", "n", ":", "\n", "        ", "fields", ".", "append", "(", "''", ")", "\n", "\n", "", "assert", "len", "(", "fields", ")", "==", "n", "+", "1", "\n", "\n", "return", "fields", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile.make2d": [[101, 119], ["RuntimeError", "len", "numpy.fromiter", "len", "len"], "function", ["None"], ["", "def", "make2d", "(", "array", ",", "cols", "=", "None", ",", "dtype", "=", "None", ")", ":", "\n", "    ", "'''\n    Make a 2D array from an array of arrays.  The `cols' and `dtype'\n    arguments can be omitted if the array is not empty.\n\n    '''", "\n", "if", "(", "cols", "is", "None", "or", "dtype", "is", "None", ")", "and", "not", "len", "(", "array", ")", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"cols and dtype must be specified for empty \"", "\n", "\"array\"", ")", "\n", "\n", "", "if", "cols", "is", "None", ":", "\n", "        ", "cols", "=", "len", "(", "array", "[", "0", "]", ")", "\n", "\n", "", "if", "dtype", "is", "None", ":", "\n", "        ", "dtype", "=", "array", "[", "0", "]", ".", "dtype", "\n", "\n", "", "return", "_np", ".", "fromiter", "(", "array", ",", "[", "(", "'_'", ",", "dtype", ",", "(", "cols", ",", ")", ")", "]", ",", "\n", "count", "=", "len", "(", "array", ")", ")", "[", "'_'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.plyfile._open_stream": [[355, 362], ["hasattr", "open", "RuntimeError"], "function", ["None"], ["", "", "def", "_open_stream", "(", "stream", ",", "read_or_write", ")", ":", "\n", "    ", "if", "hasattr", "(", "stream", ",", "read_or_write", ")", ":", "\n", "        ", "return", "(", "False", ",", "stream", ")", "\n", "", "try", ":", "\n", "        ", "return", "(", "True", ",", "open", "(", "stream", ",", "read_or_write", "[", "0", "]", "+", "'b'", ")", ")", "\n", "", "except", "TypeError", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"expected open file or filename\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.get_trainer": [[30, 39], ["ValueError"], "function", ["None"], ["def", "get_trainer", "(", "trainer", ")", ":", "\n", "  ", "if", "trainer", "==", "'PointNCELossTrainer'", ":", "\n", "    ", "return", "PointNCELossTrainer", "\n", "", "elif", "trainer", "==", "'PartitionPointNCELossTrainer'", ":", "\n", "    ", "return", "PartitionPointNCELossTrainer", "\n", "", "elif", "trainer", "==", "'PartitionPointNCELossTrainerPointNet'", ":", "\n", "    ", "return", "PartitionPointNCELossTrainerPointNet", "\n", "", "else", ":", "\n", "    ", "raise", "ValueError", "(", "f'Trainer {trainer} not found'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.main": [[40, 55], ["hydra.main", "os.path.exists", "logging.info", "logging.info", "logging.info", "omegaconf.OmegaConf.load", "logging.info", "OmegaConf.load.pretty", "lib.multi_proc_run", "ddp_train.single_proc_run"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.main", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.scannet_pair.SensorData.SensorData.load", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.multiprocessing_utils.multi_proc_run", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.single_proc_run"], ["", "", "@", "hydra", ".", "main", "(", "config_path", "=", "'config'", ",", "config_name", "=", "'defaults.yaml'", ")", "\n", "def", "main", "(", "config", ")", ":", "\n", "  ", "if", "os", ".", "path", ".", "exists", "(", "'config.yaml'", ")", ":", "\n", "    ", "logging", ".", "info", "(", "'===> Loading exsiting config file'", ")", "\n", "config", "=", "OmegaConf", ".", "load", "(", "'config.yaml'", ")", "\n", "logging", ".", "info", "(", "'===> Loaded exsiting config file'", ")", "\n", "", "logging", ".", "info", "(", "'===> Configurations'", ")", "\n", "logging", ".", "info", "(", "config", ".", "pretty", "(", ")", ")", "\n", "\n", "# Convert to dict", "\n", "if", "config", ".", "misc", ".", "num_gpus", ">", "1", ":", "\n", "      ", "mpu", ".", "multi_proc_run", "(", "config", ".", "misc", ".", "num_gpus", ",", "\n", "fun", "=", "single_proc_run", ",", "fun_args", "=", "(", "config", ",", ")", ")", "\n", "", "else", ":", "\n", "      ", "single_proc_run", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.single_proc_run": [[56, 71], ["make_data_loader", "ddp_train.get_trainer", "get_trainer.", "int", "Trainer.train", "Trainer.test", "int"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_data_loaders.make_data_loader", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.contrastive_scene_contexts.ddp_train.get_trainer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.lib.ddp_trainer.PointNCELossTrainer.train", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.sparseconv.voxelizer.test"], ["", "", "def", "single_proc_run", "(", "config", ")", ":", "\n", "  ", "from", "lib", ".", "ddp_data_loaders", "import", "make_data_loader", "\n", "\n", "train_loader", "=", "make_data_loader", "(", "\n", "config", ",", "\n", "int", "(", "config", ".", "trainer", ".", "batch_size", "/", "config", ".", "misc", ".", "num_gpus", ")", ",", "\n", "num_threads", "=", "int", "(", "config", ".", "misc", ".", "train_num_thread", "/", "config", ".", "misc", ".", "num_gpus", ")", ")", "\n", "\n", "Trainer", "=", "get_trainer", "(", "config", ".", "trainer", ".", "trainer", ")", "\n", "trainer", "=", "Trainer", "(", "config", "=", "config", ",", "data_loader", "=", "train_loader", ")", "\n", "\n", "if", "config", ".", "misc", ".", "is_train", ":", "\n", "    ", "trainer", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "    ", "trainer", ".", "test", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.Model.__init__": [[19, 24], ["MinkowskiEngine.MinkowskiNetwork.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "config", ",", "D", "=", "3", ",", "**", "kwargs", ")", ":", "\n", "    ", "assert", "self", ".", "BLOCK", "is", "not", "None", "\n", "assert", "self", ".", "OUT_PIXEL_DIST", ">", "0", "\n", "\n", "super", "(", "ResNetBase", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "config", ",", "D", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase.__init__": [[35, 43], ["resnet.Model.__init__", "resnet.ResNetBase.network_initialization", "resnet.ResNetBase.weight_initialization"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.res16unet.Res16UNetBase.network_initialization", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase.weight_initialization"], ["\n", "", "dilations", "=", "config", ".", "dilations", "\n", "bn_momentum", "=", "config", ".", "bn_momentum", "\n", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "self", ".", "conv1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase.network_initialization": [[44, 93], ["model.modules.common.conv", "model.modules.common.get_norm", "MinkowskiEngine.MinkowskiReLU", "model.modules.common.sum_pool", "resnet.ResNetBase._make_layer", "resnet.ResNetBase._make_layer", "resnet.ResNetBase._make_layer", "resnet.ResNetBase._make_layer", "model.modules.common.conv", "resnet.ResNetBase.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.sum_pool", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv"], ["D", "=", "D", ")", "\n", "\n", "self", ".", "bn1", "=", "get_norm", "(", "NormType", ".", "BATCH_NORM", ",", "self", ".", "inplanes", ",", "D", "=", "self", ".", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "relu", "=", "ME", ".", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "pool", "=", "sum_pool", "(", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "D", "=", "D", ")", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "0", "]", ",", "1", ")", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "1", "]", ",", "1", ")", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "2", "]", ",", "1", ")", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "space_n_time_m", "(", "dilations", "[", "3", "]", ",", "1", ")", ")", "\n", "\n", "self", ".", "final", "=", "conv", "(", "\n", "self", ".", "PLANES", "[", "3", "]", "*", "self", ".", "BLOCK", ".", "expansion", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "\n", "", "def", "weight_initialization", "(", "self", ")", ":", "\n", "    ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "      ", "if", "isinstance", "(", "m", ",", "ME", ".", "MinkowskiBatchNorm", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn", ".", "bias", ",", "0", ")", "\n", "\n", "", "", "", "def", "_make_layer", "(", "self", ",", "\n", "block", ",", "\n", "planes", ",", "\n", "blocks", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "norm_type", "=", "NormType", ".", "BATCH_NORM", ",", "\n", "bn_momentum", "=", "0.1", ")", ":", "\n", "    ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase.weight_initialization": [[94, 99], ["resnet.ResNetBase.modules", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["      ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "stride", ",", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer": [[100, 142], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "block", "layers.append", "model.modules.common.conv", "model.modules.common.get_norm", "block"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm"], ["bias", "=", "False", ",", "\n", "D", "=", "self", ".", "D", ")", ",", "\n", "get_norm", "(", "norm_type", ",", "planes", "*", "block", ".", "expansion", ",", "D", "=", "self", ".", "D", ",", "bn_momentum", "=", "bn_momentum", ")", ",", "\n", ")", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "stride", ",", "\n", "dilation", "=", "dilation", ",", "\n", "downsample", "=", "downsample", ",", "\n", "conv_type", "=", "self", ".", "CONV_TYPE", ",", "\n", "D", "=", "self", ".", "D", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "      ", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "inplanes", ",", "\n", "planes", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "dilation", ",", "\n", "conv_type", "=", "self", ".", "CONV_TYPE", ",", "\n", "D", "=", "self", ".", "D", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "final", "(", "x", ")", "\n", "return", "x", "\n", "\n", "\n", "", "", "class", "ResNet14", "(", "ResNetBase", ")", ":", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase.forward": [[143, 156], ["resnet.ResNetBase.conv1", "resnet.ResNetBase.bn1", "resnet.ResNetBase.relu", "resnet.ResNetBase.pool", "resnet.ResNetBase.layer1", "resnet.ResNetBase.layer2", "resnet.ResNetBase.layer3", "resnet.ResNetBase.layer4", "resnet.ResNetBase.final"], "methods", ["None"], ["  ", "BLOCK", "=", "BasicBlock", "\n", "LAYERS", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "\n", "", "class", "ResNet18", "(", "ResNetBase", ")", ":", "\n", "  ", "BLOCK", "=", "BasicBlock", "\n", "LAYERS", "=", "(", "2", ",", "2", ",", "2", ",", "2", ")", "\n", "\n", "\n", "", "class", "ResNet34", "(", "ResNetBase", ")", ":", "\n", "  ", "BLOCK", "=", "BasicBlock", "\n", "LAYERS", "=", "(", "3", ",", "4", ",", "6", ",", "3", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.res16unet.Res16UNetBase.__init__": [[28, 35], ["model.resnet.ResNetBase.__init__"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["bn_momentum", "=", "config", ".", "optimizer", ".", "bn_momentum", "\n", "\n", "def", "space_n_time_m", "(", "n", ",", "m", ")", ":", "\n", "      ", "return", "n", "if", "D", "==", "3", "else", "[", "n", ",", "n", ",", "n", ",", "m", "]", "\n", "\n", "", "if", "D", "==", "4", ":", "\n", "      ", "self", ".", "OUT_PIXEL_DIST", "=", "space_n_time_m", "(", "self", ".", "OUT_PIXEL_DIST", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.res16unet.Res16UNetBase.network_initialization": [[36, 204], ["model.modules.common.conv", "model.resnet.get_norm", "model.modules.common.conv", "model.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "model.modules.common.conv", "model.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "model.modules.common.conv", "model.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "model.modules.common.conv", "model.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "model.modules.common.conv_tr", "model.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "model.modules.common.conv_tr", "model.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "model.modules.common.conv_tr", "model.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "model.modules.common.conv_tr", "model.resnet.get_norm", "res16unet.Res16UNetBase._make_layer", "MinkowskiEngine.MinkowskiReLU", "model.modules.common.conv", "res16unet.Res16UNetBase.network_initialization.space_n_time_m"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv_tr", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.get_norm", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.resnet.ResNetBase._make_layer", "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.modules.common.conv"], ["# Output of the first conv concated to conv6", "\n", "", "self", ".", "inplanes", "=", "self", ".", "INIT_DIM", "\n", "print", "(", "\"building model, \"", ",", "in_channels", ")", "\n", "self", ".", "conv0p1s1", "=", "conv", "(", "\n", "in_channels", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "config", ".", "net", ".", "conv1_kernel_size", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "\n", "self", ".", "bn0", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv1p1s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn1", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block1", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "0", "]", ",", "\n", "self", ".", "LAYERS", "[", "0", "]", ",", "\n", "dilation", "=", "dilations", "[", "0", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv2p2s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn2", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block2", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "1", "]", ",", "\n", "self", ".", "LAYERS", "[", "1", "]", ",", "\n", "dilation", "=", "dilations", "[", "1", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv3p4s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn3", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block3", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "2", "]", ",", "\n", "self", ".", "LAYERS", "[", "2", "]", ",", "\n", "dilation", "=", "dilations", "[", "2", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "conv4p8s2", "=", "conv", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "inplanes", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bn4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "block4", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "3", "]", ",", "\n", "self", ".", "LAYERS", "[", "3", "]", ",", "\n", "dilation", "=", "dilations", "[", "3", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr4p16s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr4", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "4", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "4", "]", "+", "self", ".", "PLANES", "[", "2", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block5", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "4", "]", ",", "\n", "self", ".", "LAYERS", "[", "4", "]", ",", "\n", "dilation", "=", "dilations", "[", "4", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr5p8s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr5", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "5", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "5", "]", "+", "self", ".", "PLANES", "[", "1", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block6", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "5", "]", ",", "\n", "self", ".", "LAYERS", "[", "5", "]", ",", "\n", "dilation", "=", "dilations", "[", "5", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr6p4s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr6", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "6", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "6", "]", "+", "self", ".", "PLANES", "[", "0", "]", "*", "self", ".", "BLOCK", ".", "expansion", "\n", "self", ".", "block7", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "6", "]", ",", "\n", "self", ".", "LAYERS", "[", "6", "]", ",", "\n", "dilation", "=", "dilations", "[", "6", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "convtr7p2s2", "=", "conv_tr", "(", "\n", "self", ".", "inplanes", ",", "\n", "self", ".", "PLANES", "[", "7", "]", ",", "\n", "kernel_size", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "upsample_stride", "=", "space_n_time_m", "(", "2", ",", "1", ")", ",", "\n", "dilation", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "conv_type", "=", "self", ".", "NON_BLOCK_CONV_TYPE", ",", "\n", "D", "=", "D", ")", "\n", "self", ".", "bntr7", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "PLANES", "[", "7", "]", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "inplanes", "=", "self", ".", "PLANES", "[", "7", "]", "+", "self", ".", "INIT_DIM", "\n", "self", ".", "block8", "=", "self", ".", "_make_layer", "(", "\n", "self", ".", "BLOCK", ",", "\n", "self", ".", "PLANES", "[", "7", "]", ",", "\n", "self", ".", "LAYERS", "[", "7", "]", ",", "\n", "dilation", "=", "dilations", "[", "7", "]", ",", "\n", "norm_type", "=", "self", ".", "NORM_TYPE", ",", "\n", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "self", ".", "final", "=", "conv", "(", "self", ".", "PLANES", "[", "7", "]", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "self", ".", "relu", "=", "MinkowskiReLU", "(", "inplace", "=", "True", ")", "\n", "\n", "self", ".", "offsets_pre", "=", "conv", "(", "self", ".", "inplanes", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "self", ".", "bntr_offset", "=", "get_norm", "(", "self", ".", "NORM_TYPE", ",", "self", ".", "inplanes", ",", "D", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "offsets", "=", "conv", "(", "self", ".", "inplanes", ",", "3", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "True", ",", "D", "=", "D", ")", "\n", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "detach", "=", "False", ")", ":", "\n", "    ", "out", "=", "self", ".", "conv0p1s1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn0", "(", "out", ")", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.res16unet.Res16UNetBase.forward": [[206, 267], ["res16unet.Res16UNetBase.conv0p1s1", "res16unet.Res16UNetBase.bn0", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.conv1p1s2", "res16unet.Res16UNetBase.bn1", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block1", "res16unet.Res16UNetBase.conv2p2s2", "res16unet.Res16UNetBase.bn2", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block2", "res16unet.Res16UNetBase.conv3p4s2", "res16unet.Res16UNetBase.bn3", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block3", "res16unet.Res16UNetBase.conv4p8s2", "res16unet.Res16UNetBase.bn4", "res16unet.Res16UNetBase.relu", "res16unet.Res16UNetBase.block4", "res16unet.Res16UNetBase.convtr4p16s2", "res16unet.Res16UNetBase.bntr4", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block5", "res16unet.Res16UNetBase.convtr5p8s2", "res16unet.Res16UNetBase.bntr5", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block6", "res16unet.Res16UNetBase.convtr6p4s2", "res16unet.Res16UNetBase.bntr6", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block7", "res16unet.Res16UNetBase.convtr7p2s2", "res16unet.Res16UNetBase.bntr7", "res16unet.Res16UNetBase.relu", "MinkowskiEngine.cat", "res16unet.Res16UNetBase.block8", "res16unet.Res16UNetBase.final", "MinkowskiEngine.SparseTensor", "torch.norm", "torch.norm", "torch.norm", "torch.norm"], "methods", ["None"], ["\n", "out", "=", "self", ".", "conv1p1s2", "(", "out_p1", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out_b1p2", "=", "self", ".", "block1", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2p2s2", "(", "out_b1p2", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out_b2p4", "=", "self", ".", "block2", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3p4s2", "(", "out_b2p4", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out_b3p8", "=", "self", ".", "block3", "(", "out", ")", "\n", "\n", "# pixel_dist=16", "\n", "out", "=", "self", ".", "conv4p8s2", "(", "out_b3p8", ")", "\n", "out", "=", "self", ".", "bn4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "block4", "(", "out", ")", "\n", "\n", "# pixel_dist=8", "\n", "out", "=", "self", ".", "convtr4p16s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr4", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b3p8", ")", "\n", "out", "=", "self", ".", "block5", "(", "out", ")", "\n", "\n", "# pixel_dist=4", "\n", "out", "=", "self", ".", "convtr5p8s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr5", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b2p4", ")", "\n", "out", "=", "self", ".", "block6", "(", "out", ")", "\n", "\n", "# pixel_dist=2", "\n", "out", "=", "self", ".", "convtr6p4s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr6", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_b1p2", ")", "\n", "out", "=", "self", ".", "block7", "(", "out", ")", "\n", "\n", "# pixel_dist=1", "\n", "out", "=", "self", ".", "convtr7p2s2", "(", "out", ")", "\n", "out", "=", "self", ".", "bntr7", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "me", ".", "cat", "(", "out", ",", "out_p1", ")", "\n", "out", "=", "self", ".", "block8", "(", "out", ")", "\n", "\n", "offsets", "=", "self", ".", "offsets_pre", "(", "out", ")", "\n", "offsets", "=", "self", ".", "bntr_offset", "(", "offsets", ")", "\n", "offsets", "=", "self", ".", "relu", "(", "offsets", ")", "\n", "offsets", "=", "self", ".", "offsets", "(", "offsets", ")", "\n", "\n", "return", "offsets", ",", "self", ".", "final", "(", "out", ")", ",", "out", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.__init__.add_models": [[13, 15], ["MODELS.extend", "getattr", "dir", "model.res16unet", "model.pointnet2"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.__init__.get_models": [[19, 22], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.__init__.load_model": [[23, 35], ["__init__.get_models", "print", "print"], "function", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.__init__.get_models"], []], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__": [[30, 76], ["torch.Module.__init__", "model.pointnet2.pointnet2_modules.PointnetSAModuleVotes", "model.pointnet2.pointnet2_modules.PointnetSAModuleVotes", "model.pointnet2.pointnet2_modules.PointnetSAModuleVotes", "model.pointnet2.pointnet2_modules.PointnetSAModuleVotes", "model.pointnet2.pointnet2_modules.PointnetFPModule", "model.pointnet2.pointnet2_modules.PointnetFPModule", "model.pointnet2.pointnet2_modules.PointnetFPModule", "model.pointnet2.pointnet2_modules.PointnetFPModule"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.__init__"], ["def", "__init__", "(", "self", ",", "num_feats", ",", "n_out", ",", "config", ",", "D", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "input_feature_dim", "=", "0", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "sa1", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "2048", ",", "\n", "radius", "=", "0.2", ",", "\n", "nsample", "=", "64", ",", "\n", "mlp", "=", "[", "input_feature_dim", ",", "64", ",", "64", ",", "128", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "sa2", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "1024", ",", "\n", "radius", "=", "0.4", ",", "\n", "nsample", "=", "32", ",", "\n", "mlp", "=", "[", "128", ",", "128", ",", "128", ",", "256", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "sa3", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "512", ",", "\n", "radius", "=", "0.8", ",", "\n", "nsample", "=", "16", ",", "\n", "mlp", "=", "[", "256", ",", "128", ",", "128", ",", "256", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "sa4", "=", "PointnetSAModuleVotes", "(", "\n", "npoint", "=", "256", ",", "\n", "radius", "=", "1.2", ",", "\n", "nsample", "=", "16", ",", "\n", "mlp", "=", "[", "256", ",", "128", ",", "128", ",", "256", "]", ",", "\n", "use_xyz", "=", "True", ",", "\n", "normalize_xyz", "=", "True", "\n", ")", "\n", "\n", "self", ".", "fp1", "=", "PointnetFPModule", "(", "mlp", "=", "[", "256", "+", "256", ",", "256", ",", "256", "]", ")", "\n", "self", ".", "fp2", "=", "PointnetFPModule", "(", "mlp", "=", "[", "256", "+", "256", ",", "256", ",", "256", "]", ")", "\n", "self", ".", "fp3", "=", "PointnetFPModule", "(", "mlp", "=", "[", "256", "+", "128", ",", "256", ",", "128", "]", ")", "\n", "self", ".", "fp4", "=", "PointnetFPModule", "(", "mlp", "=", "[", "128", ",", "128", ",", "32", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone._break_up_pc": [[77, 85], ["pc[].contiguous", "pc[].transpose().contiguous", "pc.size", "pc[].transpose"], "methods", ["None"], ["", "def", "_break_up_pc", "(", "self", ",", "pc", ")", ":", "\n", "        ", "xyz", "=", "pc", "[", "...", ",", "0", ":", "3", "]", ".", "contiguous", "(", ")", "\n", "features", "=", "(", "\n", "pc", "[", "...", ",", "3", ":", "]", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "if", "pc", ".", "size", "(", "-", "1", ")", ">", "3", "else", "None", "\n", ")", "\n", "\n", "return", "xyz", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone.forward": [[86, 136], ["pointnet2backbone.PointNet2Backbone._break_up_pc", "pointnet2backbone.PointNet2Backbone.sa1", "pointnet2backbone.PointNet2Backbone.sa2", "pointnet2backbone.PointNet2Backbone.sa3", "pointnet2backbone.PointNet2Backbone.sa4", "pointnet2backbone.PointNet2Backbone.fp1", "pointnet2backbone.PointNet2Backbone.fp2", "pointnet2backbone.PointNet2Backbone.fp3", "pointnet2backbone.PointNet2Backbone.fp4"], "methods", ["home.repos.pwc.inspect_result.facebookresearch_ContrastiveSceneContexts.model.pointnet2backbone.PointNet2Backbone._break_up_pc"], ["", "def", "forward", "(", "self", ",", "pointcloud", ":", "torch", ".", "cuda", ".", "FloatTensor", ",", "end_points", "=", "None", ")", ":", "\n", "        ", "r\"\"\"\n            Forward pass of the network\n\n            Parameters\n            ----------\n            pointcloud: Variable(torch.cuda.FloatTensor)\n                (B, N, 3 + input_feature_dim) tensor\n                Point cloud to run predicts on\n                Each point in the point-cloud MUST\n                be formated as (x, y, z, features...)\n\n            Returns\n            ----------\n            end_points: {XXX_xyz, XXX_features, XXX_inds}\n                XXX_xyz: float32 Tensor of shape (B,K,3)\n                XXX_features: float32 Tensor of shape (B,K,D)\n                XXX-inds: int64 Tensor of shape (B,K) values in [0,N-1]\n        \"\"\"", "\n", "if", "not", "end_points", ":", "end_points", "=", "{", "}", "\n", "\n", "xyz0", ",", "features0", "=", "self", ".", "_break_up_pc", "(", "pointcloud", ")", "\n", "\n", "\n", "# --------- 4 SET ABSTRACTION LAYERS ---------", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa1", "(", "xyz0", ",", "features0", ")", "\n", "end_points", "[", "'sa1_inds'", "]", "=", "fps_inds", "\n", "end_points", "[", "'sa1_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa1_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa2", "(", "xyz", ",", "features", ")", "# this fps_inds is just 0,1,...,1023", "\n", "end_points", "[", "'sa2_inds'", "]", "=", "fps_inds", "\n", "end_points", "[", "'sa2_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa2_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa3", "(", "xyz", ",", "features", ")", "# this fps_inds is just 0,1,...,511", "\n", "end_points", "[", "'sa3_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa3_features'", "]", "=", "features", "\n", "\n", "xyz", ",", "features", ",", "fps_inds", "=", "self", ".", "sa4", "(", "xyz", ",", "features", ")", "# this fps_inds is just 0,1,...,255", "\n", "end_points", "[", "'sa4_xyz'", "]", "=", "xyz", "\n", "end_points", "[", "'sa4_features'", "]", "=", "features", "\n", "\n", "# --------- 2 FEATURE UPSAMPLING LAYERS --------", "\n", "features", "=", "self", ".", "fp1", "(", "end_points", "[", "'sa3_xyz'", "]", ",", "end_points", "[", "'sa4_xyz'", "]", ",", "end_points", "[", "'sa3_features'", "]", ",", "end_points", "[", "'sa4_features'", "]", ")", "\n", "features", "=", "self", ".", "fp2", "(", "end_points", "[", "'sa2_xyz'", "]", ",", "end_points", "[", "'sa3_xyz'", "]", ",", "end_points", "[", "'sa2_features'", "]", ",", "features", ")", "\n", "features", "=", "self", ".", "fp3", "(", "end_points", "[", "'sa1_xyz'", "]", ",", "end_points", "[", "'sa2_xyz'", "]", ",", "end_points", "[", "'sa1_features'", "]", ",", "features", ")", "\n", "features", "=", "self", ".", "fp4", "(", "xyz0", ",", "end_points", "[", "'sa1_xyz'", "]", ",", "features0", ",", "features", ")", "\n", "\n", "return", "features", "\n", "", "", ""]]}