{"home.repos.pwc.inspect_result.6272code_6272-code.None.test_RMBN.ProcessResult": [[29, 39], ["torch.interpolate", "torch.interpolate", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable"], "function", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda"], ["def", "ProcessResult", "(", "cleaned_F", ")", ":", "\n", "    ", "img_F", "=", "cleaned_F", ".", "data", "\n", "img_F", "[", "img_F", ">", "1", "]", "=", "1", "\n", "img_F", "[", "img_F", "<", "0", "]", "=", "0", "\n", "img_M", "=", "F", ".", "interpolate", "(", "img_F", ",", "scale_factor", "=", "0.5", ",", "mode", "=", "'bicubic'", ")", "\n", "img_C", "=", "F", ".", "interpolate", "(", "img_M", ",", "scale_factor", "=", "0.5", ",", "mode", "=", "'bicubic'", ")", "\n", "img_F", "=", "Variable", "(", "img_F", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "img_M", "=", "Variable", "(", "img_M", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "img_C", "=", "Variable", "(", "img_C", ",", "requires_grad", "=", "False", ")", ".", "cuda", "(", ")", "\n", "return", "img_C", ",", "img_M", ",", "img_F", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.M_DuRN.EnDNet.__init__": [[12, 47], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh", "N_modules.LSTMHeadDown1", "N_modules.C2FShareHead", "N_modules.C2FShareHead", "N_modules.NormalHeadDown2", "DuRBs.DuRB_tv", "DuRBs.DuRB_tv", "DuRBs.DuRB_tv", "DuRBs.DuRB_tv", "DuRBs.DuRB_tv", "N_modules.NormalDecoderUp1", "DuRBs.DuRB_tv", "N_modules.C2FShareTail", "DuRBs.DuRB_tv", "N_modules.C2FShareTail", "DuRBs.DuRB_tv", "N_modules.NormalDecoderUp2"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_dim", ",", "norm_type", "=", "None", ",", "rain_iter", "=", "4", ")", ":", "\n", "        ", "super", "(", "EnDNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dim", "=", "96", "\n", "res_dim", "=", "64", "\n", "self", ".", "iteration", "=", "rain_iter", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n", "# --- Input branches ---", "\n", "self", ".", "rain_head", "=", "LSTMHeadDown1", "(", ")", "\n", "self", ".", "blur_head", "=", "C2FShareHead", "(", "need_res2", "=", "False", ")", "\n", "self", ".", "jpeg_head", "=", "C2FShareHead", "(", "need_res2", "=", "False", ")", "\n", "self", ".", "haze_head", "=", "NormalHeadDown2", "(", ")", "\n", "\n", "# --- stem net ---", "\n", "self", ".", "DuRB1", "=", "DuRB_tv", "(", "dim", ",", "dim", ",", "res_dim", ",", "k1_size", "=", "3", ",", "k2_size", "=", "3", ",", "dilation", "=", "2", ")", "# DuRB_tv means DuRB_M", "\n", "self", ".", "DuRB2", "=", "DuRB_tv", "(", "dim", ",", "dim", ",", "res_dim", ",", "k1_size", "=", "5", ",", "k2_size", "=", "3", ",", "dilation", "=", "1", ")", "\n", "self", ".", "DuRB3", "=", "DuRB_tv", "(", "dim", ",", "dim", ",", "res_dim", ",", "k1_size", "=", "3", ",", "k2_size", "=", "5", ",", "dilation", "=", "2", ")", "\n", "self", ".", "DuRB4", "=", "DuRB_tv", "(", "dim", ",", "dim", ",", "res_dim", ",", "k1_size", "=", "5", ",", "k2_size", "=", "5", ",", "dilation", "=", "1", ")", "\n", "self", ".", "DuRB5", "=", "DuRB_tv", "(", "dim", ",", "dim", ",", "res_dim", ",", "k1_size", "=", "7", ",", "k2_size", "=", "5", ",", "dilation", "=", "1", ")", "\n", "\n", "# --- Output branch1 = g1", "\n", "self", ".", "dec_1", "=", "NormalDecoderUp1", "(", ")", "# Rain", "\n", "self", ".", "DuRB6", "=", "DuRB_tv", "(", "dim", ",", "dim", ",", "res_dim", ",", "k1_size", "=", "7", ",", "k2_size", "=", "5", ",", "dilation", "=", "2", ")", "\n", "\n", "# --- Output branch2 = DuRB6 + g2", "\n", "self", ".", "dec_2", "=", "C2FShareTail", "(", "sum_before", "=", "False", ")", "# Blur", "\n", "self", ".", "DuRB7", "=", "DuRB_tv", "(", "dim", ",", "dim", ",", "res_dim", ",", "k1_size", "=", "11", ",", "k2_size", "=", "5", ",", "dilation", "=", "1", ")", "\n", "\n", "# --- Output branch3 = DuRB6 + DuRB7 + g3", "\n", "self", ".", "dec_3", "=", "C2FShareTail", "(", "sum_before", "=", "False", ")", "# Jepg", "\n", "self", ".", "DuRB8", "=", "DuRB_tv", "(", "dim", ",", "dim", ",", "res_dim", ",", "k1_size", "=", "11", ",", "k2_size", "=", "5", ",", "dilation", "=", "1", ")", "\n", "\n", "# --- Output branch3 = DuRB6 + DuRB7 + DuRB8 + g4", "\n", "self", ".", "dec_4", "=", "NormalDecoderUp2", "(", ")", "# Haze ", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.M_DuRN.EnDNet.forward": [[48, 156], ["M_DuRN.EnDNet.size", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "range", "M_DuRN.EnDNet.rain_head", "M_DuRN.EnDNet.DuRB1", "M_DuRN.EnDNet.DuRB2", "M_DuRN.EnDNet.DuRB3", "M_DuRN.EnDNet.DuRB4", "M_DuRN.EnDNet.DuRB5", "M_DuRN.EnDNet.dec_1", "M_DuRN.EnDNet.blur_head", "M_DuRN.EnDNet.DuRB1", "M_DuRN.EnDNet.DuRB2", "M_DuRN.EnDNet.DuRB3", "M_DuRN.EnDNet.DuRB4", "M_DuRN.EnDNet.DuRB5", "M_DuRN.EnDNet.DuRB6", "M_DuRN.EnDNet.dec_2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "M_DuRN.EnDNet.blur_head", "M_DuRN.EnDNet.DuRB1", "M_DuRN.EnDNet.DuRB2", "M_DuRN.EnDNet.DuRB3", "M_DuRN.EnDNet.DuRB4", "M_DuRN.EnDNet.DuRB5", "M_DuRN.EnDNet.DuRB6", "M_DuRN.EnDNet.dec_2", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "M_DuRN.EnDNet.blur_head", "M_DuRN.EnDNet.DuRB1", "M_DuRN.EnDNet.DuRB2", "M_DuRN.EnDNet.DuRB3", "M_DuRN.EnDNet.DuRB4", "M_DuRN.EnDNet.DuRB5", "M_DuRN.EnDNet.DuRB6", "M_DuRN.EnDNet.dec_2", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "M_DuRN.EnDNet.jpeg_head", "M_DuRN.EnDNet.DuRB1", "M_DuRN.EnDNet.DuRB2", "M_DuRN.EnDNet.DuRB3", "M_DuRN.EnDNet.DuRB4", "M_DuRN.EnDNet.DuRB5", "M_DuRN.EnDNet.DuRB6", "M_DuRN.EnDNet.DuRB7", "M_DuRN.EnDNet.dec_3", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "M_DuRN.EnDNet.jpeg_head", "M_DuRN.EnDNet.DuRB1", "M_DuRN.EnDNet.DuRB2", "M_DuRN.EnDNet.DuRB3", "M_DuRN.EnDNet.DuRB4", "M_DuRN.EnDNet.DuRB5", "M_DuRN.EnDNet.DuRB6", "M_DuRN.EnDNet.DuRB7", "M_DuRN.EnDNet.dec_3", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "M_DuRN.EnDNet.jpeg_head", "M_DuRN.EnDNet.DuRB1", "M_DuRN.EnDNet.DuRB2", "M_DuRN.EnDNet.DuRB3", "M_DuRN.EnDNet.DuRB4", "M_DuRN.EnDNet.DuRB5", "M_DuRN.EnDNet.DuRB6", "M_DuRN.EnDNet.DuRB7", "M_DuRN.EnDNet.dec_3", "M_DuRN.EnDNet.haze_head", "M_DuRN.EnDNet.DuRB1", "M_DuRN.EnDNet.DuRB2", "M_DuRN.EnDNet.DuRB3", "M_DuRN.EnDNet.DuRB4", "M_DuRN.EnDNet.DuRB5", "M_DuRN.EnDNet.DuRB6", "M_DuRN.EnDNet.DuRB7", "M_DuRN.EnDNet.DuRB8", "M_DuRN.EnDNet.dec_4", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda"], ["", "def", "forward", "(", "self", ",", "coarse", ",", "mid", ",", "fine", ",", "name", ")", ":", "\n", "# --- Header ---", "\n", "        ", "if", "name", "==", "'rain'", ":", "# H, W == 128, 128.", "\n", "            ", "x", "=", "fine", "# mid, coarse are not used.", "\n", "b", ",", "_", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "hidden", "=", "Variable", "(", "torch", ".", "zeros", "(", "b", ",", "32", ",", "H", ",", "W", ")", ")", ".", "cuda", "(", ")", "\n", "cell", "=", "Variable", "(", "torch", ".", "zeros", "(", "b", ",", "32", ",", "H", ",", "W", ")", ")", ".", "cuda", "(", ")", "\n", "stats", "=", "[", "hidden", ",", "cell", "]", "\n", "input_img", "=", "x", "\n", "for", "i", "in", "range", "(", "self", ".", "iteration", ")", ":", "\n", "                ", "x", ",", "res", ",", "stats", "=", "self", ".", "rain_head", "(", "x", ",", "input_img", ",", "stats", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB1", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB2", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB3", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB4", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB5", "(", "x", ",", "res", ")", "\n", "x", "=", "self", ".", "dec_1", "(", "x", ",", "input_img", ")", "\n", "", "return", "x", "\n", "\n", "", "elif", "name", "==", "'blur'", ":", "\n", "            ", "x", "=", "coarse", "\n", "x", ",", "res", "=", "self", ".", "blur_head", "(", "x", ",", "scale", "=", "'coarse'", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB1", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB2", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB3", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB4", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB5", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB6", "(", "x", ",", "res", ")", "\n", "coarse_out", "=", "self", ".", "dec_2", "(", "x", ",", "coarse", ",", "scale", "=", "'coarse'", ")", "\n", "coarse_up", "=", "F", ".", "interpolate", "(", "coarse_out", ",", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bicubic'", ")", "\n", "x", "=", "mid", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "coarse_up", ")", ",", "dim", "=", "1", ")", "\n", "x", ",", "res", "=", "self", ".", "blur_head", "(", "x", ",", "scale", "=", "'mid'", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB1", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB2", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB3", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB4", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB5", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB6", "(", "x", ",", "res", ")", "\n", "mid_out", "=", "self", ".", "dec_2", "(", "x", ",", "mid", ",", "scale", "=", "'mid'", ")", "\n", "mid_up", "=", "F", ".", "interpolate", "(", "mid_out", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "x", "=", "fine", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "mid_up", ")", ",", "dim", "=", "1", ")", "\n", "x", ",", "res", "=", "self", ".", "blur_head", "(", "x", ",", "scale", "=", "'fine'", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB1", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB2", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB3", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB4", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB5", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB6", "(", "x", ",", "res", ")", "\n", "fine_out", "=", "self", ".", "dec_2", "(", "x", ",", "fine", ",", "scale", "=", "'fine'", ")", "\n", "return", "coarse_out", ",", "mid_out", ",", "fine_out", "\n", "\n", "", "elif", "name", "==", "'jpeg'", ":", "\n", "            ", "x", "=", "coarse", "\n", "x", ",", "res", "=", "self", ".", "jpeg_head", "(", "x", ",", "scale", "=", "'coarse'", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB1", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB2", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB3", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB4", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB5", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB6", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB7", "(", "x", ",", "res", ")", "\n", "coarse_out", "=", "self", ".", "dec_3", "(", "x", ",", "coarse", ",", "scale", "=", "'coarse'", ")", "\n", "coarse_up", "=", "F", ".", "interpolate", "(", "coarse_out", ",", "scale_factor", "=", "2", ",", "\n", "mode", "=", "'bicubic'", ")", "\n", "x", "=", "mid", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "coarse_up", ")", ",", "dim", "=", "1", ")", "\n", "x", ",", "res", "=", "self", ".", "jpeg_head", "(", "x", ",", "scale", "=", "'mid'", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB1", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB2", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB3", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB4", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB5", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB6", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB7", "(", "x", ",", "res", ")", "\n", "mid_out", "=", "self", ".", "dec_3", "(", "x", ",", "mid", ",", "scale", "=", "'mid'", ")", "\n", "mid_up", "=", "F", ".", "interpolate", "(", "mid_out", ",", "scale_factor", "=", "2", ",", "mode", "=", "'bicubic'", ")", "\n", "\n", "x", "=", "fine", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "mid_up", ")", ",", "dim", "=", "1", ")", "\n", "x", ",", "res", "=", "self", ".", "jpeg_head", "(", "x", ",", "scale", "=", "'fine'", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB1", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB2", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB3", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB4", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB5", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB6", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB7", "(", "x", ",", "res", ")", "\n", "fine_out", "=", "self", ".", "dec_3", "(", "x", ",", "fine", ",", "scale", "=", "'fine'", ")", "\n", "return", "coarse_out", ",", "mid_out", ",", "fine_out", "\n", "\n", "", "else", ":", "# haze", "\n", "            ", "x", "=", "fine", "\n", "input_img", "=", "x", "\n", "x", ",", "res", "=", "self", ".", "haze_head", "(", "x", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB1", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB2", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB3", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB4", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB5", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB6", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB7", "(", "x", ",", "res", ")", "\n", "x", ",", "res", "=", "self", ".", "DuRB8", "(", "x", ",", "res", ")", "\n", "x", "=", "self", ".", "dec_4", "(", "x", ",", "input_img", ")", "\n", "return", "x", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.DuRBs.DuRB_tv.__init__": [[12, 39], ["torch.Module.__init__", "N_modules.SETVBasicBlock", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.SEBasicBlock", "N_modules.ConvLayer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "N_modules.ConvLayer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "print"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ",", "res_dim", ",", "k1_size", "=", "3", ",", "k2_size", "=", "3", ",", "\n", "dilation", "=", "1", ",", "with_relu", "=", "True", ",", "up_type", "=", "'PixShuf'", ",", "relu_type", "=", "'relu'", ")", ":", "\n", "        ", "super", "(", "DuRB_tv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "base", "=", "SETVBasicBlock", "(", "in_dim", ",", "in_dim", ",", "norm_type", "=", "None", ")", "\n", "\n", "# In T^{l}_{1}: A up-sample module + convolutional layer", "\n", "self", ".", "upsamp_module", "=", "UpSampleModule", "(", "in_dim", ",", "norm_type", "=", "None", ",", "\n", "module_type", "=", "up_type", ",", "relu_type", "=", "relu_type", ")", "\n", "self", ".", "up_conv", "=", "ConvLayer", "(", "in_dim", ",", "res_dim", ",", "kernel_size", "=", "k1_size", ",", "stride", "=", "1", ",", "dilation", "=", "dilation", ")", "\n", "\n", "# In T^{l}_{2}: A convolutional layer with stride = 2 for down-sampling", "\n", "self", ".", "down_conv", "=", "ConvLayer", "(", "res_dim", ",", "out_dim", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "down_se", "=", "SEBasicBlock", "(", "res_dim", ",", "res_dim", ",", "norm_type", "=", "None", ")", "\n", "self", ".", "down_seconv", "=", "ConvLayer", "(", "res_dim", ",", "out_dim", ",", "kernel_size", "=", "k2_size", ",", "stride", "=", "2", ")", "\n", "self", ".", "down_atten", "=", "nn", ".", "Sequential", "(", "*", "[", "self", ".", "down_se", ",", "self", ".", "down_seconv", "]", ")", "\n", "\n", "self", ".", "merge", "=", "ConvLayer", "(", "2", "*", "out_dim", ",", "out_dim", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "with_relu", "=", "with_relu", "\n", "\n", "if", "relu_type", "==", "'relu'", ":", "\n", "            ", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "relu_type", "==", "'prelu'", ":", "\n", "            ", "self", ".", "relu", "=", "nn", ".", "PReLU", "(", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'what relu type?'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.DuRBs.DuRB_tv.forward": [[40, 64], ["DuRBs.DuRB_tv.base", "DuRBs.DuRB_tv.upsamp_module", "DuRBs.DuRB_tv.up_conv", "DuRBs.DuRB_tv.relu", "DuRBs.DuRB_tv.relu", "DuRBs.DuRB_tv.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "DuRBs.DuRB_tv.merge", "DuRBs.DuRB_tv.relu", "DuRBs.DuRB_tv.down_conv", "DuRBs.DuRB_tv.down_atten"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "res", ")", ":", "\n", "\n", "# ---- The first two convs -----", "\n", "        ", "x_r", "=", "x", "\n", "x", "=", "self", ".", "base", "(", "x", ")", "\n", "# ------------------------------", "\n", "\n", "# T^{l}_{1}:", "\n", "x", "=", "self", ".", "upsamp_module", "(", "x", ")", "\n", "x", "=", "self", ".", "up_conv", "(", "x", ")", "\n", "\n", "x", "+=", "res", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "res", "=", "x", "\n", "\n", "# T^{l}_{2}:", "\n", "x1", "=", "self", ".", "relu", "(", "self", ".", "down_conv", "(", "x", ")", ")", "\n", "x2", "=", "self", ".", "relu", "(", "self", ".", "down_atten", "(", "x", ")", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "merge", "(", "x", ")", "\n", "x", "+=", "x_r", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", ",", "res", "\n", "", "", ""]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet.flist_reader": [[32, 37], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet.im_loader": [[39, 41], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet.__init__": [[43, 47], ["data_convertors.ConvertImageSet.flist_reader"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader"], ["", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet.__getitem__": [[49, 58], ["data_convertors.ConvertImageSet.im_loader", "data_convertors.ConvertImageSet.transform"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "im_pth", "=", "self", ".", "imlist", "[", "index", "]", "\n", "img", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "im_pth", ")", "\n", "\n", "# transform the image (or not)", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet.__len__": [[59, 61], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealHK.flist_reader": [[66, 71], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealHK.im_loader": [[73, 75], ["PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealHK.__init__": [[76, 83], ["data_convertors.ConvertImageSet_RealHK.flist_reader"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader"], ["", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "phase", ",", "with_data_aug", ",", "crop_size", "=", "None", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "phase", "=", "phase", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealHK.__getitem__": [[85, 127], ["data_convertors.ConvertImageSet_RealHK.im_loader", "data_convertors.ConvertImageSet_RealHK.im_loader", "random.randint", "random.randint", "label.rotate.rotate.crop", "noisy.rotate.rotate.crop", "data_convertors.ConvertImageSet_RealHK.transform", "data_convertors.ConvertImageSet_RealHK.transform", "data_convertors.ConvertImageSet_RealHK.im_loader", "random.random", "label.rotate.rotate.transpose", "noisy.rotate.rotate.transpose", "random.random", "label.rotate.rotate.transpose", "noisy.rotate.rotate.transpose", "random.random", "random.choice", "label.rotate.rotate.rotate", "noisy.rotate.rotate.rotate", "im_name.split", "im_name.split"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "im_name", "=", "self", ".", "imlist", "[", "index", "]", "\n", "label", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "im_name", ")", "\n", "if", "self", ".", "phase", "==", "'train'", ":", "\n", "            ", "noisy", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "im_name", ".", "split", "(", "'mean'", ")", "[", "0", "]", "+", "'Real.JPG'", ")", "\n", "", "elif", "self", ".", "phase", "==", "'test'", ":", "\n", "            ", "noisy", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "im_name", ".", "split", "(", "'mean'", ")", "[", "0", "]", "+", "'real.PNG'", ")", "\n", "\n", "# crop the image (or not)", "\n", "", "if", "self", ".", "crop_size", "!=", "None", ":", "\n", "            ", "W", ",", "H", "=", "label", ".", "size", "\n", "x_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "y_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "label", "=", "label", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "noisy", "=", "noisy", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "# Do augmentation (or not)", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "noisy", "=", "noisy", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "# Vertical flip", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "noisy", "=", "noisy", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "# Random rotation (90 or 180 or 270)", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "angle", "=", "random", ".", "choice", "(", "[", "90", ",", "180", ",", "270", "]", ")", "\n", "label", "=", "label", ".", "rotate", "(", "angle", ")", "\n", "noisy", "=", "noisy", ".", "rotate", "(", "angle", ")", "\n", "", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "# transform the image (or not)", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "label", "=", "self", ".", "transform", "(", "label", ")", "\n", "noisy", "=", "self", ".", "transform", "(", "noisy", ")", "\n", "\n", "", "return", "noisy", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealHK.__len__": [[128, 130], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainDrop.flist_reader": [[135, 140], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainDrop.im_loader": [[142, 146], ["numpy.asarray", "PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "#        return cv2.imread(im_pth)", "\n", "#        return cv2.cvtColor(cv2.imread(im_pth), cv2.COLOR_BGR2RGB)", "\n", "        ", "return", "np", ".", "asarray", "(", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "'RGB'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainDrop.align_to_four": [[148, 153], ["int", "int"], "methods", ["None"], ["", "def", "align_to_four", "(", "self", ",", "img", ")", ":", "\n", "        ", "a_row", "=", "int", "(", "img", ".", "shape", "[", "0", "]", "/", "4", ")", "*", "4", "\n", "a_col", "=", "int", "(", "img", ".", "shape", "[", "1", "]", "/", "4", ")", "*", "4", "\n", "img", "=", "img", "[", "0", ":", "a_row", ",", "0", ":", "a_col", "]", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainDrop.__init__": [[154, 171], ["data_convertors.ConvertImageSet_RainDrop.flist_reader", "enumerate", "data_convertors.ConvertImageSet_RainDrop.im_loader", "data_convertors.ConvertImageSet_RainDrop.label_chunk.append", "data_convertors.ConvertImageSet_RainDrop.im_loader", "data_convertors.ConvertImageSet_RainDrop.img_chunk.append", "PIL.Image.fromarray", "PIL.Image.fromarray", "print", "data_convertors.ConvertImageSet_RainDrop.align_to_four", "data_convertors.ConvertImageSet_RainDrop.align_to_four", "data_convertors.ConvertImageSet_RainDrop.copy", "data_convertors.ConvertImageSet_RainDrop.copy", "len", "str", "len", "str"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainDrop.align_to_four", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainDrop.align_to_four"], ["", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "crop_size", "=", "256", ",", "houzhui", "=", "'png'", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "houzhui", "=", "houzhui", "# file extension (such as .png)", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "img_chunk", "=", "[", "]", "\n", "self", ".", "label_chunk", "=", "[", "]", "\n", "for", "i", ",", "im_name", "in", "enumerate", "(", "self", ".", "imlist", ")", ":", "\n", "            ", "label", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "'gt/'", "+", "im_name", "+", "'_clean.'", "+", "self", ".", "houzhui", ")", "\n", "\n", "self", ".", "label_chunk", ".", "append", "(", "Image", ".", "fromarray", "(", "self", ".", "align_to_four", "(", "label", ".", "copy", "(", ")", ")", ")", ")", "\n", "img", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "'data/'", "+", "im_name", "+", "'_rain.'", "+", "self", ".", "houzhui", ")", "\n", "self", ".", "img_chunk", ".", "append", "(", "Image", ".", "fromarray", "(", "self", ".", "align_to_four", "(", "img", ".", "copy", "(", ")", ")", ")", ")", "\n", "\n", "if", "i", "%", "100", "==", "99", "or", "i", "==", "len", "(", "self", ".", "imlist", ")", "-", "1", ":", "\n", "                ", "print", "(", "'loading rain_drop image: '", "+", "str", "(", "i", "+", "1", ")", "+", "'/'", "+", "str", "(", "len", "(", "self", ".", "imlist", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainDrop.__getitem__": [[174, 195], ["random.randint", "random.randint", "data_convertors.ConvertImageSet_RainDrop.crop", "data_convertors.ConvertImageSet_RainDrop.crop", "data_convertors.ConvertImageSet_RainDrop.transform", "data_convertors.ConvertImageSet_RainDrop.transform"], "methods", ["None"], ["", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "label", "=", "self", ".", "label_chunk", "[", "index", "]", "\n", "img", "=", "self", ".", "img_chunk", "[", "index", "]", "\n", "\n", "# crop the image (or not)", "\n", "if", "self", ".", "crop_size", "!=", "None", ":", "\n", "            ", "W", ",", "H", "=", "label", ".", "size", "\n", "x_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "y_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "label", "=", "label", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "# transform the image (or not)", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "label", "=", "self", ".", "transform", "(", "label", ")", "\n", "\n", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainDrop.__len__": [[196, 198], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyDataWithFilter.flist_reader": [[204, 209], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyDataWithFilter.im_loader": [[211, 214], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "# There is an annoying non-RGB image in the dataset.", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyDataWithFilter.__init__": [[215, 229], ["data_convertors.ConvertImageSet_RainyDataWithFilter.flist_reader", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader"], ["", "def", "__init__", "(", "self", ",", "label_root", ",", "rainy_root", ",", "imlist_pth", ",", "crop_size", ",", "transform", ",", "r", ")", ":", "\n", "        ", "self", ".", "label_root", "=", "label_root", "\n", "self", ".", "rainy_root", "=", "rainy_root", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "# Vars: 14 types of rain streaks.", "\n", "self", ".", "Vars", "=", "np", ".", "arange", "(", "1", ",", "15", ",", "1", ")", "\n", "\n", "# r: width for guided image filtering.", "\n", "# DDN's original setting is 15.", "\n", "self", ".", "r", "=", "r", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyDataWithFilter.filter_image": [[232, 262], ["numpy.copy", "numpy.zeros", "range", "numpy.asarray", "numpy.ones", "cv2.boxFilter", "cv2.boxFilter", "cv2.boxFilter", "cv2.boxFilter", "cv2.boxFilter", "cv2.boxFilter", "cv2.boxFilter"], "methods", ["None"], ["", "def", "filter_image", "(", "self", ",", "image", ",", "rad", ")", ":", "\n", "        ", "r", "=", "rad", "\n", "data_", "=", "np", ".", "copy", "(", "np", ".", "asarray", "(", "image", ")", ")", "\n", "H", ",", "W", ",", "C", "=", "data_", ".", "shape", "\n", "eps", "=", "1.0", "\n", "batch_q", "=", "np", ".", "zeros", "(", "(", "1", ",", "H", ",", "W", ",", "C", ")", ")", "\n", "data", "=", "data_", "/", "255.0", "\n", "\n", "for", "j", "in", "range", "(", "3", ")", ":", "\n", "            ", "I", "=", "data", "[", ":", ",", ":", ",", "j", "]", "\n", "p", "=", "data", "[", ":", ",", ":", ",", "j", "]", "\n", "ones_array", "=", "np", ".", "ones", "(", "[", "H", ",", "W", "]", ")", "\n", "N", "=", "cv2", ".", "boxFilter", "(", "ones_array", ",", "-", "1", ",", "(", "2", "*", "r", "+", "1", ",", "2", "*", "r", "+", "1", ")", ",", "normalize", "=", "False", ",", "borderType", "=", "0", ")", "\n", "mean_I", "=", "cv2", ".", "boxFilter", "(", "I", ",", "-", "1", ",", "(", "2", "*", "r", "+", "1", ",", "2", "*", "r", "+", "1", ")", ",", "normalize", "=", "False", ",", "borderType", "=", "0", ")", "/", "N", "\n", "mean_p", "=", "cv2", ".", "boxFilter", "(", "p", ",", "-", "1", ",", "(", "2", "*", "r", "+", "1", ",", "2", "*", "r", "+", "1", ")", ",", "normalize", "=", "False", ",", "borderType", "=", "0", ")", "/", "N", "\n", "mean_Ip", "=", "cv2", ".", "boxFilter", "(", "I", "*", "p", ",", "-", "1", ",", "(", "2", "*", "r", "+", "1", ",", "2", "*", "r", "+", "1", ")", ",", "normalize", "=", "False", ",", "borderType", "=", "0", ")", "/", "N", "\n", "cov_Ip", "=", "mean_Ip", "-", "mean_I", "*", "mean_p", "\n", "mean_II", "=", "cv2", ".", "boxFilter", "(", "I", "*", "I", ",", "-", "1", ",", "(", "2", "*", "r", "+", "1", ",", "2", "*", "r", "+", "1", ")", ",", "normalize", "=", "False", ",", "borderType", "=", "0", ")", "/", "N", "\n", "var_I", "=", "mean_II", "-", "mean_I", "*", "mean_I", "\n", "a", "=", "cov_Ip", "/", "(", "var_I", "+", "eps", ")", "\n", "b", "=", "mean_p", "-", "a", "*", "mean_I", "\n", "mean_a", "=", "cv2", ".", "boxFilter", "(", "a", ",", "-", "1", ",", "(", "2", "*", "r", "+", "1", ",", "2", "*", "r", "+", "1", ")", ",", "normalize", "=", "False", ",", "borderType", "=", "0", ")", "/", "N", "\n", "mean_b", "=", "cv2", ".", "boxFilter", "(", "b", ",", "-", "1", ",", "(", "2", "*", "r", "+", "1", ",", "2", "*", "r", "+", "1", ")", ",", "normalize", "=", "False", ",", "borderType", "=", "0", ")", "/", "N", "\n", "q", "=", "mean_a", "*", "I", "+", "mean_b", "\n", "batch_q", "[", "0", ",", ":", ",", ":", ",", "j", "]", "=", "q", "\n", "\n", "", "low_freq", "=", "batch_q", "[", "0", "]", "\n", "high_freq", "=", "data", "-", "low_freq", "\n", "\n", "return", "high_freq", ",", "low_freq", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyDataWithFilter.__getitem__": [[264, 302], ["data_convertors.ConvertImageSet_RainyDataWithFilter.im_loader", "random.randint", "random.randint", "data_convertors.ConvertImageSet_RainyDataWithFilter.crop", "data_convertors.ConvertImageSet_RainyDataWithFilter.filter_image", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "data_convertors.ConvertImageSet_RainyDataWithFilter.transform", "random.choice", "data_convertors.ConvertImageSet_RainyDataWithFilter.im_loader", "data_convertors.ConvertImageSet_RainyDataWithFilter.crop", "data_convertors.ConvertImageSet_RainyDataWithFilter.filter_image", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "data_convertors.ConvertImageSet_RainyDataWithFilter.transform", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "str", "random.choice", "img_id.split"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyDataWithFilter.filter_image", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyDataWithFilter.filter_image"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_id", ",", "img_target", "=", "self", ".", "imlist", "[", "index", "]", "\n", "\n", "# prepare label data", "\n", "label", "=", "self", ".", "im_loader", "(", "self", ".", "label_root", "+", "img_id", ")", "\n", "W", ",", "H", "=", "label", ".", "size", "\n", "\n", "# random crop the ground truth image", "\n", "x_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "y_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "label", "=", "label", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "# guided-image-filtering the ground truth image.", "\n", "label_high_freq", ",", "label_low_freq", "=", "self", ".", "filter_image", "(", "label", ",", "self", ".", "r", ")", "\n", "label_high_freq", "=", "torch", ".", "FloatTensor", "(", "label_high_freq", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "label_low_freq", "=", "torch", ".", "FloatTensor", "(", "label_low_freq", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "label", "=", "self", ".", "transform", "(", "label", ")", "\n", "\n", "\n", "# prepare rainy data", "\n", "# change the [1,1] to [1,0] if you want to mix rain-free patches into input.", "\n", "if", "random", ".", "choice", "(", "[", "1", ",", "1", "]", ")", ":", "\n", "            ", "img_name", "=", "img_id", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "'_'", "+", "str", "(", "random", ".", "choice", "(", "self", ".", "Vars", ")", ")", "+", "'.jpg'", "\n", "img_pth", "=", "self", ".", "rainy_root", "+", "img_name", "\n", "", "else", ":", "\n", "            ", "img_pth", "=", "self", ".", "label_root", "+", "img_id", "\n", "", "img", "=", "self", ".", "im_loader", "(", "img_pth", ")", "\n", "\n", "# crop the rainy image", "\n", "img", "=", "img", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "# guided-image-filtering the rainy image", "\n", "high_freq", ",", "low_freq", "=", "self", ".", "filter_image", "(", "img", ",", "self", ".", "r", ")", "\n", "high_freq", "=", "torch", ".", "FloatTensor", "(", "high_freq", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "low_freq", "=", "torch", ".", "FloatTensor", "(", "low_freq", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "(", "high_freq", ",", "low_freq", ",", "img", ")", ",", "(", "label_high_freq", ",", "label_low_freq", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyDataWithFilter.__len__": [[303, 305], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyData.flist_reader": [[311, 316], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyData.im_loader": [[318, 321], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "# There is an annoying non-RGB image in the dataset.", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyData.__init__": [[322, 333], ["data_convertors.ConvertImageSet_RainyData.flist_reader", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader"], ["", "def", "__init__", "(", "self", ",", "dataroot", ",", "imlist_pth", ",", "crop_size", ",", "transform", ",", "with_data_aug", ")", ":", "\n", "\n", "        ", "self", ".", "label_root", "=", "dataroot", "+", "'label/'", "\n", "self", ".", "rainy_root", "=", "dataroot", "+", "'rain_image/'", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "\n", "# Vars: 14 types of rain streaks.", "\n", "self", ".", "Vars", "=", "np", ".", "arange", "(", "1", ",", "15", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyData.__getitem__": [[335, 378], ["data_convertors.ConvertImageSet_RainyData.im_loader", "random.randint", "random.randint", "label.rotate.rotate.crop", "random.choice", "data_convertors.ConvertImageSet_RainyData.im_loader", "rainy.rotate.rotate.crop", "data_convertors.ConvertImageSet_RainyData.transform", "data_convertors.ConvertImageSet_RainyData.transform", "random.random", "label.rotate.rotate.transpose", "rainy.rotate.rotate.transpose", "random.random", "label.rotate.rotate.transpose", "rainy.rotate.rotate.transpose", "random.random", "random.choice", "label.rotate.rotate.rotate", "rainy.rotate.rotate.rotate", "str", "random.choice", "img_id.split"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_id", "=", "self", ".", "imlist", "[", "index", "]", "\n", "\n", "# prepare label data", "\n", "label", "=", "self", ".", "im_loader", "(", "self", ".", "label_root", "+", "img_id", ")", "\n", "W", ",", "H", "=", "label", ".", "size", "\n", "\n", "# random crop the ground truth image", "\n", "x_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "y_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "label", "=", "label", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "# prepare rainy data", "\n", "# change the [1,1] to [1,0] if you want to mix rain-free patches into input.", "\n", "if", "random", ".", "choice", "(", "[", "1", ",", "1", "]", ")", ":", "\n", "            ", "img_name", "=", "img_id", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "'_'", "+", "str", "(", "random", ".", "choice", "(", "self", ".", "Vars", ")", ")", "+", "'.jpg'", "\n", "img_pth", "=", "self", ".", "rainy_root", "+", "img_name", "\n", "", "else", ":", "\n", "            ", "img_pth", "=", "self", ".", "label_root", "+", "img_id", "\n", "", "rainy", "=", "self", ".", "im_loader", "(", "img_pth", ")", "\n", "\n", "# crop the rainy image", "\n", "rainy", "=", "rainy", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "rainy", "=", "rainy", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "# Vertical flip", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "rainy", "=", "rainy", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "# Random rotation (90 or 180 or 270)", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "angle", "=", "random", ".", "choice", "(", "[", "90", ",", "180", ",", "270", "]", ")", "\n", "label", "=", "label", ".", "rotate", "(", "angle", ")", "\n", "rainy", "=", "rainy", ".", "rotate", "(", "angle", ")", "\n", "\n", "", "", "rainy", "=", "self", ".", "transform", "(", "rainy", ")", "\n", "label", "=", "self", ".", "transform", "(", "label", ")", "\n", "\n", "return", "rainy", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RainyData.__len__": [[380, 382], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_D_RainyData.flist_reader": [[388, 393], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_D_RainyData.im_loader": [[395, 398], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "# There is an annoying non-RGB image in the dataset.", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_D_RainyData.__init__": [[399, 419], ["data_convertors.ConvertImageSet_D_RainyData.flist_reader", "data_convertors.ConvertImageSet_D_RainyData.labels_chunk.append", "data_convertors.ConvertImageSet_D_RainyData.images_chunk.append", "data_convertors.ConvertImageSet_D_RainyData.im_loader", "data_convertors.ConvertImageSet_D_RainyData.crop", "data_convertors.ConvertImageSet_D_RainyData.crop", "var_chunk.append"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "dataroot", ",", "imlist_pth", ",", "crop_size", ",", "transform", ",", "with_data_aug", ")", ":", "\n", "\n", "        ", "self", ".", "dataroot", "=", "dataroot", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "Vars", "=", "[", "'Rain_Heavy'", ",", "'Rain_Medium'", ",", "'Rain_Light'", "]", "\n", "self", ".", "images_chunk", "=", "[", "]", "\n", "self", ".", "labels_chunk", "=", "[", "]", "\n", "for", "name", "in", "self", ".", "imlist", ":", "\n", "            ", "var_chunk", "=", "[", "]", "\n", "for", "var", "in", "self", ".", "Vars", ":", "\n", "                ", "pair", "=", "self", ".", "im_loader", "(", "self", ".", "dataroot", "+", "var", "+", "'/train2018new/'", "+", "name", ")", "\n", "pair_w", ",", "pair_h", "=", "pair", ".", "size", "\n", "rainy", "=", "pair", ".", "crop", "(", "(", "0", ",", "0", ",", "pair_w", "/", "2", ",", "pair_h", ")", ")", "\n", "label", "=", "pair", ".", "crop", "(", "(", "pair_w", "/", "2", ",", "0", ",", "pair_w", ",", "pair_h", ")", ")", "\n", "var_chunk", ".", "append", "(", "rainy", ")", "\n", "", "self", ".", "labels_chunk", ".", "append", "(", "label", ")", "\n", "self", ".", "images_chunk", ".", "append", "(", "var_chunk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_D_RainyData.__getitem__": [[421, 479], ["numpy.asarray", "numpy.asarray", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "data_convertors.ConvertImageSet_D_RainyData.transform", "data_convertors.ConvertImageSet_D_RainyData.transform", "data_convertors.ConvertImageSet_D_RainyData.transform", "data_convertors.ConvertImageSet_D_RainyData.transform", "data_convertors.ConvertImageSet_D_RainyData.transform", "data_convertors.ConvertImageSet_D_RainyData.transform", "random.randint", "random.randint", "rainy.transpose.transpose.crop", "label.transpose.transpose.crop", "random.choice", "random.random", "label.transpose.transpose.transpose", "rainy.transpose.transpose.transpose", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "label", "=", "self", ".", "labels_chunk", "[", "index", "]", "\n", "rainy", "=", "self", ".", "images_chunk", "[", "index", "]", "[", "random", ".", "choice", "(", "[", "0", ",", "1", ",", "2", "]", ")", "]", "\n", "\n", "if", "self", ".", "crop_size", "!=", "None", ":", "\n", "            ", "W", ",", "H", "=", "label", ".", "size", "\n", "x_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "y_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "rainy", "=", "rainy", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "label", "=", "label", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "rainy", "=", "rainy", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "# Vertical flip", "\n", "#            if random.random() > 0.5:", "\n", "#                label = label.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#                rainy = rainy.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "# Random rotation (90 or 180 or 270)", "\n", "#            if random.random() > 0.5:", "\n", "#                angle = random.choice([90, 180, 270])", "\n", "#                label = label.rotate(angle)", "\n", "#                rainy = rainy.rotate(angle)                ", "\n", "\n", "\n", "", "", "label", "=", "np", ".", "asarray", "(", "label", ")", "\n", "rainy", "=", "np", ".", "asarray", "(", "rainy", ")", "\n", "rainy_M", "=", "cv2", ".", "resize", "(", "rainy", ",", "\n", "(", "int", "(", "rainy", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "rainy", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "rainy_C", "=", "cv2", ".", "resize", "(", "rainy_M", ",", "\n", "(", "int", "(", "rainy_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "rainy_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_M", "=", "cv2", ".", "resize", "(", "label", ",", "\n", "(", "int", "(", "label", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_C", "=", "cv2", ".", "resize", "(", "label_M", ",", "\n", "(", "int", "(", "label_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "rainy", "=", "self", ".", "transform", "(", "rainy", ")", "\n", "rainy_M", "=", "self", ".", "transform", "(", "rainy_M", ")", "\n", "rainy_C", "=", "self", ".", "transform", "(", "rainy_C", ")", "\n", "\n", "label", "=", "self", ".", "transform", "(", "label", ")", "\n", "label_M", "=", "self", ".", "transform", "(", "label_M", ")", "\n", "label_C", "=", "self", ".", "transform", "(", "label_C", ")", "\n", "\n", "return", "(", "rainy", ",", "rainy_M", ",", "rainy_C", ")", ",", "(", "label", ",", "label_M", ",", "label_C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_D_RainyData.__len__": [[481, 483], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GoPro.flist_reader": [[489, 494], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GoPro.im_loader": [[496, 499], ["cv2.imread"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "#        return Image.open(im_pth)", "\n", "        ", "return", "cv2", ".", "imread", "(", "im_pth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GoPro.__init__": [[501, 520], ["data_convertors.ConvertImageSet_GoPro.flist_reader", "data_convertors.ConvertImageSet_GoPro.flist_reader", "enumerate", "data_convertors.ConvertImageSet_GoPro.labels_chunk.append", "data_convertors.ConvertImageSet_GoPro.images_chunk.append", "data_convertors.ConvertImageSet_GoPro.im_loader", "data_convertors.ConvertImageSet_GoPro.im_loader"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "dataroot", ",", "imlist_pth", ",", "labels_pth", ",", "transform", ",", "crop_size", ",", "with_data_aug", ",", "\n", "resize_to", "=", "None", ",", "mode", "=", "'train'", ")", ":", "\n", "\n", "        ", "self", ".", "dataroot", "=", "dataroot", "\n", "self", ".", "resize_to", "=", "resize_to", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "label_list", "=", "self", ".", "flist_reader", "(", "labels_pth", ")", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "labels_chunk", "=", "[", "]", "\n", "self", ".", "images_chunk", "=", "[", "]", "\n", "\n", "for", "i", ",", "label_name", "in", "enumerate", "(", "self", ".", "label_list", ")", ":", "\n", "            ", "blur_name", "=", "self", ".", "imlist", "[", "i", "]", "\n", "self", ".", "labels_chunk", ".", "append", "(", "self", ".", "im_loader", "(", "self", ".", "dataroot", "+", "label_name", ")", ")", "\n", "self", ".", "images_chunk", ".", "append", "(", "self", ".", "im_loader", "(", "self", ".", "dataroot", "+", "blur_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GoPro.__getitem__": [[522, 599], ["cv2.cvtColor", "cv2.cvtColor", "numpy.asarray", "numpy.asarray", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "data_convertors.ConvertImageSet_GoPro.transform", "data_convertors.ConvertImageSet_GoPro.transform", "data_convertors.ConvertImageSet_GoPro.transform", "data_convertors.ConvertImageSet_GoPro.transform", "data_convertors.ConvertImageSet_GoPro.transform", "data_convertors.ConvertImageSet_GoPro.transform", "cv2.resize", "cv2.resize", "PIL.Image.fromarray", "PIL.Image.fromarray", "random.randint", "random.randint", "label_img.transpose.transpose.crop", "blur_img.transpose.transpose.crop", "type", "random.random", "label_img.transpose.transpose.transpose", "blur_img.transpose.transpose.transpose", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "blur_img", "=", "self", ".", "images_chunk", "[", "index", "]", "\n", "label_img", "=", "self", ".", "labels_chunk", "[", "index", "]", "\n", "if", "type", "(", "self", ".", "resize_to", ")", ".", "__name__", "==", "'tuple'", ":", "\n", "            ", "blur_img", "=", "cv2", ".", "resize", "(", "blur_img", ",", "self", ".", "resize_to", ")", "\n", "label_img", "=", "cv2", ".", "resize", "(", "label_img", ",", "self", ".", "resize_to", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "blur_img", "=", "cv2", ".", "cvtColor", "(", "blur_img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "label_img", "=", "cv2", ".", "cvtColor", "(", "label_img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "\n", "if", "self", ".", "crop_size", "!=", "None", ":", "\n", "            ", "blur_img", "=", "Image", ".", "fromarray", "(", "blur_img", ")", "\n", "label_img", "=", "Image", ".", "fromarray", "(", "label_img", ")", "\n", "\n", "W", ",", "H", "=", "label_img", ".", "size", "\n", "x_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "y_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "label_img", "=", "label_img", ".", "crop", "(", "(", "x_offset", ",", "\n", "y_offset", ",", "\n", "x_offset", "+", "self", ".", "crop_size", ",", "\n", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "blur_img", "=", "blur_img", ".", "crop", "(", "(", "x_offset", ",", "\n", "y_offset", ",", "\n", "x_offset", "+", "self", ".", "crop_size", ",", "\n", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label_img", "=", "label_img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "blur_img", "=", "blur_img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "# Vertical flip", "\n", "#            if random.random() > 0.5:", "\n", "#                label_img = label_img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#                blur_img = blur_img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "# Random rotation (90 or 180 or 270)", "\n", "#            if random.random() > 0.5:", "\n", "#                angle = random.choice([90, 180, 270])", "\n", "#                label_img = label_img.rotate(angle)", "\n", "#                blur_img = blur_img.rotate(angle)              ", "\n", "\n", "", "", "label_img", "=", "np", ".", "asarray", "(", "label_img", ")", "\n", "blur_img", "=", "np", ".", "asarray", "(", "blur_img", ")", "\n", "\n", "blur_img_M", "=", "cv2", ".", "resize", "(", "blur_img", ",", "\n", "(", "int", "(", "blur_img", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "blur_img", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "blur_img_C", "=", "cv2", ".", "resize", "(", "blur_img_M", ",", "\n", "(", "int", "(", "blur_img_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "blur_img_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_img_M", "=", "cv2", ".", "resize", "(", "label_img", ",", "\n", "(", "int", "(", "label_img", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label_img", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_img_C", "=", "cv2", ".", "resize", "(", "label_img_M", ",", "\n", "(", "int", "(", "label_img_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label_img_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "blur_img", "=", "self", ".", "transform", "(", "blur_img", ")", "\n", "blur_img_M", "=", "self", ".", "transform", "(", "blur_img_M", ")", "\n", "blur_img_C", "=", "self", ".", "transform", "(", "blur_img_C", ")", "\n", "\n", "label_img", "=", "self", ".", "transform", "(", "label_img", ")", "\n", "label_img_M", "=", "self", ".", "transform", "(", "label_img_M", ")", "\n", "label_img_C", "=", "self", ".", "transform", "(", "label_img_C", ")", "\n", "\n", "return", "(", "blur_img", ",", "blur_img_M", ",", "blur_img_C", ")", ",", "(", "label_img", ",", "label_img_M", ",", "label_img_C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GoPro.__len__": [[601, 603], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE.flist_reader": [[609, 614], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE.im_loader": [[616, 618], ["PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE.__init__": [[619, 635], ["data_convertors.ConvertImageSet_RESIDE.flist_reader", "data_convertors.ConvertImageSet_RESIDE.labels_chunk.append", "numpy.arange", "data_convertors.ConvertImageSet_RESIDE.images_chunk.append", "data_convertors.ConvertImageSet_RESIDE.im_loader", "var_chunk.append", "data_convertors.ConvertImageSet_RESIDE.im_loader", "str", "name.split"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "crop_size", "=", "256", ",", "transform", "=", "None", ",", "with_data_aug", "=", "True", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "\n", "self", ".", "labels_chunk", "=", "[", "]", "\n", "self", ".", "images_chunk", "=", "[", "]", "\n", "for", "name", "in", "self", ".", "imlist", ":", "\n", "            ", "self", ".", "labels_chunk", ".", "append", "(", "self", ".", "im_loader", "(", "self", ".", "root", "+", "'labels/'", "+", "name", ")", ")", "\n", "var_chunk", "=", "[", "]", "\n", "for", "var", "in", "np", ".", "arange", "(", "1", ",", "11", ",", "1", ")", ":", "\n", "                ", "var_chunk", ".", "append", "(", "self", ".", "im_loader", "(", "self", ".", "root", "+", "'images/'", "+", "name", ".", "split", "(", "'.'", ")", "[", "0", "]", "+", "\n", "'_'", "+", "str", "(", "var", ")", "+", "'.png'", ")", ")", "\n", "", "self", ".", "images_chunk", ".", "append", "(", "var_chunk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE.__getitem__": [[637, 698], ["random.randint", "random.randint", "label.rotate.rotate.crop", "img.rotate.rotate.crop", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "data_convertors.ConvertImageSet_RESIDE.transform", "data_convertors.ConvertImageSet_RESIDE.transform", "data_convertors.ConvertImageSet_RESIDE.transform", "data_convertors.ConvertImageSet_RESIDE.transform", "data_convertors.ConvertImageSet_RESIDE.transform", "data_convertors.ConvertImageSet_RESIDE.transform", "numpy.asarray", "numpy.asarray", "random.choice", "random.random", "label.rotate.rotate.transpose", "img.rotate.rotate.transpose", "random.random", "label.rotate.rotate.transpose", "img.rotate.rotate.transpose", "random.random", "random.choice", "label.rotate.rotate.rotate", "img.rotate.rotate.rotate", "int", "int", "int", "int", "int", "int", "int", "int", "numpy.arange"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "label", "=", "self", ".", "labels_chunk", "[", "index", "]", "\n", "img", "=", "self", ".", "images_chunk", "[", "index", "]", "[", "random", ".", "choice", "(", "np", ".", "arange", "(", "0", ",", "10", ",", "1", ")", ")", "]", "\n", "\n", "# random crop the ground truth image", "\n", "W", ",", "H", "=", "label", ".", "size", "\n", "x_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "y_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "label", "=", "label", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "# crop the hazy image ", "\n", "img", "=", "img", ".", "crop", "(", "(", "x_offset", ",", "y_offset", ",", "x_offset", "+", "self", ".", "crop_size", ",", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "\n", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "# Vertical flip", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "# Random rotation (90 or 180 or 270)", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "angle", "=", "random", ".", "choice", "(", "[", "90", ",", "180", ",", "270", "]", ")", "\n", "label", "=", "label", ".", "rotate", "(", "angle", ")", "\n", "img", "=", "img", ".", "rotate", "(", "angle", ")", "\n", "\n", "", "label", "=", "np", ".", "asarray", "(", "label", ")", "\n", "img", "=", "np", ".", "asarray", "(", "img", ")", "\n", "\n", "", "img_M", "=", "cv2", ".", "resize", "(", "img", ",", "\n", "(", "int", "(", "img", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "img", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "img_C", "=", "cv2", ".", "resize", "(", "img_M", ",", "\n", "(", "int", "(", "img_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "img_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_M", "=", "cv2", ".", "resize", "(", "label", ",", "\n", "(", "int", "(", "label", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_C", "=", "cv2", ".", "resize", "(", "label_M", ",", "\n", "(", "int", "(", "label_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "img_M", "=", "self", ".", "transform", "(", "img_M", ")", "\n", "img_C", "=", "self", ".", "transform", "(", "img_C", ")", "\n", "\n", "label", "=", "self", ".", "transform", "(", "label", ")", "\n", "label_M", "=", "self", ".", "transform", "(", "label_M", ")", "\n", "label_C", "=", "self", ".", "transform", "(", "label_C", ")", "\n", "\n", "return", "(", "img", ",", "img_M", ",", "img_C", ")", ",", "(", "label", ",", "label_M", ",", "label_C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE.__len__": [[699, 701], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_zhanghe.flist_reader": [[708, 713], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_zhanghe.im_loader": [[715, 738], ["h5py.File", "h5py.File.keys", "numpy.asarray", "numpy.asarray", "Exception", "numpy.asarray.astype", "numpy.asarray", "numpy.asarray.astype", "numpy.asarray", "numpy.asarray.max", "numpy.asarray.max", "PIL.Image.fromarray().resize", "PIL.Image.fromarray().resize", "PIL.Image.fromarray", "PIL.Image.fromarray"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ",", "resize_to", "=", "None", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "im_pth", ",", "'r'", ")", "\n", "keys", "=", "f", ".", "keys", "(", ")", "\n", "label", "=", "np", ".", "asarray", "(", "f", "[", "keys", "[", "1", "]", "]", ")", "\n", "img", "=", "np", ".", "asarray", "(", "f", "[", "keys", "[", "2", "]", "]", ")", "\n", "if", "label", ".", "max", "(", ")", ">", "1", "or", "img", ".", "max", "(", ")", ">", "1", ":", "\n", "            ", "raise", "Exception", "(", "'Data out of range [0~1]'", ")", "\n", "\n", "# resize it (or not)", "\n", "", "if", "resize_to", "!=", "None", ":", "\n", "            ", "label", "=", "label", "*", "255", "\n", "label", "=", "label", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "label", "=", "np", ".", "asarray", "(", "Image", ".", "fromarray", "(", "label", ")", ".", "resize", "(", "resize_to", ",", "Image", ".", "BICUBIC", ")", ")", "\n", "label", "=", "label", "/", "255.0", "\n", "\n", "img", "=", "img", "*", "255", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "img", "=", "np", ".", "asarray", "(", "Image", ".", "fromarray", "(", "img", ")", ".", "resize", "(", "resize_to", ",", "Image", ".", "BICUBIC", ")", ")", "\n", "img", "=", "img", "/", "255.0", "\n", "return", "(", "img", ",", "label", ")", "\n", "\n", "", "else", ":", "\n", "            ", "return", "(", "img", ",", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_zhanghe.__init__": [[739, 744], ["data_convertors.ConvertImageSet_zhanghe.flist_reader"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader"], ["", "", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "crop_size", "=", "64", ",", "resize_to", "=", "None", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "resize_to", "=", "resize_to", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_zhanghe.__getitem__": [[746, 769], ["data_convertors.ConvertImageSet_zhanghe.im_loader", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor.transpose", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "random.randint", "random.randint"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "im_pth", "=", "self", ".", "imlist", "[", "index", "]", "\n", "img", ",", "label", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "im_pth", ",", "resize_to", "=", "self", ".", "resize_to", ")", "\n", "\n", "# crop them (or not)", "\n", "if", "not", "self", ".", "crop_size", "is", "None", ":", "\n", "            ", "H", ",", "W", ",", "_", "=", "label", ".", "shape", "\n", "h_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "w_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "\n", "img", "=", "img", "[", "h_offset", ":", "h_offset", "+", "self", ".", "crop_size", ",", "w_offset", ":", "w_offset", "+", "self", ".", "crop_size", ",", ":", "]", "\n", "label", "=", "label", "[", "h_offset", ":", "h_offset", "+", "self", ".", "crop_size", ",", "w_offset", ":", "w_offset", "+", "self", ".", "crop_size", ",", ":", "]", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "img", "=", "img", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "label", "=", "label", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "img", "=", "torch", ".", "FloatTensor", "(", "img", ")", "\n", "label", "=", "torch", ".", "FloatTensor", "(", "label", ")", "\n", "\n", "#        return img, label, im_pth", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_zhanghe.__len__": [[770, 772], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_JpegCompress.flist_reader": [[776, 781], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_JpegCompress.im_loader": [[783, 788], ["numpy.asarray", "PIL.Image.fromarray", "PIL.Image.open().convert", "utils.align_to_k", "PIL.Image.open"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.align_to_k"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ",", "k", "=", "4", ")", ":", "\n", "        ", "img", "=", "np", ".", "asarray", "(", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "\"RGB\"", ")", ")", "\n", "if", "not", "k", "is", "None", ":", "\n", "            ", "img", "=", "align_to_k", "(", "img", ",", "k", ")", "\n", "", "return", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_JpegCompress.__init__": [[790, 802], ["data_convertors.ConvertImageSet_JpegCompress.flist_reader", "data_convertors.ConvertImageSet_JpegCompress.images_chunk.append", "data_convertors.ConvertImageSet_JpegCompress.im_loader"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "crop_size", "=", "256", ",", "Vars", "=", "[", "10", ",", "20", ",", "30", ",", "40", "]", ",", "transform", "=", "None", ",", "with_data_aug", "=", "False", ",", "align_k", "=", "None", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "Vars", "=", "Vars", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "align_k", "=", "align_k", "\n", "\n", "self", ".", "images_chunk", "=", "[", "]", "\n", "for", "name", "in", "self", ".", "imlist", ":", "\n", "            ", "self", ".", "images_chunk", ".", "append", "(", "self", ".", "im_loader", "(", "self", ".", "root", "+", "name", ",", "self", ".", "align_k", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_JpegCompress.__getitem__": [[804, 874], ["io.BytesIO", "img.transpose.transpose.copy", "comp_img.transpose.transpose.save", "PIL.Image.open", "numpy.asarray", "numpy.asarray", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "random.randint", "random.randint", "img.transpose.transpose.crop", "data_convertors.ConvertImageSet_JpegCompress.transform", "data_convertors.ConvertImageSet_JpegCompress.transform", "data_convertors.ConvertImageSet_JpegCompress.transform", "data_convertors.ConvertImageSet_JpegCompress.transform", "data_convertors.ConvertImageSet_JpegCompress.transform", "data_convertors.ConvertImageSet_JpegCompress.transform", "random.random", "img.transpose.transpose.transpose", "random.choice", "random.random", "img.transpose.transpose.transpose", "comp_img.transpose.transpose.transpose", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img", "=", "self", ".", "images_chunk", "[", "index", "]", "\n", "\n", "if", "not", "self", ".", "crop_size", "is", "None", ":", "\n", "            ", "W", ",", "H", "=", "img", ".", "size", "\n", "w_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "h_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "w_offset", ",", "h_offset", ",", "w_offset", "+", "self", ".", "crop_size", ",", "h_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "#            # Vertical flip", "\n", "#            if random.random() > 0.5:", "\n", "#                img = img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#            # Random rotation (90 or 180 or 270)", "\n", "#            if random.random() > 0.5:", "\n", "#                angle = random.choice([90, 180, 270])", "\n", "#                img = img.rotate(angle)", "\n", "", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "buff", "=", "BytesIO", "(", ")", "\n", "\n", "comp_img", "=", "img", ".", "copy", "(", ")", "\n", "comp_img", ".", "save", "(", "buff", ",", "\"JPEG\"", ",", "quality", "=", "random", ".", "choice", "(", "self", ".", "Vars", ")", ")", "\n", "comp_img", "=", "Image", ".", "open", "(", "buff", ")", "\n", "\n", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "comp_img", "=", "comp_img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "", "", "img", "=", "np", ".", "asarray", "(", "img", ")", "\n", "comp_img", "=", "np", ".", "asarray", "(", "comp_img", ")", "\n", "comp_img_M", "=", "cv2", ".", "resize", "(", "comp_img", ",", "\n", "(", "int", "(", "comp_img", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "comp_img", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "comp_img_C", "=", "cv2", ".", "resize", "(", "comp_img_M", ",", "\n", "(", "int", "(", "comp_img_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "comp_img_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "img_M", "=", "cv2", ".", "resize", "(", "img", ",", "\n", "(", "int", "(", "img", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "img", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "img_C", "=", "cv2", ".", "resize", "(", "img_M", ",", "\n", "(", "int", "(", "img_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "img_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "# transform the image (or not)", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "comp_img", "=", "self", ".", "transform", "(", "comp_img", ")", "\n", "comp_img_M", "=", "self", ".", "transform", "(", "comp_img_M", ")", "\n", "comp_img_C", "=", "self", ".", "transform", "(", "comp_img_C", ")", "\n", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "img_M", "=", "self", ".", "transform", "(", "img_M", ")", "\n", "img_C", "=", "self", ".", "transform", "(", "img_C", ")", "\n", "\n", "", "return", "(", "comp_img", ",", "comp_img_M", ",", "comp_img_C", ")", ",", "(", "img", ",", "img_M", ",", "img_C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_JpegCompress.__len__": [[875, 877], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_NoiseOfTwo.flist_reader": [[881, 886], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_NoiseOfTwo.im_loader": [[888, 890], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_NoiseOfTwo.__init__": [[891, 911], ["numpy.arange", "numpy.arange", "data_convertors.ConvertImageSet_NoiseOfTwo.flist_reader", "enumerate", "data_convertors.ConvertImageSet_NoiseOfTwo.im_loader", "data_convertors.ConvertImageSet_NoiseOfTwo.data_chunk.append", "data_convertors.ConvertImageSet_NoiseOfTwo.copy", "print", "len", "str", "len", "str"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "crop_size", "=", "256", ",", "\n", "G_stds", "=", "np", ".", "arange", "(", "1", ",", "51", ",", "1", ")", ",", "\n", "St_probs", "=", "np", ".", "arange", "(", "0.01", ",", "0.31", ",", "0.01", ")", ",", "\n", "transform", "=", "None", ",", "\n", "with_data_aug", "=", "False", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "G_stds", "=", "G_stds", "\n", "self", ".", "St_probs", "=", "St_probs", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "data_chunk", "=", "[", "]", "\n", "for", "i", ",", "im_name", "in", "enumerate", "(", "self", ".", "imlist", ")", ":", "\n", "            ", "img", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "im_name", ")", "\n", "self", ".", "data_chunk", ".", "append", "(", "img", ".", "copy", "(", ")", ")", "\n", "\n", "if", "i", "%", "100", "==", "99", "or", "i", "==", "len", "(", "self", ".", "imlist", ")", "-", "1", ":", "\n", "                ", "print", "(", "'loading noise image: '", "+", "str", "(", "i", "+", "1", ")", "+", "'/'", "+", "str", "(", "len", "(", "self", ".", "imlist", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_NoiseOfTwo.__getitem__": [[914, 947], ["data_convertors.ConvertImageSet_NoiseOfTwo.transform", "img.rotate.rotate.clone", "random.choice", "random.randint", "random.randint", "img.rotate.rotate.crop", "utils.GaussianNoise", "utils.SaltAndPepper", "random.random", "img.rotate.rotate.transpose", "random.random", "img.rotate.rotate.transpose", "random.random", "random.choice", "img.rotate.rotate.rotate"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.GaussianNoise", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.SaltAndPepper"], ["", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img", "=", "self", ".", "data_chunk", "[", "index", "]", "\n", "if", "not", "self", ".", "crop_size", "is", "None", ":", "\n", "            ", "W", ",", "H", "=", "img", ".", "size", "\n", "w_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "h_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "w_offset", ",", "h_offset", ",", "w_offset", "+", "self", ".", "crop_size", ",", "h_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "# Vertical flip", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "# Random rotation (90 or 180 or 270)", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "angle", "=", "random", ".", "choice", "(", "[", "90", ",", "180", ",", "270", "]", ")", "\n", "img", "=", "img", ".", "rotate", "(", "angle", ")", "\n", "", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "label", "=", "img", ".", "clone", "(", ")", "\n", "if", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", ":", "\n", "            ", "img", "=", "GaussianNoise", "(", "img", ",", "self", ".", "G_stds", ")", "\n", "", "else", ":", "\n", "            ", "img", "=", "SaltAndPepper", "(", "img", ",", "self", ".", "St_probs", ")", "\n", "\n", "", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_NoiseOfTwo.__len__": [[948, 950], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianNoise.flist_reader": [[955, 960], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianNoise.im_loader": [[962, 964], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianNoise.__init__": [[965, 983], ["numpy.arange", "data_convertors.ConvertImageSet_GaussianNoise.flist_reader", "enumerate", "data_convertors.ConvertImageSet_GaussianNoise.im_loader", "data_convertors.ConvertImageSet_GaussianNoise.data_chunk.append", "data_convertors.ConvertImageSet_GaussianNoise.copy", "print", "len", "str", "len", "str"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "crop_size", "=", "64", ",", "\n", "noise_vars", "=", "np", ".", "arange", "(", "0", ",", "55", ",", "5", ")", ",", "\n", "transform", "=", "None", ",", "\n", "with_data_aug", "=", "False", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "G_stds", "=", "noise_vars", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "data_chunk", "=", "[", "]", "\n", "for", "i", ",", "im_name", "in", "enumerate", "(", "self", ".", "imlist", ")", ":", "\n", "            ", "img", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "im_name", ")", "\n", "self", ".", "data_chunk", ".", "append", "(", "img", ".", "copy", "(", ")", ")", "\n", "\n", "if", "i", "%", "100", "==", "99", "or", "i", "==", "len", "(", "self", ".", "imlist", ")", "-", "1", ":", "\n", "                ", "print", "(", "'loading noise image: '", "+", "str", "(", "i", "+", "1", ")", "+", "'/'", "+", "str", "(", "len", "(", "self", ".", "imlist", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianNoise.__getitem__": [[986, 1016], ["data_convertors.ConvertImageSet_GaussianNoise.transform", "img.rotate.rotate.clone", "utils.GaussianNoise", "random.randint", "random.randint", "img.rotate.rotate.crop", "random.random", "img.rotate.rotate.transpose", "random.random", "img.rotate.rotate.transpose", "random.random", "random.choice", "img.rotate.rotate.rotate"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.GaussianNoise"], ["", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img", "=", "self", ".", "data_chunk", "[", "index", "]", "\n", "if", "not", "self", ".", "crop_size", "is", "None", ":", "\n", "            ", "W", ",", "H", "=", "img", ".", "size", "\n", "w_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "h_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "w_offset", ",", "h_offset", ",", "w_offset", "+", "self", ".", "crop_size", ",", "h_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "# Vertical flip", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "# Random rotation (90 or 180 or 270)", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "angle", "=", "random", ".", "choice", "(", "[", "90", ",", "180", ",", "270", "]", ")", "\n", "img", "=", "img", ".", "rotate", "(", "angle", ")", "\n", "", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "label", "=", "img", ".", "clone", "(", ")", "\n", "img", "=", "GaussianNoise", "(", "img", ",", "self", ".", "G_stds", ")", "\n", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianNoise.__len__": [[1017, 1019], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianBlur.flist_reader": [[1024, 1029], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianBlur.im_loader": [[1031, 1033], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianBlur.__init__": [[1034, 1052], ["numpy.arange", "data_convertors.ConvertImageSet_GaussianBlur.flist_reader", "enumerate", "data_convertors.ConvertImageSet_GaussianBlur.im_loader", "data_convertors.ConvertImageSet_GaussianBlur.data_chunk.append", "data_convertors.ConvertImageSet_GaussianBlur.copy", "print", "len", "str", "len", "str"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "crop_size", "=", "64", ",", "\n", "blur_vars", "=", "np", ".", "arange", "(", "0", ",", "5.5", ",", "0.5", ")", ",", "\n", "transform", "=", "None", ",", "\n", "with_data_aug", "=", "False", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "G_stds", "=", "blur_vars", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "data_chunk", "=", "[", "]", "\n", "for", "i", ",", "im_name", "in", "enumerate", "(", "self", ".", "imlist", ")", ":", "\n", "            ", "img", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "im_name", ")", "\n", "self", ".", "data_chunk", ".", "append", "(", "img", ".", "copy", "(", ")", ")", "\n", "\n", "if", "i", "%", "100", "==", "99", "or", "i", "==", "len", "(", "self", ".", "imlist", ")", "-", "1", ":", "\n", "                ", "print", "(", "'loading blur image: '", "+", "str", "(", "i", "+", "1", ")", "+", "'/'", "+", "str", "(", "len", "(", "self", ".", "imlist", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianBlur.__getitem__": [[1055, 1088], ["img.rotate.rotate.copy", "data_convertors.ConvertImageSet_GaussianBlur.transform", "utils.GaussianBlur", "data_convertors.ConvertImageSet_GaussianBlur.transform", "random.randint", "random.randint", "img.rotate.rotate.crop", "random.random", "img.rotate.rotate.transpose", "random.random", "img.rotate.rotate.transpose", "random.random", "random.choice", "img.rotate.rotate.rotate"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.GaussianBlur"], ["", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img", "=", "self", ".", "data_chunk", "[", "index", "]", "\n", "if", "not", "self", ".", "crop_size", "is", "None", ":", "\n", "            ", "W", ",", "H", "=", "img", ".", "size", "\n", "w_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "h_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "w_offset", ",", "h_offset", ",", "w_offset", "+", "self", ".", "crop_size", ",", "h_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "# Vertical flip", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "# Random rotation (90 or 180 or 270)", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "angle", "=", "random", ".", "choice", "(", "[", "90", ",", "180", ",", "270", "]", ")", "\n", "img", "=", "img", ".", "rotate", "(", "angle", ")", "\n", "", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "\n", "", "label", "=", "img", ".", "copy", "(", ")", "\n", "label", "=", "self", ".", "transform", "(", "label", ")", "\n", "\n", "img", "=", "GaussianBlur", "(", "img", ",", "self", ".", "G_stds", ")", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_GaussianBlur.__len__": [[1089, 1091], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_MixSyn.flist_reader": [[1095, 1100], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_MixSyn.im_loader": [[1102, 1104], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_MixSyn.__init__": [[1105, 1127], ["numpy.arange", "numpy.arange", "data_convertors.ConvertImageSet_MixSyn.flist_reader", "enumerate", "data_convertors.ConvertImageSet_MixSyn.im_loader", "data_convertors.ConvertImageSet_MixSyn.data_chunk.append", "data_convertors.ConvertImageSet_MixSyn.copy", "print", "len", "str", "len", "str"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "root", ",", "imlist_pth", ",", "crop_size", "=", "64", ",", "\n", "blur_vars", "=", "np", ".", "arange", "(", "0", ",", "5.5", ",", "0.5", ")", ",", "\n", "noise_vars", "=", "np", ".", "arange", "(", "0", ",", "55", ",", "5", ")", ",", "\n", "jpeg_vars", "=", "[", "10", ",", "20", ",", "30", ",", "40", "]", ",", "\n", "transform", "=", "None", ",", "\n", "with_data_aug", "=", "False", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "B_vars", "=", "blur_vars", "\n", "self", ".", "N_vars", "=", "noise_vars", "\n", "self", ".", "J_vars", "=", "jpeg_vars", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "data_chunk", "=", "[", "]", "\n", "for", "i", ",", "im_name", "in", "enumerate", "(", "self", ".", "imlist", ")", ":", "\n", "            ", "img", "=", "self", ".", "im_loader", "(", "self", ".", "root", "+", "im_name", ")", "\n", "self", ".", "data_chunk", ".", "append", "(", "img", ".", "copy", "(", ")", ")", "\n", "\n", "if", "i", "%", "100", "==", "99", "or", "i", "==", "len", "(", "self", ".", "imlist", ")", "-", "1", ":", "\n", "                ", "print", "(", "'loading blur image: '", "+", "str", "(", "i", "+", "1", ")", "+", "'/'", "+", "str", "(", "len", "(", "self", ".", "imlist", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_MixSyn.__getitem__": [[1129, 1170], ["img.rotate.rotate.copy", "data_convertors.ConvertImageSet_MixSyn.transform", "utils.GaussianBlur", "data_convertors.ConvertImageSet_MixSyn.transform", "utils.GaussianNoise", "img.rotate.rotate.numpy().transpose", "PIL.Image.fromarray", "StringIO.StringIO", "img.rotate.rotate.save", "PIL.Image.open", "data_convertors.ConvertImageSet_MixSyn.transform", "random.randint", "random.randint", "img.rotate.rotate.crop", "img.rotate.rotate.astype", "random.random", "img.rotate.rotate.transpose", "random.random", "img.rotate.rotate.transpose", "random.random", "random.choice", "img.rotate.rotate.rotate", "img.rotate.rotate.numpy", "random.choice"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.GaussianBlur", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.GaussianNoise"], ["", "", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "img", "=", "self", ".", "data_chunk", "[", "index", "]", "\n", "if", "not", "self", ".", "crop_size", "is", "None", ":", "\n", "            ", "W", ",", "H", "=", "img", ".", "size", "\n", "w_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "h_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "w_offset", ",", "h_offset", ",", "w_offset", "+", "self", ".", "crop_size", ",", "h_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "# Vertical flip", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_TOP_BOTTOM", ")", "\n", "# Random rotation (90 or 180 or 270)", "\n", "", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "angle", "=", "random", ".", "choice", "(", "[", "90", ",", "180", ",", "270", "]", ")", "\n", "img", "=", "img", ".", "rotate", "(", "angle", ")", "\n", "", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "label", "=", "img", ".", "copy", "(", ")", "\n", "label", "=", "self", ".", "transform", "(", "label", ")", "\n", "img", "=", "GaussianBlur", "(", "img", ",", "self", ".", "B_vars", ")", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "img", "=", "GaussianNoise", "(", "img", ",", "self", ".", "N_vars", ")", "\n", "img", "=", "img", ".", "numpy", "(", ")", ".", "transpose", "(", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "img", "[", "img", ">", "1", "]", "=", "1", "\n", "img", "[", "img", "<", "0", "]", "=", "0", "\n", "img", "=", "img", "*", "255", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "buff", "=", "StringIO", ".", "StringIO", "(", ")", "\n", "img", ".", "save", "(", "buff", ",", "'JPEG'", ",", "quality", "=", "random", ".", "choice", "(", "self", ".", "J_vars", ")", ")", "\n", "img", "=", "Image", ".", "open", "(", "buff", ")", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_MixSyn.__len__": [[1171, 1173], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealRain.flist_reader": [[1178, 1183], ["open().read().splitlines", "imlist.append", "open().read", "l.split", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ".", "split", "(", "' '", ")", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealRain.im_loader": [[1185, 1187], ["PIL.Image.open().convert", "PIL.Image.open"], "methods", ["None"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "        ", "return", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "'RGB'", ")", "\n", "#        return cv2.imread(im_pth)", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealRain.__init__": [[1190, 1209], ["data_convertors.ConvertImageSet_RealRain.flist_reader", "enumerate", "data_convertors.ConvertImageSet_RealRain.im_loader", "data_convertors.ConvertImageSet_RealRain.im_loader", "data_convertors.ConvertImageSet_RealRain.labels_chunk.append", "data_convertors.ConvertImageSet_RealRain.images_chunk.append", "numpy.asarray", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "dataroot", ",", "imlist_pth", ",", "transform", ",", "crop_size", ",", "with_data_aug", ",", "\n", "resize_to", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "dataroot", "=", "dataroot", "\n", "self", ".", "resize_to", "=", "resize_to", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "labels_chunk", "=", "[", "]", "\n", "self", ".", "images_chunk", "=", "[", "]", "\n", "\n", "for", "i", ",", "samp_info", "in", "enumerate", "(", "self", ".", "imlist", ")", ":", "\n", "            ", "rainy_name", ",", "label_name", "=", "samp_info", "\n", "label", "=", "self", ".", "im_loader", "(", "self", ".", "dataroot", "+", "label_name", ")", "\n", "rainy", "=", "self", ".", "im_loader", "(", "self", ".", "dataroot", "+", "rainy_name", ")", "\n", "self", ".", "labels_chunk", ".", "append", "(", "np", ".", "asarray", "(", "label", ")", ")", "\n", "self", ".", "images_chunk", ".", "append", "(", "np", ".", "asarray", "(", "rainy", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealRain.__getitem__": [[1211, 1289], ["numpy.asarray", "numpy.asarray", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "data_convertors.ConvertImageSet_RealRain.transform", "data_convertors.ConvertImageSet_RealRain.transform", "data_convertors.ConvertImageSet_RealRain.transform", "data_convertors.ConvertImageSet_RealRain.transform", "data_convertors.ConvertImageSet_RealRain.transform", "data_convertors.ConvertImageSet_RealRain.transform", "quit", "PIL.Image.fromarray", "PIL.Image.fromarray", "random.randint", "random.randint", "label_img.transpose.transpose.crop", "rainy_img.transpose.transpose.crop", "type", "random.random", "label_img.transpose.transpose.transpose", "rainy_img.transpose.transpose.transpose", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "rainy_img", "=", "self", ".", "images_chunk", "[", "index", "]", "\n", "label_img", "=", "self", ".", "labels_chunk", "[", "index", "]", "\n", "if", "type", "(", "self", ".", "resize_to", ")", ".", "__name__", "==", "'tuple'", ":", "\n", "            ", "quit", "(", ")", "\n", "#            rainy_img = cv2.resize(rainy_img, self.resize_to)", "\n", "#            label_img = cv2.resize(label_img, self.resize_to)", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "#        rainy_img = cv2.cvtColor(rainy_img, cv2.COLOR_BGR2RGB)", "\n", "#        label_img = cv2.cvtColor(label_img, cv2.COLOR_BGR2RGB)", "\n", "\n", "", "if", "self", ".", "crop_size", "!=", "None", ":", "\n", "            ", "rainy_img", "=", "Image", ".", "fromarray", "(", "rainy_img", ")", "\n", "label_img", "=", "Image", ".", "fromarray", "(", "label_img", ")", "\n", "\n", "W", ",", "H", "=", "label_img", ".", "size", "\n", "x_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "y_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "label_img", "=", "label_img", ".", "crop", "(", "(", "x_offset", ",", "\n", "y_offset", ",", "\n", "x_offset", "+", "self", ".", "crop_size", ",", "\n", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "rainy_img", "=", "rainy_img", ".", "crop", "(", "(", "x_offset", ",", "\n", "y_offset", ",", "\n", "x_offset", "+", "self", ".", "crop_size", ",", "\n", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label_img", "=", "label_img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "rainy_img", "=", "rainy_img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "# Vertical flip", "\n", "#            if random.random() > 0.5:", "\n", "#                label_img = label_img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#                blur_img = blur_img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "# Random rotation (90 or 180 or 270)", "\n", "#            if random.random() > 0.5:", "\n", "#                angle = random.choice([90, 180, 270])", "\n", "#                label_img = label_img.rotate(angle)", "\n", "#                blur_img = blur_img.rotate(angle)              ", "\n", "\n", "", "", "label_img", "=", "np", ".", "asarray", "(", "label_img", ")", "\n", "rainy_img", "=", "np", ".", "asarray", "(", "rainy_img", ")", "\n", "\n", "rainy_img_M", "=", "cv2", ".", "resize", "(", "rainy_img", ",", "\n", "(", "int", "(", "rainy_img", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "rainy_img", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "rainy_img_C", "=", "cv2", ".", "resize", "(", "rainy_img_M", ",", "\n", "(", "int", "(", "rainy_img_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "rainy_img_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_img_M", "=", "cv2", ".", "resize", "(", "label_img", ",", "\n", "(", "int", "(", "label_img", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label_img", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_img_C", "=", "cv2", ".", "resize", "(", "label_img_M", ",", "\n", "(", "int", "(", "label_img_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label_img_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "rainy_img", "=", "self", ".", "transform", "(", "rainy_img", ")", "\n", "rainy_img_M", "=", "self", ".", "transform", "(", "rainy_img_M", ")", "\n", "rainy_img_C", "=", "self", ".", "transform", "(", "rainy_img_C", ")", "\n", "\n", "label_img", "=", "self", ".", "transform", "(", "label_img", ")", "\n", "label_img_M", "=", "self", ".", "transform", "(", "label_img_M", ")", "\n", "label_img_C", "=", "self", ".", "transform", "(", "label_img_C", ")", "\n", "\n", "return", "(", "rainy_img", ",", "rainy_img_M", ",", "rainy_img_C", ")", ",", "(", "label_img", ",", "label_img_M", ",", "label_img_C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RealRain.__len__": [[1291, 1293], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "labels_chunk", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader": [[1299, 1304], ["open().read().splitlines", "imlist.append", "open().read", "open"], "methods", ["None"], ["    ", "def", "flist_reader", "(", "self", ",", "flist", ")", ":", "\n", "        ", "imlist", "=", "[", "]", "\n", "for", "l", "in", "open", "(", "flist", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", ":", "\n", "            ", "imlist", ".", "append", "(", "l", ")", "\n", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader": [[1306, 1322], ["PIL.Image.open().convert", "numpy.asarray", "numpy.asarray", "utils.align_to_k", "PIL.Image.fromarray", "PIL.Image.open", "max", "max", "img.resize.resize.resize"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.align_to_k"], ["", "def", "im_loader", "(", "self", ",", "im_pth", ")", ":", "\n", "        ", "img", "=", "Image", ".", "open", "(", "im_pth", ")", ".", "convert", "(", "'RGB'", ")", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "not", "self", ".", "crop_size", "is", "None", ":", "\n", "            ", "if", "w", "<", "self", ".", "crop_size", "or", "h", "<", "self", ".", "crop_size", ":", "\n", "                ", "re_w", "=", "max", "(", "w", ",", "self", ".", "crop_size", ")", "\n", "re_h", "=", "max", "(", "h", ",", "self", ".", "crop_size", ")", "\n", "img", "=", "img", ".", "resize", "(", "(", "re_w", ",", "re_h", ")", ",", "resample", "=", "Image", ".", "BICUBIC", ")", "\n", "\n", "", "", "if", "not", "self", ".", "align_k", "is", "None", ":", "\n", "            ", "img", "=", "np", ".", "asarray", "(", "img", ")", "\n", "img", "=", "align_to_k", "(", "img", ",", "self", ".", "align_k", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "", "img", "=", "np", ".", "asarray", "(", "img", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.__init__": [[1328, 1354], ["data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "enumerate", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.images_names.append", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.images_chunk.append", "l.split", "l.split", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.flist_reader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.im_loader"], ["", "def", "__init__", "(", "self", ",", "dataroot", ",", "imlist_pth", ",", "label_pth", ",", "transform", ",", "crop_size", ",", "with_data_aug", ",", "\n", "resize_to", "=", "None", ",", "align_k", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "dataroot", "=", "dataroot", "\n", "self", ".", "resize_to", "=", "resize_to", "\n", "self", ".", "imlist", "=", "self", ".", "flist_reader", "(", "imlist_pth", ")", "\n", "self", ".", "labellist", "=", "self", ".", "flist_reader", "(", "label_pth", ")", "\n", "self", ".", "align_k", "=", "align_k", "\n", "#        random.shuffle(self.imlist)", "\n", "#        random.shuffle(self.imlist)        ", "\n", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "with_data_aug", "=", "with_data_aug", "\n", "self", ".", "labels_dict", "=", "{", "}", "\n", "self", ".", "images_chunk", "=", "[", "]", "\n", "self", ".", "images_names", "=", "[", "]", "\n", "\n", "for", "l", "in", "self", ".", "labellist", ":", "\n", "            ", "label_name", "=", "l", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "self", ".", "labels_dict", "[", "label_name", "]", "=", "self", ".", "im_loader", "(", "self", ".", "dataroot", "+", "'clear_images/'", "+", "l", ")", "\n", "\n", "", "for", "i", ",", "l", "in", "enumerate", "(", "self", ".", "imlist", ")", ":", "\n", "            ", "im_name", "=", "l", ".", "split", "(", "'_'", ")", "[", "0", "]", "\n", "self", ".", "images_names", ".", "append", "(", "im_name", ")", "\n", "self", ".", "images_chunk", ".", "append", "(", "self", ".", "im_loader", "(", "self", ".", "dataroot", "+", "'hazy/'", "+", "l", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.__getitem__": [[1356, 1435], ["numpy.asarray", "numpy.asarray", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.resize", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.transform", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.transform", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.transform", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.transform", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.transform", "data_convertors.ConvertImageSet_RESIDE_beta_mytrain.transform", "quit", "PIL.Image.fromarray", "PIL.Image.fromarray", "random.randint", "random.randint", "label_img.transpose.transpose.crop", "haze_img.transpose.transpose.crop", "type", "random.random", "label_img.transpose.transpose.transpose", "haze_img.transpose.transpose.transpose", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "haze_img", "=", "self", ".", "images_chunk", "[", "index", "]", "\n", "img_name", "=", "self", ".", "images_names", "[", "index", "]", "\n", "label_img", "=", "self", ".", "labels_dict", "[", "img_name", "]", "\n", "if", "type", "(", "self", ".", "resize_to", ")", ".", "__name__", "==", "'tuple'", ":", "\n", "            ", "quit", "(", ")", "\n", "#            rainy_img = cv2.resize(rainy_img, self.resize_to)", "\n", "#            label_img = cv2.resize(label_img, self.resize_to)", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "#        haze_img  = cv2.cvtColor(haze_img,  cv2.COLOR_BGR2RGB)", "\n", "#        label_img = cv2.cvtColor(label_img, cv2.COLOR_BGR2RGB)", "\n", "\n", "", "if", "self", ".", "crop_size", "!=", "None", ":", "\n", "            ", "haze_img", "=", "Image", ".", "fromarray", "(", "haze_img", ")", "\n", "label_img", "=", "Image", ".", "fromarray", "(", "label_img", ")", "\n", "\n", "W", ",", "H", "=", "label_img", ".", "size", "\n", "x_offset", "=", "random", ".", "randint", "(", "0", ",", "W", "-", "self", ".", "crop_size", ")", "\n", "y_offset", "=", "random", ".", "randint", "(", "0", ",", "H", "-", "self", ".", "crop_size", ")", "\n", "label_img", "=", "label_img", ".", "crop", "(", "(", "x_offset", ",", "\n", "y_offset", ",", "\n", "x_offset", "+", "self", ".", "crop_size", ",", "\n", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "haze_img", "=", "haze_img", ".", "crop", "(", "(", "x_offset", ",", "\n", "y_offset", ",", "\n", "x_offset", "+", "self", ".", "crop_size", ",", "\n", "y_offset", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "", "if", "self", ".", "with_data_aug", ":", "\n", "# Horizontal flip", "\n", "            ", "if", "random", ".", "random", "(", ")", ">", "0.5", ":", "\n", "                ", "label_img", "=", "label_img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "haze_img", "=", "haze_img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n", "# Vertical flip", "\n", "#            if random.random() > 0.5:", "\n", "#                label_img = label_img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#                blur_img = blur_img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "# Random rotation (90 or 180 or 270)", "\n", "#            if random.random() > 0.5:", "\n", "#                angle = random.choice([90, 180, 270])", "\n", "#                label_img = label_img.rotate(angle)", "\n", "#                blur_img = blur_img.rotate(angle)              ", "\n", "\n", "", "", "label_img", "=", "np", ".", "asarray", "(", "label_img", ")", "\n", "haze_img", "=", "np", ".", "asarray", "(", "haze_img", ")", "\n", "\n", "haze_img_M", "=", "cv2", ".", "resize", "(", "haze_img", ",", "\n", "(", "int", "(", "haze_img", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "haze_img", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "haze_img_C", "=", "cv2", ".", "resize", "(", "haze_img_M", ",", "\n", "(", "int", "(", "haze_img_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "haze_img_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_img_M", "=", "cv2", ".", "resize", "(", "label_img", ",", "\n", "(", "int", "(", "label_img", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label_img", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "label_img_C", "=", "cv2", ".", "resize", "(", "label_img_M", ",", "\n", "(", "int", "(", "label_img_M", ".", "shape", "[", "1", "]", "*", "0.5", ")", ",", "\n", "int", "(", "label_img_M", ".", "shape", "[", "0", "]", "*", "0.5", ")", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", "\n", "\n", "haze_img", "=", "self", ".", "transform", "(", "haze_img", ")", "\n", "haze_img_M", "=", "self", ".", "transform", "(", "haze_img_M", ")", "\n", "haze_img_C", "=", "self", ".", "transform", "(", "haze_img_C", ")", "\n", "\n", "label_img", "=", "self", ".", "transform", "(", "label_img", ")", "\n", "label_img_M", "=", "self", ".", "transform", "(", "label_img_M", ")", "\n", "label_img_C", "=", "self", ".", "transform", "(", "label_img_C", ")", "\n", "\n", "return", "(", "haze_img", ",", "haze_img_M", ",", "haze_img_C", ")", ",", "(", "label_img", ",", "label_img_M", ",", "label_img_C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.data_convertors.ConvertImageSet_RESIDE_beta_mytrain.__len__": [[1437, 1439], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "labellist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.ConvLayer.__init__": [[22, 39], ["torch.Module.__init__", "int", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "int", "int", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "Exception", "int", "int"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ",", "kernel_size", ",", "\n", "stride", "=", "1", ",", "dilation", "=", "1", ",", "pad_type", "=", "'reflect'", ",", "groups", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ConvLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# pad size", "\n", "padding", "=", "int", "(", "dilation", "*", "(", "kernel_size", "-", "1", ")", "/", "2", ")", "\n", "\n", "# pading type", "\n", "self", ".", "pad_type", "=", "pad_type", "\n", "if", "pad_type", "==", "'reflect'", ":", "\n", "            ", "self", ".", "reflection_pad", "=", "nn", ".", "ReflectionPad2d", "(", "padding", ")", "\n", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "int", "(", "in_dim", ")", ",", "int", "(", "out_dim", ")", ",", "kernel_size", ",", "stride", ",", "\n", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "", "elif", "pad_type", "==", "'zero'", ":", "\n", "            ", "self", ".", "conv2d", "=", "nn", ".", "Conv2d", "(", "int", "(", "in_dim", ")", ",", "int", "(", "out_dim", ")", ",", "kernel_size", ",", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'pad_type is not found.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.ConvLayer.forward": [[40, 47], ["N_modules.ConvLayer.reflection_pad", "N_modules.ConvLayer.conv2d", "N_modules.ConvLayer.conv2d"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "pad_type", "==", "'reflect'", ":", "\n", "            ", "out", "=", "self", ".", "reflection_pad", "(", "x", ")", "\n", "out", "=", "self", ".", "conv2d", "(", "out", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "self", ".", "conv2d", "(", "x", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.FeatNorm.__init__": [[50, 64], ["torch.Module.__init__", "N_modules.InsNorm", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "SwitchNorm2d", "GroupNorm", "N_modules.LayerNorm", "Exception"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "norm_type", ",", "dim", ")", ":", "\n", "        ", "super", "(", "FeatNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "norm_type", "==", "\"instance\"", ":", "\n", "            ", "self", ".", "norm", "=", "InsNorm", "(", "dim", ")", "\n", "", "elif", "norm_type", "==", "\"batch_norm\"", ":", "\n", "            ", "self", ".", "norm", "=", "nn", ".", "BatchNorm2d", "(", "dim", ")", "\n", "", "elif", "norm_type", "==", "\"switchnorm2d\"", ":", "\n", "            ", "self", ".", "norm", "=", "SwitchNorm2d", "(", "dim", ")", "\n", "", "elif", "norm_type", "==", "\"group\"", ":", "\n", "            ", "self", ".", "norm", "=", "GroupNorm", "(", "dim", ",", "num_groups", "=", "1", ")", "\n", "", "elif", "norm_type", "==", "\"layernorm\"", ":", "\n", "            ", "self", ".", "norm", "=", "LayerNorm", "(", "dim", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Normalization type not found.\"", ")", "\n", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.FeatNorm.forward": [[64, 66], ["N_modules.FeatNorm.norm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "norm", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SEBasicBlock.__init__": [[70, 83], ["torch.Module.__init__", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.SELayer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "N_modules.FeatNorm", "N_modules.FeatNorm"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "reduction", "=", "96", ",", "norm_type", "=", "None", ")", ":", "\n", "        ", "super", "(", "SEBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm_type", "=", "norm_type", "\n", "\n", "if", "not", "norm_type", "is", "None", ":", "\n", "            ", "self", ".", "norm1", "=", "FeatNorm", "(", "norm_type", ",", "planes", ")", "\n", "self", ".", "norm2", "=", "FeatNorm", "(", "norm_type", ",", "planes", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "", "self", ".", "conv1", "=", "ConvLayer", "(", "inplanes", ",", "planes", ",", "3", ",", "stride", "=", "1", ",", "pad_type", "=", "'zero'", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "planes", ",", "planes", ",", "3", ",", "stride", "=", "1", ",", "pad_type", "=", "'zero'", ",", "bias", "=", "False", ")", "\n", "self", ".", "se", "=", "SELayer", "(", "planes", ",", "reduction", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SEBasicBlock.forward": [[84, 98], ["N_modules.SEBasicBlock.conv1", "N_modules.SEBasicBlock.relu", "N_modules.SEBasicBlock.conv2", "N_modules.SEBasicBlock.se", "N_modules.SEBasicBlock.relu", "N_modules.SEBasicBlock.norm1", "N_modules.SEBasicBlock.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "if", "not", "self", ".", "norm_type", "is", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "if", "not", "self", ".", "norm_type", "is", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm2", "(", "out", ")", "\n", "\n", "", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "out", "=", "out", "+", "x", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SETVBasicBlock.__init__": [[102, 115], ["torch.Module.__init__", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.SETVLayer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "N_modules.FeatNorm", "N_modules.FeatNorm"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "reduction", "=", "64", ",", "norm_type", "=", "None", ",", "tv_beta", "=", "3", ")", ":", "\n", "        ", "super", "(", "SETVBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm_type", "=", "norm_type", "\n", "\n", "if", "not", "norm_type", "is", "None", ":", "\n", "            ", "self", ".", "norm1", "=", "FeatNorm", "(", "norm_type", ",", "planes", ")", "\n", "self", ".", "norm2", "=", "FeatNorm", "(", "norm_type", ",", "planes", ")", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "", "self", ".", "conv1", "=", "ConvLayer", "(", "inplanes", ",", "planes", ",", "3", ",", "stride", "=", "1", ",", "pad_type", "=", "'zero'", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "planes", ",", "planes", ",", "3", ",", "stride", "=", "1", ",", "pad_type", "=", "'zero'", ",", "bias", "=", "False", ")", "\n", "self", ".", "se", "=", "SETVLayer", "(", "planes", ",", "reduction", ",", "tv_beta", "=", "tv_beta", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SETVBasicBlock.forward": [[116, 130], ["N_modules.SETVBasicBlock.conv1", "N_modules.SETVBasicBlock.relu", "N_modules.SETVBasicBlock.conv2", "N_modules.SETVBasicBlock.se", "N_modules.SETVBasicBlock.relu", "N_modules.SETVBasicBlock.norm1", "N_modules.SETVBasicBlock.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "if", "not", "self", ".", "norm_type", "is", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "if", "not", "self", ".", "norm_type", "is", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm2", "(", "out", ")", "\n", "\n", "", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "out", "=", "out", "+", "x", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.TVBasicBlock.__init__": [[134, 146], ["torch.Module.__init__", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.TVLayer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "N_modules.FeatNorm", "N_modules.FeatNorm"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "reduction", "=", "64", ",", "norm_type", "=", "None", ")", ":", "\n", "        ", "super", "(", "TVBasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm_type", "=", "norm_type", "\n", "\n", "if", "not", "norm_type", "is", "None", ":", "\n", "            ", "self", ".", "norm1", "=", "FeatNorm", "(", "norm_type", ",", "planes", ")", "\n", "self", ".", "norm2", "=", "FeatNorm", "(", "norm_type", ",", "planes", ")", "\n", "\n", "", "self", ".", "conv1", "=", "ConvLayer", "(", "inplanes", ",", "planes", ",", "3", ",", "stride", "=", "1", ",", "pad_type", "=", "'zero'", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "planes", ",", "planes", ",", "3", ",", "stride", "=", "1", ",", "pad_type", "=", "'zero'", ",", "bias", "=", "False", ")", "\n", "self", ".", "se", "=", "TVLayer", "(", "planes", ",", "reduction", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.TVBasicBlock.forward": [[147, 161], ["N_modules.TVBasicBlock.conv1", "N_modules.TVBasicBlock.relu", "N_modules.TVBasicBlock.conv2", "N_modules.TVBasicBlock.se", "N_modules.TVBasicBlock.relu", "N_modules.TVBasicBlock.norm1", "N_modules.TVBasicBlock.norm2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "if", "not", "self", ".", "norm_type", "is", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm1", "(", "out", ")", "\n", "", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "if", "not", "self", ".", "norm_type", "is", "None", ":", "\n", "            ", "out", "=", "self", ".", "norm2", "(", "out", ")", "\n", "\n", "", "out", "=", "self", ".", "se", "(", "out", ")", "\n", "out", "=", "out", "+", "x", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SELayer.__init__": [[165, 173], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", ")", ":", "\n", "        ", "super", "(", "SELayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "channel", ",", "reduction", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "reduction", ",", "channel", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SELayer.forward": [[174, 179], ["x.size", "N_modules.SELayer.avg_pool().view", "N_modules.SELayer.fc().view", "N_modules.SELayer.avg_pool", "N_modules.SELayer.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "_", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SETVLayer.__init__": [[183, 192], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", ",", "tv_beta", "=", "3", ")", ":", "\n", "        ", "super", "(", "SETVLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tv_beta", "=", "tv_beta", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "2", "*", "channel", ",", "reduction", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "reduction", ",", "channel", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SETVLayer.forward": [[193, 203], ["x.size", "N_modules.SETVLayer.avg_pool().view", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "y_tv.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "N_modules.SETVLayer.fc().view", "N_modules.SETVLayer.avg_pool", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "N_modules.SETVLayer.fc", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "y", "=", "self", ".", "avg_pool", "(", "x", ")", ".", "view", "(", "b", ",", "c", ")", "\n", "y_rv", "=", "(", "torch", ".", "abs", "(", "x", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "]", "-", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", ")", ".", "pow", "(", "self", ".", "tv_beta", ")", ")", ".", "view", "(", "b", ",", "c", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "2", ")", "\n", "y_cv", "=", "(", "torch", ".", "abs", "(", "x", "[", ":", ",", ":", ",", ":", ",", ":", "-", "1", "]", "-", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", ")", ".", "pow", "(", "self", ".", "tv_beta", ")", ")", ".", "view", "(", "b", ",", "c", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "2", ")", "\n", "y_tv", "=", "y_rv", "+", "y_cv", "\n", "y_tv", "=", "y_tv", ".", "view", "(", "b", ",", "c", ")", "\n", "y", "=", "torch", ".", "cat", "(", "(", "y", ",", "y_tv", ")", ",", "dim", "=", "1", ")", "\n", "y", "=", "self", ".", "fc", "(", "y", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.TVLayer.__init__": [[207, 215], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", ",", "tv_beta", "=", "3", ")", ":", "\n", "        ", "super", "(", "TVLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "tv_beta", "=", "tv_beta", "\n", "self", ".", "fc", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "channel", ",", "reduction", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "reduction", ",", "channel", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.TVLayer.forward": [[217, 225], ["x.size", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "torch.abs().pow().view().mean", "N_modules.TVLayer.view", "N_modules.TVLayer.fc().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "torch.abs().pow().view", "N_modules.TVLayer.fc", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs().pow", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "y_rv", "=", "(", "torch", ".", "abs", "(", "x", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "]", "-", "x", "[", ":", ",", ":", ",", "1", ":", ",", ":", "]", ")", ".", "pow", "(", "self", ".", "tv_beta", ")", ")", ".", "view", "(", "b", ",", "c", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "2", ")", "\n", "y_cv", "=", "(", "torch", ".", "abs", "(", "x", "[", ":", ",", ":", ",", ":", ",", ":", "-", "1", "]", "-", "x", "[", ":", ",", ":", ",", ":", ",", "1", ":", "]", ")", ".", "pow", "(", "self", ".", "tv_beta", ")", ")", ".", "view", "(", "b", ",", "c", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "2", ")", "\n", "y_tv", "=", "y_rv", "+", "y_cv", "\n", "y_tv", "=", "y_tv", ".", "view", "(", "b", ",", "c", ")", "\n", "y_tv", "=", "self", ".", "fc", "(", "y_tv", ")", ".", "view", "(", "b", ",", "c", ",", "1", ",", "1", ")", "\n", "return", "x", "*", "y_tv", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.UpSampleModule.__init__": [[228, 260], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "Exception", "N_modules.ConvLayer", "N_modules.FeatNorm", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "N_modules.ConvLayer", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "print", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.ReflectionPad2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "norm_type", ",", "module_type", ",", "relu_type", "=", "'relu'", ",", "\n", "kernel_size", "=", "1", ",", "ps_scale", "=", "4", ",", "TransConv_out", "=", "128", ")", ":", "\n", "        ", "super", "(", "UpSampleModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mod_type", "=", "module_type", "\n", "\n", "if", "self", ".", "mod_type", "==", "'PixShuf'", ":", "\n", "            ", "if", "not", "norm_type", "is", "None", ":", "\n", "                ", "self", ".", "upsamp", "=", "nn", ".", "Sequential", "(", "\n", "ConvLayer", "(", "dim", ",", "ps_scale", "*", "dim", ",", "kernel_size", ",", "1", ")", ",", "\n", "FeatNorm", "(", "norm_type", ",", "ps_scale", "*", "dim", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "upsamp", "=", "nn", ".", "Sequential", "(", "\n", "ConvLayer", "(", "dim", ",", "ps_scale", "*", "dim", ",", "kernel_size", ",", "1", ")", ",", "\n", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "", "", "elif", "self", ".", "mod_type", "==", "'TransConv'", ":", "\n", "            ", "if", "relu_type", "==", "'relu'", ":", "\n", "                ", "self", ".", "upsamp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "dim", ",", "TransConv_out", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "0", ",", "1", ",", "0", ")", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "2", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "elif", "relu_type", "==", "'prelu'", ":", "\n", "                ", "self", ".", "upsamp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "dim", ",", "TransConv_out", ",", "4", ",", "2", ",", "1", ")", ",", "\n", "nn", ".", "ReflectionPad2d", "(", "(", "1", ",", "0", ",", "1", ",", "0", ")", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "2", ",", "stride", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Unknown actiavation type for TransConv'", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Unknown up-sampling module type'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.UpSampleModule.forward": [[261, 263], ["N_modules.UpSampleModule.upsamp"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "upsamp", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.DownSampleModule.__init__": [[266, 274], ["torch.Module.__init__", "Exception"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "norm_type", ",", "module_type", ")", ":", "\n", "        ", "super", "(", "DownSampleModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mod_type", "=", "module_type", "\n", "if", "self", ".", "mod_type", "==", "'PixUnShuf'", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Unknown down-sampling module type.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.DownSampleModule.forward": [[275, 281], ["utils.pixel_unshuffle", "print", "quit"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.pixel_unshuffle"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "mod_type", "==", "'PixUnShuf'", ":", "\n", "            ", "return", "pixel_unshuffle", "(", "x", ",", "2", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "self", ".", "mod_type", "+", "'is not implemented for down-sampling.'", ")", "\n", "quit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.InsNorm.__init__": [[286, 292], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "N_modules.InsNorm._reset_parameters", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.InsNorm._reset_parameters"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "eps", "=", "1e-9", ")", ":", "\n", "        ", "super", "(", "InsNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "dim", ")", ")", "\n", "self", ".", "shift", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "dim", ")", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "_reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.InsNorm._reset_parameters": [[293, 296], ["N_modules.InsNorm.scale.data.uniform_", "N_modules.InsNorm.shift.data.zero_"], "methods", ["None"], ["", "def", "_reset_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "scale", ".", "data", ".", "uniform_", "(", ")", "\n", "self", ".", "shift", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.InsNorm.forward": [[297, 309], ["x.view", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "torch.mean().unsqueeze().unsqueeze().expand_as", "N_modules.InsNorm.scale.unsqueeze().unsqueeze().unsqueeze", "scale_broadcast.expand_as.expand_as.expand_as", "N_modules.InsNorm.scale.unsqueeze().unsqueeze().unsqueeze", "shift_broadcast.expand_as.expand_as.expand_as", "x.size", "x.size", "x.size", "x.size", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.var().unsqueeze().unsqueeze().expand_as", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "torch.mean().unsqueeze().unsqueeze", "float", "N_modules.InsNorm.scale.unsqueeze().unsqueeze", "N_modules.InsNorm.scale.unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.var().unsqueeze().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "torch.mean().unsqueeze", "N_modules.InsNorm.scale.unsqueeze", "N_modules.InsNorm.scale.unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.var().unsqueeze", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var", "torch.var"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "flat_len", "=", "x", ".", "size", "(", "2", ")", "*", "x", ".", "size", "(", "3", ")", "\n", "vec", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "1", ")", ",", "flat_len", ")", "\n", "mean", "=", "torch", ".", "mean", "(", "vec", ",", "2", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "\n", "var", "=", "torch", ".", "var", "(", "vec", ",", "2", ")", ".", "unsqueeze", "(", "2", ")", ".", "unsqueeze", "(", "3", ")", ".", "expand_as", "(", "x", ")", "*", "(", "(", "flat_len", "-", "1", ")", "/", "float", "(", "flat_len", ")", ")", "\n", "scale_broadcast", "=", "self", ".", "scale", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "scale_broadcast", "=", "scale_broadcast", ".", "expand_as", "(", "x", ")", "\n", "shift_broadcast", "=", "self", ".", "scale", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "0", ")", "\n", "shift_broadcast", "=", "shift_broadcast", ".", "expand_as", "(", "x", ")", "\n", "out", "=", "(", "x", "-", "mean", ")", "/", "torch", ".", "sqrt", "(", "var", "+", "self", ".", "eps", ")", "\n", "out", "=", "out", "*", "scale_broadcast", "+", "shift_broadcast", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.Coarse2FineHead.__init__": [[312, 330], ["torch.Module.__init__", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.DownSampleModule", "N_modules.DownSampleModule", "N_modules.DownSampleModule", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", "=", "3", ",", "feat_dim", "=", "64", ")", ":", "\n", "        ", "super", "(", "Coarse2FineHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "F_conv1", "=", "ConvLayer", "(", "in_dim", ",", "feat_dim", "/", "2", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "F_conv2", "=", "ConvLayer", "(", "feat_dim", "/", "2", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "F_conv3", "=", "ConvLayer", "(", "feat_dim", "*", "4", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "M_conv1", "=", "ConvLayer", "(", "in_dim", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_conv2", "=", "ConvLayer", "(", "feat_dim", "*", "2", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_conv3", "=", "ConvLayer", "(", "feat_dim", "*", "4", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "C_conv1", "=", "ConvLayer", "(", "in_dim", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "C_conv2", "=", "ConvLayer", "(", "feat_dim", "*", "2", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "C_conv3", "=", "ConvLayer", "(", "feat_dim", "*", "4", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "F_downsamp", "=", "DownSampleModule", "(", "feat_dim", ",", "None", ",", "'PixUnShuf'", ")", "\n", "self", ".", "M_downsamp", "=", "DownSampleModule", "(", "feat_dim", ",", "None", ",", "'PixUnShuf'", ")", "\n", "self", ".", "C_downsamp", "=", "DownSampleModule", "(", "feat_dim", ",", "None", ",", "'PixUnShuf'", ")", "\n", "self", ".", "relu", "=", "nn", ".", "PReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.Coarse2FineHead.forward": [[331, 359], ["N_modules.Coarse2FineHead.relu", "N_modules.Coarse2FineHead.relu", "N_modules.Coarse2FineHead.F_downsamp", "N_modules.Coarse2FineHead.relu", "N_modules.Coarse2FineHead.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "N_modules.Coarse2FineHead.relu", "N_modules.Coarse2FineHead.M_downsamp", "N_modules.Coarse2FineHead.relu", "N_modules.Coarse2FineHead.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "N_modules.Coarse2FineHead.relu", "N_modules.Coarse2FineHead.C_downsamp", "N_modules.Coarse2FineHead.relu", "N_modules.Coarse2FineHead.F_conv1", "N_modules.Coarse2FineHead.F_conv2", "N_modules.Coarse2FineHead.F_conv3", "N_modules.Coarse2FineHead.M_conv1", "N_modules.Coarse2FineHead.M_conv2", "N_modules.Coarse2FineHead.M_conv3", "N_modules.Coarse2FineHead.C_conv1", "N_modules.Coarse2FineHead.C_conv2", "N_modules.Coarse2FineHead.C_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "F_x", ",", "M_x", ",", "C_x", ")", ":", "\n", "        ", "F_img_residual", "=", "F_x", "\n", "F_x", "=", "self", ".", "relu", "(", "self", ".", "F_conv1", "(", "F_x", ")", ")", "\n", "F_x", "=", "self", ".", "relu", "(", "self", ".", "F_conv2", "(", "F_x", ")", ")", "\n", "F_feat_residual", "=", "F_x", "\n", "F_x", "=", "self", ".", "F_downsamp", "(", "F_x", ")", "\n", "F_x", "=", "self", ".", "relu", "(", "self", ".", "F_conv3", "(", "F_x", ")", ")", "\n", "F_output", "=", "[", "F_img_residual", ",", "F_feat_residual", ",", "F_x", "]", "\n", "\n", "M_img_residual", "=", "M_x", "\n", "M_x", "=", "self", ".", "relu", "(", "self", ".", "M_conv1", "(", "M_x", ")", ")", "\n", "M_x", "=", "torch", ".", "cat", "(", "(", "M_x", ",", "F_x", ")", ",", "dim", "=", "1", ")", "\n", "M_x", "=", "self", ".", "relu", "(", "self", ".", "M_conv2", "(", "M_x", ")", ")", "\n", "M_feat_residual", "=", "M_x", "\n", "M_x", "=", "self", ".", "M_downsamp", "(", "M_x", ")", "\n", "M_x", "=", "self", ".", "relu", "(", "self", ".", "M_conv3", "(", "M_x", ")", ")", "\n", "M_output", "=", "[", "M_img_residual", ",", "M_feat_residual", ",", "M_x", "]", "\n", "\n", "C_img_residual", "=", "C_x", "\n", "C_x", "=", "self", ".", "relu", "(", "self", ".", "C_conv1", "(", "C_x", ")", ")", "\n", "C_x", "=", "torch", ".", "cat", "(", "(", "C_x", ",", "M_x", ")", ",", "dim", "=", "1", ")", "\n", "C_x", "=", "self", ".", "relu", "(", "self", ".", "C_conv2", "(", "C_x", ")", ")", "\n", "C_feat_residual", "=", "C_x", "\n", "C_x", "=", "self", ".", "C_downsamp", "(", "C_x", ")", "\n", "C_x", "=", "self", ".", "relu", "(", "self", ".", "C_conv3", "(", "C_x", ")", ")", "\n", "C_output", "=", "[", "C_img_residual", ",", "C_feat_residual", ",", "C_x", "]", "\n", "\n", "return", "F_output", ",", "M_output", ",", "C_output", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.Coarse2FineTail.__init__": [[362, 381], ["torch.Module.__init__", "N_modules.UpSampleModule", "N_modules.UpSampleModule", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.PReLU", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feat_dim", "=", "64", ",", "out_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "Coarse2FineTail", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "C_upsamp", "=", "UpSampleModule", "(", "feat_dim", ",", "None", ",", "\"PixShuf\"", ")", "\n", "self", ".", "M_upsamp", "=", "UpSampleModule", "(", "feat_dim", ",", "None", ",", "\"PixShuf\"", ")", "\n", "self", ".", "F_upsamp", "=", "UpSampleModule", "(", "feat_dim", ",", "None", ",", "\"PixShuf\"", ")", "\n", "\n", "self", ".", "C_conv1", "=", "ConvLayer", "(", "feat_dim", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "C_conv2", "=", "ConvLayer", "(", "feat_dim", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "C_conv3", "=", "ConvLayer", "(", "feat_dim", ",", "out_dim", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "M_conv1", "=", "ConvLayer", "(", "feat_dim", "*", "2", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_conv2", "=", "ConvLayer", "(", "feat_dim", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_conv3", "=", "ConvLayer", "(", "feat_dim", ",", "out_dim", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "F_conv1", "=", "ConvLayer", "(", "feat_dim", "*", "2", ",", "feat_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "F_conv2", "=", "ConvLayer", "(", "feat_dim", ",", "feat_dim", "/", "2", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "F_conv3", "=", "ConvLayer", "(", "feat_dim", "/", "2", ",", "out_dim", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "relu", "=", "nn", ".", "PReLU", "(", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.Coarse2FineTail.forward": [[382, 410], ["N_modules.Coarse2FineTail.relu", "N_modules.Coarse2FineTail.C_upsamp", "N_modules.Coarse2FineTail.relu", "N_modules.Coarse2FineTail.tanh", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "N_modules.Coarse2FineTail.relu", "N_modules.Coarse2FineTail.M_upsamp", "N_modules.Coarse2FineTail.relu", "N_modules.Coarse2FineTail.tanh", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "N_modules.Coarse2FineTail.relu", "N_modules.Coarse2FineTail.F_upsamp", "N_modules.Coarse2FineTail.relu", "N_modules.Coarse2FineTail.tanh", "N_modules.Coarse2FineTail.C_conv1", "N_modules.Coarse2FineTail.C_conv2", "N_modules.Coarse2FineTail.C_conv3", "N_modules.Coarse2FineTail.M_conv1", "N_modules.Coarse2FineTail.M_conv2", "N_modules.Coarse2FineTail.M_conv3", "N_modules.Coarse2FineTail.F_conv1", "N_modules.Coarse2FineTail.F_conv2", "N_modules.Coarse2FineTail.F_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "F_data", ",", "M_data", ",", "C_data", ")", ":", "\n", "        ", "F_img_residual", ",", "F_x", "=", "F_data", "\n", "M_img_residual", ",", "M_x", "=", "M_data", "\n", "C_img_residual", ",", "C_x", "=", "C_data", "\n", "\n", "C_x", "=", "self", ".", "relu", "(", "self", ".", "C_conv1", "(", "C_x", ")", ")", "\n", "C_x", "=", "self", ".", "C_upsamp", "(", "C_x", ")", "\n", "C_x", "=", "self", ".", "relu", "(", "self", ".", "C_conv2", "(", "C_x", ")", ")", "\n", "C2M", "=", "C_x", "\n", "C_x", "=", "self", ".", "tanh", "(", "self", ".", "C_conv3", "(", "C_x", ")", ")", "\n", "C_x", "=", "C_x", "+", "C_img_residual", "\n", "\n", "M_x", "=", "torch", ".", "cat", "(", "(", "M_x", ",", "C2M", ")", ",", "dim", "=", "1", ")", "\n", "M_x", "=", "self", ".", "relu", "(", "self", ".", "M_conv1", "(", "M_x", ")", ")", "\n", "M_x", "=", "self", ".", "M_upsamp", "(", "M_x", ")", "\n", "M_x", "=", "self", ".", "relu", "(", "self", ".", "M_conv2", "(", "M_x", ")", ")", "\n", "M2F", "=", "M_x", "\n", "M_x", "=", "self", ".", "tanh", "(", "self", ".", "M_conv3", "(", "M_x", ")", ")", "\n", "M_x", "=", "M_x", "+", "M_img_residual", "\n", "\n", "F_x", "=", "torch", ".", "cat", "(", "(", "F_x", ",", "M2F", ")", ",", "dim", "=", "1", ")", "\n", "F_x", "=", "self", ".", "relu", "(", "self", ".", "F_conv1", "(", "F_x", ")", ")", "\n", "F_x", "=", "self", ".", "F_upsamp", "(", "F_x", ")", "\n", "F_x", "=", "self", ".", "relu", "(", "self", ".", "F_conv2", "(", "F_x", ")", ")", "\n", "F_x", "=", "self", ".", "tanh", "(", "self", ".", "F_conv3", "(", "F_x", ")", ")", "\n", "F_x", "=", "F_x", "+", "F_img_residual", "\n", "\n", "return", "F_x", ",", "M_x", ",", "C_x", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.C2FShareHead.__init__": [[413, 437], ["torch.Module.__init__", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.DownSampleModule", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", "=", "3", ",", "need_res2", "=", "True", ")", ":", "\n", "        ", "super", "(", "C2FShareHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "need_res2", "=", "need_res2", "\n", "\n", "self", ".", "F_conv1", "=", "ConvLayer", "(", "3", "+", "3", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_conv1", "=", "ConvLayer", "(", "3", "+", "3", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "C_conv1", "=", "ConvLayer", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "conv1", "=", "ConvLayer", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "F_conv2", "=", "ConvLayer", "(", "32", "*", "4", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_conv2", "=", "ConvLayer", "(", "32", "*", "4", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "C_conv2", "=", "ConvLayer", "(", "32", "*", "4", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "conv3", "=", "ConvLayer", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "conv4", "=", "ConvLayer", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "F_conv3", "=", "ConvLayer", "(", "64", "*", "4", ",", "96", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_conv3", "=", "ConvLayer", "(", "64", "*", "4", ",", "96", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "C_conv3", "=", "ConvLayer", "(", "64", "*", "4", ",", "96", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "downsamp", "=", "DownSampleModule", "(", "None", ",", "'PixUnShuf'", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.C2FShareHead.forward": [[438, 482], ["N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.downsamp", "N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.downsamp", "N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.conv1", "N_modules.C2FShareHead.conv2", "N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.conv3", "N_modules.C2FShareHead.conv4", "N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.F_conv1", "N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.F_conv2", "N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.F_conv3", "N_modules.C2FShareHead.relu", "N_modules.C2FShareHead.M_conv1", "N_modules.C2FShareHead.relu", "Exception", "N_modules.C2FShareHead.M_conv2", "N_modules.C2FShareHead.relu", "Exception", "N_modules.C2FShareHead.M_conv3", "N_modules.C2FShareHead.relu", "Exception", "N_modules.C2FShareHead.C_conv1", "N_modules.C2FShareHead.C_conv2", "N_modules.C2FShareHead.C_conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "scale", ")", ":", "\n", "        ", "if", "scale", "==", "'fine'", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "F_conv1", "(", "x", ")", ")", "\n", "", "elif", "scale", "==", "'mid'", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "M_conv1", "(", "x", ")", ")", "\n", "", "elif", "scale", "==", "'coarse'", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "C_conv1", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "           ", "raise", "Exception", "(", "'scale unknown.'", ")", "\n", "\n", "", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "if", "self", ".", "need_res2", ":", "\n", "            ", "res2", "=", "x", "\n", "\n", "", "x", "=", "self", ".", "downsamp", "(", "x", ")", "\n", "\n", "if", "scale", "==", "'fine'", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "F_conv2", "(", "x", ")", ")", "\n", "", "elif", "scale", "==", "'mid'", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "M_conv2", "(", "x", ")", ")", "\n", "", "elif", "scale", "==", "'coarse'", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "C_conv2", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'scale unknown.'", ")", "\n", "\n", "", "x", "=", "self", ".", "relu", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv4", "(", "x", ")", ")", "\n", "res1", "=", "x", "\n", "x", "=", "self", ".", "downsamp", "(", "x", ")", "\n", "\n", "if", "scale", "==", "'fine'", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "F_conv3", "(", "x", ")", ")", "\n", "", "elif", "scale", "==", "'mid'", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "M_conv3", "(", "x", ")", ")", "\n", "", "elif", "scale", "==", "'coarse'", ":", "\n", "            ", "x", "=", "self", ".", "relu", "(", "self", ".", "C_conv3", "(", "x", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'scale unknown.'", ")", "\n", "\n", "", "if", "self", ".", "need_res2", ":", "\n", "            ", "return", "x", ",", "res1", ",", "res2", "\n", "", "else", ":", "\n", "            ", "return", "x", ",", "res1", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.C2FShareTail.__init__": [[485, 512], ["torch.Module.__init__", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sum_before", "=", "True", ")", ":", "\n", "        ", "super", "(", "C2FShareTail", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sum_before", "=", "sum_before", "\n", "\n", "self", ".", "C_upsamp1", "=", "UpSampleModule", "(", "96", ",", "None", ",", "\"PixShuf\"", ")", "\n", "self", ".", "C_upconv1", "=", "ConvLayer", "(", "96", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_upsamp1", "=", "UpSampleModule", "(", "96", ",", "None", ",", "\"PixShuf\"", ")", "\n", "self", ".", "M_upconv1", "=", "ConvLayer", "(", "96", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "F_upsamp1", "=", "UpSampleModule", "(", "96", ",", "None", ",", "\"PixShuf\"", ")", "\n", "self", ".", "F_upconv1", "=", "ConvLayer", "(", "96", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "conv1", "=", "ConvLayer", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "C_upsamp2", "=", "UpSampleModule", "(", "64", ",", "None", ",", "\"PixShuf\"", ")", "\n", "self", ".", "C_upconv2", "=", "ConvLayer", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_upsamp2", "=", "UpSampleModule", "(", "64", ",", "None", ",", "\"PixShuf\"", ")", "\n", "self", ".", "M_upconv2", "=", "ConvLayer", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "F_upsamp2", "=", "UpSampleModule", "(", "64", ",", "None", ",", "\"PixShuf\"", ")", "\n", "self", ".", "F_upconv2", "=", "ConvLayer", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "conv3", "=", "ConvLayer", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "conv4", "=", "ConvLayer", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "\n", "self", ".", "C_conv", "=", "ConvLayer", "(", "32", ",", "3", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "M_conv", "=", "ConvLayer", "(", "32", ",", "3", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "F_conv", "=", "ConvLayer", "(", "32", ",", "3", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.C2FShareTail.forward": [[513, 581], ["N_modules.C2FShareTail.F_upsamp1", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.F_upsamp2", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.F_upconv1", "N_modules.C2FShareTail.conv1", "N_modules.C2FShareTail.conv2", "N_modules.C2FShareTail.F_upconv2", "N_modules.C2FShareTail.conv3", "N_modules.C2FShareTail.conv4", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.F_conv", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.tanh", "N_modules.C2FShareTail.M_upsamp1", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.M_upsamp2", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.conv4", "N_modules.C2FShareTail.C_conv", "N_modules.C2FShareTail.M_upconv1", "N_modules.C2FShareTail.conv1", "N_modules.C2FShareTail.conv2", "N_modules.C2FShareTail.M_upconv2", "N_modules.C2FShareTail.conv3", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.M_conv", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.tanh", "N_modules.C2FShareTail.C_upsamp1", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.C_upsamp2", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.conv4", "print", "N_modules.C2FShareTail.C_conv", "N_modules.C2FShareTail.C_upconv1", "N_modules.C2FShareTail.conv1", "N_modules.C2FShareTail.conv2", "N_modules.C2FShareTail.C_upconv2", "N_modules.C2FShareTail.conv3", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.C_conv", "N_modules.C2FShareTail.relu", "N_modules.C2FShareTail.tanh", "N_modules.C2FShareTail.C_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "res", ",", "scale", ")", ":", "\n", "        ", "if", "scale", "==", "'fine'", ":", "\n", "            ", "x", "=", "self", ".", "F_upsamp1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "F_upconv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "F_upsamp2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "F_upconv2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "if", "self", ".", "sum_before", ":", "\n", "                ", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x", "=", "x", "+", "res", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "res", "=", "x", "\n", "x", "=", "self", ".", "F_conv", "(", "x", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "tanh", "(", "self", ".", "C_conv", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "res", "\n", "\n", "", "", "elif", "scale", "==", "'mid'", ":", "\n", "            ", "x", "=", "self", ".", "M_upsamp1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "M_upconv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "M_upsamp2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "M_upconv2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "if", "self", ".", "sum_before", ":", "\n", "                ", "x", "=", "x", "+", "res", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "res", "=", "x", "\n", "x", "=", "self", ".", "M_conv", "(", "x", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "tanh", "(", "self", ".", "C_conv", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "res", "\n", "\n", "\n", "", "", "elif", "scale", "==", "'coarse'", ":", "\n", "            ", "x", "=", "self", ".", "C_upsamp1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "C_upconv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "C_upsamp2", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "C_upconv2", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "if", "self", ".", "sum_before", ":", "\n", "                ", "x", "=", "x", "+", "res", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "res", "=", "x", "\n", "x", "=", "self", ".", "C_conv", "(", "x", ")", "\n", "", "else", ":", "\n", "                ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "tanh", "(", "self", ".", "C_conv", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "res", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "'fuck'", ")", "\n", "\n", "", "if", "self", ".", "sum_before", ":", "\n", "           ", "if", "scale", "!=", "'fine'", ":", "\n", "               ", "return", "res", ",", "x", "\n", "", "else", ":", "\n", "               ", "return", "x", "\n", "", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.single_convlstm.__init__": [[584, 596], ["torch.Module.__init__", "N_modules.ConvLayer", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "N_modules.ConvLayer", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "N_modules.ConvLayer", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "N_modules.ConvLayer", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh", "N_modules.ConvLayer", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim", "=", "32", ")", ":", "\n", "        ", "super", "(", "single_convlstm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "comb_conv", "=", "ConvLayer", "(", "3", "+", "3", ",", "dim", ",", "3", ")", "\n", "self", ".", "conv_i", "=", "nn", ".", "Sequential", "(", "ConvLayer", "(", "dim", "+", "dim", ",", "dim", ",", "3", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv_f", "=", "nn", ".", "Sequential", "(", "ConvLayer", "(", "dim", "+", "dim", ",", "dim", ",", "3", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "conv_g", "=", "nn", ".", "Sequential", "(", "ConvLayer", "(", "dim", "+", "dim", ",", "dim", ",", "3", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ")", "\n", "self", ".", "conv_o", "=", "nn", ".", "Sequential", "(", "ConvLayer", "(", "dim", "+", "dim", ",", "dim", ",", "3", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "stats", ")", ":", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.single_convlstm.forward": [[596, 612], ["N_modules.single_convlstm.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "N_modules.single_convlstm.conv_i", "N_modules.single_convlstm.conv_f", "N_modules.single_convlstm.conv_g", "N_modules.single_convlstm.conv_o", "N_modules.single_convlstm.comb_conv", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "stats", ")", ":", "\n", "# hidden, cell are tensors, x is cat(img1, img2)", "\n", "        ", "hidden", ",", "cell", "=", "stats", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "comb_conv", "(", "x", ")", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "hidden", ")", ",", "dim", "=", "1", ")", "\n", "i_x", "=", "self", ".", "conv_i", "(", "x", ")", "\n", "f_x", "=", "self", ".", "conv_f", "(", "x", ")", "\n", "g_x", "=", "self", ".", "conv_g", "(", "x", ")", "\n", "o_x", "=", "self", ".", "conv_o", "(", "x", ")", "\n", "cell", "=", "f_x", "*", "cell", "+", "i_x", "*", "g_x", "\n", "hidden", "=", "o_x", "*", "torch", ".", "tanh", "(", "cell", ")", "\n", "x", "=", "hidden", "\n", "\n", "stats", "=", "[", "hidden", ",", "cell", "]", "\n", "return", "x", ",", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.LSTMHeadDown1.__init__": [[615, 621], ["torch.Module.__init__", "N_modules.single_convlstm", "N_modules.ConvLayer", "N_modules.ConvLayer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "LSTMHeadDown1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lstm", "=", "single_convlstm", "(", ")", "\n", "self", ".", "conv1", "=", "ConvLayer", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "64", "*", "4", ",", "96", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.LSTMHeadDown1.forward": [[622, 630], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "N_modules.LSTMHeadDown1.lstm", "N_modules.LSTMHeadDown1.relu", "utils.pixel_unshuffle", "N_modules.LSTMHeadDown1.relu", "N_modules.LSTMHeadDown1.conv1", "N_modules.LSTMHeadDown1.conv2"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.pixel_unshuffle"], ["", "def", "forward", "(", "self", ",", "x", ",", "input_img", ",", "stats", ")", ":", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "input_img", ")", ",", "dim", "=", "1", ")", "\n", "x", ",", "stats", "=", "self", ".", "lstm", "(", "x", ",", "stats", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "res", "=", "x", "\n", "x", "=", "pixel_unshuffle", "(", "x", ",", "2", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "return", "x", ",", "res", ",", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.NormalHeadDown2.__init__": [[632, 638], ["torch.Module.__init__", "N_modules.ConvLayer", "N_modules.ConvLayer", "N_modules.ConvLayer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", "=", "3", ")", ":", "\n", "        ", "super", "(", "NormalHeadDown2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "ConvLayer", "(", "in_dim", ",", "32", ",", "kernel_size", "=", "3", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv3", "=", "ConvLayer", "(", "64", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.NormalHeadDown2.forward": [[639, 645], ["N_modules.NormalHeadDown2.relu", "N_modules.NormalHeadDown2.relu", "N_modules.NormalHeadDown2.relu", "N_modules.NormalHeadDown2.conv1", "N_modules.NormalHeadDown2.conv2", "N_modules.NormalHeadDown2.conv3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "res", "=", "x", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "return", "x", ",", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.NormalDecoderUp2.__init__": [[648, 657], ["torch.Module.__init__", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.ConvLayer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NormalDecoderUp2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up1", "=", "UpSampleModule", "(", "dim", "=", "96", ",", "norm_type", "=", "None", ",", "module_type", "=", "'PixShuf'", ")", "\n", "self", ".", "conv1", "=", "ConvLayer", "(", "96", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "up2", "=", "UpSampleModule", "(", "dim", "=", "64", ",", "norm_type", "=", "None", ",", "module_type", "=", "'PixShuf'", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "64", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv3", "=", "ConvLayer", "(", "32", ",", "3", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.NormalDecoderUp2.forward": [[658, 664], ["N_modules.NormalDecoderUp2.relu", "N_modules.NormalDecoderUp2.relu", "N_modules.NormalDecoderUp2.tanh", "N_modules.NormalDecoderUp2.conv1", "N_modules.NormalDecoderUp2.conv2", "N_modules.NormalDecoderUp2.conv3", "N_modules.NormalDecoderUp2.up1", "N_modules.NormalDecoderUp2.up2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "residual", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "self", ".", "up1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "relu", "(", "self", ".", "conv2", "(", "self", ".", "up2", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "tanh", "(", "self", ".", "conv3", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "residual", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.NormalDecoderUp1.__init__": [[666, 674], ["torch.Module.__init__", "N_modules.UpSampleModule", "N_modules.ConvLayer", "N_modules.ConvLayer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NormalDecoderUp1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up1", "=", "UpSampleModule", "(", "dim", "=", "96", ",", "norm_type", "=", "None", ",", "\n", "module_type", "=", "'PixShuf'", ",", "ps_scale", "=", "2", ")", "\n", "self", ".", "conv1", "=", "ConvLayer", "(", "48", ",", "48", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "conv2", "=", "ConvLayer", "(", "48", ",", "3", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "tanh", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.NormalDecoderUp1.forward": [[675, 680], ["N_modules.NormalDecoderUp1.relu", "N_modules.NormalDecoderUp1.tanh", "N_modules.NormalDecoderUp1.conv1", "N_modules.NormalDecoderUp1.conv2", "N_modules.NormalDecoderUp1.up1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "residual", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu", "(", "self", ".", "conv1", "(", "self", ".", "up1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "tanh", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "x", "=", "x", "+", "residual", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.LayerNorm.__init__": [[701, 710], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ",", "affine", "=", "True", ")", ":", "\n", "        ", "super", "(", "LayerNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "affine", "=", "affine", "\n", "self", ".", "eps", "=", "eps", "\n", "\n", "if", "self", ".", "affine", ":", "\n", "            ", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ".", "uniform_", "(", ")", ")", "\n", "self", ".", "beta", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.LayerNorm.forward": [[711, 721], ["x.view().mean().view", "x.view().std().view", "x.view().mean", "x.view().std", "N_modules.LayerNorm.beta.view", "x.dim", "N_modules.LayerNorm.gamma.view", "x.view", "x.view", "x.dim", "x.size", "x.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "shape", "=", "[", "-", "1", "]", "+", "[", "1", "]", "*", "(", "x", ".", "dim", "(", ")", "-", "1", ")", "\n", "mean", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "mean", "(", "1", ")", ".", "view", "(", "*", "shape", ")", "\n", "std", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "std", "(", "1", ")", ".", "view", "(", "*", "shape", ")", "\n", "\n", "y", "=", "(", "x", "-", "mean", ")", "/", "(", "std", "+", "self", ".", "eps", ")", "\n", "if", "self", ".", "affine", ":", "\n", "            ", "shape", "=", "[", "1", ",", "-", "1", "]", "+", "[", "1", "]", "*", "(", "x", ".", "dim", "(", ")", "-", "2", ")", "\n", "y", "=", "self", ".", "gamma", ".", "view", "(", "*", "shape", ")", "*", "y", "+", "self", ".", "beta", ".", "view", "(", "*", "shape", ")", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.__init__": [[724, 728], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hard", "=", "False", ")", ":", "\n", "        ", "super", "(", "GumbleSoftmax", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hard", "=", "hard", "\n", "self", ".", "gpu", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda": [[729, 731], ["None"], "methods", ["None"], ["", "def", "cuda", "(", "self", ")", ":", "\n", "        ", "self", ".", "gpu", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cpu": [[732, 734], ["None"], "methods", ["None"], ["", "def", "cpu", "(", "self", ")", ":", "\n", "        ", "self", ".", "gpu", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.sample_gumbel": [[735, 744], ["torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand.add_().log_().neg_", "torch.rand.add_().log_().neg_", "torch.rand.add_().log_().neg_", "torch.rand.add_().log_().neg_", "torch.rand.add_().log_().neg_", "torch.rand.add_().log_().neg_", "torch.rand.add_().log_().neg_", "torch.rand.add_().log_().neg_", "torch.rand.add_().log_().neg_", "torch.rand.add_().log_().neg_", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.rand.add_().log_", "torch.rand.add_().log_", "torch.rand.add_().log_", "torch.rand.add_().log_", "torch.rand.add_().log_", "torch.rand.add_().log_", "torch.rand.add_().log_", "torch.rand.add_().log_", "torch.rand.add_().log_", "torch.rand.add_().log_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.rand.add_", "torch.rand.add_", "torch.rand.add_", "torch.rand.add_", "torch.rand.add_", "torch.rand.add_", "torch.rand.add_", "torch.rand.add_", "torch.rand.add_", "torch.rand.add_"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda"], ["", "def", "sample_gumbel", "(", "self", ",", "shape", ",", "eps", "=", "1e-10", ")", ":", "\n", "        ", "\"\"\"Sample from Gumbel(0, 1)\"\"\"", "\n", "noise", "=", "torch", ".", "rand", "(", "shape", ")", "\n", "noise", ".", "add_", "(", "eps", ")", ".", "log_", "(", ")", ".", "neg_", "(", ")", "\n", "noise", ".", "add_", "(", "eps", ")", ".", "log_", "(", ")", ".", "neg_", "(", ")", "\n", "if", "self", ".", "gpu", ":", "\n", "            ", "return", "Variable", "(", "noise", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "Variable", "(", "noise", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.sample_gumbel_like": [[745, 749], ["template_tensor.clone().uniform_", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "template_tensor.clone", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log"], ["", "", "def", "sample_gumbel_like", "(", "self", ",", "template_tensor", ",", "eps", "=", "1e-10", ")", ":", "\n", "        ", "uniform_samples_tensor", "=", "template_tensor", ".", "clone", "(", ")", ".", "uniform_", "(", ")", "\n", "gumble_samples_tensor", "=", "-", "torch", ".", "log", "(", "eps", "-", "torch", ".", "log", "(", "uniform_samples_tensor", "+", "eps", ")", ")", "\n", "return", "gumble_samples_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.gumbel_softmax_sample": [[750, 756], ["logits.size", "N_modules.GumbleSoftmax.sample_gumbel_like", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.sample_gumbel_like"], ["", "def", "gumbel_softmax_sample", "(", "self", ",", "logits", ",", "temperature", ")", ":", "\n", "        ", "dim", "=", "logits", ".", "size", "(", "-", "1", ")", "\n", "gumble_samples_tensor", "=", "self", ".", "sample_gumbel_like", "(", "logits", ".", "data", ")", "\n", "gumble_trick_log_prob_samples", "=", "logits", "+", "Variable", "(", "gumble_samples_tensor", ")", "\n", "soft_samples", "=", "F", ".", "softmax", "(", "gumble_trick_log_prob_samples", "/", "temperature", ",", "dim", ")", "\n", "return", "soft_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.gumbel_softmax": [[757, 764], ["N_modules.GumbleSoftmax.gumbel_softmax_sample", "N_modules.GumbleSoftmax.data.max", "logits.data.clone().zero_().scatter_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "logits.data.clone().zero_", "logits.data.clone"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.gumbel_softmax_sample"], ["", "def", "gumbel_softmax", "(", "self", ",", "logits", ",", "temperature", ",", "hard", "=", "False", ")", ":", "\n", "        ", "y", "=", "self", ".", "gumbel_softmax_sample", "(", "logits", ",", "temperature", ")", "\n", "if", "hard", ":", "\n", "            ", "_", ",", "max_value_indexes", "=", "y", ".", "data", ".", "max", "(", "1", ",", "keepdim", "=", "True", ")", "\n", "y_hard", "=", "logits", ".", "data", ".", "clone", "(", ")", ".", "zero_", "(", ")", ".", "scatter_", "(", "1", ",", "max_value_indexes", ",", "1", ")", "\n", "y", "=", "Variable", "(", "y_hard", "-", "y", ".", "data", ")", "+", "y", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.forward": [[765, 772], ["logits.size", "N_modules.GumbleSoftmax.gumbel_softmax", "N_modules.GumbleSoftmax.gumbel_softmax"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.gumbel_softmax", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.gumbel_softmax"], ["", "def", "forward", "(", "self", ",", "logits", ",", "temp", "=", "1", ",", "force_hard", "=", "False", ")", ":", "\n", "        ", "samplesize", "=", "logits", ".", "size", "(", ")", "\n", "\n", "if", "self", ".", "training", "and", "not", "force_hard", ":", "\n", "            ", "return", "self", ".", "gumbel_softmax", "(", "logits", ",", "temperature", "=", "1", ",", "hard", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "gumbel_softmax", "(", "logits", ",", "temperature", "=", "1", ",", "hard", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SqueezeBlock.__init__": [[777, 784], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__"], ["    ", "def", "__init__", "(", "self", ",", "exp_size", ",", "divide", "=", "2", ")", ":", "\n", "        ", "super", "(", "SqueezeBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dense", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "exp_size", ",", "exp_size", "//", "divide", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "exp_size", "//", "divide", ",", "exp_size", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.SqueezeBlock.forward": [[786, 793], ["x.size", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "N_modules.SqueezeBlock.dense", "out.view.view.view", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch", ",", "channels", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "[", "height", ",", "width", "]", ")", ".", "view", "(", "batch", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "dense", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "batch", ",", "channels", ",", "1", ",", "1", ")", "\n", "\n", "return", "out", "*", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.customized_image_rotation": [[686, 698], ["isinstance", "TypeError", "random.random", "random.choice", "x.rotate", "type"], "function", ["None"], ["", "", "def", "customized_image_rotation", "(", "x", ",", "p", "=", "0.5", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "x", ",", "Image", ".", "Image", ")", ":", "\n", "        ", "raise", "TypeError", "(", "'An input image should be PIL.Image. Got {}'", ".", "format", "(", "type", "(", "x", ")", ")", ")", "\n", "\n", "", "angles", "=", "[", "90", ",", "180", ",", "270", "]", "\n", "\n", "if", "p", "<", "random", ".", "random", "(", ")", ":", "\n", "        ", "return", "x", "\n", "\n", "", "else", ":", "\n", "        ", "angle", "=", "random", ".", "choice", "(", "angles", ")", "\n", "return", "x", ".", "rotate", "(", "angle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.__init__": [[20, 31], ["visdom.Visdom", "time.time"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_epochs", ",", "batches_epoch", ")", ":", "\n", "        ", "self", ".", "viz", "=", "Visdom", "(", ")", "\n", "self", ".", "n_epochs", "=", "n_epochs", "\n", "self", ".", "batches_epoch", "=", "batches_epoch", "\n", "self", ".", "epoch", "=", "1", "\n", "self", ".", "batch", "=", "1", "\n", "self", ".", "prev_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "mean_period", "=", "0", "\n", "self", ".", "losses", "=", "{", "}", "\n", "self", ".", "loss_windows", "=", "{", "}", "\n", "self", ".", "image_windows", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.Logger.log": [[33, 84], ["time.time", "sys.stdout.write", "enumerate", "images.items", "time.time", "losses.keys", "utils.Logger.losses.items", "sys.stdout.write", "len", "sys.stdout.write", "sys.stdout.write", "utils.Logger.viz.image", "utils.Logger.viz.image", "losses.keys", "utils.Logger.viz.line", "utils.Logger.viz.line", "utils.tensor2image", "utils.tensor2image", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.tensor2image", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.tensor2image"], ["", "def", "log", "(", "self", ",", "losses", "=", "None", ",", "images", "=", "None", ")", ":", "\n", "\n", "        ", "if", "losses", "!=", "None", ":", "\n", "            ", "self", ".", "mean_period", "+=", "(", "time", ".", "time", "(", ")", "-", "self", ".", "prev_time", ")", "\n", "self", ".", "prev_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "sys", ".", "stdout", ".", "write", "(", "'\\rEpoch %03d/%03d [%04d/%04d] -- '", "%", "(", "self", ".", "epoch", ",", "self", ".", "n_epochs", ",", "self", ".", "batch", ",", "self", ".", "batches_epoch", ")", ")", "\n", "\n", "for", "i", ",", "loss_name", "in", "enumerate", "(", "losses", ".", "keys", "(", ")", ")", ":", "\n", "                ", "if", "loss_name", "not", "in", "self", ".", "losses", ":", "\n", "                    ", "self", ".", "losses", "[", "loss_name", "]", "=", "losses", "[", "loss_name", "]", "\n", "", "else", ":", "\n", "                    ", "self", ".", "losses", "[", "loss_name", "]", "+=", "losses", "[", "loss_name", "]", "\n", "\n", "", "if", "(", "i", "+", "1", ")", "==", "len", "(", "losses", ".", "keys", "(", ")", ")", ":", "\n", "                    ", "sys", ".", "stdout", ".", "write", "(", "'%s: %.4f -- '", "%", "(", "loss_name", ",", "self", ".", "losses", "[", "loss_name", "]", "/", "self", ".", "batch", ")", ")", "\n", "", "else", ":", "\n", "                    ", "sys", ".", "stdout", ".", "write", "(", "'%s: %.4f | '", "%", "(", "loss_name", ",", "self", ".", "losses", "[", "loss_name", "]", "/", "self", ".", "batch", ")", ")", "\n", "\n", "", "", "batches_done", "=", "self", ".", "batches_epoch", "*", "(", "self", ".", "epoch", "-", "1", ")", "+", "self", ".", "batch", "\n", "batches_left", "=", "self", ".", "batches_epoch", "*", "(", "self", ".", "n_epochs", "-", "self", ".", "epoch", ")", "+", "self", ".", "batches_epoch", "-", "self", ".", "batch", "\n", "\n", "# End of epoch", "\n", "if", "(", "self", ".", "batch", "%", "self", ".", "batches_epoch", ")", "==", "0", ":", "\n", "# Plot losses", "\n", "                ", "for", "loss_name", ",", "loss", "in", "self", ".", "losses", ".", "items", "(", ")", ":", "\n", "                    ", "if", "loss_name", "not", "in", "self", ".", "loss_windows", ":", "\n", "                        ", "self", ".", "loss_windows", "[", "loss_name", "]", "=", "self", ".", "viz", ".", "line", "(", "X", "=", "np", ".", "array", "(", "[", "self", ".", "epoch", "]", ")", ",", "\n", "Y", "=", "np", ".", "array", "(", "[", "loss", "/", "self", ".", "batch", "]", ")", ",", "\n", "opts", "=", "{", "'xlabel'", ":", "'epochs'", ",", "\n", "'ylabel'", ":", "loss_name", ",", "\n", "'title'", ":", "loss_name", "}", ")", "\n", "", "else", ":", "\n", "                        ", "self", ".", "viz", ".", "line", "(", "X", "=", "np", ".", "array", "(", "[", "self", ".", "epoch", "]", ")", ",", "Y", "=", "np", ".", "array", "(", "[", "loss", "/", "self", ".", "batch", "]", ")", ",", "win", "=", "self", ".", "loss_windows", "[", "loss_name", "]", ",", "update", "=", "'append'", ")", "\n", "# Reset losses for next k epoches", "\n", "", "self", ".", "losses", "[", "loss_name", "]", "=", "0.0", "\n", "\n", "", "self", ".", "epoch", "+=", "1", "\n", "self", ".", "batch", "=", "1", "\n", "sys", ".", "stdout", ".", "write", "(", "'\\n'", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "batch", "+=", "1", "\n", "\n", "\n", "", "", "if", "images", "!=", "None", ":", "\n", "# Draw images", "\n", "            ", "for", "image_name", ",", "image_", "in", "images", ".", "items", "(", ")", ":", "\n", "                ", "if", "image_name", "not", "in", "self", ".", "image_windows", ":", "\n", "                    ", "self", ".", "image_windows", "[", "image_name", "]", "=", "self", ".", "viz", ".", "image", "(", "tensor2image", "(", "image_", ")", ",", "opts", "=", "{", "'title'", ":", "image_name", "}", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "viz", ".", "image", "(", "tensor2image", "(", "image_", ")", ",", "win", "=", "self", ".", "image_windows", "[", "image_name", "]", ",", "opts", "=", "{", "'title'", ":", "image_name", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.tensor2image": [[13, 18], ["image.astype"], "function", ["None"], ["def", "tensor2image", "(", "image", ")", ":", "\n", "    ", "image", "[", "image", ">", "1", "]", "=", "1", "\n", "image", "[", "image", "<", "0", "]", "=", "0", "\n", "image", "*=", "255", "\n", "return", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.SaltAndPepper": [[86, 102], ["random.choice", "img.size", "torch.zeros().normal_", "torch.min", "torch.max", "rnd.expand.expand", "torch.zeros"], "function", ["None"], ["", "", "", "", "", "def", "SaltAndPepper", "(", "img", ",", "probs", ")", ":", "\n", "    ", "prob", "=", "random", ".", "choice", "(", "probs", ")", "\n", "c", ",", "h", ",", "w", "=", "img", ".", "size", "(", ")", "\n", "rnd", "=", "torch", ".", "zeros", "(", "(", "h", ",", "w", ")", ")", ".", "normal_", "(", "0", ",", "std", "=", "1", ")", "\n", "minV", "=", "torch", ".", "min", "(", "rnd", ")", "\n", "maxV", "=", "torch", ".", "max", "(", "rnd", ")", "\n", "rnd", "=", "(", "rnd", "-", "minV", ")", "/", "(", "maxV", "-", "minV", ")", "\n", "rnd", "=", "rnd", ".", "expand", "(", "3", ",", "h", ",", "w", ")", "\n", "\n", "pepper", "=", "(", "rnd", "<", "prob", "/", "2", ")", "\n", "salt", "=", "(", "rnd", ">", "1", "-", "prob", "/", "2", ")", "\n", "\n", "img", "[", "pepper", "]", "=", "0.", "\n", "img", "[", "salt", "]", "=", "1.", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.GaussianNoise": [[103, 115], ["img.size", "random.choice", "torch.FloatTensor().normal_", "torch.div", "torch.FloatTensor"], "function", ["None"], ["", "def", "GaussianNoise", "(", "img", ",", "Vars", ")", ":", "\n", "    ", "c", ",", "h", ",", "w", "=", "img", ".", "size", "(", ")", "\n", "var", "=", "random", ".", "choice", "(", "Vars", ")", "\n", "if", "var", "!=", "0", ":", "\n", "        ", "noise_pad", "=", "torch", ".", "FloatTensor", "(", "c", ",", "h", ",", "w", ")", ".", "normal_", "(", "0", ",", "var", ")", "\n", "noise_pad", "=", "torch", ".", "div", "(", "noise_pad", ",", "255.0", ")", "\n", "img", "+=", "noise_pad", "\n", "\n", "", "else", ":", "\n", "        ", "pass", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.align_to_k": [[117, 122], ["int", "int"], "function", ["None"], ["", "def", "align_to_k", "(", "img", ",", "k", ")", ":", "\n", "    ", "a_row", "=", "int", "(", "img", ".", "shape", "[", "0", "]", "/", "k", ")", "*", "k", "\n", "a_col", "=", "int", "(", "img", ".", "shape", "[", "1", "]", "/", "k", ")", "*", "k", "\n", "img", "=", "img", "[", "0", ":", "a_row", ",", "0", ":", "a_col", "]", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.GaussianBlur": [[124, 134], ["random.choice", "numpy.asarray", "cv2.GaussianBlur", "PIL.Image.fromarray"], "function", ["home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.GaussianBlur"], ["", "def", "GaussianBlur", "(", "img", ",", "Vars", ")", ":", "\n", "    ", "var", "=", "random", ".", "choice", "(", "Vars", ")", "\n", "if", "var", "!=", "0", ":", "\n", "        ", "img", "=", "np", ".", "asarray", "(", "img", ")", "\n", "img", "=", "cv2", ".", "GaussianBlur", "(", "img", ",", "(", "21", ",", "21", ")", ",", "var", ")", "\n", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "", "else", ":", "\n", "        ", "pass", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.load_part_of_pretrained": [[136, 153], ["current_model.state_dict", "loaded_dict.items", "isinstance", "current_model.state_dict.keys", "current_dict[].copy_", "pre_model.keys", "RuntimeError", "current_dict[].size", "param.size"], "function", ["None"], ["", "def", "load_part_of_pretrained", "(", "current_model", ",", "pre_model", ")", ":", "\n", "\n", "#    pre_dict = {k: v for k, v in pre_model.items() if k in current_dict}", "\n", "\n", "    ", "current_dict", "=", "current_model", ".", "state_dict", "(", ")", "\n", "loaded_dict", "=", "{", "k", ":", "pre_model", "[", "k", "]", "for", "k", "in", "current_dict", ".", "keys", "(", ")", "if", "k", "in", "pre_model", ".", "keys", "(", ")", "}", "\n", "for", "name", ",", "param", "in", "loaded_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "param", ",", "Parameter", ")", ":", "\n", "            ", "param", "=", "param", ".", "data", "\n", "\n", "", "try", ":", "\n", "            ", "current_dict", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the current model are {} and '", "\n", "'whose dimensions in the pretrained model are {}.'", "\n", ".", "format", "(", "name", ",", "current_dict", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.pixel_unshuffle": [[155, 163], ["fm.size", "fm.contiguous().view", "fm.contiguous().view.permute().contiguous().view", "fm.contiguous", "fm.contiguous().view.permute().contiguous", "fm.contiguous().view.permute"], "function", ["None"], ["", "", "", "def", "pixel_unshuffle", "(", "fm", ",", "r", ")", ":", "\n", "    ", "b", ",", "c", ",", "h", ",", "w", "=", "fm", ".", "size", "(", ")", "\n", "out_channel", "=", "c", "*", "(", "r", "**", "2", ")", "\n", "out_h", "=", "h", "//", "r", "\n", "out_w", "=", "w", "//", "r", "\n", "fm_view", "=", "fm", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "c", ",", "out_h", ",", "r", ",", "out_w", ",", "r", ")", "\n", "fm_prime", "=", "fm_view", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "5", ",", "2", ",", "4", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "out_channel", ",", "out_h", ",", "out_w", ")", "\n", "return", "fm_prime", "\n", "\n"]], "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.utils.activation_func": [[164, 169], ["nn.ReLU", "nn.PReLU"], "function", ["None"], ["", "def", "activation_func", "(", "relu_type", ")", ":", "\n", "    ", "if", "relu_type", "==", "'relu'", ":", "\n", "        ", "return", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "relu_type", "==", "'prelu'", ":", "\n", "        ", "return", "nn", ".", "PReLU", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__": [[46, 52], ["super().__init__", "__init__.create_window"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.__init__", "home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.create_window"], []], "home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.SSIM.forward": [[53, 69], ["img1.size", "__init__._ssim", "__init__.create_window", "window.cuda.cuda.type_as", "__init__.SSIM.window.data.type", "img1.data.type", "window.cuda.cuda.cuda", "img1.get_device"], "methods", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__._ssim", "home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.create_window", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda"], []], "home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.gaussian": [[8, 11], ["torch.Tensor", "torch.Tensor", "torch.Tensor.sum", "math.exp", "range", "float"], "function", ["None"], []], "home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.create_window": [[13, 18], ["gaussian().unsqueeze", "gaussian().unsqueeze.mm().float().unsqueeze().unsqueeze", "torch.autograd.Variable", "_1D_window.mm().float().unsqueeze().unsqueeze.expand().contiguous", "__init__.gaussian", "gaussian().unsqueeze.mm().float().unsqueeze", "_1D_window.mm().float().unsqueeze().unsqueeze.expand", "gaussian().unsqueeze.mm().float", "gaussian().unsqueeze.mm", "gaussian().unsqueeze.t"], "function", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.gaussian"], []], "home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__._ssim": [[19, 44], ["torch.conv2d", "torch.conv2d", "F.conv2d.pow", "F.conv2d.pow", "torch.conv2d", "torch.conv2d", "torch.conv2d", "ssim_map.mean", "ssim_map.mean().mean().mean", "ssim_map.mean().mean", "ssim_map.mean"], "function", ["None"], []], "home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.ssim": [[70, 79], ["img1.size", "__init__.create_window", "window.cuda.type_as", "__init__._ssim", "window.cuda.cuda", "img1.get_device"], "function", ["home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__.create_window", "home.repos.pwc.inspect_result.6272code_6272-code.pytorch_ssim.__init__._ssim", "home.repos.pwc.inspect_result.6272code_6272-code.pietorch.N_modules.GumbleSoftmax.cuda"], []]}