{"home.repos.pwc.inspect_result.hugorichard_shica.test.test_shica.test_shicaj": [[14, 18], ["shica.shica_j", "zip", "shica.exp_utils.amari_d"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.shica_j", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d"], ["def", "test_shicaj", "(", ")", ":", "\n", "    ", "W_pred", ",", "Sigmas", ",", "S", "=", "shica_j", "(", "X", ")", "\n", "for", "w_pred", ",", "a", "in", "zip", "(", "W_pred", ",", "A", ")", ":", "\n", "        ", "assert", "amari_d", "(", "w_pred", ",", "a", ")", "<", "0.1", "\n", "", "", ""]], "home.repos.pwc.inspect_result.hugorichard_shica.experiments.timesegment_matching_utils.time_segment_matching": [[16, 88], ["len", "numpy.zeros", "range", "numpy.zeros", "range", "range", "numpy.zeros", "range", "scipy.zscore", "scipy.zscore", "stats.zscore.T.dot", "range", "numpy.argmax", "range", "sum", "float", "range", "abs"], "function", ["None"], ["def", "time_segment_matching", "(", "\n", "data", ",", "win_size", "=", "10", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Performs time segment matching experiment\n    (code inspired from brainiak tutorials at\n    https://brainiak.org/events/ohbm2018/brainiak_sample_tutorials/10-func-align.html)\n\n    Parameters\n    ----------\n    data: array of shape (n_subjects, n_components, n_timeframes)\n        Input shared responses\n    Returns\n    -------\n    cv_score: np array of shape (n_subjects)\n        Per-subject accuracy\n    \"\"\"", "\n", "# Pull out shape information", "\n", "n_subjs", "=", "len", "(", "data", ")", "\n", "(", "n_features", ",", "n_TR", ")", "=", "data", "[", "0", "]", ".", "shape", "# Voxel/feature by timepoint", "\n", "\n", "# How many segments are there (account for edges)", "\n", "n_seg", "=", "n_TR", "-", "win_size", "\n", "\n", "# mysseg prediction prediction", "\n", "train_data", "=", "np", ".", "zeros", "(", "(", "n_features", "*", "win_size", ",", "n_seg", ")", ")", "\n", "\n", "# Concatenate the data across participants", "\n", "for", "ppt_counter", "in", "range", "(", "n_subjs", ")", ":", "\n", "        ", "for", "window_counter", "in", "range", "(", "win_size", ")", ":", "\n", "            ", "train_data", "[", "\n", "window_counter", "\n", "*", "n_features", ":", "(", "window_counter", "+", "1", ")", "\n", "*", "n_features", ",", "\n", ":", ",", "\n", "]", "+=", "data", "[", "ppt_counter", "]", "[", ":", ",", "window_counter", ":", "window_counter", "+", "n_seg", "]", "\n", "\n", "# Iterate through the participants, leaving one out", "\n", "", "", "accuracy", "=", "np", ".", "zeros", "(", "shape", "=", "n_subjs", ")", "\n", "for", "ppt_counter", "in", "range", "(", "n_subjs", ")", ":", "\n", "\n", "# Preset", "\n", "        ", "test_data", "=", "np", ".", "zeros", "(", "(", "n_features", "*", "win_size", ",", "n_seg", ")", ")", "\n", "\n", "for", "window_counter", "in", "range", "(", "win_size", ")", ":", "\n", "            ", "test_data", "[", "\n", "window_counter", "\n", "*", "n_features", ":", "(", "window_counter", "+", "1", ")", "\n", "*", "n_features", ",", "\n", ":", ",", "\n", "]", "=", "data", "[", "ppt_counter", "]", "[", ":", ",", "window_counter", ":", "(", "window_counter", "+", "n_seg", ")", "]", "\n", "\n", "# Take this participant data away", "\n", "", "train_ppts", "=", "stats", ".", "zscore", "(", "(", "train_data", "-", "test_data", ")", ",", "axis", "=", "0", ",", "ddof", "=", "1", ")", "\n", "test_ppts", "=", "stats", ".", "zscore", "(", "test_data", ",", "axis", "=", "0", ",", "ddof", "=", "1", ")", "\n", "\n", "# Correlate the two data sets", "\n", "corr_mtx", "=", "test_ppts", ".", "T", ".", "dot", "(", "train_ppts", ")", "\n", "\n", "# If any segments have a correlation difference less than the window size and they aren't the same segments then set the value to negative infinity", "\n", "for", "seg_1", "in", "range", "(", "n_seg", ")", ":", "\n", "            ", "for", "seg_2", "in", "range", "(", "n_seg", ")", ":", "\n", "                ", "if", "abs", "(", "seg_1", "-", "seg_2", ")", "<", "win_size", "and", "seg_1", "!=", "seg_2", ":", "\n", "                    ", "corr_mtx", "[", "seg_1", ",", "seg_2", "]", "=", "-", "np", ".", "inf", "\n", "\n", "# Find the segement with the max value", "\n", "", "", "", "rank", "=", "np", ".", "argmax", "(", "corr_mtx", ",", "axis", "=", "1", ")", "\n", "\n", "# Find the number of segments that were matched for this participant", "\n", "accuracy", "[", "ppt_counter", "]", "=", "sum", "(", "rank", "==", "range", "(", "n_seg", ")", ")", "/", "float", "(", "n_seg", ")", "\n", "\n", "", "return", "accuracy", "\n", "", ""]], "home.repos.pwc.inspect_result.hugorichard_shica.experiments.plot_utils.confidence_interval": [[17, 31], ["scipy.t.interval", "len", "numpy.mean", "scipy.sem"], "function", ["None"], ["def", "confidence_interval", "(", "a", ",", "conf", "=", "0.95", ")", ":", "\n", "    ", "\"\"\"\n    Return a confidence interval assuming normal distribution\n    Parameters\n    ----------\n    a: np array\n        input data\n    conf: float\n        level of confidence\n    Returns\n    -------\n        (low, high): low and high limit of the interval\n    \"\"\"", "\n", "return", "st", ".", "t", ".", "interval", "(", "0.95", ",", "len", "(", "a", ")", "-", "1", ",", "loc", "=", "np", ".", "mean", "(", "a", ")", ",", "scale", "=", "st", ".", "sem", "(", "a", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.hugorichard_shica.experiments.full_nongaussian.do_exp": [[12, 37], ["int", "numpy.random.RandomState", "np.random.RandomState.laplace", "numpy.ones", "numpy.array", "numpy.array", "numpy.array", "shica.shica_j", "shica.shica_j", "numpy.array", "shica.shica_ml", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "np.random.RandomState.randn", "np.random.RandomState.randn", "a.dot", "mvlearn.decomposition.GroupICA().fit", "shica.exp_utils.amari_d", "shica.exp_utils.amari_d", "shica.exp_utils.amari_d", "shica.exp_utils.amari_d", "p.reshape", "zip", "range", "zip", "range", "range", "range", "range", "mvlearn.decomposition.GroupICA"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.shica_j", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.shica_j", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.shica_ml", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d"], ["def", "do_exp", "(", "m", ",", "k", ",", "n", ",", "seed", ")", ":", "\n", "    ", "n", "=", "int", "(", "n", ")", "\n", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "S", "=", "rng", ".", "laplace", "(", "size", "=", "(", "k", ",", "n", ")", ")", "\n", "sigmas", "=", "1", "*", "rng", ".", "randn", "(", "m", ",", "k", ",", "n", ")", "\n", "powers", "=", "np", ".", "ones", "(", "(", "m", ",", "k", ")", ")", "\n", "sigmas", "=", "np", ".", "array", "(", "[", "p", ".", "reshape", "(", "-", "1", ",", "1", ")", "*", "e", "for", "p", ",", "e", "in", "zip", "(", "powers", ",", "sigmas", ")", "]", ")", "\n", "A", "=", "np", ".", "array", "(", "[", "rng", ".", "randn", "(", "k", ",", "k", ")", "for", "_", "in", "range", "(", "m", ")", "]", ")", "\n", "X", "=", "np", ".", "array", "(", "[", "a", ".", "dot", "(", "S", "+", "eps", ")", "for", "a", ",", "eps", "in", "zip", "(", "A", ",", "sigmas", ")", "]", ")", "\n", "# Shica J", "\n", "W", ",", "_", ",", "_", "=", "shica_j", "(", "X", ",", "use_scaling", "=", "False", ")", "\n", "# Multiset CCA", "\n", "W2", ",", "_", ",", "_", "=", "shica_j", "(", "X", ",", "use_jointdiag", "=", "False", ",", "use_scaling", "=", "False", ")", "\n", "# CanICA", "\n", "W3", "=", "np", ".", "array", "(", "\n", "GroupICA", "(", "prewhiten", "=", "True", ")", ".", "fit", "(", "[", "x", ".", "T", "for", "x", "in", "X", "]", ")", ".", "individual_components_", "\n", ")", "\n", "# ShICA ML", "\n", "W4", ",", "_", ",", "_", "=", "shica_ml", "(", "X", ",", "init", "=", "\"shica_j\"", ",", ")", "\n", "\n", "res", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "res2", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W2", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "res3", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W3", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "res4", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W4", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "return", "res", ",", "res2", ",", "res3", ",", "res4", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.experiments.rotation.do_exp": [[11, 36], ["int", "numpy.random.RandomState", "np.random.RandomState.randn", "np.random.RandomState.rand", "numpy.array", "numpy.array", "numpy.array", "shica.shica_j", "shica.shica_j", "numpy.array", "shica.shica_ml", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "np.random.RandomState.randn", "np.random.RandomState.randn", "a.dot", "mvlearn.decomposition.GroupICA().fit", "shica.exp_utils.amari_d", "shica.exp_utils.amari_d", "shica.exp_utils.amari_d", "shica.exp_utils.amari_d", "p.reshape", "zip", "range", "zip", "range", "range", "range", "range", "mvlearn.decomposition.GroupICA"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.shica_j", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.shica_j", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.shica_ml", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d"], ["def", "do_exp", "(", "m", ",", "k", ",", "n", ",", "seed", ")", ":", "\n", "    ", "n", "=", "int", "(", "n", ")", "\n", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "S", "=", "rng", ".", "randn", "(", "k", ",", "n", ")", "\n", "sigmas", "=", "1", "*", "rng", ".", "randn", "(", "m", ",", "k", ",", "n", ")", "\n", "powers", "=", "rng", ".", "rand", "(", "m", ",", "k", ")", "\n", "sigmas", "=", "np", ".", "array", "(", "[", "p", ".", "reshape", "(", "-", "1", ",", "1", ")", "*", "e", "for", "p", ",", "e", "in", "zip", "(", "powers", ",", "sigmas", ")", "]", ")", "\n", "A", "=", "np", ".", "array", "(", "[", "rng", ".", "randn", "(", "k", ",", "k", ")", "for", "_", "in", "range", "(", "m", ")", "]", ")", "\n", "X", "=", "np", ".", "array", "(", "[", "a", ".", "dot", "(", "S", "+", "eps", ")", "for", "a", ",", "eps", "in", "zip", "(", "A", ",", "sigmas", ")", "]", ")", "\n", "# Shica J", "\n", "W", ",", "_", ",", "_", "=", "shica_j", "(", "X", ",", "use_scaling", "=", "False", ")", "\n", "# Multiset CCA", "\n", "W2", ",", "_", ",", "_", "=", "shica_j", "(", "X", ",", "use_jointdiag", "=", "False", ",", "use_scaling", "=", "False", ")", "\n", "# CanICA", "\n", "W3", "=", "np", ".", "array", "(", "\n", "GroupICA", "(", "prewhiten", "=", "True", ")", ".", "fit", "(", "[", "x", ".", "T", "for", "x", "in", "X", "]", ")", ".", "individual_components_", "\n", ")", "\n", "# ShICA ML", "\n", "W4", ",", "_", ",", "_", "=", "shica_ml", "(", "X", ",", "init", "=", "\"shica_j\"", ",", ")", "\n", "\n", "res", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "res2", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W2", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "res3", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W3", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "res4", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W4", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "return", "res", ",", "res2", ",", "res3", ",", "res4", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.experiments.semigaussian.do_exp": [[11, 39], ["int", "numpy.random.RandomState", "numpy.zeros", "np.random.RandomState.laplace", "np.random.RandomState.randn", "np.random.RandomState.rand", "numpy.ones", "numpy.array", "numpy.array", "numpy.array", "shica.shica_j", "shica.shica_j", "numpy.array", "shica.shica_ml", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "int", "np.random.RandomState.randn", "int", "int", "int", "np.random.RandomState.randn", "a.dot", "mvlearn.decomposition.GroupICA().fit", "shica.exp_utils.amari_d", "shica.exp_utils.amari_d", "shica.exp_utils.amari_d", "shica.exp_utils.amari_d", "int", "int", "p.reshape", "zip", "range", "zip", "range", "range", "range", "range", "mvlearn.decomposition.GroupICA"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.shica_j", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.shica_j", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.shica_ml", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d", "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d"], ["def", "do_exp", "(", "m", ",", "k", ",", "n", ",", "seed", ")", ":", "\n", "    ", "n", "=", "int", "(", "n", ")", "\n", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "S", "=", "np", ".", "zeros", "(", "(", "k", ",", "n", ")", ")", "\n", "S", "[", ":", "int", "(", "k", "/", "2", ")", "]", "=", "rng", ".", "laplace", "(", "size", "=", "(", "int", "(", "k", "/", "2", ")", ",", "n", ")", ")", "\n", "S", "[", "int", "(", "k", "/", "2", ")", ":", "]", "=", "rng", ".", "randn", "(", "int", "(", "k", "/", "2", ")", ",", "n", ")", "\n", "sigmas", "=", "1", "*", "rng", ".", "randn", "(", "m", ",", "k", ",", "n", ")", "\n", "powers", "=", "rng", ".", "rand", "(", "m", ",", "k", ")", "\n", "powers", "[", ":", ",", ":", "int", "(", "k", "/", "2", ")", "]", "=", "np", ".", "ones", "(", "(", "m", ",", "int", "(", "k", "/", "2", ")", ")", ")", "\n", "sigmas", "=", "np", ".", "array", "(", "[", "p", ".", "reshape", "(", "-", "1", ",", "1", ")", "*", "e", "for", "p", ",", "e", "in", "zip", "(", "powers", ",", "sigmas", ")", "]", ")", "\n", "A", "=", "np", ".", "array", "(", "[", "rng", ".", "randn", "(", "k", ",", "k", ")", "for", "_", "in", "range", "(", "m", ")", "]", ")", "\n", "X", "=", "np", ".", "array", "(", "[", "a", ".", "dot", "(", "S", "+", "eps", ")", "for", "a", ",", "eps", "in", "zip", "(", "A", ",", "sigmas", ")", "]", ")", "\n", "# Shica J", "\n", "W", ",", "_", ",", "_", "=", "shica_j", "(", "X", ",", "use_scaling", "=", "False", ")", "\n", "# Multiset CCA", "\n", "W2", ",", "_", ",", "_", "=", "shica_j", "(", "X", ",", "use_jointdiag", "=", "False", ",", "use_scaling", "=", "False", ")", "\n", "# CanICA", "\n", "W3", "=", "np", ".", "array", "(", "\n", "GroupICA", "(", "prewhiten", "=", "True", ")", ".", "fit", "(", "[", "x", ".", "T", "for", "x", "in", "X", "]", ")", ".", "individual_components_", "\n", ")", "\n", "# ShICA ML", "\n", "W4", ",", "_", ",", "_", "=", "shica_ml", "(", "X", ",", "init", "=", "\"shica_j\"", ",", ")", "\n", "\n", "res", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "res2", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W2", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "res3", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W3", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "res4", "=", "np", ".", "mean", "(", "[", "amari_d", "(", "W4", "[", "i", "]", ",", "A", "[", "i", "]", ")", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "return", "res", ",", "res2", ",", "res3", ",", "res4", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.experiments.fmri_utils.load_and_concat": [[16, 35], ["range", "numpy.array", "numpy.concatenate", "concat.append", "numpy.load", "range"], "function", ["None"], ["def", "load_and_concat", "(", "paths", ")", ":", "\n", "    ", "\"\"\"\n    Load data and concatenate temporally\n    Parameters\n    ----------\n    paths: np array of shape (n_subjects, n_runs)\n        paths to data arrays\n    Returns\n    -------\n    concat: np array of shape (n_subjects, n_voxels, n_timeframes)\n    \"\"\"", "\n", "n_subjects", ",", "n_runs", "=", "paths", ".", "shape", "\n", "concat", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_subjects", ")", ":", "\n", "        ", "X_i", "=", "np", ".", "concatenate", "(", "\n", "[", "np", ".", "load", "(", "paths", "[", "i", ",", "j", "]", ")", "for", "j", "in", "range", "(", "n_runs", ")", "]", ",", "axis", "=", "1", "\n", ")", "\n", "concat", ".", "append", "(", "X_i", ")", "\n", "", "return", "np", ".", "array", "(", "concat", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.plugin_noise": [[8, 15], ["len", "numpy.mean", "numpy.sum", "numpy.sum"], "function", ["None"], ["def", "plugin_noise", "(", "Xs", ")", ":", "\n", "    ", "m", "=", "len", "(", "Xs", ")", "\n", "return", "(", "\n", "1", "\n", "/", "(", "m", "-", "1", ")", "\n", "*", "np", ".", "mean", "(", "\n", "np", ".", "sum", "(", "Xs", "**", "2", ",", "axis", "=", "0", ")", "-", "1", "/", "m", "*", "np", ".", "sum", "(", "Xs", ",", "axis", "=", "0", ")", "**", "2", ",", "axis", "=", "1", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.f_gauss": [[19, 23], ["numpy.sum", "shicaml.fi_gauss", "zip"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.fi_gauss"], ["", "def", "f_gauss", "(", "Y", ",", "sigmas", ",", "n_subjects", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "\n", "[", "fi_gauss", "(", "Yk", ",", "sigma", ",", "n_subjects", ")", "for", "Yk", ",", "sigma", "in", "zip", "(", "Y", ",", "sigmas", ")", "]", ",", "\n", "axis", "=", "0", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.fi_gauss": [[26, 29], ["shica.loss.loggauss", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.loggauss"], ["", "def", "fi_gauss", "(", "Y", ",", "sigma", ",", "n_subjects", ")", ":", "\n", "    ", "res", "=", "-", "loggauss", "(", "Y", ",", "np", ".", "sqrt", "(", "sigma", "**", "2", "/", "n_subjects", "+", "1", ")", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.loss_total_gauss": [[31, 65], ["numpy.sum", "numpy.mean", "range", "enumerate", "numpy.testing.assert_array_almost_equal", "shicaml.f_gauss", "zip", "range", "numpy.sum", "numpy.ones", "numpy.log", "numpy.linalg.slogdet", "zip", "numpy.log", "li.reshape", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.f_gauss"], ["", "def", "loss_total_gauss", "(", "basis_list", ",", "Y_list", ",", "l", ",", "sigmas", ",", "check_l", "=", "True", ")", ":", "\n", "    ", "m", ",", "p", ",", "p3", "=", "basis_list", ".", "shape", "\n", "m2", ",", "p2", ",", "_", "=", "Y_list", ".", "shape", "\n", "m3", ",", "p4", "=", "l", ".", "shape", "\n", "(", "p5", ",", ")", "=", "sigmas", ".", "shape", "\n", "assert", "m", "==", "m2", "\n", "assert", "m", "==", "m3", "\n", "assert", "p", "==", "p2", "\n", "assert", "p", "==", "p3", "\n", "assert", "p", "==", "p4", "\n", "assert", "p", "==", "p5", "\n", "if", "check_l", ":", "\n", "        ", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "\n", "np", ".", "sum", "(", "l", "**", "2", ",", "axis", "=", "0", ")", ",", "np", ".", "ones", "(", "p", ")", "\n", ")", "\n", "\n", "", "Y_avg", "=", "np", ".", "sum", "(", "\n", "[", "(", "li", ".", "reshape", "(", "-", "1", ",", "1", ")", "**", "2", ")", "*", "y", "for", "li", ",", "y", "in", "zip", "(", "l", ",", "Y_list", ")", "]", ",", "axis", "=", "0", ",", "\n", ")", "\n", "loss", "=", "np", ".", "mean", "(", "f_gauss", "(", "Y_avg", ",", "sigmas", ",", "m", ")", ")", "\n", "for", "j", "in", "range", "(", "p", ")", ":", "\n", "        ", "loss", "+=", "(", "m", "-", "1", ")", "/", "2", "*", "np", ".", "log", "(", "sigmas", "[", "j", "]", "**", "2", ")", "\n", "", "for", "i", ",", "(", "W", ",", "Y", ")", "in", "enumerate", "(", "zip", "(", "basis_list", ",", "Y_list", ")", ")", ":", "\n", "        ", "loss", "-=", "np", ".", "linalg", ".", "slogdet", "(", "W", ")", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "p", ")", ":", "\n", "            ", "loss", "-=", "1", "/", "2", "*", "np", ".", "log", "(", "l", "[", "i", "]", "[", "j", "]", "**", "2", ")", "\n", "loss", "+=", "(", "\n", "1", "\n", "/", "(", "2", "*", "sigmas", "[", "j", "]", "**", "2", ")", "\n", "*", "np", ".", "mean", "(", "(", "Y", "[", "j", "]", "-", "Y_avg", "[", "j", "]", ")", "**", "2", ")", "\n", "*", "m", "\n", "*", "(", "l", "[", "i", "]", "[", "j", "]", "**", "2", ")", "\n", ")", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.mmse": [[67, 80], ["range", "numpy.array", "S.append", "scipy.stats.norm", "stats.norm.pdf", "numpy.sqrt", "stats.norm.pdf"], "function", ["None"], ["", "def", "mmse", "(", "source", ",", "noise", ",", "a", ",", "b", ",", "m", ")", ":", "\n", "    ", "n_components", "=", "source", ".", "shape", "[", "0", "]", "\n", "S", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "n_components", ")", ":", "\n", "        ", "num", "=", "0", "\n", "denum", "=", "0", "\n", "for", "n", "in", "[", "a", ",", "b", "]", ":", "\n", "            ", "norm", "=", "stats", ".", "norm", "(", "0", ",", "np", ".", "sqrt", "(", "n", "+", "noise", "[", "j", "]", "**", "2", "/", "m", ")", ")", "\n", "denum", "+=", "norm", ".", "pdf", "(", "source", "[", "j", "]", ")", "\n", "coef", "=", "n", "*", "source", "[", "j", "]", "/", "(", "n", "+", "noise", "[", "j", "]", "**", "2", "/", "m", ")", "\n", "num", "+=", "norm", ".", "pdf", "(", "source", "[", "j", "]", ")", "*", "coef", "\n", "", "S", ".", "append", "(", "num", "/", "denum", ")", "\n", "", "return", "np", ".", "array", "(", "S", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.mmse_gauss": [[82, 88], ["range", "numpy.array", "S.append"], "function", ["None"], ["", "def", "mmse_gauss", "(", "source", ",", "noise", ",", "m", ")", ":", "\n", "    ", "n_components", "=", "source", ".", "shape", "[", "0", "]", "\n", "S", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "n_components", ")", ":", "\n", "        ", "S", ".", "append", "(", "m", "*", "source", "[", "j", "]", "/", "(", "m", "+", "noise", "[", "j", "]", "**", "2", ")", ")", "\n", "", "return", "np", ".", "array", "(", "S", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.var_s": [[90, 103], ["range", "numpy.array", "S.append", "scipy.stats.norm", "stats.norm.pdf", "numpy.sqrt", "stats.norm.pdf"], "function", ["None"], ["", "def", "var_s", "(", "source", ",", "noise", ",", "a", ",", "b", ",", "m", ")", ":", "\n", "    ", "n_components", "=", "source", ".", "shape", "[", "0", "]", "\n", "S", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "n_components", ")", ":", "\n", "        ", "num", "=", "0", "\n", "denum", "=", "0", "\n", "for", "n", "in", "[", "a", ",", "b", "]", ":", "\n", "            ", "norm", "=", "stats", ".", "norm", "(", "0", ",", "np", ".", "sqrt", "(", "n", "+", "noise", "[", "j", "]", "**", "2", "/", "m", ")", ")", "\n", "denum", "+=", "norm", ".", "pdf", "(", "source", "[", "j", "]", ")", "\n", "coef", "=", "n", "*", "noise", "[", "j", "]", "**", "2", "/", "m", "/", "(", "n", "+", "noise", "[", "j", "]", "**", "2", "/", "m", ")", "\n", "num", "+=", "norm", ".", "pdf", "(", "source", "[", "j", "]", ")", "*", "coef", "\n", "", "S", ".", "append", "(", "num", "/", "denum", ")", "\n", "", "return", "np", ".", "array", "(", "S", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.var_s_gauss": [[105, 111], ["range", "numpy.array", "S.append", "numpy.ones"], "function", ["None"], ["", "def", "var_s_gauss", "(", "source", ",", "noise", ",", "m", ")", ":", "\n", "    ", "n_components", ",", "n_timeframes", "=", "source", ".", "shape", "\n", "S", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "n_components", ")", ":", "\n", "        ", "S", ".", "append", "(", "noise", "[", "j", "]", "**", "2", "/", "(", "m", "+", "noise", "[", "j", "]", "**", "2", ")", "*", "np", ".", "ones", "(", "n_timeframes", ")", ")", "\n", "", "return", "np", ".", "array", "(", "S", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.Sigma_to_sigma_lambda": [[113, 135], ["numpy.sqrt", "numpy.sqrt", "numpy.sum", "print"], "function", ["None"], ["", "def", "Sigma_to_sigma_lambda", "(", "Sigma", ",", "eps2", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    Parameters\n    ----------\n    Sigma: shape (m, k)\n\n    Returns\n    -------\n    sigma: shape (k)\n    l_list: shape (m, k)\n        l-parameter ready for gradient computation\n    \"\"\"", "\n", "m", ",", "k", "=", "Sigma", ".", "shape", "\n", "sigma", "=", "m", "/", "np", ".", "sum", "(", "1", "/", "Sigma", ",", "axis", "=", "0", ")", "\n", "l_list", "=", "sigma", "/", "(", "Sigma", "*", "m", ")", "\n", "sigma", "=", "np", ".", "sqrt", "(", "sigma", ")", "\n", "l_list", "=", "l_list", "-", "eps2", "\n", "if", "not", "(", "l_list", ">", "0", ")", ".", "all", "(", ")", ":", "\n", "        ", "print", "(", "l_list", ")", "\n", "", "assert", "(", "l_list", ">", "0", ")", ".", "all", "(", ")", "\n", "l_list", "=", "np", ".", "sqrt", "(", "l_list", ")", "\n", "return", "sigma", ",", "l_list", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.sigma_lambda_to_Sigma": [[137, 151], ["len"], "function", ["None"], ["", "def", "sigma_lambda_to_Sigma", "(", "sigma", ",", "l", ",", "eps2", "=", "0", ")", ":", "\n", "    ", "\"\"\"\n    Parameters\n    ----------\n    Sigma: shape (m, k)\n\n    Returns\n    -------\n    sigma: shape (m, k)\n    l: shape (m, k)\n        l-parameter ready for gradient computation\n    \"\"\"", "\n", "m", "=", "len", "(", "l", ")", "\n", "return", "sigma", "**", "2", "/", "(", "m", "*", "(", "l", "**", "2", "+", "eps2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.update_Sigmai": [[153, 158], ["numpy.mean", "numpy.mean"], "function", ["None"], ["", "def", "update_Sigmai", "(", "Yi", ",", "Es", ",", "Vars", ")", ":", "\n", "    ", "\"\"\"\n    Return new Sigma_i: shape k\n    \"\"\"", "\n", "return", "np", ".", "mean", "(", "(", "Yi", "-", "Es", ")", "**", "2", ",", "axis", "=", "1", ")", "+", "np", ".", "mean", "(", "Vars", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.loss_Wi": [[160, 167], ["numpy.linalg.slogdet", "numpy.sum", "numpy.sum", "numpy.log", "Sigmai.reshape"], "function", ["None"], ["", "def", "loss_Wi", "(", "Wi", ",", "Xi", ",", "Yi", ",", "Sigmai", ",", "Es", ",", "Vars", ")", ":", "\n", "    ", "k", ",", "n", "=", "Yi", ".", "shape", "\n", "loss", "=", "0", "\n", "loss", "-=", "np", ".", "linalg", ".", "slogdet", "(", "Wi", ")", "[", "1", "]", "\n", "loss", "+=", "0.5", "*", "(", "np", ".", "sum", "(", "(", "(", "Yi", "-", "Es", ")", "**", "2", "+", "Vars", ")", "/", "Sigmai", ".", "reshape", "(", "-", "1", ",", "1", ")", ")", ")", "/", "n", "\n", "loss", "+=", "0.5", "*", "np", ".", "sum", "(", "np", ".", "log", "(", "Sigmai", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.grad_Wi": [[169, 174], ["numpy.eye", "Sigmai.reshape"], "function", ["None"], ["", "def", "grad_Wi", "(", "Xi", ",", "Yi", ",", "Sigmai", ",", "Es", ")", ":", "\n", "    ", "k", ",", "n", "=", "Xi", ".", "shape", "\n", "grad", "=", "-", "np", ".", "eye", "(", "k", ")", "\n", "grad", "+=", "1", "/", "Sigmai", ".", "reshape", "(", "-", "1", ",", "1", ")", "*", "(", "(", "Yi", "-", "Es", ")", ".", "dot", "(", "Yi", ".", "T", ")", ")", "/", "n", "\n", "return", "grad", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.hess_Wi": [[176, 181], ["sigmas2.reshape", "numpy.dot", "numpy.ones_like"], "function", ["None"], ["", "def", "hess_Wi", "(", "Xi", ",", "Yi", ",", "Sigmai", ",", "Es", ")", ":", "\n", "    ", "p", ",", "n", "=", "Yi", ".", "shape", "\n", "sigmas2", "=", "Sigmai", "\n", "return", "(", "\n", "np", ".", "dot", "(", "np", ".", "ones_like", "(", "Yi", ")", ",", "(", "Yi", "**", "2", ")", ".", "T", ",", ")", "*", "1", "/", "sigmas2", ".", "reshape", "(", "-", "1", ",", "1", ")", "/", "n", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.update_Wi": [[184, 230], ["shicaml.loss_Wi", "shicaml.grad_Wi", "shicaml.hess_Wi", "numpy.sqrt", "numpy.fill_diagonal", "numpy.where", "range", "range", "numpy.zeros_like", "new_Wi.dot", "shicaml.loss_Wi", "new_Wi.dot", "shicaml.loss_Wi", "direction.dot", "grad_Wi.dot"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.loss_Wi", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.grad_Wi", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.hess_Wi", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.loss_Wi", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.loss_Wi"], ["", "def", "update_Wi", "(", "\n", "Wi", ",", "\n", "Xi", ",", "\n", "Yi", ",", "\n", "Sigmai", ",", "\n", "Es", ",", "\n", "Vars", ",", "\n", "lambda_min", "=", "1e-4", ",", "\n", "n_ls_tries", "=", "20", ",", "\n", "it", "=", "0", ",", "\n", "info", "=", "None", ",", "\n", ")", ":", "\n", "    ", "loss0", "=", "loss_Wi", "(", "Wi", ",", "Xi", ",", "Yi", ",", "Sigmai", ",", "Es", ",", "Vars", ")", "\n", "G", "=", "grad_Wi", "(", "Xi", ",", "Yi", ",", "Sigmai", ",", "Es", ")", "\n", "h", "=", "hess_Wi", "(", "Xi", ",", "Yi", ",", "Sigmai", ",", "Es", ")", "\n", "\n", "discr", "=", "np", ".", "sqrt", "(", "(", "h", "-", "h", ".", "T", ")", "**", "2", "+", "4.0", ")", "\n", "eigenvalues", "=", "0.5", "*", "(", "h", "+", "h", ".", "T", "-", "discr", ")", "\n", "problematic_locs", "=", "eigenvalues", "<", "lambda_min", "\n", "np", ".", "fill_diagonal", "(", "problematic_locs", ",", "False", ")", "\n", "i_pb", ",", "j_pb", "=", "np", ".", "where", "(", "problematic_locs", ")", "\n", "h", "[", "i_pb", ",", "j_pb", "]", "+=", "lambda_min", "-", "eigenvalues", "[", "i_pb", ",", "j_pb", "]", "\n", "# Compute Newton's direction", "\n", "det", "=", "h", "*", "h", ".", "T", "-", "1", "\n", "direction", "=", "(", "h", ".", "T", "*", "G", "-", "G", ".", "T", ")", "/", "det", "\n", "# Line search", "\n", "step", "=", "1", "\n", "for", "j", "in", "range", "(", "n_ls_tries", ")", ":", "\n", "        ", "new_Wi", "=", "Wi", "-", "step", "*", "direction", ".", "dot", "(", "Wi", ")", "\n", "new_Yi", "=", "new_Wi", ".", "dot", "(", "Xi", ")", "\n", "new_loss", "=", "loss_Wi", "(", "new_Wi", ",", "Xi", ",", "new_Yi", ",", "Sigmai", ",", "Es", ",", "Vars", ")", "\n", "if", "new_loss", "<", "loss0", ":", "\n", "            ", "return", "new_Wi", "\n", "", "else", ":", "\n", "            ", "step", "/=", "2.0", "\n", "\n", "", "", "step", "=", "1", "\n", "for", "_", "in", "range", "(", "n_ls_tries", ")", ":", "\n", "        ", "new_Wi", "=", "Wi", "-", "step", "*", "G", ".", "dot", "(", "Wi", ")", "\n", "new_Yi", "=", "new_Wi", ".", "dot", "(", "Xi", ")", "\n", "new_loss", "=", "loss_Wi", "(", "new_Wi", ",", "Xi", ",", "new_Yi", ",", "Sigmai", ",", "Es", ",", "Vars", ")", "\n", "if", "new_loss", "<", "loss0", ":", "\n", "            ", "return", "new_Wi", "\n", "", "else", ":", "\n", "            ", "step", "/=", "2.0", "\n", "", "", "return", "np", ".", "zeros_like", "(", "Wi", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.shica_ml": [[232, 369], ["shicaml.Sigma_to_sigma_lambda", "numpy.array", "numpy.array", "numpy.sum", "range", "numpy.sum", "shicaml.sigma_lambda_to_Sigma", "numpy.array", "W_init.copy", "numpy.random.randn", "shica.shica_j", "shicaml.mmse", "shicaml.var_s", "shicaml.sigma_lambda_to_Sigma", "shica.loss.loss_total", "range", "shicaml.Sigma_to_sigma_lambda", "shica.loss.loss_total", "numpy.abs", "numpy.sum", "W.dot", "shicaml.update_Sigmai", "shicaml.update_Wi", "update_Wi.dot", "warnings.warn", "numpy.abs", "print", "numpy.eye", "zip", "w.dot", "zip", "w.dot", "zip", "range", "l.reshape", "w.dot", "zip", "l.reshape", "l.reshape"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.Sigma_to_sigma_lambda", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.sigma_lambda_to_Sigma", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.shica_j", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.mmse", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.var_s", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.sigma_lambda_to_Sigma", "home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.loss_total", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.Sigma_to_sigma_lambda", "home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.loss_total", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.update_Sigmai", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaml.update_Wi"], ["", "def", "shica_ml", "(", "\n", "X_list", ",", "\n", "max_iter", "=", "1000", ",", "\n", "init", "=", "\"shica_j\"", ",", "\n", "W_init", "=", "None", ",", "\n", "Sigmas_init", "=", "None", ",", "\n", "tol", "=", "1e-5", ",", "\n", "verbose", "=", "False", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n    Parameters\n    ----------\n    X_list : ndarray of shape (m, k, n)\n        input data\n\n    max_iter: int\n        Maximum number of iterations to perform\n\n    init: None or \"shica_j\"\n        If \"shica_j\" uses shica_j to initialize\n        unmixing matrices and noise covariance matrices.\n        Parameters `W_init` and `Sigmas_init` are ignored.\n        If `None` parameters `W_init` and `Sigmas_init` are used\n        to initialize unmixing matrices and noise covariance matrices\n\n    W_init : ndarray of shape (m, k, k)\n        Initial unmixing matrices\n\n    Sigmas_init : ndarray of shape (m, k)\n        Initial noise covariances\n\n    tol: float\n        Tolerance. The algorithm stops when the loss\n        decrease is below this value.\n\n    verbose : bool\n        If True, prints information about convergence\n\n    Returns\n    -------\n    W_list : ndarray of shape (m, k, k)\n        Unmixing matrices\n\n    Sigmas: ndarray of shape (k,)\n        Noise covariances\n\n    Y_avg: ndarray of shape (k, n)\n        Source estimates\n    \"\"\"", "\n", "m", ",", "k", ",", "n", "=", "X_list", ".", "shape", "\n", "if", "Sigmas_init", "is", "None", "and", "init", "is", "None", ":", "\n", "        ", "Sigmas", "=", "np", ".", "array", "(", "[", "np", ".", "eye", "(", "k", ")", "for", "_", "in", "range", "(", "m", ")", "]", ")", "\n", "", "else", ":", "\n", "        ", "Sigmas", "=", "Sigmas_init", "\n", "\n", "", "if", "W_init", "is", "not", "None", "and", "init", "is", "None", ":", "\n", "        ", "W_list", "=", "W_init", ".", "copy", "(", ")", "\n", "", "else", ":", "\n", "        ", "W_list", "=", "np", ".", "random", ".", "randn", "(", "m", ",", "k", ",", "k", ")", "\n", "\n", "", "if", "init", "==", "\"shica_j\"", ":", "\n", "        ", "W_list", ",", "Sigmas", ",", "_", "=", "shica_j", "(", "X_list", ")", "\n", "\n", "", "sigmas", ",", "l_list", "=", "Sigma_to_sigma_lambda", "(", "Sigmas", ")", "\n", "l_list", "=", "np", ".", "array", "(", "l_list", ")", "\n", "\n", "Y_list", "=", "np", ".", "array", "(", "[", "W", ".", "dot", "(", "X", ")", "for", "W", ",", "X", "in", "zip", "(", "W_list", ",", "X_list", ")", "]", ")", "\n", "Y_avg", "=", "np", ".", "sum", "(", "\n", "[", "\n", "(", "l", ".", "reshape", "(", "-", "1", ",", "1", ")", "**", "2", ")", "*", "w", ".", "dot", "(", "x", ")", "\n", "for", "w", ",", "l", ",", "x", "in", "zip", "(", "W_list", ",", "l_list", ",", "X_list", ")", "\n", "]", ",", "\n", "axis", "=", "0", ",", "\n", ")", "\n", "loss_prec", "=", "0", "\n", "dl", "=", "0", "\n", "for", "it", "in", "range", "(", "1", ",", "max_iter", "+", "1", ")", ":", "\n", "# E_step", "\n", "        ", "Es", "=", "mmse", "(", "Y_avg", ",", "sigmas", ",", "0.5", ",", "1.5", ",", "m", ")", "\n", "Vars", "=", "var_s", "(", "Y_avg", ",", "sigmas", ",", "0.5", ",", "1.5", ",", "m", ")", "\n", "Sigma", "=", "sigma_lambda_to_Sigma", "(", "sigmas", ",", "l_list", ")", "\n", "loss0", "=", "loss_total", "(", "W_list", ",", "Y_list", ",", "l_list", ",", "sigmas", ",", "0.5", ",", "1.5", ",", "0", ")", "\n", "\n", "# M_step", "\n", "convergence", "=", "False", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "            ", "Sigma_i", "=", "update_Sigmai", "(", "Y_list", "[", "i", "]", ",", "Es", ",", "Vars", ")", "\n", "Wi", "=", "update_Wi", "(", "\n", "W_list", "[", "i", "]", ",", "\n", "X_list", "[", "i", "]", ",", "\n", "Y_list", "[", "i", "]", ",", "\n", "Sigma_i", ",", "\n", "Es", ",", "\n", "Vars", ",", "\n", "it", "=", "it", ",", "\n", "info", "=", "dl", ",", "\n", ")", "\n", "if", "(", "Wi", "==", "0", ")", ".", "all", "(", ")", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "convergence", "=", "True", "\n", "", "Y_list", "[", "i", "]", "=", "Wi", ".", "dot", "(", "X_list", "[", "i", "]", ")", "\n", "W_list", "[", "i", "]", "=", "Wi", "\n", "Sigma", "[", "i", "]", "=", "Sigma_i", "\n", "assert", "(", "Sigma_i", ">", "0", ")", ".", "all", "(", ")", "\n", "", "if", "not", "convergence", ":", "\n", "            ", "warnings", ".", "warn", "(", "\n", "\"AVICA EM did not converge. Loss decrease is %.20e\"", "%", "dl", "\n", ")", "\n", "break", "\n", "\n", "", "sigmas", ",", "l_list", "=", "Sigma_to_sigma_lambda", "(", "Sigma", ")", "\n", "loss0", "=", "loss_total", "(", "W_list", ",", "Y_list", ",", "l_list", ",", "sigmas", ",", "0.5", ",", "1.5", ",", "0", ")", "\n", "dl", "=", "np", ".", "abs", "(", "loss_prec", "-", "loss0", ")", "\n", "if", "np", ".", "abs", "(", "loss_prec", "-", "loss0", ")", "<", "tol", ":", "\n", "            ", "break", "\n", "", "if", "verbose", ":", "\n", "            ", "print", "(", "\n", "\"it %i loss %.4f diff %.10f\"", "%", "(", "it", ",", "loss0", ",", "loss_prec", "-", "loss0", ")", "\n", ")", "\n", "", "loss_prec", "=", "loss0", "\n", "Y_avg", "=", "np", ".", "sum", "(", "\n", "[", "\n", "(", "l", ".", "reshape", "(", "-", "1", ",", "1", ")", "**", "2", ")", "*", "w", ".", "dot", "(", "x", ")", "\n", "for", "w", ",", "l", ",", "x", "in", "zip", "(", "W_list", ",", "l_list", ",", "X_list", ")", "\n", "]", ",", "\n", "axis", "=", "0", ",", "\n", ")", "\n", "", "Y_avg", "=", "np", ".", "sum", "(", "\n", "[", "\n", "(", "l", ".", "reshape", "(", "-", "1", ",", "1", ")", "**", "2", ")", "*", "w", ".", "dot", "(", "x", ")", "\n", "for", "w", ",", "l", ",", "x", "in", "zip", "(", "W_list", ",", "l_list", ",", "X_list", ")", "\n", "]", ",", "\n", "axis", "=", "0", ",", "\n", ")", "\n", "Sigmas", "=", "sigma_lambda_to_Sigma", "(", "sigmas", ",", "l_list", ")", "\n", "return", "W_list", ",", "Sigmas", ",", "Y_avg", "\n", "", ""]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.exp_utils.amari_d": [[4, 11], ["numpy.dot", "numpy.sum", "exp_utils.amari_d.s"], "function", ["None"], ["def", "amari_d", "(", "W", ",", "A", ")", ":", "\n", "    ", "P", "=", "np", ".", "dot", "(", "W", ",", "A", ")", "\n", "\n", "def", "s", "(", "r", ")", ":", "\n", "        ", "return", "np", ".", "sum", "(", "np", ".", "sum", "(", "r", "**", "2", ",", "axis", "=", "1", ")", "/", "np", ".", "max", "(", "r", "**", "2", ",", "axis", "=", "1", ")", "-", "1", ")", "\n", "\n", "", "return", "(", "s", "(", "np", ".", "abs", "(", "P", ")", ")", "+", "s", "(", "np", ".", "abs", "(", "P", ".", "T", ")", ")", ")", "/", "(", "2", "*", "P", ".", "shape", "[", "0", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.update_Sigmai": [[6, 23], ["len", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "range", "range"], "function", ["None"], ["def", "update_Sigmai", "(", "covY", ",", "Sigmas", ",", "k", ")", ":", "\n", "    ", "m", "=", "len", "(", "covY", ")", "\n", "V", "=", "1", "/", "(", "1", "+", "np", ".", "sum", "(", "1", "/", "Sigmas", ",", "axis", "=", "0", ")", ")", "\n", "return", "(", "\n", "covY", "[", "k", ",", "k", "]", "\n", "-", "2", "\n", "*", "V", "\n", "*", "np", ".", "sum", "(", "[", "1", "/", "Sigmas", "[", "i", "]", "*", "covY", "[", "i", ",", "k", "]", "for", "i", "in", "range", "(", "m", ")", "]", ",", "axis", "=", "0", ")", "\n", "+", "V", "**", "2", "\n", "*", "np", ".", "sum", "(", "\n", "[", "\n", "1", "/", "Sigmas", "[", "i", "]", "*", "np", ".", "sum", "(", "covY", "[", "i", ",", ":", "]", "*", "1", "/", "Sigmas", ",", "axis", "=", "0", ")", "\n", "for", "i", "in", "range", "(", "m", ")", "\n", "]", ",", "\n", "axis", "=", "0", ",", "\n", ")", "\n", "+", "V", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.minimize_i": [[26, 35], ["numpy.copy", "numpy.sum", "numpy.sum", "numpy.max", "numpy.abs", "range", "range"], "function", ["None"], ["", "def", "minimize_i", "(", "D", ",", "CY", ",", "i", ")", ":", "\n", "    ", "m", ",", "p", "=", "D", ".", "shape", "\n", "D_old", "=", "np", ".", "copy", "(", "D", "[", "i", "]", ")", "\n", "CD2C", "=", "np", ".", "sum", "(", "\n", "[", "CY", "[", "i", ",", "j", "]", "*", "D", "[", "j", "]", "**", "2", "*", "CY", "[", "j", ",", "i", "]", "for", "j", "in", "range", "(", "m", ")", "if", "j", "!=", "i", "]", ",", "axis", "=", "0", ",", "\n", ")", "\n", "DC", "=", "np", ".", "sum", "(", "[", "CY", "[", "i", ",", "j", "]", "*", "D", "[", "j", "]", "for", "j", "in", "range", "(", "m", ")", "if", "j", "!=", "i", "]", ",", "axis", "=", "0", ")", "\n", "Di", "=", "DC", "/", "CD2C", "\n", "return", "Di", ",", "np", ".", "max", "(", "np", ".", "abs", "(", "Di", "-", "D_old", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.loss": [[37, 46], ["range", "range", "numpy.sum", "numpy.ones"], "function", ["None"], ["", "def", "loss", "(", "D", ",", "CY", ")", ":", "\n", "    ", "m", ",", "k", "=", "D", ".", "shape", "\n", "current_loss", "=", "0", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "m", ")", ":", "\n", "            ", "if", "i", "==", "j", ":", "\n", "                ", "continue", "\n", "", "current_loss", "+=", "np", ".", "sum", "(", "(", "D", "[", "i", "]", "*", "CY", "[", "i", ",", "j", "]", "*", "D", "[", "j", "]", "-", "np", ".", "ones", "(", "k", ")", ")", "**", "2", ")", "\n", "", "", "return", "current_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.grad": [[48, 59], ["range", "numpy.array", "numpy.zeros_like", "range", "G.append", "numpy.ones"], "function", ["None"], ["", "def", "grad", "(", "D", ",", "CY", ")", ":", "\n", "    ", "m", ",", "k", "=", "D", ".", "shape", "\n", "G", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "        ", "Gij", "=", "np", ".", "zeros_like", "(", "D", "[", "i", "]", ")", "\n", "for", "j", "in", "range", "(", "m", ")", ":", "\n", "            ", "if", "i", "==", "j", ":", "\n", "                ", "continue", "\n", "", "Gij", "+=", "(", "D", "[", "i", "]", "*", "CY", "[", "i", ",", "j", "]", "*", "D", "[", "j", "]", "-", "np", ".", "ones", "(", "k", ")", ")", "*", "CY", "[", "i", ",", "j", "]", "*", "D", "[", "j", "]", "\n", "", "G", ".", "append", "(", "Gij", ")", "\n", "", "return", "np", ".", "array", "(", "G", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.global_min": [[61, 82], ["numpy.copy", "range", "range", "print", "shicaj.minimize_i", "numpy.max", "print", "numpy.max", "numpy.abs", "shicaj.loss", "numpy.max", "shicaj.grad", "numpy.abs", "shicaj.grad"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.minimize_i", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.loss", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.grad", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.grad"], ["", "def", "global_min", "(", "D_init", ",", "CY", ",", "n_iters", "=", "100", ",", "verbose", "=", "False", ",", "tol", "=", "1e-4", ")", ":", "\n", "    ", "D_list", "=", "np", ".", "copy", "(", "D_init", ")", "\n", "m", ",", "_", "=", "D_list", ".", "shape", "\n", "for", "i", "in", "range", "(", "n_iters", ")", ":", "\n", "        ", "norm", "=", "0", "\n", "for", "j", "in", "range", "(", "m", ")", ":", "\n", "            ", "D_list", "[", "j", "]", ",", "g_norm", "=", "minimize_i", "(", "D_list", ",", "CY", ",", "j", ")", "\n", "norm", "=", "np", ".", "max", "(", "(", "g_norm", ",", "norm", ")", ")", "\n", "", "if", "verbose", ":", "\n", "            ", "print", "(", "\n", "\"it % i, loss %.2e, gradient %.2e\"", "\n", "%", "(", "i", "+", "1", ",", "loss", "(", "D_list", ",", "CY", ")", ",", "np", ".", "max", "(", "np", ".", "abs", "(", "grad", "(", "D_list", ",", "CY", ")", ")", ")", ")", "\n", ")", "\n", "", "if", "norm", "<", "tol", ":", "\n", "            ", "break", "\n", "", "", "if", "norm", ">=", "tol", ":", "\n", "        ", "print", "(", "\n", "\"WARNING scaling optimization did not converge.\"", "\n", "\"Gradient norm is %.5f\"", "%", "np", ".", "max", "(", "np", ".", "abs", "(", "grad", "(", "D_list", ",", "CY", ")", ")", ")", "\n", ")", "\n", "", "return", "D_list", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.shica_j": [[84, 181], ["numpy.concatenate", "scipy.linalg.block_diag", "scipy.linalg.eigh", "numpy.array", "numpy.array", "numpy.transpose", "numpy.concatenate", "numpy.split", "range", "qndiag.qndiag", "numpy.array", "numpy.zeros", "range", "shicaj.global_min", "range", "numpy.ones", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.ones", "numpy.sum", "X_list.dot", "W_list[].dot", "W_list[].dot.dot", "Ds.append", "numpy.array", "slice", "range", "numpy.ones", "range", "numpy.copy", "range", "numpy.sum", "numpy.transpose", "B.dot", "range", "numpy.diag", "shicaj.update_Sigmai", "numpy.max", "w.dot", "w.dot", "range", "W_list[].dot().dot", "numpy.abs", "zip", "zip", "zip", "range", "W_list[].dot", "numpy.sum", "Sigmas[].reshape"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.global_min", "home.repos.pwc.inspect_result.hugorichard_shica.shica.shicaj.update_Sigmai"], ["", "def", "shica_j", "(", "\n", "X_list", ",", "\n", "max_iter", "=", "10000", ",", "\n", "tol", "=", "1e-5", ",", "\n", "use_jointdiag", "=", "True", ",", "\n", "use_scaling", "=", "True", ",", "\n", "verbose", "=", "False", ",", "\n", ")", ":", "\n", "    ", "\"\"\"\n\n    Parameters\n    ----------\n    X_list : ndarray of shape (m, k, n)\n        input data\n\n    max_iter: int\n        Maximum number of iterations to perform\n\n    tol: float\n        Tolerance. The algorithm stops when the loss\n        decrease is below this value.\n\n    verbose : bool\n        If True, prints information about convergence\n\n    Returns\n    -------\n    W_list : ndarray of shape (m, k, k)\n        Unmixing matrices\n\n    Sigmas: ndarray of shape (k,)\n        Noise covariances\n\n    Y_avg: ndarray of shape (k, n)\n        Source estimates\n    \"\"\"", "\n", "m", ",", "k", ",", "n", "=", "X_list", ".", "shape", "\n", "# Compute cross covariance", "\n", "Cred", "=", "(", "\n", "np", ".", "transpose", "(", "X_list", ".", "dot", "(", "np", ".", "transpose", "(", "X_list", ",", "(", "0", ",", "2", ",", "1", ")", ")", ")", ",", "(", "0", ",", "2", ",", "1", ",", "3", ")", ")", "\n", "/", "n", "\n", ")", "\n", "C", "=", "np", ".", "concatenate", "(", "np", ".", "concatenate", "(", "Cred", ",", "axis", "=", "1", ")", ",", "axis", "=", "1", ")", "\n", "D", "=", "linalg", ".", "block_diag", "(", "*", "[", "Cred", "[", "i", ",", "i", "]", "for", "i", "in", "range", "(", "m", ")", "]", ")", "\n", "_", ",", "A", "=", "linalg", ".", "eigh", "(", "C", ",", "D", ",", "subset_by_index", "=", "[", "m", "*", "k", "-", "k", ",", "m", "*", "k", "-", "1", "]", ")", "\n", "A", "=", "np", ".", "array", "(", "np", ".", "split", "(", "A", ",", "m", ",", "axis", "=", "0", ")", ")", "\n", "W_list", "=", "np", ".", "array", "(", "[", "a", ".", "T", "for", "a", "in", "A", "]", ")", "\n", "\n", "if", "use_jointdiag", ":", "\n", "        ", "Ds", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "            ", "Yi", "=", "W_list", "[", "i", "]", ".", "dot", "(", "X_list", "[", "i", "]", ")", "\n", "Di", "=", "Yi", ".", "dot", "(", "Yi", ".", "T", ")", "\n", "Ds", ".", "append", "(", "Di", ")", "\n", "\n", "", "B", ",", "_", "=", "qndiag", "(", "np", ".", "array", "(", "Ds", ")", ",", "max_iter", "=", "max_iter", ",", "verbose", "=", "verbose", ",", ")", "\n", "W_list", "=", "np", ".", "array", "(", "[", "B", ".", "dot", "(", "w", ")", "for", "w", "in", "W_list", "]", ")", "\n", "\n", "", "if", "use_scaling", ":", "\n", "        ", "slices", "=", "[", "slice", "(", "i", "*", "k", ",", "(", "i", "+", "1", ")", "*", "k", ")", "for", "i", "in", "range", "(", "m", ")", "]", "\n", "CY", "=", "np", ".", "zeros", "(", "(", "m", ",", "m", ",", "k", ")", ")", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "m", ")", ":", "\n", "                ", "CY", "[", "i", ",", "j", ",", ":", "]", "=", "np", ".", "diag", "(", "\n", "W_list", "[", "i", "]", ".", "dot", "(", "C", "[", "slices", "[", "i", "]", ",", "slices", "[", "j", "]", "]", ")", ".", "dot", "(", "W_list", "[", "j", "]", ".", "T", ")", "\n", ")", "\n", "", "", "D", "=", "global_min", "(", "np", ".", "ones", "(", "(", "m", ",", "k", ")", ")", ",", "CY", ",", "n_iters", "=", "max_iter", ",", "verbose", "=", "verbose", ")", "\n", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "m", ")", ":", "\n", "                ", "CY", "[", "i", ",", "j", ",", ":", "]", "=", "D", "[", "i", "]", "*", "CY", "[", "i", ",", "j", "]", "*", "D", "[", "j", "]", "\n", "", "", "Sigmas", "=", "np", ".", "ones", "(", "(", "m", ",", "k", ")", ")", "\n", "for", "it", "in", "range", "(", "max_iter", ")", ":", "\n", "            ", "sprec", "=", "np", ".", "copy", "(", "Sigmas", ")", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "                ", "Sigmai", "=", "update_Sigmai", "(", "CY", ",", "Sigmas", ",", "i", ")", "\n", "Sigmas", "[", "i", "]", "=", "Sigmai", "\n", "", "if", "np", ".", "max", "(", "np", ".", "abs", "(", "sprec", "-", "Sigmas", ")", ")", "<", "tol", ":", "\n", "                ", "break", "\n", "", "", "W_list", "=", "np", ".", "array", "(", "[", "d", "[", ":", ",", "None", "]", "*", "w", "for", "d", ",", "w", "in", "zip", "(", "D", ",", "W_list", ")", "]", ")", "\n", "Ys", "=", "np", ".", "array", "(", "[", "w", ".", "dot", "(", "x", ")", "for", "w", ",", "x", "in", "zip", "(", "W_list", ",", "X_list", ")", "]", ")", "\n", "", "else", ":", "\n", "        ", "Ys", "=", "np", ".", "array", "(", "[", "w", ".", "dot", "(", "x", ")", "for", "w", ",", "x", "in", "zip", "(", "W_list", ",", "X_list", ")", "]", ")", "\n", "Sigmas", "=", "np", ".", "ones", "(", "(", "m", ",", "k", ")", ")", "\n", "\n", "", "if", "use_scaling", ":", "\n", "        ", "Y_avg", "=", "(", "\n", "1", "\n", "/", "(", "np", ".", "sum", "(", "1", "/", "Sigmas", ",", "axis", "=", "0", ")", "+", "1", ")", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "*", "np", ".", "sum", "(", "\n", "[", "1", "/", "Sigmas", "[", "i", "]", ".", "reshape", "(", "-", "1", ",", "1", ")", "*", "Ys", "[", "i", "]", "for", "i", "in", "range", "(", "m", ")", "]", ",", "\n", "axis", "=", "0", ",", "\n", ")", "\n", ")", "\n", "", "else", ":", "\n", "        ", "Y_avg", "=", "np", ".", "sum", "(", "Ys", ",", "axis", "=", "0", ")", "\n", "", "return", "W_list", ",", "Sigmas", ",", "Y_avg", "\n", "", ""]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.loss_total": [[4, 40], ["numpy.sum", "numpy.mean", "range", "enumerate", "numpy.testing.assert_array_almost_equal", "loss.f", "zip", "range", "numpy.sum", "numpy.ones", "numpy.log", "numpy.linalg.slogdet", "zip", "numpy.log", "li.reshape", "numpy.mean"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.f"], ["def", "loss_total", "(", "basis_list", ",", "Y_list", ",", "l", ",", "sigmas", ",", "a", ",", "b", ",", "eps2", ",", "check_l", "=", "True", ")", ":", "\n", "    ", "m", ",", "p", ",", "p3", "=", "basis_list", ".", "shape", "\n", "m2", ",", "p2", ",", "n", "=", "Y_list", ".", "shape", "\n", "m3", ",", "p4", "=", "l", ".", "shape", "\n", "(", "p5", ",", ")", "=", "sigmas", ".", "shape", "\n", "assert", "m", "==", "m2", "\n", "assert", "m", "==", "m3", "\n", "assert", "p", "==", "p2", "\n", "assert", "p", "==", "p3", "\n", "assert", "p", "==", "p4", "\n", "assert", "p", "==", "p5", "\n", "if", "check_l", ":", "\n", "        ", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "\n", "np", ".", "sum", "(", "l", "**", "2", "+", "eps2", ",", "axis", "=", "0", ")", ",", "np", ".", "ones", "(", "p", ")", "\n", ")", "\n", "\n", "", "Y_avg", "=", "np", ".", "sum", "(", "\n", "[", "(", "li", ".", "reshape", "(", "-", "1", ",", "1", ")", "**", "2", "+", "eps2", ")", "*", "y", "for", "li", ",", "y", "in", "zip", "(", "l", ",", "Y_list", ")", "]", ",", "\n", "axis", "=", "0", ",", "\n", ")", "\n", "loss", "=", "0", "\n", "loss", "+=", "np", ".", "mean", "(", "f", "(", "Y_avg", ",", "sigmas", ",", "m", ",", "a", ",", "b", ")", ")", "\n", "for", "j", "in", "range", "(", "p", ")", ":", "\n", "        ", "loss", "+=", "(", "m", "-", "1", ")", "/", "2", "*", "np", ".", "log", "(", "sigmas", "[", "j", "]", "**", "2", ")", "\n", "", "for", "i", ",", "(", "W", ",", "Y", ")", "in", "enumerate", "(", "zip", "(", "basis_list", ",", "Y_list", ")", ")", ":", "\n", "        ", "loss", "-=", "np", ".", "linalg", ".", "slogdet", "(", "W", ")", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "p", ")", ":", "\n", "            ", "loss", "-=", "1", "/", "2", "*", "np", ".", "log", "(", "l", "[", "i", "]", "[", "j", "]", "**", "2", "+", "eps2", ")", "\n", "loss", "+=", "(", "\n", "1", "\n", "/", "(", "2", "*", "sigmas", "[", "j", "]", "**", "2", ")", "\n", "*", "np", ".", "mean", "(", "(", "Y", "[", "j", "]", "-", "Y_avg", "[", "j", "]", ")", "**", "2", ")", "\n", "*", "m", "\n", "*", "(", "l", "[", "i", "]", "[", "j", "]", "**", "2", "+", "eps2", ")", "\n", ")", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.loggauss": [[42, 45], ["numpy.log"], "function", ["None"], ["", "def", "loggauss", "(", "X", ",", "sigma", ")", ":", "\n", "    ", "var", "=", "sigma", "**", "2", "\n", "return", "-", "(", "X", "**", "2", ")", "/", "(", "2", "*", "var", ")", "-", "0.5", "*", "np", ".", "log", "(", "2", "*", "np", ".", "pi", "*", "var", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.f": [[47, 54], ["numpy.sum", "loss.numerical_fi", "zip"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.numerical_fi"], ["", "def", "f", "(", "Y", ",", "sigmas", ",", "n_subjects", ",", "a", ",", "b", ")", ":", "\n", "    ", "return", "np", ".", "sum", "(", "\n", "[", "\n", "numerical_fi", "(", "Yk", ",", "sigma", ",", "n_subjects", ",", "a", ",", "b", ")", "\n", "for", "Yk", ",", "sigma", "in", "zip", "(", "Y", ",", "sigmas", ")", "\n", "]", ",", "\n", "axis", "=", "0", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.numerical_fi": [[57, 65], ["numpy.log", "numpy.logaddexp", "loss.loggauss", "loss.loggauss", "numpy.sqrt", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.loggauss", "home.repos.pwc.inspect_result.hugorichard_shica.shica.loss.loggauss"], ["", "def", "numerical_fi", "(", "Y", ",", "sigma", ",", "n_subjects", ",", "a", ",", "b", ")", ":", "\n", "    ", "noise", "=", "sigma", "**", "2", "\n", "m", "=", "n_subjects", "\n", "res", "=", "-", "np", ".", "logaddexp", "(", "\n", "loggauss", "(", "Y", ",", "np", ".", "sqrt", "(", "a", "+", "noise", "/", "m", ")", ")", ",", "\n", "loggauss", "(", "Y", ",", "np", ".", "sqrt", "(", "b", "+", "noise", "/", "m", ")", ")", ",", "\n", ")", "+", "np", ".", "log", "(", "2", ")", "\n", "return", "res", "\n", "", ""]]}