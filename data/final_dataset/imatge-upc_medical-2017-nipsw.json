{"home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.cnn_net.ModelCNN": [[7, 33], ["keras.models.Sequential", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.add", "keras.models.Sequential.summary", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.Conv2D", "keras.layers.Activation", "keras.layers.MaxPooling2D", "keras.layers.Dropout", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Activation", "keras.layers.Dropout", "keras.layers.Dense", "keras.layers.Activation"], "function", ["None"], ["def", "ModelCNN", "(", ")", ":", "\n", "\n", "    ", "nb_classes", "=", "10", "\n", "\n", "# Input image dimensions", "\n", "img_rows", ",", "img_cols", "=", "28", ",", "28", "\n", "\n", "# Model Definition", "\n", "model", "=", "Sequential", "(", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "32", ",", "3", ",", "3", ",", "input_shape", "=", "(", "img_rows", ",", "img_cols", ",", "1", ")", ",", "border_mode", "=", "\"same\"", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Conv2D", "(", "32", ",", "3", ",", "3", ",", "border_mode", "=", "\"same\"", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "MaxPooling2D", "(", "pool_size", "=", "(", "2", ",", "2", ")", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.25", ")", ")", "\n", "\n", "model", ".", "add", "(", "Flatten", "(", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "128", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'relu'", ")", ")", "\n", "model", ".", "add", "(", "Dropout", "(", "0.5", ")", ")", "\n", "model", ".", "add", "(", "Dense", "(", "nb_classes", ")", ")", "\n", "model", ".", "add", "(", "Activation", "(", "'softmax'", ")", ")", "\n", "\n", "model", ".", "summary", "(", ")", "\n", "\n", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.segnet_train_predict.train": [[16, 45], ["print", "print", "print", "data.load_train_data", "imgs_train.astype.astype", "numpy.mean", "numpy.std", "imgs_mask_train.astype.astype", "print", "print", "print", "segnet.build_model", "segnet.build_model.summary", "keras.callbacks.ModelCheckpoint", "print", "print", "print", "segnet.build_model.fit", "print"], "function", ["home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.segnet.build_model"], ["def", "train", "(", ")", ":", "\n", "    ", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'Loading and preprocessing train data...'", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "imgs_train", ",", "imgs_mask_train", "=", "load_train_data", "(", ")", "\n", "\n", "imgs_train", "=", "imgs_train", ".", "astype", "(", "'float32'", ")", "\n", "mean", "=", "np", ".", "mean", "(", "imgs_train", ")", "# mean for data centering", "\n", "std", "=", "np", ".", "std", "(", "imgs_train", ")", "# std for data normalization", "\n", "\n", "imgs_train", "-=", "mean", "\n", "imgs_train", "/=", "std", "\n", "\n", "imgs_mask_train", "=", "imgs_mask_train", ".", "astype", "(", "'float32'", ")", "\n", "imgs_mask_train", "/=", "255.", "# scale masks to [0, 1]", "\n", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'Creating and compiling model...'", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "model", "=", "build_model", "(", ")", "\n", "model", ".", "summary", "(", ")", "\n", "model_checkpoint", "=", "ModelCheckpoint", "(", "'model.hdf5'", ",", "monitor", "=", "'loss'", ",", "save_best_only", "=", "True", ")", "\n", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'Fitting model...'", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "model", ".", "fit", "(", "imgs_train", ",", "imgs_mask_train", ",", "batch_size", "=", "32", ",", "nb_epoch", "=", "20", ",", "verbose", "=", "1", ",", "shuffle", "=", "True", ",", "\n", "callbacks", "=", "[", "model_checkpoint", "]", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.segnet_train_predict.predict": [[47, 73], ["print", "print", "print", "data.load_test_data", "imgs_test.astype.astype", "numpy.mean", "numpy.std", "print", "print", "print", "segnet.build_model", "segnet.build_model.load_weights", "print", "print", "print", "segnet.build_model.predict", "numpy.save"], "function", ["home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.segnet.build_model", "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.segnet_train_predict.predict"], ["", "def", "predict", "(", ")", ":", "\n", "    ", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'Loading and preprocessing test data...'", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "imgs_test", ",", "imgs_id_test", "=", "load_test_data", "(", ")", "\n", "\n", "imgs_test", "=", "imgs_test", ".", "astype", "(", "'float32'", ")", "\n", "\n", "mean", "=", "np", ".", "mean", "(", "imgs_test", ")", "# mean for data centering", "\n", "std", "=", "np", ".", "std", "(", "imgs_test", ")", "# std for data normalization", "\n", "\n", "imgs_test", "-=", "mean", "\n", "imgs_test", "/=", "std", "\n", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'Loading saved weights...'", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "model", "=", "build_model", "(", ")", "\n", "model", ".", "load_weights", "(", "'model.hdf5'", ")", "\n", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "print", "(", "'Predicting masks on test data...'", ")", "\n", "print", "(", "'-'", "*", "30", ")", "\n", "\n", "imgs_testing_train", "=", "model", ".", "predict", "(", "imgs_test", ",", "verbose", "=", "1", ")", "\n", "np", ".", "save", "(", "'imgs_testing_train1.npy'", ",", "imgs_testing_train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.segnet.build_model": [[6, 73], ["keras.applications.vgg16.VGG16", "keras.models.Model", "keras.models.Model.compile", "keras.layers.convolutional.UpSampling2D", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.UpSampling2D", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.UpSampling2D", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.UpSampling2D", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.UpSampling2D", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation", "keras.layers.convolutional.Convolution2D", "keras.layers.core.Activation"], "function", ["None"], ["def", "build_model", "(", ")", ":", "\n", "\n", "    ", "img_w", ",", "img_h", "=", "256", ",", "256", "\n", "kernel", "=", "3", "\n", "\n", "#Encoder (VGG16 pre-trained: imagenet)", "\n", "base_model", "=", "VGG16", "(", "weights", "=", "'imagenet'", ",", "include_top", "=", "False", ",", "input_shape", "=", "(", "img_w", ",", "img_h", ",", "3", ")", ")", "\n", "x", "=", "UpSampling2D", "(", ")", "(", "base_model", ".", "output", ")", "\n", "\n", "#x = Dropout(0.5)(x)", "\n", "\n", "#Decoder (Scratch)", "\n", "x", "=", "Convolution2D", "(", "512", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Convolution2D", "(", "512", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Convolution2D", "(", "512", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "UpSampling2D", "(", ")", "(", "x", ")", "\n", "\n", "#x = Dropout(0.5)(x)", "\n", "\n", "x", "=", "Convolution2D", "(", "512", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Convolution2D", "(", "512", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Convolution2D", "(", "512", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "UpSampling2D", "(", ")", "(", "x", ")", "\n", "\n", "#x = Dropout(0.5)(x)", "\n", "\n", "x", "=", "Convolution2D", "(", "256", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Convolution2D", "(", "256", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Convolution2D", "(", "256", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "UpSampling2D", "(", ")", "(", "x", ")", "\n", "\n", "#x = Dropout(0.5)(x)", "\n", "\n", "x", "=", "Convolution2D", "(", "128", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Convolution2D", "(", "128", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "UpSampling2D", "(", ")", "(", "x", ")", "\n", "\n", "#x = Dropout(0.5)(x)", "\n", "\n", "x", "=", "Convolution2D", "(", "64", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "x", "=", "Convolution2D", "(", "64", ",", "kernel", ",", "kernel", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'relu'", ")", "(", "x", ")", "\n", "\n", "#x = Dropout(0.5)(x)", "\n", "\n", "x", "=", "Convolution2D", "(", "1", ",", "1", ",", "1", ",", "border_mode", "=", "'same'", ")", "(", "x", ")", "\n", "x", "=", "Activation", "(", "'sigmoid'", ")", "(", "x", ")", "\n", "\n", "head_model", "=", "Model", "(", "input", "=", "base_model", ".", "input", ",", "output", "=", "x", ")", "\n", "head_model", ".", "compile", "(", "optimizer", "=", "'sgd'", ",", "loss", "=", "'categorical_crossentropy'", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "\n", "\n", "for", "layer", "in", "base_model", ".", "layers", ":", "\n", "        ", "layer", ".", "trainable", "=", "False", "\n", "\n", "", "return", "head_model", "\n", "", ""]], "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.CEAL.train_loop": [[14, 29], ["range", "print", "model.fit", "model.evaluate", "model.evaluate", "log_file.write", "str", "str", "str", "str", "str", "str", "str", "str", "len", "str"], "function", ["None"], ["def", "train_loop", "(", "X_train", ",", "y_train", ",", "X_test", ",", "y_test", ",", "nb_epochs", ",", "batch_size", ",", "iteration", ",", "log_file", ")", ":", "\n", "    ", "for", "current_epoch", "in", "range", "(", "0", ",", "nb_epochs", ")", ":", "\n", "        ", "print", "(", "\"Number of epoch: \"", "+", "str", "(", "current_epoch", "+", "1", ")", "+", "\"/\"", "+", "str", "(", "nb_epochs", ")", ")", "\n", "\n", "model", ".", "fit", "(", "X_train", ",", "y_train", ",", "batch_size", "=", "batch_size", ",", "\n", "nb_epoch", "=", "1", ",", "validation_data", "=", "(", "X_test", ",", "y_test", ")", ",", "\n", "verbose", "=", "2", ")", "# <-- pensar en sets de validacio augmentables", "\n", "\n", "score_train", "=", "model", ".", "evaluate", "(", "X_labeled_train", ",", "y_labeled_train", ",", "verbose", "=", "0", ")", "\n", "score_test", "=", "model", ".", "evaluate", "(", "X_test", ",", "y_test", ",", "verbose", "=", "0", ")", "\n", "\n", "log_file", ".", "write", "(", "'{0} {1} {2} {3} {4} {5} {6} \\n'", ".", "format", "(", "str", "(", "iteration", ")", ",", "str", "(", "current_epoch", "+", "1", ")", ",", "\n", "str", "(", "len", "(", "X_train", ")", ")", ",", "str", "(", "score_train", "[", "0", "]", ")", ",", "\n", "str", "(", "score_train", "[", "1", "]", ")", ",", "str", "(", "score_test", "[", "0", "]", ")", ",", "\n", "str", "(", "score_test", "[", "1", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.utils.entropy_rank": [[4, 11], ["numpy.zeros", "range", "len", "len", "sum", "numpy.argsort", "numpy.log"], "function", ["None"], ["def", "entropy_rank", "(", "pred", ")", ":", "\n", "    ", "en", "=", "np", ".", "zeros", "(", "len", "(", "pred", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "pred", ")", ")", ":", "\n", "        ", "en", "[", "i", "]", "=", "sum", "(", "-", "pred", "[", "i", "]", "*", "np", ".", "log", "(", "pred", "[", "i", "]", ")", ")", "\n", "\n", "", "return", "np", ".", "argsort", "(", "en", ")", "[", ":", ":", "-", "1", "]", ",", "en", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.utils.uncertain_set": [[13, 15], ["None"], "function", ["None"], ["", "def", "uncertain_set", "(", "en", ",", "nb_annotations", ")", ":", "\n", "    ", "return", "en", "[", "0", ":", "nb_annotations", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.utils.certain_set": [[17, 25], ["max", "numpy.where", "max", "min", "max"], "function", ["None"], ["", "def", "certain_set", "(", "en", ",", "thresh", ",", "initial_decay_rate", ",", "decay_rate", ")", ":", "\n", "# Threshold updating <-- review", "\n", "    ", "if", "thresh", "==", "None", ":", "\n", "        ", "thresh", "=", "max", "(", "en", ")", "-", "(", "(", "max", "(", "en", ")", "-", "min", "(", "en", ")", ")", "*", "initial_decay_rate", ")", "\n", "", "else", ":", "\n", "        ", "thresh", "=", "thresh", "+", "(", "max", "(", "en", ")", "-", "thresh", ")", "*", "decay_rate", "\n", "\n", "", "return", "np", ".", "where", "(", "en", "<", "thresh", ")", "[", "0", "]", ",", "thresh", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.utils.predictions_max_class": [[27, 34], ["numpy.zeros", "range", "len", "len", "numpy.argmax"], "function", ["None"], ["", "def", "predictions_max_class", "(", "array", ",", "predictions", ",", "nb_classes", ")", ":", "\n", "    ", "max_class", "=", "np", ".", "zeros", "(", "[", "len", "(", "array", ")", ",", "nb_classes", "]", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "array", ")", ")", ":", "\n", "        ", "max_class", "[", "i", "]", "[", "np", ".", "argmax", "(", "predictions", "[", "array", "[", "i", "]", "]", ")", "]", "=", "1", "\n", "\n", "", "return", "max_class", "\n", "\n"]], "home.repos.pwc.inspect_result.imatge-upc_medical-2017-nipsw.None.utils.pseudo_label_error": [[36, 42], ["range", "len", "len", "len"], "function", ["None"], ["", "def", "pseudo_label_error", "(", "pseudo_samples", ",", "true_samples", ")", ":", "\n", "    ", "aux", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "pseudo_samples", ")", ")", ":", "\n", "        ", "if", "(", "pseudo_samples", "[", "i", "]", "==", "true_samples", "[", "i", "]", ")", ".", "sum", "(", ")", "!=", "len", "(", "true_samples", "[", "i", "]", ")", ":", "\n", "            ", "aux", "+=", "1", "\n", "", "", "return", "aux", "/", "len", "(", "true_samples", ")", "\n", "", ""]]}