{"home.repos.pwc.inspect_result.contextscout_gcn_ner.None.test_ner._aggregate_sentence": [[7, 12], ["None"], "function", ["None"], ["def", "_aggregate_sentence", "(", "args", ")", ":", "\n", "    ", "return_str", "=", "''", "\n", "for", "argument", "in", "args", ":", "\n", "        ", "return_str", "+=", "argument", "+", "' '", "\n", "", "return", "return_str", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.None.test_ner._get_entity_tuples_from_sentence": [[14, 19], ["GCNNer", "GCNNer.get_entity_tuples_from_text"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.__init__.GCNNer.get_entity_tuples_from_text"], ["", "def", "_get_entity_tuples_from_sentence", "(", "sentence", ")", ":", "\n", "    ", "from", "gcn_ner", "import", "GCNNer", "\n", "ner", "=", "GCNNer", "(", "ner_filename", "=", "'./data/ner-gcn-21.tf'", ",", "trans_prob_file", "=", "'./data/trans_prob.pickle'", ")", "\n", "entity_tuples", "=", "ner", ".", "get_entity_tuples_from_text", "(", "sentence", ")", "\n", "return", "entity_tuples", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.__init__": [[44, 142], ["tensorflow.variable_scope", "tensorflow.ConfigProto", "tensorflow.Session", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.map_fn", "tensorflow.map_fn", "tensorflow.concat", "tensorflow.concat", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.map_fn", "tensorflow.map_fn", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.concat", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.map_fn", "tensorflow.placeholder", "tensorflow.placeholder", "ner_model.GCN_layer_fw", "ner_model.GCN_layer_bw", "tensorflow.concat", "tensorflow.nn.dropout", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.map_fn", "tensorflow.nn.dropout", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.map_fn", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.transpose", "tensorflow.contrib.crf.crf_log_likelihood", "tensorflow.reduce_mean", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.compute_gradients", "tensorflow.train.AdamOptimizer.apply_gradients", "ner_model.GCNNerModel.sess.run", "tensorflow.summary.scalar", "tensorflow.summary.merge_all", "tensorflow.summary.FileWriter", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.nn.relu", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.nn.relu", "tensorflow.variable_scope", "tensorflow.nn.dynamic_rnn", "tensorflow.variable_scope", "tensorflow.nn.dynamic_rnn", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.nn.relu", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.nn.relu", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.global_variables_initializer", "tensorflow.contrib.rnn.GRUCell", "tensorflow.contrib.rnn.GRUCell", "tensorflow.matmul", "tensorflow.clip_by_value", "tensorflow.matmul", "tensorflow.matmul", "range", "range", "tensorflow.matmul", "tensorflow.matmul", "var.name.find"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCN_layer_fw", "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCN_layer_bw"], ["def", "__init__", "(", "self", ",", "dropout", "=", "1.0", ")", ":", "\n", "\n", "        ", "with", "tf", ".", "variable_scope", "(", "NAMESPACE", ")", ":", "\n", "            ", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ")", "\n", "self", ".", "sess", "=", "tf", ".", "Session", "(", "config", "=", "config", ")", "\n", "\n", "# Input variables", "\n", "self", ".", "enc_inp", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "self", ".", "_vocab_size", ")", ",", "name", "=", "'enc_inp'", ")", "\n", "self", ".", "enc_inp_bw", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "self", ".", "_vocab_size", ")", ",", "name", "=", "'enc_inp_bw'", ")", "\n", "self", ".", "tag_inp", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "self", ".", "_tag_size", ")", ",", "name", "=", "'tag_inp'", ")", "\n", "self", ".", "tag_inp_bw", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "self", ".", "_tag_size", ")", ",", "name", "=", "'tag_inp_bw'", ")", "\n", "\n", "# Tag embeddings", "\n", "self", ".", "Wt", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_tag_size", ",", "self", ".", "_tag_embeddings_size", "]", ",", "0", ",", "0.1", ")", ")", "\n", "self", ".", "bt", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_tag_embeddings_size", "]", ",", "-", "0.1", ",", "0.1", ")", ")", "\n", "self", ".", "tag_projection", "=", "lambda", "x", ":", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "x", ",", "self", ".", "Wt", ")", "+", "self", ".", "bt", ")", "\n", "self", ".", "tag_emb_fw", "=", "tf", ".", "map_fn", "(", "self", ".", "tag_projection", ",", "self", ".", "tag_inp", ")", "\n", "self", ".", "tag_emb_bw", "=", "tf", ".", "map_fn", "(", "self", ".", "tag_projection", ",", "self", ".", "tag_inp_bw", ")", "\n", "\n", "self", ".", "word_tag_emb_fw", "=", "tf", ".", "concat", "(", "values", "=", "[", "self", ".", "enc_inp", ",", "self", ".", "tag_emb_fw", "]", ",", "axis", "=", "2", ")", "\n", "self", ".", "word_tag_emb_bw", "=", "tf", ".", "concat", "(", "values", "=", "[", "self", ".", "enc_inp_bw", ",", "self", ".", "tag_emb_bw", "]", ",", "axis", "=", "2", ")", "\n", "\n", "# Dense layer before LSTM", "\n", "self", ".", "Wi", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_vocab_size", "+", "self", ".", "_tag_embeddings_size", ",", "\n", "self", ".", "_internal_proj_size", "]", ",", "0", ",", "0.1", ")", ")", "\n", "self", ".", "bi", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_internal_proj_size", "]", ",", "-", "0.1", ",", "0.1", ")", ")", "\n", "self", ".", "internal_projection", "=", "lambda", "x", ":", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "x", ",", "self", ".", "Wi", ")", "+", "self", ".", "bi", ")", "\n", "self", ".", "enc_int", "=", "tf", ".", "map_fn", "(", "self", ".", "internal_projection", ",", "self", ".", "word_tag_emb_fw", ")", "\n", "self", ".", "enc_int_bw", "=", "tf", ".", "map_fn", "(", "self", ".", "internal_projection", ",", "self", ".", "word_tag_emb_bw", ")", "\n", "\n", "# Bi-LSTM part", "\n", "self", ".", "enc_cell_fw", "=", "rnn", ".", "MultiRNNCell", "(", "[", "rnn", ".", "GRUCell", "(", "self", ".", "_memory_dim", ")", "for", "_", "in", "range", "(", "self", ".", "_stack_dimension", ")", "]", ",", "\n", "state_is_tuple", "=", "True", ")", "\n", "self", ".", "enc_cell_bw", "=", "rnn", ".", "MultiRNNCell", "(", "[", "rnn", ".", "GRUCell", "(", "self", ".", "_memory_dim", ")", "for", "_", "in", "range", "(", "self", ".", "_stack_dimension", ")", "]", ",", "\n", "state_is_tuple", "=", "True", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'fw'", ")", ":", "\n", "                ", "self", ".", "encoder_fw", ",", "_", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "self", ".", "enc_cell_fw", ",", "self", ".", "enc_int", ",", "time_major", "=", "True", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'bw'", ")", ":", "\n", "                ", "self", ".", "encoder_bw", ",", "_", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "self", ".", "enc_cell_bw", ",", "self", ".", "enc_int_bw", ",", "time_major", "=", "True", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "", "self", ".", "encoder_outputs", "=", "tf", ".", "concat", "(", "values", "=", "[", "self", ".", "encoder_fw", ",", "self", ".", "encoder_bw", "]", ",", "axis", "=", "2", ")", "\n", "\n", "# Dense layer before GCN", "\n", "self", ".", "Ws", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_memory_dim", "*", "2", ",", "self", ".", "_memory_dim", "]", ",", "0", ",", "0.1", ")", ")", "\n", "self", ".", "bs", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_memory_dim", "]", ",", "-", "0.1", ",", "0.1", ")", ")", "\n", "self", ".", "first_projection", "=", "lambda", "x", ":", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "x", ",", "self", ".", "Ws", ")", "+", "self", ".", "bs", ")", "\n", "self", ".", "hidden", "=", "tf", ".", "map_fn", "(", "self", ".", "first_projection", ",", "self", ".", "encoder_outputs", ")", "\n", "\n", "# GCN part", "\n", "self", ".", "Atilde_fw", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "None", ")", ",", "name", "=", "\"Atilde_fw\"", ")", "\n", "self", ".", "Atilde_bw", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "None", ")", ",", "name", "=", "\"Atilde_bw\"", ")", "\n", "self", ".", "X1_fw", "=", "GCN_layer_fw", "(", "self", ".", "_embedding_size", ",", "\n", "self", ".", "_hidden_layer1_size", ",", "\n", "self", ".", "hidden", ",", "\n", "self", ".", "Atilde_fw", ")", "\n", "self", ".", "X1_bw", "=", "GCN_layer_bw", "(", "self", ".", "_embedding_size", ",", "\n", "self", ".", "_hidden_layer1_size", ",", "\n", "self", ".", "hidden", ",", "\n", "self", ".", "Atilde_bw", ")", "\n", "self", ".", "X3", "=", "tf", ".", "concat", "(", "values", "=", "[", "self", ".", "X1_fw", ",", "self", ".", "X1_bw", "]", ",", "axis", "=", "2", ")", "\n", "self", ".", "X3_dropout", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "X3", ",", "dropout", ")", "\n", "\n", "# Final feedforward layers", "\n", "self", ".", "Ws", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_hidden_layer2_size", "*", "2", ",", "self", ".", "_hidden_layer2_size", "]", ",", "0", ",", "0.1", ")", ",", "\n", "name", "=", "'Ws'", ")", "\n", "self", ".", "bs", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_hidden_layer2_size", "]", ",", "-", "0.1", ",", "0.1", ")", ",", "name", "=", "'bs'", ")", "\n", "self", ".", "first_projection", "=", "lambda", "x", ":", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "x", ",", "self", ".", "Ws", ")", "+", "self", ".", "bs", ")", "\n", "self", ".", "last_hidden", "=", "tf", ".", "map_fn", "(", "self", ".", "first_projection", ",", "self", ".", "X3_dropout", ")", "\n", "self", ".", "last_hidden_dropout", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "last_hidden", ",", "dropout", ")", "\n", "\n", "self", ".", "Wf", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_hidden_layer2_size", ",", "self", ".", "_output_size", "]", ",", "0", ",", "0.1", ")", ",", "name", "=", "'Wf'", ")", "\n", "self", ".", "bf", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "self", ".", "_output_size", "]", ",", "-", "0.1", ",", "0.1", ")", ",", "name", "=", "'bf'", ")", "\n", "self", ".", "final_projection", "=", "lambda", "x", ":", "tf", ".", "matmul", "(", "x", ",", "self", ".", "Wf", ")", "+", "self", ".", "bf", "\n", "self", ".", "outputs", "=", "tf", ".", "map_fn", "(", "self", ".", "final_projection", ",", "self", ".", "last_hidden_dropout", ")", "\n", "\n", "# Loss function and training", "\n", "self", ".", "y_", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "self", ".", "_output_size", ")", ",", "name", "=", "'y_'", ")", "\n", "self", ".", "gold_tags", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'gold_tags'", ")", "\n", "self", ".", "sequence_lengths", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "None", ")", ",", "name", "=", "'sequence_lenghts'", ")", "\n", "self", ".", "transition_params", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "(", "self", ".", "_output_size", ",", "self", ".", "_output_size", ")", ",", "\n", "name", "=", "'transition_params'", ")", "\n", "self", ".", "trans_outputs", "=", "tf", ".", "transpose", "(", "self", ".", "outputs", ",", "perm", "=", "[", "1", ",", "0", ",", "2", "]", ",", "name", "=", "'trans_outputs'", ")", "\n", "log_likelihood", ",", "_", "=", "tf", ".", "contrib", ".", "crf", ".", "crf_log_likelihood", "(", "self", ".", "trans_outputs", ",", "self", ".", "gold_tags", ",", "\n", "self", ".", "sequence_lengths", ",", "self", ".", "transition_params", ")", "\n", "self", ".", "cross_entropy", "=", "tf", ".", "reduce_mean", "(", "-", "log_likelihood", ")", "\n", "\n", "# Clipping the gradient", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "1e-4", ")", "\n", "gvs", "=", "optimizer", ".", "compute_gradients", "(", "self", ".", "cross_entropy", ")", "\n", "capped_gvs", "=", "[", "(", "tf", ".", "clip_by_value", "(", "grad", ",", "-", "1.", ",", "1.", ")", ",", "var", ")", "for", "grad", ",", "var", "in", "gvs", "if", "var", ".", "name", ".", "find", "(", "NAMESPACE", ")", "!=", "-", "1", "]", "\n", "self", ".", "train_step", "=", "optimizer", ".", "apply_gradients", "(", "capped_gvs", ")", "\n", "self", ".", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "# Adding the summaries", "\n", "tf", ".", "summary", ".", "scalar", "(", "'cross_entropy'", ",", "self", ".", "cross_entropy", ")", "\n", "self", ".", "merged", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "self", ".", "train_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "'./train'", ",", "self", ".", "sess", ".", "graph", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel._add_identity": [[143, 147], ["numpy.identity"], "methods", ["None"], ["", "", "def", "_add_identity", "(", "self", ",", "A", ")", ":", "\n", "        ", "num_nodes", "=", "A", ".", "shape", "[", "0", "]", "\n", "identity", "=", "np", ".", "identity", "(", "num_nodes", ")", "\n", "return", "identity", "+", "A", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.__train": [[148, 189], ["numpy.array", "numpy.array", "numpy.array", "numpy.copy", "numpy.array", "numpy.copy", "numpy.array", "numpy.argmax", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.array", "numpy.transpose", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "ner_model.GCNNerModel.sess.run", "ner_model.GCNNerModel._add_identity", "ner_model.GCNNerModel._add_identity"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel._add_identity", "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel._add_identity"], ["", "def", "__train", "(", "self", ",", "A_fw", ",", "A_bw", ",", "X", ",", "tag_logits", ",", "y", ",", "trans_prob", ")", ":", "\n", "        ", "Atilde_fw", "=", "np", ".", "array", "(", "[", "self", ".", "_add_identity", "(", "item", ")", "for", "item", "in", "A_fw", "]", ")", "\n", "Atilde_bw", "=", "np", ".", "array", "(", "[", "self", ".", "_add_identity", "(", "item", ")", "for", "item", "in", "A_bw", "]", ")", "\n", "\n", "X", "=", "np", ".", "array", "(", "X", ")", "\n", "X2", "=", "np", ".", "copy", "(", "X", ")", "\n", "\n", "tag_logits", "=", "np", ".", "array", "(", "tag_logits", ")", "\n", "tag_logits_bw", "=", "np", ".", "copy", "(", "tag_logits", ")", "\n", "\n", "seq_lengths", "=", "np", ".", "array", "(", "[", "item", ".", "shape", "[", "0", "]", "for", "item", "in", "X", "]", ")", "\n", "gold_tags", "=", "np", ".", "argmax", "(", "y", ",", "axis", "=", "2", ")", "\n", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "X2", "=", "np", ".", "transpose", "(", "X2", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "X2", "=", "X2", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "tag_logits", "=", "np", ".", "transpose", "(", "tag_logits", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "tag_logits_bw", "=", "np", ".", "transpose", "(", "tag_logits_bw", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "tag_logits_bw", "=", "tag_logits_bw", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "y", "=", "np", ".", "array", "(", "y", ")", "\n", "y", "=", "np", ".", "transpose", "(", "y", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "\n", "feed_dict", "=", "{", "}", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "enc_inp", ":", "X", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "enc_inp_bw", ":", "X2", "}", ")", "\n", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "tag_inp", ":", "tag_logits", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "tag_inp_bw", ":", "tag_logits_bw", "}", ")", "\n", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "Atilde_fw", ":", "Atilde_fw", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "Atilde_bw", ":", "Atilde_bw", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "y_", ":", "y", "}", ")", "\n", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "transition_params", ":", "trans_prob", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "sequence_lengths", ":", "seq_lengths", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "gold_tags", ":", "gold_tags", "}", ")", "\n", "\n", "loss", ",", "_", ",", "summary", "=", "self", ".", "sess", ".", "run", "(", "[", "self", ".", "cross_entropy", ",", "self", ".", "train_step", ",", "self", ".", "merged", "]", ",", "feed_dict", ")", "\n", "return", "loss", ",", "summary", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.train": [[190, 199], ["range", "ner_model.GCNNerModel.__train", "sys.stdout.flush", "range", "range", "range", "range", "range", "len", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.__train"], ["", "def", "train", "(", "self", ",", "data", ",", "trans_prob", ",", "epochs", "=", "20", ")", ":", "\n", "        ", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "            ", "loss", ",", "_", "=", "self", ".", "__train", "(", "[", "data", "[", "i", "]", "[", "0", "]", "for", "i", "in", "range", "(", "len", "(", "data", ")", ")", "]", ",", "\n", "[", "data", "[", "i", "]", "[", "1", "]", "for", "i", "in", "range", "(", "len", "(", "data", ")", ")", "]", ",", "\n", "[", "data", "[", "i", "]", "[", "2", "]", "for", "i", "in", "range", "(", "len", "(", "data", ")", ")", "]", ",", "\n", "[", "data", "[", "i", "]", "[", "3", "]", "for", "i", "in", "range", "(", "len", "(", "data", ")", ")", "]", ",", "\n", "[", "data", "[", "i", "]", "[", "4", "]", "for", "i", "in", "range", "(", "len", "(", "data", ")", ")", "]", ",", "\n", "trans_prob", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.__predict": [[200, 231], ["numpy.array", "numpy.array", "numpy.array", "numpy.copy", "numpy.array", "numpy.transpose", "numpy.transpose", "numpy.array", "numpy.copy", "numpy.transpose", "numpy.transpose", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "feed_dict.update", "ner_model.GCNNerModel.sess.run", "ner_model.GCNNerModel._add_identity", "ner_model.GCNNerModel._add_identity"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel._add_identity", "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel._add_identity"], ["", "", "def", "__predict", "(", "self", ",", "A_fw", ",", "A_bw", ",", "X", ",", "tag_logits", ",", "trans_prob", ")", ":", "\n", "        ", "Atilde_fw", "=", "np", ".", "array", "(", "[", "self", ".", "_add_identity", "(", "item", ")", "for", "item", "in", "A_fw", "]", ")", "\n", "Atilde_bw", "=", "np", ".", "array", "(", "[", "self", ".", "_add_identity", "(", "item", ")", "for", "item", "in", "A_bw", "]", ")", "\n", "\n", "X", "=", "np", ".", "array", "(", "X", ")", "\n", "X2", "=", "np", ".", "copy", "(", "X", ")", "\n", "\n", "seq_lengths", "=", "np", ".", "array", "(", "[", "item", ".", "shape", "[", "0", "]", "for", "item", "in", "X", "]", ")", "\n", "\n", "X", "=", "np", ".", "transpose", "(", "X", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "X2", "=", "np", ".", "transpose", "(", "X2", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "X2", "=", "X2", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "tag_logits", "=", "np", ".", "array", "(", "tag_logits", ")", "\n", "tag_logits_bw", "=", "np", ".", "copy", "(", "tag_logits", ")", "\n", "tag_logits", "=", "np", ".", "transpose", "(", "tag_logits", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "tag_logits_bw", "=", "np", ".", "transpose", "(", "tag_logits_bw", ",", "(", "1", ",", "0", ",", "2", ")", ")", "\n", "tag_logits_bw", "=", "tag_logits_bw", "[", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "\n", "feed_dict", "=", "{", "self", ".", "enc_inp", ":", "X", "}", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "enc_inp_bw", ":", "X2", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "tag_inp", ":", "tag_logits", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "tag_inp_bw", ":", "tag_logits_bw", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "Atilde_fw", ":", "Atilde_fw", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "Atilde_bw", ":", "Atilde_bw", "}", ")", "\n", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "transition_params", ":", "trans_prob", "}", ")", "\n", "feed_dict", ".", "update", "(", "{", "self", ".", "sequence_lengths", ":", "seq_lengths", "}", ")", "\n", "\n", "y_batch", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "outputs", ",", "feed_dict", ")", "\n", "return", "y_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.predict_with_viterbi": [[232, 243], ["numpy.array", "numpy.transpose", "tensorflow.contrib.crf.viterbi_decode", "ner_model.GCNNerModel.__predict", "prediction.append"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.__predict"], ["", "def", "predict_with_viterbi", "(", "self", ",", "A_fw", ",", "A_bw", ",", "X", ",", "tag_logits", ",", "trans_params", ")", ":", "\n", "        ", "outputs", "=", "np", ".", "array", "(", "self", ".", "__predict", "(", "[", "A_fw", "]", ",", "[", "A_bw", "]", ",", "[", "X", "]", ",", "[", "tag_logits", "]", ",", "trans_params", ")", ")", "\n", "outputs", "=", "np", ".", "transpose", "(", "outputs", ",", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "outputs", "=", "outputs", "[", "0", "]", "\n", "viterbi_sequence", ",", "__score", "=", "tf", ".", "contrib", ".", "crf", ".", "viterbi_decode", "(", "outputs", ",", "trans_params", ")", "\n", "prediction", "=", "[", "]", "\n", "for", "item", "in", "viterbi_sequence", ":", "\n", "            ", "vector", "=", "[", "0.", "]", "*", "self", ".", "_output_size", "\n", "vector", "[", "item", "]", "=", "1.", "\n", "prediction", ".", "append", "(", "vector", ")", "\n", "", "return", "prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.save": [[246, 249], ["tensorflow.train.Saver", "tensorflow.train.Saver.save"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.save"], ["", "def", "save", "(", "self", ",", "filename", ")", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "save", "(", "self", ".", "sess", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.load_tensorflow": [[250, 253], ["tensorflow.train.Saver", "tensorflow.train.Saver.restore", "tensorflow.global_variables"], "methods", ["None"], ["", "def", "load_tensorflow", "(", "self", ",", "filename", ")", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "[", "v", "for", "v", "in", "tf", ".", "global_variables", "(", ")", "if", "NAMESPACE", "in", "v", ".", "name", "]", ")", "\n", "saver", ".", "restore", "(", "self", ".", "sess", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.load": [[254, 259], ["ner_model.GCNNerModel", "ner_model.GCNNerModel.load_tensorflow"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.load_tensorflow"], ["", "@", "classmethod", "\n", "def", "load", "(", "self", ",", "filename", ")", ":", "\n", "        ", "model", "=", "GCNNerModel", "(", ")", "\n", "model", ".", "load_tensorflow", "(", "filename", ")", "\n", "return", "model", "\n", "", "", ""]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCN_layer_fw": [[10, 19], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.map_fn", "tensorflow.transpose", "tensorflow.nn.relu", "tensorflow.transpose", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.matmul", "tensorflow.matmul"], "function", ["None"], ["def", "GCN_layer_fw", "(", "embedding_size", ",", "hidden_layer1_size", ",", "hidden", ",", "Atilde_fw", ")", ":", "\n", "    ", "W0_fw", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "embedding_size", ",", "hidden_layer1_size", "]", ",", "0", ",", "0.1", ")", ",", "name", "=", "'W0_fw'", ")", "\n", "b0_fw", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "hidden_layer1_size", "]", ",", "-", "0.1", ",", "0.1", ")", ",", "name", "=", "'b0_fw'", ")", "\n", "left_X1_projection_fw", "=", "lambda", "x", ":", "tf", ".", "matmul", "(", "x", ",", "W0_fw", ")", "+", "b0_fw", "\n", "left_X1_fw", "=", "tf", ".", "map_fn", "(", "left_X1_projection_fw", ",", "hidden", ")", "\n", "left_X1_fw", "=", "tf", ".", "transpose", "(", "left_X1_fw", ",", "perm", "=", "[", "1", ",", "0", ",", "2", "]", ",", "name", "=", "'left_X1_fw'", ")", "\n", "X1_fw", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "Atilde_fw", ",", "left_X1_fw", ")", ")", "\n", "X1_fw", "=", "tf", ".", "transpose", "(", "X1_fw", ",", "perm", "=", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "return", "X1_fw", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCN_layer_bw": [[21, 30], ["tensorflow.Variable", "tensorflow.Variable", "tensorflow.map_fn", "tensorflow.transpose", "tensorflow.nn.relu", "tensorflow.transpose", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.matmul", "tensorflow.matmul"], "function", ["None"], ["", "def", "GCN_layer_bw", "(", "embedding_size", ",", "hidden_layer1_size", ",", "hidden", ",", "Atilde_bw", ")", ":", "\n", "    ", "W0_bw", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "embedding_size", ",", "hidden_layer1_size", "]", ",", "0", ",", "0.1", ")", ",", "name", "=", "'W0_bw'", ")", "\n", "b0_bw", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "hidden_layer1_size", "]", ",", "-", "0.1", ",", "0.1", ")", ",", "name", "=", "'b0_bw'", ")", "\n", "left_X1_projection_bw", "=", "lambda", "x", ":", "tf", ".", "matmul", "(", "x", ",", "W0_bw", ")", "+", "b0_bw", "\n", "left_X1_bw", "=", "tf", ".", "map_fn", "(", "left_X1_projection_bw", ",", "hidden", ")", "\n", "left_X1_bw", "=", "tf", ".", "transpose", "(", "left_X1_bw", ",", "perm", "=", "[", "1", ",", "0", ",", "2", "]", ",", "name", "=", "'left_X1_bw'", ")", "\n", "X1_bw", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "Atilde_bw", ",", "left_X1_bw", ")", ")", "\n", "X1_bw", "=", "tf", ".", "transpose", "(", "X1_bw", ",", "perm", "=", "[", "1", ",", "0", ",", "2", "]", ")", "\n", "return", "X1_bw", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.__init__.GCNNer.__init__": [[14, 17], ["gcn_ner.ner_model.GCNNerModel.load", "pickle.load", "open"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.load", "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.load"], ["def", "__init__", "(", "self", ",", "ner_filename", ",", "trans_prob_file", ")", ":", "\n", "        ", "self", ".", "_ner", "=", "GCNNerModel", ".", "load", "(", "ner_filename", ")", "\n", "self", ".", "_trans_prob", "=", "pickle", ".", "load", "(", "open", "(", "trans_prob_file", ",", "\"rb\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.__init__.GCNNer.get_entity_tuples_from_sentence": [[18, 32], ["gcn_ner.aux.get_words_embeddings_from_sentence", "gcn_ner.tuples.get_entities_from_tuple", "gcn_ner.tuples.clean_tuples", "__init__.GCNNer._logger.warning"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_words_embeddings_from_sentence", "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.get_entities_from_tuple", "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.clean_tuples"], ["", "def", "get_entity_tuples_from_sentence", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "'''\n        Given a sentence it returns the named entities within it.\n\n        :param sentence: The input sentence\n        :return: a list of triples of the form (<ENTITY>, <ENTITY_TYPE>, [<ENTITY_START_POS>, <ENTITY_END_POS>])\n        '''", "\n", "try", ":", "\n", "            ", "words", ",", "embeddings", ",", "idx", "=", "utils", ".", "aux", ".", "get_words_embeddings_from_sentence", "(", "sentence", ")", "\n", "entities", "=", "utils", ".", "tuples", ".", "get_entities_from_tuple", "(", "words", ",", "embeddings", ",", "self", ".", "_ner", ",", "self", ".", "_trans_prob", ")", "\n", "return", "utils", ".", "tuples", ".", "clean_tuples", "(", "words", ",", "entities", ",", "idx", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "_logger", ".", "warning", "(", "'Cannot process the following sentence: '", "+", "sentence", ")", "\n", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.__init__.GCNNer.get_entity_tuples_from_text": [[33, 55], ["gcn_ner.tuples.clean_text", "gcn_ner.aux.get_words_embeddings_from_text", "gcn_ner.tuples.clean_tuples", "gcn_ner.tuples.get_entities_from_tuple", "all_words.extend", "all_entities.extend", "all_idx.extend", "__init__.GCNNer._logger.warning"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.clean_text", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_words_embeddings_from_text", "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.clean_tuples", "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.get_entities_from_tuple"], ["", "", "def", "get_entity_tuples_from_text", "(", "self", ",", "text", ")", ":", "\n", "        ", "'''\n        Given a sentence it returns the named entities within it.\n\n        :param sentence: The input sentence\n        :return: a list of triples of the form (<ENTITY>, <ENTITY_TYPE>, [<ENTITY_START_POS>, <ENTITY_END_POS>])\n        '''", "\n", "\n", "text", "=", "utils", ".", "tuples", ".", "clean_text", "(", "text", ")", "\n", "sentences", "=", "utils", ".", "aux", ".", "get_words_embeddings_from_text", "(", "text", ")", "\n", "all_words", "=", "[", "]", "\n", "all_entities", "=", "[", "]", "\n", "all_idx", "=", "[", "]", "\n", "for", "words", ",", "embeddings", ",", "idx", "in", "sentences", ":", "\n", "            ", "try", ":", "\n", "                ", "entities", "=", "utils", ".", "tuples", ".", "get_entities_from_tuple", "(", "words", ",", "embeddings", ",", "self", ".", "_ner", ",", "self", ".", "_trans_prob", ")", "\n", "all_words", ".", "extend", "(", "words", ")", "\n", "all_entities", ".", "extend", "(", "entities", ")", "\n", "all_idx", ".", "extend", "(", "idx", ")", "\n", "", "except", ":", "\n", "                ", "self", ".", "_logger", ".", "warning", "(", "'Cannot process the following sentence: '", "+", "' '", ".", "join", "(", "words", ")", ")", "\n", "", "", "return", "utils", ".", "tuples", ".", "clean_tuples", "(", "all_words", ",", "all_entities", ",", "all_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.__init__.GCNNer.test": [[56, 70], ["gcn_ner.aux.get_all_sentences", "gcn_ner.aux.get_data_from_sentences", "gcn_ner.testing.get_gcn_results", "print", "print", "print"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_all_sentences", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_data_from_sentences", "home.repos.pwc.inspect_result.contextscout_gcn_ner.testing.__init__.get_gcn_results"], ["", "def", "test", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "'''\n        The system tests the current NER model against a text in the CONLL format.\n\n        :param dataset: the filename of a text in the CONLL format\n        :return: None, the function prints precision, recall and chunck F1\n        '''", "\n", "\n", "sentences", "=", "utils", ".", "aux", ".", "get_all_sentences", "(", "dataset", ")", "\n", "data", ",", "_", "=", "utils", ".", "aux", ".", "get_data_from_sentences", "(", "sentences", ")", "\n", "precision", ",", "recall", ",", "f1", "=", "utils", ".", "testing", ".", "get_gcn_results", "(", "self", ".", "_ner", ",", "data", ",", "self", ".", "_trans_prob", ")", "\n", "print", "(", "'precision:'", ",", "precision", ")", "\n", "print", "(", "'recall:'", ",", "recall", ")", "\n", "print", "(", "'F1:'", ",", "f1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.__init__.GCNNer.train_and_save": [[71, 83], ["print", "gcn_ner.training.train_and_save"], "methods", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.training.__init__.train_and_save"], ["", "@", "staticmethod", "\n", "def", "train_and_save", "(", "dataset", ",", "saving_dir", ",", "epochs", "=", "20", ",", "bucket_size", "=", "10", ")", ":", "\n", "        ", "'''\n\n        :param dataset: A file in the CONLL format to use as a training.\n        :param saving_dir: The directory where to save the results\n        :param epochs: The number of epochs to use in the training\n        :param bucket_size: The batch size of the training.\n        :return: An instance of this class (GCNNer\n        '''", "\n", "print", "(", "'Training the system according to the dataset '", ",", "dataset", ")", "\n", "return", "utils", ".", "training", ".", "train_and_save", "(", "dataset", ",", "saving_dir", ",", "epochs", ",", "bucket_size", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.create_full_sentence": [[28, 45], ["re.sub", "re.sub", "re.sub", "re.sub", "sentence.replace.replace", "sentence.replace.replace", "sentence.replace.replace", "sentence.replace.replace", "sentence.replace.replace", "sentence.replace.replace", "sentence.replace.replace", "sentence.replace.replace"], "function", ["None"], ["return", "utils", ".", "tuples", ".", "clean_tuples", "(", "words", ",", "entities", ",", "idx", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "_logger", ".", "warning", "(", "'Cannot process the following sentence: '", "+", "sentence", ")", "\n", "return", "[", "]", "\n", "\n", "", "", "def", "get_entity_tuples_from_text", "(", "self", ",", "text", ")", ":", "\n", "        ", "'''\n        Given a sentence it returns the named entities within it.\n\n        :param sentence: The input sentence\n        :return: a list of triples of the form (<ENTITY>, <ENTITY_TYPE>, [<ENTITY_START_POS>, <ENTITY_END_POS>])\n        '''", "\n", "\n", "text", "=", "utils", ".", "tuples", ".", "clean_text", "(", "text", ")", "\n", "sentences", "=", "utils", ".", "aux", ".", "get_words_embeddings_from_text", "(", "text", ")", "\n", "all_words", "=", "[", "]", "\n", "all_entities", "=", "[", "]", "\n", "all_idx", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.clean_word": [[47, 57], ["re.sub", "re.sub", "re.sub", "word.replace.replace"], "function", ["None"], ["            ", "try", ":", "\n", "                ", "entities", "=", "utils", ".", "tuples", ".", "get_entities_from_tuple", "(", "words", ",", "embeddings", ",", "self", ".", "_ner", ",", "self", ".", "_trans_prob", ")", "\n", "all_words", ".", "extend", "(", "words", ")", "\n", "all_entities", ".", "extend", "(", "entities", ")", "\n", "all_idx", ".", "extend", "(", "idx", ")", "\n", "", "except", ":", "\n", "                ", "self", ".", "_logger", ".", "warning", "(", "'Cannot process the following sentence: '", "+", "' '", ".", "join", "(", "words", ")", ")", "\n", "", "", "return", "utils", ".", "tuples", ".", "clean_tuples", "(", "all_words", ",", "all_entities", ",", "all_idx", ")", "\n", "\n", "", "def", "test", "(", "self", ",", "dataset", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.vector_is_empty": [[59, 67], ["len"], "function", ["None"], ["\n", "\n", "sentences", "=", "utils", ".", "aux", ".", "get_all_sentences", "(", "dataset", ")", "\n", "data", ",", "_", "=", "utils", ".", "aux", ".", "get_data_from_sentences", "(", "sentences", ")", "\n", "precision", ",", "recall", ",", "f1", "=", "utils", ".", "testing", ".", "get_gcn_results", "(", "self", ".", "_ner", ",", "data", ",", "self", ".", "_trans_prob", ")", "\n", "print", "(", "'precision:'", ",", "precision", ")", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_clean_word_vector": [[69, 78], ["parser", "numpy.array", "__init__.clean_word", "__init__.vector_is_empty"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.clean_word", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.vector_is_empty"], ["print", "(", "'F1:'", ",", "f1", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "train_and_save", "(", "dataset", ",", "saving_dir", ",", "epochs", "=", "20", ",", "bucket_size", "=", "10", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_tagging_vector": [[80, 89], ["len", "tags.index", "len"], "function", ["None"], ["\n", "print", "(", "'Training the system according to the dataset '", ",", "dataset", ")", "\n", "return", "utils", ".", "training", ".", "train_and_save", "(", "dataset", ",", "saving_dir", ",", "epochs", ",", "bucket_size", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_class_vector": [[91, 100], ["len", "classes.index", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_entity_num": [[102, 109], ["len", "classes.index"], "function", ["None"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__._get_word_vectors_from_tokens": [[111, 122], ["words.append", "vectors.append", "idx.append", "__init__.clean_word", "__init__.get_clean_word_vector", "len"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.clean_word", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_clean_word_vector"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_entity_name": [[124, 130], ["numpy.argmax"], "function", ["None"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_words_embeddings_from_sentence": [[132, 136], ["re.sub", "parser", "__init__._get_word_vectors_from_tokens"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__._get_word_vectors_from_tokens"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_words_embeddings_from_text": [[138, 144], ["parser", "sentences.append", "__init__._get_word_vectors_from_tokens"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__._get_word_vectors_from_tokens"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.create_graph_from_sentence_and_word_vectors": [[146, 176], ["re.sub", "Tagger", "Parser", "range", "numpy.array", "Parser.execute", "Graph", "Graph.add_vertices", "Graph.add_edges", "numpy.array", "Parser.execute_backward", "Graph", "Graph.add_vertices", "Graph.add_edges", "numpy.array", "isinstance", "TypeError", "len", "np.array.append", "__init__.get_tagging_vector", "Graph.get_adjacency", "Graph.get_adjacency"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.nl.SpacyParser.execute", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.nl.SpacyParser.execute_backward", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_tagging_vector"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_all_sentences": [[178, 197], ["open", "open.readlines", "line.split", "elements[].strip", "elements[].strip", "__init__.decide_entity", "items.append", "len", "elements[].strip", "sentences.append"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.decide_entity"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.decide_entity": [[199, 212], ["string.find", "string.find"], "function", ["None"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_data_from_sentences": [[214, 242], ["numpy.zeros", "len", "all_data.append", "words.append", "__init__.get_clean_word_vector", "__init__.get_tagging_vector", "tag_data.append", "__init__.get_class_vector", "__init__.get_entity_num", "word_data.append", "class_data.append", "len", "len", "__init__.clean_word"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_clean_word_vector", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_tagging_vector", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_class_vector", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_entity_num", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.clean_word"], []], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.nl.SpacyTagger.__init__": [[10, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "self", ".", "sentence", "=", "sentence", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.nl.SpacyParser.__init__": [[16, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "tagger", ")", ":", "\n", "        ", "self", ".", "tagger", "=", "tagger", "\n", "self", ".", "parser", "=", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.nl.SpacyParser.execute": [[20, 49], ["nl.SpacyParser.parser", "dict", "names.append", "words.append", "tags.append", "types.append", "edges.append", "str"], "methods", ["None"], ["", "def", "execute", "(", "self", ")", ":", "\n", "        ", "parsed", "=", "self", ".", "parser", "(", "self", ".", "tagger", ".", "sentence", ")", "\n", "edges", "=", "[", "]", "\n", "names", "=", "[", "]", "\n", "words", "=", "[", "]", "\n", "tags", "=", "[", "]", "\n", "types", "=", "[", "]", "\n", "\n", "i", "=", "0", "\n", "items_dict", "=", "dict", "(", ")", "\n", "for", "item", "in", "parsed", ":", "\n", "            ", "if", "item", ".", "orth_", "in", "_invalid_words", ":", "\n", "                ", "continue", "\n", "", "items_dict", "[", "item", ".", "idx", "]", "=", "i", "\n", "i", "+=", "1", "\n", "\n", "", "for", "item", "in", "parsed", ":", "\n", "            ", "if", "item", ".", "orth_", "in", "_invalid_words", ":", "\n", "                ", "continue", "\n", "", "index", "=", "items_dict", "[", "item", ".", "idx", "]", "\n", "for", "child_index", "in", "[", "items_dict", "[", "l", ".", "idx", "]", "for", "l", "in", "item", ".", "children", "\n", "if", "not", "l", ".", "orth_", "in", "_invalid_words", "]", ":", "\n", "                ", "edges", ".", "append", "(", "(", "index", ",", "child_index", ")", ")", "\n", "", "names", ".", "append", "(", "\"v\"", "+", "str", "(", "index", ")", ")", "\n", "words", ".", "append", "(", "item", ".", "vector", ")", "\n", "tags", ".", "append", "(", "item", ".", "tag_", ")", "\n", "types", ".", "append", "(", "item", ".", "dep_", ")", "\n", "\n", "", "return", "names", ",", "edges", ",", "words", ",", "tags", ",", "types", "\n", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.nl.SpacyParser.execute_backward": [[51, 80], ["nl.SpacyParser.parser", "dict", "names.append", "words.append", "tags.append", "types.append", "edges.append", "str"], "methods", ["None"], ["", "def", "execute_backward", "(", "self", ")", ":", "\n", "        ", "parsed", "=", "self", ".", "parser", "(", "self", ".", "tagger", ".", "sentence", ")", "\n", "edges", "=", "[", "]", "\n", "names", "=", "[", "]", "\n", "words", "=", "[", "]", "\n", "tags", "=", "[", "]", "\n", "types", "=", "[", "]", "\n", "\n", "i", "=", "0", "\n", "items_dict", "=", "dict", "(", ")", "\n", "for", "item", "in", "parsed", ":", "\n", "            ", "if", "item", ".", "orth_", "in", "_invalid_words", ":", "\n", "                ", "continue", "\n", "", "items_dict", "[", "item", ".", "idx", "]", "=", "i", "\n", "i", "+=", "1", "\n", "\n", "", "for", "item", "in", "parsed", ":", "\n", "            ", "if", "item", ".", "orth_", "in", "_invalid_words", ":", "\n", "                ", "continue", "\n", "", "index", "=", "items_dict", "[", "item", ".", "idx", "]", "\n", "for", "child_index", "in", "[", "items_dict", "[", "l", ".", "idx", "]", "for", "l", "in", "item", ".", "children", "\n", "if", "not", "l", ".", "orth_", "in", "_invalid_words", "]", ":", "\n", "                ", "edges", ".", "append", "(", "(", "child_index", ",", "index", ")", ")", "\n", "", "names", ".", "append", "(", "\"v\"", "+", "str", "(", "index", ")", ")", "\n", "words", ".", "append", "(", "item", ".", "vector", ")", "\n", "tags", ".", "append", "(", "item", ".", "tag_", ")", "\n", "types", ".", "append", "(", "item", ".", "dep_", ")", "\n", "\n", "", "return", "names", ",", "edges", ",", "words", ",", "tags", ",", "types", "\n", "", "", ""]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.testing.__init__.get_gcn_results": [[6, 92], ["copy.deepcopy", "copy.deepcopy.append", "print", "print", "create_full_sentence", "zip", "create_graph_from_sentence_and_word_vectors", "gcn_model.predict_with_viterbi"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.create_full_sentence", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.create_graph_from_sentence_and_word_vectors", "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.predict_with_viterbi"], ["\n", "import", "gcn_ner", ".", "utils", "as", "utils", "\n", "from", "gcn_ner", ".", "ner_model", "import", "GCNNerModel", "\n", "\n", "\n", "class", "GCNNer", ":", "\n", "    ", "_logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "\n", "def", "__init__", "(", "self", ",", "ner_filename", ",", "trans_prob_file", ")", ":", "\n", "        ", "self", ".", "_ner", "=", "GCNNerModel", ".", "load", "(", "ner_filename", ")", "\n", "self", ".", "_trans_prob", "=", "pickle", ".", "load", "(", "open", "(", "trans_prob_file", ",", "\"rb\"", ")", ")", "\n", "\n", "", "def", "get_entity_tuples_from_sentence", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "'''\n        Given a sentence it returns the named entities within it.\n\n        :param sentence: The input sentence\n        :return: a list of triples of the form (<ENTITY>, <ENTITY_TYPE>, [<ENTITY_START_POS>, <ENTITY_END_POS>])\n        '''", "\n", "try", ":", "\n", "            ", "words", ",", "embeddings", ",", "idx", "=", "utils", ".", "aux", ".", "get_words_embeddings_from_sentence", "(", "sentence", ")", "\n", "entities", "=", "utils", ".", "tuples", ".", "get_entities_from_tuple", "(", "words", ",", "embeddings", ",", "self", ".", "_ner", ",", "self", ".", "_trans_prob", ")", "\n", "return", "utils", ".", "tuples", ".", "clean_tuples", "(", "words", ",", "entities", ",", "idx", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "_logger", ".", "warning", "(", "'Cannot process the following sentence: '", "+", "sentence", ")", "\n", "return", "[", "]", "\n", "\n", "", "", "def", "get_entity_tuples_from_text", "(", "self", ",", "text", ")", ":", "\n", "        ", "'''\n        Given a sentence it returns the named entities within it.\n\n        :param sentence: The input sentence\n        :return: a list of triples of the form (<ENTITY>, <ENTITY_TYPE>, [<ENTITY_START_POS>, <ENTITY_END_POS>])\n        '''", "\n", "\n", "text", "=", "utils", ".", "tuples", ".", "clean_text", "(", "text", ")", "\n", "sentences", "=", "utils", ".", "aux", ".", "get_words_embeddings_from_text", "(", "text", ")", "\n", "all_words", "=", "[", "]", "\n", "all_entities", "=", "[", "]", "\n", "all_idx", "=", "[", "]", "\n", "for", "words", ",", "embeddings", ",", "idx", "in", "sentences", ":", "\n", "            ", "try", ":", "\n", "                ", "entities", "=", "utils", ".", "tuples", ".", "get_entities_from_tuple", "(", "words", ",", "embeddings", ",", "self", ".", "_ner", ",", "self", ".", "_trans_prob", ")", "\n", "all_words", ".", "extend", "(", "words", ")", "\n", "all_entities", ".", "extend", "(", "entities", ")", "\n", "all_idx", ".", "extend", "(", "idx", ")", "\n", "", "except", ":", "\n", "                ", "self", ".", "_logger", ".", "warning", "(", "'Cannot process the following sentence: '", "+", "' '", ".", "join", "(", "words", ")", ")", "\n", "", "", "return", "utils", ".", "tuples", ".", "clean_tuples", "(", "all_words", ",", "all_entities", ",", "all_idx", ")", "\n", "\n", "", "def", "test", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "'''\n        The system tests the current NER model against a text in the CONLL format.\n\n        :param dataset: the filename of a text in the CONLL format\n        :return: None, the function prints precision, recall and chunck F1\n        '''", "\n", "\n", "sentences", "=", "utils", ".", "aux", ".", "get_all_sentences", "(", "dataset", ")", "\n", "data", ",", "_", "=", "utils", ".", "aux", ".", "get_data_from_sentences", "(", "sentences", ")", "\n", "precision", ",", "recall", ",", "f1", "=", "utils", ".", "testing", ".", "get_gcn_results", "(", "self", ".", "_ner", ",", "data", ",", "self", ".", "_trans_prob", ")", "\n", "print", "(", "'precision:'", ",", "precision", ")", "\n", "print", "(", "'recall:'", ",", "recall", ")", "\n", "print", "(", "'F1:'", ",", "f1", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "train_and_save", "(", "dataset", ",", "saving_dir", ",", "epochs", "=", "20", ",", "bucket_size", "=", "10", ")", ":", "\n", "        ", "'''\n\n        :param dataset: A file in the CONLL format to use as a training.\n        :param saving_dir: The directory where to save the results\n        :param epochs: The number of epochs to use in the training\n        :param bucket_size: The batch size of the training.\n        :return: An instance of this class (GCNNer\n        '''", "\n", "print", "(", "'Training the system according to the dataset '", ",", "dataset", ")", "\n", "return", "utils", ".", "training", ".", "train_and_save", "(", "dataset", ",", "saving_dir", ",", "epochs", ",", "bucket_size", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.training.__init__.get_chunks": [[1, 3], ["range", "len"], "function", ["None"], ["import", "numpy", "as", "np", "\n", "import", "pickle", "\n", "import", "random", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.training.__init__.bin_data_into_buckets": [[5, 21], ["size_to_data_dict.keys", "len", "__init__.get_chunks", "size_to_data_dict[].append", "buckets.append"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.training.__init__.get_chunks"], ["import", "logging", "\n", "\n", "import", "gcn_ner", ".", "utils", "as", "utils", "\n", "from", "gcn_ner", ".", "ner_model", "import", "GCNNerModel", "\n", "\n", "\n", "class", "GCNNer", ":", "\n", "    ", "_logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "\n", "def", "__init__", "(", "self", ",", "ner_filename", ",", "trans_prob_file", ")", ":", "\n", "        ", "self", ".", "_ner", "=", "GCNNerModel", ".", "load", "(", "ner_filename", ")", "\n", "self", ".", "_trans_prob", "=", "pickle", ".", "load", "(", "open", "(", "trans_prob_file", ",", "\"rb\"", ")", ")", "\n", "\n", "", "def", "get_entity_tuples_from_sentence", "(", "self", ",", "sentence", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.training.__init__.train_and_save": [[23, 64], ["aux.get_all_sentences", "print", "aux.get_data_from_sentences", "__init__.bin_data_into_buckets", "GCNNerModel", "range", "sorted", "sys.stderr.write", "sys.stderr.write", "GCNNerModel.save", "str", "random.random", "str", "create_full_sentence", "aux.create_graph_from_sentence_and_word_vectors", "gcn_bucket.append", "len", "GCNNerModel.train", "np.array"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_all_sentences", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_data_from_sentences", "home.repos.pwc.inspect_result.contextscout_gcn_ner.training.__init__.bin_data_into_buckets", "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.save", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.create_full_sentence", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.create_graph_from_sentence_and_word_vectors", "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.train"], ["\n", "try", ":", "\n", "            ", "words", ",", "embeddings", ",", "idx", "=", "utils", ".", "aux", ".", "get_words_embeddings_from_sentence", "(", "sentence", ")", "\n", "entities", "=", "utils", ".", "tuples", ".", "get_entities_from_tuple", "(", "words", ",", "embeddings", ",", "self", ".", "_ner", ",", "self", ".", "_trans_prob", ")", "\n", "return", "utils", ".", "tuples", ".", "clean_tuples", "(", "words", ",", "entities", ",", "idx", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "_logger", ".", "warning", "(", "'Cannot process the following sentence: '", "+", "sentence", ")", "\n", "return", "[", "]", "\n", "\n", "", "", "def", "get_entity_tuples_from_text", "(", "self", ",", "text", ")", ":", "\n", "        ", "'''\n        Given a sentence it returns the named entities within it.\n\n        :param sentence: The input sentence\n        :return: a list of triples of the form (<ENTITY>, <ENTITY_TYPE>, [<ENTITY_START_POS>, <ENTITY_END_POS>])\n        '''", "\n", "\n", "text", "=", "utils", ".", "tuples", ".", "clean_text", "(", "text", ")", "\n", "sentences", "=", "utils", ".", "aux", ".", "get_words_embeddings_from_text", "(", "text", ")", "\n", "all_words", "=", "[", "]", "\n", "all_entities", "=", "[", "]", "\n", "all_idx", "=", "[", "]", "\n", "for", "words", ",", "embeddings", ",", "idx", "in", "sentences", ":", "\n", "            ", "try", ":", "\n", "                ", "entities", "=", "utils", ".", "tuples", ".", "get_entities_from_tuple", "(", "words", ",", "embeddings", ",", "self", ".", "_ner", ",", "self", ".", "_trans_prob", ")", "\n", "all_words", ".", "extend", "(", "words", ")", "\n", "all_entities", ".", "extend", "(", "entities", ")", "\n", "all_idx", ".", "extend", "(", "idx", ")", "\n", "", "except", ":", "\n", "                ", "self", ".", "_logger", ".", "warning", "(", "'Cannot process the following sentence: '", "+", "' '", ".", "join", "(", "words", ")", ")", "\n", "", "", "return", "utils", ".", "tuples", ".", "clean_tuples", "(", "all_words", ",", "all_entities", ",", "all_idx", ")", "\n", "\n", "", "def", "test", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "'''\n        The system tests the current NER model against a text in the CONLL format.\n\n        :param dataset: the filename of a text in the CONLL format\n        :return: None, the function prints precision, recall and chunck F1\n        '''", "\n", "\n", "sentences", "=", "utils", ".", "aux", ".", "get_all_sentences", "(", "dataset", ")", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.clean_text": [[1, 4], ["text.replace.replace"], "function", ["None"], ["import", "numpy", "as", "np", "\n", "import", "pickle", "\n", "import", "random", "\n", "import", "sys", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.get_entities_from_tuple": [[6, 14], ["utils.aux.create_full_sentence", "utils.aux.create_graph_from_sentence_and_word_vectors", "ner.predict_with_viterbi", "utils.aux.get_entity_name"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.create_full_sentence", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.create_graph_from_sentence_and_word_vectors", "home.repos.pwc.inspect_result.contextscout_gcn_ner.gcn_ner.ner_model.GCNNerModel.predict_with_viterbi", "home.repos.pwc.inspect_result.contextscout_gcn_ner.aux.__init__.get_entity_name"], ["\n", "import", "gcn_ner", ".", "utils", "as", "utils", "\n", "from", "gcn_ner", ".", "ner_model", "import", "GCNNerModel", "\n", "\n", "\n", "class", "GCNNer", ":", "\n", "    ", "_logger", "=", "logging", ".", "getLogger", "(", "__name__", ")", "\n", "\n", "def", "__init__", "(", "self", ",", "ner_filename", ",", "trans_prob_file", ")", ":", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.erase_non_entities": [[16, 18], ["zip"], "function", ["None"], ["self", ".", "_trans_prob", "=", "pickle", ".", "load", "(", "open", "(", "trans_prob_file", ",", "\"rb\"", ")", ")", "\n", "\n", "", "def", "get_entity_tuples_from_sentence", "(", "self", ",", "sentence", ")", ":", "\n"]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.join_consecutive_tuples": [[20, 37], ["range", "len"], "function", ["None"], ["\n", "try", ":", "\n", "            ", "words", ",", "embeddings", ",", "idx", "=", "utils", ".", "aux", ".", "get_words_embeddings_from_sentence", "(", "sentence", ")", "\n", "entities", "=", "utils", ".", "tuples", ".", "get_entities_from_tuple", "(", "words", ",", "embeddings", ",", "self", ".", "_ner", ",", "self", ".", "_trans_prob", ")", "\n", "return", "utils", ".", "tuples", ".", "clean_tuples", "(", "words", ",", "entities", ",", "idx", ")", "\n", "", "except", ":", "\n", "            ", "self", ".", "_logger", ".", "warning", "(", "'Cannot process the following sentence: '", "+", "sentence", ")", "\n", "return", "[", "]", "\n", "\n", "", "", "def", "get_entity_tuples_from_text", "(", "self", ",", "text", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.clean_tuples": [[39, 43], ["__init__.erase_non_entities", "__init__.join_consecutive_tuples"], "function", ["home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.erase_non_entities", "home.repos.pwc.inspect_result.contextscout_gcn_ner.tuples.__init__.join_consecutive_tuples"], ["\n", "\n", "text", "=", "utils", ".", "tuples", ".", "clean_text", "(", "text", ")", "\n", "sentences", "=", "utils", ".", "aux", ".", "get_words_embeddings_from_text", "(", "text", ")", "\n", "all_words", "=", "[", "]", "\n"]]}