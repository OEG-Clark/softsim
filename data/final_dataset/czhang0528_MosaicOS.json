{"home.repos.pwc.inspect_result.czhang0528_MosaicOS.None.mosaic.concat_min": [[7, 65], ["itertools.accumulate", "zip", "len", "len", "round", "cv2.resize", "len", "len", "numpy.array", "boxes_resized.append", "concat_func", "numpy.concatenate", "len", "ValueError", "min", "zip", "zip", "concat_func", "len", "len", "len", "boxes_per_img.reshape.reshape", "len", "AssertionError", "len", "len"], "function", ["None"], ["def", "concat_min", "(", "images", ",", "boxes", "=", "[", "]", ",", "by", "=", "\"horizontal\"", ",", "interpolation", "=", "cv2", ".", "INTER_CUBIC", ")", ":", "\n", "    ", "assert", "images", ",", "\"'images' is empty\"", "\n", "\n", "if", "len", "(", "images", ")", "==", "1", ":", "\n", "        ", "if", "len", "(", "boxes", ")", "==", "1", ":", "\n", "            ", "return", "images", "[", "0", "]", ",", "boxes", "[", "0", "]", "\n", "", "elif", "len", "(", "boxes", ")", "==", "0", ":", "\n", "            ", "return", "images", "[", "0", "]", ",", "[", "]", "\n", "", "else", ":", "\n", "            ", "raise", "AssertionError", "(", "\n", "f\"number of images (got {len(images)}) is not matched \\\n                with number of boxes (got {len(boxes)})\"", "\n", ")", "\n", "\n", "# shape is (height, width)", "\n", "", "", "if", "by", "==", "\"horizontal\"", ":", "\n", "        ", "min_dim", ",", "scaled_dim", "=", "0", ",", "1", "\n", "concat_func", "=", "cv2", ".", "hconcat", "\n", "", "elif", "by", "==", "\"vertical\"", ":", "\n", "        ", "min_dim", ",", "scaled_dim", "=", "1", ",", "0", "\n", "concat_func", "=", "cv2", ".", "vconcat", "\n", "", "else", ":", "\n", "        ", "raise", "(", "ValueError", "(", "\"'by' must be one of 'horizaontal' or 'vertical'\"", ")", ")", "\n", "\n", "", "min_lens", "=", "[", "min", "(", "[", "img", ".", "shape", "[", "min_dim", "]", "for", "img", "in", "images", "]", ")", "]", "*", "len", "(", "images", ")", "\n", "scaled_lens", "=", "[", "\n", "round", "(", "img", ".", "shape", "[", "scaled_dim", "]", "*", "min_lens", "[", "0", "]", "/", "img", ".", "shape", "[", "min_dim", "]", ")", "for", "img", "in", "images", "\n", "]", "\n", "sizes", "=", "[", "\n", "(", "lens", "[", "scaled_dim", "]", ",", "lens", "[", "min_dim", "]", ")", "for", "lens", "in", "zip", "(", "min_lens", ",", "scaled_lens", ")", "\n", "]", "# width, height", "\n", "\n", "images_resized", "=", "[", "\n", "cv2", ".", "resize", "(", "img", ",", "size", ",", "interpolation", "=", "interpolation", ")", "for", "img", ",", "size", "in", "zip", "(", "images", ",", "sizes", ")", "\n", "]", "\n", "if", "not", "boxes", ":", "\n", "        ", "return", "concat_func", "(", "images_resized", ")", ",", "[", "]", "\n", "\n", "", "assert", "len", "(", "images", ")", "==", "len", "(", "\n", "boxes", "\n", ")", ",", "f\"number of images (got {len(images)}) is not matched with number of boxes (got {len(boxes)})\"", "\n", "\n", "box_shifts", "=", "itertools", ".", "accumulate", "(", "\n", "[", "0", "]", "+", "[", "size", "[", "min_dim", "]", "for", "size", "in", "sizes", "[", ":", "-", "1", "]", "]", "\n", ")", "# size in (width, height)", "\n", "boxes_resized", "=", "[", "]", "\n", "for", "boxes_per_img", ",", "img", ",", "img_r", ",", "shift", "in", "zip", "(", "boxes", ",", "images", ",", "images_resized", ",", "box_shifts", ")", ":", "\n", "# x, y, w, h", "\n", "        ", "boxes_per_img", "=", "np", ".", "array", "(", "boxes_per_img", ",", "dtype", "=", "float", ")", "\n", "if", "len", "(", "boxes_per_img", ")", "==", "0", ":", "\n", "            ", "boxes_per_img", "=", "boxes_per_img", ".", "reshape", "(", "(", "0", ",", "4", ")", ")", "\n", "\n", "", "boxes_per_img", "[", ":", ",", "scaled_dim", ":", ":", "2", "]", "*=", "img_r", ".", "shape", "[", "min_dim", "]", "/", "img", ".", "shape", "[", "min_dim", "]", "\n", "boxes_per_img", "[", ":", ",", "min_dim", ":", ":", "2", "]", "*=", "img_r", ".", "shape", "[", "scaled_dim", "]", "/", "img", ".", "shape", "[", "scaled_dim", "]", "\n", "boxes_per_img", "[", ":", ",", "min_dim", "]", "+=", "shift", "\n", "boxes_resized", ".", "append", "(", "boxes_per_img", ")", "\n", "\n", "", "return", "concat_func", "(", "images_resized", ")", ",", "np", ".", "concatenate", "(", "boxes_resized", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czhang0528_MosaicOS.None.mosaic.synthesize": [[67, 82], ["range", "mosaic.concat_min", "mosaic.concat_min", "mosaics_per_row.append", "boxes_per_row.append", "len"], "function", ["home.repos.pwc.inspect_result.czhang0528_MosaicOS.None.mosaic.concat_min", "home.repos.pwc.inspect_result.czhang0528_MosaicOS.None.mosaic.concat_min"], ["", "def", "synthesize", "(", "nrow", ",", "ncol", ",", "images", ",", "boxes", ")", ":", "\n", "    ", "mosaics_per_row", ",", "boxes_per_row", "=", "[", "]", ",", "[", "]", "\n", "for", "row", "in", "range", "(", "nrow", ")", ":", "\n", "        ", "images_row", "=", "images", "[", "row", "*", "ncol", ":", "(", "row", "+", "1", ")", "*", "ncol", "]", "\n", "boxes_row", "=", "boxes", "[", "row", "*", "ncol", ":", "(", "row", "+", "1", ")", "*", "ncol", "]", "\n", "\n", "if", "len", "(", "images_row", ")", "==", "0", ":", "\n", "            ", "break", "\n", "\n", "", "mosaic_row", ",", "boxes_row", "=", "concat_min", "(", "images_row", ",", "boxes_row", ",", "by", "=", "\"horizontal\"", ")", "\n", "mosaics_per_row", ".", "append", "(", "mosaic_row", ")", "\n", "boxes_per_row", ".", "append", "(", "boxes_row", ")", "\n", "\n", "", "mosaic", ",", "boxes", "=", "concat_min", "(", "mosaics_per_row", ",", "boxes_per_row", ",", "by", "=", "\"vertical\"", ")", "\n", "return", "mosaic", ",", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.czhang0528_MosaicOS.None.mosaic.worker_exec": [[84, 129], ["list", "list", "mosaic.synthesize", "args.output_dir.joinpath", "cv2.imwrite", "args.img_dir.joinpath", "cv2.imread", "itertools.chain", "itertools.chain", "str", "str", "numpy.round", "img.is_file", "FileNotFoundError", "str", "img_dict[].split"], "function", ["home.repos.pwc.inspect_result.czhang0528_MosaicOS.None.mosaic.synthesize"], ["", "def", "worker_exec", "(", "args", ",", "img_dicts", ",", "id", ")", ":", "\n", "# img_dicts = images[img_dicts_id]", "\n", "# each dict looks like:", "\n", "# {'license': 4,", "\n", "# 'file_name': '000000397133.jpg',", "\n", "# 'coco_url': 'http://images.cocodataset.org/val2017/000000397133.jpg',", "\n", "# 'height': 427,", "\n", "# 'width': 640,", "\n", "# 'date_captured': '2013-11-14 17:02:52',", "\n", "# 'flickr_url': 'http://farm7.staticflickr.com/6116/6255196340_da26cf2c9e_z.jpg',", "\n", "# 'id': 397133}", "\n", "    ", "imgs", "=", "[", "args", ".", "img_dir", ".", "joinpath", "(", "*", "img_dict", "[", "\"coco_url\"", "]", ".", "split", "(", "\"/\"", ")", "[", "-", "2", ":", "]", ")", "for", "img_dict", "in", "img_dicts", "]", "\n", "for", "img", "in", "imgs", ":", "\n", "        ", "if", "not", "img", ".", "is_file", "(", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "f\"'{img}' does not exist. \"", ")", "\n", "\n", "", "", "imgs", "=", "[", "cv2", ".", "imread", "(", "str", "(", "img", ")", ")", "for", "img", "in", "imgs", "]", "\n", "\n", "img_ids", "=", "[", "img_dict", "[", "\"id\"", "]", "for", "img_dict", "in", "img_dicts", "]", "\n", "bboxes", "=", "[", "[", "ann", "[", "\"bbox\"", "]", "for", "ann", "in", "img_dict", "[", "\"annotations\"", "]", "]", "for", "img_dict", "in", "img_dicts", "]", "\n", "category_ids", "=", "list", "(", "\n", "itertools", ".", "chain", "(", "\n", "*", "[", "[", "ann", "[", "\"category_id\"", "]", "for", "ann", "in", "img_dict", "[", "\"annotations\"", "]", "]", "for", "img_dict", "in", "img_dicts", "]", "\n", ")", "\n", ")", "\n", "iscrowds", "=", "list", "(", "\n", "itertools", ".", "chain", "(", "\n", "*", "[", "[", "ann", "[", "\"iscrowd\"", "]", "for", "ann", "in", "img_dict", "[", "\"annotations\"", "]", "]", "for", "img_dict", "in", "img_dicts", "]", "\n", ")", "\n", ")", "\n", "\n", "mosaic", ",", "bboxes", "=", "synthesize", "(", "args", ".", "nrow", ",", "args", ".", "ncol", ",", "imgs", ",", "bboxes", ")", "\n", "img_path", "=", "args", ".", "output_dir", ".", "joinpath", "(", "\"images\"", ",", "f\"{id:012d}.jpg\"", ")", "\n", "cv2", ".", "imwrite", "(", "str", "(", "img_path", ")", ",", "mosaic", ")", "\n", "\n", "return", "{", "\n", "\"id\"", ":", "id", ",", "\n", "\"file_name\"", ":", "img_path", ".", "name", ",", "\n", "\"coco_url\"", ":", "str", "(", "img_path", ")", ",", "\n", "\"height\"", ":", "mosaic", ".", "shape", "[", "0", "]", ",", "\n", "\"width\"", ":", "mosaic", ".", "shape", "[", "1", "]", ",", "\n", "\"bboxes\"", ":", "np", ".", "round", "(", "bboxes", ",", "2", ")", ",", "\n", "\"category_ids\"", ":", "category_ids", ",", "\n", "\"iscrowds\"", ":", "iscrowds", ",", "\n", "\"original_img_ids\"", ":", "img_ids", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.czhang0528_MosaicOS.None.mosaic.main": [[132, 220], ["print", "json.load", "defaultdict", "args.output_dir.joinpath().mkdir", "functools.partial", "json.dump", "open", "imgid_to_anns[].append", "random.shuffle", "ProcessPoolExecutor", "list", "zip", "open", "args.output_dir.joinpath", "args.output_dir.joinpath.mkdir", "defaultdict", "range", "range", "len", "args.output_dir.joinpath", "tqdm", "img_dict.pop", "img_dict.pop", "img_dict.pop", "len", "len", "annotations_new.append", "args.output_dir.joinpath", "imgid_to_anns[].append", "cv2.imread", "cv2.imwrite", "len", "executor.map", "cv2.rectangle", "str", "range", "len", "numpy.round", "bbox.tolist", "round", "round", "round", "round", "args.output_dir.joinpath.joinpath", "len", "len"], "function", ["None"], ["", "def", "main", "(", "args", ")", ":", "\n", "    ", "import", "functools", "\n", "import", "json", "\n", "import", "random", "\n", "from", "collections", "import", "defaultdict", "\n", "from", "concurrent", ".", "futures", "import", "ProcessPoolExecutor", "\n", "\n", "from", "tqdm", "import", "tqdm", "\n", "\n", "print", "(", "\"Reading coco file...\"", ")", "\n", "coco_file", "=", "json", ".", "load", "(", "open", "(", "args", ".", "coco_file", ")", ")", "\n", "images", ",", "annotations", ",", "categories", "=", "(", "\n", "coco_file", "[", "\"images\"", "]", ",", "\n", "coco_file", "[", "\"annotations\"", "]", ",", "\n", "coco_file", "[", "\"categories\"", "]", ",", "\n", ")", "\n", "del", "coco_file", "\n", "\n", "imgid_to_anns", "=", "defaultdict", "(", "list", ")", "\n", "[", "imgid_to_anns", "[", "ann", "[", "\"image_id\"", "]", "]", ".", "append", "(", "ann", ")", "for", "ann", "in", "annotations", "]", "\n", "for", "img_dict", "in", "images", ":", "\n", "        ", "img_dict", "[", "\"annotations\"", "]", "=", "imgid_to_anns", "[", "img_dict", "[", "\"id\"", "]", "]", "\n", "", "del", "imgid_to_anns", "\n", "\n", "if", "args", ".", "shuffle", ":", "\n", "        ", "random", ".", "shuffle", "(", "images", ")", "\n", "", "images", "=", "[", "\n", "images", "[", "i", ":", "i", "+", "args", ".", "nrow", "*", "args", ".", "ncol", "]", "for", "i", "in", "range", "(", "0", ",", "len", "(", "images", ")", ",", "args", ".", "nrow", "*", "args", ".", "ncol", ")", "\n", "]", "\n", "if", "args", ".", "drop_last", "and", "(", "len", "(", "images", "[", "-", "1", "]", ")", "!=", "args", ".", "nrow", "*", "args", ".", "ncol", ")", ":", "\n", "        ", "images", "=", "images", "[", ":", "-", "1", "]", "\n", "\n", "", "args", ".", "output_dir", ".", "joinpath", "(", "\"images\"", ")", ".", "mkdir", "(", ")", "# not allowed if 'images' exists", "\n", "worker_exec_partial", "=", "functools", ".", "partial", "(", "worker_exec", ",", "args", ")", "\n", "with", "ProcessPoolExecutor", "(", "max_workers", "=", "args", ".", "num_proc", ")", "as", "executor", ":", "\n", "        ", "images_new", "=", "list", "(", "\n", "tqdm", "(", "\n", "executor", ".", "map", "(", "worker_exec_partial", ",", "images", ",", "range", "(", "1", ",", "1", "+", "len", "(", "images", ")", ")", ")", ",", "\n", "total", "=", "len", "(", "images", ")", ",", "\n", ")", "\n", ")", "\n", "\n", "", "annotations_new", "=", "[", "]", "\n", "for", "img_dict", "in", "images_new", ":", "\n", "        ", "bboxes", ",", "category_ids", ",", "iscrowds", "=", "(", "\n", "img_dict", ".", "pop", "(", "\"bboxes\"", ")", ",", "\n", "img_dict", ".", "pop", "(", "\"category_ids\"", ")", ",", "\n", "img_dict", ".", "pop", "(", "\"iscrowds\"", ")", ",", "\n", ")", "\n", "assert", "len", "(", "bboxes", ")", "==", "len", "(", "category_ids", ")", "\n", "for", "bbox", ",", "category_id", ",", "iscrowd", "in", "zip", "(", "bboxes", ",", "category_ids", ",", "iscrowds", ")", ":", "\n", "            ", "annotations_new", ".", "append", "(", "\n", "{", "\n", "\"id\"", ":", "len", "(", "annotations_new", ")", "+", "1", ",", "\n", "\"image_id\"", ":", "img_dict", "[", "\"id\"", "]", ",", "\n", "\"area\"", ":", "np", ".", "round", "(", "bbox", "[", "-", "2", "]", "*", "bbox", "[", "-", "1", "]", ",", "2", ")", ",", "\n", "\"bbox\"", ":", "bbox", ".", "tolist", "(", ")", ",", "\n", "\"segmentation\"", ":", "[", "]", ",", "\n", "\"category_id\"", ":", "category_id", ",", "\n", "\"iscrowd\"", ":", "iscrowd", ",", "\n", "}", "\n", ")", "\n", "\n", "", "", "json", ".", "dump", "(", "\n", "{", "\n", "\"info\"", ":", "\"The mosaic images and annotations are generated by the script from MosaicOS. \"", ",", "\n", "\"images\"", ":", "images_new", ",", "\n", "\"annotations\"", ":", "annotations_new", ",", "\n", "\"categories\"", ":", "categories", ",", "\n", "}", ",", "\n", "open", "(", "args", ".", "output_dir", ".", "joinpath", "(", "\"annotations.json\"", ")", ",", "\"w\"", ")", ",", "\n", ")", "\n", "\n", "if", "args", ".", "demo", ">", "0", ":", "\n", "        ", "demo_save_dir", "=", "args", ".", "output_dir", ".", "joinpath", "(", "\"demo\"", ")", "\n", "demo_save_dir", ".", "mkdir", "(", ")", "\n", "\n", "imgid_to_anns", "=", "defaultdict", "(", "list", ")", "\n", "[", "imgid_to_anns", "[", "ann", "[", "\"image_id\"", "]", "]", ".", "append", "(", "ann", ")", "for", "ann", "in", "annotations_new", "]", "\n", "for", "i", "in", "range", "(", "args", ".", "demo", ")", ":", "\n", "            ", "img", "=", "cv2", ".", "imread", "(", "images_new", "[", "i", "]", "[", "\"coco_url\"", "]", ")", "\n", "\n", "for", "ann", "in", "imgid_to_anns", "[", "images_new", "[", "i", "]", "[", "\"id\"", "]", "]", ":", "\n", "                ", "x", ",", "y", ",", "w", ",", "h", "=", "ann", "[", "\"bbox\"", "]", "\n", "x", ",", "y", ",", "x2", ",", "y2", "=", "round", "(", "x", ")", ",", "round", "(", "y", ")", ",", "round", "(", "x", "+", "w", ")", ",", "round", "(", "y", "+", "h", ")", "\n", "img", "=", "cv2", ".", "rectangle", "(", "img", ",", "(", "x", ",", "y", ")", ",", "(", "x2", ",", "y2", ")", ",", "color", "=", "(", "0", ",", "0", ",", "255", ")", ",", "thickness", "=", "2", ")", "\n", "\n", "", "cv2", ".", "imwrite", "(", "str", "(", "demo_save_dir", ".", "joinpath", "(", "f\"{images_new[i]['id']:012d}.jpg\"", ")", ")", ",", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.czhang0528_MosaicOS.None.mosaic.parse_args": [[222, 238], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "Path", "Path"], "function", ["home.repos.pwc.inspect_result.czhang0528_MosaicOS.None.mosaic.parse_args"], ["", "", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "import", "argparse", "\n", "from", "pathlib", "import", "Path", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "\"Image mosaicking\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--coco-file\"", ",", "required", "=", "True", ",", "type", "=", "Path", ")", "\n", "parser", ".", "add_argument", "(", "\"--img-dir\"", ",", "default", "=", "Path", "(", "\"datasets/coco\"", ")", ",", "type", "=", "Path", ")", "\n", "parser", ".", "add_argument", "(", "\"--output-dir\"", ",", "default", "=", "Path", "(", "\"output_mosaics\"", ")", ",", "type", "=", "Path", ")", "\n", "parser", ".", "add_argument", "(", "\"--num-proc\"", ",", "default", "=", "1", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--nrow\"", ",", "default", "=", "2", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--ncol\"", ",", "default", "=", "2", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--shuffle\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--drop-last\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--demo\"", ",", "default", "=", "0", ",", "type", "=", "int", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]]}