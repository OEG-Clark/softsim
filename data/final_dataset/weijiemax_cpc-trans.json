{"home.repos.pwc.inspect_result.weijiemax_cpc-trans.None.main.main": [[16, 140], ["utils.utils.set_seed", "torch.device", "torch.device", "torch.device", "torch.utils.tensorboard.SummaryWriter", "utils.utils.read_split_data", "utils.utils.read_split_data", "utils.utils.read_split_data", "utils.utils.read_split_data", "model.cpc_dataset.CPCDataset_Multimodal", "model.cpc_dataset.CPCDataset_Multimodal", "min", "print", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "model.cpc_transformer.cpc_transformer_small.to", "torch.LambdaLR", "range", "print", "os.path.exists", "os.makedirs", "str", "str", "str", "str", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "os.path.exists", "torch.load", "torch.load", "torch.load", "print", "torch.SGD", "list", "filter", "torch.SGD", "utils.utils.train_one_epoch", "lr_scheduler.LambdaLR.step", "utils.utils.evaluate", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "os.cpu_count", "model.cpc_transformer.cpc_transformer_small", "create_model().to.load_state_dict", "map", "create_model().to.parameters", "print", "torchvision.transforms.RandomResizedCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "create_model().to.parameters", "create_model().to.head.parameters", "str", "str", "print", "id", "create_model().to.head.parameters", "math.cos"], "function", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.set_seed", "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.read_split_data", "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.read_split_data", "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.read_split_data", "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.read_split_data", "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.train_one_epoch", "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.evaluate", "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.cpc_transformer_small"], ["def", "main", "(", "args", ")", ":", "\n", "    ", "set_seed", "(", "seed", "=", "args", ".", "seed", ")", "\n", "device", "=", "torch", ".", "device", "(", "args", ".", "device", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "suffix", "=", "'-scratch'", "if", "args", ".", "weights", "==", "''", "else", "'-pretrain'", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "\"./logs/weights-\"", "+", "str", "(", "args", ".", "fold", ")", "+", "suffix", ")", "is", "False", ":", "\n", "        ", "os", ".", "makedirs", "(", "\"./logs/weights-\"", "+", "str", "(", "args", ".", "fold", ")", "+", "suffix", ")", "\n", "\n", "", "tb_writer", "=", "SummaryWriter", "(", "'./logs'", ")", "\n", "\n", "train_data_root1", "=", "args", ".", "data_path", "+", "'/White_light/train_fold_'", "+", "str", "(", "args", ".", "fold", ")", "\n", "val_data_root1", "=", "args", ".", "data_path", "+", "'/White_light/val_fold_'", "+", "str", "(", "args", ".", "fold", ")", "\n", "train_data_root2", "=", "args", ".", "data_path", "+", "'/NBI/train_fold_'", "+", "str", "(", "args", ".", "fold", ")", "\n", "val_data_root2", "=", "args", ".", "data_path", "+", "'/NBI/val_fold_'", "+", "str", "(", "args", ".", "fold", ")", "\n", "\n", "train_images_path1", ",", "train_images_label1", "=", "read_split_data", "(", "train_data_root1", ")", "\n", "val_images_path1", ",", "val_images_label1", "=", "read_split_data", "(", "val_data_root1", ")", "\n", "train_images_path2", ",", "train_images_label2", "=", "read_split_data", "(", "train_data_root2", ")", "\n", "val_images_path2", ",", "val_images_label2", "=", "read_split_data", "(", "val_data_root2", ")", "\n", "\n", "assert", "train_images_label1", "==", "train_images_label2", "\n", "assert", "val_images_label1", "==", "val_images_label2", "\n", "\n", "data_transform", "=", "{", "\n", "\"train\"", ":", "transforms", ".", "Compose", "(", "[", "transforms", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "]", ")", ",", "\n", "\"val\"", ":", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ")", "]", ")", "}", "\n", "\n", "train_dataset", "=", "CPCDataset_Multimodal", "(", "images_path1", "=", "train_images_path1", ",", "\n", "images_path2", "=", "train_images_path2", ",", "\n", "images_class", "=", "train_images_label1", ",", "\n", "transform", "=", "data_transform", "[", "\"train\"", "]", ")", "\n", "\n", "val_dataset", "=", "CPCDataset_Multimodal", "(", "images_path1", "=", "val_images_path1", ",", "\n", "images_path2", "=", "val_images_path2", ",", "\n", "images_class", "=", "val_images_label1", ",", "\n", "transform", "=", "data_transform", "[", "\"val\"", "]", ")", "\n", "\n", "batch_size", "=", "args", ".", "batch_size", "\n", "nw", "=", "min", "(", "[", "os", ".", "cpu_count", "(", ")", ",", "batch_size", "if", "batch_size", ">", "1", "else", "0", ",", "4", "]", ")", "# number of workers", "\n", "print", "(", "'Using {} dataloader workers every process'", ".", "format", "(", "nw", ")", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "nw", ",", "\n", "collate_fn", "=", "train_dataset", ".", "collate_fn", ")", "\n", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "val_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "pin_memory", "=", "True", ",", "\n", "num_workers", "=", "nw", ",", "\n", "collate_fn", "=", "val_dataset", ".", "collate_fn", ")", "\n", "\n", "print", "(", "'args.num_classes is '", ",", "args", ".", "num_classes", ")", "\n", "\n", "model", "=", "create_model", "(", "num_classes", "=", "args", ".", "num_classes", ",", "has_logits", "=", "False", ")", ".", "to", "(", "device", ")", "\n", "\n", "if", "args", ".", "weights", "!=", "\"\"", ":", "\n", "        ", "assert", "os", ".", "path", ".", "exists", "(", "args", ".", "weights", ")", ",", "\"weights file: '{}' not exist.\"", ".", "format", "(", "args", ".", "weights", ")", "\n", "weights_dict", "=", "torch", ".", "load", "(", "args", ".", "weights", ",", "map_location", "=", "device", ")", "\n", "del_keys", "=", "[", "'head.weight'", ",", "'head.bias'", "]", "if", "model", ".", "has_logits", "else", "[", "'pre_logits.fc.weight'", ",", "'pre_logits.fc.bias'", ",", "'head.weight'", ",", "'head.bias'", "]", "\n", "for", "k", "in", "del_keys", ":", "\n", "            ", "try", ":", "\n", "                ", "del", "weights_dict", "[", "k", "]", "\n", "", "except", ":", "\n", "                ", "print", "(", "'the model has no key named '", ",", "k", ")", "\n", "", "", "print", "(", "model", ".", "load_state_dict", "(", "weights_dict", ",", "strict", "=", "False", ")", ")", "\n", "\n", "", "if", "'pretrain'", "not", "in", "suffix", ":", "\n", "        ", "pg", "=", "[", "p", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", "]", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "pg", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "5E-5", ")", "\n", "", "else", ":", "\n", "        ", "mlp_params_id", "=", "list", "(", "map", "(", "id", ",", "model", ".", "head", ".", "parameters", "(", ")", ")", ")", "\n", "base_params", "=", "filter", "(", "lambda", "p", ":", "id", "(", "p", ")", "not", "in", "mlp_params_id", ",", "model", ".", "parameters", "(", ")", ")", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "[", "\n", "{", "'params'", ":", "base_params", ",", "'lr'", ":", "args", ".", "lr", "}", ",", "\n", "{", "'params'", ":", "model", ".", "head", ".", "parameters", "(", ")", ",", "'lr'", ":", "args", ".", "lr", "}", "]", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "5E-5", ")", "\n", "\n", "", "lf", "=", "lambda", "x", ":", "(", "(", "1", "+", "math", ".", "cos", "(", "x", "*", "math", ".", "pi", "/", "args", ".", "epochs", ")", ")", "/", "2", ")", "*", "(", "1", "-", "args", ".", "lrf", ")", "+", "args", ".", "lrf", "# cosine", "\n", "scheduler", "=", "lr_scheduler", ".", "LambdaLR", "(", "optimizer", ",", "lr_lambda", "=", "lf", ")", "\n", "\n", "is_best1", "=", "0", "\n", "best_epoch1", "=", "-", "1", "\n", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "if", "epoch", "==", "args", ".", "early_stop_epoch", ":", "\n", "            ", "break", "\n", "# train", "\n", "", "train_total_loss", ",", "train_loss1", ",", "train_loss2", ",", "train_loss3", ",", "train_loss4", ",", "train_acc", "=", "train_one_epoch", "(", "\n", "model", "=", "model", ",", "\n", "optimizer", "=", "optimizer", ",", "\n", "data_loader", "=", "train_loader", ",", "\n", "device", "=", "device", ",", "\n", "epoch", "=", "epoch", ")", "\n", "scheduler", ".", "step", "(", ")", "\n", "# validate", "\n", "val_acc", "=", "evaluate", "(", "model", "=", "model", ",", "data_loader", "=", "val_loader", ",", "device", "=", "device", ",", "epoch", "=", "epoch", ")", "\n", "\n", "tags", "=", "[", "'train_total_loss'", ",", "'train_loss1'", ",", "'train_loss2'", ",", "'train_loss3'", ",", "'train_loss4'", ",", "'train_acc'", ",", "'val_acc'", ",", "\"learning_rate\"", "]", "\n", "tb_writer", ".", "add_scalar", "(", "tags", "[", "0", "]", ",", "train_total_loss", ",", "epoch", ")", "\n", "tb_writer", ".", "add_scalar", "(", "tags", "[", "1", "]", ",", "train_loss1", ",", "epoch", ")", "\n", "tb_writer", ".", "add_scalar", "(", "tags", "[", "2", "]", ",", "train_loss2", ",", "epoch", ")", "\n", "tb_writer", ".", "add_scalar", "(", "tags", "[", "3", "]", ",", "train_loss3", ",", "epoch", ")", "\n", "tb_writer", ".", "add_scalar", "(", "tags", "[", "4", "]", ",", "train_loss4", ",", "epoch", ")", "\n", "tb_writer", ".", "add_scalar", "(", "tags", "[", "5", "]", ",", "train_acc", ",", "epoch", ")", "\n", "tb_writer", ".", "add_scalar", "(", "tags", "[", "6", "]", ",", "val_acc", ",", "epoch", ")", "\n", "tb_writer", ".", "add_scalar", "(", "tags", "[", "7", "]", ",", "optimizer", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", ",", "epoch", ")", "\n", "\n", "if", "val_acc", ">", "is_best1", "and", "val_acc", "<", "train_acc", ":", "\n", "            ", "is_best1", "=", "val_acc", "\n", "best_epoch1", "=", "epoch", "\n", "print", "(", "'epoch {} is currently best for modality 1'", ".", "format", "(", "epoch", ")", ")", "\n", "# torch.save(model.state_dict(), \"./weights-\"+str(args.fold)+suffix+\"/model_best1.pth\")", "\n", "# print('save done.')", "\n", "\n", "", "", "print", "(", "'\\nmodality wl: best epoch is {} and best metric result is {}'", ".", "format", "(", "best_epoch1", ",", "is_best1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.set_seed": [[11, 16], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed"], "function", ["None"], ["def", "set_seed", "(", "seed", "=", "1", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.read_split_data": [[18, 40], ["print", "polyp_class.sort", "dict", "json.dumps", "print", "dict", "open", "json_file.write", "os.path.join", "images_path.extend", "images_label.extend", "every_class_num.append", "os.listdir", "os.path.isdir", "len", "sum", "os.path.join", "enumerate", "os.path.join", "len", "dict.items", "os.listdir", "os.path.splitext"], "function", ["None"], ["", "def", "read_split_data", "(", "root", ":", "str", ")", ":", "\n", "    ", "print", "(", "'start data reading...'", ")", "\n", "polyp_class", "=", "[", "cla", "for", "cla", "in", "os", ".", "listdir", "(", "root", ")", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "root", ",", "cla", ")", ")", "]", "\n", "polyp_class", ".", "sort", "(", ")", "\n", "class_indices", "=", "dict", "(", "(", "k", ",", "v", ")", "for", "v", ",", "k", "in", "enumerate", "(", "polyp_class", ")", ")", "\n", "json_str", "=", "json", ".", "dumps", "(", "dict", "(", "(", "val", ",", "key", ")", "for", "key", ",", "val", "in", "class_indices", ".", "items", "(", ")", ")", ",", "indent", "=", "4", ")", "\n", "with", "open", "(", "'class_indices.json'", ",", "'w'", ")", "as", "json_file", ":", "\n", "        ", "json_file", ".", "write", "(", "json_str", ")", "\n", "\n", "", "images_path", "=", "[", "]", "\n", "images_label", "=", "[", "]", "\n", "every_class_num", "=", "[", "]", "\n", "supported", "=", "[", "\".jpg\"", ",", "\".JPG\"", ",", "\".png\"", ",", "\".PNG\"", "]", "\n", "for", "cla", "in", "polyp_class", ":", "\n", "        ", "cla_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "cla", ")", "\n", "images_path", ".", "extend", "(", "[", "os", ".", "path", ".", "join", "(", "root", ",", "cla", ",", "i", ")", "for", "i", "in", "os", ".", "listdir", "(", "cla_path", ")", "\n", "if", "os", ".", "path", ".", "splitext", "(", "i", ")", "[", "-", "1", "]", "in", "supported", "]", ")", "\n", "images_label", ".", "extend", "(", "[", "class_indices", "[", "cla", "]", "]", "*", "len", "(", "images_path", ")", ")", "\n", "every_class_num", ".", "append", "(", "len", "(", "images_path", ")", ")", "\n", "", "print", "(", "\"{} images were found in the dataset.\"", ".", "format", "(", "sum", "(", "every_class_num", ")", ")", ")", "\n", "\n", "return", "images_path", ",", "images_label", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.train_one_epoch": [[42, 95], ["model.train", "torch.nn.CrossEntropyLoss", "torch.nn.CosineEmbeddingLoss", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "optimizer.zero_grad", "tqdm.tqdm", "enumerate", "model", "torch.eq().sum", "torch.nn.CrossEntropyLoss.", "torch.nn.CrossEntropyLoss.", "torch.nn.CosineEmbeddingLoss.", "loss.backward", "loss.detach", "loss_function.detach", "loss_function.detach", "loss_function_aux.detach", "loss_SAM.detach", "optimizer.step", "optimizer.zero_grad", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "images1.to", "images2.to", "torch.max", "labels.to", "labels.to", "torch.ones().to", "torch.nn.CosineEmbeddingLoss.", "torch.isfinite", "print", "sys.exit", "torch.zeros().to.item", "torch.zeros().to.item", "torch.zeros().to.item", "torch.zeros().to.item", "torch.zeros().to.item", "torch.zeros().to.item", "torch.eq", "torch.ones().to", "torch.zeros().to.item", "torch.zeros().to.item", "torch.zeros().to.item", "torch.zeros().to.item", "torch.zeros().to.item", "torch.zeros().to.item", "labels.to", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "train_one_epoch", "(", "model", ",", "optimizer", ",", "data_loader", ",", "device", ",", "epoch", ",", "norm_coff", "=", "0.3", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "loss_function", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "loss_function_aux", "=", "torch", ".", "nn", ".", "CosineEmbeddingLoss", "(", ")", "\n", "total_loss", "=", "torch", ".", "zeros", "(", "1", ")", ".", "to", "(", "device", ")", "\n", "accu_loss_CLS1", "=", "torch", ".", "zeros", "(", "1", ")", ".", "to", "(", "device", ")", "\n", "accu_loss_CLS2", "=", "torch", ".", "zeros", "(", "1", ")", ".", "to", "(", "device", ")", "\n", "aux_loss_CGA", "=", "torch", ".", "zeros", "(", "1", ")", ".", "to", "(", "device", ")", "\n", "aux_loss_SAM", "=", "torch", ".", "zeros", "(", "1", ")", ".", "to", "(", "device", ")", "\n", "accu_num1", "=", "torch", ".", "zeros", "(", "1", ")", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "sample_num", "=", "0", "\n", "data_loader", "=", "tqdm", "(", "data_loader", ",", "file", "=", "sys", ".", "stdout", ",", "mininterval", "=", "2", ")", "\n", "for", "step", ",", "data", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "        ", "images1", ",", "images2", ",", "labels", "=", "data", "\n", "sample_num", "+=", "images1", ".", "shape", "[", "0", "]", "\n", "\n", "pred1", ",", "pred2", ",", "pred1_cls", ",", "pred2_cls", ",", "attn_token11", ",", "attn_token22", "=", "model", "(", "images1", ".", "to", "(", "device", ")", ",", "images2", ".", "to", "(", "device", ")", ")", "\n", "\n", "pred1_classes", "=", "torch", ".", "max", "(", "pred1", ",", "dim", "=", "1", ")", "[", "1", "]", "\n", "accu_num1", "+=", "torch", ".", "eq", "(", "pred1_classes", ",", "labels", ".", "to", "(", "device", ")", ")", ".", "sum", "(", ")", "\n", "\n", "loss_CLS1", "=", "loss_function", "(", "pred1", ",", "labels", ".", "to", "(", "device", ")", ")", "\n", "loss_CLS2", "=", "loss_function", "(", "pred2", ",", "labels", ".", "to", "(", "device", ")", ")", "\n", "loss_CGA", "=", "loss_function_aux", "(", "pred1_cls", ",", "pred2_cls", ",", "torch", ".", "ones", "(", "1", ")", ".", "to", "(", "device", ")", ")", "\n", "loss_SAM", "=", "loss_function_aux", "(", "attn_token11", ",", "attn_token22", ",", "torch", ".", "ones", "(", "1", ")", ".", "to", "(", "device", ")", ")", "*", "norm_coff", "\n", "loss", "=", "loss_CLS1", "+", "loss_CLS2", "+", "loss_CGA", "+", "loss_SAM", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "total_loss", "+=", "loss", ".", "detach", "(", ")", "\n", "accu_loss_CLS1", "+=", "loss_CLS1", ".", "detach", "(", ")", "\n", "accu_loss_CLS2", "+=", "loss_CLS2", ".", "detach", "(", ")", "\n", "aux_loss_CGA", "+=", "loss_CGA", ".", "detach", "(", ")", "\n", "aux_loss_SAM", "+=", "loss_SAM", ".", "detach", "(", ")", "\n", "\n", "data_loader", ".", "desc", "=", "\"[train epoch {}] loss: {:.3f}, loss_CLS1: {:.3f}, loss_CLS2: {:.3f}, loss_CGA: {:.3f}, loss_SAM: {:.3f}, acc: {:.3f}\"", ".", "format", "(", "\n", "epoch", ",", "\n", "total_loss", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "\n", "accu_loss_CLS1", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "\n", "accu_loss_CLS2", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "\n", "aux_loss_CGA", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "\n", "aux_loss_SAM", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "\n", "accu_num1", ".", "item", "(", ")", "/", "sample_num", ")", "\n", "\n", "if", "not", "torch", ".", "isfinite", "(", "loss", ")", ":", "\n", "            ", "print", "(", "'WARNING: non-finite loss, ending training '", ",", "loss", ")", "\n", "sys", ".", "exit", "(", "1", ")", "\n", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "return", "total_loss", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "accu_loss_CLS1", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "accu_loss_CLS2", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "aux_loss_CGA", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "aux_loss_SAM", ".", "item", "(", ")", "/", "(", "step", "+", "1", ")", ",", "accu_num1", ".", "item", "(", ")", "/", "sample_num", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.utils.utils.evaluate": [[97, 115], ["torch.no_grad", "model.eval", "torch.zeros().to", "tqdm.tqdm", "enumerate", "model", "torch.eq().sum", "torch.zeros().to.item", "torch.zeros", "images1.to", "images2.to", "torch.max", "torch.eq", "torch.zeros().to.item", "labels.to"], "function", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "evaluate", "(", "model", ",", "data_loader", ",", "device", ",", "epoch", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "accu_num1", "=", "torch", ".", "zeros", "(", "1", ")", ".", "to", "(", "device", ")", "\n", "\n", "sample_num", "=", "0", "\n", "data_loader", "=", "tqdm", "(", "data_loader", ",", "file", "=", "sys", ".", "stdout", ",", "mininterval", "=", "2", ")", "\n", "for", "step", ",", "data", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "        ", "images1", ",", "images2", ",", "labels", "=", "data", "\n", "sample_num", "+=", "images1", ".", "shape", "[", "0", "]", "\n", "\n", "pred", "=", "model", "(", "images1", ".", "to", "(", "device", ")", ",", "images2", ".", "to", "(", "device", ")", ")", "\n", "pred1_classes", "=", "torch", ".", "max", "(", "pred", "[", "0", "]", ",", "dim", "=", "1", ")", "[", "1", "]", "\n", "accu_num1", "+=", "torch", ".", "eq", "(", "pred1_classes", ",", "labels", ".", "to", "(", "device", ")", ")", ".", "sum", "(", ")", "\n", "\n", "data_loader", ".", "desc", "=", "\"[valid epoch {}] acc: {:.3f}\"", ".", "format", "(", "epoch", ",", "accu_num1", ".", "item", "(", ")", "/", "sample_num", ")", "\n", "\n", "", "return", "accu_num1", ".", "item", "(", ")", "/", "sample_num", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_dataset.CPCDataset_Multimodal.__init__": [[7, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "images_path1", ":", "list", ",", "images_path2", ":", "list", ",", "images_class", ":", "list", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "images_path1", "=", "images_path1", "\n", "self", ".", "images_path2", "=", "images_path2", "\n", "self", ".", "images_class", "=", "images_class", "\n", "self", ".", "transform", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_dataset.CPCDataset_Multimodal.__len__": [[13, 15], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images_path1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_dataset.CPCDataset_Multimodal.__getitem__": [[16, 30], ["PIL.Image.open", "PIL.Image.open", "ValueError", "ValueError", "cpc_dataset.CPCDataset_Multimodal.transform", "cpc_dataset.CPCDataset_Multimodal.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "img1", "=", "Image", ".", "open", "(", "self", ".", "images_path1", "[", "item", "]", ")", "\n", "img2", "=", "Image", ".", "open", "(", "self", ".", "images_path2", "[", "item", "]", ")", "\n", "if", "img1", ".", "mode", "!=", "'RGB'", ":", "\n", "            ", "raise", "ValueError", "(", "\"image1: {} isn't RGB mode.\"", ".", "format", "(", "self", ".", "images_path1", "[", "item", "]", ")", ")", "\n", "", "if", "img2", ".", "mode", "!=", "'RGB'", ":", "\n", "            ", "raise", "ValueError", "(", "\"image2: {} isn't RGB mode.\"", ".", "format", "(", "self", ".", "images_path2", "[", "item", "]", ")", ")", "\n", "", "label", "=", "self", ".", "images_class", "[", "item", "]", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img1", "=", "self", ".", "transform", "(", "img1", ")", "\n", "img2", "=", "self", ".", "transform", "(", "img2", ")", "\n", "\n", "", "return", "img1", ",", "img2", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_dataset.CPCDataset_Multimodal.collate_fn": [[31, 38], ["tuple", "torch.stack", "torch.stack", "torch.as_tensor", "zip"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collate_fn", "(", "batch", ")", ":", "\n", "        ", "images1", ",", "images2", ",", "labels", "=", "tuple", "(", "zip", "(", "*", "batch", ")", ")", "\n", "images1", "=", "torch", ".", "stack", "(", "images1", ",", "dim", "=", "0", ")", "\n", "images2", "=", "torch", ".", "stack", "(", "images2", ",", "dim", "=", "0", ")", "\n", "labels", "=", "torch", ".", "as_tensor", "(", "labels", ")", "\n", "return", "images1", ",", "images2", ",", "labels", "\n", "", "", ""]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.DropPath.__init__": [[24, 27], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "drop_prob", "=", "None", ")", ":", "\n", "        ", "super", "(", "DropPath", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "drop_prob", "=", "drop_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.DropPath.forward": [[28, 30], ["cpc_transformer.drop_path"], "methods", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.drop_path"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "drop_path", "(", "x", ",", "self", ".", "drop_prob", ",", "self", ".", "training", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.PatchEmbed.__init__": [[33, 44], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "in_c", "=", "3", ",", "embed_dim", "=", "768", ",", "norm_layer", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "img_size", "=", "(", "img_size", ",", "img_size", ")", "\n", "patch_size", "=", "(", "patch_size", ",", "patch_size", ")", "\n", "self", ".", "img_size", "=", "img_size", "\n", "self", ".", "patch_size", "=", "patch_size", "\n", "self", ".", "grid_size", "=", "(", "img_size", "[", "0", "]", "//", "patch_size", "[", "0", "]", ",", "img_size", "[", "1", "]", "//", "patch_size", "[", "1", "]", ")", "\n", "self", ".", "num_patches", "=", "self", ".", "grid_size", "[", "0", "]", "*", "self", ".", "grid_size", "[", "1", "]", "\n", "\n", "self", ".", "proj", "=", "nn", ".", "Conv2d", "(", "in_c", ",", "embed_dim", ",", "kernel_size", "=", "patch_size", ",", "stride", "=", "patch_size", ")", "\n", "self", ".", "norm", "=", "norm_layer", "(", "embed_dim", ")", "if", "norm_layer", "else", "nn", ".", "Identity", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.PatchEmbed.forward": [[45, 53], ["cpc_transformer.PatchEmbed.proj().flatten().transpose", "cpc_transformer.PatchEmbed.norm", "cpc_transformer.PatchEmbed.proj().flatten", "cpc_transformer.PatchEmbed.proj"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "assert", "H", "==", "self", ".", "img_size", "[", "0", "]", "and", "W", "==", "self", ".", "img_size", "[", "1", "]", ",", "f\"Input image size ({H}*{W}) doesn't match model ({self.img_size[0]}*{self.img_size[1]}).\"", "\n", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", ".", "flatten", "(", "2", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "x", "=", "self", ".", "norm", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.Attention.__init__": [[56, 71], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "num_heads", "=", "8", ",", "\n", "qkv_bias", "=", "False", ",", "\n", "qk_scale", "=", "None", ",", "\n", "attn_drop_ratio", "=", "0.", ",", "\n", "proj_drop_ratio", "=", "0.", ")", ":", "\n", "        ", "super", "(", "Attention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "head_dim", "=", "dim", "//", "num_heads", "\n", "self", ".", "scale", "=", "qk_scale", "or", "head_dim", "**", "-", "0.5", "\n", "self", ".", "qkv", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", "*", "3", ",", "bias", "=", "qkv_bias", ")", "\n", "self", ".", "attn_drop", "=", "nn", ".", "Dropout", "(", "attn_drop_ratio", ")", "\n", "self", ".", "proj", "=", "nn", ".", "Linear", "(", "dim", ",", "dim", ")", "\n", "self", ".", "proj_drop", "=", "nn", ".", "Dropout", "(", "proj_drop_ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.Attention.forward": [[72, 85], ["cpc_transformer.Attention.qkv().reshape().permute", "cpc_transformer.Attention.softmax", "cpc_transformer.Attention.attn_drop", "cpc_transformer.Attention.proj", "cpc_transformer.Attention.proj_drop", "cpc_transformer.Attention.qkv().reshape", "k.transpose", "cpc_transformer.Attention.qkv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "B", ",", "N", ",", "C", "=", "x", ".", "shape", "\n", "qkv", "=", "self", ".", "qkv", "(", "x", ")", ".", "reshape", "(", "B", ",", "N", ",", "3", ",", "self", ".", "num_heads", ",", "C", "//", "self", ".", "num_heads", ")", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ")", "\n", "q", ",", "k", ",", "v", "=", "qkv", "[", "0", "]", ",", "qkv", "[", "1", "]", ",", "qkv", "[", "2", "]", "\n", "\n", "attn", "=", "(", "q", "@", "k", ".", "transpose", "(", "-", "2", ",", "-", "1", ")", ")", "*", "self", ".", "scale", "\n", "attn", "=", "attn", ".", "softmax", "(", "dim", "=", "-", "1", ")", "\n", "attn", "=", "self", ".", "attn_drop", "(", "attn", ")", "\n", "\n", "x", "=", "(", "attn", "@", "v", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "reshape", "(", "B", ",", "N", ",", "C", ")", "\n", "x", "=", "self", ".", "proj", "(", "x", ")", "\n", "x", "=", "self", ".", "proj_drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.Mlp.__init__": [[88, 96], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "act_layer", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "hidden_features", "=", "None", ",", "out_features", "=", "None", ",", "act_layer", "=", "nn", ".", "GELU", ",", "drop", "=", "0.", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "out_features", "=", "out_features", "or", "in_features", "\n", "hidden_features", "=", "hidden_features", "or", "in_features", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "in_features", ",", "hidden_features", ")", "\n", "self", ".", "act", "=", "act_layer", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "hidden_features", ",", "out_features", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "drop", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.Mlp.forward": [[97, 104], ["cpc_transformer.Mlp.fc1", "cpc_transformer.Mlp.act", "cpc_transformer.Mlp.drop", "cpc_transformer.Mlp.fc2", "cpc_transformer.Mlp.drop"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "x", "=", "self", ".", "fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.Block.__init__": [[107, 126], ["torch.Module.__init__", "norm_layer", "cpc_transformer.Attention", "norm_layer", "int", "cpc_transformer.Mlp", "cpc_transformer.DropPath", "torch.Identity", "torch.Identity"], "methods", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "dim", ",", "\n", "num_heads", ",", "\n", "mlp_ratio", "=", "4.", ",", "\n", "qkv_bias", "=", "False", ",", "\n", "qk_scale", "=", "None", ",", "\n", "drop_ratio", "=", "0.", ",", "\n", "attn_drop_ratio", "=", "0.", ",", "\n", "drop_path_ratio", "=", "0.", ",", "\n", "act_layer", "=", "nn", ".", "GELU", ",", "\n", "norm_layer", "=", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "norm1", "=", "norm_layer", "(", "dim", ")", "\n", "self", ".", "attn", "=", "Attention", "(", "dim", ",", "num_heads", "=", "num_heads", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "attn_drop_ratio", "=", "attn_drop_ratio", ",", "proj_drop_ratio", "=", "drop_ratio", ")", "\n", "self", ".", "drop_path", "=", "DropPath", "(", "drop_path_ratio", ")", "if", "drop_path_ratio", ">", "0.", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "norm2", "=", "norm_layer", "(", "dim", ")", "\n", "mlp_hidden_dim", "=", "int", "(", "dim", "*", "mlp_ratio", ")", "\n", "self", ".", "mlp", "=", "Mlp", "(", "in_features", "=", "dim", ",", "hidden_features", "=", "mlp_hidden_dim", ",", "act_layer", "=", "act_layer", ",", "drop", "=", "drop_ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.Block.forward": [[127, 131], ["cpc_transformer.Block.drop_path", "cpc_transformer.Block.drop_path", "cpc_transformer.Block.attn", "cpc_transformer.Block.mlp", "cpc_transformer.Block.norm1", "cpc_transformer.Block.norm2"], "methods", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.drop_path", "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.drop_path"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "attn", "(", "self", ".", "norm1", "(", "x", ")", ")", ")", "\n", "x", "=", "x", "+", "self", ".", "drop_path", "(", "self", ".", "mlp", "(", "self", ".", "norm2", "(", "x", ")", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.__init__": [[134, 188], ["torch.Module.__init__", "embed_layer", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Dropout", "torch.Dropout", "torch.Sequential", "torch.Sequential", "norm_layer", "torch.MultiheadAttention", "torch.MultiheadAttention", "torch.init.trunc_normal_", "torch.init.trunc_normal_", "torch.init.trunc_normal_", "torch.init.trunc_normal_", "cpc_transformer.VisionTransformer.apply", "functools.partial", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Parameter", "torch.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "x.item", "torch.Sequential", "torch.Sequential", "torch.Identity", "torch.Identity", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "torch.init.trunc_normal_", "torch.init.trunc_normal_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "collections.OrderedDict", "torch.Linear", "torch.Linear", "torch.Identity", "torch.Identity", "cpc_transformer.Block", "range", "torch.Linear", "torch.Linear", "torch.Tanh", "torch.Tanh"], "methods", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_size", "=", "224", ",", "patch_size", "=", "16", ",", "in_c", "=", "3", ",", "num_classes", "=", "1000", ",", "\n", "embed_dim", "=", "768", ",", "depth", "=", "12", ",", "num_heads", "=", "12", ",", "mlp_ratio", "=", "4.0", ",", "qkv_bias", "=", "True", ",", "\n", "qk_scale", "=", "None", ",", "representation_size", "=", "None", ",", "distilled", "=", "False", ",", "drop_ratio", "=", "0.", ",", "\n", "attn_drop_ratio", "=", "0.", ",", "drop_path_ratio", "=", "0.", ",", "embed_layer", "=", "PatchEmbed", ",", "norm_layer", "=", "None", ",", "\n", "act_layer", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", "VisionTransformer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "num_features", "=", "self", ".", "embed_dim", "=", "embed_dim", "\n", "self", ".", "num_tokens", "=", "2", "if", "distilled", "else", "1", "\n", "norm_layer", "=", "norm_layer", "or", "partial", "(", "nn", ".", "LayerNorm", ",", "eps", "=", "1e-6", ")", "\n", "act_layer", "=", "act_layer", "or", "nn", ".", "GELU", "\n", "\n", "self", ".", "patch_embed", "=", "embed_layer", "(", "img_size", "=", "img_size", ",", "patch_size", "=", "patch_size", ",", "in_c", "=", "in_c", ",", "embed_dim", "=", "embed_dim", ")", "\n", "num_patches", "=", "self", ".", "patch_embed", ".", "num_patches", "\n", "\n", "self", ".", "cls_token", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "1", ",", "embed_dim", ")", ")", "\n", "\n", "self", ".", "dist_token", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "1", ",", "embed_dim", ")", ")", "if", "distilled", "else", "None", "\n", "self", ".", "pos_embed", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "num_patches", "+", "self", ".", "num_tokens", ",", "embed_dim", ")", ")", "\n", "self", ".", "pos_drop", "=", "nn", ".", "Dropout", "(", "p", "=", "drop_ratio", ")", "\n", "\n", "dpr", "=", "[", "x", ".", "item", "(", ")", "for", "x", "in", "torch", ".", "linspace", "(", "0", ",", "drop_path_ratio", ",", "depth", ")", "]", "\n", "self", ".", "blocks", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "Block", "(", "dim", "=", "embed_dim", ",", "num_heads", "=", "num_heads", ",", "mlp_ratio", "=", "mlp_ratio", ",", "qkv_bias", "=", "qkv_bias", ",", "qk_scale", "=", "qk_scale", ",", "\n", "drop_ratio", "=", "drop_ratio", ",", "attn_drop_ratio", "=", "attn_drop_ratio", ",", "drop_path_ratio", "=", "dpr", "[", "i", "]", ",", "\n", "norm_layer", "=", "norm_layer", ",", "act_layer", "=", "act_layer", ")", "\n", "for", "i", "in", "range", "(", "depth", ")", "\n", "]", ")", "\n", "self", ".", "norm", "=", "norm_layer", "(", "embed_dim", ")", "\n", "self", ".", "SAM", "=", "nn", ".", "MultiheadAttention", "(", "embed_dim", ",", "num_heads", ",", "dropout", "=", "0.1", ")", "\n", "\n", "if", "representation_size", "and", "not", "distilled", ":", "\n", "            ", "self", ".", "has_logits", "=", "True", "\n", "self", ".", "num_features", "=", "representation_size", "\n", "self", ".", "pre_logits", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "\"fc\"", ",", "nn", ".", "Linear", "(", "embed_dim", ",", "representation_size", ")", ")", ",", "\n", "(", "\"act\"", ",", "nn", ".", "Tanh", "(", ")", ")", "\n", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "has_logits", "=", "False", "\n", "self", ".", "pre_logits", "=", "nn", ".", "Identity", "(", ")", "\n", "\n", "", "self", ".", "head", "=", "nn", ".", "Linear", "(", "self", ".", "num_features", ",", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "self", ".", "head_dist", "=", "None", "\n", "if", "distilled", ":", "\n", "            ", "self", ".", "head_dist", "=", "nn", ".", "Linear", "(", "self", ".", "embed_dim", ",", "self", ".", "num_classes", ")", "if", "num_classes", ">", "0", "else", "nn", ".", "Identity", "(", ")", "\n", "\n", "", "nn", ".", "init", ".", "trunc_normal_", "(", "self", ".", "pos_embed", ",", "std", "=", "0.02", ")", "\n", "if", "self", ".", "dist_token", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "trunc_normal_", "(", "self", ".", "dist_token", ",", "std", "=", "0.02", ")", "\n", "\n", "", "nn", ".", "init", ".", "trunc_normal_", "(", "self", ".", "cls_token", ",", "std", "=", "0.02", ")", "\n", "self", ".", "apply", "(", "_init_vit_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.forward_features": [[189, 207], ["cpc_transformer.VisionTransformer.patch_embed", "cpc_transformer.VisionTransformer.patch_embed", "cpc_transformer.VisionTransformer.cls_token.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "cpc_transformer.VisionTransformer.pos_drop", "cpc_transformer.VisionTransformer.blocks", "cpc_transformer.VisionTransformer.norm", "cpc_transformer.VisionTransformer.pos_drop", "cpc_transformer.VisionTransformer.blocks", "cpc_transformer.VisionTransformer.norm", "cpc_transformer.VisionTransformer.pre_logits", "cpc_transformer.VisionTransformer.pre_logits", "cpc_transformer.VisionTransformer.pre_logits", "cpc_transformer.VisionTransformer.pre_logits"], "methods", ["None"], ["", "def", "forward_features", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "x1", "=", "self", ".", "patch_embed", "(", "x1", ")", "\n", "x2", "=", "self", ".", "patch_embed", "(", "x2", ")", "\n", "\n", "cls_token", "=", "self", ".", "cls_token", ".", "expand", "(", "x1", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "x1", "=", "torch", ".", "cat", "(", "(", "cls_token", ",", "x1", ")", ",", "dim", "=", "1", ")", "\n", "x2", "=", "torch", ".", "cat", "(", "(", "cls_token", ",", "x2", ")", ",", "dim", "=", "1", ")", "\n", "\n", "x1", "=", "self", ".", "pos_drop", "(", "x1", "+", "self", ".", "pos_embed", ")", "\n", "x1", "=", "self", ".", "blocks", "(", "x1", ")", "\n", "x1", "=", "self", ".", "norm", "(", "x1", ")", "\n", "\n", "x2", "=", "self", ".", "pos_drop", "(", "x2", "+", "self", ".", "pos_embed", ")", "\n", "x2", "=", "self", ".", "blocks", "(", "x2", ")", "\n", "x2", "=", "self", ".", "norm", "(", "x2", ")", "\n", "\n", "return", "self", ".", "pre_logits", "(", "x1", "[", ":", ",", "0", "]", ")", ",", "self", ".", "pre_logits", "(", "x1", "[", ":", ",", "1", ":", "]", ")", ",", "self", ".", "pre_logits", "(", "x2", "[", ":", ",", "0", "]", ")", ",", "self", ".", "pre_logits", "(", "x2", "[", ":", ",", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.forward": [[208, 228], ["cpc_transformer.VisionTransformer.forward_features", "cpc_transformer.VisionTransformer.SAM", "cpc_transformer.VisionTransformer.SAM", "cpc_transformer.VisionTransformer.head", "cpc_transformer.VisionTransformer.head", "attn_output_weights11.squeeze", "attn_output_weights22.squeeze", "cpc_transformer.VisionTransformer.head", "cpc_transformer.VisionTransformer.head_dist", "cpc_transformer.VisionTransformer.head", "cpc_transformer.VisionTransformer.head_dist", "cls_token1.unsqueeze", "patch_embed1.transpose", "patch_embed1.transpose", "cls_token2.unsqueeze", "patch_embed2.transpose", "patch_embed2.transpose", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting", "torch.jit.is_scripting"], "methods", ["home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.VisionTransformer.forward_features"], ["", "def", "forward", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "\n", "        ", "cls_token1", ",", "patch_embed1", ",", "cls_token2", ",", "patch_embed2", "=", "self", ".", "forward_features", "(", "x1", ",", "x2", ")", "\n", "\n", "if", "self", ".", "head_dist", "is", "not", "None", ":", "\n", "            ", "x1", ",", "x1_dist", "=", "self", ".", "head", "(", "x1", "[", "0", "]", ")", ",", "self", ".", "head_dist", "(", "x1", "[", "1", "]", ")", "\n", "x2", ",", "x2_dist", "=", "self", ".", "head", "(", "x2", "[", "0", "]", ")", ",", "self", ".", "head_dist", "(", "x2", "[", "1", "]", ")", "\n", "if", "self", ".", "training", "and", "not", "torch", ".", "jit", ".", "is_scripting", "(", ")", ":", "\n", "                ", "return", "x1", ",", "x1_dist", ",", "x2", ",", "x2_dist", "\n", "", "else", ":", "\n", "                ", "return", "(", "x1", "+", "x1_dist", ")", "/", "2", ",", "(", "x2", "+", "x2_dist", ")", "/", "2", "\n", "", "", "else", ":", "\n", "# (n1,b,c) (n2,b,c) (n2,b,c) -> out:(n1,b,c) attn_map:(b,n1,n2)", "\n", "            ", "_", ",", "attn_output_weights11", "=", "self", ".", "SAM", "(", "cls_token1", ".", "unsqueeze", "(", "0", ")", ",", "patch_embed1", ".", "transpose", "(", "1", ",", "0", ")", ",", "patch_embed1", ".", "transpose", "(", "1", ",", "0", ")", ")", "\n", "_", ",", "attn_output_weights22", "=", "self", ".", "SAM", "(", "cls_token2", ".", "unsqueeze", "(", "0", ")", ",", "patch_embed2", ".", "transpose", "(", "1", ",", "0", ")", ",", "patch_embed2", ".", "transpose", "(", "1", ",", "0", ")", ")", "\n", "\n", "pred1", "=", "self", ".", "head", "(", "cls_token1", ")", "\n", "pred2", "=", "self", ".", "head", "(", "cls_token2", ")", "\n", "\n", "", "return", "pred1", ",", "pred2", ",", "cls_token1", ",", "cls_token2", ",", "attn_output_weights11", ".", "squeeze", "(", ")", ",", "attn_output_weights22", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.drop_path": [[12, 21], ["random_tensor.floor_", "torch.rand", "torch.rand", "x.div"], "function", ["None"], ["def", "drop_path", "(", "x", ",", "drop_prob", ":", "float", "=", "0.", ",", "training", ":", "bool", "=", "False", ")", ":", "\n", "    ", "if", "drop_prob", "==", "0.", "or", "not", "training", ":", "\n", "        ", "return", "x", "\n", "", "keep_prob", "=", "1", "-", "drop_prob", "\n", "shape", "=", "(", "x", ".", "shape", "[", "0", "]", ",", ")", "+", "(", "1", ",", ")", "*", "(", "x", ".", "ndim", "-", "1", ")", "\n", "random_tensor", "=", "keep_prob", "+", "torch", ".", "rand", "(", "shape", ",", "dtype", "=", "x", ".", "dtype", ",", "device", "=", "x", ".", "device", ")", "\n", "random_tensor", ".", "floor_", "(", ")", "\n", "output", "=", "x", ".", "div", "(", "keep_prob", ")", "*", "random_tensor", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer._init_vit_weights": [[230, 242], ["isinstance", "torch.init.trunc_normal_", "isinstance", "torch.init.zeros_", "torch.init.kaiming_normal_", "isinstance", "torch.init.zeros_", "torch.init.zeros_", "torch.init.ones_"], "function", ["None"], ["", "", "def", "_init_vit_weights", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "nn", ".", "init", ".", "trunc_normal_", "(", "m", ".", "weight", ",", "std", "=", ".01", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "\"fan_out\"", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "LayerNorm", ")", ":", "\n", "        ", "nn", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "nn", ".", "init", ".", "ones_", "(", "m", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.weijiemax_cpc-trans.model.cpc_transformer.cpc_transformer_small": [[244, 253], ["cpc_transformer.VisionTransformer"], "function", ["None"], ["", "", "def", "cpc_transformer_small", "(", "num_classes", ",", "has_logits", ":", "bool", "=", "True", ")", ":", "\n", "    ", "model", "=", "VisionTransformer", "(", "img_size", "=", "224", ",", "\n", "patch_size", "=", "16", ",", "\n", "embed_dim", "=", "384", ",", "\n", "depth", "=", "12", ",", "\n", "num_heads", "=", "6", ",", "\n", "representation_size", "=", "384", "if", "has_logits", "else", "None", ",", "\n", "num_classes", "=", "num_classes", ")", "\n", "return", "model", "\n", "", ""]]}