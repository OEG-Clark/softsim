{"home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.utils.submit.save_predictions": [[4, 8], ["pandas.DataFrame", "pd.DataFrame.to_csv"], "function", ["None"], ["def", "save_predictions", "(", "name", ",", "predictions", ",", "original_data", ")", ":", "\n", "    ", "original_data", "[", ":", ",", "2", "]", "=", "predictions", "\n", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "original_data", ")", "\n", "dataframe", ".", "to_csv", "(", "name", "+", "'.csv'", ",", "sep", "=", "','", ",", "header", "=", "False", ",", "index", "=", "False", ",", "quoting", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.utils.submit.save_predictions_with_probabilities": [[9, 16], ["pandas.DataFrame", "pd.DataFrame.insert", "pd.DataFrame.insert", "pd.DataFrame.insert", "pd.DataFrame.insert", "pd.DataFrame.to_csv"], "function", ["None"], ["", "def", "save_predictions_with_probabilities", "(", "name", ",", "predictions", ",", "original_data", ",", "labels", ",", "probabilities", ")", ":", "\n", "    ", "dataframe", "=", "pd", ".", "DataFrame", "(", "data", "=", "original_data", "[", ":", ",", ":", "2", "]", ")", "\n", "dataframe", ".", "insert", "(", "2", ",", "2", ",", "probabilities", "[", ":", ",", "0", "]", ")", "\n", "dataframe", ".", "insert", "(", "3", ",", "3", ",", "probabilities", "[", ":", ",", "1", "]", ")", "\n", "dataframe", ".", "insert", "(", "4", ",", "4", ",", "predictions", ")", "\n", "dataframe", ".", "insert", "(", "5", ",", "5", ",", "labels", ")", "\n", "dataframe", ".", "to_csv", "(", "name", "+", "'.csv'", ",", "sep", "=", "','", ",", "header", "=", "False", ",", "index", "=", "False", ",", "quoting", "=", "2", ")", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.utils.batch.sort_by_lengths": [[3, 14], ["lengths.sort", "sorted_idx.sort"], "function", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.sort", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.sort"], ["def", "sort_by_lengths", "(", "lengths", ")", ":", "\n", "    ", "sorted_lengths", ",", "sorted_idx", "=", "lengths", ".", "sort", "(", "descending", "=", "True", ")", "\n", "_", ",", "reversed_idx", "=", "sorted_idx", ".", "sort", "(", "descending", "=", "True", ")", "\n", "\n", "def", "sort", "(", "iterable", ")", ":", "\n", "        ", "return", "iterable", "[", "sorted_idx", "]", "\n", "\n", "", "def", "unsort", "(", "iterable", ")", ":", "\n", "        ", "return", "iterable", "[", "reversed_idx", "]", "[", "sorted_idx", "]", "[", "reversed_idx", "]", "\n", "\n", "", "return", "sorted_lengths", ",", "sort", ",", "unsort", "\n", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.utils.model_cache.save_model": [[4, 12], ["print", "torch.save"], "function", ["None"], ["def", "save_model", "(", "epoch", ",", "model", ",", "optimizer", ",", "loss", ",", "path", ")", ":", "\n", "    ", "print", "(", "'Saving model...'", ")", "\n", "torch", ".", "save", "(", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'model'", ":", "model", ",", "\n", "'optimizer'", ":", "optimizer", ",", "\n", "'loss'", ":", "loss", "\n", "}", ",", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.utils.model_cache.load_model": [[14, 23], ["torch.cuda.is_available", "torch.load", "torch.load"], "function", ["None"], ["", "def", "load_model", "(", "path", ")", ":", "\n", "    ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "path", ")", "\n", "", "else", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "path", ",", "map_location", "=", "'cpu'", ")", "\n", "", "model", "=", "checkpoint", "[", "'model'", "]", "\n", "optimizer", "=", "checkpoint", "[", "'optimizer'", "]", "\n", "\n", "return", "model", ",", "optimizer", "\n", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.utils.labels.class_weigths": [[7, 12], ["numpy.unique", "torch.FloatTensor", "zip", "numpy.unique", "sklearn.utils.compute_class_weight", "sorted"], "function", ["None"], ["def", "class_weigths", "(", "y", ")", ":", "\n", "    ", "labels", "=", "np", ".", "unique", "(", "y", ")", "\n", "weights", "=", "{", "cls", ":", "weight", "for", "cls", ",", "weight", "in", "zip", "(", "np", ".", "unique", "(", "y", ")", ",", "compute_class_weight", "(", "'balanced'", ",", "labels", ",", "y", ")", ")", "}", "\n", "\n", "return", "torch", ".", "FloatTensor", "(", "[", "weights", "[", "key", "]", "for", "key", "in", "sorted", "(", "labels", ")", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.datasets.classification_dataset.ClassificationDataset.__init__": [[5, 18], ["basic_dataset.BasicDataset.__init__", "classification_dataset.ClassificationDataset.process_data_with_vocabulary"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.models.rnn_classifier.RNNClassifier.__init__", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.datasets.basic_dataset.BasicDataset.process_data_with_vocabulary"], ["    ", "def", "__init__", "(", "self", ",", "x", ",", "y", ",", "preprocessing", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        Class representing dataset for classification tasks\n        Args:\n            x (): list of training samples\n            y (): list of training labels\n            preprocessing (method): method used for preprocessing, if None tokenize from Basic dataset is used\n        \"\"\"", "\n", "super", "(", "ClassificationDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "preprocessing", "=", "self", ".", "tokenize", "if", "preprocessing", "is", "None", "else", "preprocessing", "\n", "self", ".", "data", ",", "self", ".", "vocab", "=", "self", ".", "process_data_with_vocabulary", "(", "x", ")", "\n", "self", ".", "labels", "=", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.datasets.classification_dataset.ClassificationDataset.__getitem__": [[19, 24], ["len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "sample", ",", "label", "=", "self", ".", "data", "[", "index", "]", ",", "self", ".", "labels", "[", "index", "]", "\n", "length", "=", "len", "(", "self", ".", "data", "[", "index", "]", ")", "\n", "\n", "return", "sample", ",", "label", ",", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.datasets.classification_dataset.ClassificationDataset.__len__": [[25, 27], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "data", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.datasets.basic_dataset.BasicDataset.__init__": [[11, 14], ["torch.utils.data.dataset.Dataset.__init__"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.models.rnn_classifier.RNNClassifier.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BasicDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "preprocessing", "=", "self", ".", "tokenize", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.datasets.basic_dataset.BasicDataset.tokenize": [[15, 17], ["text.lower().split", "text.lower"], "methods", ["None"], ["", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "return", "text", ".", "lower", "(", ")", ".", "split", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.datasets.basic_dataset.BasicDataset.process_data": [[18, 20], ["basic_dataset.BasicDataset.preprocessing", "tqdm.tqdm.tqdm"], "methods", ["None"], ["", "def", "process_data", "(", "self", ",", "data", ")", ":", "\n", "        ", "return", "[", "self", ".", "preprocessing", "(", "x", ")", "for", "x", "in", "tqdm", "(", "data", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.datasets.basic_dataset.BasicDataset.process_data_with_vocabulary": [[21, 30], ["common.Vocabulary", "tqdm.tqdm.tqdm", "basic_dataset.BasicDataset.preprocessing", "common.Vocabulary.process_tokens", "_data.append"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.Vocabulary.process_tokens"], ["", "def", "process_data_with_vocabulary", "(", "self", ",", "data", ")", ":", "\n", "        ", "_data", "=", "[", "]", "\n", "vocab", "=", "Vocabulary", "(", ")", "\n", "\n", "for", "x", "in", "tqdm", "(", "data", ")", ":", "\n", "            ", "tokens", "=", "self", ".", "preprocessing", "(", "x", ")", "\n", "vocab", ".", "process_tokens", "(", "tokens", ")", "\n", "_data", ".", "append", "(", "tokens", ")", "\n", "", "return", "_data", ",", "vocab", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.embeddings.elmo.ELMo.__init__": [[18, 24], ["nn.Module.__init__", "nn.Dropout", "Elmo().to", "elmo.ELMo.elmo.get_output_dim", "Elmo"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.models.rnn_classifier.RNNClassifier.__init__"], ["def", "__init__", "(", "self", ",", "embedding_dropout", "=", "0.", ",", "options_file", "=", "default_options_file", ",", "weights_file", "=", "default_weights_file", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "ELMo", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "embedding_dropout", ")", "\n", "self", ".", "elmo", "=", "Elmo", "(", "options_file", ",", "weights_file", ",", "num_output_representations", "=", "1", ")", ".", "to", "(", "device", ")", "\n", "self", ".", "embedding_dim", "=", "self", ".", "elmo", ".", "get_output_dim", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.embeddings.elmo.ELMo.forward": [[25, 34], ["batch_to_ids().to", "elmo.ELMo.elmo", "elmo.ELMo.dropout", "batch_to_ids"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "sentences", ")", ":", "\n", "        ", "char_ids", "=", "batch_to_ids", "(", "sentences", ")", ".", "to", "(", "device", ")", "\n", "\n", "embedded", "=", "self", ".", "elmo", "(", "char_ids", ")", "\n", "\n", "embeddings", "=", "self", ".", "dropout", "(", "embedded", "[", "'elmo_representations'", "]", "[", "0", "]", ")", "\n", "mask", "=", "embedded", "[", "'mask'", "]", "\n", "\n", "return", "embeddings", ",", "mask", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.attention.self_attention.SelfAttention.__init__": [[11, 21], ["torch.nn.Module.__init__", "modules.append", "modules.append", "modules.append", "torch.torch.nn.Sequential", "torch.torch.nn.Softmax", "torch.torch.nn.Linear", "torch.torch.nn.Tanh", "torch.torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.models.rnn_classifier.RNNClassifier.__init__"], ["def", "__init__", "(", "self", ",", "attention_size", ",", "dropout", "=", ".0", ")", ":", "\n", "        ", "super", "(", "SelfAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "modules", "=", "[", "]", "\n", "modules", ".", "append", "(", "nn", ".", "Linear", "(", "attention_size", ",", "1", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "Tanh", "(", ")", ")", "\n", "modules", ".", "append", "(", "nn", ".", "Dropout", "(", "dropout", ")", ")", "\n", "\n", "self", ".", "attention", "=", "nn", ".", "Sequential", "(", "*", "modules", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.attention.self_attention.SelfAttention.forward": [[22, 34], ["self_attention.SelfAttention.SelfAttention.attention().squeeze", "self_attention.SelfAttention.SelfAttention.softmax", "masked_scores.sum", "masked_scores.div", "torch.torch.torch.mul", "torch.torch.mul.sum().squeeze", "mask.float", "masked_scores.div.unsqueeze().expand_as", "self_attention.SelfAttention.SelfAttention.attention", "torch.torch.mul.sum", "masked_scores.div.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "mask", ",", "lengths", ")", ":", "\n", "        ", "scores", "=", "self", ".", "attention", "(", "inputs", ")", ".", "squeeze", "(", ")", "\n", "scores", "=", "self", ".", "softmax", "(", "scores", ")", "\n", "\n", "masked_scores", "=", "scores", "*", "mask", ".", "float", "(", ")", "\n", "_sums", "=", "masked_scores", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "scores", "=", "masked_scores", ".", "div", "(", "_sums", ")", "\n", "\n", "weighted", "=", "torch", ".", "mul", "(", "inputs", ",", "scores", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand_as", "(", "inputs", ")", ")", "\n", "representations", "=", "weighted", ".", "sum", "(", "1", ")", ".", "squeeze", "(", ")", "\n", "\n", "return", "representations", ",", "scores", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.encoders.rnn_encoder.RNNEncoder.__init__": [[8, 35], ["torch.Module.__init__", "torch.Dropout", "torch.Dropout", "torch.LSTM", "torch.LSTM"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.models.rnn_classifier.RNNClassifier.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "hidden_size", ",", "num_layers", "=", "1", ",", "bidirectional", "=", "True", ",", "dropout", "=", "0.3", ",", "type", "=", "'LSTM'", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n            RNN encoder layer.\n            Args:\n                input_size int: size of input data (i.e. dimension of embeddings)\n                hidden_size int: size of hidden state in RNN\n                num_layers int: number of layers in RNN\n                bidirectional bool: if True RNN will be bidirectional\n                dropout float: value of dropout - between layers and also dropout of output\n                type str: TODO support for GRU\n            \"\"\"", "\n", "super", "(", "RNNEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bidirectional", "=", "bidirectional", "\n", "self", ".", "num_layers", "=", "num_layers", "\n", "self", ".", "num_directions", "=", "2", "if", "self", ".", "bidirectional", "else", "1", "\n", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "feature_size", "=", "self", ".", "num_directions", "*", "hidden_size", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "LSTM", "(", "input_size", "=", "input_size", ",", "\n", "hidden_size", "=", "hidden_size", ",", "\n", "num_layers", "=", "num_layers", ",", "\n", "bidirectional", "=", "bidirectional", ",", "\n", "dropout", "=", "dropout", ",", "\n", "batch_first", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.encoders.rnn_encoder.RNNEncoder.init_hidden": [[36, 40], ["next", "rnn_encoder.RNNEncoder.parameters", "next.new_zeros", "next.new_zeros"], "methods", ["None"], ["", "def", "init_hidden", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "weight", "=", "next", "(", "self", ".", "parameters", "(", ")", ")", "\n", "return", "(", "weight", ".", "new_zeros", "(", "self", ".", "num_layers", "*", "self", ".", "num_directions", ",", "batch_size", ",", "self", ".", "hidden_size", ")", ",", "\n", "weight", ".", "new_zeros", "(", "self", ".", "num_layers", "*", "self", ".", "num_directions", ",", "batch_size", ",", "self", ".", "hidden_size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.encoders.rnn_encoder.RNNEncoder.forward": [[41, 49], ["torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_padded_sequence", "rnn_encoder.RNNEncoder.encoder", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "rnn_encoder.RNNEncoder.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "embedded", ",", "hidden", ",", "mask", ",", "lengths", ")", ":", "\n", "        ", "packed_embedded", "=", "pack_padded_sequence", "(", "embedded", ",", "lengths", ",", "batch_first", "=", "True", ")", "\n", "\n", "lstm_output", ",", "lstm_hidden", "=", "self", ".", "encoder", "(", "packed_embedded", ",", "hidden", ")", "\n", "\n", "padded_output", ",", "_", "=", "pad_packed_sequence", "(", "lstm_output", ",", "batch_first", "=", "True", ")", "\n", "\n", "return", "self", ".", "dropout", "(", "padded_output", ")", ",", "lstm_hidden", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.trainers.trainer.Trainer.train_model": [[3, 5], ["None"], "methods", ["None"], ["    ", "def", "train_model", "(", "self", ",", "data", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.trainers.trainer.Trainer.evaluate_model": [[6, 8], ["None"], "methods", ["None"], ["", "def", "evaluate_model", "(", "self", ",", "data", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.trainers.classification_trainer.ClassificationTrainer.__init__": [[11, 20], ["trainer.Trainer.__init__"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.models.rnn_classifier.RNNClassifier.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "criterion", ",", "optimizer", ",", "device", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "ClassificationTrainer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "hidden", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.trainers.classification_trainer.ClassificationTrainer.train_model": [[21, 36], ["classification_trainer.ClassificationTrainer.model.train", "enumerate", "tqdm.tqdm.tqdm", "classification_trainer.ClassificationTrainer.optimizer.zero_grad", "classification_trainer.ClassificationTrainer.__process_batch", "loss.backward", "classification_trainer.ClassificationTrainer.optimizer.step", "loss.item"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.trainers.classification_trainer.ClassificationTrainer.__process_batch"], ["", "def", "train_model", "(", "self", ",", "data", ")", ":", "\n", "        ", "epoch_loss", "=", "0", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "for", "i_batch", ",", "batch", "in", "enumerate", "(", "tqdm", "(", "data", ")", ",", "1", ")", ":", "\n", "            ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "outputs", ",", "targets", ",", "loss", "=", "self", ".", "__process_batch", "(", "batch", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "epoch_loss", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "", "return", "epoch_loss", "/", "i_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.trainers.classification_trainer.ClassificationTrainer.evaluate_model": [[37, 61], ["classification_trainer.ClassificationTrainer.model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "numpy.array", "numpy.argmax", "numpy.array", "tqdm.tqdm.tqdm", "classification_trainer.ClassificationTrainer.__process_batch", "torch.softmax", "torch.softmax", "numpy.array.append", "gold_labels.append", "loss.item", "torch.cat().cpu", "torch.cat().cpu", "torch.cat().cpu", "torch.cat().cpu", "torch.cat().cpu", "torch.cat().cpu", "torch.cat().cpu", "torch.cat().cpu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.trainers.classification_trainer.ClassificationTrainer.__process_batch"], ["", "def", "evaluate_model", "(", "self", ",", "data", ")", ":", "\n", "        ", "epoch_loss", "=", "0", "\n", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "predictions", "=", "[", "]", "\n", "gold_labels", "=", "[", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i_batch", ",", "batch", "in", "enumerate", "(", "tqdm", "(", "data", ")", ",", "1", ")", ":", "\n", "                ", "outputs", ",", "targets", ",", "loss", "=", "self", ".", "__process_batch", "(", "batch", ")", "\n", "\n", "outputs", "=", "F", ".", "softmax", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "\n", "predictions", ".", "append", "(", "outputs", ")", "\n", "gold_labels", ".", "append", "(", "targets", ")", "\n", "\n", "epoch_loss", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "", "predictions", "=", "np", ".", "array", "(", "torch", ".", "cat", "(", "predictions", ",", "dim", "=", "0", ")", ".", "cpu", "(", ")", ")", "\n", "predicted", "=", "np", ".", "argmax", "(", "predictions", ",", "1", ")", "\n", "labels", "=", "np", ".", "array", "(", "torch", ".", "cat", "(", "gold_labels", ",", "dim", "=", "0", ")", ".", "cpu", "(", ")", ")", "\n", "\n", "", "return", "epoch_loss", "/", "i_batch", ",", "predicted", ",", "predictions", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.trainers.classification_trainer.ClassificationTrainer.__process_batch": [[62, 74], ["classification_trainer.ClassificationTrainer.model", "type", "classification_trainer.ClassificationTrainer.criterion", "classification_trainer.ClassificationTrainer.criterion", "lengths.to", "torch.log_softmax", "torch.log_softmax", "targets.to", "targets.to"], "methods", ["None"], ["", "def", "__process_batch", "(", "self", ",", "batch", ")", ":", "\n", "\n", "        ", "inputs", ",", "targets", ",", "lengths", "=", "batch", "\n", "\n", "outputs", ",", "self", ".", "hidden", "=", "self", ".", "model", "(", "inputs", "=", "inputs", ",", "mask", "=", "None", ",", "hidden", "=", "None", ",", "lengths", "=", "lengths", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "\n", "if", "type", "(", "self", ".", "criterion", ")", "==", "torch", ".", "nn", ".", "modules", ".", "loss", ".", "NLLLoss", ":", "\n", "            ", "loss", "=", "self", ".", "criterion", "(", "F", ".", "log_softmax", "(", "outputs", ",", "dim", "=", "1", ")", ",", "targets", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "self", ".", "criterion", "(", "outputs", ",", "targets", ".", "to", "(", "self", ".", "device", ")", ")", "\n", "\n", "", "return", "outputs", ",", "targets", ",", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.Vocabulary.__init__": [[10, 18], ["vocabulary.Vocabulary.add_constant", "vocabulary.Vocabulary.add_constant"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.Vocabulary.add_constant", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.Vocabulary.add_constant"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "word2idx", "=", "{", "}", "\n", "self", ".", "idx2word", "=", "{", "}", "\n", "self", ".", "stats", "=", "{", "}", "\n", "\n", "self", ".", "idx", "=", "0", "\n", "self", ".", "add_constant", "(", "'<PAD>'", ")", "\n", "self", ".", "add_constant", "(", "'<EOS>'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.Vocabulary.process_tokens": [[19, 22], ["vocabulary.Vocabulary.add_word"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.add_word"], ["", "def", "process_tokens", "(", "self", ",", "text", ")", ":", "\n", "        ", "for", "token", "in", "text", ":", "\n", "            ", "self", ".", "add_word", "(", "token", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.Vocabulary.add_word": [[23, 31], ["None"], "methods", ["None"], ["", "", "def", "add_word", "(", "self", ",", "word", ")", ":", "\n", "        ", "if", "not", "word", "in", "self", ".", "word2idx", ":", "\n", "            ", "self", ".", "word2idx", "[", "word", "]", "=", "self", ".", "idx", "\n", "self", ".", "idx2word", "[", "self", ".", "idx", "]", "=", "word", "\n", "self", ".", "idx", "+=", "1", "\n", "self", ".", "stats", "[", "word", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "stats", "[", "word", "]", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.Vocabulary.add_constant": [[32, 37], ["None"], "methods", ["None"], ["", "", "def", "add_constant", "(", "self", ",", "constant", ")", ":", "\n", "        ", "self", ".", "word2idx", "[", "constant", "]", "=", "self", ".", "idx", "\n", "self", ".", "idx2word", "[", "self", ".", "idx", "]", "=", "constant", "\n", "self", ".", "idx", "+=", "1", "\n", "self", ".", "stats", "[", "constant", "]", "=", "math", ".", "inf", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.Vocabulary.__len__": [[38, 40], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "word2idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.Vocabulary.sort": [[41, 53], ["dict", "sorted", "vocabulary.Vocabulary.stats.items", "sorted_word2idx.items", "operator.itemgetter"], "methods", ["None"], ["", "def", "sort", "(", "self", ")", ":", "\n", "        ", "self", ".", "stats", "=", "dict", "(", "sorted", "(", "self", ".", "stats", ".", "items", "(", ")", ",", "key", "=", "operator", ".", "itemgetter", "(", "1", ")", ",", "reverse", "=", "True", ")", ")", "\n", "\n", "sorted_word2idx", "=", "{", "}", "\n", "sorted_idx", "=", "0", "\n", "\n", "for", "key", "in", "self", ".", "stats", ":", "\n", "            ", "sorted_word2idx", "[", "key", "]", "=", "sorted_idx", "\n", "sorted_idx", "+=", "1", "\n", "\n", "", "self", ".", "word2idx", "=", "sorted_word2idx", "\n", "self", ".", "idx2word", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "sorted_word2idx", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.__init__": [[60, 70], ["vocabulary.ConcatVocabulary.append_vocabularies", "len"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.append_vocabularies"], ["def", "__init__", "(", "self", ",", "vocabularies", ")", ":", "\n", "        ", "assert", "len", "(", "vocabularies", ")", ">", "0", ",", "'vocabularies should not be an empty iterable'", "\n", "\n", "self", ".", "word2idx", "=", "{", "}", "\n", "self", ".", "idx2word", "=", "{", "}", "\n", "self", ".", "stats", "=", "{", "}", "\n", "self", ".", "idx", "=", "0", "\n", "\n", "self", ".", "vocabs", "=", "vocabularies", "\n", "self", ".", "append_vocabularies", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.append_vocabularies": [[71, 77], ["vocabulary.ConcatVocabulary.sort", "vocabulary.ConcatVocabulary.add_word"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.sort", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.add_word"], ["", "def", "append_vocabularies", "(", "self", ")", ":", "\n", "        ", "for", "vocab", "in", "self", ".", "vocabs", ":", "\n", "            ", "for", "word", "in", "vocab", ".", "word2idx", ":", "\n", "                ", "self", ".", "add_word", "(", "word", ",", "vocab", ".", "stats", "[", "word", "]", ")", "\n", "\n", "", "", "self", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.add_word": [[78, 86], ["None"], "methods", ["None"], ["", "def", "add_word", "(", "self", ",", "word", ",", "count", ")", ":", "\n", "        ", "if", "not", "word", "in", "self", ".", "word2idx", ":", "\n", "            ", "self", ".", "word2idx", "[", "word", "]", "=", "self", ".", "idx", "\n", "self", ".", "idx2word", "[", "self", ".", "idx", "]", "=", "word", "\n", "self", ".", "idx", "+=", "1", "\n", "self", ".", "stats", "[", "word", "]", "=", "count", "\n", "", "else", ":", "\n", "            ", "self", ".", "stats", "[", "word", "]", "+=", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.sort": [[87, 99], ["dict", "sorted", "vocabulary.ConcatVocabulary.stats.items", "sorted_word2idx.items", "operator.itemgetter"], "methods", ["None"], ["", "", "def", "sort", "(", "self", ")", ":", "\n", "        ", "self", ".", "stats", "=", "dict", "(", "sorted", "(", "self", ".", "stats", ".", "items", "(", ")", ",", "key", "=", "operator", ".", "itemgetter", "(", "1", ")", ",", "reverse", "=", "True", ")", ")", "\n", "\n", "sorted_word2idx", "=", "{", "}", "\n", "sorted_idx", "=", "0", "\n", "\n", "for", "key", "in", "self", ".", "stats", ":", "\n", "            ", "sorted_word2idx", "[", "key", "]", "=", "sorted_idx", "\n", "sorted_idx", "+=", "1", "\n", "\n", "", "self", ".", "word2idx", "=", "sorted_word2idx", "\n", "self", ".", "idx2word", "=", "{", "v", ":", "k", "for", "k", ",", "v", "in", "sorted_word2idx", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.__len__": [[100, 102], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "word2idx", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.__init__": [[15, 22], ["kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get", "kwargs.get"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "char_clean", "=", "kwargs", ".", "get", "(", "'char_cleaning'", ",", "False", ")", "\n", "self", ".", "char_normalize", "=", "kwargs", ".", "get", "(", "'char_normalize'", ",", "False", ")", "\n", "self", ".", "word_normalize", "=", "kwargs", ".", "get", "(", "'word_normalization'", ",", "False", ")", "\n", "self", ".", "expand", "=", "kwargs", ".", "get", "(", "'expand'", ",", "False", ")", "\n", "self", ".", "escape_punctuation", "=", "kwargs", ".", "get", "(", "'escape_punctuation'", ",", "False", ")", "\n", "self", ".", "negation", "=", "kwargs", ".", "get", "(", "'negation'", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.split_text": [[23, 25], ["text.split"], "methods", ["None"], ["", "def", "split_text", "(", "self", ",", "text", ")", ":", "\n", "        ", "return", "text", ".", "split", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.tokenize": [[26, 29], ["tokenizer.tokenize"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.tokenize"], ["", "def", "tokenize", "(", "self", ",", "text", ")", ":", "\n", "        ", "tokens", "=", "tokenizer", ".", "tokenize", "(", "text", ")", "\n", "return", "[", "t", ".", "text", "for", "t", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.process_text": [[30, 49], ["tokenizer.tokenize", "preprocessing.Preprocessing.split", "preprocessing.Preprocessing.char_cleaning", "preprocessing.Preprocessing.char_normalization", "preprocessing.Preprocessing.word_normalization", "preprocessing.Preprocessing.phrase_expanding", "preprocessing.Preprocessing.escaping", "preprocessing.Preprocessing.word_negation"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.tokenize", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.char_cleaning", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.char_normalization", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.word_normalization", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.phrase_expanding", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.escaping", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.word_negation"], ["", "def", "process_text", "(", "self", ",", "text", ")", ":", "\n", "\n", "        ", "tokens", "=", "tokenizer", ".", "tokenize", "(", "text", ")", "\n", "text", "=", "' '", ".", "join", "(", "[", "t", ".", "text", "for", "t", "in", "tokens", "]", ")", "\n", "\n", "if", "self", ".", "char_clean", ":", "\n", "            ", "text", "=", "self", ".", "char_cleaning", "(", "text", ")", "\n", "", "if", "self", ".", "char_normalize", ":", "\n", "            ", "text", "=", "self", ".", "char_normalization", "(", "text", ")", "\n", "", "if", "self", ".", "word_normalize", ":", "\n", "            ", "text", "=", "self", ".", "word_normalization", "(", "text", ")", "\n", "", "if", "self", ".", "expand", ":", "\n", "            ", "text", "=", "self", ".", "phrase_expanding", "(", "text", ")", "\n", "", "if", "self", ".", "escape_punctuation", ":", "\n", "            ", "text", "=", "self", ".", "escaping", "(", "text", ")", "\n", "", "if", "self", ".", "negation", ":", "\n", "            ", "text", "=", "self", ".", "word_negation", "(", "text", ")", "\n", "\n", "", "return", "text", ".", "split", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.char_cleaning": [[50, 63], ["re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "char_cleaning", "(", "text", ")", ":", "\n", "# ranges from http://jrgraphix.net/research/unicode.php", "\n", "        ", "text", "=", "re", ".", "sub", "(", "'[\\u0370-\\u03ff]'", ",", "''", ",", "text", ")", "# Greek and Coptic", "\n", "text", "=", "re", ".", "sub", "(", "'[\\u0400-\\u052f]'", ",", "''", ",", "text", ")", "# Cyrillic and Cyrillic Supplementary", "\n", "text", "=", "re", ".", "sub", "(", "'[\\u2500-\\u257f]'", ",", "''", ",", "text", ")", "# Box Drawing", "\n", "text", "=", "re", ".", "sub", "(", "'[\\u2e80-\\u4dff]'", ",", "''", ",", "text", ")", "# from CJK Radicals Supplement", "\n", "text", "=", "re", ".", "sub", "(", "'[\\u4e00-\\u9fff]'", ",", "''", ",", "text", ")", "# CJK Unified Ideographs", "\n", "text", "=", "re", ".", "sub", "(", "'[\\ue000-\\uf8ff]'", ",", "''", ",", "text", ")", "# Private Use Area", "\n", "text", "=", "re", ".", "sub", "(", "'[\\uff00-\\uffef]'", ",", "''", ",", "text", ")", "# Halfwidth and Fullwidth Forms", "\n", "text", "=", "re", ".", "sub", "(", "'[\\ufe30-\\ufe4f]'", ",", "''", ",", "text", ")", "# CJK Compatibility Forms", "\n", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.char_normalization": [[64, 72], ["re.sub", "re.sub", "re.sub", "re.sub"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "char_normalization", "(", "text", ")", ":", "\n", "        ", "text", "=", "re", ".", "sub", "(", "INVISIBLE_REGEX", ",", "''", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "QUOTATION_REGEX", ",", "'\\\"'", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "APOSTROPHE_REGEX", ",", "'\\''", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"\\s+\"", ",", "\" \"", ",", "text", ")", "\n", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.word_normalization": [[73, 89], ["re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub"], "methods", ["None"], ["", "@", "staticmethod", "\n", "# TODO", "\n", "def", "word_normalization", "(", "text", ")", ":", "\n", "# text = re.sub(EMAIL_REGEX, ' <EMAIL> ', text)", "\n", "# text = re.sub(URL_REGEX, ' <URL> ', text)", "\n", "# text = re.sub(USER_REGEX, ' @USER ', text)", "\n", "\n", "        ", "text", "=", "re", ".", "sub", "(", "PRICE_REGEX", ",", "r\" <PRICE> \"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "TIME_REGEX", ",", "r\" <TIME> \"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "DATE_REGEX", ",", "r\" <DATE> \"", ",", "text", ")", "\n", "\n", "text", "=", "re", ".", "sub", "(", "r\"([a-zA-Z]+)([0-9]+)\"", ",", "r\"\\1 \\2\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"([0-9]+)([a-zA-Z]+)\"", ",", "r\"\\1 \\2\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\" [0-9]+ \"", ",", "r\" <NUMBER> \"", ",", "text", ")", "\n", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.phrase_expanding": [[90, 99], ["re.sub", "re.sub", "re.sub", "re.sub", "re.sub"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "phrase_expanding", "(", "text", ")", ":", "\n", "        ", "text", "=", "re", ".", "sub", "(", "r\"(\\b)([Ii]) 'm\"", ",", "r\"\\1\\2 am\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"(\\b)([Tt]hey|[Ww]e|[Ww]hat|[Ww]ho|[Yy]ou) 're\"", ",", "r\"\\1\\2 are\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"(\\b)([Ll]et) 's\"", ",", "r\"\\1\\2 us\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"(\\b)([Hh]e|[Ii]|[Ss]he|[Tt]hey|[Ww]e|[Ww]hat|[Ww]ho|[Yy]ou) 'll\"", ",", "r\"\\1\\2 will\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"(\\b)([Ii]|[Ss]hould|[Tt]hey|[Ww]e|[Ww]hat|[Ww]ho|[Ww]ould|[Yy]ou) 've\"", ",", "r\"\\1\\2 have\"", ",", "text", ")", "\n", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.word_negation": [[100, 109], ["re.sub", "re.sub", "re.sub", "re.sub", "re.sub"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "word_negation", "(", "text", ")", ":", "\n", "        ", "text", "=", "re", ".", "sub", "(", "r\"(\\b)([Aa]re|[Cc]ould|[Dd]id|[Dd]oes|[Dd]o|[Hh]ad|[Hh]as|[Hh]ave|[Ii]s|[Mm]ight|[Mm]ust|[Ss]hould|[Ww]ere|[Ww]as|[Ww]ould) n't\"", ",", "r\"\\1\\2 not\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"(\\b)([Cc]a) n't\"", ",", "r\"\\1\\2n not\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"(\\b)([Ww]) on't\"", ",", "r\"\\1\\2ill not\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"(\\b)([Ss])han't\"", ",", "r\"\\1\\2hall not\"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\" n't \"", ",", "r\" not \"", ",", "text", ")", "\n", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.preprocessing.preprocessing.Preprocessing.escaping": [[110, 121], ["re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "escaping", "(", "text", ")", ":", "\n", "        ", "text", "=", "re", ".", "sub", "(", "r\"([\u203c.,;:?!\u2026])+\"", ",", "r\" \\1 \"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"([()])+\"", ",", "r\" \\1 \"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"[-]+\"", ",", "r\" - \"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"[_]+\"", ",", "r\" _ \"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"[=]+\"", ",", "r\" = \"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"[\\&]+\"", ",", "r\" \\& \"", ",", "text", ")", "\n", "text", "=", "re", ".", "sub", "(", "r\"[\\+]+\"", ",", "r\" \\+ \"", ",", "text", ")", "\n", "\n", "return", "text", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.dataloading.collate.collate_fn_cf": [[5, 16], ["zip", "torch.LongTensor", "torch.LongTensor", "isinstance", "torch.LongTensor", "isinstance"], "function", ["None"], ["def", "collate_fn_cf", "(", "data", ")", ":", "\n", "    ", "samples", ",", "labels", ",", "lengths", "=", "zip", "(", "*", "data", ")", "\n", "labels", "=", "torch", ".", "LongTensor", "(", "labels", ")", "\n", "lengths", "=", "torch", ".", "LongTensor", "(", "lengths", ")", "\n", "\n", "if", "isinstance", "(", "samples", "[", "0", "]", ",", "np", ".", "ndarray", ")", ":", "\n", "        ", "samples", "=", "torch", ".", "LongTensor", "(", "samples", ")", "\n", "", "elif", "isinstance", "(", "samples", "[", "0", "]", ",", "tuple", ")", ":", "\n", "        ", "samples", "=", "samples", "\n", "\n", "", "return", "samples", ",", "labels", ",", "lengths", "\n", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.dataloading.dataloading.load_data": [[4, 10], ["pandas.read_csv().sample", "pandas.read_csv().sample", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv"], "function", ["None"], ["def", "load_data", "(", "train_file", ",", "validation_file", ",", "test_file", ",", "sep", "=", "','", ",", "header", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "    ", "train", "=", "pd", ".", "read_csv", "(", "train_file", ",", "sep", "=", "sep", ",", "header", "=", "header", ",", "quoting", "=", "1", ")", ".", "sample", "(", "frac", "=", "1", ")", ".", "values", "\n", "valid", "=", "pd", ".", "read_csv", "(", "validation_file", ",", "sep", "=", "sep", ",", "header", "=", "header", ",", "quoting", "=", "1", ")", ".", "sample", "(", "frac", "=", "1", ")", ".", "values", "\n", "test", "=", "pd", ".", "read_csv", "(", "test_file", ",", "sep", "=", "sep", ",", "header", "=", "header", ",", "quoting", "=", "1", ")", ".", "values", "\n", "\n", "return", "train", ",", "valid", ",", "test", "\n", "", ""]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.models.rnn_classifier.RNNClassifier.__init__": [[12, 19], ["torch.Module.__init__", "modules.layers.encoders.rnn_encoder.RNNEncoder", "modules.layers.attention.SelfAttention", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.models.rnn_classifier.RNNClassifier.__init__"], ["    ", "def", "__init__", "(", "self", ",", "embeddings", ",", "encoder_params", ",", "output_dim", "=", "2", ",", "dropout", "=", "0.", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "RNNClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "embeddings", "=", "embeddings", "\n", "self", ".", "encoder", "=", "RNNEncoder", "(", "input_size", "=", "self", ".", "embeddings", ".", "embedding_dim", ",", "**", "encoder_params", ")", "\n", "self", ".", "attention", "=", "SelfAttention", "(", "attention_size", "=", "self", ".", "encoder", ".", "feature_size", ",", "dropout", "=", "dropout", ")", "\n", "self", ".", "hidden2out", "=", "nn", ".", "Linear", "(", "self", ".", "encoder", ".", "feature_size", ",", "output_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.models.rnn_classifier.RNNClassifier.forward": [[20, 30], ["modules.common.utils.sort_by_lengths", "rnn_classifier.RNNClassifier.embeddings", "rnn_classifier.RNNClassifier.encoder", "rnn_classifier.RNNClassifier.attention", "rnn_classifier.RNNClassifier.hidden2out", "sort", "unsort", "sort", "sort"], "methods", ["home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.utils.batch.sort_by_lengths", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.sort", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.sort", "home.repos.pwc.inspect_result.SamuelPecar_NL-FIIT-SemEval19-Task9.common.vocabulary.ConcatVocabulary.sort"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "mask", ",", "hidden", ",", "lengths", ")", ":", "\n", "        ", "sorted_lengths", ",", "sort", ",", "unsort", "=", "sort_by_lengths", "(", "lengths", ")", "\n", "\n", "embedded", ",", "mask", "=", "self", ".", "embeddings", "(", "inputs", ")", "\n", "output_encoder", ",", "hidden", "=", "self", ".", "encoder", "(", "sort", "(", "embedded", ")", ",", "hidden", "=", "None", ",", "mask", "=", "sort", "(", "mask", ")", ",", "lengths", "=", "sorted_lengths", ")", "\n", "representations", ",", "attentions", "=", "self", ".", "attention", "(", "output_encoder", ",", "mask", "=", "sort", "(", "mask", ")", ",", "lengths", "=", "sorted_lengths", ")", "\n", "\n", "output", "=", "self", ".", "hidden2out", "(", "unsort", "(", "representations", ")", ")", "\n", "\n", "return", "output", ",", "hidden", "\n", "", "", ""]]}