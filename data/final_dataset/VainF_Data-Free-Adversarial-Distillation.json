{"home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_nyu_deeplab.train": [[23, 58], ["teacher.eval", "student.train", "generator.train", "range", "range", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_G.zero_grad", "generator.train", "generator", "teacher", "student", "loss_G.backward", "optimizer_G.step", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_S.zero_grad", "generator().detach", "teacher", "student", "torch.l1_loss", "F.l1_loss.backward", "optimizer_S.step", "torch.log", "torch.log", "torch.log", "torch.log", "print", "vp.add_scalar", "vp.add_scalar", "teacher.detach", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "F.l1_loss.item", "loss_G.item", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "torch.l1_loss", "loss_G.item", "F.l1_loss.item", "float", "float"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar"], ["def", "train", "(", "args", ",", "teacher", ",", "student", ",", "generator", ",", "device", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "teacher", ".", "eval", "(", ")", "\n", "student", ".", "train", "(", ")", "\n", "generator", ".", "train", "(", ")", "\n", "optimizer_S", ",", "optimizer_G", "=", "optimizer", "\n", "for", "i", "in", "range", "(", "args", ".", "epoch_itrs", ")", ":", "\n", "\n", "        ", "for", "k", "in", "range", "(", "5", ")", ":", "\n", "            ", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_S", ".", "zero_grad", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", ".", "detach", "(", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "loss_S", "=", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ".", "detach", "(", ")", ")", "#(s_logit - t_logit.detach()).abs().mean() #+ kldiv(s_logit, t_logit.detach()) #kldiv(s_logit, t_logit.detach()) ", "\n", "loss_S", ".", "backward", "(", ")", "\n", "optimizer_S", ".", "step", "(", ")", "\n", "\n", "", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "generator", ".", "train", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "\n", "loss_G", "=", "-", "torch", ".", "log", "(", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ")", "+", "1", ")", "\n", "#loss_G = -F.l1_loss( s_logit, t_logit )", "\n", "\n", "loss_G", ".", "backward", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "\n", "if", "i", "%", "args", ".", "log_interval", "==", "0", ":", "\n", "            ", "print", "(", "'Train Epoch: {} [{}/{} ({:.0f}%)]\\tG_Loss: {:.6f} S_loss: {:.6f}'", ".", "format", "(", "\n", "epoch", ",", "i", ",", "args", ".", "epoch_itrs", ",", "100", "*", "float", "(", "i", ")", "/", "float", "(", "args", ".", "epoch_itrs", ")", ",", "loss_G", ".", "item", "(", ")", ",", "loss_S", ".", "item", "(", ")", ")", ")", "\n", "vp", ".", "add_scalar", "(", "'Loss_S'", ",", "(", "epoch", "-", "1", ")", "*", "args", ".", "epoch_itrs", "+", "i", ",", "loss_S", ".", "item", "(", ")", ")", "\n", "vp", ".", "add_scalar", "(", "'Loss_G'", ",", "(", "epoch", "-", "1", ")", "*", "args", ".", "epoch_itrs", "+", "i", ",", "loss_G", ".", "item", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_nyu_deeplab.test": [[59, 105], ["student.eval", "generator.eval", "teacher.eval", "utils.stream_metrics.StreamSegMetrics", "utils.stream_metrics.StreamSegMetrics.get_results", "print", "os.makedirs", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "student", "utils.stream_metrics.StreamSegMetrics.update", "data.to", "target.to", "teacher", "test_loader.dataset.decode_target().astype", "test_loader.dataset.decode_target().astype", "test_loader.dataset.decode_target().astype", "zip", "teacher", "teacher", "student", "vp.add_image", "vp.add_image", "vp.add_image", "vp.add_image", "vp.add_image", "vp.add_image", "vp.add_image", "[].detach().cpu().numpy().astype", "target.detach().cpu().numpy().astype", "PIL.Image.fromarray().save", "PIL.Image.fromarray().save", "PIL.Image.fromarray().save", "PIL.Image.fromarray().save", "utils.misc.pack_images", "utils.misc.pack_images", "utils.misc.pack_images().astype", "utils.misc.pack_images().astype", "utils.misc.pack_images().astype", "utils.misc.pack_images().astype", "utils.misc.pack_images().astype", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "[].detach().cpu().numpy", "target.detach().cpu().numpy", "[].detach().cpu().numpy", "[].detach().cpu().numpy", "target.detach().cpu().numpy", "PIL.Image.fromarray", "PIL.Image.fromarray", "PIL.Image.fromarray", "PIL.Image.fromarray", "utils.misc.pack_images", "utils.misc.pack_images", "utils.misc.pack_images", "utils.misc.pack_images", "utils.misc.pack_images", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "[].detach().cpu", "target.detach().cpu", "[].detach().cpu", "[].detach().cpu", "target.detach().cpu", "target.cpu().numpy", "[].detach().cpu().numpy().astype", "[].detach().cpu().numpy().astype", "[].detach().cpu().numpy().astype", "[].detach().cpu().numpy().astype", "[].detach", "target.detach", "[].detach", "[].detach", "target.detach", "target.cpu", "[].detach().cpu().numpy", "[].detach().cpu().numpy", "[].detach().cpu().numpy", "[].detach().cpu().numpy", "[].detach().cpu", "[].detach().cpu", "[].detach().cpu", "[].detach().cpu", "student.max", "student.max", "teacher.max", "[].detach", "[].detach", "[].detach", "[].detach", "student.max", "teacher.max", "teacher.max", "student.max"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.get_results", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.update", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target"], ["", "", "", "def", "test", "(", "args", ",", "student", ",", "teacher", ",", "generator", ",", "device", ",", "test_loader", ")", ":", "\n", "    ", "student", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "teacher", ".", "eval", "(", ")", "\n", "if", "args", ".", "save_img", ":", "\n", "        ", "os", ".", "makedirs", "(", "'results/nyu-DFAD'", ",", "exist_ok", "=", "True", ")", "\n", "", "seg_metrics", "=", "StreamSegMetrics", "(", "13", ")", "\n", "img_idx", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "(", "data", ".", "shape", "[", "0", "]", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ",", "device", "=", "data", ".", "device", ",", "dtype", "=", "data", ".", "dtype", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "output", "=", "student", "(", "data", ")", "\n", "\n", "if", "args", ".", "save_img", ":", "\n", "                ", "t_out", "=", "teacher", "(", "data", ")", "\n", "\n", "input_imgs", "=", "(", "(", "(", "data", "+", "1", ")", "/", "2", ")", "*", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "astype", "(", "'uint8'", ")", "\n", "colored_preds", "=", "test_loader", ".", "dataset", ".", "decode_target", "(", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "'uint8'", ")", "\n", "colored_teacher_preds", "=", "test_loader", ".", "dataset", ".", "decode_target", "(", "t_out", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "'uint8'", ")", "\n", "colored_targets", "=", "test_loader", ".", "dataset", ".", "decode_target", "(", "target", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "'uint8'", ")", "\n", "for", "_pred", ",", "_img", ",", "_target", ",", "_tpred", "in", "zip", "(", "colored_preds", ",", "input_imgs", ",", "colored_targets", ",", "colored_teacher_preds", ")", ":", "\n", "                    ", "Image", ".", "fromarray", "(", "_pred", ")", ".", "save", "(", "'results/nyu-DFAD/%d_pred.png'", "%", "img_idx", ")", "\n", "Image", ".", "fromarray", "(", "_img", ")", ".", "save", "(", "'results/nyu-DFAD/%d_img.png'", "%", "img_idx", ")", "\n", "Image", ".", "fromarray", "(", "_target", ")", ".", "save", "(", "'results/nyu-DFAD/%d_target.png'", "%", "img_idx", ")", "\n", "Image", ".", "fromarray", "(", "_tpred", ")", ".", "save", "(", "'results/nyu-DFAD/%d_teacher.png'", "%", "img_idx", ")", "\n", "img_idx", "+=", "1", "\n", "\n", "", "", "if", "i", "==", "0", ":", "\n", "                ", "t_out", "=", "teacher", "(", "data", ")", "\n", "t_out_onfake", "=", "teacher", "(", "fake", ")", "\n", "s_out_onfake", "=", "student", "(", "fake", ")", "\n", "vp", ".", "add_image", "(", "'input'", ",", "pack_images", "(", "(", "(", "data", "+", "1", ")", "/", "2", ")", ".", "clamp", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "vp", ".", "add_image", "(", "'generated'", ",", "pack_images", "(", "(", "(", "fake", "+", "1", ")", "/", "2", ")", ".", "clamp", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "vp", ".", "add_image", "(", "'target'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "vp", ".", "add_image", "(", "'pred'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "vp", ".", "add_image", "(", "'teacher'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "t_out", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "vp", ".", "add_image", "(", "'teacher-onfake'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "t_out_onfake", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "vp", ".", "add_image", "(", "'student-onfake'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "s_out_onfake", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "", "seg_metrics", ".", "update", "(", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ",", "target", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "\n", "", "", "results", "=", "seg_metrics", ".", "get_results", "(", ")", "\n", "print", "(", "'\\nTest set: Acc= %.6f, mIoU: %.6f\\n'", "%", "(", "results", "[", "'Overall Acc'", "]", ",", "results", "[", "'Mean IoU'", "]", ")", ")", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_nyu_deeplab.main": [[106, 211], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "random.seed", "torch.device", "torch.device", "torch.device", "torch.device", "print", "dataloader.get_dataloader", "network.segmentation.deeplabv3.deeplabv3_resnet50", "network.segmentation.deeplabv3.deeplabv3_mobilenet", "network.gan.GeneratorB", "teacher.to.load_state_dict", "print", "teacher.to.to", "student.to.to", "generator.to.to", "teacher.to.eval", "torch.SGD", "torch.Adam", "range", "print", "os.makedirs", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.load", "torch.load", "torch.load", "torch.load", "student.to.load_state_dict", "generator.to.load_state_dict", "print", "student.to.parameters", "generator.to.parameters", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "DFAD_nyu_deeplab.test", "DFAD_nyu_deeplab.train", "DFAD_nyu_deeplab.test", "vp.add_scalar", "open", "csv.writer", "csv.writer.writerow", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "optim.lr_scheduler.StepLR.step", "optim.lr_scheduler.StepLR.step", "student.to.state_dict", "generator.to.state_dict"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3.deeplabv3_resnet50", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3.deeplabv3_mobilenet", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar"], ["", "def", "main", "(", ")", ":", "\n", "# Training settings", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'DFAD NYUv2'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for training (default: 64)'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_batch_size'", ",", "type", "=", "int", ",", "default", "=", "9", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for testing (default: 9)'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "300", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of epochs to train (default: 300)'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_itrs'", ",", "type", "=", "int", ",", "default", "=", "50", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_S'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'learning rate (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_G'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ",", "\n", "help", "=", "'learning rate (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_root'", ",", "type", "=", "str", ",", "default", "=", "'data'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'nyuv2'", ",", "choices", "=", "[", "'nyuv2'", "]", ",", "\n", "help", "=", "'dataset name (default: nyuv2)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'deeplabv3_resnet50'", ",", "choices", "=", "[", "'deeplabv3_resnet50'", "]", ",", "\n", "help", "=", "'model name (default: deeplabv3_resnet50)'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_decay'", ",", "type", "=", "float", ",", "default", "=", "5e-5", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "metavar", "=", "'M'", ",", "\n", "help", "=", "'SGD momentum (default: 0.9)'", ")", "\n", "parser", ".", "add_argument", "(", "'--no_cuda'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'disables CUDA training'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "metavar", "=", "'S'", ",", "\n", "help", "=", "'random seed (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "'checkpoint/teacher/nyuv2-deeplabv3_resnet50-256.pt'", ")", "\n", "parser", ".", "add_argument", "(", "'--stu_ckpt'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--log_interval'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'how many batches to wait before logging training status'", ")", "\n", "parser", ".", "add_argument", "(", "'--nz'", ",", "type", "=", "int", ",", "default", "=", "256", ")", "\n", "parser", ".", "add_argument", "(", "'--test_only'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--download'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--step_size'", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--save_img'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "use_cuda", "=", "not", "args", ".", "no_cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "use_cuda", "else", "\"cpu\"", ")", "\n", "kwargs", "=", "{", "'num_workers'", ":", "1", ",", "'pin_memory'", ":", "True", "}", "if", "use_cuda", "else", "{", "}", "\n", "print", "(", "args", ")", "\n", "\n", "_", ",", "test_loader", "=", "get_dataloader", "(", "args", ")", "\n", "teacher", "=", "network", ".", "segmentation", ".", "deeplabv3", ".", "deeplabv3_resnet50", "(", "num_classes", "=", "13", ")", "\n", "student", "=", "network", ".", "segmentation", ".", "deeplabv3", ".", "deeplabv3_mobilenet", "(", "num_classes", "=", "13", ",", "dropout_p", "=", "0.5", ",", "pretrained_backbone", "=", "False", ")", "\n", "generator", "=", "network", ".", "gan", ".", "GeneratorB", "(", "nz", "=", "args", ".", "nz", ",", "nc", "=", "3", ",", "img_size", "=", "128", ")", "\n", "\n", "teacher", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "ckpt", ")", ")", "\n", "print", "(", "\"Teacher restored from %s\"", "%", "(", "args", ".", "ckpt", ")", ")", "\n", "\n", "if", "args", ".", "stu_ckpt", "is", "not", "None", ":", "\n", "        ", "student", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "stu_ckpt", ")", ")", "\n", "generator", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "stu_ckpt", "[", ":", "-", "3", "]", "+", "'-generator.pt'", ")", ")", "\n", "print", "(", "'student loaded from %s'", "%", "args", ".", "stu_ckpt", ")", "\n", "\n", "", "teacher", "=", "teacher", ".", "to", "(", "device", ")", "\n", "student", "=", "student", ".", "to", "(", "device", ")", "\n", "generator", "=", "generator", ".", "to", "(", "device", ")", "\n", "\n", "teacher", ".", "eval", "(", ")", "\n", "\n", "optimizer_S", "=", "optim", ".", "SGD", "(", "student", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_S", ",", "weight_decay", "=", "args", ".", "weight_decay", ",", "momentum", "=", "0.9", ")", "\n", "optimizer_G", "=", "optim", ".", "Adam", "(", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_G", ")", "\n", "\n", "if", "args", ".", "scheduler", ":", "\n", "        ", "scheduler_S", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_S", ",", "args", ".", "step_size", ",", "gamma", "=", "0.3", ")", "\n", "scheduler_G", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_G", ",", "args", ".", "step_size", ",", "gamma", "=", "0.3", ")", "\n", "", "best_result", "=", "0", "\n", "if", "args", ".", "test_only", ":", "\n", "        ", "results", "=", "test", "(", "args", ",", "student", ",", "teacher", ",", "generator", ",", "device", ",", "test_loader", ")", "\n", "return", "\n", "\n", "", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", "+", "1", ")", ":", "\n", "# Train", "\n", "        ", "train", "(", "args", ",", "teacher", "=", "teacher", ",", "student", "=", "student", ",", "generator", "=", "generator", ",", "device", "=", "device", ",", "optimizer", "=", "[", "optimizer_S", ",", "optimizer_G", "]", ",", "epoch", "=", "epoch", ")", "\n", "# Test", "\n", "results", "=", "test", "(", "args", ",", "student", ",", "teacher", ",", "generator", ",", "device", ",", "test_loader", ")", "\n", "\n", "if", "results", "[", "'Mean IoU'", "]", ">", "best_result", ":", "\n", "            ", "best_result", "=", "results", "[", "'Mean IoU'", "]", "\n", "torch", ".", "save", "(", "student", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s.pt\"", "%", "(", "'nyuv2'", ",", "'deeplabv3_mobilenet'", ")", ")", "\n", "torch", ".", "save", "(", "generator", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s-generator.pt\"", "%", "(", "'nyuv2'", ",", "'deeplabv3_mobilenet'", ")", ")", "\n", "", "vp", ".", "add_scalar", "(", "'mIoU'", ",", "epoch", ",", "results", "[", "'Mean IoU'", "]", ")", "\n", "\n", "if", "args", ".", "scheduler", ":", "\n", "            ", "scheduler_S", ".", "step", "(", ")", "\n", "scheduler_G", ".", "step", "(", ")", "\n", "", "", "print", "(", "\"Best mIoU=%.6f\"", "%", "best_result", ")", "\n", "\n", "import", "csv", "\n", "os", ".", "makedirs", "(", "'log'", ",", "exist_ok", "=", "True", ")", "\n", "with", "open", "(", "'log/DFAD-nyuv2.csv'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "writer", "=", "csv", ".", "writer", "(", "f", ")", "\n", "writer", ".", "writerow", "(", "miou_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_mnist.train": [[20, 54], ["teacher.eval", "student.train", "generator.train", "range", "range", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_G.zero_grad", "generator.train", "generator", "teacher", "student", "loss_G.backward", "optimizer_G.step", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_S.zero_grad", "generator().detach", "teacher", "student", "torch.l1_loss", "F.l1_loss.backward", "optimizer_S.step", "torch.l1_loss", "print", "teacher.detach", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "loss_G.item", "F.l1_loss.item", "float", "float"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train"], ["def", "train", "(", "args", ",", "teacher", ",", "student", ",", "generator", ",", "device", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "teacher", ".", "eval", "(", ")", "\n", "student", ".", "train", "(", ")", "\n", "generator", ".", "train", "(", ")", "\n", "optimizer_S", ",", "optimizer_G", "=", "optimizer", "\n", "\n", "for", "i", "in", "range", "(", "args", ".", "epoch_itrs", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "5", ")", ":", "\n", "            ", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_S", ".", "zero_grad", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", ".", "detach", "(", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "loss_S", "=", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ".", "detach", "(", ")", ")", "\n", "\n", "loss_S", ".", "backward", "(", ")", "\n", "optimizer_S", ".", "step", "(", ")", "\n", "\n", "", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "generator", ".", "train", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "\n", "#loss_G = - torch.log( F.l1_loss( s_logit, t_logit )+1) ", "\n", "loss_G", "=", "-", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ")", "\n", "\n", "loss_G", ".", "backward", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "\n", "if", "args", ".", "verbose", "and", "i", "%", "args", ".", "log_interval", "==", "0", ":", "\n", "            ", "print", "(", "'Train Epoch: {} [{}/{} ({:.0f}%)]\\tG_Loss: {:.6f} S_loss: {:.6f}'", ".", "format", "(", "\n", "epoch", ",", "i", ",", "args", ".", "epoch_itrs", ",", "100", "*", "float", "(", "i", ")", "/", "float", "(", "args", ".", "epoch_itrs", ")", ",", "loss_G", ".", "item", "(", ")", ",", "loss_S", ".", "item", "(", ")", ")", ")", "\n", "#vp.add_scalar('Loss_S', (epoch-1)*args.epoch_itrs+i, loss_S.item())", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_mnist.test": [[57, 85], ["student.eval", "generator.eval", "len", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "len", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "student", "torch.cross_entropy().item", "student.argmax", "output.argmax.eq().sum().item", "len", "data.to", "target.to", "len", "torch.cross_entropy", "output.argmax.eq().sum", "output.argmax.eq", "target.view_as"], "function", ["None"], ["", "", "", "def", "test", "(", "args", ",", "student", ",", "generator", ",", "device", ",", "test_loader", ",", "epoch", "=", "0", ")", ":", "\n", "    ", "student", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "(", "data", ".", "shape", "[", "0", "]", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ",", "device", "=", "data", ".", "device", ",", "dtype", "=", "data", ".", "dtype", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "output", "=", "student", "(", "data", ")", "\n", "#if i==0:", "\n", "#    vp.add_image( 'input', pack_images( ((data+1)/2).clamp(0,1).detach().cpu().numpy(), col=8 ) )", "\n", "#    vp.add_image( 'generated', pack_images( ((fake+1)/2).clamp(0,1).detach().cpu().numpy(), col=8 ) )", "\n", "\n", "test_loss", "+=", "F", ".", "cross_entropy", "(", "output", ",", "target", ",", "reduction", "=", "'sum'", ")", ".", "item", "(", ")", "# sum up batch loss", "\n", "pred", "=", "output", ".", "argmax", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# get the index of the max log-probability", "\n", "correct", "+=", "pred", ".", "eq", "(", "target", ".", "view_as", "(", "pred", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "test_loss", "/=", "len", "(", "test_loader", ".", "dataset", ")", "\n", "\n", "print", "(", "'Epoch {} Test set: Average loss: {:.4f}, Accuracy: {}/{} ({:.4f}%)\\n'", ".", "format", "(", "\n", "epoch", ",", "test_loss", ",", "correct", ",", "len", "(", "test_loader", ".", "dataset", ")", ",", "\n", "100.", "*", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", ")", ")", "\n", "acc", "=", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_mnist.main": [[86, 184], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "random.seed", "torch.device", "torch.device", "torch.device", "torch.device", "os.makedirs", "print", "dataloader.get_dataloader", "network.lenet.LeNet5", "network.lenet.LeNet5Half", "network.gan.GeneratorA", "teacher.to.load_state_dict", "print", "teacher.to.to", "student.to.to", "generator.to.to", "teacher.to.eval", "torch.SGD", "torch.Adam", "range", "print", "os.makedirs", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.load", "torch.load", "torch.load", "torch.load", "student.to.parameters", "generator.to.parameters", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "DFAD_mnist.test", "DFAD_mnist.train", "DFAD_mnist.test", "acc_list.append", "open", "csv.writer", "csv.writer.writerow", "optim.lr_scheduler.StepLR.step", "optim.lr_scheduler.StepLR.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "student.to.state_dict", "generator.to.state_dict"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test"], ["", "def", "main", "(", ")", ":", "\n", "# Training settings", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'DFAD MNIST'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "512", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for training (default: 64)'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_batch_size'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for testing (default: 256)'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "40", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of epochs to train (default: 40)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_S'", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'learning rate (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_G'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ",", "\n", "help", "=", "'learning rate (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_decay'", ",", "type", "=", "float", ",", "default", "=", "1e-4", ")", "\n", "\n", "\n", "parser", ".", "add_argument", "(", "'--epoch_itrs'", ",", "type", "=", "int", ",", "default", "=", "50", ")", "\n", "parser", ".", "add_argument", "(", "'--data_root'", ",", "type", "=", "str", ",", "default", "=", "'data'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'mnist'", ",", "choices", "=", "[", "'mnist'", "]", ",", "\n", "help", "=", "'dataset name (default: mnist)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'lenet5_half'", ",", "choices", "=", "[", "'lenet5_half'", "]", ",", "\n", "help", "=", "'model name (default: lenet5_half)'", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "metavar", "=", "'M'", ",", "\n", "help", "=", "'SGD momentum (default: 0.9)'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-cuda'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'disables CUDA training'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "metavar", "=", "'S'", ",", "\n", "help", "=", "'random seed (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "'checkpoint/teacher/mnist-lenet5.pt'", ")", "\n", "parser", ".", "add_argument", "(", "'--log-interval'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'how many batches to wait before logging training status'", ")", "\n", "parser", ".", "add_argument", "(", "'--nz'", ",", "type", "=", "int", ",", "default", "=", "100", ")", "\n", "parser", ".", "add_argument", "(", "'--test-only'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--download'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--step_size'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "metavar", "=", "'S'", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "use_cuda", "=", "not", "args", ".", "no_cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "use_cuda", "else", "\"cpu\"", ")", "\n", "kwargs", "=", "{", "'num_workers'", ":", "1", ",", "'pin_memory'", ":", "True", "}", "if", "use_cuda", "else", "{", "}", "\n", "os", ".", "makedirs", "(", "'checkpoint/student'", ",", "exist_ok", "=", "True", ")", "\n", "print", "(", "args", ")", "\n", "\n", "_", ",", "test_loader", "=", "get_dataloader", "(", "args", ")", "\n", "teacher", "=", "network", ".", "lenet", ".", "LeNet5", "(", ")", "\n", "student", "=", "network", ".", "lenet", ".", "LeNet5Half", "(", ")", "\n", "generator", "=", "network", ".", "gan", ".", "GeneratorA", "(", "nz", "=", "args", ".", "nz", ",", "nc", "=", "1", ",", "img_size", "=", "32", ")", "\n", "\n", "teacher", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "ckpt", ")", ")", "\n", "\n", "print", "(", "\"Teacher restored from %s\"", "%", "(", "args", ".", "ckpt", ")", ")", "\n", "teacher", "=", "teacher", ".", "to", "(", "device", ")", "\n", "student", "=", "student", ".", "to", "(", "device", ")", "\n", "generator", "=", "generator", ".", "to", "(", "device", ")", "\n", "teacher", ".", "eval", "(", ")", "\n", "\n", "optimizer_S", "=", "optim", ".", "SGD", "(", "student", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_S", ",", "weight_decay", "=", "args", ".", "weight_decay", ",", "momentum", "=", "0.9", ")", "\n", "optimizer_G", "=", "optim", ".", "Adam", "(", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_G", ")", "\n", "\n", "if", "args", ".", "scheduler", ":", "\n", "        ", "scheduler_S", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_S", ",", "args", ".", "step_size", ",", "0.1", ")", "\n", "scheduler_G", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_G", ",", "args", ".", "step_size", ",", "0.1", ")", "\n", "", "best_acc", "=", "0", "\n", "if", "args", ".", "test_only", ":", "\n", "        ", "acc", "=", "test", "(", "args", ",", "student", ",", "generator", ",", "device", ",", "test_loader", ")", "\n", "return", "\n", "", "acc_list", "=", "[", "]", "\n", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", "+", "1", ")", ":", "\n", "# Train", "\n", "        ", "if", "args", ".", "scheduler", ":", "\n", "            ", "scheduler_S", ".", "step", "(", ")", "\n", "scheduler_G", ".", "step", "(", ")", "\n", "\n", "", "train", "(", "args", ",", "teacher", "=", "teacher", ",", "student", "=", "student", ",", "generator", "=", "generator", ",", "device", "=", "device", ",", "optimizer", "=", "[", "optimizer_S", ",", "optimizer_G", "]", ",", "epoch", "=", "epoch", ")", "\n", "# Test", "\n", "acc", "=", "test", "(", "args", ",", "student", ",", "generator", ",", "device", ",", "test_loader", ",", "epoch", ")", "\n", "acc_list", ".", "append", "(", "acc", ")", "\n", "if", "acc", ">", "best_acc", ":", "\n", "            ", "best_acc", "=", "acc", "\n", "torch", ".", "save", "(", "student", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s.pt\"", "%", "(", "'mnist'", ",", "'lenet5_half'", ")", ")", "\n", "torch", ".", "save", "(", "generator", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s-generator.pt\"", "%", "(", "'mnist'", ",", "'lenet5_half'", ")", ")", "\n", "#vp.add_scalar('Acc', epoch, acc)", "\n", "", "", "print", "(", "\"Best Acc=%.6f\"", "%", "best_acc", ")", "\n", "\n", "import", "csv", "\n", "os", ".", "makedirs", "(", "'log'", ",", "exist_ok", "=", "True", ")", "\n", "with", "open", "(", "'log/DFAD-mnist.csv'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "writer", "=", "csv", ".", "writer", "(", "f", ")", "\n", "writer", ".", "writerow", "(", "acc_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_cifar.train": [[17, 53], ["teacher.eval", "student.train", "generator.train", "range", "range", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_G.zero_grad", "generator.train", "generator", "teacher", "student", "loss_G.backward", "optimizer_G.step", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_S.zero_grad", "generator().detach", "teacher", "student", "torch.l1_loss", "F.l1_loss.backward", "optimizer_S.step", "torch.l1_loss", "print", "vp.add_scalar", "vp.add_scalar", "teacher.detach", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "F.l1_loss.item", "loss_G.item", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "loss_G.item", "F.l1_loss.item", "float", "float"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar"], ["def", "train", "(", "args", ",", "teacher", ",", "student", ",", "generator", ",", "device", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "teacher", ".", "eval", "(", ")", "\n", "student", ".", "train", "(", ")", "\n", "generator", ".", "train", "(", ")", "\n", "optimizer_S", ",", "optimizer_G", "=", "optimizer", "\n", "\n", "for", "i", "in", "range", "(", "args", ".", "epoch_itrs", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "5", ")", ":", "\n", "            ", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_S", ".", "zero_grad", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", ".", "detach", "(", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "loss_S", "=", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ".", "detach", "(", ")", ")", "\n", "\n", "loss_S", ".", "backward", "(", ")", "\n", "optimizer_S", ".", "step", "(", ")", "\n", "\n", "", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "generator", ".", "train", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "\n", "#loss_G = - torch.log( F.l1_loss( s_logit, t_logit )+1) ", "\n", "loss_G", "=", "-", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ")", "\n", "\n", "loss_G", ".", "backward", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "\n", "if", "i", "%", "args", ".", "log_interval", "==", "0", ":", "\n", "            ", "print", "(", "'Train Epoch: {} [{}/{} ({:.0f}%)]\\tG_Loss: {:.6f} S_loss: {:.6f}'", ".", "format", "(", "\n", "epoch", ",", "i", ",", "args", ".", "epoch_itrs", ",", "100", "*", "float", "(", "i", ")", "/", "float", "(", "args", ".", "epoch_itrs", ")", ",", "loss_G", ".", "item", "(", ")", ",", "loss_S", ".", "item", "(", ")", ")", ")", "\n", "vp", ".", "add_scalar", "(", "'Loss_S'", ",", "(", "epoch", "-", "1", ")", "*", "args", ".", "epoch_itrs", "+", "i", ",", "loss_S", ".", "item", "(", ")", ")", "\n", "vp", ".", "add_scalar", "(", "'Loss_G'", ",", "(", "epoch", "-", "1", ")", "*", "args", ".", "epoch_itrs", "+", "i", ",", "loss_G", ".", "item", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_cifar.test": [[54, 82], ["student.eval", "generator.eval", "len", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "len", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "student", "torch.cross_entropy().item", "student.argmax", "output.argmax.eq().sum().item", "len", "data.to", "target.to", "vp.add_image", "vp.add_image", "len", "utils.misc.pack_images", "utils.misc.pack_images", "torch.cross_entropy", "output.argmax.eq().sum", "utils.misc.denormalize().clamp().detach().cpu().numpy", "utils.misc.denormalize().clamp().detach().cpu().numpy", "output.argmax.eq", "utils.misc.denormalize().clamp().detach().cpu", "utils.misc.denormalize().clamp().detach().cpu", "target.view_as", "utils.misc.denormalize().clamp().detach", "utils.misc.denormalize().clamp().detach", "utils.misc.denormalize().clamp", "utils.misc.denormalize().clamp", "utils.misc.denormalize", "utils.misc.denormalize"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.denormalize", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.denormalize"], ["", "", "", "def", "test", "(", "args", ",", "student", ",", "generator", ",", "device", ",", "test_loader", ",", "epoch", "=", "0", ")", ":", "\n", "    ", "student", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "(", "data", ".", "shape", "[", "0", "]", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ",", "device", "=", "data", ".", "device", ",", "dtype", "=", "data", ".", "dtype", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "output", "=", "student", "(", "data", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "vp", ".", "add_image", "(", "'input'", ",", "pack_images", "(", "denormalize", "(", "data", ",", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ".", "clamp", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "vp", ".", "add_image", "(", "'generated'", ",", "pack_images", "(", "denormalize", "(", "fake", ",", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ".", "clamp", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "\n", "", "test_loss", "+=", "F", ".", "cross_entropy", "(", "output", ",", "target", ",", "reduction", "=", "'sum'", ")", ".", "item", "(", ")", "# sum up batch loss", "\n", "pred", "=", "output", ".", "argmax", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# get the index of the max log-probability", "\n", "correct", "+=", "pred", ".", "eq", "(", "target", ".", "view_as", "(", "pred", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "test_loss", "/=", "len", "(", "test_loader", ".", "dataset", ")", "\n", "\n", "print", "(", "'\\nTest set: Average loss: {:.4f}, Accuracy: {}/{} ({:.4f}%)\\n'", ".", "format", "(", "\n", "test_loss", ",", "correct", ",", "len", "(", "test_loader", ".", "dataset", ")", ",", "\n", "100.", "*", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", ")", ")", "\n", "acc", "=", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_cifar.main": [[83, 183], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "random.seed", "torch.device", "torch.device", "torch.device", "torch.device", "print", "dataloader.get_dataloader", "network.resnet_8x.ResNet34_8x", "network.resnet_8x.ResNet18_8x", "network.gan.GeneratorA", "teacher.to.load_state_dict", "print", "teacher.to.to", "student.to.to", "generator.to.to", "teacher.to.eval", "torch.SGD", "torch.Adam", "range", "print", "os.makedirs", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.load", "torch.load", "torch.load", "torch.load", "student.to.parameters", "generator.to.parameters", "torch.lr_scheduler.MultiStepLR", "torch.lr_scheduler.MultiStepLR", "DFAD_cifar.test", "DFAD_cifar.train", "DFAD_cifar.test", "acc_list.append", "vp.add_scalar", "open", "csv.writer", "csv.writer.writerow", "optim.lr_scheduler.MultiStepLR.step", "optim.lr_scheduler.MultiStepLR.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "student.to.state_dict", "generator.to.state_dict"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet34_8x", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet18_8x", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar"], ["", "def", "main", "(", ")", ":", "\n", "# Training settings", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'DFAD CIFAR'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for training (default: 256)'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_batch_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for testing (default: 128)'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "500", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of epochs to train (default: 500)'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_itrs'", ",", "type", "=", "int", ",", "default", "=", "50", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_S'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'learning rate (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_G'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ",", "\n", "help", "=", "'learning rate (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_root'", ",", "type", "=", "str", ",", "default", "=", "'data'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'cifar10'", ",", "choices", "=", "[", "'cifar10'", ",", "'cifar100'", "]", ",", "\n", "help", "=", "'dataset name (default: cifar10)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'resnet18_8x'", ",", "choices", "=", "[", "'resnet18_8x'", "]", ",", "\n", "help", "=", "'model name (default: resnet18_8x)'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_decay'", ",", "type", "=", "float", ",", "default", "=", "5e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "metavar", "=", "'M'", ",", "\n", "help", "=", "'SGD momentum (default: 0.9)'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-cuda'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'disables CUDA training'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "metavar", "=", "'S'", ",", "\n", "help", "=", "'random seed (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "'checkpoint/teacher/cifar10-resnet34_8x.pt'", ")", "\n", "parser", ".", "add_argument", "(", "'--log-interval'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'how many batches to wait before logging training status'", ")", "\n", "parser", ".", "add_argument", "(", "'--nz'", ",", "type", "=", "int", ",", "default", "=", "256", ")", "\n", "parser", ".", "add_argument", "(", "'--test-only'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--download'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--step_size'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "metavar", "=", "'S'", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "use_cuda", "=", "not", "args", ".", "no_cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "use_cuda", "else", "\"cpu\"", ")", "\n", "kwargs", "=", "{", "'num_workers'", ":", "1", ",", "'pin_memory'", ":", "True", "}", "if", "use_cuda", "else", "{", "}", "\n", "print", "(", "args", ")", "\n", "\n", "_", ",", "test_loader", "=", "get_dataloader", "(", "args", ")", "\n", "\n", "num_classes", "=", "10", "if", "args", ".", "dataset", "==", "'cifar10'", "else", "100", "\n", "teacher", "=", "network", ".", "resnet_8x", ".", "ResNet34_8x", "(", "num_classes", "=", "num_classes", ")", "\n", "student", "=", "network", ".", "resnet_8x", ".", "ResNet18_8x", "(", "num_classes", "=", "num_classes", ")", "\n", "generator", "=", "network", ".", "gan", ".", "GeneratorA", "(", "nz", "=", "args", ".", "nz", ",", "nc", "=", "3", ",", "img_size", "=", "32", ")", "\n", "\n", "teacher", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "ckpt", ")", ")", "\n", "print", "(", "\"Teacher restored from %s\"", "%", "(", "args", ".", "ckpt", ")", ")", "\n", "\n", "teacher", "=", "teacher", ".", "to", "(", "device", ")", "\n", "student", "=", "student", ".", "to", "(", "device", ")", "\n", "generator", "=", "generator", ".", "to", "(", "device", ")", "\n", "\n", "teacher", ".", "eval", "(", ")", "\n", "\n", "optimizer_S", "=", "optim", ".", "SGD", "(", "student", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_S", ",", "weight_decay", "=", "args", ".", "weight_decay", ",", "momentum", "=", "0.9", ")", "\n", "optimizer_G", "=", "optim", ".", "Adam", "(", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_G", ")", "\n", "\n", "if", "args", ".", "scheduler", ":", "\n", "        ", "scheduler_S", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer_S", ",", "[", "100", ",", "200", "]", ",", "0.1", ")", "\n", "scheduler_G", "=", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimizer_G", ",", "[", "100", ",", "200", "]", ",", "0.1", ")", "\n", "", "best_acc", "=", "0", "\n", "if", "args", ".", "test_only", ":", "\n", "        ", "acc", "=", "test", "(", "args", ",", "student", ",", "generator", ",", "device", ",", "test_loader", ")", "\n", "return", "\n", "", "acc_list", "=", "[", "]", "\n", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", "+", "1", ")", ":", "\n", "# Train", "\n", "        ", "if", "args", ".", "scheduler", ":", "\n", "            ", "scheduler_S", ".", "step", "(", ")", "\n", "scheduler_G", ".", "step", "(", ")", "\n", "\n", "", "train", "(", "args", ",", "teacher", "=", "teacher", ",", "student", "=", "student", ",", "generator", "=", "generator", ",", "device", "=", "device", ",", "optimizer", "=", "[", "optimizer_S", ",", "optimizer_G", "]", ",", "epoch", "=", "epoch", ")", "\n", "# Test", "\n", "acc", "=", "test", "(", "args", ",", "student", ",", "generator", ",", "device", ",", "test_loader", ",", "epoch", ")", "\n", "acc_list", ".", "append", "(", "acc", ")", "\n", "if", "acc", ">", "best_acc", ":", "\n", "            ", "best_acc", "=", "acc", "\n", "torch", ".", "save", "(", "student", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s.pt\"", "%", "(", "args", ".", "dataset", ",", "'resnet18_8x'", ")", ")", "\n", "torch", ".", "save", "(", "generator", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s-generator.pt\"", "%", "(", "args", ".", "dataset", ",", "'resnet18_8x'", ")", ")", "\n", "", "vp", ".", "add_scalar", "(", "'Acc'", ",", "epoch", ",", "acc", ")", "\n", "", "print", "(", "\"Best Acc=%.6f\"", "%", "best_acc", ")", "\n", "\n", "import", "csv", "\n", "os", ".", "makedirs", "(", "'log'", ",", "exist_ok", "=", "True", ")", "\n", "with", "open", "(", "'log/DFAD-%s.csv'", "%", "(", "args", ".", "dataset", ")", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "writer", "=", "csv", ".", "writer", "(", "f", ")", "\n", "writer", ".", "writerow", "(", "acc_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher.train": [[15, 28], ["model.train", "enumerate", "optimizer.zero_grad", "model", "torch.cross_entropy", "F.cross_entropy.backward", "optimizer.step", "data.to", "target.to", "print", "len", "F.cross_entropy.item", "len", "len"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train"], ["def", "train", "(", "args", ",", "model", ",", "device", ",", "train_loader", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "for", "batch_idx", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "data", ")", "\n", "loss", "=", "F", ".", "cross_entropy", "(", "output", ",", "target", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "if", "args", ".", "verbose", "and", "batch_idx", "%", "args", ".", "log_interval", "==", "0", ":", "\n", "            ", "print", "(", "'Train Epoch: {} [{}/{} ({:.0f}%)]\\tLoss: {:.6f}'", ".", "format", "(", "\n", "epoch", ",", "batch_idx", "*", "len", "(", "data", ")", ",", "len", "(", "train_loader", ".", "dataset", ")", ",", "\n", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "loss", ".", "item", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher.test": [[29, 47], ["model.eval", "len", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "len", "model", "torch.cross_entropy().item", "model.argmax", "output.argmax.eq().sum().item", "len", "data.to", "target.to", "len", "torch.cross_entropy", "output.argmax.eq().sum", "output.argmax.eq", "target.view_as"], "function", ["None"], ["", "", "", "def", "test", "(", "args", ",", "model", ",", "device", ",", "test_loader", ",", "cur_epoch", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "data", ",", "target", "in", "test_loader", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "output", "=", "model", "(", "data", ")", "\n", "test_loss", "+=", "F", ".", "cross_entropy", "(", "output", ",", "target", ",", "reduction", "=", "'sum'", ")", ".", "item", "(", ")", "# sum up batch loss", "\n", "pred", "=", "output", ".", "argmax", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# get the index of the max log-probability", "\n", "correct", "+=", "pred", ".", "eq", "(", "target", ".", "view_as", "(", "pred", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "test_loss", "/=", "len", "(", "test_loader", ".", "dataset", ")", "\n", "\n", "print", "(", "'\\nEpoch {} Test set: Average loss: {:.4f}, Accuracy: {}/{} ({:.4f}%)\\n'", ".", "format", "(", "\n", "cur_epoch", ",", "test_loss", ",", "correct", ",", "len", "(", "test_loader", ".", "dataset", ")", ",", "\n", "100.", "*", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", ")", ")", "\n", "return", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher.get_model": [[48, 55], ["args.model.lower", "network.lenet.LeNet5", "args.model.lower", "torchvision.models.resnet34", "args.model.lower", "network.resnet.resnet34"], "function", ["None"], ["", "def", "get_model", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "model", ".", "lower", "(", ")", "==", "'lenet5'", ":", "\n", "        ", "return", "network", ".", "lenet", ".", "LeNet5", "(", ")", "\n", "", "elif", "args", ".", "model", ".", "lower", "(", ")", "==", "'resnet34'", ":", "\n", "        ", "return", "torchvision", ".", "models", ".", "resnet34", "(", "num_classes", "=", "args", ".", "num_classes", ",", "pretrained", "=", "args", ".", "pretrained", ")", "\n", "", "elif", "args", ".", "model", ".", "lower", "(", ")", "==", "'resnet34_8x'", ":", "\n", "        ", "return", "network", ".", "resnet", ".", "resnet34", "(", "num_classes", "=", "args", ".", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher.main": [[56, 134], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "random.seed", "torch.device", "torch.device", "torch.device", "os.makedirs", "print", "dataloader.get_dataloader", "train_teacher.get_model", "model.to.to", "torch.SGD", "range", "print", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "model.to.load_state_dict", "model.to.parameters", "torch.lr_scheduler.StepLR", "train_teacher.test", "train_teacher.train", "train_teacher.test", "torch.load", "torch.load", "torch.load", "optim.lr_scheduler.StepLR.step", "torch.save", "torch.save", "torch.save", "model.to.state_dict"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher_seg.get_model", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test"], ["", "", "def", "main", "(", ")", ":", "\n", "# Training settings", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--num_classes'", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "256", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for training (default: 64)'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_batch_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for testing (default: 1000)'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_root'", ",", "type", "=", "str", ",", "default", "=", "'data'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "30", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of epochs to train (default: 10)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'learning rate (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_decay'", ",", "type", "=", "float", ",", "default", "=", "5e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'mnist'", ",", "choices", "=", "[", "'mnist'", ",", "'svhn'", ",", "'cifar10'", ",", "'caltech101'", ",", "'nyuv2'", "]", ",", "\n", "help", "=", "'dataset name (default: mnist)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'lenet5'", ",", "choices", "=", "[", "'lenet5'", ",", "'resnet34'", ",", "'resnet34_8x'", "]", ",", "\n", "help", "=", "'model name (default: mnist)'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "metavar", "=", "'M'", ",", "\n", "help", "=", "'SGD momentum (default: 0.9)'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-cuda'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'disables CUDA training'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "metavar", "=", "'S'", ",", "\n", "help", "=", "'random seed (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--step_size'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "metavar", "=", "'S'", ",", "\n", "help", "=", "'random seed (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--log_interval'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'how many batches to wait before logging training status'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_only'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--download'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--pretrained'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--verbose'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "use_cuda", "=", "not", "args", ".", "no_cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "use_cuda", "else", "\"cpu\"", ")", "\n", "os", ".", "makedirs", "(", "'checkpoint/teacher'", ",", "exist_ok", "=", "True", ")", "\n", "\n", "kwargs", "=", "{", "'num_workers'", ":", "1", ",", "'pin_memory'", ":", "True", "}", "if", "use_cuda", "else", "{", "}", "\n", "print", "(", "args", ")", "\n", "\n", "train_loader", ",", "test_loader", "=", "get_dataloader", "(", "args", ")", "\n", "model", "=", "get_model", "(", "args", ")", "\n", "\n", "if", "args", ".", "ckpt", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "ckpt", ")", ")", "\n", "\n", "", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "weight_decay", ",", "momentum", "=", "args", ".", "momentum", ")", "\n", "best_acc", "=", "0", "\n", "if", "args", ".", "scheduler", ":", "\n", "        ", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer", ",", "args", ".", "step_size", ",", "0.1", ")", "\n", "\n", "", "if", "args", ".", "test_only", ":", "\n", "        ", "acc", "=", "test", "(", "args", ",", "model", ",", "device", ",", "test_loader", ",", "0", ")", "\n", "return", "\n", "\n", "", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", "+", "1", ")", ":", "\n", "        ", "if", "args", ".", "scheduler", ":", "\n", "            ", "scheduler", ".", "step", "(", ")", "\n", "#print(\"Lr = %.6f\"%(optimizer.param_groups[0]['lr']))", "\n", "", "train", "(", "args", ",", "model", ",", "device", ",", "train_loader", ",", "optimizer", ",", "epoch", ")", "\n", "acc", "=", "test", "(", "args", ",", "model", ",", "device", ",", "test_loader", ",", "epoch", ")", "\n", "if", "acc", ">", "best_acc", ":", "\n", "            ", "best_acc", "=", "acc", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "\"checkpoint/teacher/%s-%s.pt\"", "%", "(", "args", ".", "dataset", ",", "args", ".", "model", ")", ")", "\n", "", "", "print", "(", "\"Best Acc=%.6f\"", "%", "best_acc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher_seg.train": [[23, 36], ["model.train", "enumerate", "optimizer.zero_grad", "model", "utils.focal_loss", "utils.focal_loss.backward", "optimizer.step", "data.to", "target.to", "print", "len", "utils.focal_loss.item", "len", "len"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.utils.focal_loss"], ["def", "train", "(", "args", ",", "model", ",", "device", ",", "train_loader", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "for", "batch_idx", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "data", ")", "\n", "loss", "=", "focal_loss", "(", "output", ",", "target", ",", "gamma", "=", "2", ",", "ignore_index", "=", "255", ")", "#focal_loss(output, target, gamma=2)#F.cross_entropy(output, target, ignore_index=255)", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "if", "batch_idx", "%", "args", ".", "log_interval", "==", "0", ":", "\n", "            ", "print", "(", "'Train Epoch: {} [{}/{} ({:.0f}%)]\\tLoss: {:.6f}'", ".", "format", "(", "\n", "epoch", ",", "batch_idx", "*", "len", "(", "data", ")", ",", "len", "(", "train_loader", ".", "dataset", ")", ",", "\n", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "loss", ".", "item", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher_seg.test": [[37, 57], ["model.eval", "utils.stream_metrics.StreamSegMetrics", "utils.stream_metrics.StreamSegMetrics.get_results", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "model", "utils.stream_metrics.StreamSegMetrics.update", "data.to", "target.to", "[].detach().cpu().numpy().astype", "target.detach().cpu().numpy().astype", "vp.add_image", "vp.add_image", "vp.add_image", "utils.misc.pack_images", "utils.misc.pack_images().astype", "utils.misc.pack_images().astype", "[].detach().cpu().numpy", "target.detach().cpu().numpy", "utils.misc.pack_images", "utils.misc.pack_images", "[].detach().cpu", "target.detach().cpu", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "target.cpu().numpy", "[].detach().cpu().numpy().astype", "[].detach", "target.detach", "target.cpu", "[].detach().cpu().numpy", "model.max", "[].detach().cpu", "[].detach", "model.max"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.get_results", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.update", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target"], ["", "", "", "def", "test", "(", "args", ",", "model", ",", "device", ",", "test_loader", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "seg_metrics", "=", "StreamSegMetrics", "(", "args", ".", "num_classes", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "output", "=", "model", "(", "data", ")", "\n", "seg_metrics", ".", "update", "(", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ",", "target", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "vp", ".", "add_image", "(", "'input'", ",", "pack_images", "(", "(", "(", "data", "+", "1", ")", "/", "2", ")", ".", "clamp", "(", "0", ",", "1.0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "vp", ".", "add_image", "(", "'target'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "vp", ".", "add_image", "(", "'pred'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "\n", "", "", "", "results", "=", "seg_metrics", ".", "get_results", "(", ")", "\n", "\n", "print", "(", "'\\nTest set: Acc= %.6f, mIoU: %.6f\\n'", "%", "(", "results", "[", "'Overall Acc'", "]", ",", "results", "[", "'Mean IoU'", "]", ")", ")", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher_seg.get_model": [[58, 67], ["args.model.lower", "network.segmentation.deeplabv3.deeplabv3_resnet50", "args.model.lower", "network.segmentation.segnet.SegNetVgg19", "args.model.lower", "network.segmentation.segnet.SegNetVgg16", "args.model.lower", "network.segmentation.segnet.SegNetVgg13"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3.deeplabv3_resnet50"], ["", "def", "get_model", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "model", ".", "lower", "(", ")", "==", "'deeplabv3_resnet50'", ":", "\n", "        ", "return", "network", ".", "segmentation", ".", "deeplabv3", ".", "deeplabv3_resnet50", "(", "num_classes", "=", "args", ".", "num_classes", ",", "dropout_p", "=", "0.5", ",", "pretrained_backbone", "=", "True", ")", "\n", "", "elif", "args", ".", "model", ".", "lower", "(", ")", "==", "'segnet_vgg19'", ":", "\n", "        ", "return", "network", ".", "segmentation", ".", "segnet", ".", "SegNetVgg19", "(", "args", ".", "num_classes", ",", "pretrained_backbone", "=", "True", ")", "\n", "", "elif", "args", ".", "model", ".", "lower", "(", ")", "==", "'segnet_vgg16'", ":", "\n", "        ", "return", "network", ".", "segmentation", ".", "segnet", ".", "SegNetVgg16", "(", "args", ".", "num_classes", ",", "pretrained_backbone", "=", "True", ")", "\n", "", "elif", "args", ".", "model", ".", "lower", "(", ")", "==", "'segnet_vgg13'", ":", "\n", "        ", "return", "network", ".", "segmentation", ".", "segnet", ".", "SegNetVgg13", "(", "args", ".", "num_classes", ",", "pretrained_backbone", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher_seg.main": [[68, 147], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "random.seed", "torch.device", "torch.device", "torch.device", "print", "utils.visualizer.VisdomPlotter", "dataloader.get_dataloader", "train_teacher_seg.get_model", "model.to.to", "torch.SGD", "range", "print", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "model.to.load_state_dict", "model.to.parameters", "torch.lr_scheduler.StepLR", "train_teacher_seg.test", "print", "train_teacher_seg.train", "train_teacher_seg.test", "utils.visualizer.VisdomPlotter.add_scalar", "torch.load", "torch.load", "torch.load", "optim.lr_scheduler.StepLR.step", "torch.save", "torch.save", "torch.save", "model.to.state_dict"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.train_teacher_seg.get_model", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar"], ["", "", "def", "main", "(", ")", ":", "\n", "# Training settings", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--num_classes'", ",", "type", "=", "int", ",", "default", "=", "11", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "16", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for training (default: 64)'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_batch_size'", ",", "type", "=", "int", ",", "default", "=", "16", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for testing (default: 1000)'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "200", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of epochs to train (default: 10)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'learning rate (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_root'", ",", "type", "=", "str", ",", "default", "=", "'data'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'camvid'", ",", "choices", "=", "[", "'camvid'", ",", "'nyuv2'", "]", ",", "\n", "help", "=", "'dataset name (default: camvid)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'deeplabv3_resnet50'", ",", "choices", "=", "[", "'deeplabv3_resnet50'", ",", "'segnet_vgg19'", ",", "'segnet_vgg16'", "]", ",", "\n", "help", "=", "'model name (default: deeplabv3_resnet50)'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_decay'", ",", "type", "=", "float", ",", "default", "=", "5e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--gamma'", ",", "type", "=", "float", ",", "default", "=", "0.1", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "metavar", "=", "'M'", ",", "\n", "help", "=", "'SGD momentum (default: 0.9)'", ")", "\n", "parser", ".", "add_argument", "(", "'--no_cuda'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'disables CUDA training'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "metavar", "=", "'S'", ",", "\n", "help", "=", "'random seed (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--step_size'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "metavar", "=", "'S'", ",", "\n", "help", "=", "'random seed (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--log_interval'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'how many batches to wait before logging training status'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_only'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--download'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "use_cuda", "=", "not", "args", ".", "no_cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "use_cuda", "else", "\"cpu\"", ")", "\n", "\n", "kwargs", "=", "{", "'num_workers'", ":", "1", ",", "'pin_memory'", ":", "True", "}", "if", "use_cuda", "else", "{", "}", "\n", "print", "(", "args", ")", "\n", "\n", "global", "vp", "\n", "vp", "=", "VisdomPlotter", "(", "'15550'", ",", "'teacher-seg-%s'", "%", "args", ".", "dataset", ")", "\n", "\n", "train_loader", ",", "test_loader", "=", "get_dataloader", "(", "args", ")", "\n", "model", "=", "get_model", "(", "args", ")", "\n", "\n", "if", "args", ".", "ckpt", "is", "not", "None", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "ckpt", ")", ")", "\n", "", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "args", ".", "weight_decay", ",", "momentum", "=", "args", ".", "momentum", ")", "\n", "\n", "best_result", "=", "0", "\n", "if", "args", ".", "scheduler", ":", "\n", "        ", "scheduler", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer", ",", "args", ".", "step_size", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "\n", "", "if", "args", ".", "test_only", ":", "\n", "        ", "results", "=", "test", "(", "args", ",", "model", ",", "device", ",", "test_loader", ")", "\n", "return", "\n", "\n", "", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", "+", "1", ")", ":", "\n", "        ", "if", "args", ".", "scheduler", ":", "\n", "            ", "scheduler", ".", "step", "(", ")", "\n", "", "print", "(", "\"Lr = %.6f\"", "%", "(", "optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ")", ")", "\n", "train", "(", "args", ",", "model", ",", "device", ",", "train_loader", ",", "optimizer", ",", "epoch", ")", "\n", "results", "=", "test", "(", "args", ",", "model", ",", "device", ",", "test_loader", ")", "\n", "vp", ".", "add_scalar", "(", "'mIoU'", ",", "epoch", ",", "results", "[", "'Mean IoU'", "]", ")", "\n", "if", "results", "[", "'Mean IoU'", "]", ">", "best_result", ":", "\n", "            ", "best_result", "=", "results", "[", "'Mean IoU'", "]", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "\"checkpoint/teacher/%s-%s.pt\"", "%", "(", "args", ".", "dataset", ",", "args", ".", "model", ")", ")", "\n", "", "", "print", "(", "\"Best mIoU=%.6f\"", "%", "best_result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_camvid_deeplab.train": [[22, 56], ["teacher.eval", "student.train", "generator.train", "range", "range", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_G.zero_grad", "generator", "teacher", "student", "loss_G.backward", "optimizer_G.step", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_S.zero_grad", "generator().detach", "teacher", "student", "torch.l1_loss", "F.l1_loss.backward", "optimizer_S.step", "torch.log", "torch.log", "torch.log", "torch.log", "print", "vp.add_scalar", "vp.add_scalar", "teacher.detach", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "F.l1_loss.item", "loss_G.item", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "torch.l1_loss", "loss_G.item", "F.l1_loss.item", "float", "float"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar"], ["def", "train", "(", "args", ",", "teacher", ",", "student", ",", "generator", ",", "device", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "teacher", ".", "eval", "(", ")", "\n", "student", ".", "train", "(", ")", "\n", "generator", ".", "train", "(", ")", "\n", "optimizer_S", ",", "optimizer_G", "=", "optimizer", "\n", "\n", "for", "i", "in", "range", "(", "args", ".", "epoch_itrs", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "5", ")", ":", "\n", "            ", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_S", ".", "zero_grad", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", ".", "detach", "(", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "loss_S", "=", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ".", "detach", "(", ")", ")", "\n", "loss_S", ".", "backward", "(", ")", "\n", "optimizer_S", ".", "step", "(", ")", "\n", "\n", "", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "\n", "loss_G", "=", "-", "torch", ".", "log", "(", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ")", "+", "1", ")", "\n", "#loss_G = -F.l1_loss(s_logit, t_logit)", "\n", "\n", "loss_G", ".", "backward", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "\n", "if", "i", "%", "args", ".", "log_interval", "==", "0", ":", "\n", "            ", "print", "(", "'Train Epoch: {} [{}/{} ({:.0f}%)]\\tG_Loss: {:.6f} S_loss: {:.6f}'", ".", "format", "(", "\n", "epoch", ",", "i", ",", "args", ".", "epoch_itrs", ",", "100", "*", "float", "(", "i", ")", "/", "float", "(", "args", ".", "epoch_itrs", ")", ",", "loss_G", ".", "item", "(", ")", ",", "loss_S", ".", "item", "(", ")", ")", ")", "\n", "vp", ".", "add_scalar", "(", "'Loss_S'", ",", "(", "epoch", "-", "1", ")", "*", "args", ".", "epoch_itrs", "+", "i", ",", "loss_S", ".", "item", "(", ")", ")", "\n", "vp", ".", "add_scalar", "(", "'Loss_G'", ",", "(", "epoch", "-", "1", ")", "*", "args", ".", "epoch_itrs", "+", "i", ",", "loss_G", ".", "item", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_camvid_deeplab.test": [[60, 107], ["student.eval", "generator.eval", "teacher.eval", "utils.stream_metrics.StreamSegMetrics", "utils.stream_metrics.StreamSegMetrics.get_results", "print", "os.makedirs", "os.makedirs", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "student", "utils.stream_metrics.StreamSegMetrics.update", "data.to", "target.to", "teacher", "test_loader.dataset.decode_target().astype", "test_loader.dataset.decode_target().astype", "test_loader.dataset.decode_target().astype", "zip", "teacher", "teacher", "student", "vp.add_image", "vp.add_image", "vp.add_image", "vp.add_image", "vp.add_image", "vp.add_image", "vp.add_image", "[].detach().cpu().numpy().astype", "target.detach().cpu().numpy().astype", "PIL.Image.fromarray().save", "PIL.Image.fromarray().save", "PIL.Image.fromarray().save", "PIL.Image.fromarray().save", "utils.misc.pack_images", "utils.misc.pack_images", "utils.misc.pack_images().astype", "utils.misc.pack_images().astype", "utils.misc.pack_images().astype", "utils.misc.pack_images().astype", "utils.misc.pack_images().astype", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "[].detach().cpu().numpy", "target.detach().cpu().numpy", "[].detach().cpu().numpy", "[].detach().cpu().numpy", "target.detach().cpu().numpy", "PIL.Image.fromarray", "PIL.Image.fromarray", "PIL.Image.fromarray", "PIL.Image.fromarray", "utils.misc.pack_images", "utils.misc.pack_images", "utils.misc.pack_images", "utils.misc.pack_images", "utils.misc.pack_images", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "test_loader.dataset.decode_target", "[].detach().cpu", "target.detach().cpu", "[].detach().cpu", "[].detach().cpu", "target.detach().cpu", "target.cpu().numpy", "[].detach().cpu().numpy().astype", "[].detach().cpu().numpy().astype", "[].detach().cpu().numpy().astype", "[].detach().cpu().numpy().astype", "[].detach", "target.detach", "[].detach", "[].detach", "target.detach", "target.cpu", "[].detach().cpu().numpy", "[].detach().cpu().numpy", "[].detach().cpu().numpy", "[].detach().cpu().numpy", "[].detach().cpu", "[].detach().cpu", "[].detach().cpu", "[].detach().cpu", "student.max", "student.max", "teacher.max", "[].detach", "[].detach", "[].detach", "[].detach", "student.max", "teacher.max", "teacher.max", "student.max"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.get_results", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.update", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target"], ["def", "test", "(", "args", ",", "student", ",", "teacher", ",", "generator", ",", "device", ",", "test_loader", ")", ":", "\n", "    ", "student", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "teacher", ".", "eval", "(", ")", "\n", "\n", "seg_metrics", "=", "StreamSegMetrics", "(", "11", ")", "\n", "if", "args", ".", "save_img", ":", "\n", "        ", "os", ".", "makedirs", "(", "'results/DFAD-camvid'", ",", "exist_ok", "=", "True", ")", "\n", "", "img_idx", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "(", "data", ".", "shape", "[", "0", "]", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ",", "device", "=", "data", ".", "device", ",", "dtype", "=", "data", ".", "dtype", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "output", "=", "student", "(", "data", ")", "\n", "\n", "if", "args", ".", "save_img", ":", "\n", "                ", "t_out", "=", "teacher", "(", "data", ")", "\n", "\n", "input_imgs", "=", "(", "(", "(", "data", "+", "1", ")", "/", "2", ")", "*", "255", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "astype", "(", "'uint8'", ")", "\n", "colored_preds", "=", "test_loader", ".", "dataset", ".", "decode_target", "(", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "'uint8'", ")", "\n", "colored_teacher_preds", "=", "test_loader", ".", "dataset", ".", "decode_target", "(", "t_out", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "'uint8'", ")", "\n", "colored_targets", "=", "test_loader", ".", "dataset", ".", "decode_target", "(", "target", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "'uint8'", ")", "\n", "for", "_pred", ",", "_img", ",", "_target", ",", "_tpred", "in", "zip", "(", "colored_preds", ",", "input_imgs", ",", "colored_targets", ",", "colored_teacher_preds", ")", ":", "\n", "                    ", "Image", ".", "fromarray", "(", "_pred", ")", ".", "save", "(", "'results/DFAD-camvid/%d_pred.png'", "%", "img_idx", ")", "\n", "Image", ".", "fromarray", "(", "_img", ")", ".", "save", "(", "'results/DFAD-camvid/%d_img.png'", "%", "img_idx", ")", "\n", "Image", ".", "fromarray", "(", "_target", ")", ".", "save", "(", "'results/DFAD-camvid/%d_target.png'", "%", "img_idx", ")", "\n", "Image", ".", "fromarray", "(", "_tpred", ")", ".", "save", "(", "'results/DFAD-camvid/%d_teacher.png'", "%", "img_idx", ")", "\n", "img_idx", "+=", "1", "\n", "\n", "", "", "if", "i", "==", "0", ":", "\n", "                ", "t_out", "=", "teacher", "(", "data", ")", "\n", "t_out_onfake", "=", "teacher", "(", "fake", ")", "\n", "s_out_onfake", "=", "student", "(", "fake", ")", "\n", "vp", ".", "add_image", "(", "'input'", ",", "pack_images", "(", "(", "(", "data", "+", "1", ")", "/", "2", ")", ".", "clamp", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "vp", ".", "add_image", "(", "'generated'", ",", "pack_images", "(", "(", "(", "fake", "+", "1", ")", "/", "2", ")", ".", "clamp", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", "\n", "vp", ".", "add_image", "(", "'target'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "vp", ".", "add_image", "(", "'pred'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "vp", ".", "add_image", "(", "'teacher'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "t_out", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "vp", ".", "add_image", "(", "'teacher-onfake'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "t_out_onfake", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "vp", ".", "add_image", "(", "'student-onfake'", ",", "pack_images", "(", "test_loader", ".", "dataset", ".", "decode_target", "(", "s_out_onfake", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", ",", "channel_last", "=", "True", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "", "seg_metrics", ".", "update", "(", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ",", "target", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "\n", "", "", "results", "=", "seg_metrics", ".", "get_results", "(", ")", "\n", "print", "(", "'\\nTest set: Acc= %.6f, mIoU: %.6f\\n'", "%", "(", "results", "[", "'Overall Acc'", "]", ",", "results", "[", "'Mean IoU'", "]", ")", ")", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_camvid_deeplab.main": [[108, 217], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "random.seed", "torch.device", "torch.device", "torch.device", "torch.device", "os.makedirs", "os.makedirs", "print", "dataloader.get_dataloader", "network.segmentation.deeplabv3.deeplabv3_resnet50", "network.segmentation.deeplabv3.deeplabv3_mobilenet", "network.gan.GeneratorB", "teacher.to.load_state_dict", "print", "teacher.to.to", "student.to.to", "generator.to.to", "teacher.to.eval", "torch.SGD", "torch.Adam", "range", "print", "os.makedirs", "os.makedirs", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.load", "torch.load", "torch.load", "torch.load", "student.to.load_state_dict", "print", "student.to.parameters", "generator.to.parameters", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "DFAD_camvid_deeplab.test", "DFAD_camvid_deeplab.train", "DFAD_camvid_deeplab.test", "vp.add_scalar", "miou_list.append", "open", "csv.writer", "csv.writer.writerow", "torch.load", "torch.load", "torch.load", "torch.load", "generator.to.load_state_dict", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "optim.lr_scheduler.StepLR.step", "optim.lr_scheduler.StepLR.step", "torch.load", "torch.load", "torch.load", "torch.load", "print", "student.to.state_dict", "generator.to.state_dict"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3.deeplabv3_resnet50", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3.deeplabv3_mobilenet", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar"], ["", "def", "main", "(", ")", ":", "\n", "# Training settings", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'DFAD CamVid'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for training (default: 64)'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_batch_size'", ",", "type", "=", "int", ",", "default", "=", "16", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for testing (default: 16)'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "300", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of epochs to train (default: 300)'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_itrs'", ",", "type", "=", "int", ",", "default", "=", "50", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_S'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'learning rate of the student model (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_G'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ",", "\n", "help", "=", "'learning rate of the teacher model (default: 1e-3)'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_root'", ",", "type", "=", "str", ",", "default", "=", "'data'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'camvid'", ",", "choices", "=", "[", "'camvid'", "]", ",", "\n", "help", "=", "'dataset name (default: camvid)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'deeplabv3_resnet50'", ",", "choices", "=", "[", "'deeplabv3_resnet50'", "]", ",", "\n", "help", "=", "'model name (default: deeplabv3_resnet50)'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_decay'", ",", "type", "=", "float", ",", "default", "=", "5e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "metavar", "=", "'M'", ",", "\n", "help", "=", "'SGD momentum (default: 0.9)'", ")", "\n", "parser", ".", "add_argument", "(", "'--no_cuda'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'disables CUDA training'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "\n", "help", "=", "'random seed (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "'checkpoint/teacher/camvid-deeplabv3_resnet50-256.pt'", ")", "\n", "parser", ".", "add_argument", "(", "'--stu_ckpt'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--log_interval'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'how many batches to wait before logging training status'", ")", "\n", "parser", ".", "add_argument", "(", "'--nz'", ",", "type", "=", "int", ",", "default", "=", "256", ")", "\n", "parser", ".", "add_argument", "(", "'--test_only'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--download'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--step_size'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "metavar", "=", "'S'", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--save_img'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "use_cuda", "=", "not", "args", ".", "no_cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "random", ".", "seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "use_cuda", "else", "\"cpu\"", ")", "\n", "kwargs", "=", "{", "'num_workers'", ":", "1", ",", "'pin_memory'", ":", "True", "}", "if", "use_cuda", "else", "{", "}", "\n", "os", ".", "makedirs", "(", "'checkpoint/student'", ",", "exist_ok", "=", "True", ")", "\n", "print", "(", "args", ")", "\n", "\n", "_", ",", "test_loader", "=", "get_dataloader", "(", "args", ")", "\n", "teacher", "=", "network", ".", "segmentation", ".", "deeplabv3", ".", "deeplabv3_resnet50", "(", "num_classes", "=", "11", ")", "\n", "student", "=", "network", ".", "segmentation", ".", "deeplabv3", ".", "deeplabv3_mobilenet", "(", "num_classes", "=", "11", ",", "dropout_p", "=", "0.5", ",", "pretrained_backbone", "=", "False", ")", "\n", "generator", "=", "network", ".", "gan", ".", "GeneratorB", "(", "nz", "=", "args", ".", "nz", ",", "img_size", "=", "128", ")", "\n", "\n", "teacher", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "ckpt", ")", ")", "\n", "print", "(", "\"Teacher restored from %s\"", "%", "(", "args", ".", "ckpt", ")", ")", "\n", "\n", "if", "args", ".", "stu_ckpt", "is", "not", "None", ":", "\n", "        ", "student", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "stu_ckpt", ")", ")", "\n", "try", ":", "\n", "            ", "generator", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "stu_ckpt", "[", ":", "-", "3", "]", "+", "'-generator.pt'", ")", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "\"Generator ckpt not found\"", ")", "\n", "\n", "", "print", "(", "'student loaded from %s'", "%", "args", ".", "stu_ckpt", ")", "\n", "\n", "", "teacher", "=", "teacher", ".", "to", "(", "device", ")", "\n", "student", "=", "student", ".", "to", "(", "device", ")", "\n", "generator", "=", "generator", ".", "to", "(", "device", ")", "\n", "\n", "teacher", ".", "eval", "(", ")", "\n", "\n", "optimizer_S", "=", "optim", ".", "SGD", "(", "student", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_S", ",", "weight_decay", "=", "args", ".", "weight_decay", ",", "momentum", "=", "0.9", ")", "\n", "optimizer_G", "=", "optim", ".", "Adam", "(", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_G", ")", "\n", "\n", "if", "args", ".", "scheduler", ":", "\n", "        ", "scheduler_S", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_S", ",", "args", ".", "step_size", ",", "gamma", "=", "0.1", ")", "\n", "scheduler_G", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_G", ",", "args", ".", "step_size", ",", "gamma", "=", "0.1", ")", "\n", "\n", "", "best_result", "=", "0", "\n", "if", "args", ".", "test_only", ":", "\n", "        ", "results", "=", "test", "(", "args", ",", "student", ",", "teacher", ",", "generator", ",", "device", ",", "test_loader", ")", "\n", "return", "\n", "", "miou_list", "=", "[", "]", "\n", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", "+", "1", ")", ":", "\n", "# Train", "\n", "        ", "train", "(", "args", ",", "teacher", "=", "teacher", ",", "student", "=", "student", ",", "generator", "=", "generator", ",", "device", "=", "device", ",", "optimizer", "=", "[", "optimizer_S", ",", "optimizer_G", "]", ",", "epoch", "=", "epoch", ")", "\n", "# Test", "\n", "results", "=", "test", "(", "args", ",", "student", ",", "teacher", ",", "generator", ",", "device", ",", "test_loader", ")", "\n", "\n", "if", "results", "[", "'Mean IoU'", "]", ">", "best_result", ":", "\n", "            ", "best_result", "=", "results", "[", "'Mean IoU'", "]", "\n", "torch", ".", "save", "(", "student", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s.pt\"", "%", "(", "'camvid'", ",", "'deeplabv3_mobilenet'", ")", ")", "\n", "torch", ".", "save", "(", "generator", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s-generator.pt\"", "%", "(", "'camvid'", ",", "'deeplabv3_mobilenet'", ")", ")", "\n", "", "vp", ".", "add_scalar", "(", "'mIoU'", ",", "epoch", ",", "results", "[", "'Mean IoU'", "]", ")", "\n", "miou_list", ".", "append", "(", "results", "[", "'Mean IoU'", "]", ")", "\n", "if", "args", ".", "scheduler", ":", "\n", "            ", "scheduler_S", ".", "step", "(", ")", "\n", "scheduler_G", ".", "step", "(", ")", "\n", "\n", "", "", "print", "(", "\"Best mIoU=%.6f\"", "%", "best_result", ")", "\n", "\n", "import", "csv", "\n", "os", ".", "makedirs", "(", "'log'", ",", "exist_ok", "=", "True", ")", "\n", "with", "open", "(", "'log/DFAD-camvid.csv'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "writer", "=", "csv", ".", "writer", "(", "f", ")", "\n", "writer", ".", "writerow", "(", "miou_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.dataloader.get_dataloader": [[8, 135], ["args.dataset.lower", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "args.dataset.lower", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "args.dataset.lower", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "args.dataset.lower", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "dataset.caltech.Caltech101", "dataset.caltech.Caltech101", "args.dataset.lower", "torch.utils.data.DataLoader", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.datasets.ImageNet", "args.dataset.lower", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "dataset.camvid.CamVid", "dataset.camvid.CamVid", "args.dataset.lower", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "dataset.nyu.NYUv2", "dataset.nyu.NYUv2", "torchvision.transforms.Resize", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "utils.ext_transforms.ExtCompose", "utils.ext_transforms.ExtCompose", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "utils.ext_transforms.ExtCompose", "utils.ext_transforms.ExtCompose", "utils.ext_transforms.ExtResize", "utils.ext_transforms.ExtRandomCrop", "utils.ext_transforms.ExtRandomHorizontalFlip", "utils.ext_transforms.ExtToTensor", "utils.ext_transforms.ExtNormalize", "utils.ext_transforms.ExtResize", "utils.ext_transforms.ExtToTensor", "utils.ext_transforms.ExtNormalize", "utils.ext_transforms.ExtResize", "utils.ext_transforms.ExtRandomCrop", "utils.ext_transforms.ExtRandomHorizontalFlip", "utils.ext_transforms.ExtToTensor", "utils.ext_transforms.ExtNormalize", "utils.ext_transforms.ExtResize", "utils.ext_transforms.ExtToTensor", "utils.ext_transforms.ExtNormalize"], "function", ["None"], ["def", "get_dataloader", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "dataset", ".", "lower", "(", ")", "==", "'mnist'", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "args", ".", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "32", ",", "32", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "args", ".", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "32", ",", "32", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.1307", ",", ")", ",", "(", "0.3081", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "\n", "", "elif", "args", ".", "dataset", ".", "lower", "(", ")", "==", "'cifar10'", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR10", "(", "args", ".", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR10", "(", "args", ".", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "", "elif", "args", ".", "dataset", ".", "lower", "(", ")", "==", "'cifar100'", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR100", "(", "args", ".", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR100", "(", "args", ".", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "", "elif", "args", ".", "dataset", ".", "lower", "(", ")", "==", "'caltech101'", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "Caltech101", "(", "args", ".", "data_root", ",", "train", "=", "True", ",", "download", "=", "args", ".", "download", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "128", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "128", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.5", ",", ")", ",", "(", "0.5", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "Caltech101", "(", "args", ".", "data_root", ",", "train", "=", "False", ",", "download", "=", "args", ".", "download", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "128", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "128", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.5", ",", ")", ",", "(", "0.5", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "2", ")", "\n", "", "elif", "args", ".", "dataset", ".", "lower", "(", ")", "==", "'imagenet'", ":", "\n", "        ", "train_loader", "=", "None", "# not required", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageNet", "(", "args", ".", "data_root", ",", "split", "=", "'val'", ",", "download", "=", "True", ",", "\n", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "4", ")", "# shuffle for visualization", "\n", "\n", "############ Segmentation       ", "\n", "", "elif", "args", ".", "dataset", ".", "lower", "(", ")", "==", "'camvid'", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "CamVid", "(", "args", ".", "data_root", ",", "split", "=", "'train'", ",", "\n", "transform", "=", "ext_transforms", ".", "ExtCompose", "(", "[", "\n", "ext_transforms", ".", "ExtResize", "(", "256", ")", ",", "\n", "ext_transforms", ".", "ExtRandomCrop", "(", "128", ",", "pad_if_needed", "=", "True", ")", ",", "\n", "ext_transforms", ".", "ExtRandomHorizontalFlip", "(", ")", ",", "\n", "ext_transforms", ".", "ExtToTensor", "(", ")", ",", "\n", "ext_transforms", ".", "ExtNormalize", "(", "(", "0.5", ",", ")", ",", "(", "0.5", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "CamVid", "(", "args", ".", "data_root", ",", "split", "=", "'test'", ",", "\n", "transform", "=", "ext_transforms", ".", "ExtCompose", "(", "[", "\n", "ext_transforms", ".", "ExtResize", "(", "256", ")", ",", "\n", "ext_transforms", ".", "ExtToTensor", "(", ")", ",", "\n", "ext_transforms", ".", "ExtNormalize", "(", "(", "0.5", ",", ")", ",", "(", "0.5", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "2", ")", "\n", "", "elif", "args", ".", "dataset", ".", "lower", "(", ")", "in", "[", "'nyuv2'", "]", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "NYUv2", "(", "args", ".", "data_root", ",", "split", "=", "'train'", ",", "\n", "transform", "=", "ext_transforms", ".", "ExtCompose", "(", "[", "\n", "ext_transforms", ".", "ExtResize", "(", "256", ")", ",", "\n", "ext_transforms", ".", "ExtRandomCrop", "(", "128", ",", "pad_if_needed", "=", "True", ")", ",", "\n", "ext_transforms", ".", "ExtRandomHorizontalFlip", "(", ")", ",", "\n", "ext_transforms", ".", "ExtToTensor", "(", ")", ",", "\n", "ext_transforms", ".", "ExtNormalize", "(", "(", "0.5", ",", ")", ",", "(", "0.5", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "2", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "NYUv2", "(", "args", ".", "data_root", ",", "split", "=", "'test'", ",", "\n", "transform", "=", "ext_transforms", ".", "ExtCompose", "(", "[", "\n", "ext_transforms", ".", "ExtResize", "(", "256", ")", ",", "\n", "ext_transforms", ".", "ExtToTensor", "(", ")", ",", "\n", "ext_transforms", ".", "ExtNormalize", "(", "(", "0.5", ",", ")", ",", "(", "0.5", ",", ")", ")", "\n", "]", ")", ")", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "2", ")", "\n", "\n", "", "return", "train_loader", ",", "test_loader", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train": [[20, 56], ["teacher.eval", "student.train", "generator.train", "range", "range", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_G.zero_grad", "generator.train", "generator", "teacher", "student", "loss_G.backward", "optimizer_G.step", "torch.randn().to", "torch.randn().to", "torch.randn().to", "torch.randn().to", "optimizer_S.zero_grad", "generator().detach", "teacher", "student", "torch.l1_loss", "F.l1_loss.backward", "optimizer_S.step", "torch.l1_loss", "print", "vp.add_scalar", "vp.add_scalar", "teacher.detach", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "F.l1_loss.item", "loss_G.item", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "loss_G.item", "F.l1_loss.item", "float", "float"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar"], ["def", "train", "(", "args", ",", "teacher", ",", "student", ",", "generator", ",", "device", ",", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "teacher", ".", "eval", "(", ")", "\n", "student", ".", "train", "(", ")", "\n", "generator", ".", "train", "(", ")", "\n", "optimizer_S", ",", "optimizer_G", "=", "optimizer", "\n", "\n", "for", "i", "in", "range", "(", "args", ".", "epoch_itrs", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "5", ")", ":", "\n", "            ", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_S", ".", "zero_grad", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", ".", "detach", "(", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "loss_S", "=", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ".", "detach", "(", ")", ")", "\n", "\n", "loss_S", ".", "backward", "(", ")", "\n", "optimizer_S", ".", "step", "(", ")", "\n", "\n", "", "z", "=", "torch", ".", "randn", "(", "(", "args", ".", "batch_size", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ")", ".", "to", "(", "device", ")", "\n", "optimizer_G", ".", "zero_grad", "(", ")", "\n", "generator", ".", "train", "(", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "t_logit", "=", "teacher", "(", "fake", ")", "\n", "s_logit", "=", "student", "(", "fake", ")", "\n", "\n", "#loss_G = - torch.log( F.l1_loss( s_logit, t_logit )+1) ", "\n", "loss_G", "=", "-", "F", ".", "l1_loss", "(", "s_logit", ",", "t_logit", ")", "\n", "\n", "loss_G", ".", "backward", "(", ")", "\n", "optimizer_G", ".", "step", "(", ")", "\n", "\n", "if", "i", "%", "args", ".", "log_interval", "==", "0", ":", "\n", "            ", "print", "(", "'Train Epoch: {} [{}/{} ({:.0f}%)]\\tG_Loss: {:.6f} S_loss: {:.6f}'", ".", "format", "(", "\n", "epoch", ",", "i", ",", "args", ".", "epoch_itrs", ",", "100", "*", "float", "(", "i", ")", "/", "float", "(", "args", ".", "epoch_itrs", ")", ",", "loss_G", ".", "item", "(", ")", ",", "loss_S", ".", "item", "(", ")", ")", ")", "\n", "vp", ".", "add_scalar", "(", "'Loss_S'", ",", "(", "epoch", "-", "1", ")", "*", "args", ".", "epoch_itrs", "+", "i", ",", "loss_S", ".", "item", "(", ")", ")", "\n", "vp", ".", "add_scalar", "(", "'Loss_G'", ",", "(", "epoch", "-", "1", ")", "*", "args", ".", "epoch_itrs", "+", "i", ",", "loss_G", ".", "item", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test": [[57, 85], ["student.eval", "generator.eval", "len", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "len", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "generator", "student", "torch.cross_entropy().item", "student.argmax", "output.argmax.eq().sum().item", "len", "data.to", "target.to", "vp.add_image", "vp.add_image", "len", "utils.misc.pack_images", "utils.misc.pack_images", "torch.cross_entropy", "output.argmax.eq().sum", "output.argmax.eq", "target.view_as"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images"], ["", "", "", "def", "test", "(", "args", ",", "student", ",", "generator", ",", "device", ",", "test_loader", ")", ":", "\n", "    ", "student", ".", "eval", "(", ")", "\n", "generator", ".", "eval", "(", ")", "\n", "\n", "test_loss", "=", "0", "\n", "correct", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "i", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "            ", "data", ",", "target", "=", "data", ".", "to", "(", "device", ")", ",", "target", ".", "to", "(", "device", ")", "\n", "\n", "z", "=", "torch", ".", "randn", "(", "(", "data", ".", "shape", "[", "0", "]", ",", "args", ".", "nz", ",", "1", ",", "1", ")", ",", "device", "=", "data", ".", "device", ",", "dtype", "=", "data", ".", "dtype", ")", "\n", "fake", "=", "generator", "(", "z", ")", "\n", "output", "=", "student", "(", "data", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "vp", ".", "add_image", "(", "'input'", ",", "pack_images", "(", "(", "(", "data", "+", "1", ")", "/", "2", ")", ".", "clamp", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "col", "=", "8", ")", ")", "\n", "vp", ".", "add_image", "(", "'generated'", ",", "pack_images", "(", "(", "(", "fake", "+", "1", ")", "/", "2", ")", ".", "clamp", "(", "0", ",", "1", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "col", "=", "8", ")", ")", "\n", "\n", "", "test_loss", "+=", "F", ".", "cross_entropy", "(", "output", ",", "target", ",", "reduction", "=", "'sum'", ")", ".", "item", "(", ")", "# sum up batch loss", "\n", "pred", "=", "output", ".", "argmax", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# get the index of the max log-probability", "\n", "correct", "+=", "pred", ".", "eq", "(", "target", ".", "view_as", "(", "pred", ")", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "", "test_loss", "/=", "len", "(", "test_loader", ".", "dataset", ")", "\n", "\n", "print", "(", "'\\nTest set: Average loss: {:.4f}, Accuracy: {}/{} ({:.4f}%)\\n'", ".", "format", "(", "\n", "test_loss", ",", "correct", ",", "len", "(", "test_loader", ".", "dataset", ")", ",", "\n", "100.", "*", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", ")", ")", "\n", "acc", "=", "correct", "/", "len", "(", "test_loader", ".", "dataset", ")", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.main": [[86, 183], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.device", "torch.device", "torch.device", "torch.device", "print", "dataloader.get_dataloader", "torchvision.models.resnet34", "torchvision.models.resnet18", "network.gan.GeneratorB", "teacher.to.load_state_dict", "print", "teacher.to.to", "student.to.to", "generator.to.to", "teacher.to.eval", "torch.SGD", "torch.Adam", "range", "print", "os.makedirs", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.load", "torch.load", "torch.load", "torch.load", "student.to.parameters", "generator.to.parameters", "torch.lr_scheduler.StepLR", "torch.lr_scheduler.StepLR", "DFAD_caltech101.test", "DFAD_caltech101.train", "DFAD_caltech101.test", "acc_list.append", "vp.add_scalar", "open", "csv.writer", "csv.writer.writerow", "optim.lr_scheduler.StepLR.step", "optim.lr_scheduler.StepLR.step", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "student.to.state_dict", "generator.to.state_dict"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.dataloader.get_dataloader", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.train", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.test", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar"], ["", "def", "main", "(", ")", ":", "\n", "# Training settings", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'DFAD Caltech101'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for training (default: 64)'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_batch_size'", ",", "type", "=", "int", ",", "default", "=", "32", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'input batch size for testing (default: 32)'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "300", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of epochs to train (default: 300)'", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch_itrs'", ",", "type", "=", "int", ",", "default", "=", "50", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_S'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "metavar", "=", "'LR'", ",", "\n", "help", "=", "'learning rate (default: 0.1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--lr_G'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ",", "\n", "help", "=", "'learning rate (default: 1e-3)'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_root'", ",", "type", "=", "str", ",", "default", "=", "'data'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'caltech101'", ",", "choices", "=", "[", "'caltech101'", "]", ",", "\n", "help", "=", "'dataset name (default: caltech101)'", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "default", "=", "'resnet18'", ",", "choices", "=", "[", "'resnet18'", "]", ",", "\n", "help", "=", "'model name (default: resnet18)'", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_decay'", ",", "type", "=", "float", ",", "default", "=", "5e-4", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "metavar", "=", "'M'", ",", "\n", "help", "=", "'SGD momentum (default: 0.9)'", ")", "\n", "parser", ".", "add_argument", "(", "'--no-cuda'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'disables CUDA training'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "metavar", "=", "'S'", ",", "\n", "help", "=", "'random seed (default: 1)'", ")", "\n", "parser", ".", "add_argument", "(", "'--ckpt'", ",", "type", "=", "str", ",", "default", "=", "'checkpoint/teacher/caltech101-resnet34.pt'", ")", "\n", "parser", ".", "add_argument", "(", "'--log-interval'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'how many batches to wait before logging training status'", ")", "\n", "parser", ".", "add_argument", "(", "'--nz'", ",", "type", "=", "int", ",", "default", "=", "256", ")", "\n", "parser", ".", "add_argument", "(", "'--test-only'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--download'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "'--step_size'", ",", "type", "=", "int", ",", "default", "=", "100", ",", "metavar", "=", "'S'", ")", "\n", "parser", ".", "add_argument", "(", "'--scheduler'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "use_cuda", "=", "not", "args", ".", "no_cuda", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "use_cuda", "else", "\"cpu\"", ")", "\n", "kwargs", "=", "{", "'num_workers'", ":", "1", ",", "'pin_memory'", ":", "True", "}", "if", "use_cuda", "else", "{", "}", "\n", "print", "(", "args", ")", "\n", "\n", "_", ",", "test_loader", "=", "get_dataloader", "(", "args", ")", "\n", "teacher", "=", "torchvision", ".", "models", ".", "resnet34", "(", "num_classes", "=", "101", ")", "\n", "student", "=", "torchvision", ".", "models", ".", "resnet18", "(", "num_classes", "=", "101", ")", "\n", "generator", "=", "network", ".", "gan", ".", "GeneratorB", "(", "nz", "=", "args", ".", "nz", ",", "nc", "=", "3", ",", "img_size", "=", "128", ")", "\n", "\n", "teacher", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "ckpt", ")", ")", "\n", "\n", "print", "(", "\"Teacher restored from %s\"", "%", "(", "args", ".", "ckpt", ")", ")", "\n", "teacher", "=", "teacher", ".", "to", "(", "device", ")", "\n", "student", "=", "student", ".", "to", "(", "device", ")", "\n", "generator", "=", "generator", ".", "to", "(", "device", ")", "\n", "\n", "teacher", ".", "eval", "(", ")", "\n", "\n", "optimizer_S", "=", "optim", ".", "SGD", "(", "student", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_S", ",", "weight_decay", "=", "args", ".", "weight_decay", ",", "momentum", "=", "0.9", ")", "\n", "optimizer_G", "=", "optim", ".", "Adam", "(", "generator", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr_G", ")", "\n", "\n", "if", "args", ".", "scheduler", ":", "\n", "        ", "scheduler_S", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_S", ",", "args", ".", "step_size", ",", "0.1", ")", "\n", "scheduler_G", "=", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizer_G", ",", "args", ".", "step_size", ",", "0.1", ")", "\n", "", "best_acc", "=", "0", "\n", "if", "args", ".", "test_only", ":", "\n", "        ", "acc", "=", "test", "(", "args", ",", "student", ",", "generator", ",", "device", ",", "test_loader", ")", "\n", "return", "\n", "", "acc_list", "=", "[", "]", "\n", "for", "epoch", "in", "range", "(", "1", ",", "args", ".", "epochs", "+", "1", ")", ":", "\n", "# Train", "\n", "        ", "if", "args", ".", "scheduler", ":", "\n", "            ", "scheduler_S", ".", "step", "(", ")", "\n", "scheduler_G", ".", "step", "(", ")", "\n", "\n", "", "train", "(", "args", ",", "teacher", "=", "teacher", ",", "student", "=", "student", ",", "generator", "=", "generator", ",", "device", "=", "device", ",", "optimizer", "=", "[", "optimizer_S", ",", "optimizer_G", "]", ",", "epoch", "=", "epoch", ")", "\n", "# Test", "\n", "acc", "=", "test", "(", "args", ",", "student", ",", "generator", ",", "device", ",", "test_loader", ")", "\n", "acc_list", ".", "append", "(", "acc", ")", "\n", "if", "acc", ">", "best_acc", ":", "\n", "            ", "best_acc", "=", "acc", "\n", "torch", ".", "save", "(", "student", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s.pt\"", "%", "(", "'caltech101'", ",", "'resnet18'", ")", ")", "\n", "torch", ".", "save", "(", "generator", ".", "state_dict", "(", ")", ",", "\"checkpoint/student/%s-%s-generator.pt\"", "%", "(", "'caltech101'", ",", "'resnet18'", ")", ")", "\n", "", "vp", ".", "add_scalar", "(", "'Acc'", ",", "epoch", ",", "acc", ")", "\n", "", "print", "(", "\"Best Acc=%.6f\"", "%", "best_acc", ")", "\n", "\n", "import", "csv", "\n", "os", ".", "makedirs", "(", "'log'", ",", "exist_ok", "=", "True", ")", "\n", "with", "open", "(", "'log/DFAD-caltech101.csv'", ",", "'a'", ")", "as", "f", ":", "\n", "        ", "writer", "=", "csv", ".", "writer", "(", "f", ")", "\n", "writer", ".", "writerow", "(", "acc_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomHorizontalFlip.__init__": [[223, 225], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "p", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomHorizontalFlip.__call__": [[226, 236], ["random.random", "torchvision.hflip", "torchvision.hflip", "torchvision.hflip", "torchvision.hflip"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL Image): Image to be flipped.\n        Returns:\n            PIL Image: Randomly flipped image.\n        \"\"\"", "\n", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "return", "F", ".", "hflip", "(", "img", ")", ",", "F", ".", "hflip", "(", "lbl", ")", "\n", "", "return", "img", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomHorizontalFlip.__repr__": [[237, 239], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'(p={})'", ".", "format", "(", "self", ".", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtCompose.__init__": [[51, 53], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtCompose.__call__": [[54, 58], ["t"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "img", ",", "lbl", "=", "t", "(", "img", ",", "lbl", ")", "\n", "", "return", "img", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtCompose.__repr__": [[59, 66], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "format_string", "=", "self", ".", "__class__", ".", "__name__", "+", "'('", "\n", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "format_string", "+=", "'\\n'", "\n", "format_string", "+=", "'    {0}'", ".", "format", "(", "t", ")", "\n", "", "format_string", "+=", "'\\n)'", "\n", "return", "format_string", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtCenterCrop.__init__": [[76, 81], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtCenterCrop.__call__": [[82, 90], ["torchvision.center_crop", "torchvision.center_crop", "torchvision.center_crop", "torchvision.center_crop"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL Image): Image to be cropped.\n        Returns:\n            PIL Image: Cropped image.\n        \"\"\"", "\n", "return", "F", ".", "center_crop", "(", "img", ",", "self", ".", "size", ")", ",", "F", ".", "center_crop", "(", "lbl", ",", "self", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtCenterCrop.__repr__": [[91, 93], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'(size={0})'", ".", "format", "(", "self", ".", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomScale.__init__": [[96, 99], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "scale_range", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "self", ".", "scale_range", "=", "scale_range", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomScale.__call__": [[100, 113], ["random.uniform", "int", "int", "torchvision.resize", "torchvision.resize", "torchvision.resize", "torchvision.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL Image): Image to be scaled.\n            lbl (PIL Image): Label to be scaled.\n        Returns:\n            PIL Image: Rescaled image.\n            PIL Image: Rescaled label.\n        \"\"\"", "\n", "assert", "img", ".", "size", "==", "lbl", ".", "size", "\n", "scale", "=", "random", ".", "uniform", "(", "self", ".", "scale_range", "[", "0", "]", ",", "self", ".", "scale_range", "[", "1", "]", ")", "\n", "target_size", "=", "(", "int", "(", "img", ".", "size", "[", "0", "]", "*", "scale", ")", ",", "int", "(", "img", ".", "size", "[", "1", "]", "*", "scale", ")", ")", "\n", "return", "F", ".", "resize", "(", "img", ",", "target_size", ",", "self", ".", "interpolation", ")", ",", "F", ".", "resize", "(", "lbl", ",", "target_size", ",", "Image", ".", "NEAREST", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomScale.__repr__": [[114, 117], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "interpolate_str", "=", "_pil_interpolation_to_str", "[", "self", ".", "interpolation", "]", "\n", "return", "self", ".", "__class__", ".", "__name__", "+", "'(size={0}, interpolation={1})'", ".", "format", "(", "self", ".", "size", ",", "interpolate_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtScale.__init__": [[130, 133], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "scale", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "self", ".", "scale", "=", "scale", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtScale.__call__": [[134, 146], ["int", "int", "torchvision.resize", "torchvision.resize", "torchvision.resize", "torchvision.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL Image): Image to be scaled.\n            lbl (PIL Image): Label to be scaled.\n        Returns:\n            PIL Image: Rescaled image.\n            PIL Image: Rescaled label.\n        \"\"\"", "\n", "assert", "img", ".", "size", "==", "lbl", ".", "size", "\n", "target_size", "=", "(", "int", "(", "img", ".", "size", "[", "0", "]", "*", "self", ".", "scale", ")", ",", "int", "(", "img", ".", "size", "[", "1", "]", "*", "self", ".", "scale", ")", ")", "\n", "return", "F", ".", "resize", "(", "img", ",", "target_size", ",", "self", ".", "interpolation", ")", ",", "F", ".", "resize", "(", "lbl", ",", "target_size", ",", "Image", ".", "NEAREST", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtScale.__repr__": [[147, 150], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "interpolate_str", "=", "_pil_interpolation_to_str", "[", "self", ".", "interpolation", "]", "\n", "return", "self", ".", "__class__", ".", "__name__", "+", "'(size={0}, interpolation={1})'", ".", "format", "(", "self", ".", "size", ",", "interpolate_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomRotation.__init__": [[171, 184], ["isinstance", "ValueError", "len", "ValueError"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "degrees", ",", "resample", "=", "False", ",", "expand", "=", "False", ",", "center", "=", "None", ")", ":", "\n", "        ", "if", "isinstance", "(", "degrees", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "if", "degrees", "<", "0", ":", "\n", "                ", "raise", "ValueError", "(", "\"If degrees is a single number, it must be positive.\"", ")", "\n", "", "self", ".", "degrees", "=", "(", "-", "degrees", ",", "degrees", ")", "\n", "", "else", ":", "\n", "            ", "if", "len", "(", "degrees", ")", "!=", "2", ":", "\n", "                ", "raise", "ValueError", "(", "\"If degrees is a sequence, it must be of len 2.\"", ")", "\n", "", "self", ".", "degrees", "=", "degrees", "\n", "\n", "", "self", ".", "resample", "=", "resample", "\n", "self", ".", "expand", "=", "expand", "\n", "self", ".", "center", "=", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomRotation.get_params": [[185, 194], ["random.uniform"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_params", "(", "degrees", ")", ":", "\n", "        ", "\"\"\"Get parameters for ``rotate`` for a random rotation.\n        Returns:\n            sequence: params to be passed to ``rotate`` for random rotation.\n        \"\"\"", "\n", "angle", "=", "random", ".", "uniform", "(", "degrees", "[", "0", "]", ",", "degrees", "[", "1", "]", ")", "\n", "\n", "return", "angle", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomRotation.__call__": [[195, 207], ["ext_transforms.ExtRandomRotation.get_params", "torchvision.rotate", "torchvision.rotate", "torchvision.rotate", "torchvision.rotate"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter.get_params"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n            img (PIL Image): Image to be rotated.\n            lbl (PIL Image): Label to be rotated.\n        Returns:\n            PIL Image: Rotated image.\n            PIL Image: Rotated label.\n        \"\"\"", "\n", "\n", "angle", "=", "self", ".", "get_params", "(", "self", ".", "degrees", ")", "\n", "\n", "return", "F", ".", "rotate", "(", "img", ",", "angle", ",", "self", ".", "resample", ",", "self", ".", "expand", ",", "self", ".", "center", ")", ",", "F", ".", "rotate", "(", "lbl", ",", "angle", ",", "self", ".", "resample", ",", "self", ".", "expand", ",", "self", ".", "center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomRotation.__repr__": [[208, 216], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "format_string", "=", "self", ".", "__class__", ".", "__name__", "+", "'(degrees={0}'", ".", "format", "(", "self", ".", "degrees", ")", "\n", "format_string", "+=", "', resample={0}'", ".", "format", "(", "self", ".", "resample", ")", "\n", "format_string", "+=", "', expand={0}'", ".", "format", "(", "self", ".", "expand", ")", "\n", "if", "self", ".", "center", "is", "not", "None", ":", "\n", "            ", "format_string", "+=", "', center={0}'", ".", "format", "(", "self", ".", "center", ")", "\n", "", "format_string", "+=", "')'", "\n", "return", "format_string", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomVerticalFlip.__init__": [[247, 249], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "p", "=", "0.5", ")", ":", "\n", "        ", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomVerticalFlip.__call__": [[250, 262], ["random.random", "torchvision.vflip", "torchvision.vflip", "torchvision.vflip", "torchvision.vflip"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL Image): Image to be flipped.\n            lbl (PIL Image): Label to be flipped.\n        Returns:\n            PIL Image: Randomly flipped image.\n            PIL Image: Randomly flipped label.\n        \"\"\"", "\n", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p", ":", "\n", "            ", "return", "F", ".", "vflip", "(", "img", ")", ",", "F", ".", "vflip", "(", "lbl", ")", "\n", "", "return", "img", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomVerticalFlip.__repr__": [[263, 265], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'(p={})'", ".", "format", "(", "self", ".", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtPad.__init__": [[267, 269], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "diviser", "=", "32", ")", ":", "\n", "        ", "self", ".", "diviser", "=", "diviser", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtPad.__call__": [[270, 277], ["torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "h", ",", "w", "=", "img", ".", "size", "\n", "ph", "=", "(", "h", "//", "32", "+", "1", ")", "*", "32", "-", "h", "if", "h", "%", "32", "!=", "0", "else", "0", "\n", "pw", "=", "(", "w", "//", "32", "+", "1", ")", "*", "32", "-", "w", "if", "w", "%", "32", "!=", "0", "else", "0", "\n", "im", "=", "F", ".", "pad", "(", "img", ",", "(", "pw", "//", "2", ",", "pw", "-", "pw", "//", "2", ",", "ph", "//", "2", ",", "ph", "-", "ph", "//", "2", ")", ")", "\n", "lbl", "=", "F", ".", "pad", "(", "lbl", ",", "(", "pw", "//", "2", ",", "pw", "-", "pw", "//", "2", ",", "ph", "//", "2", ",", "ph", "-", "ph", "//", "2", ")", ")", "\n", "return", "im", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtToTensor.__init__": [[283, 286], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "normalize", "=", "True", ",", "target_type", "=", "'uint8'", ")", ":", "\n", "        ", "self", ".", "normalize", "=", "normalize", "\n", "self", ".", "target_type", "=", "target_type", "\n", "", "def", "__call__", "(", "self", ",", "pic", ",", "lbl", ")", ":", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtToTensor.__call__": [[286, 299], ["torchvision.to_tensor", "torchvision.to_tensor", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array", "numpy.array().transpose", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "pic", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Note that labels will not be normalized to [0, 1].\n        Args:\n            pic (PIL Image or numpy.ndarray): Image to be converted to tensor.\n            lbl (PIL Image or numpy.ndarray): Label to be converted to tensor. \n        Returns:\n            Tensor: Converted image and label\n        \"\"\"", "\n", "if", "self", ".", "normalize", ":", "\n", "            ", "return", "F", ".", "to_tensor", "(", "pic", ")", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "lbl", ",", "dtype", "=", "self", ".", "target_type", ")", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "pic", ",", "dtype", "=", "np", ".", "float32", ")", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ")", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "lbl", ",", "dtype", "=", "self", ".", "target_type", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtToTensor.__repr__": [[300, 302], ["None"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'()'", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtNormalize.__init__": [[313, 316], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "mean", ",", "std", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtNormalize.__call__": [[317, 327], ["torchvision.normalize", "torchvision.normalize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "tensor", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            tensor (Tensor): Tensor image of size (C, H, W) to be normalized.\n            tensor (Tensor): Tensor of label. A dummy input for ExtCompose\n        Returns:\n            Tensor: Normalized Tensor image.\n            Tensor: Unchanged Tensor label\n        \"\"\"", "\n", "return", "F", ".", "normalize", "(", "tensor", ",", "self", ".", "mean", ",", "self", ".", "std", ")", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtNormalize.__repr__": [[328, 330], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'(mean={0}, std={1})'", ".", "format", "(", "self", ".", "mean", ",", "self", ".", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomCrop.__init__": [[346, 353], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "padding", "=", "0", ",", "pad_if_needed", "=", "False", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "self", ".", "padding", "=", "padding", "\n", "self", ".", "pad_if_needed", "=", "pad_if_needed", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomCrop.get_params": [[354, 371], ["random.randint", "random.randint"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_params", "(", "img", ",", "output_size", ")", ":", "\n", "        ", "\"\"\"Get parameters for ``crop`` for a random crop.\n        Args:\n            img (PIL Image): Image to be cropped.\n            output_size (tuple): Expected output size of the crop.\n        Returns:\n            tuple: params (i, j, h, w) to be passed to ``crop`` for random crop.\n        \"\"\"", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "th", ",", "tw", "=", "output_size", "\n", "if", "w", "==", "tw", "and", "h", "==", "th", ":", "\n", "            ", "return", "0", ",", "0", ",", "h", ",", "w", "\n", "\n", "", "i", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "th", ")", "\n", "j", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "tw", ")", "\n", "return", "i", ",", "j", ",", "th", ",", "tw", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomCrop.__call__": [[372, 399], ["ext_transforms.ExtRandomCrop.get_params", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.pad", "torchvision.crop", "torchvision.crop", "torchvision.crop", "torchvision.crop", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter.get_params"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL Image): Image to be cropped.\n            lbl (PIL Image): Label to be cropped.\n        Returns:\n            PIL Image: Cropped image.\n            PIL Image: Cropped label.\n        \"\"\"", "\n", "assert", "img", ".", "size", "==", "lbl", ".", "size", ",", "'size of img and lbl should be the same. %s, %s'", "%", "(", "img", ".", "size", ",", "lbl", ".", "size", ")", "\n", "if", "self", ".", "padding", ">", "0", ":", "\n", "            ", "img", "=", "F", ".", "pad", "(", "img", ",", "self", ".", "padding", ")", "\n", "lbl", "=", "F", ".", "pad", "(", "lbl", ",", "self", ".", "padding", ")", "\n", "\n", "# pad the width if needed", "\n", "", "if", "self", ".", "pad_if_needed", "and", "img", ".", "size", "[", "0", "]", "<", "self", ".", "size", "[", "1", "]", ":", "\n", "            ", "img", "=", "F", ".", "pad", "(", "img", ",", "padding", "=", "int", "(", "(", "1", "+", "self", ".", "size", "[", "1", "]", "-", "img", ".", "size", "[", "0", "]", ")", "/", "2", ")", ")", "\n", "lbl", "=", "F", ".", "pad", "(", "lbl", ",", "padding", "=", "int", "(", "(", "1", "+", "self", ".", "size", "[", "1", "]", "-", "lbl", ".", "size", "[", "0", "]", ")", "/", "2", ")", ")", "\n", "\n", "# pad the height if needed", "\n", "", "if", "self", ".", "pad_if_needed", "and", "img", ".", "size", "[", "1", "]", "<", "self", ".", "size", "[", "0", "]", ":", "\n", "            ", "img", "=", "F", ".", "pad", "(", "img", ",", "padding", "=", "int", "(", "(", "1", "+", "self", ".", "size", "[", "0", "]", "-", "img", ".", "size", "[", "1", "]", ")", "/", "2", ")", ")", "\n", "lbl", "=", "F", ".", "pad", "(", "lbl", ",", "padding", "=", "int", "(", "(", "1", "+", "self", ".", "size", "[", "0", "]", "-", "lbl", ".", "size", "[", "1", "]", ")", "/", "2", ")", ")", "\n", "\n", "", "i", ",", "j", ",", "h", ",", "w", "=", "self", ".", "get_params", "(", "img", ",", "self", ".", "size", ")", "\n", "\n", "return", "F", ".", "crop", "(", "img", ",", "i", ",", "j", ",", "h", ",", "w", ")", ",", "F", ".", "crop", "(", "lbl", ",", "i", ",", "j", ",", "h", ",", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtRandomCrop.__repr__": [[400, 402], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'(size={0}, padding={1})'", ".", "format", "(", "self", ".", "size", ",", "self", ".", "padding", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtResize.__init__": [[416, 420], ["isinstance", "isinstance", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "interpolation", "=", "Image", ".", "BILINEAR", ")", ":", "\n", "        ", "assert", "isinstance", "(", "size", ",", "int", ")", "or", "(", "isinstance", "(", "size", ",", "collections", ".", "Iterable", ")", "and", "len", "(", "size", ")", "==", "2", ")", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "interpolation", "=", "interpolation", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtResize.__call__": [[421, 429], ["torchvision.resize", "torchvision.resize", "torchvision.resize", "torchvision.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL Image): Image to be scaled.\n        Returns:\n            PIL Image: Rescaled image.\n        \"\"\"", "\n", "return", "F", ".", "resize", "(", "img", ",", "self", ".", "size", ",", "self", ".", "interpolation", ")", ",", "F", ".", "resize", "(", "lbl", ",", "self", ".", "size", ",", "Image", ".", "NEAREST", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtResize.__repr__": [[430, 433], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "interpolate_str", "=", "_pil_interpolation_to_str", "[", "self", ".", "interpolation", "]", "\n", "return", "self", ".", "__class__", ".", "__name__", "+", "'(size={0}, interpolation={1})'", ".", "format", "(", "self", ".", "size", ",", "interpolate_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter.__init__": [[451, 457], ["ext_transforms.ExtColorJitter._check_input", "ext_transforms.ExtColorJitter._check_input", "ext_transforms.ExtColorJitter._check_input", "ext_transforms.ExtColorJitter._check_input"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter._check_input", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter._check_input", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter._check_input", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter._check_input"], ["def", "__init__", "(", "self", ",", "brightness", "=", "0", ",", "contrast", "=", "0", ",", "saturation", "=", "0", ",", "hue", "=", "0", ")", ":", "\n", "        ", "self", ".", "brightness", "=", "self", ".", "_check_input", "(", "brightness", ",", "'brightness'", ")", "\n", "self", ".", "contrast", "=", "self", ".", "_check_input", "(", "contrast", ",", "'contrast'", ")", "\n", "self", ".", "saturation", "=", "self", ".", "_check_input", "(", "saturation", ",", "'saturation'", ")", "\n", "self", ".", "hue", "=", "self", ".", "_check_input", "(", "hue", ",", "'hue'", ",", "center", "=", "0", ",", "bound", "=", "(", "-", "0.5", ",", "0.5", ")", ",", "\n", "clip_first_on_zero", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter._check_input": [[458, 476], ["isinstance", "float", "ValueError", "max", "isinstance", "TypeError", "len", "ValueError"], "methods", ["None"], ["", "def", "_check_input", "(", "self", ",", "value", ",", "name", ",", "center", "=", "1", ",", "bound", "=", "(", "0", ",", "float", "(", "'inf'", ")", ")", ",", "clip_first_on_zero", "=", "True", ")", ":", "\n", "        ", "if", "isinstance", "(", "value", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "if", "value", "<", "0", ":", "\n", "                ", "raise", "ValueError", "(", "\"If {} is a single number, it must be non negative.\"", ".", "format", "(", "name", ")", ")", "\n", "", "value", "=", "[", "center", "-", "value", ",", "center", "+", "value", "]", "\n", "if", "clip_first_on_zero", ":", "\n", "                ", "value", "[", "0", "]", "=", "max", "(", "value", "[", "0", "]", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "value", ",", "(", "tuple", ",", "list", ")", ")", "and", "len", "(", "value", ")", "==", "2", ":", "\n", "            ", "if", "not", "bound", "[", "0", "]", "<=", "value", "[", "0", "]", "<=", "value", "[", "1", "]", "<=", "bound", "[", "1", "]", ":", "\n", "                ", "raise", "ValueError", "(", "\"{} values should be between {}\"", ".", "format", "(", "name", ",", "bound", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "TypeError", "(", "\"{} should be a single number or a list/tuple with lenght 2.\"", ".", "format", "(", "name", ")", ")", "\n", "\n", "# if value is 0 or (1., 1.) for brightness/contrast/saturation", "\n", "# or (0., 0.) for hue, do nothing", "\n", "", "if", "value", "[", "0", "]", "==", "value", "[", "1", "]", "==", "center", ":", "\n", "            ", "value", "=", "None", "\n", "", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter.get_params": [[477, 509], ["random.shuffle", "ext_transforms.Compose", "random.uniform", "transforms.append", "random.uniform", "transforms.append", "random.uniform", "transforms.append", "random.uniform", "transforms.append", "ext_transforms.Lambda", "ext_transforms.Lambda", "ext_transforms.Lambda", "ext_transforms.Lambda", "torchvision.adjust_brightness", "torchvision.adjust_brightness", "torchvision.adjust_contrast", "torchvision.adjust_contrast", "torchvision.adjust_saturation", "torchvision.adjust_saturation", "torchvision.adjust_hue", "torchvision.adjust_hue"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_params", "(", "brightness", ",", "contrast", ",", "saturation", ",", "hue", ")", ":", "\n", "        ", "\"\"\"Get a randomized transform to be applied on image.\n\n        Arguments are same as that of __init__.\n\n        Returns:\n            Transform which randomly adjusts brightness, contrast and\n            saturation in a random order.\n        \"\"\"", "\n", "transforms", "=", "[", "]", "\n", "\n", "if", "brightness", "is", "not", "None", ":", "\n", "            ", "brightness_factor", "=", "random", ".", "uniform", "(", "brightness", "[", "0", "]", ",", "brightness", "[", "1", "]", ")", "\n", "transforms", ".", "append", "(", "Lambda", "(", "lambda", "img", ":", "F", ".", "adjust_brightness", "(", "img", ",", "brightness_factor", ")", ")", ")", "\n", "\n", "", "if", "contrast", "is", "not", "None", ":", "\n", "            ", "contrast_factor", "=", "random", ".", "uniform", "(", "contrast", "[", "0", "]", ",", "contrast", "[", "1", "]", ")", "\n", "transforms", ".", "append", "(", "Lambda", "(", "lambda", "img", ":", "F", ".", "adjust_contrast", "(", "img", ",", "contrast_factor", ")", ")", ")", "\n", "\n", "", "if", "saturation", "is", "not", "None", ":", "\n", "            ", "saturation_factor", "=", "random", ".", "uniform", "(", "saturation", "[", "0", "]", ",", "saturation", "[", "1", "]", ")", "\n", "transforms", ".", "append", "(", "Lambda", "(", "lambda", "img", ":", "F", ".", "adjust_saturation", "(", "img", ",", "saturation_factor", ")", ")", ")", "\n", "\n", "", "if", "hue", "is", "not", "None", ":", "\n", "            ", "hue_factor", "=", "random", ".", "uniform", "(", "hue", "[", "0", "]", ",", "hue", "[", "1", "]", ")", "\n", "transforms", ".", "append", "(", "Lambda", "(", "lambda", "img", ":", "F", ".", "adjust_hue", "(", "img", ",", "hue_factor", ")", ")", ")", "\n", "\n", "", "random", ".", "shuffle", "(", "transforms", ")", "\n", "transform", "=", "Compose", "(", "transforms", ")", "\n", "\n", "return", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter.__call__": [[510, 521], ["ext_transforms.ExtColorJitter.get_params", "ext_transforms.ExtColorJitter."], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter.get_params"], ["", "def", "__call__", "(", "self", ",", "img", ",", "lbl", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL Image): Input image.\n\n        Returns:\n            PIL Image: Color jittered image.\n        \"\"\"", "\n", "transform", "=", "self", ".", "get_params", "(", "self", ".", "brightness", ",", "self", ".", "contrast", ",", "\n", "self", ".", "saturation", ",", "self", ".", "hue", ")", "\n", "return", "transform", "(", "img", ")", ",", "lbl", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.ExtColorJitter.__repr__": [[522, 529], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "format_string", "=", "self", ".", "__class__", ".", "__name__", "+", "'('", "\n", "format_string", "+=", "'brightness={0}'", ".", "format", "(", "self", ".", "brightness", ")", "\n", "format_string", "+=", "', contrast={0}'", ".", "format", "(", "self", ".", "contrast", ")", "\n", "format_string", "+=", "', saturation={0}'", ".", "format", "(", "self", ".", "saturation", ")", "\n", "format_string", "+=", "', hue={0})'", ".", "format", "(", "self", ".", "hue", ")", "\n", "return", "format_string", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.Lambda.__init__": [[537, 540], ["callable", "repr", "type"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "lambd", ")", ":", "\n", "        ", "assert", "callable", "(", "lambd", ")", ",", "repr", "(", "type", "(", "lambd", ")", ".", "__name__", ")", "+", "\" object is not callable\"", "\n", "self", ".", "lambd", "=", "lambd", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.Lambda.__call__": [[541, 543], ["ext_transforms.Lambda.lambd"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "return", "self", ".", "lambd", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.Lambda.__repr__": [[544, 546], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "'()'", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.Compose.__init__": [[561, 563], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.Compose.__call__": [[564, 568], ["t"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "img", "=", "t", "(", "img", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.ext_transforms.Compose.__repr__": [[569, 576], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "format_string", "=", "self", ".", "__class__", ".", "__name__", "+", "'('", "\n", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "format_string", "+=", "'\\n'", "\n", "format_string", "+=", "'    {0}'", ".", "format", "(", "t", ")", "\n", "", "format_string", "+=", "'\\n)'", "\n", "return", "format_string", "", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.__init__": [[8, 12], ["visdom.Visdom"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "port", "=", "'13579'", ",", "env", "=", "'main'", ")", ":", "\n", "        ", "self", ".", "cur_win", "=", "{", "}", "\n", "self", ".", "env", "=", "env", "\n", "self", ".", "visdom", "=", "Visdom", "(", "port", "=", "port", ",", "env", "=", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_scalar": [[13, 25], ["visualizer.VisdomPlotter.visdom.line", "isinstance", "isinstance", "default_opts.update"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.update"], ["", "def", "add_scalar", "(", "self", ",", "win", ",", "x", ",", "y", ",", "opts", "=", "None", ",", "trace_name", "=", "None", ")", ":", "\n", "        ", "\"\"\" Draw line\n        \"\"\"", "\n", "if", "not", "isinstance", "(", "x", ",", "list", ")", ":", "\n", "            ", "x", "=", "[", "x", "]", "\n", "", "if", "not", "isinstance", "(", "y", ",", "list", ")", ":", "\n", "            ", "y", "=", "[", "y", "]", "\n", "", "default_opts", "=", "{", "'title'", ":", "win", "}", "\n", "if", "opts", "is", "not", "None", ":", "\n", "            ", "default_opts", ".", "update", "(", "opts", ")", "\n", "", "update", "=", "'append'", "if", "win", "is", "not", "None", "else", "None", "\n", "self", ".", "visdom", ".", "line", "(", "X", "=", "x", ",", "Y", "=", "y", ",", "opts", "=", "default_opts", ",", "win", "=", "win", ",", "env", "=", "self", ".", "env", ",", "update", "=", "update", ",", "name", "=", "trace_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_image": [[26, 33], ["dict", "visualizer.VisdomPlotter.visdom.image", "dict.update"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.update"], ["", "def", "add_image", "(", "self", ",", "win", ",", "img", ",", "opts", "=", "None", ")", ":", "\n", "        ", "\"\"\" vis image in visdom\n        \"\"\"", "\n", "default_opts", "=", "dict", "(", "title", "=", "win", ")", "\n", "if", "opts", "is", "not", "None", ":", "\n", "            ", "default_opts", ".", "update", "(", "opts", ")", "\n", "", "self", ".", "visdom", ".", "image", "(", "img", "=", "img", ",", "win", "=", "win", ",", "opts", "=", "default_opts", ",", "env", "=", "self", ".", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.visualizer.VisdomPlotter.add_table": [[34, 51], ["tbl.items", "visualizer.VisdomPlotter.visdom.text", "default_opts.update"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.update"], ["", "def", "add_table", "(", "self", ",", "win", ",", "tbl", ",", "opts", "=", "None", ")", ":", "\n", "        ", "tbl_str", "=", "\"<table width=\\\"100%\\\"> \"", "\n", "tbl_str", "+=", "\"<tr> \\\n                 <th>[Key]</th> \\\n                 <th>[Value]</th> \\\n                 </tr>\"", "\n", "for", "k", ",", "v", "in", "tbl", ".", "items", "(", ")", ":", "\n", "            ", "tbl_str", "+=", "\"<tr> \\\n                       <td>%s</td> \\\n                       <td>%s</td> \\\n                       </tr>\"", "%", "(", "k", ",", "v", ")", "\n", "", "tbl_str", "+=", "\"</table>\"", "\n", "\n", "default_opts", "=", "{", "'title'", ":", "win", "}", "\n", "if", "opts", "is", "not", "None", ":", "\n", "            ", "default_opts", ".", "update", "(", "opts", ")", "\n", "", "self", ".", "visdom", ".", "text", "(", "tbl_str", ",", "win", "=", "win", ",", "env", "=", "self", ".", "env", ",", "opts", "=", "default_opts", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics._StreamMetrics.__init__": [[5, 8], ["NotImplementedError"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "\"\"\" Overridden by subclasses \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics._StreamMetrics.update": [[9, 12], ["NotImplementedError"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "gt", ",", "pred", ")", ":", "\n", "        ", "\"\"\" Overridden by subclasses \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics._StreamMetrics.get_results": [[13, 16], ["NotImplementedError"], "methods", ["None"], ["", "def", "get_results", "(", "self", ")", ":", "\n", "        ", "\"\"\" Overridden by subclasses \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics._StreamMetrics.to_str": [[17, 20], ["NotImplementedError"], "methods", ["None"], ["", "def", "to_str", "(", "self", ",", "metrics", ")", ":", "\n", "        ", "\"\"\" Overridden by subclasses \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics._StreamMetrics.reset": [[21, 24], ["NotImplementedError"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\" Overridden by subclasses \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamSegMetrics.__init__": [[29, 33], ["numpy.zeros"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "n_classes", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "confusion_matrix", "=", "np", ".", "zeros", "(", "(", "n_classes", ",", "n_classes", ")", ")", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamSegMetrics.update": [[34, 37], ["zip", "stream_metrics.StreamSegMetrics._fast_hist", "lt.flatten", "lp.flatten"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamSegMetrics._fast_hist"], ["", "def", "update", "(", "self", ",", "label_preds", ",", "label_trues", ")", ":", "\n", "        ", "for", "lt", ",", "lp", "in", "zip", "(", "label_trues", ",", "label_preds", ")", ":", "\n", "            ", "self", ".", "confusion_matrix", "+=", "self", ".", "_fast_hist", "(", "lt", ".", "flatten", "(", ")", ",", "lp", ".", "flatten", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamSegMetrics.to_str": [[38, 49], ["results.items", "results[].items"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "to_str", "(", "results", ")", ":", "\n", "        ", "string", "=", "\"\\n\"", "\n", "for", "k", ",", "v", "in", "results", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "!=", "\"Class IoU\"", ":", "\n", "                ", "string", "+=", "\"%s: %f\\n\"", "%", "(", "k", ",", "v", ")", "\n", "\n", "", "", "string", "+=", "'Class IoU:\\n'", "\n", "for", "k", ",", "v", "in", "results", "[", "'Class IoU'", "]", ".", "items", "(", ")", ":", "\n", "            ", "string", "+=", "\"\\tclass %d: %f\\n\"", "%", "(", "k", ",", "v", ")", "\n", "", "return", "string", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamSegMetrics._fast_hist": [[50, 58], ["numpy.bincount().reshape", "numpy.bincount", "label_true[].astype"], "methods", ["None"], ["", "def", "_fast_hist", "(", "self", ",", "label_true", ",", "label_pred", ")", ":", "\n", "        ", "mask", "=", "(", "label_true", ">=", "0", ")", "&", "(", "label_true", "<", "self", ".", "n_classes", ")", "&", "(", "\n", "label_true", "!=", "self", ".", "ignore_index", ")", "\n", "hist", "=", "np", ".", "bincount", "(", "\n", "self", ".", "n_classes", "*", "label_true", "[", "mask", "]", ".", "astype", "(", "int", ")", "+", "label_pred", "[", "mask", "]", ",", "\n", "minlength", "=", "self", ".", "n_classes", "**", "2", ",", "\n", ")", ".", "reshape", "(", "self", ".", "n_classes", ",", "self", ".", "n_classes", ")", "\n", "return", "hist", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamSegMetrics.get_results": [[59, 82], ["numpy.nanmean", "numpy.nanmean", "dict", "numpy.diag().sum", "hist.sum", "numpy.diag", "hist.sum", "numpy.diag", "hist.sum", "hist.sum", "zip", "numpy.diag", "range", "numpy.diag", "hist.sum", "hist.sum"], "methods", ["None"], ["", "def", "get_results", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns accuracy score evaluation result.\n            - overall accuracy\n            - mean accuracy\n            - mean IU\n            - fwavacc\n        \"\"\"", "\n", "hist", "=", "self", ".", "confusion_matrix", "\n", "acc", "=", "np", ".", "diag", "(", "hist", ")", ".", "sum", "(", ")", "/", "hist", ".", "sum", "(", ")", "\n", "acc_cls", "=", "np", ".", "diag", "(", "hist", ")", "/", "hist", ".", "sum", "(", "axis", "=", "1", ")", "\n", "acc_cls", "=", "np", ".", "nanmean", "(", "acc_cls", ")", "\n", "iu", "=", "np", ".", "diag", "(", "hist", ")", "/", "(", "hist", ".", "sum", "(", "axis", "=", "1", ")", "+", "hist", ".", "sum", "(", "axis", "=", "0", ")", "-", "np", ".", "diag", "(", "hist", ")", ")", "\n", "mean_iu", "=", "np", ".", "nanmean", "(", "iu", ")", "\n", "freq", "=", "hist", ".", "sum", "(", "axis", "=", "1", ")", "/", "hist", ".", "sum", "(", ")", "\n", "fwavacc", "=", "(", "freq", "[", "freq", ">", "0", "]", "*", "iu", "[", "freq", ">", "0", "]", ")", ".", "sum", "(", ")", "\n", "cls_iu", "=", "dict", "(", "zip", "(", "range", "(", "self", ".", "n_classes", ")", ",", "iu", ")", ")", "\n", "\n", "return", "{", "\n", "\"Overall Acc\"", ":", "acc", ",", "\n", "\"Mean Acc\"", ":", "acc_cls", ",", "\n", "\"FreqW Acc\"", ":", "fwavacc", ",", "\n", "\"Mean IoU\"", ":", "mean_iu", ",", "\n", "\"Class IoU\"", ":", "cls_iu", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamSegMetrics.reset": [[84, 86], ["numpy.zeros"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "confusion_matrix", "=", "np", ".", "zeros", "(", "(", "self", ".", "n_classes", ",", "self", ".", "n_classes", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.AverageMeter.__init__": [[89, 91], ["dict"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "book", "=", "dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.AverageMeter.reset_all": [[92, 94], ["stream_metrics.AverageMeter.book.clear"], "methods", ["None"], ["", "def", "reset_all", "(", "self", ")", ":", "\n", "        ", "self", ".", "book", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.AverageMeter.reset": [[95, 100], ["stream_metrics.AverageMeter.book.get"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "id", ")", ":", "\n", "        ", "item", "=", "self", ".", "book", ".", "get", "(", "id", ",", "None", ")", "\n", "if", "item", "is", "not", "None", ":", "\n", "            ", "item", "[", "0", "]", "=", "0", "\n", "item", "[", "1", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.AverageMeter.update": [[101, 108], ["stream_metrics.AverageMeter.book.get"], "methods", ["None"], ["", "", "def", "update", "(", "self", ",", "id", ",", "val", ")", ":", "\n", "        ", "record", "=", "self", ".", "book", ".", "get", "(", "id", ",", "None", ")", "\n", "if", "record", "is", "None", ":", "\n", "            ", "self", ".", "book", "[", "id", "]", "=", "[", "val", ",", "1", "]", "\n", "", "else", ":", "\n", "            ", "record", "[", "0", "]", "+=", "val", "\n", "record", "[", "1", "]", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.AverageMeter.get_results": [[109, 113], ["stream_metrics.AverageMeter.book.get"], "methods", ["None"], ["", "", "def", "get_results", "(", "self", ",", "id", ")", ":", "\n", "        ", "record", "=", "self", ".", "book", ".", "get", "(", "id", ",", "None", ")", "\n", "assert", "record", "is", "not", "None", "\n", "return", "record", "[", "0", "]", "/", "record", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.__init__": [[121, 126], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "thresholds", ",", "ignore_index", "=", "0", ")", ":", "\n", "        ", "self", ".", "thresholds", "=", "thresholds", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "preds", "=", "[", "]", "\n", "self", ".", "targets", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.update": [[127, 136], ["numpy.append", "numpy.append"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "preds", ",", "targets", ")", ":", "\n", "        ", "\"\"\"\n        **Type**: numpy.ndarray or torch.Tensor\n        **Shape:**\n            - **preds**: $(N, H, W)$. \n            - **targets**: $(N, H, W)$. \n        \"\"\"", "\n", "self", ".", "preds", "=", "np", ".", "append", "(", "self", ".", "preds", ",", "preds", ")", "\n", "self", ".", "targets", "=", "np", ".", "append", "(", "self", ".", "targets", ",", "targets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.to_str": [[137, 148], ["results.items", "results[].items"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "to_str", "(", "results", ")", ":", "\n", "        ", "string", "=", "\"\\n\"", "\n", "for", "k", ",", "v", "in", "results", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "!=", "\"percents within thresholds\"", ":", "\n", "                ", "string", "+=", "\"%s: %f\\n\"", "%", "(", "k", ",", "v", ")", "\n", "\n", "", "", "string", "+=", "'percents within thresholds:\\n'", "\n", "for", "k", ",", "v", "in", "results", "[", "'percents within thresholds'", "]", ".", "items", "(", ")", ":", "\n", "            ", "string", "+=", "\"\\tthreshold %f: %f\\n\"", "%", "(", "k", ",", "v", ")", "\n", "", "return", "string", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.get_results": [[149, 181], ["numpy.sum", "numpy.abs", "numpy.maximum", "numpy.sqrt", "numpy.sum", "numpy.sum", "numpy.nansum"], "methods", ["None"], ["", "def", "get_results", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        **Returns:**\n            - **absolute relative error**\n            - **squared relative error**\n            - **precents for $r$ within thresholds**: Where $r_i = max(preds_i/targets_i, targets_i/preds_i)$\n        \"\"\"", "\n", "masks", "=", "self", ".", "targets", "!=", "self", ".", "ignore_index", "\n", "count", "=", "np", ".", "sum", "(", "masks", ")", "\n", "self", ".", "targets", "=", "self", ".", "targets", "[", "masks", "]", "\n", "self", ".", "preds", "=", "self", ".", "preds", "[", "masks", "]", "\n", "\n", "diff", "=", "np", ".", "abs", "(", "self", ".", "targets", "-", "self", ".", "preds", ")", "\n", "sigma", "=", "np", ".", "maximum", "(", "self", ".", "targets", "/", "self", ".", "preds", ",", "self", ".", "preds", "/", "self", ".", "targets", ")", "\n", "rmse", "=", "np", ".", "sqrt", "(", "(", "diff", "**", "2", ")", ".", "sum", "(", ")", "/", "count", ")", "\n", "\n", "\n", "ard", "=", "diff", "/", "self", ".", "targets", "\n", "ard", "=", "np", ".", "sum", "(", "ard", ")", "/", "count", "\n", "\n", "srd", "=", "diff", "*", "diff", "/", "self", ".", "targets", "\n", "srd", "=", "np", ".", "sum", "(", "srd", ")", "/", "count", "\n", "\n", "threshold_percents", "=", "{", "}", "\n", "for", "threshold", "in", "self", ".", "thresholds", ":", "\n", "            ", "threshold_percents", "[", "threshold", "]", "=", "np", ".", "nansum", "(", "(", "sigma", "<", "threshold", ")", ")", "/", "count", "\n", "\n", "", "return", "{", "\n", "'rmse'", ":", "rmse", ",", "\n", "'absolute relative'", ":", "ard", ",", "\n", "'squared relative'", ":", "srd", ",", "\n", "'percents within thresholds'", ":", "threshold_percents", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.reset": [[183, 186], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "preds", "=", "[", "]", "\n", "self", ".", "targets", "=", "[", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.__init__": [[45, 51], ["os.makedirs", "open", "os.path.dirname"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "fpath", "=", "None", ")", ":", "\n", "        ", "self", ".", "console", "=", "sys", ".", "stdout", "\n", "self", ".", "file", "=", "None", "\n", "if", "fpath", "is", "not", "None", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "fpath", ")", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "file", "=", "open", "(", "fpath", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.__del__": [[52, 54], ["misc.Logger.close"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.close"], ["", "", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "self", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.__enter__": [[55, 57], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.__exit__": [[58, 60], ["misc.Logger.close"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.close"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.write": [[61, 65], ["misc.Logger.console.write", "misc.Logger.file.write"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.write", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.write"], ["", "def", "write", "(", "self", ",", "msg", ")", ":", "\n", "        ", "self", ".", "console", ".", "write", "(", "msg", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "write", "(", "msg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.flush": [[66, 71], ["misc.Logger.console.flush", "misc.Logger.file.flush", "os.fsync", "misc.Logger.file.fileno"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.flush", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.flush"], ["", "", "def", "flush", "(", "self", ")", ":", "\n", "        ", "self", ".", "console", ".", "flush", "(", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "flush", "(", ")", "\n", "os", ".", "fsync", "(", "self", ".", "file", ".", "fileno", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.close": [[72, 76], ["misc.Logger.console.close", "misc.Logger.file.close"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.close", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.Logger.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "console", ".", "close", "(", ")", "\n", "if", "self", ".", "file", "is", "not", "None", ":", "\n", "            ", "self", ".", "file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.pack_images": [[7, 26], ["isinstance", "isinstance", "int", "numpy.zeros", "enumerate", "numpy.stack", "images.transpose.transpose", "len", "int", "math.ceil", "math.ceil", "math.sqrt"], "function", ["None"], ["def", "pack_images", "(", "images", ",", "col", "=", "None", ",", "channel_last", "=", "False", ")", ":", "\n", "# N, C, H, W", "\n", "    ", "if", "isinstance", "(", "images", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "images", "=", "np", ".", "stack", "(", "images", ",", "0", ")", "\n", "", "if", "channel_last", ":", "\n", "        ", "images", "=", "images", ".", "transpose", "(", "0", ",", "3", ",", "1", ",", "2", ")", "# make it channel first", "\n", "", "assert", "len", "(", "images", ".", "shape", ")", "==", "4", "\n", "assert", "isinstance", "(", "images", ",", "np", ".", "ndarray", ")", "\n", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "images", ".", "shape", "\n", "if", "col", "is", "None", ":", "\n", "        ", "col", "=", "int", "(", "math", ".", "ceil", "(", "math", ".", "sqrt", "(", "N", ")", ")", ")", "\n", "", "row", "=", "int", "(", "math", ".", "ceil", "(", "N", "/", "col", ")", ")", "\n", "pack", "=", "np", ".", "zeros", "(", "(", "C", ",", "H", "*", "row", ",", "W", "*", "col", ")", ",", "dtype", "=", "images", ".", "dtype", ")", "\n", "for", "idx", ",", "img", "in", "enumerate", "(", "images", ")", ":", "\n", "        ", "h", "=", "(", "idx", "//", "col", ")", "*", "H", "\n", "w", "=", "(", "idx", "%", "col", ")", "*", "W", "\n", "pack", "[", ":", ",", "h", ":", "h", "+", "H", ",", "w", ":", "w", "+", "W", "]", "=", "img", "\n", "", "return", "pack", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.misc.denormalize": [[28, 36], ["torch.as_tensor", "torch.as_tensor", "tensor.sub_().div_", "zip", "tensor.sub_"], "function", ["None"], ["", "def", "denormalize", "(", "tensor", ",", "mean", ",", "std", ")", ":", "\n", "    ", "_mean", "=", "[", "-", "m", "/", "s", "for", "m", ",", "s", "in", "zip", "(", "mean", ",", "std", ")", "]", "\n", "_std", "=", "[", "1", "/", "s", "for", "s", "in", "std", "]", "\n", "\n", "_mean", "=", "torch", ".", "as_tensor", "(", "_mean", ",", "dtype", "=", "tensor", ".", "dtype", ",", "device", "=", "tensor", ".", "device", ")", "\n", "_std", "=", "torch", ".", "as_tensor", "(", "_std", ",", "dtype", "=", "tensor", ".", "dtype", ",", "device", "=", "tensor", ".", "device", ")", "\n", "tensor", ".", "sub_", "(", "_mean", "[", "None", ",", ":", ",", "None", ",", "None", "]", ")", ".", "div_", "(", "_std", "[", "None", ",", ":", ",", "None", ",", "None", "]", ")", "\n", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.utils.ScaleInvariantLoss.__init__": [[15, 19], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["def", "__init__", "(", "self", ",", "la", "=", "0.5", ",", "ignore_index", "=", "0", ")", ":", "\n", "        ", "super", "(", "ScaleInvariantLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "la", "=", "la", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.utils.ScaleInvariantLoss.forward": [[20, 36], ["inputs.view.view.size", "targets.view.view.eq", "loss.mean", "len", "inputs.view.view.view", "targets.view.view.view", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow().sum", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "targets.view.eq.float", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "log_d.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ")", ":", "\n", "        ", "size", "=", "inputs", ".", "size", "(", ")", "\n", "if", "len", "(", "size", ")", ">", "2", ":", "\n", "            ", "inputs", "=", "inputs", ".", "view", "(", "size", "[", "0", "]", ",", "-", "1", ")", "\n", "targets", "=", "targets", ".", "view", "(", "size", "[", "0", "]", ",", "-", "1", ")", "\n", "\n", "", "inv_mask", "=", "targets", ".", "eq", "(", "self", ".", "ignore_index", ")", "\n", "nums", "=", "(", "1", "-", "inv_mask", ".", "float", "(", ")", ")", ".", "sum", "(", "1", ")", "\n", "\n", "log_d", "=", "torch", ".", "log", "(", "inputs", ")", "-", "torch", ".", "log", "(", "targets", ")", "\n", "log_d", "[", "inv_mask", "]", "=", "0", "\n", "\n", "loss", "=", "torch", ".", "div", "(", "torch", ".", "pow", "(", "log_d", ",", "2", ")", ".", "sum", "(", "1", ")", ",", "nums", ")", "-", "self", ".", "la", "*", "torch", ".", "pow", "(", "torch", ".", "div", "(", "log_d", ".", "sum", "(", "1", ")", ",", "nums", ")", ",", "2", ")", "\n", "\n", "return", "loss", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.utils.FocalLoss.__init__": [[38, 44], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "alpha", "=", "1", ",", "gamma", "=", "0", ",", "size_average", "=", "True", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", "FocalLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "size_average", "=", "size_average", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.utils.FocalLoss.forward": [[45, 54], ["torch.cross_entropy", "torch.cross_entropy", "torch.cross_entropy", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "focal_loss.mean", "focal_loss.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ")", ":", "\n", "        ", "ce_loss", "=", "F", ".", "cross_entropy", "(", "\n", "inputs", ",", "targets", ",", "reduction", "=", "'none'", ",", "ignore_index", "=", "self", ".", "ignore_index", ")", "\n", "pt", "=", "torch", ".", "exp", "(", "-", "ce_loss", ")", "\n", "focal_loss", "=", "self", ".", "alpha", "*", "(", "1", "-", "pt", ")", "**", "self", ".", "gamma", "*", "ce_loss", "\n", "if", "self", ".", "size_average", ":", "\n", "            ", "return", "focal_loss", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "focal_loss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.utils.focal_loss": [[55, 64], ["torch.cross_entropy", "torch.exp", "torch.exp", "torch.exp", "focal_loss.mean", "focal_loss.sum"], "function", ["None"], ["", "", "", "def", "focal_loss", "(", "inputs", ",", "targets", ",", "alpha", "=", "1", ",", "gamma", "=", "0", ",", "size_average", "=", "True", ",", "ignore_index", "=", "255", ")", ":", "\n", "    ", "ce_loss", "=", "F", ".", "cross_entropy", "(", "\n", "inputs", ",", "targets", ",", "reduction", "=", "'none'", ",", "ignore_index", "=", "ignore_index", ")", "\n", "pt", "=", "torch", ".", "exp", "(", "-", "ce_loss", ")", "\n", "focal_loss", "=", "alpha", "*", "(", "1", "-", "pt", ")", "**", "gamma", "*", "ce_loss", "\n", "if", "size_average", ":", "\n", "        ", "return", "focal_loss", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "focal_loss", ".", "sum", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.utils.kldiv": [[65, 69], ["torch.log_softmax", "torch.softmax", "torch.kl_div"], "function", ["None"], ["", "", "def", "kldiv", "(", "logits", ",", "targets", ",", "reduction", "=", "'batchmean'", ")", ":", "\n", "    ", "p", "=", "F", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "q", "=", "F", ".", "softmax", "(", "targets", ",", "dim", "=", "1", ")", "\n", "return", "F", ".", "kl_div", "(", "p", ",", "q", ",", "reduction", "=", "reduction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.utils.soft_cross_entropy": [[70, 92], ["torch.log_softmax", "torch.sum", "torch.sum", "torch.sum", "torch.softmax", "torch.sum.mean"], "function", ["None"], ["", "def", "soft_cross_entropy", "(", "logits", ",", "target", ",", "T", "=", "1.0", ",", "size_average", "=", "True", ",", "target_is_prob", "=", "False", ")", ":", "\n", "    ", "\"\"\" Cross Entropy for soft targets\n    \n    **Parameters:**\n        - **logits** (Tensor): logits score (e.g. outputs of fc layer)\n        - **targets** (Tensor): logits of soft targets\n        - **T** (float): temperature\u3000of distill\n        - **size_average**: average the outputs\n        - **target_is_prob**: set True if target is already a probability.\n    \"\"\"", "\n", "if", "target_is_prob", ":", "\n", "        ", "p_target", "=", "target", "\n", "", "else", ":", "\n", "        ", "p_target", "=", "F", ".", "softmax", "(", "target", "/", "T", ",", "dim", "=", "1", ")", "\n", "\n", "", "logp_pred", "=", "F", ".", "log_softmax", "(", "logits", "/", "T", ",", "dim", "=", "1", ")", "\n", "# F.kl_div(logp_pred, p_target, reduction='batchmean')*T*T", "\n", "ce", "=", "torch", ".", "sum", "(", "-", "p_target", "*", "logp_pred", ",", "dim", "=", "1", ")", "\n", "if", "size_average", ":", "\n", "        ", "return", "ce", ".", "mean", "(", ")", "*", "T", "*", "T", "\n", "", "else", ":", "\n", "        ", "return", "ce", "*", "T", "*", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.utils.pairwise_distances": [[93, 117], ["len", "x.view.view", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "x_norm.view", "torch.mm", "torch.mm", "torch.mm"], "function", ["None"], ["", "", "def", "pairwise_distances", "(", "x", ",", "y", "=", "None", ")", ":", "\n", "    ", "'''\n    Input: x is a Nxd matrix\n           y is an optional Mxd matirx\n    Output: dist is a NxM matrix where dist[i,j] is the square norm between x[i,:] and y[j,:]\n            if y is not given then use 'y=x'.\n    i.e. dist[i,j] = ||x[i,:]-y[j,:]||^2\n    '''", "\n", "if", "len", "(", "x", ".", "shape", ")", "!=", "2", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n", "", "x_norm", "=", "(", "x", "**", "2", ")", ".", "sum", "(", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "if", "y", "is", "not", "None", ":", "\n", "        ", "y_t", "=", "torch", ".", "transpose", "(", "y", ",", "0", ",", "1", ")", "\n", "y_norm", "=", "(", "y", "**", "2", ")", ".", "sum", "(", "1", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "y_t", "=", "torch", ".", "transpose", "(", "x", ",", "0", ",", "1", ")", "\n", "y_norm", "=", "x_norm", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "", "dist", "=", "x_norm", "+", "y_norm", "-", "2.0", "*", "torch", ".", "mm", "(", "x", ",", "y_t", ")", "\n", "# Ensure diagonal is zero if x=y", "\n", "# if y is None:", "\n", "#     dist = dist - torch.diag(dist.diag)", "\n", "return", "dist", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.gan.Flatten.__init__": [[6, 8], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.gan.Flatten.forward": [[9, 11], ["x.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.gan.GeneratorA.__init__": [[13, 34], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nz", "=", "100", ",", "ngf", "=", "64", ",", "nc", "=", "1", ",", "img_size", "=", "32", ")", ":", "\n", "        ", "super", "(", "GeneratorA", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "init_size", "=", "img_size", "//", "4", "\n", "self", ".", "l1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "nz", ",", "ngf", "*", "2", "*", "self", ".", "init_size", "**", "2", ")", ")", "\n", "\n", "self", ".", "conv_blocks0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", ")", "\n", "self", ".", "conv_blocks1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "ngf", "*", "2", ",", "ngf", "*", "2", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "conv_blocks2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "ngf", "*", "2", ",", "ngf", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "ngf", ",", "nc", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "nc", ",", "affine", "=", "False", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.gan.GeneratorA.forward": [[36, 45], ["gan.GeneratorA.l1", "out.view.view.view", "gan.GeneratorA.conv_blocks0", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "gan.GeneratorA.conv_blocks1", "torch.functional.interpolate", "torch.functional.interpolate", "torch.functional.interpolate", "gan.GeneratorA.conv_blocks2", "z.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ")", ":", "\n", "        ", "out", "=", "self", ".", "l1", "(", "z", ".", "view", "(", "z", ".", "shape", "[", "0", "]", ",", "-", "1", ")", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "self", ".", "init_size", ",", "self", ".", "init_size", ")", "\n", "img", "=", "self", ".", "conv_blocks0", "(", "out", ")", "\n", "img", "=", "nn", ".", "functional", ".", "interpolate", "(", "img", ",", "scale_factor", "=", "2", ")", "\n", "img", "=", "self", ".", "conv_blocks1", "(", "img", ")", "\n", "img", "=", "nn", ".", "functional", ".", "interpolate", "(", "img", ",", "scale_factor", "=", "2", ")", "\n", "img", "=", "self", ".", "conv_blocks2", "(", "img", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.gan.GeneratorB.__init__": [[50, 97], ["torch.Module.__init__", "isinstance", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "gan.GeneratorB.modules", "gan.Flatten", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "isinstance", "isinstance", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.normal_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["def", "__init__", "(", "self", ",", "nz", "=", "256", ",", "ngf", "=", "64", ",", "nc", "=", "3", ",", "img_size", "=", "64", ",", "slope", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "GeneratorB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "isinstance", "(", "img_size", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "self", ".", "init_size", "=", "(", "img_size", "[", "0", "]", "//", "16", ",", "img_size", "[", "1", "]", "//", "16", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "init_size", "=", "(", "img_size", "//", "16", ",", "img_size", "//", "16", ")", "\n", "\n", "", "self", ".", "project", "=", "nn", ".", "Sequential", "(", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "nz", ",", "ngf", "*", "8", "*", "self", ".", "init_size", "[", "0", "]", "*", "self", ".", "init_size", "[", "1", "]", ")", ",", "\n", ")", "\n", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "8", ")", ",", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "8", ",", "ngf", "*", "4", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "4", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "slope", ",", "inplace", "=", "True", ")", ",", "\n", "# 2x", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "4", ",", "ngf", "*", "2", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", "*", "2", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "slope", ",", "inplace", "=", "True", ")", ",", "\n", "# 4x", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", "*", "2", ",", "ngf", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "slope", ",", "inplace", "=", "True", ")", ",", "\n", "# 8x", "\n", "\n", "nn", ".", "ConvTranspose2d", "(", "ngf", ",", "ngf", ",", "4", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "ngf", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "slope", ",", "inplace", "=", "True", ")", ",", "\n", "# 16x", "\n", "\n", "nn", ".", "Conv2d", "(", "ngf", ",", "nc", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "Tanh", "(", ")", ",", "\n", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "ConvTranspose2d", ",", "nn", ".", "Linear", ",", "nn", ".", "Conv2d", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0.0", ",", "0.02", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "if", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "1.0", ",", "0.02", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.gan.GeneratorB.forward": [[98, 103], ["gan.GeneratorB.project", "proj.view.view.view", "gan.GeneratorB.main"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.None.DFAD_caltech101.main"], ["", "", "", "def", "forward", "(", "self", ",", "z", ")", ":", "\n", "        ", "proj", "=", "self", ".", "project", "(", "z", ")", "\n", "proj", "=", "proj", ".", "view", "(", "proj", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "self", ".", "init_size", "[", "0", "]", ",", "self", ".", "init_size", "[", "1", "]", ")", "\n", "output", "=", "self", ".", "main", "(", "proj", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.BasicBlock.__init__": [[10, 22], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.BasicBlock.forward": [[24, 30], ["torch.relu", "torch.relu", "torch.relu", "resnet_8x.BasicBlock.bn2", "resnet_8x.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet_8x.BasicBlock.bn1", "resnet_8x.BasicBlock.conv2", "resnet_8x.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.Bottleneck.__init__": [[35, 49], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.Bottleneck.forward": [[51, 58], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet_8x.Bottleneck.bn3", "resnet_8x.Bottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet_8x.Bottleneck.bn1", "resnet_8x.Bottleneck.bn2", "resnet_8x.Bottleneck.conv3", "resnet_8x.Bottleneck.conv1", "resnet_8x.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet.__init__": [[61, 79], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet_8x.ResNet._make_layer", "resnet_8x.ResNet._make_layer", "resnet_8x.ResNet._make_layer", "resnet_8x.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "resnet_8x.ResNet.modules", "isinstance", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet._make_layer", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet._make_layer", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet._make_layer", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "'fan_out'", ",", "nonlinearity", "=", "'relu'", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "(", "nn", ".", "BatchNorm2d", ",", "nn", ".", "GroupNorm", ")", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet._make_layer": [[80, 87], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet.forward": [[88, 101], ["torch.relu", "torch.relu", "torch.relu", "resnet_8x.ResNet.layer1", "resnet_8x.ResNet.layer2", "resnet_8x.ResNet.layer3", "resnet_8x.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet_8x.ResNet.view", "resnet_8x.ResNet.linear", "resnet_8x.ResNet.bn1", "resnet_8x.ResNet.size", "resnet_8x.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "out_feature", "=", "False", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "feature", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "feature", ")", "\n", "if", "out_feature", "==", "False", ":", "\n", "            ", "return", "out", "\n", "", "else", ":", "\n", "            ", "return", "out", ",", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet18_8x": [[103, 105], ["resnet_8x.ResNet"], "function", ["None"], ["", "", "", "def", "ResNet18_8x", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet34_8x": [[106, 108], ["resnet_8x.ResNet"], "function", ["None"], ["", "def", "ResNet34_8x", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet50_8x": [[109, 111], ["resnet_8x.ResNet"], "function", ["None"], ["", "def", "ResNet50_8x", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet101_8x": [[112, 114], ["resnet_8x.ResNet"], "function", ["None"], ["", "def", "ResNet101_8x", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.resnet_8x.ResNet152_8x": [[115, 117], ["resnet_8x.ResNet"], "function", ["None"], ["", "def", "ResNet152_8x", "(", "num_classes", "=", "10", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.lenet.LeNet5.__init__": [[8, 22], ["torch.Module.__init__", "torch.Conv2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.Linear", "torch.ReLU", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LeNet5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "6", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "maxpool1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "6", ",", "16", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "maxpool2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "16", ",", "120", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ")", "\n", "self", ".", "relu3", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "120", ",", "84", ")", "\n", "self", ".", "relu4", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "84", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.lenet.LeNet5.forward": [[23, 40], ["lenet.LeNet5.conv1", "lenet.LeNet5.relu1", "lenet.LeNet5.maxpool1", "lenet.LeNet5.conv2", "lenet.LeNet5.relu2", "lenet.LeNet5.maxpool2", "lenet.LeNet5.conv3", "lenet.LeNet5.relu3", "lenet.LeNet5.view", "lenet.LeNet5.fc1", "lenet.LeNet5.relu4", "lenet.LeNet5.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ",", "out_feature", "=", "False", ")", ":", "\n", "        ", "output", "=", "self", ".", "conv1", "(", "img", ")", "\n", "output", "=", "self", ".", "relu1", "(", "output", ")", "\n", "output", "=", "self", ".", "maxpool1", "(", "output", ")", "\n", "output", "=", "self", ".", "conv2", "(", "output", ")", "\n", "output", "=", "self", ".", "relu2", "(", "output", ")", "\n", "output", "=", "self", ".", "maxpool2", "(", "output", ")", "\n", "output", "=", "self", ".", "conv3", "(", "output", ")", "\n", "output", "=", "self", ".", "relu3", "(", "output", ")", "\n", "feature", "=", "output", ".", "view", "(", "-", "1", ",", "120", ")", "\n", "output", "=", "self", ".", "fc1", "(", "feature", ")", "\n", "output", "=", "self", ".", "relu4", "(", "output", ")", "\n", "output", "=", "self", ".", "fc2", "(", "output", ")", "\n", "if", "out_feature", "==", "False", ":", "\n", "            ", "return", "output", "\n", "", "else", ":", "\n", "            ", "return", "output", ",", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.lenet.LeNet5Half.__init__": [[44, 58], ["torch.Module.__init__", "torch.Conv2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.ReLU", "torch.Linear", "torch.ReLU", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "LeNet5Half", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "3", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "maxpool1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "3", ",", "8", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ")", "\n", "self", ".", "relu2", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "maxpool2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "(", "2", ",", "2", ")", ",", "stride", "=", "2", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "8", ",", "60", ",", "kernel_size", "=", "(", "5", ",", "5", ")", ")", "\n", "self", ".", "relu3", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "60", ",", "42", ")", "\n", "self", ".", "relu4", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "42", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.network.lenet.LeNet5Half.forward": [[59, 76], ["lenet.LeNet5Half.conv1", "lenet.LeNet5Half.relu1", "lenet.LeNet5Half.maxpool1", "lenet.LeNet5Half.conv2", "lenet.LeNet5Half.relu2", "lenet.LeNet5Half.maxpool2", "lenet.LeNet5Half.conv3", "lenet.LeNet5Half.relu3", "lenet.LeNet5Half.view", "lenet.LeNet5Half.fc1", "lenet.LeNet5Half.relu4", "lenet.LeNet5Half.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ",", "out_feature", "=", "False", ")", ":", "\n", "        ", "output", "=", "self", ".", "conv1", "(", "img", ")", "\n", "output", "=", "self", ".", "relu1", "(", "output", ")", "\n", "output", "=", "self", ".", "maxpool1", "(", "output", ")", "\n", "output", "=", "self", ".", "conv2", "(", "output", ")", "\n", "output", "=", "self", ".", "relu2", "(", "output", ")", "\n", "output", "=", "self", ".", "maxpool2", "(", "output", ")", "\n", "output", "=", "self", ".", "conv3", "(", "output", ")", "\n", "output", "=", "self", ".", "relu3", "(", "output", ")", "\n", "feature", "=", "output", ".", "view", "(", "-", "1", ",", "60", ")", "\n", "output", "=", "self", ".", "fc1", "(", "feature", ")", "\n", "output", "=", "self", ".", "relu4", "(", "output", ")", "\n", "output", "=", "self", ".", "fc2", "(", "output", ")", "\n", "if", "out_feature", "==", "False", ":", "\n", "            ", "return", "output", "\n", "", "else", ":", "\n", "            ", "return", "output", ",", "feature", "", "", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.InvertedResidual.__init__": [[24, 57], ["torch.Module.__init__", "round", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "BatchNorm"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", ",", "dilation", ",", "expand_ratio", ",", "BatchNorm", ")", ":", "\n", "        ", "super", "(", "InvertedResidual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "assert", "stride", "in", "[", "1", ",", "2", "]", "\n", "\n", "hidden_dim", "=", "round", "(", "inp", "*", "expand_ratio", ")", "\n", "self", ".", "use_res_connect", "=", "self", ".", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "self", ".", "kernel_size", "=", "3", "\n", "self", ".", "dilation", "=", "dilation", "\n", "\n", "if", "expand_ratio", "==", "1", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "0", ",", "dilation", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "oup", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "hidden_dim", ",", "1", ",", "1", ",", "0", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "0", ",", "dilation", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "oup", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.InvertedResidual.forward": [[59, 66], ["mobilenet.fixed_padding", "mobilenet.InvertedResidual.conv", "mobilenet.InvertedResidual.conv"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.fixed_padding"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_pad", "=", "fixed_padding", "(", "x", ",", "self", ".", "kernel_size", ",", "dilation", "=", "self", ".", "dilation", ")", "\n", "if", "self", ".", "use_res_connect", ":", "\n", "            ", "x", "=", "x", "+", "self", ".", "conv", "(", "x_pad", ")", "\n", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "conv", "(", "x_pad", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.MobileNetV2.__init__": [[69, 117], ["torch.Module.__init__", "int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mobilenet.MobileNetV2._initialize_weights", "mobilenet.conv_bn", "int", "range", "mobilenet.MobileNetV2._load_pretrained_model", "mobilenet.MobileNetV2.features.append", "mobilenet.MobileNetV2.features.append", "block", "block"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.MobileNetV2._initialize_weights", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.conv_bn", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.MobileNetV2._load_pretrained_model"], ["    ", "def", "__init__", "(", "self", ",", "output_stride", "=", "8", ",", "BatchNorm", "=", "None", ",", "width_mult", "=", "1.", ",", "pretrained", "=", "True", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "block", "=", "InvertedResidual", "\n", "input_channel", "=", "32", "\n", "current_stride", "=", "1", "\n", "rate", "=", "1", "\n", "if", "BatchNorm", "is", "None", ":", "\n", "            ", "BatchNorm", "=", "nn", ".", "BatchNorm2d", "\n", "", "interverted_residual_setting", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "2", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "\n", "# building first layer", "\n", "input_channel", "=", "int", "(", "input_channel", "*", "width_mult", ")", "\n", "self", ".", "features", "=", "[", "conv_bn", "(", "3", ",", "input_channel", ",", "2", ",", "BatchNorm", ")", "]", "\n", "current_stride", "*=", "2", "\n", "# building inverted residual blocks", "\n", "for", "t", ",", "c", ",", "n", ",", "s", "in", "interverted_residual_setting", ":", "\n", "            ", "if", "current_stride", "==", "output_stride", ":", "\n", "                ", "stride", "=", "1", "\n", "dilation", "=", "rate", "\n", "rate", "*=", "s", "\n", "", "else", ":", "\n", "                ", "stride", "=", "s", "\n", "dilation", "=", "1", "\n", "current_stride", "*=", "s", "\n", "", "output_channel", "=", "int", "(", "c", "*", "width_mult", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "self", ".", "features", ".", "append", "(", "block", "(", "input_channel", ",", "output_channel", ",", "stride", ",", "dilation", ",", "t", ",", "BatchNorm", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "features", ".", "append", "(", "block", "(", "input_channel", ",", "output_channel", ",", "1", ",", "dilation", ",", "t", ",", "BatchNorm", ")", ")", "\n", "", "input_channel", "=", "output_channel", "\n", "", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "features", ")", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n", "if", "pretrained", ":", "\n", "            ", "self", ".", "_load_pretrained_model", "(", ")", "\n", "\n", "", "self", ".", "low_level_features", "=", "self", ".", "features", "[", "0", ":", "4", "]", "\n", "self", ".", "high_level_features", "=", "self", ".", "features", "[", "4", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.MobileNetV2.forward": [[118, 122], ["mobilenet.MobileNetV2.low_level_features", "mobilenet.MobileNetV2.high_level_features"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "low_level_feat", "=", "self", ".", "low_level_features", "(", "x", ")", "\n", "x", "=", "self", ".", "high_level_features", "(", "low_level_feat", ")", "\n", "return", "x", ",", "low_level_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.MobileNetV2._load_pretrained_model": [[123, 132], ["torch.load_url", "torch.load_url", "torch.load_url", "torch.load_url", "mobilenet.MobileNetV2.state_dict", "torch.load_url.items", "mobilenet.MobileNetV2.update", "mobilenet.MobileNetV2.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.utils.stream_metrics.StreamDepthMetrics.update"], ["", "def", "_load_pretrained_model", "(", "self", ")", ":", "\n", "        ", "pretrain_dict", "=", "model_zoo", ".", "load_url", "(", "'http://jeff95.me/models/mobilenet_v2-6a65762b.pth'", ")", "\n", "model_dict", "=", "{", "}", "\n", "state_dict", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "k", ",", "v", "in", "pretrain_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "k", "in", "state_dict", ":", "\n", "                ", "model_dict", "[", "k", "]", "=", "v", "\n", "", "", "state_dict", ".", "update", "(", "model_dict", ")", "\n", "self", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.MobileNetV2._initialize_weights": [[133, 142], ["mobilenet.MobileNetV2.modules", "isinstance", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "isinstance", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "# n = m.kernel_size[0] * m.kernel_size[1] * m.out_channels", "\n", "# m.weight.data.normal_(0, math.sqrt(2. / n))", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.conv_bn": [[7, 12], ["torch.Sequential", "torch.Conv2d", "BatchNorm", "torch.ReLU6"], "function", ["None"], ["def", "conv_bn", "(", "inp", ",", "oup", ",", "stride", ",", "BatchNorm", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "3", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "BatchNorm", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.mobilenet.fixed_padding": [[14, 21], ["torch.pad"], "function", ["None"], ["", "def", "fixed_padding", "(", "inputs", ",", "kernel_size", ",", "dilation", ")", ":", "\n", "    ", "kernel_size_effective", "=", "kernel_size", "+", "(", "kernel_size", "-", "1", ")", "*", "(", "dilation", "-", "1", ")", "\n", "pad_total", "=", "kernel_size_effective", "-", "1", "\n", "pad_beg", "=", "pad_total", "//", "2", "\n", "pad_end", "=", "pad_total", "-", "pad_beg", "\n", "padded_inputs", "=", "F", ".", "pad", "(", "inputs", ",", "(", "pad_beg", ",", "pad_end", ",", "pad_beg", ",", "pad_end", ")", ")", "\n", "return", "padded_inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation._deeplab.DeepLabHead.__init__": [[30, 37], ["torch.nn.Sequential.__init__", "_deeplab.ASPP", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "num_classes", ")", ":", "\n", "        ", "super", "(", "DeepLabHead", ",", "self", ")", ".", "__init__", "(", "\n", "ASPP", "(", "in_channels", ",", "[", "12", ",", "24", ",", "32", "]", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "num_classes", ",", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation._deeplab.ASPPConv.__init__": [[40, 47], ["torch.nn.Sequential.__init__", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "dilation", ")", ":", "\n", "        ", "modules", "=", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", "]", "\n", "super", "(", "ASPPConv", ",", "self", ")", ".", "__init__", "(", "*", "modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation._deeplab.ASPPPooling.__init__": [[50, 56], ["torch.nn.Sequential.__init__", "torch.nn.AdaptiveAvgPool2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "ASPPPooling", ",", "self", ")", ".", "__init__", "(", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation._deeplab.ASPPPooling.forward": [[57, 61], ["super().forward", "torch.nn.functional.interpolate"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetUp4.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "x", ".", "shape", "[", "-", "2", ":", "]", "\n", "x", "=", "super", "(", "ASPPPooling", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "return", "F", ".", "interpolate", "(", "x", ",", "size", "=", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation._deeplab.ASPP.__init__": [[63, 85], ["torch.nn.Module.__init__", "modules.append", "tuple", "modules.append", "modules.append", "modules.append", "modules.append", "torch.nn.ModuleList", "torch.nn.Sequential", "torch.nn.Sequential", "_deeplab.ASPPConv", "_deeplab.ASPPConv", "_deeplab.ASPPConv", "_deeplab.ASPPPooling", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Dropout", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "atrous_rates", ")", ":", "\n", "        ", "super", "(", "ASPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "out_channels", "=", "256", "\n", "modules", "=", "[", "]", "\n", "modules", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", ")", "\n", "\n", "rate1", ",", "rate2", ",", "rate3", "=", "tuple", "(", "atrous_rates", ")", "\n", "modules", ".", "append", "(", "ASPPConv", "(", "in_channels", ",", "out_channels", ",", "rate1", ")", ")", "\n", "modules", ".", "append", "(", "ASPPConv", "(", "in_channels", ",", "out_channels", ",", "rate2", ")", ")", "\n", "modules", ".", "append", "(", "ASPPConv", "(", "in_channels", ",", "out_channels", ",", "rate3", ")", ")", "\n", "modules", ".", "append", "(", "ASPPPooling", "(", "in_channels", ",", "out_channels", ")", ")", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "modules", ")", "\n", "\n", "self", ".", "project", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "5", "*", "out_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation._deeplab.ASPP.forward": [[86, 92], ["torch.cat", "_deeplab.ASPP.project", "torch.cat.append", "conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "[", "]", "\n", "for", "conv", "in", "self", ".", "convs", ":", "\n", "            ", "res", ".", "append", "(", "conv", "(", "x", ")", ")", "\n", "", "res", "=", "torch", ".", "cat", "(", "res", ",", "dim", "=", "1", ")", "\n", "return", "self", ".", "project", "(", "res", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.fcn.FCN32s.__init__": [[11, 19], ["torch.Module.__init__", "fcn._FCNHead", "RuntimeError", "torchvision.models.vgg.vgg16"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["def", "__init__", "(", "self", ",", "nclass", ",", "backbone", "=", "'vgg16'", ",", "aux", "=", "False", ",", "pretrained_base", "=", "True", ",", "\n", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "FCN32s", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "backbone", "==", "'vgg16'", ":", "\n", "            ", "self", ".", "pretrained", "=", "vgg16", "(", "pretrained", "=", "pretrained_base", ")", ".", "features", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "'unknown backbone: {}'", ".", "format", "(", "backbone", ")", ")", "\n", "", "self", ".", "head", "=", "_FCNHead", "(", "512", ",", "nclass", ",", "norm_layer", ")", "\n", "#self.__setattr__('exclusive', ['head', 'auxlayer'] if aux else ['head'])", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.fcn.FCN32s.forward": [[21, 28], ["fcn.FCN32s.pretrained", "fcn.FCN32s.head", "torch.interpolate", "torch.interpolate", "torch.interpolate", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", "\n", "pool5", "=", "self", ".", "pretrained", "(", "x", ")", "\n", "\n", "out", "=", "self", ".", "head", "(", "pool5", ")", "\n", "out", "=", "F", ".", "interpolate", "(", "out", ",", "size", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.fcn.FCN16s.__init__": [[31, 42], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "fcn._FCNHead", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "RuntimeError", "torchvision.models.vgg.vgg16"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ",", "backbone", "=", "'vgg16'", ",", "aux", "=", "False", ",", "pretrained_base", "=", "True", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "FCN16s", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#self.aux = aux", "\n", "if", "backbone", "==", "'vgg16'", ":", "\n", "            ", "pretrained", "=", "vgg16", "(", "pretrained", "=", "pretrained_base", ")", ".", "features", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "'unknown backbone: {}'", ".", "format", "(", "backbone", ")", ")", "\n", "", "self", ".", "pool4", "=", "nn", ".", "Sequential", "(", "*", "pretrained", "[", ":", "24", "]", ")", "\n", "self", ".", "pool5", "=", "nn", ".", "Sequential", "(", "*", "pretrained", "[", "24", ":", "]", ")", "\n", "self", ".", "head", "=", "_FCNHead", "(", "512", ",", "nclass", ",", "norm_layer", ")", "\n", "self", ".", "score_pool4", "=", "nn", ".", "Conv2d", "(", "512", ",", "nclass", ",", "1", ")", "\n", "#self.__setattr__('exclusive', ['head', 'score_pool4', 'auxlayer'] if aux else ['head', 'score_pool4'])", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.fcn.FCN16s.forward": [[44, 57], ["fcn.FCN16s.pool4", "fcn.FCN16s.pool5", "fcn.FCN16s.head", "fcn.FCN16s.score_pool4", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "fcn.FCN16s.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "pool4", "=", "self", ".", "pool4", "(", "x", ")", "\n", "pool5", "=", "self", ".", "pool5", "(", "pool4", ")", "\n", "\n", "score_fr", "=", "self", ".", "head", "(", "pool5", ")", "\n", "\n", "score_pool4", "=", "self", ".", "score_pool4", "(", "pool4", ")", "\n", "\n", "upscore2", "=", "F", ".", "interpolate", "(", "score_fr", ",", "score_pool4", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "fuse_pool4", "=", "upscore2", "+", "score_pool4", "\n", "\n", "out", "=", "F", ".", "interpolate", "(", "fuse_pool4", ",", "x", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.fcn.FCN8s.__init__": [[60, 73], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "fcn._FCNHead", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "RuntimeError", "torchvision.models.vgg.vgg16"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ",", "backbone", "=", "'vgg16'", ",", "aux", "=", "False", ",", "pretrained_base", "=", "True", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "FCN8s", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#self.aux = aux", "\n", "if", "backbone", "==", "'vgg16'", ":", "\n", "            ", "pretrained", "=", "vgg16", "(", "pretrained", "=", "pretrained_base", ")", ".", "features", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "'unknown backbone: {}'", ".", "format", "(", "backbone", ")", ")", "\n", "", "self", ".", "pool3", "=", "nn", ".", "Sequential", "(", "*", "pretrained", "[", ":", "17", "]", ")", "\n", "self", ".", "pool4", "=", "nn", ".", "Sequential", "(", "*", "pretrained", "[", "17", ":", "24", "]", ")", "\n", "self", ".", "pool5", "=", "nn", ".", "Sequential", "(", "*", "pretrained", "[", "24", ":", "]", ")", "\n", "self", ".", "head", "=", "_FCNHead", "(", "512", ",", "nclass", ",", "norm_layer", ")", "\n", "self", ".", "score_pool3", "=", "nn", ".", "Conv2d", "(", "256", ",", "nclass", ",", "1", ")", "\n", "self", ".", "score_pool4", "=", "nn", ".", "Conv2d", "(", "512", ",", "nclass", ",", "1", ")", "\n", "#self.__setattr__('exclusive',", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.fcn.FCN8s.forward": [[77, 96], ["fcn.FCN8s.pool3", "fcn.FCN8s.pool4", "fcn.FCN8s.pool5", "fcn.FCN8s.head", "fcn.FCN8s.score_pool4", "fcn.FCN8s.score_pool3", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "fcn.FCN8s.size", "fcn.FCN8s.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "pool3", "=", "self", ".", "pool3", "(", "x", ")", "\n", "pool4", "=", "self", ".", "pool4", "(", "pool3", ")", "\n", "pool5", "=", "self", ".", "pool5", "(", "pool4", ")", "\n", "\n", "score_fr", "=", "self", ".", "head", "(", "pool5", ")", "\n", "\n", "score_pool4", "=", "self", ".", "score_pool4", "(", "pool4", ")", "\n", "score_pool3", "=", "self", ".", "score_pool3", "(", "pool3", ")", "\n", "\n", "upscore2", "=", "F", ".", "interpolate", "(", "score_fr", ",", "score_pool4", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "fuse_pool4", "=", "upscore2", "+", "score_pool4", "\n", "\n", "upscore_pool4", "=", "F", ".", "interpolate", "(", "fuse_pool4", ",", "score_pool3", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "fuse_pool3", "=", "upscore_pool4", "+", "score_pool3", "\n", "\n", "out", "=", "F", ".", "interpolate", "(", "fuse_pool3", ",", "x", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.fcn._FCNHead.__init__": [[99, 108], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "norm_layer", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "channels", ",", "norm_layer", "=", "nn", ".", "BatchNorm2d", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "_FCNHead", ",", "self", ")", ".", "__init__", "(", ")", "\n", "inter_channels", "=", "in_channels", "//", "4", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "inter_channels", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "norm_layer", "(", "inter_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "inter_channels", ",", "channels", ",", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.fcn._FCNHead.forward": [[110, 112], ["fcn._FCNHead.block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "block", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3._segm_mobilenet": [[9, 26], ["mobilenet.MobileNetV2", "torchvision.models._utils.IntermediateLayerGetter", "base_model"], "function", ["None"], ["def", "_segm_mobilenet", "(", "name", ",", "backbone_name", ",", "num_classes", ",", "aux", ",", "pretrained_backbone", "=", "True", ")", ":", "\n", "    ", "backbone", "=", "MobileNetV2", "(", "pretrained", "=", "pretrained_backbone", ")", "\n", "\n", "return_layers", "=", "{", "'features'", ":", "'out'", "}", "\n", "backbone", "=", "IntermediateLayerGetter", "(", "backbone", ",", "return_layers", "=", "return_layers", ")", "\n", "\n", "model_map", "=", "{", "\n", "'deeplab'", ":", "(", "DeepLabHead", ",", "DeepLabV3", ")", ",", "\n", "'fcn'", ":", "(", "FCNHead", ",", "FCN", ")", ",", "\n", "}", "\n", "\n", "inplanes", "=", "320", "\n", "classifier", "=", "model_map", "[", "name", "]", "[", "0", "]", "(", "inplanes", ",", "num_classes", ")", "\n", "base_model", "=", "model_map", "[", "name", "]", "[", "1", "]", "\n", "\n", "model", "=", "base_model", "(", "backbone", ",", "classifier", ",", "None", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3._segm_resnet": [[28, 46], ["torchvision.models._utils.IntermediateLayerGetter", "base_model"], "function", ["None"], ["", "def", "_segm_resnet", "(", "name", ",", "backbone_name", ",", "num_classes", ",", "aux", ",", "pretrained_backbone", "=", "True", ")", ":", "\n", "    ", "backbone", "=", "resnet", ".", "__dict__", "[", "backbone_name", "]", "(", "\n", "pretrained", "=", "pretrained_backbone", ",", "\n", "replace_stride_with_dilation", "=", "[", "False", ",", "True", ",", "True", "]", ")", "\n", "\n", "return_layers", "=", "{", "'layer4'", ":", "'out'", "}", "\n", "backbone", "=", "IntermediateLayerGetter", "(", "backbone", ",", "return_layers", "=", "return_layers", ")", "\n", "\n", "model_map", "=", "{", "\n", "'deeplab'", ":", "(", "DeepLabHead", ",", "DeepLabV3", ")", ",", "\n", "'fcn'", ":", "(", "FCNHead", ",", "FCN", ")", ",", "\n", "}", "\n", "inplanes", "=", "2048", "\n", "classifier", "=", "model_map", "[", "name", "]", "[", "0", "]", "(", "inplanes", ",", "num_classes", ")", "\n", "base_model", "=", "model_map", "[", "name", "]", "[", "1", "]", "\n", "\n", "model", "=", "base_model", "(", "backbone", ",", "classifier", ",", "None", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3.deeplabv3_mobilenet": [[47, 60], ["deeplabv3._segm_mobilenet", "_segm_mobilenet.modules", "isinstance"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3._segm_mobilenet"], ["", "def", "deeplabv3_mobilenet", "(", "progress", "=", "True", ",", "num_classes", "=", "21", ",", "aux_loss", "=", "None", ",", "dropout_p", "=", "0.0", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a DeepLabV3 model with a ResNet-50 backbone.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on COCO train2017 which\n            contains the same classes as Pascal VOC\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "model", "=", "_segm_mobilenet", "(", "\"deeplab\"", ",", "\"mobilenet_v2\"", ",", "num_classes", ",", "aux_loss", ",", "**", "kwargs", ")", "\n", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Dropout", ")", ":", "\n", "            ", "m", ".", "p", "=", "dropout_p", "\n", "", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3.deeplabv3_resnet50": [[61, 67], ["deeplabv3._segm_resnet", "_segm_resnet.modules", "isinstance"], "function", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.deeplabv3._segm_resnet"], ["", "def", "deeplabv3_resnet50", "(", "progress", "=", "True", ",", "num_classes", "=", "21", ",", "dropout_p", "=", "0.0", ",", "aux_loss", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "model", "=", "_segm_resnet", "(", "\"deeplab\"", ",", "backbone_name", "=", "'resnet50'", ",", "num_classes", "=", "num_classes", ",", "aux", "=", "aux_loss", ",", "**", "kwargs", ")", "\n", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Dropout", ")", ":", "\n", "            ", "m", ".", "p", "=", "dropout_p", "\n", "", "", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg16.__init__": [[8, 37], ["torch.Module.__init__", "utils.segnetDown2", "utils.segnetDown2", "utils.segnetDown3", "utils.segnetDown3", "utils.segnetDown3", "utils.segnetUp3", "utils.segnetUp3", "utils.segnetUp3", "utils.segnetUp2", "utils.segnetUp2", "segnet.SegNetVgg16.init_vgg16_params"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg16.init_vgg16_params"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "21", ",", "in_channels", "=", "3", ",", "is_unpooling", "=", "True", ",", "pretrained_backbone", "=", "False", ")", ":", "\n", "        ", "super", "(", "SegNetVgg16", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#self.num_classes = num_classes", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "is_unpooling", "=", "is_unpooling", "\n", "\n", "self", ".", "down1", "=", "segnetDown2", "(", "self", ".", "in_channels", ",", "64", ")", "\n", "self", ".", "down2", "=", "segnetDown2", "(", "64", ",", "128", ")", "\n", "self", ".", "down3", "=", "segnetDown3", "(", "128", ",", "256", ")", "\n", "self", ".", "down4", "=", "segnetDown3", "(", "256", ",", "512", ")", "\n", "self", ".", "down5", "=", "segnetDown3", "(", "512", ",", "512", ")", "\n", "\n", "self", ".", "up5", "=", "segnetUp3", "(", "512", ",", "512", ")", "\n", "self", ".", "up4", "=", "segnetUp3", "(", "512", ",", "256", ")", "\n", "self", ".", "up3", "=", "segnetUp3", "(", "256", ",", "128", ")", "\n", "self", ".", "up2", "=", "segnetUp2", "(", "128", ",", "64", ")", "\n", "self", ".", "up1", "=", "segnetUp2", "(", "64", ",", "num_classes", ")", "\n", "\n", "#for m in self.modules():", "\n", "#    if isinstance(m, nn.Conv2d):", "\n", "#        nn.init.kaiming_normal_(m.weight)", "\n", "#        nn.init.constant_(m.bias, 0)", "\n", "#    elif isinstance(m, nn.BatchNorm2d):", "\n", "#        nn.init.constant_(m.weight, 1)", "\n", "#        nn.init.constant_(m.bias, 0)", "\n", "#self.init_vgg16_params()", "\n", "\n", "if", "pretrained_backbone", "==", "True", ":", "\n", "            ", "self", ".", "init_vgg16_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg16.forward": [[39, 55], ["segnet.SegNetVgg16.down1", "segnet.SegNetVgg16.down2", "segnet.SegNetVgg16.down3", "segnet.SegNetVgg16.down4", "segnet.SegNetVgg16.down5", "segnet.SegNetVgg16.up5", "segnet.SegNetVgg16.up4", "segnet.SegNetVgg16.up3", "segnet.SegNetVgg16.up2", "segnet.SegNetVgg16.up1", "torch.relu", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ",", "positive_out", "=", "False", ")", ":", "\n", "\n", "        ", "down1", ",", "indices_1", ",", "unpool_shape1", "=", "self", ".", "down1", "(", "inputs", ")", "\n", "down2", ",", "indices_2", ",", "unpool_shape2", "=", "self", ".", "down2", "(", "down1", ")", "\n", "down3", ",", "indices_3", ",", "unpool_shape3", "=", "self", ".", "down3", "(", "down2", ")", "\n", "down4", ",", "indices_4", ",", "unpool_shape4", "=", "self", ".", "down4", "(", "down3", ")", "\n", "down5", ",", "indices_5", ",", "unpool_shape5", "=", "self", ".", "down5", "(", "down4", ")", "\n", "\n", "up5", "=", "self", ".", "up5", "(", "down5", ",", "indices_5", ",", "unpool_shape5", ")", "\n", "up4", "=", "self", ".", "up4", "(", "up5", ",", "indices_4", ",", "unpool_shape4", ")", "\n", "up3", "=", "self", ".", "up3", "(", "up4", ",", "indices_3", ",", "unpool_shape3", ")", "\n", "up2", "=", "self", ".", "up2", "(", "up3", ",", "indices_2", ",", "unpool_shape2", ")", "\n", "up1", "=", "self", ".", "up1", "(", "up2", ",", "indices_1", ",", "unpool_shape1", ")", "\n", "if", "positive_out", ":", "\n", "            ", "return", "torch", ".", "relu", "(", "up1", ")", "\n", "", "return", "up1", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg16.init_vgg16_params": [[56, 101], ["torchvision.models.vgg.vgg16_bn", "list", "enumerate", "zip", "torchvision.models.vgg.vgg16_bn.features.children", "isinstance", "len", "len", "vgg_layers.append", "isinstance", "isinstance", "isinstance", "vgg_layers.append", "isinstance", "l1.weight.size", "l2.weight.size", "l1.bias.size", "l2.bias.size", "isinstance", "isinstance", "merged_layers.append", "isinstance", "merged_layers.append"], "methods", ["None"], ["", "def", "init_vgg16_params", "(", "self", ")", ":", "\n", "\n", "        ", "vgg16", "=", "vgg", ".", "vgg16_bn", "(", "pretrained", "=", "True", ")", "\n", "\n", "blocks", "=", "[", "self", ".", "down1", ",", "self", ".", "down2", ",", "self", ".", "down3", ",", "self", ".", "down4", ",", "self", ".", "down5", "]", "\n", "\n", "features", "=", "list", "(", "vgg16", ".", "features", ".", "children", "(", ")", ")", "\n", "\n", "vgg_layers", "=", "[", "]", "\n", "for", "_layer", "in", "features", ":", "\n", "            ", "if", "isinstance", "(", "_layer", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "vgg_layers", ".", "append", "(", "_layer", ")", "\n", "", "elif", "isinstance", "(", "_layer", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "vgg_layers", ".", "append", "(", "_layer", ")", "\n", "\n", "", "", "merged_layers", "=", "[", "]", "\n", "for", "idx", ",", "conv_block", "in", "enumerate", "(", "blocks", ")", ":", "\n", "            ", "if", "idx", "<", "2", ":", "\n", "                ", "units", "=", "[", "conv_block", ".", "conv1", ".", "cbr_unit", ",", "conv_block", ".", "conv2", ".", "cbr_unit", "]", "\n", "", "else", ":", "\n", "                ", "units", "=", "[", "\n", "conv_block", ".", "conv1", ".", "cbr_unit", ",", "\n", "conv_block", ".", "conv2", ".", "cbr_unit", ",", "\n", "conv_block", ".", "conv3", ".", "cbr_unit", ",", "\n", "]", "\n", "", "for", "_unit", "in", "units", ":", "\n", "                ", "for", "_layer", "in", "_unit", ":", "\n", "                    ", "if", "isinstance", "(", "_layer", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                        ", "merged_layers", ".", "append", "(", "_layer", ")", "\n", "", "elif", "isinstance", "(", "_layer", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                        ", "merged_layers", ".", "append", "(", "_layer", ")", "\n", "\n", "", "", "", "", "assert", "len", "(", "vgg_layers", ")", "==", "len", "(", "merged_layers", ")", "\n", "\n", "for", "l1", ",", "l2", "in", "zip", "(", "vgg_layers", ",", "merged_layers", ")", ":", "\n", "            ", "if", "isinstance", "(", "l1", ",", "nn", ".", "Conv2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "assert", "l1", ".", "weight", ".", "size", "(", ")", "==", "l2", ".", "weight", ".", "size", "(", ")", "\n", "assert", "l1", ".", "bias", ".", "size", "(", ")", "==", "l2", ".", "bias", ".", "size", "(", ")", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "\n", "", "elif", "isinstance", "(", "l1", ",", "nn", ".", "BatchNorm2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "l2", ".", "running_mean", ".", "data", "=", "l1", ".", "running_mean", ".", "data", "\n", "l2", ".", "running_var", ".", "data", "=", "l1", ".", "running_var", ".", "data", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg19.__init__": [[103, 130], ["torch.Module.__init__", "utils.segnetDown2", "utils.segnetDown2", "utils.segnetDown4", "utils.segnetDown4", "utils.segnetDown4", "utils.segnetUp4", "utils.segnetUp4", "utils.segnetUp4", "utils.segnetUp2", "utils.segnetUp2", "segnet.SegNetVgg19.init_vgg19_params"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg19.init_vgg19_params"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "21", ",", "in_channels", "=", "3", ",", "is_unpooling", "=", "True", ",", "pretrained_backbone", "=", "False", ")", ":", "\n", "        ", "super", "(", "SegNetVgg19", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#self.num_classes = num_classes", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "is_unpooling", "=", "is_unpooling", "\n", "\n", "self", ".", "down1", "=", "segnetDown2", "(", "self", ".", "in_channels", ",", "64", ")", "\n", "self", ".", "down2", "=", "segnetDown2", "(", "64", ",", "128", ")", "\n", "self", ".", "down3", "=", "segnetDown4", "(", "128", ",", "256", ")", "\n", "self", ".", "down4", "=", "segnetDown4", "(", "256", ",", "512", ")", "\n", "self", ".", "down5", "=", "segnetDown4", "(", "512", ",", "512", ")", "\n", "\n", "self", ".", "up5", "=", "segnetUp4", "(", "512", ",", "512", ")", "\n", "self", ".", "up4", "=", "segnetUp4", "(", "512", ",", "256", ")", "\n", "self", ".", "up3", "=", "segnetUp4", "(", "256", ",", "128", ")", "\n", "self", ".", "up2", "=", "segnetUp2", "(", "128", ",", "64", ")", "\n", "self", ".", "up1", "=", "segnetUp2", "(", "64", ",", "num_classes", ")", "\n", "\n", "#for m in self.modules():", "\n", "#    if isinstance(m, nn.Conv2d):", "\n", "#        nn.init.kaiming_normal_(m.weight)", "\n", "#        nn.init.constant_(m.bias, 0)", "\n", "#    elif isinstance(m, nn.BatchNorm2d):", "\n", "#        nn.init.constant_(m.weight, 1)", "\n", "#        nn.init.constant_(m.bias, 0)", "\n", "if", "pretrained_backbone", "==", "True", ":", "\n", "            ", "self", ".", "init_vgg19_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg19.forward": [[132, 148], ["segnet.SegNetVgg19.down1", "segnet.SegNetVgg19.down2", "segnet.SegNetVgg19.down3", "segnet.SegNetVgg19.down4", "segnet.SegNetVgg19.down5", "segnet.SegNetVgg19.up5", "segnet.SegNetVgg19.up4", "segnet.SegNetVgg19.up3", "segnet.SegNetVgg19.up2", "segnet.SegNetVgg19.up1", "torch.relu", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ",", "positive_out", "=", "False", ")", ":", "\n", "\n", "        ", "down1", ",", "indices_1", ",", "unpool_shape1", "=", "self", ".", "down1", "(", "inputs", ")", "\n", "down2", ",", "indices_2", ",", "unpool_shape2", "=", "self", ".", "down2", "(", "down1", ")", "\n", "down3", ",", "indices_3", ",", "unpool_shape3", "=", "self", ".", "down3", "(", "down2", ")", "\n", "down4", ",", "indices_4", ",", "unpool_shape4", "=", "self", ".", "down4", "(", "down3", ")", "\n", "down5", ",", "indices_5", ",", "unpool_shape5", "=", "self", ".", "down5", "(", "down4", ")", "\n", "\n", "up5", "=", "self", ".", "up5", "(", "down5", ",", "indices_5", ",", "unpool_shape5", ")", "\n", "up4", "=", "self", ".", "up4", "(", "up5", ",", "indices_4", ",", "unpool_shape4", ")", "\n", "up3", "=", "self", ".", "up3", "(", "up4", ",", "indices_3", ",", "unpool_shape3", ")", "\n", "up2", "=", "self", ".", "up2", "(", "up3", ",", "indices_2", ",", "unpool_shape2", ")", "\n", "up1", "=", "self", ".", "up1", "(", "up2", ",", "indices_1", ",", "unpool_shape1", ")", "\n", "if", "positive_out", ":", "\n", "            ", "return", "torch", ".", "relu", "(", "up1", ")", "\n", "", "return", "up1", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg19.init_vgg19_params": [[149, 195], ["torchvision.models.vgg.vgg19_bn", "list", "enumerate", "zip", "torchvision.models.vgg.vgg19_bn.features.children", "isinstance", "len", "len", "vgg_layers.append", "isinstance", "isinstance", "isinstance", "vgg_layers.append", "isinstance", "l1.weight.size", "l2.weight.size", "l1.bias.size", "l2.bias.size", "isinstance", "isinstance", "merged_layers.append", "isinstance", "merged_layers.append"], "methods", ["None"], ["", "def", "init_vgg19_params", "(", "self", ")", ":", "\n", "\n", "        ", "vgg19", "=", "vgg", ".", "vgg19_bn", "(", "pretrained", "=", "True", ")", "\n", "\n", "blocks", "=", "[", "self", ".", "down1", ",", "self", ".", "down2", ",", "self", ".", "down3", ",", "self", ".", "down4", ",", "self", ".", "down5", "]", "\n", "\n", "features", "=", "list", "(", "vgg19", ".", "features", ".", "children", "(", ")", ")", "\n", "\n", "vgg_layers", "=", "[", "]", "\n", "for", "_layer", "in", "features", ":", "\n", "            ", "if", "isinstance", "(", "_layer", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "vgg_layers", ".", "append", "(", "_layer", ")", "\n", "", "elif", "isinstance", "(", "_layer", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "vgg_layers", ".", "append", "(", "_layer", ")", "\n", "\n", "", "", "merged_layers", "=", "[", "]", "\n", "for", "idx", ",", "conv_block", "in", "enumerate", "(", "blocks", ")", ":", "\n", "            ", "if", "idx", "<", "2", ":", "\n", "                ", "units", "=", "[", "conv_block", ".", "conv1", ".", "cbr_unit", ",", "conv_block", ".", "conv2", ".", "cbr_unit", "]", "\n", "", "else", ":", "\n", "                ", "units", "=", "[", "\n", "conv_block", ".", "conv1", ".", "cbr_unit", ",", "\n", "conv_block", ".", "conv2", ".", "cbr_unit", ",", "\n", "conv_block", ".", "conv3", ".", "cbr_unit", ",", "\n", "conv_block", ".", "conv4", ".", "cbr_unit", ",", "\n", "]", "\n", "", "for", "_unit", "in", "units", ":", "\n", "                ", "for", "_layer", "in", "_unit", ":", "\n", "                    ", "if", "isinstance", "(", "_layer", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                        ", "merged_layers", ".", "append", "(", "_layer", ")", "\n", "", "elif", "isinstance", "(", "_layer", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                        ", "merged_layers", ".", "append", "(", "_layer", ")", "\n", "\n", "", "", "", "", "assert", "len", "(", "vgg_layers", ")", "==", "len", "(", "merged_layers", ")", "\n", "\n", "for", "l1", ",", "l2", "in", "zip", "(", "vgg_layers", ",", "merged_layers", ")", ":", "\n", "            ", "if", "isinstance", "(", "l1", ",", "nn", ".", "Conv2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "assert", "l1", ".", "weight", ".", "size", "(", ")", "==", "l2", ".", "weight", ".", "size", "(", ")", "\n", "assert", "l1", ".", "bias", ".", "size", "(", ")", "==", "l2", ".", "bias", ".", "size", "(", ")", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "\n", "", "elif", "isinstance", "(", "l1", ",", "nn", ".", "BatchNorm2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "l2", ".", "running_mean", ".", "data", "=", "l1", ".", "running_mean", ".", "data", "\n", "l2", ".", "running_var", ".", "data", "=", "l1", ".", "running_var", ".", "data", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg13.__init__": [[198, 225], ["torch.Module.__init__", "utils.segnetDown2", "utils.segnetDown2", "utils.segnetDown2", "utils.segnetDown2", "utils.segnetDown2", "utils.segnetUp2", "utils.segnetUp2", "utils.segnetUp2", "utils.segnetUp2", "utils.segnetUp2", "segnet.SegNetVgg13.init_vgg13_params"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg13.init_vgg13_params"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "21", ",", "in_channels", "=", "3", ",", "is_unpooling", "=", "True", ",", "pretrained_backbone", "=", "False", ")", ":", "\n", "        ", "super", "(", "SegNetVgg13", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#self.num_classes = num_classes", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "is_unpooling", "=", "is_unpooling", "\n", "\n", "self", ".", "down1", "=", "segnetDown2", "(", "self", ".", "in_channels", ",", "64", ")", "\n", "self", ".", "down2", "=", "segnetDown2", "(", "64", ",", "128", ")", "\n", "self", ".", "down3", "=", "segnetDown2", "(", "128", ",", "256", ")", "\n", "self", ".", "down4", "=", "segnetDown2", "(", "256", ",", "512", ")", "\n", "self", ".", "down5", "=", "segnetDown2", "(", "512", ",", "512", ")", "\n", "\n", "self", ".", "up5", "=", "segnetUp2", "(", "512", ",", "512", ")", "\n", "self", ".", "up4", "=", "segnetUp2", "(", "512", ",", "256", ")", "\n", "self", ".", "up3", "=", "segnetUp2", "(", "256", ",", "128", ")", "\n", "self", ".", "up2", "=", "segnetUp2", "(", "128", ",", "64", ")", "\n", "self", ".", "up1", "=", "segnetUp2", "(", "64", ",", "num_classes", ")", "\n", "\n", "#for m in self.modules():", "\n", "#    if isinstance(m, nn.Conv2d):", "\n", "#        nn.init.kaiming_normal_(m.weight)", "\n", "#        nn.init.constant_(m.bias, 0)", "\n", "#    elif isinstance(m, nn.BatchNorm2d):", "\n", "#        nn.init.constant_(m.weight, 1)", "\n", "#        nn.init.constant_(m.bias, 0)", "\n", "if", "pretrained_backbone", "==", "True", ":", "\n", "            ", "self", ".", "init_vgg13_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg13.forward": [[227, 243], ["segnet.SegNetVgg13.down1", "segnet.SegNetVgg13.down2", "segnet.SegNetVgg13.down3", "segnet.SegNetVgg13.down4", "segnet.SegNetVgg13.down5", "segnet.SegNetVgg13.up5", "segnet.SegNetVgg13.up4", "segnet.SegNetVgg13.up3", "segnet.SegNetVgg13.up2", "segnet.SegNetVgg13.up1", "torch.relu", "torch.relu", "torch.relu", "torch.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ",", "positive_out", "=", "False", ")", ":", "\n", "\n", "        ", "down1", ",", "indices_1", ",", "unpool_shape1", "=", "self", ".", "down1", "(", "inputs", ")", "\n", "down2", ",", "indices_2", ",", "unpool_shape2", "=", "self", ".", "down2", "(", "down1", ")", "\n", "down3", ",", "indices_3", ",", "unpool_shape3", "=", "self", ".", "down3", "(", "down2", ")", "\n", "down4", ",", "indices_4", ",", "unpool_shape4", "=", "self", ".", "down4", "(", "down3", ")", "\n", "down5", ",", "indices_5", ",", "unpool_shape5", "=", "self", ".", "down5", "(", "down4", ")", "\n", "\n", "up5", "=", "self", ".", "up5", "(", "down5", ",", "indices_5", ",", "unpool_shape5", ")", "\n", "up4", "=", "self", ".", "up4", "(", "up5", ",", "indices_4", ",", "unpool_shape4", ")", "\n", "up3", "=", "self", ".", "up3", "(", "up4", ",", "indices_3", ",", "unpool_shape3", ")", "\n", "up2", "=", "self", ".", "up2", "(", "up3", ",", "indices_2", ",", "unpool_shape2", ")", "\n", "up1", "=", "self", ".", "up1", "(", "up2", ",", "indices_1", ",", "unpool_shape1", ")", "\n", "if", "positive_out", ":", "\n", "            ", "return", "torch", ".", "relu", "(", "up1", ")", "\n", "", "return", "up1", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.segnet.SegNetVgg13.init_vgg13_params": [[244, 290], ["torchvision.models.vgg.vgg13_bn", "list", "enumerate", "zip", "torchvision.models.vgg.vgg13_bn.features.children", "isinstance", "len", "len", "vgg_layers.append", "isinstance", "isinstance", "isinstance", "vgg_layers.append", "isinstance", "l1.weight.size", "l2.weight.size", "l1.bias.size", "l2.bias.size", "isinstance", "isinstance", "merged_layers.append", "isinstance", "merged_layers.append"], "methods", ["None"], ["", "def", "init_vgg13_params", "(", "self", ")", ":", "\n", "\n", "        ", "vgg13", "=", "vgg", ".", "vgg13_bn", "(", "pretrained", "=", "True", ")", "\n", "\n", "blocks", "=", "[", "self", ".", "down1", ",", "self", ".", "down2", ",", "self", ".", "down3", ",", "self", ".", "down4", ",", "self", ".", "down5", "]", "\n", "\n", "features", "=", "list", "(", "vgg13", ".", "features", ".", "children", "(", ")", ")", "\n", "\n", "vgg_layers", "=", "[", "]", "\n", "for", "_layer", "in", "features", ":", "\n", "            ", "if", "isinstance", "(", "_layer", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "vgg_layers", ".", "append", "(", "_layer", ")", "\n", "", "elif", "isinstance", "(", "_layer", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "vgg_layers", ".", "append", "(", "_layer", ")", "\n", "\n", "", "", "merged_layers", "=", "[", "]", "\n", "for", "idx", ",", "conv_block", "in", "enumerate", "(", "blocks", ")", ":", "\n", "            ", "if", "idx", "<", "2", ":", "\n", "                ", "units", "=", "[", "conv_block", ".", "conv1", ".", "cbr_unit", ",", "conv_block", ".", "conv2", ".", "cbr_unit", "]", "\n", "", "else", ":", "\n", "                ", "units", "=", "[", "\n", "conv_block", ".", "conv1", ".", "cbr_unit", ",", "\n", "conv_block", ".", "conv2", ".", "cbr_unit", ",", "\n", "#conv_block.conv3.cbr_unit,", "\n", "#conv_block.conv4.cbr_unit,", "\n", "]", "\n", "", "for", "_unit", "in", "units", ":", "\n", "                ", "for", "_layer", "in", "_unit", ":", "\n", "                    ", "if", "isinstance", "(", "_layer", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                        ", "merged_layers", ".", "append", "(", "_layer", ")", "\n", "", "elif", "isinstance", "(", "_layer", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                        ", "merged_layers", ".", "append", "(", "_layer", ")", "\n", "\n", "", "", "", "", "assert", "len", "(", "vgg_layers", ")", "==", "len", "(", "merged_layers", ")", "\n", "\n", "for", "l1", ",", "l2", "in", "zip", "(", "vgg_layers", ",", "merged_layers", ")", ":", "\n", "            ", "if", "isinstance", "(", "l1", ",", "nn", ".", "Conv2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "assert", "l1", ".", "weight", ".", "size", "(", ")", "==", "l2", ".", "weight", ".", "size", "(", ")", "\n", "assert", "l1", ".", "bias", ".", "size", "(", ")", "==", "l2", ".", "bias", ".", "size", "(", ")", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "\n", "", "elif", "isinstance", "(", "l1", ",", "nn", ".", "BatchNorm2d", ")", "and", "isinstance", "(", "l2", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "l2", ".", "running_mean", ".", "data", "=", "l1", ".", "running_mean", ".", "data", "\n", "l2", ".", "running_var", ".", "data", "=", "l1", ".", "running_var", ".", "data", "\n", "l2", ".", "weight", ".", "data", "=", "l1", ".", "weight", ".", "data", "\n", "l2", ".", "bias", ".", "data", "=", "l1", ".", "bias", ".", "data", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils._SimpleSegmentationModel.__init__": [[16, 21], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["        ", "super", "(", "ScaleInvariantLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "la", "=", "la", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "\n", "", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ")", ":", "\n", "        ", "size", "=", "inputs", ".", "size", "(", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils._SimpleSegmentationModel.forward": [[22, 31], ["utils._SimpleSegmentationModel.backbone", "utils._SimpleSegmentationModel.classifier", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate"], "methods", ["None"], ["if", "len", "(", "size", ")", ">", "2", ":", "\n", "            ", "inputs", "=", "inputs", ".", "view", "(", "size", "[", "0", "]", ",", "-", "1", ")", "\n", "targets", "=", "targets", ".", "view", "(", "size", "[", "0", "]", ",", "-", "1", ")", "\n", "\n", "", "inv_mask", "=", "targets", ".", "eq", "(", "self", ".", "ignore_index", ")", "\n", "nums", "=", "(", "1", "-", "inv_mask", ".", "float", "(", ")", ")", ".", "sum", "(", "1", ")", "\n", "\n", "log_d", "=", "torch", ".", "log", "(", "inputs", ")", "-", "torch", ".", "log", "(", "targets", ")", "\n", "log_d", "[", "inv_mask", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.conv2DBatchNormRelu.__init__": [[34, 63], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "int", "int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "int"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["\n", "return", "loss", ".", "mean", "(", ")", "\n", "\n", "", "", "class", "FocalLoss", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "alpha", "=", "1", ",", "gamma", "=", "0", ",", "size_average", "=", "True", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", "FocalLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "size_average", "=", "size_average", "\n", "\n", "", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ")", ":", "\n", "        ", "ce_loss", "=", "F", ".", "cross_entropy", "(", "\n", "inputs", ",", "targets", ",", "reduction", "=", "'none'", ",", "ignore_index", "=", "self", ".", "ignore_index", ")", "\n", "pt", "=", "torch", ".", "exp", "(", "-", "ce_loss", ")", "\n", "focal_loss", "=", "self", ".", "alpha", "*", "(", "1", "-", "pt", ")", "**", "self", ".", "gamma", "*", "ce_loss", "\n", "if", "self", ".", "size_average", ":", "\n", "            ", "return", "focal_loss", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "focal_loss", ".", "sum", "(", ")", "\n", "\n", "", "", "", "def", "focal_loss", "(", "inputs", ",", "targets", ",", "alpha", "=", "1", ",", "gamma", "=", "0", ",", "size_average", "=", "True", ",", "ignore_index", "=", "255", ")", ":", "\n", "    ", "ce_loss", "=", "F", ".", "cross_entropy", "(", "\n", "inputs", ",", "targets", ",", "reduction", "=", "'none'", ",", "ignore_index", "=", "ignore_index", ")", "\n", "pt", "=", "torch", ".", "exp", "(", "-", "ce_loss", ")", "\n", "focal_loss", "=", "alpha", "*", "(", "1", "-", "pt", ")", "**", "gamma", "*", "ce_loss", "\n", "if", "size_average", ":", "\n", "        ", "return", "focal_loss", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "focal_loss", ".", "sum", "(", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.conv2DBatchNormRelu.forward": [[64, 67], ["utils.conv2DBatchNormRelu.cbr_unit"], "methods", ["None"], ["\n", "", "", "def", "kldiv", "(", "logits", ",", "targets", ",", "reduction", "=", "'batchmean'", ")", ":", "\n", "    ", "p", "=", "F", ".", "log_softmax", "(", "logits", ",", "dim", "=", "1", ")", "\n", "q", "=", "F", ".", "softmax", "(", "targets", ",", "dim", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetDown2.__init__": [[69, 74], ["torch.Module.__init__", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["\n", "", "def", "soft_cross_entropy", "(", "logits", ",", "target", ",", "T", "=", "1.0", ",", "size_average", "=", "True", ",", "target_is_prob", "=", "False", ")", ":", "\n", "    "]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetDown2.forward": [[75, 81], ["utils.segnetDown2.conv1", "utils.segnetDown2.conv2", "utils.segnetDown2.size", "utils.segnetDown2.maxpool_with_argmax"], "methods", ["None"], ["\n", "if", "target_is_prob", ":", "\n", "        ", "p_target", "=", "target", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetDown3.__init__": [[100, 106], ["torch.Module.__init__", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["\n", "if", "len", "(", "x", ".", "shape", ")", "!=", "2", ":", "\n", "        ", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "\n", "", "x_norm", "=", "(", "x", "**", "2", ")", ".", "sum", "(", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "if", "y", "is", "not", "None", ":", "\n", "        ", "y_t", "=", "torch", ".", "transpose", "(", "y", ",", "0", ",", "1", ")", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetDown3.forward": [[107, 114], ["utils.segnetDown3.conv1", "utils.segnetDown3.conv2", "utils.segnetDown3.conv3", "utils.segnetDown3.size", "utils.segnetDown3.maxpool_with_argmax"], "methods", ["None"], ["y_norm", "=", "(", "y", "**", "2", ")", ".", "sum", "(", "1", ")", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "y_t", "=", "torch", ".", "transpose", "(", "x", ",", "0", ",", "1", ")", "\n", "y_norm", "=", "x_norm", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "\n", "", "dist", "=", "x_norm", "+", "y_norm", "-", "2.0", "*", "torch", ".", "mm", "(", "x", ",", "y_t", ")", "\n", "# Ensure diagonal is zero if x=y", "\n", "# if y is None:", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetDown4.__init__": [[116, 123], ["torch.Module.__init__", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], ["return", "dist", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetDown4.forward": [[124, 132], ["utils.segnetDown4.conv1", "utils.segnetDown4.conv2", "utils.segnetDown4.conv3", "utils.segnetDown4.conv4", "utils.segnetDown4.size", "utils.segnetDown4.maxpool_with_argmax"], "methods", ["None"], []], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetUp2.__init__": [[135, 140], ["torch.Module.__init__", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], []], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetUp2.forward": [[141, 146], ["utils.segnetUp2.unpool", "utils.segnetUp2.conv1", "utils.segnetUp2.conv2"], "methods", ["None"], []], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetUp3.__init__": [[149, 155], ["torch.Module.__init__", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], []], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetUp3.forward": [[156, 162], ["utils.segnetUp3.unpool", "utils.segnetUp3.conv1", "utils.segnetUp3.conv2", "utils.segnetUp3.conv3"], "methods", ["None"], []], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetUp4.__init__": [[164, 171], ["torch.Module.__init__", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "torch.MaxUnpool2d", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu", "utils.conv2DBatchNormRelu"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__"], []], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.segmentation.utils.segnetUp4.forward": [[172, 179], ["utils.segnetUp4.unpool", "utils.segnetUp4.conv1", "utils.segnetUp4.conv2", "utils.segnetUp4.conv3", "utils.segnetUp4.conv4"], "methods", ["None"], []], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech101.__init__": [[29, 72], ["torchvision.datasets.vision.VisionDataset.__init__", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "isinstance", "sorted", "caltech.Caltech101.categories.remove", "list", "enumerate", "print", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "caltech.Caltech101.download", "caltech.Caltech101._check_integrity", "RuntimeError", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "map", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "len", "caltech.Caltech101.index.extend", "caltech.Caltech101.y.extend", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256.download", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256._check_integrity"], ["def", "__init__", "(", "self", ",", "root", ",", "target_type", "=", "\"category\"", ",", "train", "=", "True", ",", "\n", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "download", "=", "False", ")", ":", "\n", "        ", "super", "(", "Caltech101", ",", "self", ")", ".", "__init__", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'caltech101'", ")", ")", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "dir_name", "=", "'101_ObjectCategories_split/train'", "if", "self", ".", "train", "else", "'101_ObjectCategories_split/test'", "\n", "\n", "os", ".", "makedirs", "(", "self", ".", "root", ",", "exist_ok", "=", "True", ")", "\n", "if", "isinstance", "(", "target_type", ",", "list", ")", ":", "\n", "            ", "self", ".", "target_type", "=", "target_type", "\n", "", "else", ":", "\n", "            ", "self", ".", "target_type", "=", "[", "target_type", "]", "\n", "", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "_check_integrity", "(", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Dataset not found or corrupted.'", "+", "\n", "' You can use download=True to download it'", ")", "\n", "\n", "", "self", ".", "categories", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"101_ObjectCategories\"", ")", ")", ")", "\n", "self", ".", "categories", ".", "remove", "(", "\"BACKGROUND_Google\"", ")", "# this is not a real class", "\n", "\n", "# For some reason, the category names in \"101_ObjectCategories\" and", "\n", "# \"Annotations\" do not always match. This is a manual map between the", "\n", "# two. Defaults to using same name, since most names are fine.", "\n", "name_map", "=", "{", "\"Faces\"", ":", "\"Faces_2\"", ",", "\n", "\"Faces_easy\"", ":", "\"Faces_3\"", ",", "\n", "\"Motorbikes\"", ":", "\"Motorbikes_16\"", ",", "\n", "\"airplanes\"", ":", "\"Airplanes_Side_2\"", "}", "\n", "self", ".", "annotation_categories", "=", "list", "(", "map", "(", "lambda", "x", ":", "name_map", "[", "x", "]", "if", "x", "in", "name_map", "else", "x", ",", "self", ".", "categories", ")", ")", "\n", "\n", "self", ".", "index", "=", "[", "]", "\n", "self", ".", "y", "=", "[", "]", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "self", ".", "categories", ")", ":", "\n", "            ", "file_names", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "dir_name", ",", "c", ")", ")", "\n", "n", "=", "len", "(", "file_names", ")", "\n", "self", ".", "index", ".", "extend", "(", "file_names", ")", "\n", "self", ".", "y", ".", "extend", "(", "n", "*", "[", "i", "]", ")", "\n", "\n", "", "print", "(", "self", ".", "train", ",", "len", "(", "self", ".", "index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech101.__getitem__": [[73, 108], ["PIL.Image.open().convert", "tuple", "caltech.Caltech101.transform", "caltech.Caltech101.target_transform", "PIL.Image.open", "caltech.Caltech101.append", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "scipy.io.loadmat", "caltech.Caltech101.append", "ValueError", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (image, target) where the type of target specified by target_type.\n        \"\"\"", "\n", "import", "scipy", ".", "io", "\n", "\n", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\n", "self", ".", "dir_name", ",", "\n", "self", ".", "categories", "[", "self", ".", "y", "[", "index", "]", "]", ",", "\n", "self", ".", "index", "[", "index", "]", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "target", "=", "[", "]", "\n", "for", "t", "in", "self", ".", "target_type", ":", "\n", "            ", "if", "t", "==", "\"category\"", ":", "\n", "                ", "target", ".", "append", "(", "self", ".", "y", "[", "index", "]", ")", "\n", "", "elif", "t", "==", "\"annotation\"", ":", "\n", "                ", "data", "=", "scipy", ".", "io", ".", "loadmat", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\n", "\"Annotations\"", ",", "\n", "self", ".", "annotation_categories", "[", "self", ".", "y", "[", "index", "]", "]", ",", "\n", "\"annotation_{:04d}.mat\"", ".", "format", "(", "self", ".", "index", "[", "index", "]", ")", ")", ")", "\n", "target", ".", "append", "(", "data", "[", "\"obj_contour\"", "]", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\"Target type \\\"{}\\\" is not recognized.\"", ".", "format", "(", "t", ")", ")", "\n", "", "", "target", "=", "tuple", "(", "target", ")", "if", "len", "(", "target", ")", ">", "1", "else", "target", "[", "0", "]", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech101._check_integrity": [[109, 112], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_check_integrity", "(", "self", ")", ":", "\n", "# can be more robust and check hash of files", "\n", "        ", "return", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"101_ObjectCategories\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech101.__len__": [[113, 115], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech101.download": [[116, 138], ["caltech.Caltech101._check_integrity", "torchvision.datasets.utils.download_url", "torchvision.datasets.utils.download_url", "print", "tarfile.open", "tar.extractall", "tarfile.open", "tar.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256._check_integrity"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "import", "tarfile", "\n", "\n", "if", "self", ".", "_check_integrity", "(", ")", ":", "\n", "            ", "print", "(", "'Files already downloaded and verified'", ")", "\n", "return", "\n", "\n", "", "download_url", "(", "\"http://www.vision.caltech.edu/Image_Datasets/Caltech101/101_ObjectCategories.tar.gz\"", ",", "\n", "self", ".", "root", ",", "\n", "\"101_ObjectCategories.tar.gz\"", ",", "\n", "\"b224c7392d521a49829488ab0f1120d9\"", ")", "\n", "download_url", "(", "\"http://www.vision.caltech.edu/Image_Datasets/Caltech101/Annotations.tar\"", ",", "\n", "self", ".", "root", ",", "\n", "\"101_Annotations.tar\"", ",", "\n", "\"6f83eeb1f24d99cab4eb377263132c91\"", ")", "\n", "\n", "# extract file", "\n", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"101_ObjectCategories.tar.gz\"", ")", ",", "\"r:gz\"", ")", "as", "tar", ":", "\n", "            ", "tar", ".", "extractall", "(", "path", "=", "self", ".", "root", ")", "\n", "\n", "", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"101_Annotations.tar\"", ")", ",", "\"r:\"", ")", "as", "tar", ":", "\n", "            ", "tar", ".", "extractall", "(", "path", "=", "self", ".", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech101.extra_repr": [[139, 141], ["None"], "methods", ["None"], ["", "", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "\"Target type: {target_type}\"", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256.__init__": [[158, 180], ["torchvision.datasets.vision.VisionDataset.__init__", "os.makedirs", "os.makedirs", "os.makedirs", "os.makedirs", "sorted", "enumerate", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "caltech.Caltech256.download", "caltech.Caltech256._check_integrity", "RuntimeError", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "len", "caltech.Caltech256.index.extend", "caltech.Caltech256.y.extend", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "range", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256.download", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256._check_integrity"], ["def", "__init__", "(", "self", ",", "root", ",", "\n", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "download", "=", "False", ")", ":", "\n", "        ", "super", "(", "Caltech256", ",", "self", ")", ".", "__init__", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'caltech256'", ")", ")", "\n", "os", ".", "makedirs", "(", "self", ".", "root", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n", "if", "download", ":", "\n", "            ", "self", ".", "download", "(", ")", "\n", "\n", "", "if", "not", "self", ".", "_check_integrity", "(", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Dataset not found or corrupted.'", "+", "\n", "' You can use download=True to download it'", ")", "\n", "\n", "", "self", ".", "categories", "=", "sorted", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"256_ObjectCategories\"", ")", ")", ")", "\n", "self", ".", "index", "=", "[", "]", "\n", "self", ".", "y", "=", "[", "]", "\n", "for", "(", "i", ",", "c", ")", "in", "enumerate", "(", "self", ".", "categories", ")", ":", "\n", "            ", "n", "=", "len", "(", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"256_ObjectCategories\"", ",", "c", ")", ")", ")", "\n", "self", ".", "index", ".", "extend", "(", "range", "(", "1", ",", "n", "+", "1", ")", ")", "\n", "self", ".", "y", ".", "extend", "(", "n", "*", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256.__getitem__": [[181, 203], ["PIL.Image.open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "caltech.Caltech256.transform", "caltech.Caltech256.target_transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n\n        Returns:\n            tuple: (image, target) where target is index of the target class.\n        \"\"\"", "\n", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\n", "\"256_ObjectCategories\"", ",", "\n", "self", ".", "categories", "[", "self", ".", "y", "[", "index", "]", "]", ",", "\n", "\"{:03d}_{:04d}.jpg\"", ".", "format", "(", "self", ".", "y", "[", "index", "]", "+", "1", ",", "self", ".", "index", "[", "index", "]", ")", ")", ")", "\n", "\n", "target", "=", "self", ".", "y", "[", "index", "]", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256._check_integrity": [[204, 207], ["os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_check_integrity", "(", "self", ")", ":", "\n", "# can be more robust and check hash of files", "\n", "        ", "return", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"256_ObjectCategories\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256.__len__": [[208, 210], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256.download": [[211, 226], ["caltech.Caltech256._check_integrity", "torchvision.datasets.utils.download_url", "print", "tarfile.open", "tar.extractall", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.caltech.Caltech256._check_integrity"], ["", "def", "download", "(", "self", ")", ":", "\n", "        ", "import", "tarfile", "\n", "\n", "if", "self", ".", "_check_integrity", "(", ")", ":", "\n", "            ", "print", "(", "'Files already downloaded and verified'", ")", "\n", "return", "\n", "\n", "", "download_url", "(", "\"http://www.vision.caltech.edu/Image_Datasets/Caltech256/256_ObjectCategories.tar\"", ",", "\n", "self", ".", "root", ",", "\n", "\"256_ObjectCategories.tar\"", ",", "\n", "\"67b4f42ca05d46448c6bb8ecd2220f6d\"", ")", "\n", "\n", "# extract file", "\n", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "\"256_ObjectCategories.tar\"", ")", ",", "\"r:\"", ")", "as", "tar", ":", "\n", "            ", "tar", ".", "extractall", "(", "path", "=", "self", ".", "root", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.nyu.NYUv2.__init__": [[49, 86], ["numpy.array", "print", "scipy.io.loadmat", "split_mat[].reshape", "len", "list", "os.path.join", "os.path.join", "glob.glob", "range", "os.path.join", "ValueError", "os.path.join", "os.path.join"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "split", "=", "'train'", ",", "\n", "num_classes", "=", "13", ",", "\n", "transform", "=", "None", ",", "\n", "ds_type", "=", "'labeled'", ")", ":", "\n", "\n", "        ", "assert", "(", "split", "in", "(", "'train'", ",", "'test'", ")", ")", "\n", "assert", "(", "ds_type", "in", "(", "'labeled'", ",", "'unlabeled'", ")", ")", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "ds_type", "=", "ds_type", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "train_idx", "=", "np", ".", "array", "(", "[", "255", ",", "]", "+", "list", "(", "range", "(", "num_classes", ")", ")", ")", "\n", "\n", "if", "ds_type", "==", "'labeled'", ":", "\n", "            ", "split_mat", "=", "loadmat", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "root", ",", "'nyuv2-meta-data'", ",", "'splits.mat'", ")", ")", "\n", "\n", "idxs", "=", "split_mat", "[", "self", ".", "split", "+", "'Ndxs'", "]", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "self", ".", "images", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'480_640'", ",", "'IMAGE'", ",", "'%d.png'", "%", "(", "idx", "-", "1", ")", ")", "\n", "for", "idx", "in", "idxs", "]", "\n", "if", "self", ".", "num_classes", "==", "13", ":", "\n", "                ", "self", ".", "targets", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'nyuv2-meta-data'", ",", "'%s_labels_13'", "%", "self", ".", "split", ",", "'new_nyu_class13_%04d.png'", "%", "idx", ")", "\n", "for", "idx", "in", "idxs", "]", "\n", "", "elif", "self", ".", "num_classes", "==", "40", ":", "\n", "                ", "self", ".", "targets", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'480_640'", ",", "'SEGMENTATION'", ",", "'%04d.png'", "%", "idx", ")", "\n", "for", "idx", "in", "idxs", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Invalid number of classes! Please use 13 or 40'", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "images", "=", "[", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "root", ",", "'unlabeled_images/*.png'", ")", ")", "]", "\n", "", "print", "(", "self", ".", "split", ",", "len", "(", "self", ".", "images", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.nyu.NYUv2.__getitem__": [[88, 104], ["PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "nyu.NYUv2.transform", "nyu.NYUv2.transforms", "torchvision.transforms.ToTensor"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "ds_type", "==", "'labeled'", ":", "\n", "            ", "image", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "idx", "]", ")", "\n", "target", "=", "Image", ".", "open", "(", "self", ".", "targets", "[", "idx", "]", ")", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "                ", "image", ",", "target", "=", "self", ".", "transform", "(", "image", ",", "target", ")", "\n", "#print(target)", "\n", "", "target", "=", "self", ".", "train_idx", "[", "target", "]", "\n", "return", "image", ",", "target", "\n", "", "else", ":", "\n", "            ", "image", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "idx", "]", ")", "\n", "if", "self", ".", "transforms", "is", "not", "None", ":", "\n", "                ", "image", "=", "self", ".", "transforms", "(", "image", ")", "\n", "", "image", "=", "transforms", ".", "ToTensor", "(", ")", "(", "image", ")", "\n", "return", "image", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.nyu.NYUv2.__len__": [[105, 107], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.nyu.NYUv2.decode_target": [[108, 112], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "decode_target", "(", "cls", ",", "target", ")", ":", "\n", "        ", "target", "=", "(", "target", "+", "1", ")", ".", "astype", "(", "'uint8'", ")", "# 255 -> 0, 0->1, 1->2", "\n", "return", "cls", ".", "cmap", "[", "target", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.nyu.NYUv2Depth.__init__": [[126, 167], ["numpy.array", "scipy.io.loadmat", "split_mat[].reshape", "list", "os.path.join", "os.path.join", "os.path.join", "glob.glob", "range", "os.path.join", "ValueError", "os.path.join", "os.path.join"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "split", "=", "'train'", ",", "\n", "num_classes", "=", "13", ",", "\n", "transform", "=", "None", ",", "\n", "#target_transforms=None,", "\n", "ds_type", "=", "'labeled'", ")", ":", "\n", "\n", "        ", "assert", "(", "split", "in", "(", "'train'", ",", "'test'", ")", ")", "\n", "assert", "(", "ds_type", "in", "(", "'labeled'", ",", "'unlabeled'", ")", ")", "\n", "\n", "self", ".", "root", "=", "root", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "ds_type", "=", "ds_type", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "train_idx", "=", "np", ".", "array", "(", "[", "255", ",", "]", "+", "list", "(", "range", "(", "num_classes", ")", ")", ")", "\n", "\n", "if", "ds_type", "==", "'labeled'", ":", "\n", "            ", "split_mat", "=", "loadmat", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "root", ",", "'nyuv2-meta-data'", ",", "'splits.mat'", ")", ")", "\n", "\n", "idxs", "=", "split_mat", "[", "self", ".", "split", "+", "'Ndxs'", "]", ".", "reshape", "(", "-", "1", ")", "\n", "self", ".", "images", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'480_640'", ",", "'IMAGE'", ",", "'%d.png'", "%", "(", "idx", "-", "1", ")", ")", "\n", "for", "idx", "in", "idxs", "]", "\n", "if", "self", ".", "num_classes", "==", "13", ":", "\n", "                ", "self", ".", "targets", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'nyuv2-meta-data'", ",", "'%s_labels_13'", "%", "self", ".", "split", ",", "'new_nyu_class13_%04d.png'", "%", "idx", ")", "\n", "for", "idx", "in", "idxs", "]", "\n", "", "elif", "self", ".", "num_classes", "==", "40", ":", "\n", "                ", "self", ".", "targets", "=", "[", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'480_640'", ",", "'SEGMENTATION'", ",", "'%04d.png'", "%", "idx", ")", "\n", "for", "idx", "in", "idxs", "]", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "'Invalid number of classes! Please use 13 or 40'", ")", "\n", "", "self", ".", "depths", "=", "[", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "root", ",", "'FINAL_480_640'", ",", "'DEPTH'", ",", "'%04d.png'", "%", "idx", ")", "for", "idx", "in", "idxs", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "images", "=", "[", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "root", ",", "'unlabeled_images/*.png'", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.nyu.NYUv2Depth.__getitem__": [[168, 182], ["PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "nyu.NYUv2Depth.transform", "nyu.NYUv2Depth.transform"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "ds_type", "==", "'labeled'", ":", "\n", "            ", "image", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "idx", "]", ")", "\n", "depth", "=", "Image", ".", "open", "(", "self", ".", "depths", "[", "idx", "]", ")", "\n", "#print(np.array(depth,dtype='float').max())", "\n", "if", "self", ".", "transform", ":", "\n", "                ", "image", ",", "depth", "=", "self", ".", "transform", "(", "image", ",", "depth", ")", "\n", "", "return", "image", ",", "depth", "/", "1000", "\n", "", "else", ":", "\n", "            ", "image", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "idx", "]", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "                ", "image", "=", "self", ".", "transform", "(", "image", ")", "\n", "#image = transforms.ToTensor()(image)", "\n", "", "return", "image", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.nyu.NYUv2Depth.__len__": [[183, 185], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.nyu.NYUv2Depth.decode_target": [[186, 192], ["matplotlib.get_cmap", "matplotlib.get_cmap."], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "decode_target", "(", "cls", ",", "target", ")", ":", "\n", "        ", "cm", "=", "plt", ".", "get_cmap", "(", "'jet'", ")", "\n", "target", "=", "(", "target", "/", "7", ")", ".", "clip", "(", "0", ",", "1", ")", "\n", "target", "=", "cm", "(", "target", ")", "[", ":", ",", ":", ",", ":", ",", ":", "3", "]", "\n", "return", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.nyu.colormap": [[16, 35], ["numpy.zeros", "range", "range", "numpy.array", "nyu.colormap.bitget"], "function", ["None"], ["def", "colormap", "(", "N", "=", "256", ",", "normalized", "=", "False", ")", ":", "\n", "    ", "def", "bitget", "(", "byteval", ",", "idx", ")", ":", "\n", "        ", "return", "(", "(", "byteval", "&", "(", "1", "<<", "idx", ")", ")", "!=", "0", ")", "\n", "\n", "", "dtype", "=", "'float32'", "if", "normalized", "else", "'uint8'", "\n", "cmap", "=", "np", ".", "zeros", "(", "(", "N", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "r", "=", "g", "=", "b", "=", "0", "\n", "c", "=", "i", "\n", "for", "j", "in", "range", "(", "8", ")", ":", "\n", "            ", "r", "=", "r", "|", "(", "bitget", "(", "c", ",", "0", ")", "<<", "7", "-", "j", ")", "\n", "g", "=", "g", "|", "(", "bitget", "(", "c", ",", "1", ")", "<<", "7", "-", "j", ")", "\n", "b", "=", "b", "|", "(", "bitget", "(", "c", ",", "2", ")", "<<", "7", "-", "j", ")", "\n", "c", "=", "c", ">>", "3", "\n", "\n", "", "cmap", "[", "i", "]", "=", "np", ".", "array", "(", "[", "r", ",", "g", ",", "b", "]", ")", "\n", "\n", "", "cmap", "=", "cmap", "/", "255", "if", "normalized", "else", "cmap", "\n", "return", "cmap", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes.__init__": [[117, 170], ["os.path.expanduser", "os.path.join", "os.path.join", "os.listdir", "os.path.join", "ValueError", "ValueError", "ValueError", "RuntimeError", "os.path.join", "os.path.join", "os.listdir", "ValueError", "os.path.isdir", "os.path.isdir", "cityscapes.Cityscapes.images.append", "os.path.join", "cityscapes.Cityscapes.targets.append", "cityscapes.Cityscapes.depths.append", "cityscapes.Cityscapes.targets.append", "cityscapes.Cityscapes._get_target_suffix", "cityscapes.Cityscapes._get_target_suffix", "os.path.join", "os.path.join", "cityscapes.Cityscapes._get_target_suffix", "os.path.join", "file_name.split", "file_name.split", "file_name.split"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes._get_target_suffix", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes._get_target_suffix", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes._get_target_suffix"], ["def", "__init__", "(", "self", ",", "root", ",", "split", "=", "'train'", ",", "mode", "=", "'fine'", ",", "target_type", "=", "'semantic'", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "mode", "=", "'gtFine'", "if", "mode", "==", "'fine'", "else", "'gtCoarse'", "\n", "self", ".", "images_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'leftImg8bit'", ",", "split", ")", "\n", "if", "target_type", "==", "'seg&depth'", ":", "\n", "            ", "self", ".", "depths_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'disparity'", ",", "split", ")", "\n", "self", ".", "depths", "=", "[", "]", "\n", "\n", "", "self", ".", "targets_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "mode", ",", "split", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "target_type", "=", "target_type", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "images", "=", "[", "]", "\n", "self", ".", "targets", "=", "[", "]", "\n", "\n", "if", "mode", "not", "in", "[", "'fine'", ",", "'coarse'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Invalid mode! Please use mode=\"fine\" or mode=\"coarse\"'", ")", "\n", "\n", "", "if", "mode", "==", "'fine'", "and", "split", "not", "in", "[", "'train'", ",", "'test'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid split for mode \"fine\"! Please use split=\"train\", split=\"test\"'", "\n", "' or split=\"val\"'", ")", "\n", "", "elif", "mode", "==", "'coarse'", "and", "split", "not", "in", "[", "'train'", ",", "'train_extra'", ",", "'val'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid split for mode \"coarse\"! Please use split=\"train\", split=\"train_extra\"'", "\n", "' or split=\"val\"'", ")", "\n", "\n", "", "if", "not", "self", ".", "target_type", "in", "[", "'instance'", ",", "'semantic'", ",", "'polygon'", ",", "'color'", ",", "'seg&depth'", "]", ":", "\n", "            ", "raise", "ValueError", "(", "'Invalid value for \"target_type\"! Valid values are: \"instance\", \"semantic\", \"polygon\"'", "\n", "' , \"color\", or \"seg&depth\"'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "images_dir", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "targets_dir", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Dataset not found or incomplete. Please make sure all required folders for the'", "\n", "' specified \"split\" and \"mode\" are inside the \"root\" directory'", ")", "\n", "\n", "", "for", "city", "in", "os", ".", "listdir", "(", "self", ".", "images_dir", ")", ":", "\n", "            ", "img_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "images_dir", ",", "city", ")", "\n", "target_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "targets_dir", ",", "city", ")", "\n", "for", "file_name", "in", "os", ".", "listdir", "(", "img_dir", ")", ":", "\n", "                ", "self", ".", "images", ".", "append", "(", "os", ".", "path", ".", "join", "(", "img_dir", ",", "file_name", ")", ")", "\n", "if", "self", ".", "target_type", "==", "'seg&depth'", ":", "\n", "                    ", "target_name", "=", "'{}_{}'", ".", "format", "(", "file_name", ".", "split", "(", "'_leftImg8bit'", ")", "[", "0", "]", ",", "\n", "self", ".", "_get_target_suffix", "(", "self", ".", "mode", ",", "'semantic'", ")", ")", "\n", "depth_name", "=", "'{}_{}'", ".", "format", "(", "file_name", ".", "split", "(", "'_leftImg8bit'", ")", "[", "0", "]", ",", "\n", "self", ".", "_get_target_suffix", "(", "self", ".", "mode", ",", "'depth'", ")", ")", "\n", "self", ".", "targets", ".", "append", "(", "os", ".", "path", ".", "join", "(", "target_dir", ",", "target_name", ")", ")", "\n", "self", ".", "depths", ".", "append", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "depths_dir", ",", "depth_name", ")", ")", "\n", "", "else", ":", "\n", "                    ", "target_name", "=", "'{}_{}'", ".", "format", "(", "file_name", ".", "split", "(", "'_leftImg8bit'", ")", "[", "0", "]", ",", "\n", "self", ".", "_get_target_suffix", "(", "self", ".", "mode", ",", "self", ".", "target_type", ")", ")", "\n", "\n", "self", ".", "targets", ".", "append", "(", "os", ".", "path", ".", "join", "(", "target_dir", ",", "target_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes.encode_target": [[171, 174], ["numpy.array"], "methods", ["None"], ["", "", "", "", "@", "classmethod", "\n", "def", "encode_target", "(", "cls", ",", "target", ")", ":", "\n", "        ", "return", "cls", ".", "id_to_train_id", "[", "np", ".", "array", "(", "target", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes.decode_target": [[175, 179], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "decode_target", "(", "cls", ",", "target", ")", ":", "\n", "        ", "target", "[", "target", "==", "255", "]", "=", "19", "\n", "return", "cls", ".", "train_id_to_color", "[", "target", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes.__getitem__": [[180, 211], ["PIL.Image.open().convert", "cityscapes.Cityscapes.encode_target", "cityscapes.Cityscapes._load_json", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "cityscapes.Cityscapes.transform", "cityscapes.Cityscapes.transform"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes.encode_target", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes._load_json"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n        Returns:\n            tuple: (image, target) where target is a tuple of all target types if target_type is a list with more\n            than one item. Otherwise target is a json object if target_type=\"polygon\", else the image segmentation.\n        \"\"\"", "\n", "image", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n", "if", "self", ".", "target_type", "==", "'polygon'", ":", "\n", "            ", "target", "=", "self", ".", "_load_json", "(", "self", ".", "targets", "[", "index", "]", ")", "\n", "", "else", ":", "\n", "            ", "target", "=", "Image", ".", "open", "(", "self", ".", "targets", "[", "index", "]", ")", "\n", "\n", "", "if", "self", ".", "target_type", "==", "'seg&depth'", ":", "\n", "            ", "depth", "=", "Image", ".", "open", "(", "self", ".", "depths", "[", "index", "]", ")", "\n", "\n", "", "if", "self", ".", "transform", ":", "\n", "            ", "if", "self", ".", "target_type", "==", "'seg&depth'", ":", "\n", "                ", "image", ",", "target", ",", "depth", "=", "self", ".", "transform", "(", "image", ",", "target", ",", "depth", ")", "\n", "", "else", ":", "\n", "                ", "image", ",", "target", "=", "self", ".", "transform", "(", "image", ",", "target", ")", "\n", "\n", "# print(np.unique(target.numpy()))", "\n", "", "", "target", "=", "self", ".", "encode_target", "(", "target", ")", "\n", "\n", "if", "self", ".", "target_type", "==", "'seg&depth'", ":", "\n", "            ", "return", "image", ",", "target", ",", "depth", "\n", "", "else", ":", "\n", "            ", "return", "image", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes.__len__": [[212, 214], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes.__repr__": [[215, 229], ["cityscapes.Cityscapes.__len__", "cityscapes.Cityscapes.transform.__repr__().replace", "cityscapes.Cityscapes.target_transform.__repr__().replace", "cityscapes.Cityscapes.transform.__repr__", "cityscapes.Cityscapes.target_transform.__repr__", "len", "len"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__len__", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes.__repr__", "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes.__repr__"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "fmt_str", "=", "'Dataset '", "+", "self", ".", "__class__", ".", "__name__", "+", "'\\n'", "\n", "fmt_str", "+=", "'    Number of datapoints: {}\\n'", ".", "format", "(", "self", ".", "__len__", "(", ")", ")", "\n", "fmt_str", "+=", "'    Split: {}\\n'", ".", "format", "(", "self", ".", "split", ")", "\n", "fmt_str", "+=", "'    Mode: {}\\n'", ".", "format", "(", "self", ".", "mode", ")", "\n", "fmt_str", "+=", "'    Type: {}\\n'", ".", "format", "(", "self", ".", "target_type", ")", "\n", "fmt_str", "+=", "'    Root Location: {}\\n'", ".", "format", "(", "self", ".", "root", ")", "\n", "tmp", "=", "'    Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}\\n'", ".", "format", "(", "\n", "tmp", ",", "self", ".", "transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "tmp", "=", "'    Target Transforms (if any): '", "\n", "fmt_str", "+=", "'{0}{1}'", ".", "format", "(", "\n", "tmp", ",", "self", ".", "target_transform", ".", "__repr__", "(", ")", ".", "replace", "(", "'\\n'", ",", "'\\n'", "+", "' '", "*", "len", "(", "tmp", ")", ")", ")", "\n", "return", "fmt_str", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes._load_json": [[230, 234], ["open", "json.load"], "methods", ["None"], ["", "def", "_load_json", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'r'", ")", "as", "file", ":", "\n", "            ", "data", "=", "json", ".", "load", "(", "file", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.cityscapes.Cityscapes._get_target_suffix": [[235, 246], ["None"], "methods", ["None"], ["", "def", "_get_target_suffix", "(", "self", ",", "mode", ",", "target_type", ")", ":", "\n", "        ", "if", "target_type", "==", "'instance'", ":", "\n", "            ", "return", "'{}_instanceIds.png'", ".", "format", "(", "mode", ")", "\n", "", "elif", "target_type", "==", "'semantic'", ":", "\n", "            ", "return", "'{}_labelIds.png'", ".", "format", "(", "mode", ")", "\n", "", "elif", "target_type", "==", "'color'", ":", "\n", "            ", "return", "'{}_color.png'", ".", "format", "(", "mode", ")", "\n", "", "elif", "target_type", "==", "'polygon'", ":", "\n", "            ", "return", "'{}_polygons.json'", ".", "format", "(", "mode", ")", "\n", "", "elif", "target_type", "==", "'depth'", ":", "\n", "            ", "return", "'{}_disparity.png'", ".", "format", "(", "mode", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.camvid.CamVid.__init__": [[35, 48], ["glob.glob.glob", "glob.glob.glob", "camvid.CamVid.images.sort", "camvid.CamVid.labels.sort", "os.path.join", "os.path.join"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "split", "=", "'train'", ",", "\n", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "images", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "split", ",", "'*.png'", ")", ")", "\n", "self", ".", "labels", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "root", ",", "self", ".", "split", "+", "'annot'", ",", "'*.png'", ")", ")", "\n", "self", ".", "images", ".", "sort", "(", ")", "\n", "self", ".", "labels", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.camvid.CamVid.__getitem__": [[49, 64], ["PIL.Image.open", "PIL.Image.open", "camvid.CamVid.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n        - index (``int``): index of the item in the dataset\n        Returns:\n        A tuple of ``PIL.Image`` (image, label) where label is the ground-truth\n        of the image.\n        \"\"\"", "\n", "\n", "img", ",", "label", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "idx", "]", ")", ",", "Image", ".", "open", "(", "self", ".", "labels", "[", "idx", "]", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", ",", "label", "=", "self", ".", "transform", "(", "img", ",", "label", ")", "\n", "", "label", "[", "label", "==", "11", "]", "=", "255", "# ignore void", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.camvid.CamVid.__len__": [[65, 67], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.camvid.CamVid.decode_target": [[68, 73], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "decode_target", "(", "cls", ",", "mask", ")", ":", "\n", "        ", "\"\"\"decode semantic mask to RGB image\"\"\"", "\n", "mask", "[", "mask", "==", "255", "]", "=", "11", "\n", "return", "cls", ".", "cmap", "[", "mask", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.sunrgbd.SUNRGBD.__init__": [[41, 54], ["glob.glob.glob", "glob.glob.glob", "sunrgbd.SUNRGBD.images.sort", "sunrgbd.SUNRGBD.labels.sort", "os.path.join", "os.path.join"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "split", "=", "'train'", ",", "\n", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "split", "=", "split", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "images", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'SUNRGBD-%s_images'", "%", "self", ".", "split", ",", "'*.jpg'", ")", ")", "\n", "self", ".", "labels", "=", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'%s13labels'", "%", "self", ".", "split", ",", "'*.png'", ")", ")", "\n", "\n", "self", ".", "images", ".", "sort", "(", ")", "\n", "self", ".", "labels", ".", "sort", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.sunrgbd.SUNRGBD.__getitem__": [[55, 70], ["PIL.Image.open", "PIL.Image.open", "sunrgbd.SUNRGBD.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n        - index (``int``): index of the item in the dataset\n        Returns:\n        A tuple of ``PIL.Image`` (image, label) where label is the ground-truth\n        of the image.\n        \"\"\"", "\n", "\n", "img", ",", "label", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "idx", "]", ")", ",", "Image", ".", "open", "(", "self", ".", "labels", "[", "idx", "]", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", ",", "label", "=", "self", ".", "transform", "(", "img", ",", "label", ")", "\n", "", "label", "=", "label", "-", "1", "# ignore void 0->255", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.sunrgbd.SUNRGBD.__len__": [[71, 73], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.sunrgbd.SUNRGBD.decode_target": [[74, 79], ["mask.astype"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "decode_target", "(", "cls", ",", "mask", ")", ":", "\n", "        ", "\"\"\"decode semantic mask to RGB image\"\"\"", "\n", "#mask[mask == 255] = 11", "\n", "return", "cls", ".", "cmap", "[", "mask", ".", "astype", "(", "'uint8'", ")", "+", "1", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.sunrgbd.colormap": [[7, 26], ["numpy.zeros", "range", "range", "numpy.array", "sunrgbd.colormap.bitget"], "function", ["None"], ["def", "colormap", "(", "N", "=", "256", ",", "normalized", "=", "False", ")", ":", "\n", "    ", "def", "bitget", "(", "byteval", ",", "idx", ")", ":", "\n", "        ", "return", "(", "(", "byteval", "&", "(", "1", "<<", "idx", ")", ")", "!=", "0", ")", "\n", "\n", "", "dtype", "=", "'float32'", "if", "normalized", "else", "'uint8'", "\n", "cmap", "=", "np", ".", "zeros", "(", "(", "N", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "r", "=", "g", "=", "b", "=", "0", "\n", "c", "=", "i", "\n", "for", "j", "in", "range", "(", "8", ")", ":", "\n", "            ", "r", "=", "r", "|", "(", "bitget", "(", "c", ",", "0", ")", "<<", "7", "-", "j", ")", "\n", "g", "=", "g", "|", "(", "bitget", "(", "c", ",", "1", ")", "<<", "7", "-", "j", ")", "\n", "b", "=", "b", "|", "(", "bitget", "(", "c", ",", "2", ")", "<<", "7", "-", "j", ")", "\n", "c", "=", "c", ">>", "3", "\n", "\n", "", "cmap", "[", "i", "]", "=", "np", ".", "array", "(", "[", "r", ",", "g", ",", "b", "]", ")", "\n", "\n", "", "cmap", "=", "cmap", "/", "255", "if", "normalized", "else", "cmap", "\n", "return", "cmap", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__init__": [[85, 136], ["os.path.expanduser", "os.path.join", "os.path.join", "voc.download_extract", "os.path.isdir", "RuntimeError", "os.path.join", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.exists", "ValueError", "open", "os.path.join", "os.path.join", "len", "len", "os.path.join", "x.strip", "image_set.rstrip", "f.readlines"], "methods", ["home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.download_extract"], ["def", "__init__", "(", "self", ",", "\n", "root", ",", "\n", "year", "=", "'2012'", ",", "\n", "image_set", "=", "'train'", ",", "\n", "download", "=", "False", ",", "\n", "transform", "=", "None", ")", ":", "\n", "\n", "        ", "is_aug", "=", "False", "\n", "if", "year", "==", "'2012_aug'", ":", "\n", "            ", "is_aug", "=", "True", "\n", "year", "=", "'2012'", "\n", "\n", "", "self", ".", "root", "=", "os", ".", "path", ".", "expanduser", "(", "root", ")", "\n", "self", ".", "year", "=", "year", "\n", "self", ".", "url", "=", "DATASET_YEAR_DICT", "[", "year", "]", "[", "'url'", "]", "\n", "self", ".", "filename", "=", "DATASET_YEAR_DICT", "[", "year", "]", "[", "'filename'", "]", "\n", "self", ".", "md5", "=", "DATASET_YEAR_DICT", "[", "year", "]", "[", "'md5'", "]", "\n", "self", ".", "transform", "=", "transform", "\n", "\n", "self", ".", "image_set", "=", "image_set", "\n", "base_dir", "=", "DATASET_YEAR_DICT", "[", "year", "]", "[", "'base_dir'", "]", "\n", "voc_root", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "base_dir", ")", "\n", "image_dir", "=", "os", ".", "path", ".", "join", "(", "voc_root", ",", "'JPEGImages'", ")", "\n", "\n", "if", "download", ":", "\n", "            ", "download_extract", "(", "self", ".", "url", ",", "self", ".", "root", ",", "self", ".", "filename", ",", "self", ".", "md5", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "voc_root", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "'Dataset not found or corrupted.'", "+", "\n", "' You can use download=True to download it'", ")", "\n", "\n", "", "if", "is_aug", "and", "image_set", "==", "'train'", ":", "\n", "            ", "mask_dir", "=", "os", ".", "path", ".", "join", "(", "voc_root", ",", "'SegmentationClassAug'", ")", "\n", "assert", "os", ".", "path", ".", "exists", "(", "mask_dir", ")", ",", "\"SegmentationClassAug not found, please refer to README.md and prepare it manually\"", "\n", "split_f", "=", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "'train_aug.txt'", ")", "#'./datasets/data/train_aug.txt'", "\n", "", "else", ":", "\n", "            ", "mask_dir", "=", "os", ".", "path", ".", "join", "(", "voc_root", ",", "'SegmentationClass'", ")", "\n", "splits_dir", "=", "os", ".", "path", ".", "join", "(", "voc_root", ",", "'ImageSets/Segmentation'", ")", "\n", "split_f", "=", "os", ".", "path", ".", "join", "(", "splits_dir", ",", "image_set", ".", "rstrip", "(", "'\\n'", ")", "+", "'.txt'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "split_f", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'Wrong image_set entered! Please use image_set=\"train\" '", "\n", "'or image_set=\"trainval\" or image_set=\"val\"'", ")", "\n", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "split_f", ")", ",", "\"r\"", ")", "as", "f", ":", "\n", "            ", "file_names", "=", "[", "x", ".", "strip", "(", ")", "for", "x", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n", "", "self", ".", "images", "=", "[", "os", ".", "path", ".", "join", "(", "image_dir", ",", "x", "+", "\".jpg\"", ")", "for", "x", "in", "file_names", "]", "\n", "self", ".", "masks", "=", "[", "os", ".", "path", ".", "join", "(", "mask_dir", ",", "x", "+", "\".png\"", ")", "for", "x", "in", "file_names", "]", "\n", "assert", "(", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "masks", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__getitem__": [[137, 150], ["PIL.Image.open().convert", "PIL.Image.open", "voc.VOCSegmentation.transform", "PIL.Image.open"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n        Returns:\n            tuple: (image, target) where target is the image segmentation.\n        \"\"\"", "\n", "img", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "target", "=", "Image", ".", "open", "(", "self", ".", "masks", "[", "index", "]", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "transform", "(", "img", ",", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.__len__": [[152, 154], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.VOCSegmentation.decode_target": [[155, 159], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "decode_target", "(", "cls", ",", "mask", ")", ":", "\n", "        ", "\"\"\"decode semantic mask to RGB image\"\"\"", "\n", "return", "cls", ".", "cmap", "[", "mask", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.voc_cmap": [[52, 71], ["numpy.zeros", "range", "range", "numpy.array", "voc.voc_cmap.bitget"], "function", ["None"], ["def", "voc_cmap", "(", "N", "=", "256", ",", "normalized", "=", "False", ")", ":", "\n", "    ", "def", "bitget", "(", "byteval", ",", "idx", ")", ":", "\n", "        ", "return", "(", "(", "byteval", "&", "(", "1", "<<", "idx", ")", ")", "!=", "0", ")", "\n", "\n", "", "dtype", "=", "'float32'", "if", "normalized", "else", "'uint8'", "\n", "cmap", "=", "np", ".", "zeros", "(", "(", "N", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "for", "i", "in", "range", "(", "N", ")", ":", "\n", "        ", "r", "=", "g", "=", "b", "=", "0", "\n", "c", "=", "i", "\n", "for", "j", "in", "range", "(", "8", ")", ":", "\n", "            ", "r", "=", "r", "|", "(", "bitget", "(", "c", ",", "0", ")", "<<", "7", "-", "j", ")", "\n", "g", "=", "g", "|", "(", "bitget", "(", "c", ",", "1", ")", "<<", "7", "-", "j", ")", "\n", "b", "=", "b", "|", "(", "bitget", "(", "c", ",", "2", ")", "<<", "7", "-", "j", ")", "\n", "c", "=", "c", ">>", "3", "\n", "\n", "", "cmap", "[", "i", "]", "=", "np", ".", "array", "(", "[", "r", ",", "g", ",", "b", "]", ")", "\n", "\n", "", "cmap", "=", "cmap", "/", "255", "if", "normalized", "else", "cmap", "\n", "return", "cmap", "\n", "\n"]], "home.repos.pwc.inspect_result.VainF_Data-Free-Adversarial-Distillation.dataset.voc.download_extract": [[160, 164], ["torchvision.datasets.utils.download_url", "tarfile.open", "tar.extractall", "os.path.join"], "function", ["None"], ["", "", "def", "download_extract", "(", "url", ",", "root", ",", "filename", ",", "md5", ")", ":", "\n", "    ", "download_url", "(", "url", ",", "root", ",", "filename", ",", "md5", ")", "\n", "with", "tarfile", ".", "open", "(", "os", ".", "path", ".", "join", "(", "root", ",", "filename", ")", ",", "\"r\"", ")", "as", "tar", ":", "\n", "        ", "tar", ".", "extractall", "(", "path", "=", "root", ")", "", "", "", ""]]}