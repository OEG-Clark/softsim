{"home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileList.ImageFileList.__init__": [[23, 31], ["flist_reader"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "imageFolder", ",", "flist", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "flist_reader", "=", "default_flist_reader", ",", "loader", "=", "default_loader", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imageFolder", "=", "imageFolder", "\n", "self", ".", "imlist", "=", "flist_reader", "(", "flist", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileList.ImageFileList.__getitem__": [[32, 41], ["imageFileList.ImageFileList.loader", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "imageFileList.ImageFileList.transform", "imageFileList.ImageFileList.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "impath", ",", "target", ",", "confidence", "=", "self", ".", "imlist", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "imageFolder", ",", "impath", ")", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", ",", "confidence", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileList.ImageFileList.__len__": [[42, 44], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileList.default_loader": [[7, 9], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["def", "default_loader", "(", "path", ")", ":", "\n", "    ", "return", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileList.default_flist_reader": [[10, 21], ["open", "rf.readlines", "line.strip().split", "imlist.append", "line.strip", "int", "float"], "function", ["None"], ["", "def", "default_flist_reader", "(", "flist", ")", ":", "\n", "    ", "\"\"\"\n    flist format: impath label\\nimpath label\\n ...(same to caffe's filelist)\n    \"\"\"", "\n", "imlist", "=", "[", "]", "\n", "with", "open", "(", "flist", ",", "'r'", ")", "as", "rf", ":", "\n", "        ", "for", "line", "in", "rf", ".", "readlines", "(", ")", ":", "\n", "            ", "impath", ",", "imlabel", ",", "confidence", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "imlist", ".", "append", "(", "(", "impath", ",", "int", "(", "imlabel", ")", ",", "float", "(", "confidence", ")", ")", ")", "\n", "\n", "", "", "return", "imlist", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.create_dirs": [[6, 17], ["os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["def", "create_dirs", "(", "datasetDir", ")", ":", "\n", "    ", "class_names", "=", "[", "'bicycle'", ",", "'car'", ",", "'person'", "]", "\n", "for", "cls_name", "in", "class_names", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "f'sgada_data/mscoco/train/{cls_name}/'", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "f'sgada_data/mscoco/train/{cls_name}/'", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "f'sgada_data/mscoco/val/{cls_name}/'", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "f'sgada_data/mscoco/val/{cls_name}/'", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "f'sgada_data/flir/train/{cls_name}/'", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "f'sgada_data/flir/train/{cls_name}/'", ")", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "f'sgada_data/flir/val/{cls_name}/'", ")", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "f'sgada_data/flir/val/{cls_name}/'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.parse_mscoco": [[19, 107], ["PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "len", "os.path.join", "Image.open.crop", "im_car.crop.save", "len", "os.path.join", "Image.open.crop", "im_car.crop.save", "len", "os.path.join", "Image.open.crop", "im_car.crop.save", "str", "os.path.join", "str", "os.path.join", "str", "os.path.join"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save"], ["", "", "", "def", "parse_mscoco", "(", "datasetDir", ",", "annotations", ",", "set_type", "=", "'train'", ")", ":", "\n", "    ", "path_to_images", "=", "f'mscoco/{set_type}2017'", "\n", "c1", "=", "0", "\n", "count", "=", "0", "\n", "im_crop", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "for", "i", "in", "annotations", "[", "'annotations'", "]", ":", "\n", "        ", "if", "i", "[", "'category_id'", "]", "==", "1", ":", "\n", "            ", "c1", "=", "c1", "+", "1", "\n", "ID", "=", "i", "[", "'image_id'", "]", "\n", "zeros", "=", "12", "-", "len", "(", "str", "(", "ID", ")", ")", "\n", "zero", "=", "'0'", "*", "zeros", "\n", "im_person", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'{}/{}{}.jpg'", ".", "format", "(", "path_to_images", ",", "zero", ",", "ID", ")", ")", ")", "\n", "bbox", "=", "i", "[", "'bbox'", "]", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "\n", "height", "=", "im_person", ".", "size", "[", "1", "]", "\n", "width", "=", "im_person", ".", "size", "[", "0", "]", "\n", "if", "i", "[", "'bbox'", "]", "[", "2", "]", ">", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "-", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "3", "]", ">", "i", "[", "'bbox'", "]", "[", "2", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "3", "]", "-", "i", "[", "'bbox'", "]", "[", "2", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "2", "]", "==", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "(", "im_crop", "[", "2", "]", ">", "width", ")", "or", "(", "im_crop", "[", "3", "]", ">", "height", ")", "or", "(", "im_crop", "[", "0", "]", "<", "0", ")", "or", "(", "im_crop", "[", "1", "]", "<", "0", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "continue", "\n", "", "else", ":", "\n", "                ", "area", "=", "im_person", ".", "crop", "(", "im_crop", ")", "\n", "area", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'sgada_data/mscoco/{}/person/{}.jpg'", ".", "format", "(", "set_type", ",", "c1", ")", ")", ")", "\n", "", "", "if", "i", "[", "'category_id'", "]", "==", "2", ":", "\n", "            ", "c1", "=", "c1", "+", "1", "\n", "ID", "=", "i", "[", "'image_id'", "]", "\n", "zeros", "=", "12", "-", "len", "(", "str", "(", "ID", ")", ")", "\n", "zero", "=", "'0'", "*", "zeros", "\n", "im_bicycle", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'{}/{}{}.jpg'", ".", "format", "(", "path_to_images", ",", "zero", ",", "ID", ")", ")", ")", "\n", "bbox", "=", "i", "[", "'bbox'", "]", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "\n", "height", "=", "im_bicycle", ".", "size", "[", "1", "]", "\n", "width", "=", "im_bicycle", ".", "size", "[", "0", "]", "\n", "if", "i", "[", "'bbox'", "]", "[", "2", "]", ">", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "-", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "3", "]", ">", "i", "[", "'bbox'", "]", "[", "2", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "3", "]", "-", "i", "[", "'bbox'", "]", "[", "2", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "2", "]", "==", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "(", "im_crop", "[", "2", "]", ">", "width", ")", "or", "(", "im_crop", "[", "3", "]", ">", "height", ")", "or", "(", "im_crop", "[", "0", "]", "<", "0", ")", "or", "(", "im_crop", "[", "1", "]", "<", "0", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "", "else", ":", "\n", "                ", "area", "=", "im_bicycle", ".", "crop", "(", "im_crop", ")", "\n", "area", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'sgada_data/mscoco/{}/bicycle/{}.jpg'", ".", "format", "(", "set_type", ",", "c1", ")", ")", ")", "\n", "", "", "if", "i", "[", "'category_id'", "]", "==", "3", ":", "\n", "            ", "c1", "=", "c1", "+", "1", "\n", "ID", "=", "i", "[", "'image_id'", "]", "\n", "zeros", "=", "12", "-", "len", "(", "str", "(", "ID", ")", ")", "\n", "zero", "=", "'0'", "*", "zeros", "\n", "im_car", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'{}/{}{}.jpg'", ".", "format", "(", "path_to_images", ",", "zero", ",", "ID", ")", ")", ")", "\n", "bbox", "=", "i", "[", "'bbox'", "]", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "\n", "height", "=", "im_car", ".", "size", "[", "1", "]", "\n", "width", "=", "im_car", ".", "size", "[", "0", "]", "\n", "if", "i", "[", "'bbox'", "]", "[", "2", "]", ">", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "-", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "3", "]", ">", "i", "[", "'bbox'", "]", "[", "2", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "3", "]", "-", "i", "[", "'bbox'", "]", "[", "2", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "2", "]", "==", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "(", "im_crop", "[", "2", "]", ">", "width", ")", "or", "(", "im_crop", "[", "3", "]", ">", "height", ")", "or", "(", "im_crop", "[", "0", "]", "<", "0", ")", "or", "(", "im_crop", "[", "1", "]", "<", "0", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "", "else", ":", "\n", "                ", "area", "=", "im_car", ".", "crop", "(", "im_crop", ")", "\n", "area", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'sgada_data/mscoco/{}/car/{}.jpg'", ".", "format", "(", "set_type", ",", "c1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.parse_flir_train": [[109, 197], ["PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "len", "os.path.join", "Image.open.crop", "im_car.crop.save", "len", "os.path.join", "Image.open.crop", "im_car.crop.save", "len", "os.path.join", "Image.open.crop", "im_car.crop.save", "str", "os.path.join", "str", "os.path.join", "str", "os.path.join"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save"], ["", "", "", "", "def", "parse_flir_train", "(", "datasetDir", ",", "annotations", ")", ":", "\n", "    ", "c1", "=", "0", "\n", "count", "=", "0", "\n", "im_crop", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "for", "i", "in", "annotations", "[", "'annotations'", "]", ":", "\n", "        ", "if", "i", "[", "'category_id'", "]", "==", "1", ":", "\n", "            ", "c1", "=", "c1", "+", "1", "\n", "ID", "=", "i", "[", "'image_id'", "]", "+", "1", "\n", "\n", "zeros", "=", "5", "-", "len", "(", "str", "(", "ID", ")", ")", "\n", "zero", "=", "'0'", "*", "zeros", "\n", "im_person", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/train/thermal_8_bit/FLIR_{}{}.jpeg'", ".", "format", "(", "zero", ",", "ID", ")", ")", ")", "\n", "bbox", "=", "i", "[", "'bbox'", "]", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "\n", "height", "=", "im_person", ".", "size", "[", "1", "]", "\n", "width", "=", "im_person", ".", "size", "[", "0", "]", "\n", "if", "i", "[", "'bbox'", "]", "[", "2", "]", ">", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "-", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "3", "]", ">", "i", "[", "'bbox'", "]", "[", "2", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "3", "]", "-", "i", "[", "'bbox'", "]", "[", "2", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "2", "]", "==", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "(", "im_crop", "[", "2", "]", ">", "width", ")", "or", "(", "im_crop", "[", "3", "]", ">", "height", ")", "or", "(", "im_crop", "[", "0", "]", "<", "0", ")", "or", "(", "im_crop", "[", "1", "]", "<", "0", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "continue", "\n", "", "else", ":", "\n", "                ", "area", "=", "im_person", ".", "crop", "(", "im_crop", ")", "\n", "area", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'sgada_data/flir/train/person/FLIR_{}.jpeg'", ".", "format", "(", "c1", ")", ")", ")", "\n", "", "", "if", "i", "[", "'category_id'", "]", "==", "2", ":", "\n", "            ", "c1", "=", "c1", "+", "1", "\n", "ID", "=", "i", "[", "'image_id'", "]", "+", "1", "\n", "zeros", "=", "5", "-", "len", "(", "str", "(", "ID", ")", ")", "\n", "zero", "=", "'0'", "*", "zeros", "\n", "im_bicycle", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/train/thermal_8_bit/FLIR_{}{}.jpeg'", ".", "format", "(", "zero", ",", "ID", ")", ")", ")", "\n", "bbox", "=", "i", "[", "'bbox'", "]", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "\n", "height", "=", "im_bicycle", ".", "size", "[", "1", "]", "\n", "width", "=", "im_bicycle", ".", "size", "[", "0", "]", "\n", "if", "i", "[", "'bbox'", "]", "[", "2", "]", ">", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "-", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "3", "]", ">", "i", "[", "'bbox'", "]", "[", "2", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "3", "]", "-", "i", "[", "'bbox'", "]", "[", "2", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "2", "]", "==", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "(", "im_crop", "[", "2", "]", ">", "width", ")", "or", "(", "im_crop", "[", "3", "]", ">", "height", ")", "or", "(", "im_crop", "[", "0", "]", "<", "0", ")", "or", "(", "im_crop", "[", "1", "]", "<", "0", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "", "else", ":", "\n", "                ", "area", "=", "im_bicycle", ".", "crop", "(", "im_crop", ")", "\n", "area", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'sgada_data/flir/train/bicycle/FLIR_{}.jpeg'", ".", "format", "(", "c1", ")", ")", ")", "\n", "", "", "if", "i", "[", "'category_id'", "]", "==", "3", ":", "\n", "            ", "c1", "=", "c1", "+", "1", "\n", "ID", "=", "i", "[", "'image_id'", "]", "+", "1", "\n", "zeros", "=", "5", "-", "len", "(", "str", "(", "ID", ")", ")", "\n", "zero", "=", "'0'", "*", "zeros", "\n", "im_car", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/train/thermal_8_bit/FLIR_{}{}.jpeg'", ".", "format", "(", "zero", ",", "ID", ")", ")", ")", "\n", "bbox", "=", "i", "[", "'bbox'", "]", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "\n", "height", "=", "im_car", ".", "size", "[", "1", "]", "\n", "width", "=", "im_car", ".", "size", "[", "0", "]", "\n", "if", "i", "[", "'bbox'", "]", "[", "2", "]", ">", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "-", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "3", "]", ">", "i", "[", "'bbox'", "]", "[", "2", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "3", "]", "-", "i", "[", "'bbox'", "]", "[", "2", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "2", "]", "==", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "(", "im_crop", "[", "2", "]", ">", "width", ")", "or", "(", "im_crop", "[", "3", "]", ">", "height", ")", "or", "(", "im_crop", "[", "0", "]", "<", "0", ")", "or", "(", "im_crop", "[", "1", "]", "<", "0", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "", "else", ":", "\n", "                ", "area", "=", "im_car", ".", "crop", "(", "im_crop", ")", "\n", "area", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'sgada_data/flir/train/car/FLIR_{}.jpeg'", ".", "format", "(", "c1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.parse_flir_val": [[199, 296], ["len", "PIL.Image.open", "Image.open.crop", "im_car.crop.save", "len", "PIL.Image.open", "Image.open.crop", "im_car.crop.save", "len", "PIL.Image.open", "Image.open.crop", "im_car.crop.save", "str", "len", "os.path.join", "len", "PIL.Image.open", "os.path.join", "str", "len", "os.path.join", "len", "PIL.Image.open", "os.path.join", "str", "len", "os.path.join", "len", "PIL.Image.open", "os.path.join", "str", "str", "os.path.join", "str", "str", "os.path.join", "str", "str", "os.path.join"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save"], ["", "", "", "", "def", "parse_flir_val", "(", "datasetDir", ",", "annotations", ")", ":", "\n", "    ", "c1", "=", "0", "\n", "count", "=", "0", "\n", "im_crop", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "for", "i", "in", "annotations", "[", "'annotations'", "]", ":", "\n", "        ", "if", "i", "[", "'category_id'", "]", "==", "1", ":", "\n", "            ", "c1", "=", "c1", "+", "1", "\n", "ID", "=", "i", "[", "'image_id'", "]", "+", "8863", "\n", "\n", "if", "(", "len", "(", "str", "(", "ID", ")", ")", "<", "5", ")", ":", "\n", "                ", "zeros", "=", "5", "-", "len", "(", "str", "(", "ID", ")", ")", "\n", "zero", "=", "'0'", "*", "zeros", "\n", "im_person", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/val/thermal_8_bit/FLIR_{}{}.jpeg'", ".", "format", "(", "zero", ",", "ID", ")", ")", ")", "\n", "", "elif", "(", "len", "(", "str", "(", "ID", ")", ")", "==", "5", ")", ":", "\n", "                ", "im_person", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/val/thermal_8_bit/FLIR_{}.jpeg'", ".", "format", "(", "ID", ")", ")", ")", "\n", "", "bbox", "=", "i", "[", "'bbox'", "]", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "\n", "height", "=", "im_person", ".", "size", "[", "1", "]", "\n", "width", "=", "im_person", ".", "size", "[", "0", "]", "\n", "if", "i", "[", "'bbox'", "]", "[", "2", "]", ">", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "-", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "3", "]", ">", "i", "[", "'bbox'", "]", "[", "2", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "3", "]", "-", "i", "[", "'bbox'", "]", "[", "2", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "2", "]", "==", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "(", "im_crop", "[", "2", "]", ">", "width", ")", "or", "(", "im_crop", "[", "3", "]", ">", "height", ")", "or", "(", "im_crop", "[", "0", "]", "<", "0", ")", "or", "(", "im_crop", "[", "1", "]", "<", "0", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "continue", "\n", "", "else", ":", "\n", "                ", "area", "=", "im_person", ".", "crop", "(", "im_crop", ")", "\n", "area", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'sgada_data/flir/val/person/FLIR_{}.jpeg'", ".", "format", "(", "c1", ")", ")", ")", "\n", "", "", "if", "i", "[", "'category_id'", "]", "==", "2", ":", "\n", "            ", "c1", "=", "c1", "+", "1", "\n", "ID", "=", "i", "[", "'image_id'", "]", "+", "8863", "\n", "if", "(", "len", "(", "str", "(", "ID", ")", ")", "<", "5", ")", ":", "\n", "                ", "zeros", "=", "5", "-", "len", "(", "str", "(", "ID", ")", ")", "\n", "zero", "=", "'0'", "*", "zeros", "\n", "im_bicycle", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/val/thermal_8_bit/FLIR_{}{}.jpeg'", ".", "format", "(", "zero", ",", "ID", ")", ")", ")", "\n", "", "elif", "(", "len", "(", "str", "(", "ID", ")", ")", "==", "5", ")", ":", "\n", "                ", "im_bicycle", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/val/thermal_8_bit/FLIR_{}.jpeg'", ".", "format", "(", "ID", ")", ")", ")", "\n", "", "bbox", "=", "i", "[", "'bbox'", "]", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "\n", "height", "=", "im_bicycle", ".", "size", "[", "1", "]", "\n", "width", "=", "im_bicycle", ".", "size", "[", "0", "]", "\n", "if", "i", "[", "'bbox'", "]", "[", "2", "]", ">", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "-", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "3", "]", ">", "i", "[", "'bbox'", "]", "[", "2", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "3", "]", "-", "i", "[", "'bbox'", "]", "[", "2", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "2", "]", "==", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "(", "im_crop", "[", "2", "]", ">", "width", ")", "or", "(", "im_crop", "[", "3", "]", ">", "height", ")", "or", "(", "im_crop", "[", "0", "]", "<", "0", ")", "or", "(", "im_crop", "[", "1", "]", "<", "0", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "", "else", ":", "\n", "                ", "area", "=", "im_bicycle", ".", "crop", "(", "im_crop", ")", "\n", "area", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'sgada_data/flir/val/bicycle/FLIR_{}.jpeg'", ".", "format", "(", "c1", ")", ")", ")", "\n", "", "", "if", "i", "[", "'category_id'", "]", "==", "3", ":", "\n", "            ", "c1", "=", "c1", "+", "1", "\n", "ID", "=", "i", "[", "'image_id'", "]", "+", "8863", "\n", "if", "(", "len", "(", "str", "(", "ID", ")", ")", "<", "5", ")", ":", "\n", "                ", "zeros", "=", "5", "-", "len", "(", "str", "(", "ID", ")", ")", "\n", "zero", "=", "'0'", "*", "zeros", "\n", "im_car", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/val/thermal_8_bit/FLIR_{}{}.jpeg'", ".", "format", "(", "zero", ",", "ID", ")", ")", ")", "\n", "", "elif", "(", "len", "(", "str", "(", "ID", ")", ")", "==", "5", ")", ":", "\n", "                ", "im_car", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/val/thermal_8_bit/FLIR_{}.jpeg'", ".", "format", "(", "ID", ")", ")", ")", "\n", "", "bbox", "=", "i", "[", "'bbox'", "]", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "\n", "height", "=", "im_car", ".", "size", "[", "1", "]", "\n", "width", "=", "im_car", ".", "size", "[", "0", "]", "\n", "if", "i", "[", "'bbox'", "]", "[", "2", "]", ">", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "1", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "-", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "3", "]", ">", "i", "[", "'bbox'", "]", "[", "2", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "(", "(", "i", "[", "'bbox'", "]", "[", "2", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "0", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "-", "(", "(", "i", "[", "'bbox'", "]", "[", "3", "]", "-", "i", "[", "'bbox'", "]", "[", "2", "]", ")", "/", "2", ")", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "i", "[", "'bbox'", "]", "[", "2", "]", "==", "i", "[", "'bbox'", "]", "[", "3", "]", ":", "\n", "                ", "im_crop", "[", "2", "]", "=", "i", "[", "'bbox'", "]", "[", "0", "]", "+", "i", "[", "'bbox'", "]", "[", "2", "]", "\n", "im_crop", "[", "3", "]", "=", "i", "[", "'bbox'", "]", "[", "1", "]", "+", "i", "[", "'bbox'", "]", "[", "3", "]", "\n", "", "if", "(", "im_crop", "[", "2", "]", ">", "width", ")", "or", "(", "im_crop", "[", "3", "]", ">", "height", ")", "or", "(", "im_crop", "[", "0", "]", "<", "0", ")", "or", "(", "im_crop", "[", "1", "]", "<", "0", ")", ":", "\n", "                ", "count", "=", "count", "+", "1", "\n", "", "else", ":", "\n", "                ", "area", "=", "im_car", ".", "crop", "(", "im_crop", ")", "\n", "area", ".", "save", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'sgada_data/flir/val/car/FLIR_{}.jpeg'", ".", "format", "(", "c1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.main": [[298, 329], ["print", "prepare_dataset.create_dirs", "print", "print", "prepare_dataset.parse_mscoco", "print", "print", "prepare_dataset.parse_mscoco", "print", "print", "prepare_dataset.parse_flir_train", "print", "print", "prepare_dataset.parse_flir_val", "print", "open", "json.load", "open", "json.load", "open", "json.load", "open", "json.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.create_dirs", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.parse_mscoco", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.parse_mscoco", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.parse_flir_train", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.prepare_dataset.parse_flir_val"], ["", "", "", "", "def", "main", "(", ")", ":", "\n", "    ", "datasetDir", "=", "os", ".", "environ", "[", "'DATASETDIR'", "]", "\n", "\n", "print", "(", "f'Creating output dirs if not exist under {datasetDir}'", ")", "\n", "create_dirs", "(", "datasetDir", ")", "\n", "\n", "print", "(", "'Loading MSCOCO training set annotations'", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'mscoco/annotations_trainval2017/annotations/instances_train2017.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "", "print", "(", "'Parsing MSCOCO training set'", ")", "\n", "parse_mscoco", "(", "datasetDir", ",", "data", ",", "set_type", "=", "'train'", ")", "\n", "\n", "print", "(", "'Loading MSCOCO validation set annotations'", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'mscoco/annotations_trainval2017/annotations/instances_val2017.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "", "print", "(", "'Parsing MSCOCO validation set'", ")", "\n", "parse_mscoco", "(", "datasetDir", ",", "data", ",", "set_type", "=", "'val'", ")", "\n", "\n", "print", "(", "'Loading FLIR training set annotations'", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/train/thermal_annotations.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "", "print", "(", "'Parsing FLIR training set'", ")", "\n", "parse_flir_train", "(", "datasetDir", ",", "data", ")", "\n", "\n", "print", "(", "'Loading FLIR validation set annotations'", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "datasetDir", ",", "'FLIR_ADAS_1_3/val/thermal_annotations.json'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "data", "=", "json", ".", "load", "(", "f", ")", "\n", "", "print", "(", "'Parsing FLIR validation set'", ")", "\n", "parse_flir_val", "(", "datasetDir", ",", "data", ")", "\n", "\n", "print", "(", "'Done'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.readConfigFile": [[13, 26], ["configparser.ConfigParser", "configparser.ConfigParser.read"], "function", ["None"], ["def", "readConfigFile", "(", "filePath", ")", ":", "\n", "    ", "\"\"\"\n    Read config file\n\n    Args:\n        filePath ([str]): path to config file\n\n    Returns:\n        [Obj]: config object\n    \"\"\"", "\n", "config", "=", "configparser", ".", "ConfigParser", "(", ")", "\n", "config", ".", "read", "(", "filePath", ")", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.setLogger": [[28, 42], ["logging.basicConfig", "logging.getLogger", "logging.FileHandler", "logging.StreamHandler"], "function", ["None"], ["", "def", "setLogger", "(", "logFilePath", ")", ":", "\n", "    ", "\"\"\"\n    Set logger\n\n    Args:\n        logFilePath ([str]): path to log file\n\n    Returns:\n        [obj]: logger object\n    \"\"\"", "\n", "logHandler", "=", "[", "logging", ".", "FileHandler", "(", "logFilePath", ")", ",", "logging", ".", "StreamHandler", "(", ")", "]", "\n", "logging", ".", "basicConfig", "(", "level", "=", "logging", ".", "INFO", ",", "format", "=", "\"%(asctime)s %(message)s\"", ",", "handlers", "=", "logHandler", ")", "\n", "logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.make_variable": [[44, 49], ["torch.cuda.is_available", "torch.cuda.is_available", "torch.autograd.Variable", "tensor.to.to"], "function", ["None"], ["", "def", "make_variable", "(", "tensor", ",", "device", ",", "volatile", "=", "False", ")", ":", "\n", "    ", "\"\"\"Convert Tensor to Variable.\"\"\"", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "tensor", "=", "tensor", ".", "to", "(", "device", ")", "\n", "", "return", "Variable", "(", "tensor", ",", "volatile", "=", "volatile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.make_weight_for_balanced_classes": [[51, 63], ["float", "range", "enumerate", "sum", "len", "float"], "function", ["None"], ["", "def", "make_weight_for_balanced_classes", "(", "images", ",", "nclasses", ")", ":", "\n", "    ", "count", "=", "[", "0", "]", "*", "nclasses", "\n", "for", "item", "in", "images", ":", "\n", "        ", "count", "[", "item", "[", "1", "]", "]", "+=", "1", "\n", "", "weight_per_class", "=", "[", "0.", "]", "*", "nclasses", "\n", "N", "=", "float", "(", "sum", "(", "count", ")", ")", "\n", "for", "i", "in", "range", "(", "nclasses", ")", ":", "\n", "        ", "weight_per_class", "[", "i", "]", "=", "N", "/", "float", "(", "count", "[", "i", "]", ")", "\n", "", "weight", "=", "[", "0", "]", "*", "len", "(", "images", ")", "\n", "for", "idx", ",", "val", "in", "enumerate", "(", "images", ")", ":", "\n", "        ", "weight", "[", "idx", "]", "=", "weight_per_class", "[", "val", "[", "1", "]", "]", "\n", "", "return", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.get_mscoco": [[65, 109], ["torchvision.transforms.Compose", "torchvision.datasets.ImageFolder", "altutils.make_weight_for_balanced_classes", "torch.DoubleTensor", "torch.DoubleTensor", "torch.utils.data.sampler.WeightedRandomSampler", "torch.utils.data.sampler.WeightedRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "torchvision.datasets.ImageFolder", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "len", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.make_weight_for_balanced_classes"], ["", "def", "get_mscoco", "(", "dataset_root", ",", "batch_size", ",", "train", ")", ":", "\n", "    ", "\"\"\"Get MSCOCO datasets loader\n\n    Args:\n        dataset_root (str): path to the dataset folder\n        batch_size (int): batch size\n        train (bool): create loader for training or test set\n\n    Returns:\n        obj: dataloader object for MSCOCO dataset\n    \"\"\"", "\n", "if", "train", ":", "\n", "        ", "pre_process", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "(", "0.4017", ",", "0.3791", ",", "0.3656", ")", ",", "std", "=", "(", "0.2093", ",", "0.2019", ",", "0.1996", ")", ")", "\n", "]", ")", "\n", "mscoco_dataset", "=", "datasets", ".", "ImageFolder", "(", "root", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'sgada_data/mscoco/train'", ")", ",", "\n", "transform", "=", "pre_process", ")", "\n", "\n", "weight", "=", "make_weight_for_balanced_classes", "(", "mscoco_dataset", ".", "imgs", ",", "len", "(", "mscoco_dataset", ".", "classes", ")", ")", "\n", "weight", "=", "torch", ".", "DoubleTensor", "(", "weight", ")", "\n", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "WeightedRandomSampler", "(", "weight", ",", "len", "(", "weight", ")", ")", "\n", "mscoco_data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", "=", "mscoco_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "sampler", "=", "sampler", ",", "num_workers", "=", "4", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "pre_process", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "(", "0.3961", ",", "0.3743", ",", "0.3603", ")", ",", "\n", "std", "=", "(", "0.2086", ",", "0.2012", ",", "0.1987", ")", ")", "]", ")", "\n", "mscoco_dataset", "=", "datasets", ".", "ImageFolder", "(", "root", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'sgada_data/mscoco/val'", ")", ",", "\n", "transform", "=", "pre_process", ")", "\n", "\n", "mscoco_data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", "=", "mscoco_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "4", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "", "return", "mscoco_data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.get_flir": [[111, 155], ["torchvision.transforms.Compose", "torchvision.datasets.ImageFolder", "altutils.make_weight_for_balanced_classes", "torch.DoubleTensor", "torch.DoubleTensor", "torch.utils.data.sampler.WeightedRandomSampler", "torch.utils.data.sampler.WeightedRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "torchvision.datasets.ImageFolder", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "len", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.make_weight_for_balanced_classes"], ["", "def", "get_flir", "(", "dataset_root", ",", "batch_size", ",", "train", ")", ":", "\n", "    ", "\"\"\"Get FLIR datasets loader\n\n    Args:\n        dataset_root (str): path to the dataset folder\n        batch_size (int): batch size\n        train (bool): create loader for training or test set\n\n    Returns:\n        obj: dataloader object for FLIR dataset\n    \"\"\"", "\n", "# dataset and data loader", "\n", "if", "train", ":", "\n", "        ", "pre_process", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "(", "0.5776", ",", "0.5776", ",", "0.5776", ")", ",", "\n", "std", "=", "(", "0.1319", ",", "0.1319", ",", "0.1319", ")", ")", "]", ")", "\n", "flir_dataset", "=", "datasets", ".", "ImageFolder", "(", "root", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'sgada_data/flir/train'", ")", ",", "\n", "transform", "=", "pre_process", ")", "\n", "weight", "=", "make_weight_for_balanced_classes", "(", "flir_dataset", ".", "imgs", ",", "len", "(", "flir_dataset", ".", "classes", ")", ")", "\n", "weight", "=", "torch", ".", "DoubleTensor", "(", "weight", ")", "\n", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "WeightedRandomSampler", "(", "weight", ",", "len", "(", "weight", ")", ")", "\n", "\n", "flir_data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", "=", "flir_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "sampler", "=", "sampler", ",", "num_workers", "=", "4", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "pre_process", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "(", "0.5587", ",", "0.5587", ",", "0.558", ")", ",", "\n", "std", "=", "(", "0.1394", ",", "0.1394", ",", "0.1394", ")", ")", "]", ")", "\n", "flir_dataset", "=", "datasets", ".", "ImageFolder", "(", "root", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'sgada_data/flir/val'", ")", ",", "\n", "transform", "=", "pre_process", ")", "\n", "flir_data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", "=", "flir_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "4", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "", "return", "flir_data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.get_flir_from_list_wdomain": [[157, 201], ["torchvision.transforms.Compose", "utils.imageFileListWeightDomain.ImageFileListWeightDomain", "torch.DoubleTensor", "torch.DoubleTensor", "torch.utils.data.sampler.WeightedRandomSampler", "torch.utils.data.sampler.WeightedRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.transforms.Compose", "utils.imageFileList.ImageFileList", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join", "torchvision.transforms.Resize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "os.path.join"], "function", ["None"], ["", "def", "get_flir_from_list_wdomain", "(", "dataset_root", ",", "batch_size", ",", "train", ")", ":", "\n", "    ", "\"\"\"Get FLIR datasets loader\n\n    Args:\n        dataset_root (str): path to the dataset folder\n        batch_size (int): batch size\n        train (bool): create loader for training or test set\n\n    Returns:\n        obj: dataloader object for FLIR dataset\n    \"\"\"", "\n", "# dataset and data loader", "\n", "if", "train", ":", "\n", "        ", "pre_process", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "(", "0.5776", ",", "0.5776", ",", "0.5776", ")", ",", "\n", "std", "=", "(", "0.1319", ",", "0.1319", ",", "0.1319", ")", ")", "]", ")", "\n", "flir_dataset", "=", "ImageFileListWeightDomain", "(", "root", "=", "dataset_root", ",", "imageFolder", "=", "'sgada_data/flir/train'", ",", "flist", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'sgada_data/flir'", ",", "'validation_wconf_wdomain_weights.txt'", ")", ",", "\n", "transform", "=", "pre_process", ")", "\n", "weight", "=", "flir_dataset", ".", "weights", "\n", "weight", "=", "torch", ".", "DoubleTensor", "(", "weight", ")", "\n", "\n", "sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "WeightedRandomSampler", "(", "weight", ",", "len", "(", "weight", ")", ")", "\n", "\n", "flir_data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", "=", "flir_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "sampler", "=", "sampler", ",", "num_workers", "=", "4", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "pre_process", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "Resize", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "\n", "mean", "=", "(", "0.5587", ",", "0.5587", ",", "0.558", ")", ",", "\n", "std", "=", "(", "0.1394", ",", "0.1394", ",", "0.1394", ")", ")", "]", ")", "\n", "flir_dataset", "=", "ImageFileList", "(", "root", "=", "dataset_root", ",", "imageFolder", "=", "'sgada_data/flir/val'", ",", "flist", "=", "os", ".", "path", ".", "join", "(", "dataset_root", ",", "'sgada_data/flir'", ",", "'test_wconf_wdomain_weights.txt'", ")", ",", "\n", "transform", "=", "pre_process", ")", "\n", "flir_data_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", "=", "flir_dataset", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "shuffle", "=", "True", ",", "num_workers", "=", "4", ",", "pin_memory", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "\n", "", "return", "flir_data_loader", "", "", ""]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileListWeightDomain.ImageFileListWeightDomain.__init__": [[25, 33], ["flist_reader"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", ",", "imageFolder", ",", "flist", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "flist_reader", "=", "default_flist_reader", ",", "loader", "=", "default_loader", ")", ":", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "imageFolder", "=", "imageFolder", "\n", "self", ".", "imlist", ",", "self", ".", "weights", "=", "flist_reader", "(", "flist", ")", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileListWeightDomain.ImageFileListWeightDomain.__getitem__": [[34, 43], ["imageFileListWeightDomain.ImageFileListWeightDomain.loader", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "imageFileListWeightDomain.ImageFileListWeightDomain.transform", "imageFileListWeightDomain.ImageFileListWeightDomain.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "impath", ",", "target", ",", "confidence", ",", "discOut", ",", "discConf", "=", "self", ".", "imlist", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "os", ".", "path", ".", "join", "(", "self", ".", "root", ",", "self", ".", "imageFolder", ",", "impath", ")", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", ",", "confidence", ",", "discOut", ",", "discConf", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileListWeightDomain.ImageFileListWeightDomain.__len__": [[44, 46], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imlist", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileListWeightDomain.default_loader": [[7, 9], ["PIL.Image.open().convert", "PIL.Image.open"], "function", ["None"], ["def", "default_loader", "(", "path", ")", ":", "\n", "    ", "return", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.imageFileListWeightDomain.default_flist_reader": [[10, 23], ["open", "rf.readlines", "line.strip().split", "weights.append", "imlist.append", "float", "line.strip", "int", "float", "int", "float"], "function", ["None"], ["", "def", "default_flist_reader", "(", "flist", ")", ":", "\n", "    ", "\"\"\"\n    flist format: impath label\\nimpath label\\n ...(same to caffe's filelist)\n    \"\"\"", "\n", "imlist", "=", "[", "]", "\n", "weights", "=", "[", "]", "\n", "with", "open", "(", "flist", ",", "'r'", ")", "as", "rf", ":", "\n", "        ", "for", "line", "in", "rf", ".", "readlines", "(", ")", ":", "\n", "            ", "impath", ",", "imlabel", ",", "confidence", ",", "discOut", ",", "discConf", ",", "weight", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "weights", ".", "append", "(", "float", "(", "weight", ")", ")", "\n", "imlist", ".", "append", "(", "(", "impath", ",", "int", "(", "imlabel", ")", ",", "float", "(", "confidence", ")", ",", "int", "(", "discOut", ")", ",", "float", "(", "discConf", ")", ")", ")", "\n", "\n", "", "", "return", "imlist", ",", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.AverageMeter.__init__": [[35, 37], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.AverageMeter.reset": [[38, 43], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.AverageMeter.update": [[44, 49], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "", "", ""]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save": [[6, 12], ["os.path.join", "torch.save", "os.path.join", "shutil.copyfile"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save"], ["def", "save", "(", "log_dir", ",", "state_dict", ",", "is_best", ")", ":", "\n", "    ", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'checkpoint.pt'", ")", "\n", "torch", ".", "save", "(", "state_dict", ",", "checkpoint_path", ")", "\n", "if", "is_best", ":", "\n", "        ", "best_model_path", "=", "os", ".", "path", ".", "join", "(", "log_dir", ",", "'best_model.pt'", ")", "\n", "shutil", ".", "copyfile", "(", "checkpoint_path", ",", "best_model_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.get_logger": [[14, 28], ["FileHandler", "FileHandler.setLevel", "StreamHandler", "StreamHandler.setLevel", "getLogger", "getLogger.setLevel", "getLogger.addHandler", "getLogger.addHandler", "Formatter", "handler.setFormatter"], "function", ["None"], ["", "", "def", "get_logger", "(", "log_file", ")", ":", "\n", "    ", "from", "logging", "import", "getLogger", ",", "FileHandler", ",", "StreamHandler", ",", "Formatter", ",", "DEBUG", ",", "INFO", "# noqa", "\n", "fh", "=", "FileHandler", "(", "log_file", ")", "\n", "fh", ".", "setLevel", "(", "DEBUG", ")", "\n", "sh", "=", "StreamHandler", "(", ")", "\n", "sh", ".", "setLevel", "(", "INFO", ")", "\n", "for", "handler", "in", "[", "fh", ",", "sh", "]", ":", "\n", "        ", "formatter", "=", "Formatter", "(", "'%(asctime)s - %(message)s'", ")", "\n", "handler", ".", "setFormatter", "(", "formatter", ")", "\n", "", "logger", "=", "getLogger", "(", "'adda'", ")", "\n", "logger", ".", "setLevel", "(", "INFO", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "logger", ".", "addHandler", "(", "sh", ")", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.ResNet50Mod.__init__": [[7, 22], ["torch.nn.Module.__init__", "torchvision.models.resnet50", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Discriminator.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNet50Mod", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model_resnet50", "=", "models", ".", "resnet50", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "freezed_rn50", "=", "nn", ".", "Sequential", "(", "\n", "model_resnet50", ".", "conv1", ",", "\n", "model_resnet50", ".", "bn1", ",", "\n", "model_resnet50", ".", "relu", ",", "\n", "model_resnet50", ".", "maxpool", ",", "\n", "model_resnet50", ".", "layer1", ",", "\n", "model_resnet50", ".", "layer2", ",", "\n", "model_resnet50", ".", "layer3", ",", "\n", ")", "\n", "self", ".", "layer4", "=", "model_resnet50", ".", "layer4", "\n", "self", ".", "avgpool", "=", "model_resnet50", ".", "avgpool", "\n", "self", ".", "__in_features", "=", "model_resnet50", ".", "fc", ".", "in_features", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.ResNet50Mod.forward": [[23, 29], ["resnet50off.ResNet50Mod.freezed_rn50", "resnet50off.ResNet50Mod.layer4", "resnet50off.ResNet50Mod.avgpool", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "freezed_rn50", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Encoder.__init__": [[32, 42], ["torch.nn.Module.__init__", "resnet50off.ResNet50Mod", "resnet50off.Encoder.feature_extractor.parameters"], "methods", ["home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Discriminator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "h", "=", "256", ",", "dropout", "=", "0.5", ",", "srcTrain", "=", "False", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "rnMod", "=", "ResNet50Mod", "(", ")", "\n", "self", ".", "feature_extractor", "=", "rnMod", ".", "freezed_rn50", "\n", "self", ".", "layer4", "=", "rnMod", ".", "layer4", "\n", "self", ".", "avgpool", "=", "rnMod", ".", "avgpool", "\n", "if", "srcTrain", ":", "\n", "            ", "for", "param", "in", "self", ".", "feature_extractor", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Encoder.forward": [[43, 50], ["x.view.view.expand", "resnet50off.Encoder.feature_extractor", "resnet50off.Encoder.layer4", "resnet50off.Encoder.avgpool", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "x", ".", "expand", "(", "x", ".", "data", ".", "shape", "[", "0", "]", ",", "3", ",", "224", ",", "224", ")", "\n", "x", "=", "self", ".", "feature_extractor", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Classifier.__init__": [[53, 56], ["torch.nn.Module.__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Discriminator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_classes", ",", "dropout", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "Classifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l1", "=", "nn", ".", "Linear", "(", "2048", ",", "n_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Classifier.forward": [[57, 60], ["resnet50off.Classifier.l1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "l1", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.CNN.__init__": [[63, 70], ["torch.nn.Module.__init__", "resnet50off.Encoder", "resnet50off.Classifier", "resnet50off.CNN.classifier.parameters"], "methods", ["home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Discriminator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", "=", "3", ",", "n_classes", "=", "31", ",", "target", "=", "False", ",", "srcTrain", "=", "False", ")", ":", "\n", "        ", "super", "(", "CNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "Encoder", "(", "in_channels", "=", "in_channels", ",", "srcTrain", "=", "srcTrain", ")", "\n", "self", ".", "classifier", "=", "Classifier", "(", "n_classes", ")", "\n", "if", "target", ":", "\n", "            ", "for", "param", "in", "self", ".", "classifier", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.CNN.forward": [[71, 75], ["resnet50off.CNN.encoder", "resnet50off.CNN.classifier"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Discriminator.__init__": [[78, 85], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LogSoftmax"], "methods", ["home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Discriminator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "h", "=", "500", ",", "args", "=", "None", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "l1", "=", "nn", ".", "Linear", "(", "2048", ",", "h", ")", "\n", "self", ".", "l2", "=", "nn", ".", "Linear", "(", "h", ",", "h", ")", "\n", "self", ".", "l3", "=", "nn", ".", "Linear", "(", "h", ",", "2", ")", "\n", "self", ".", "l4", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "self", ".", "slope", "=", "args", ".", "slope", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.models.resnet50off.Discriminator.forward": [[86, 92], ["torch.leaky_relu", "torch.leaky_relu", "resnet50off.Discriminator.l3", "resnet50off.Discriminator.l4", "resnet50off.Discriminator.l1", "resnet50off.Discriminator.l2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "l1", "(", "x", ")", ",", "self", ".", "slope", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "l2", "(", "x", ")", ",", "self", ".", "slope", ")", "\n", "x", "=", "self", ".", "l3", "(", "x", ")", "\n", "x", "=", "self", ".", "l4", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.avaapm_SGADA.core.sgada_domain.run": [[17, 72], ["utils.utils.get_logger", "utils.utils.get_logger.info", "utils.altutils.get_mscoco", "utils.altutils.get_flir", "utils.altutils.get_flir", "utils.altutils.get_flir_from_list_wdomain", "utils.utils.get_logger.info", "models.resnet50off.CNN().to", "os.path.isfile", "CNN().to.parameters", "models.resnet50off.CNN().to", "CNN().to.load_state_dict", "CNN().to.classifier.parameters", "torch.optim.Adam", "models.resnet50off.Discriminator().to", "torch.nn.CrossEntropyLoss", "torch.optim.Adam", "core.trainer.train_target_cnnP_domain", "enumerate", "utils.utils.get_logger.info", "utils.utils.get_logger.info", "utils.utils.get_logger.info", "os.path.exists", "os.makedirs", "os.path.join", "torch.unique", "torch.load", "CNN().to.load_state_dict", "utils.utils.get_logger.info", "CNN().to.state_dict", "CNN().to.encoder.parameters", "Discriminator().to.parameters", "best_class[].item", "torch.tensor", "models.resnet50off.CNN", "models.resnet50off.CNN", "models.resnet50off.Discriminator"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.get_logger", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.get_mscoco", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.get_flir", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.get_flir", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.altutils.get_flir_from_list_wdomain", "home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.train_target_cnnP_domain"], ["def", "run", "(", "args", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "logdir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "args", ".", "logdir", ")", "\n", "", "logger", "=", "get_logger", "(", "os", ".", "path", ".", "join", "(", "args", ".", "logdir", ",", "'train_sgada.log'", ")", ")", "\n", "logger", ".", "info", "(", "args", ")", "\n", "\n", "# data loaders", "\n", "dataset_root", "=", "os", ".", "environ", "[", "\"DATASETDIR\"", "]", "\n", "source_train_loader", "=", "get_mscoco", "(", "dataset_root", ",", "args", ".", "batch_size", ",", "train", "=", "True", ")", "\n", "target_train_loader", "=", "get_flir", "(", "dataset_root", ",", "args", ".", "batch_size", ",", "train", "=", "True", ")", "\n", "target_val_loader", "=", "get_flir", "(", "dataset_root", ",", "args", ".", "batch_size", ",", "train", "=", "False", ")", "\n", "target_conf_train_loader", "=", "get_flir_from_list_wdomain", "(", "dataset_root", ",", "args", ".", "batch_size", ",", "train", "=", "True", ")", "\n", "\n", "args", ".", "classInfo", "=", "{", "'classes'", ":", "torch", ".", "unique", "(", "torch", ".", "tensor", "(", "source_train_loader", ".", "dataset", ".", "targets", ")", ")", ",", "\n", "'classNames'", ":", "source_train_loader", ".", "dataset", ".", "classes", "}", "\n", "\n", "logger", ".", "info", "(", "'SGADA training'", ")", "\n", "\n", "# train source CNN", "\n", "source_cnn", "=", "CNN", "(", "in_channels", "=", "args", ".", "in_channels", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "args", ".", "trained", ")", ":", "\n", "        ", "c", "=", "torch", ".", "load", "(", "args", ".", "trained", ")", "\n", "source_cnn", ".", "load_state_dict", "(", "c", "[", "'model'", "]", ")", "\n", "logger", ".", "info", "(", "'Loaded `{}`'", ".", "format", "(", "args", ".", "trained", ")", ")", "\n", "", "for", "param", "in", "source_cnn", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "# train target CNN", "\n", "", "target_cnn", "=", "CNN", "(", "in_channels", "=", "args", ".", "in_channels", ",", "target", "=", "True", ",", "srcTrain", "=", "False", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "target_cnn", ".", "load_state_dict", "(", "source_cnn", ".", "state_dict", "(", ")", ")", "\n", "for", "param", "in", "target_cnn", ".", "classifier", ".", "parameters", "(", ")", ":", "\n", "        ", "param", ".", "requires_grad", "=", "False", "\n", "", "optimizer", "=", "optim", ".", "Adam", "(", "\n", "target_cnn", ".", "encoder", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "args", ".", "lr", ",", "betas", "=", "args", ".", "betas", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "discriminator", "=", "Discriminator", "(", "args", "=", "args", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "d_optimizer", "=", "optim", ".", "Adam", "(", "\n", "discriminator", ".", "parameters", "(", ")", ",", "\n", "lr", "=", "args", ".", "d_lr", ",", "betas", "=", "args", ".", "betas", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "best_acc", ",", "best_class", ",", "classNames", "=", "train_target_cnnP_domain", "(", "\n", "source_cnn", ",", "target_cnn", ",", "discriminator", ",", "\n", "criterion", ",", "optimizer", ",", "d_optimizer", ",", "\n", "source_train_loader", ",", "target_conf_train_loader", ",", "target_val_loader", ",", "\n", "logger", ",", "args", "=", "args", ")", "\n", "bestClassWiseDict", "=", "{", "}", "\n", "for", "cls_idx", ",", "clss", "in", "enumerate", "(", "classNames", ")", ":", "\n", "        ", "bestClassWiseDict", "[", "clss", "]", "=", "best_class", "[", "cls_idx", "]", ".", "item", "(", ")", "\n", "", "logger", ".", "info", "(", "'Best acc.: {}'", ".", "format", "(", "best_acc", ")", ")", "\n", "logger", ".", "info", "(", "'Best acc. (Classwise):'", ")", "\n", "logger", ".", "info", "(", "bestClassWiseDict", ")", "\n", "\n", "return", "best_acc", ",", "bestClassWiseDict", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.train_target_cnnP_domain": [[11, 77], ["trainer.validate", "range", "time.time", "trainer.adversarial_domain", "trainer.validate", "logger.info", "utils.utils.save", "enumerate", "logger.info", "logger.info", "enumerate", "logger.info", "logger.info", "logger.info", "target_cnn.state_dict", "optimizer.state_dict", "logger.info", "[].item", "time.time"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.validate", "home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.adversarial_domain", "home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.validate", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save"], ["def", "train_target_cnnP_domain", "(", "\n", "source_cnn", ",", "\n", "target_cnn", ",", "\n", "discriminator", ",", "\n", "criterion", ",", "\n", "optimizer", ",", "\n", "d_optimizer", ",", "\n", "source_train_loader", ",", "\n", "target_train_loader", ",", "\n", "target_test_loader", ",", "\n", "logger", ",", "\n", "args", "=", "None", "\n", ")", ":", "\n", "    ", "validation", "=", "validate", "(", "source_cnn", ",", "target_test_loader", ",", "criterion", ",", "args", "=", "args", ")", "\n", "log_source", "=", "'Source/Acc {:.3f} '", ".", "format", "(", "validation", "[", "'avgAcc'", "]", ")", "\n", "\n", "try", ":", "\n", "        ", "best_score", "=", "None", "\n", "best_class_score", "=", "None", "\n", "for", "epoch_i", "in", "range", "(", "1", ",", "1", "+", "args", ".", "epochs", ")", ":", "\n", "            ", "start_time", "=", "time", "(", ")", "\n", "training", "=", "adversarial_domain", "(", "\n", "source_cnn", ",", "target_cnn", ",", "discriminator", ",", "\n", "source_train_loader", ",", "target_train_loader", ",", "target_test_loader", ",", "\n", "criterion", ",", "criterion", ",", "\n", "optimizer", ",", "d_optimizer", ",", "best_score", ",", "best_class_score", ",", "epoch_i", ",", "logger", ",", "args", "=", "args", "\n", ")", "\n", "best_score", "=", "training", "[", "'best_score'", "]", "\n", "best_class_score", "=", "training", "[", "'best_class_score'", "]", "\n", "n_iters", "=", "training", "[", "'n_iters'", "]", "\n", "validation", "=", "validate", "(", "\n", "target_cnn", ",", "target_test_loader", ",", "criterion", ",", "args", "=", "args", ")", "\n", "clsNames", "=", "validation", "[", "'classNames'", "]", "\n", "log", "=", "'Epoch {}/{} '", ".", "format", "(", "epoch_i", ",", "args", ".", "epochs", ")", "\n", "log", "+=", "'D/Loss {:.3f} Target/Loss {:.3f} '", ".", "format", "(", "\n", "training", "[", "'d/loss'", "]", ",", "training", "[", "'target/loss'", "]", ")", "\n", "log", "+=", "'[Val] Target/Loss {:.3f} Target/Acc {:.3f} '", ".", "format", "(", "\n", "validation", "[", "'loss'", "]", ",", "validation", "[", "'acc'", "]", ")", "\n", "log", "+=", "log_source", "\n", "log", "+=", "'Time {:.2f}s'", ".", "format", "(", "time", "(", ")", "-", "start_time", ")", "\n", "logger", ".", "info", "(", "log", ")", "\n", "\n", "# save", "\n", "is_best", "=", "(", "best_score", "is", "None", "or", "validation", "[", "'avgAcc'", "]", ">", "best_score", ")", "\n", "best_score", "=", "validation", "[", "'avgAcc'", "]", "if", "is_best", "else", "best_score", "\n", "best_class_score", "=", "validation", "[", "'classAcc'", "]", "if", "is_best", "else", "best_class_score", "\n", "state_dict", "=", "{", "\n", "'model'", ":", "target_cnn", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch_i", ",", "\n", "'val/acc'", ":", "best_score", ",", "\n", "}", "\n", "save", "(", "args", ".", "logdir", ",", "state_dict", ",", "is_best", ")", "\n", "for", "cls_idx", ",", "clss", "in", "enumerate", "(", "clsNames", ")", ":", "\n", "                ", "logger", ".", "info", "(", "'{}: {}'", ".", "format", "(", "clss", ",", "validation", "[", "'classAcc'", "]", "[", "cls_idx", "]", ")", ")", "\n", "", "logger", ".", "info", "(", "'Current val. acc.: {}'", ".", "format", "(", "validation", "[", "'avgAcc'", "]", ")", ")", "\n", "logger", ".", "info", "(", "'Best val. acc.: {}'", ".", "format", "(", "best_score", ")", ")", "\n", "classWiseDict", "=", "{", "}", "\n", "for", "cls_idx", ",", "clss", "in", "enumerate", "(", "clsNames", ")", ":", "\n", "                ", "classWiseDict", "[", "clss", "]", "=", "validation", "[", "'classAcc'", "]", "[", "cls_idx", "]", ".", "item", "(", ")", "\n", "", "", "", "except", "KeyboardInterrupt", "as", "ke", ":", "\n", "        ", "logger", ".", "info", "(", "'\\n============ Summary ============= \\n'", ")", "\n", "logger", ".", "info", "(", "'Classwise accuracies: {}'", ".", "format", "(", "best_class_score", ")", ")", "\n", "logger", ".", "info", "(", "'Best val. acc.: {}'", ".", "format", "(", "best_score", ")", ")", "\n", "\n", "", "return", "best_score", ",", "best_class_score", ",", "clsNames", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.adversarial_domain": [[79, 171], ["source_cnn.eval", "target_cnn.encoder.train", "discriminator.train", "min", "range", "utils.utils.AverageMeter", "utils.utils.AverageMeter", "len", "len", "iter", "iter", "source_iter.next", "target_iter.next", "source_data.to.to", "target_data.to.to", "target_target.to.to", "target_conf.to.to", "target_domain.to.to", "target_domain_conf.to.to", "source_data.to.size", "source_cnn.encoder", "target_cnn.encoder", "torch.tensor().to", "torch.tensor().to", "discriminator", "discriminator", "torch.cat", "torch.cat", "criterion", "d_optimizer.zero_grad", "criterion.backward", "d_optimizer.step", "d_losses.update", "target_cnn.encoder", "discriminator", "target_cnn.classifier", "criterion", "torch.cat", "criterion", "optimizer.zero_grad", "loss.backward", "optimizer.step", "losses.update", "range", "criterion.item", "validSource.nonzero", "validTarget.nonzero", "loss.item", "trainer.validate", "utils.utils.save", "logger.info", "enumerate", "logger.info", "logger.info", "enumerate", "source_cnn.eval", "target_cnn.encoder.train", "discriminator.train", "torch.tensor", "torch.tensor", "target_cnn.state_dict", "optimizer.state_dict", "logger.info", "[].item"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.step", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.step", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.AverageMeter.update", "home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.validate", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.save"], ["", "def", "adversarial_domain", "(", "\n", "source_cnn", ",", "target_cnn", ",", "discriminator", ",", "\n", "source_loader", ",", "target_loader", ",", "target_test_loader", ",", "\n", "criterion", ",", "d_criterion", ",", "\n", "optimizer", ",", "d_optimizer", ",", "best_score", ",", "best_class_score", ",", "epoch_i", ",", "logger", ",", "args", "=", "None", "\n", ")", ":", "\n", "    ", "source_cnn", ".", "eval", "(", ")", "\n", "target_cnn", ".", "encoder", ".", "train", "(", ")", "\n", "discriminator", ".", "train", "(", ")", "\n", "\n", "best_score", "=", "best_score", "\n", "best_class_score", "=", "best_class_score", "\n", "\n", "losses", ",", "d_losses", "=", "AverageMeter", "(", ")", ",", "AverageMeter", "(", ")", "\n", "n_iters", "=", "min", "(", "len", "(", "source_loader", ")", ",", "len", "(", "target_loader", ")", ")", "\n", "valSteps", "=", "n_iters", "//", "args", ".", "num_val", "\n", "valStepsList", "=", "[", "valSteps", "+", "(", "x", "*", "valSteps", ")", "for", "x", "in", "range", "(", "args", ".", "num_val", ")", "]", "\n", "vals", "=", "valStepsList", "[", ":", "-", "1", "]", "\n", "source_iter", ",", "target_iter", "=", "iter", "(", "source_loader", ")", ",", "iter", "(", "target_loader", ")", "\n", "for", "iter_i", "in", "range", "(", "n_iters", ")", ":", "\n", "        ", "source_data", ",", "source_target", "=", "source_iter", ".", "next", "(", ")", "\n", "target_data", ",", "target_target", ",", "target_conf", ",", "target_domain", ",", "target_domain_conf", "=", "target_iter", ".", "next", "(", ")", "\n", "source_data", "=", "source_data", ".", "to", "(", "args", ".", "device", ")", "\n", "target_data", "=", "target_data", ".", "to", "(", "args", ".", "device", ")", "\n", "target_target", "=", "target_target", ".", "to", "(", "args", ".", "device", ")", "\n", "target_conf", "=", "target_conf", ".", "to", "(", "args", ".", "device", ")", "\n", "target_domain", "=", "target_domain", ".", "to", "(", "args", ".", "device", ")", "\n", "target_domain_conf", "=", "target_domain_conf", ".", "to", "(", "args", ".", "device", ")", "\n", "bs", "=", "source_data", ".", "size", "(", "0", ")", "\n", "\n", "D_input_source", "=", "source_cnn", ".", "encoder", "(", "source_data", ")", "\n", "D_input_target", "=", "target_cnn", ".", "encoder", "(", "target_data", ")", "\n", "D_target_source", "=", "torch", ".", "tensor", "(", "\n", "[", "0", "]", "*", "bs", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "D_target_target", "=", "torch", ".", "tensor", "(", "\n", "[", "1", "]", "*", "bs", ",", "dtype", "=", "torch", ".", "long", ")", ".", "to", "(", "args", ".", "device", ")", "\n", "\n", "# train Discriminator", "\n", "D_output_source", "=", "discriminator", "(", "D_input_source", ")", "\n", "D_output_target", "=", "discriminator", "(", "D_input_target", ")", "\n", "D_output", "=", "torch", ".", "cat", "(", "[", "D_output_source", ",", "D_output_target", "]", ",", "dim", "=", "0", ")", "\n", "D_target", "=", "torch", ".", "cat", "(", "[", "D_target_source", ",", "D_target_target", "]", ",", "dim", "=", "0", ")", "\n", "d_loss", "=", "criterion", "(", "D_output", ",", "D_target", ")", "\n", "d_optimizer", ".", "zero_grad", "(", ")", "\n", "d_loss", ".", "backward", "(", ")", "\n", "d_optimizer", ".", "step", "(", ")", "\n", "d_losses", ".", "update", "(", "d_loss", ".", "item", "(", ")", ",", "bs", ")", "\n", "\n", "# train Target", "\n", "D_input_target", "=", "target_cnn", ".", "encoder", "(", "target_data", ")", "\n", "D_output_target", "=", "discriminator", "(", "D_input_target", ")", "\n", "D_output_target_P", "=", "target_cnn", ".", "classifier", "(", "D_input_target", ")", "\n", "lossT", "=", "criterion", "(", "D_output_target", ",", "D_target_source", ")", "\n", "validSource", "=", "(", "target_domain", "==", "0", ")", "&", "(", "target_conf", ">=", "args", ".", "thr", ")", "\n", "validMaskSource", "=", "validSource", ".", "nonzero", "(", "as_tuple", "=", "False", ")", "[", ":", ",", "0", "]", "\n", "validTarget", "=", "(", "target_domain", "==", "1", ")", "&", "(", "target_domain_conf", "<=", "args", ".", "thr_domain", ")", "&", "(", "target_conf", ">=", "args", ".", "thr", ")", "\n", "validMaskTarget", "=", "validTarget", ".", "nonzero", "(", "as_tuple", "=", "False", ")", "[", ":", ",", "0", "]", "\n", "validIndexes", "=", "torch", ".", "cat", "(", "(", "validMaskSource", ",", "validMaskTarget", ")", ",", "0", ")", "\n", "lossP", "=", "criterion", "(", "D_output_target_P", "[", "validIndexes", "]", ",", "target_target", "[", "validIndexes", "]", ")", "\n", "loss", "=", "lossT", "+", "args", ".", "lam", "*", "lossP", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "bs", ")", "\n", "if", "iter_i", "in", "vals", ":", "\n", "            ", "validation", "=", "validate", "(", "\n", "target_cnn", ",", "target_test_loader", ",", "\n", "criterion", ",", "args", "=", "args", ")", "\n", "clsNames", "=", "validation", "[", "'classNames'", "]", "\n", "is_best", "=", "(", "best_score", "is", "None", "or", "validation", "[", "'avgAcc'", "]", ">", "best_score", ")", "\n", "best_score", "=", "validation", "[", "'avgAcc'", "]", "if", "is_best", "else", "best_score", "\n", "best_class_score", "=", "validation", "[", "'classAcc'", "]", "if", "is_best", "else", "best_class_score", "\n", "state_dict", "=", "{", "\n", "'model'", ":", "target_cnn", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch_i", ",", "\n", "'val/acc'", ":", "best_score", ",", "\n", "}", "\n", "save", "(", "args", ".", "logdir", ",", "state_dict", ",", "is_best", ")", "\n", "logger", ".", "info", "(", "'Epoch_{} Iter_{}'", ".", "format", "(", "epoch_i", ",", "iter_i", ")", ")", "\n", "for", "cls_idx", ",", "clss", "in", "enumerate", "(", "clsNames", ")", ":", "\n", "                ", "logger", ".", "info", "(", "'{}: {}'", ".", "format", "(", "clss", ",", "validation", "[", "'classAcc'", "]", "[", "cls_idx", "]", ")", ")", "\n", "", "logger", ".", "info", "(", "'Current val. acc.: {}'", ".", "format", "(", "validation", "[", "'avgAcc'", "]", ")", ")", "\n", "logger", ".", "info", "(", "'Best val. acc.: {}'", ".", "format", "(", "best_score", ")", ")", "\n", "classWiseDict", "=", "{", "}", "\n", "for", "cls_idx", ",", "clss", "in", "enumerate", "(", "clsNames", ")", ":", "\n", "                ", "classWiseDict", "[", "clss", "]", "=", "validation", "[", "'classAcc'", "]", "[", "cls_idx", "]", ".", "item", "(", ")", "\n", "", "source_cnn", ".", "eval", "(", ")", "\n", "target_cnn", ".", "encoder", ".", "train", "(", ")", "\n", "discriminator", ".", "train", "(", ")", "\n", "\n", "", "", "return", "{", "'d/loss'", ":", "d_losses", ".", "avg", ",", "'target/loss'", ":", "losses", ".", "avg", ",", "'best_score'", ":", "best_score", ",", "'best_class_score'", ":", "best_class_score", ",", "'n_iters'", ":", "n_iters", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.step": [[173, 178], ["model", "criterion", "data.to", "target.to"], "function", ["None"], ["", "def", "step", "(", "model", ",", "data", ",", "target", ",", "criterion", ",", "args", ")", ":", "\n", "    ", "data", ",", "target", "=", "data", ".", "to", "(", "args", ".", "device", ")", ",", "target", ".", "to", "(", "args", ".", "device", ")", "\n", "output", "=", "model", "(", "data", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ")", "\n", "return", "output", ",", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.validate": [[180, 217], ["model.eval", "utils.utils.AverageMeter", "torch.zeros", "torch.zeros", "numpy.asarray", "numpy.argmax", "sklearn.metrics.accuracy_score", "range", "torch.unique", "len", "len", "torch.no_grad", "enumerate", "len", "len", "torch.tensor", "target.size", "trainer.step", "pred_cls.cpu().eq().cpu().sum", "enumerate", "torch.softmax", "utils.utils.AverageMeter.update", "targets.extend", "np.asarray.extend", "torch.softmax.data.max", "torch.nonzero", "pred_cls[].cpu().eq().cpu().sum", "len", "loss.item", "target.cpu().numpy().tolist", "torch.softmax.cpu().numpy().tolist", "pred_cls.cpu().eq().cpu", "class_id.to", "pred_cls[].cpu().eq().cpu", "target.cpu().numpy", "torch.softmax.cpu().numpy", "pred_cls.cpu().eq", "pred_cls[].cpu().eq", "target.cpu", "torch.softmax.cpu", "pred_cls.cpu", "pred_cls[].cpu"], "function", ["home.repos.pwc.inspect_result.avaapm_SGADA.core.trainer.step", "home.repos.pwc.inspect_result.avaapm_SGADA.utils.utils.AverageMeter.update"], ["", "def", "validate", "(", "model", ",", "dataloader", ",", "criterion", ",", "args", "=", "None", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "targets", ",", "probas", "=", "[", "]", ",", "[", "]", "\n", "if", "args", ".", "classInfo", "==", "None", ":", "\n", "        ", "classes", "=", "torch", ".", "unique", "(", "torch", ".", "tensor", "(", "dataloader", ".", "dataset", ".", "targets", ")", ")", "\n", "classNames", "=", "dataloader", ".", "dataset", ".", "classes", "\n", "", "else", ":", "\n", "        ", "classes", "=", "args", ".", "classInfo", "[", "'classes'", "]", "\n", "classNames", "=", "args", ".", "classInfo", "[", "'classNames'", "]", "\n", "", "class_acc", "=", "torch", ".", "zeros", "(", "len", "(", "classes", ")", ")", "\n", "class_len", "=", "torch", ".", "zeros", "(", "len", "(", "classes", ")", ")", "\n", "acc_ev", "=", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "iter_i", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "bs", "=", "target", ".", "size", "(", "0", ")", "\n", "output", ",", "loss", "=", "step", "(", "model", ",", "data", ",", "target", ",", "criterion", ",", "args", ")", "\n", "pred_cls", "=", "output", ".", "data", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "acc_ev", "+=", "pred_cls", ".", "cpu", "(", ")", ".", "eq", "(", "target", ".", "data", ")", ".", "cpu", "(", ")", ".", "sum", "(", ")", "\n", "for", "class_idx", ",", "class_id", "in", "enumerate", "(", "classes", ")", ":", "\n", "                ", "idxes", "=", "torch", ".", "nonzero", "(", "target", "==", "class_id", ".", "to", "(", "target", ".", "device", ")", ",", "as_tuple", "=", "False", ")", "\n", "class_acc", "[", "class_idx", "]", "+=", "pred_cls", "[", "idxes", "]", ".", "cpu", "(", ")", ".", "eq", "(", "target", "[", "idxes", "]", ".", "data", ")", ".", "cpu", "(", ")", ".", "sum", "(", ")", "\n", "class_len", "[", "class_idx", "]", "+=", "len", "(", "idxes", ")", "\n", "", "output", "=", "torch", ".", "softmax", "(", "output", ",", "dim", "=", "1", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "bs", ")", "\n", "targets", ".", "extend", "(", "target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "probas", ".", "extend", "(", "output", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "tolist", "(", ")", ")", "\n", "", "", "probas", "=", "np", ".", "asarray", "(", "probas", ")", "\n", "preds", "=", "np", ".", "argmax", "(", "probas", ",", "axis", "=", "1", ")", "\n", "acc", "=", "accuracy_score", "(", "targets", ",", "preds", ")", "\n", "class_acc", "/=", "class_len", "\n", "avgAcc", "=", "0.0", "\n", "for", "i", "in", "range", "(", "len", "(", "class_acc", ")", ")", ":", "\n", "        ", "avgAcc", "+=", "class_acc", "[", "i", "]", "\n", "", "avgAcc", "=", "avgAcc", "/", "len", "(", "class_acc", ")", "\n", "return", "{", "\n", "'loss'", ":", "losses", ".", "avg", ",", "'acc'", ":", "acc", ",", "'avgAcc'", ":", "avgAcc", ",", "'classAcc'", ":", "class_acc", ",", "'classNames'", ":", "classNames", ",", "\n", "}", ""]]}