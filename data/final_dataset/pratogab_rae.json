{"home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.__init__": [[6, 48], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "round", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.LayerNorm", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.LayerNorm", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.LayerNorm", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.LayerNorm", "torch.LayerNorm", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.pratogab_rae.None.dataset.Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "super", "(", "RAE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "timestep_encoding_size", "=", "(", "params", ".", "max_sequence_len", "+", "10", ")", "//", "3", "\n", "\n", "hidden_layer_size", "=", "params", ".", "embedding_size", "-", "(", "(", "params", ".", "embedding_size", "-", "params", ".", "input_size", ")", "//", "2", ")", "\n", "\n", "self", ".", "scale_embedding", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "params", ".", "input_size", ",", "hidden_layer_size", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_layer_size", ",", "params", ".", "embedding_size", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "self", ".", "descale_embedding", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "params", ".", "embedding_size", ",", "hidden_layer_size", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_layer_size", ",", "params", ".", "input_size", ")", "\n", ")", "\n", "\n", "hidden_layer_size", "=", "round", "(", "1.5", "*", "params", ".", "embedding_size", ")", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "2", "*", "params", ".", "embedding_size", "+", "self", ".", "timestep_encoding_size", ",", "hidden_layer_size", ")", ",", "\n", "nn", ".", "LayerNorm", "(", "hidden_layer_size", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_layer_size", ",", "params", ".", "embedding_size", ")", ",", "\n", "nn", ".", "LayerNorm", "(", "params", ".", "embedding_size", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "\n", "# Decoder is split into two parts because overlapping sets needs to be meaned before applying final LayerNorm and ReLU", "\n", "self", ".", "decoder_part1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "params", ".", "embedding_size", "+", "self", ".", "timestep_encoding_size", ",", "hidden_layer_size", ")", ",", "\n", "nn", ".", "LayerNorm", "(", "hidden_layer_size", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "hidden_layer_size", ",", "2", "*", "params", ".", "embedding_size", ")", "\n", ")", "\n", "self", ".", "decoder_part2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "LayerNorm", "(", "params", ".", "embedding_size", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.forward": [[50, 56], ["rae.RAE.scale_embedding", "rae.RAE.encode", "rae.RAE.decode", "rae.RAE.descale_embedding"], "methods", ["home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.encode", "home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.decode"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "scale_embedding", "(", "x", ")", "\n", "x", ",", "recursion_count", "=", "self", ".", "encode", "(", "x", ")", "\n", "x", "=", "self", ".", "decode", "(", "x", ",", "recursion_count", ")", "\n", "x", "=", "self", ".", "descale_embedding", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.encode": [[57, 64], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rae.RAE.get_timestep_encoding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rae.RAE.encoder"], "methods", ["home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.get_timestep_encoding"], ["", "def", "encode", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "recursion_count", "in", "range", "(", "1", ",", "x", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "x", "=", "torch", ".", "cat", "(", "(", "x", "[", ":", ",", ":", "-", "1", "]", ",", "x", "[", ":", ",", "1", ":", "]", ")", ",", "2", ")", "\n", "timestep_encoding", "=", "self", ".", "get_timestep_encoding", "(", "x", ",", "recursion_count", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "timestep_encoding", ")", ",", "dim", "=", "2", ")", "\n", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "", "return", "x", ",", "recursion_count", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.decode": [[65, 82], ["rae.RAE.get_timestep_encoding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rae.RAE.decoder_part1", "rae.RAE.view", "rae.RAE.decoder_part2", "range", "rae.RAE.get_timestep_encoding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rae.RAE.decoder_part1", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "rae.RAE.decoder_part2"], "methods", ["home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.get_timestep_encoding", "home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.get_timestep_encoding"], ["", "def", "decode", "(", "self", ",", "x", ",", "recursion_count", ")", ":", "\n", "        ", "timestep_encoding", "=", "self", ".", "get_timestep_encoding", "(", "x", ",", "recursion_count", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "timestep_encoding", ")", ",", "dim", "=", "2", ")", "\n", "x", "=", "self", ".", "decoder_part1", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "2", ",", "self", ".", "params", ".", "embedding_size", ")", "\n", "x", "=", "self", ".", "decoder_part2", "(", "x", ")", "\n", "\n", "for", "recursion_count", "in", "range", "(", "recursion_count", "-", "1", ",", "1", ",", "-", "1", ")", ":", "\n", "            ", "timestep_encoding", "=", "self", ".", "get_timestep_encoding", "(", "x", ",", "recursion_count", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "timestep_encoding", ")", ",", "dim", "=", "2", ")", "\n", "x", "=", "self", ".", "decoder_part1", "(", "x", ")", "\n", "\n", "overlap", "=", "torch", ".", "mul", "(", "x", "[", ":", ",", "0", ":", "-", "1", ",", "self", ".", "params", ".", "embedding_size", ":", "]", "+", "x", "[", ":", ",", "1", ":", ",", ":", "self", ".", "params", ".", "embedding_size", "]", ",", "0.5", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", "[", ":", ",", "0", ":", "1", ",", ":", "self", ".", "params", ".", "embedding_size", "]", ",", "overlap", ",", "x", "[", ":", ",", "-", "1", ":", ",", "self", ".", "params", ".", "embedding_size", ":", "]", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "self", ".", "decoder_part2", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.pratogab_rae.None.rae.RAE.get_timestep_encoding": [[83, 96], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "get_timestep_encoding", "(", "self", ",", "x", ",", "recursion_count", ")", ":", "\n", "        ", "encoding", "=", "torch", ".", "zeros", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "self", ".", "timestep_encoding_size", ")", ",", "device", "=", "self", ".", "params", ".", "device", ")", "\n", "encoding", "[", ":", ",", ":", ",", "0", "]", "=", "recursion_count", "\n", "if", "recursion_count", "==", "1", ":", "\n", "            ", "encoding", "[", ":", ",", ":", ",", "1", "]", "=", "1", "\n", "", "elif", "recursion_count", "==", "2", ":", "\n", "            ", "encoding", "[", ":", ",", ":", ",", "2", "]", "=", "1", "\n", "", "elif", "recursion_count", ">=", "3", "and", "recursion_count", "<=", "4", ":", "\n", "            ", "encoding", "[", ":", ",", ":", ",", "3", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "encoding", "[", ":", ",", ":", ",", "(", "(", "recursion_count", "+", "10", ")", "//", "3", ")", "-", "1", "]", "=", "1", "\n", "\n", "", "return", "encoding", "\n", "", "", ""]], "home.repos.pwc.inspect_result.pratogab_rae.None.train.train": [[9, 22], ["dataset.train_epoch", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "model", "optimizer.zero_grad", "torch.mse_loss", "F.mse_loss.backward", "optimizer.step", "batch.cuda.cuda", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "function", ["home.repos.pwc.inspect_result.pratogab_rae.None.dataset.Dataset.train_epoch"], ["def", "train", "(", "dataset", ",", "model", ",", "optimizer", ",", "params", ")", ":", "\n", "    ", "for", "batch", "in", "dataset", ".", "train_epoch", "(", ")", ":", "\n", "# expected batch of shape: (batch_size, sequence_length, input_embedding_size)", "\n", "        ", "batch", "=", "torch", ".", "from_numpy", "(", "batch", ")", ".", "float", "(", ")", "\n", "if", "params", ".", "cuda", ":", "\n", "            ", "batch", "=", "batch", ".", "cuda", "(", ")", "\n", "\n", "", "output", "=", "model", "(", "batch", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "F", ".", "mse_loss", "(", "output", ",", "batch", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pratogab_rae.None.train.test": [[23, 37], ["dataset.test_epoch", "print", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "model", "torch.mse_loss().item", "batch.cuda.cuda", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.mse_loss", "set_type.capitalize"], "function", ["home.repos.pwc.inspect_result.pratogab_rae.None.dataset.Dataset.test_epoch"], ["", "", "def", "test", "(", "set_type", ",", "dataset", ",", "model", ",", "params", ")", ":", "\n", "    ", "loss", "=", "0.", "\n", "batch_count", "=", "0", "\n", "for", "batch", "in", "dataset", ".", "test_epoch", "(", "set_type", ")", ":", "\n", "        ", "batch", "=", "torch", ".", "from_numpy", "(", "batch", ")", ".", "float", "(", ")", "\n", "if", "params", ".", "cuda", ":", "\n", "            ", "batch", "=", "batch", ".", "cuda", "(", ")", "\n", "\n", "", "output", "=", "model", "(", "batch", ")", "\n", "loss", "+=", "F", ".", "mse_loss", "(", "output", ",", "batch", ")", ".", "item", "(", ")", "\n", "\n", "batch_count", "+=", "1", "\n", "\n", "", "print", "(", "f'{set_type.capitalize()} loss: {loss / batch_count}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pratogab_rae.None.dataset.Dataset.__init__": [[7, 32], ["h5py.File", "dataset[].values", "dataset[].values", "dataset[].values", "h5py.File.close", "h5py.File.Dataset.reset"], "methods", ["home.repos.pwc.inspect_result.pratogab_rae.None.dataset.Dataset.reset"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "params", "=", "params", "\n", "dataset", "=", "h5py", ".", "File", "(", "params", ".", "dataset_path", ",", "'r'", ")", "\n", "self", ".", "embeddings", "=", "dataset", "[", "'embeddings'", "]", "[", ":", "]", "\n", "\n", "self", ".", "train", "=", "{", "}", "\n", "for", "d", "in", "dataset", "[", "'train'", "]", ".", "values", "(", ")", ":", "\n", "            ", "if", "d", ".", "shape", "[", "1", "]", ">", "params", ".", "max_sequence_len", "or", "d", ".", "shape", "[", "0", "]", "<", "params", ".", "batch_size", ":", "\n", "                ", "continue", "\n", "", "self", ".", "train", "[", "d", ".", "shape", "[", "1", "]", "]", "=", "d", "[", ":", "]", "\n", "\n", "", "self", ".", "validation", "=", "{", "}", "\n", "for", "d", "in", "dataset", "[", "'validation'", "]", ".", "values", "(", ")", ":", "\n", "            ", "if", "d", ".", "shape", "[", "1", "]", ">", "params", ".", "max_sequence_len", ":", "\n", "                ", "continue", "\n", "", "self", ".", "validation", "[", "d", ".", "shape", "[", "1", "]", "]", "=", "d", "[", ":", "]", "\n", "\n", "", "self", ".", "test", "=", "{", "}", "\n", "for", "d", "in", "dataset", "[", "'test'", "]", ".", "values", "(", ")", ":", "\n", "            ", "if", "d", ".", "shape", "[", "1", "]", ">", "params", ".", "max_sequence_len", ":", "\n", "                ", "continue", "\n", "", "self", ".", "test", "[", "d", ".", "shape", "[", "1", "]", "]", "=", "d", "[", ":", "]", "\n", "\n", "", "dataset", ".", "close", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pratogab_rae.None.dataset.Dataset.reset": [[33, 47], ["dataset.Dataset.train.items", "random.shuffle", "numpy.arange", "numpy.random.shuffle"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "indices_per_dataset", "=", "{", "}", "\n", "self", ".", "current_ids", "=", "{", "}", "\n", "self", ".", "dataset_iterations", "=", "[", "]", "\n", "for", "k", ",", "d", "in", "self", ".", "train", ".", "items", "(", ")", ":", "\n", "            ", "ids", "=", "np", ".", "arange", "(", "d", ".", "shape", "[", "0", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "ids", ")", "\n", "self", ".", "indices_per_dataset", "[", "k", "]", "=", "ids", "\n", "\n", "self", ".", "dataset_iterations", "+=", "[", "k", "]", "*", "(", "d", ".", "shape", "[", "0", "]", "//", "self", ".", "params", ".", "batch_size", ")", "\n", "\n", "self", ".", "current_ids", "[", "k", "]", "=", "0", "\n", "\n", "", "random", ".", "shuffle", "(", "self", ".", "dataset_iterations", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pratogab_rae.None.dataset.Dataset.train_epoch": [[48, 55], ["dataset.Dataset.reset", "len", "dataset.Dataset.dataset_iterations.pop"], "methods", ["home.repos.pwc.inspect_result.pratogab_rae.None.dataset.Dataset.reset"], ["", "def", "train_epoch", "(", "self", ")", ":", "\n", "        ", "while", "len", "(", "self", ".", "dataset_iterations", ")", "!=", "0", ":", "\n", "            ", "i", "=", "self", ".", "dataset_iterations", ".", "pop", "(", ")", "\n", "yield", "self", ".", "embeddings", "[", "self", ".", "train", "[", "i", "]", "[", "self", ".", "indices_per_dataset", "[", "i", "]", "[", "self", ".", "current_ids", "[", "i", "]", ":", "self", ".", "current_ids", "[", "i", "]", "+", "self", ".", "params", ".", "batch_size", "]", "]", "]", "\n", "self", ".", "current_ids", "[", "i", "]", "+=", "self", ".", "params", ".", "batch_size", "\n", "\n", "", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.pratogab_rae.None.dataset.Dataset.test_epoch": [[56, 61], ["eval", "eval.values", "range"], "methods", ["None"], ["", "def", "test_epoch", "(", "self", ",", "val_or_test", ")", ":", "\n", "        ", "_set", "=", "eval", "(", "f'self.{val_or_test}'", ")", "\n", "for", "d", "in", "_set", ".", "values", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "0", ",", "d", ".", "shape", "[", "0", "]", "-", "(", "d", ".", "shape", "[", "0", "]", "%", "self", ".", "params", ".", "batch_size", ")", ",", "self", ".", "params", ".", "batch_size", ")", ":", "\n", "                ", "yield", "self", ".", "embeddings", "[", "d", "[", "i", ":", "i", "+", "self", ".", "params", ".", "batch_size", "]", "]", "\n", "", "", "", "", ""]]}