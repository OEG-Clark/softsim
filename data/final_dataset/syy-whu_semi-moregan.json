{"home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.DetailedResidualBlock.__init__": [[13, 37], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", "DetailedResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "orginal_conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "deconv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "5", ",", "dilation", "=", "5", ")", "\n", ")", "\n", "self", ".", "deconv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "5", ",", "dilation", "=", "5", ")", "\n", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "5", ",", "dilation", "=", "5", ")", "\n", ")", "\n", "self", ".", "conv_c", "=", "nn", ".", "Conv2d", "(", "channels", "*", "3", ",", "channels", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "recon", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.DetailedResidualBlock.forward": [[38, 47], ["modules.DetailedResidualBlock.orginal_conv", "modules.DetailedResidualBlock.deconv1", "modules.DetailedResidualBlock.deconv2", "modules.DetailedResidualBlock.deconv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.DetailedResidualBlock.conv_c", "modules.DetailedResidualBlock.recon"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "orginal_conv", "(", "x", ")", "\n", "x1", "=", "self", ".", "deconv1", "(", "inputs", ")", "\n", "x2", "=", "self", ".", "deconv2", "(", "inputs", "+", "x1", ")", "\n", "x3", "=", "self", ".", "deconv3", "(", "inputs", "+", "x2", ")", "\n", "catout", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ")", ",", "1", ")", "\n", "out", "=", "self", ".", "conv_c", "(", "catout", ")", "\n", "out", "=", "self", ".", "recon", "(", "inputs", "+", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.conv2DBatchNormRelu.__init__": [[74, 88], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "n_filters", ",", "k_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "conv2DBatchNormRelu", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "conv_mod", "=", "nn", ".", "Conv2d", "(", "int", "(", "in_channels", ")", ",", "int", "(", "n_filters", ")", ",", "kernel_size", "=", "k_size", ",", "\n", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ",", "dilation", "=", "dilation", ")", "\n", "\n", "", "else", ":", "\n", "            ", "conv_mod", "=", "nn", ".", "Conv2d", "(", "int", "(", "in_channels", ")", ",", "int", "(", "n_filters", ")", ",", "kernel_size", "=", "k_size", ",", "\n", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ",", "dilation", "=", "1", ")", "\n", "\n", "", "self", ".", "cbr_unit", "=", "nn", ".", "Sequential", "(", "conv_mod", ",", "\n", "nn", ".", "BatchNorm2d", "(", "int", "(", "n_filters", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.conv2DBatchNormRelu.forward": [[89, 92], ["modules.conv2DBatchNormRelu.cbr_unit"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "outputs", "=", "self", ".", "cbr_unit", "(", "inputs", ")", "\n", "return", "outputs", "\n", "", "", "class", "PAPAModule", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.PAPAModule.__init__": [[94, 97], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "modules.PAPAModule._make_stage"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__", "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.PAPAModule._make_stage"], ["    ", "def", "__init__", "(", "self", ",", "sizes", "=", "(", "1", ",", "4", ",", "8", ",", "16", ")", ",", "dimension", "=", "2", ")", ":", "\n", "        ", "super", "(", "PAPAModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stages", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "_make_stage", "(", "size", ",", "dimension", ")", "for", "size", "in", "sizes", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.PAPAModule._make_stage": [[98, 107], ["torch.nn.AdaptiveAvgPool1d", "torch.nn.AdaptiveAvgPool1d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool3d", "torch.nn.AdaptiveAvgPool3d"], "methods", ["None"], ["", "def", "_make_stage", "(", "self", ",", "size", ",", "dimension", "=", "2", ")", ":", "\n", "#size = _pair(size)", "\n", "        ", "if", "dimension", "==", "1", ":", "\n", "            ", "prior", "=", "nn", ".", "AdaptiveAvgPool1d", "(", "output_size", "=", "size", ")", "\n", "", "elif", "dimension", "==", "2", ":", "\n", "            ", "prior", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "(", "size", ",", "size", ")", ")", "\n", "", "elif", "dimension", "==", "3", ":", "\n", "            ", "prior", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "output_size", "=", "(", "size", ",", "size", ",", "size", ")", ")", "\n", "", "return", "prior", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.PAPAModule.forward": [[108, 120], ["feats.size", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "priors.append", "stage().view", "stage().view", "stage", "stage"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ",", "atten", ")", ":", "\n", "        ", "n", ",", "c", ",", "_", ",", "_", "=", "feats", ".", "size", "(", ")", "\n", "priors", "=", "[", "]", "\n", "for", "indx", ",", "stage", "in", "enumerate", "(", "self", ".", "stages", ")", ":", "\n", "            ", "if", "atten", "is", "not", "None", ":", "\n", "                ", "prior", "=", "stage", "(", "feats", "*", "atten", "[", ":", ",", "indx", ":", "indx", "+", "1", ",", ":", ",", ":", "]", ")", ".", "view", "(", "n", ",", "c", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "prior", "=", "stage", "(", "feats", ")", ".", "view", "(", "n", ",", "c", ",", "-", "1", ")", "\n", "", "priors", ".", "append", "(", "prior", ")", "\n", "\n", "", "center", "=", "torch", ".", "cat", "(", "priors", ",", "-", "1", ")", "\n", "return", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.pyramidPooling.__init__": [[123, 133], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Conv2d", "torch.nn.Conv2d", "len", "modules.pyramidPooling.paths.append", "modules.conv2DBatchNormRelu", "int", "len"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "pool_sizes", ")", ":", "\n", "        ", "super", "(", "pyramidPooling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "paths", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pool_sizes", ")", ")", ":", "\n", "            ", "self", ".", "paths", ".", "append", "(", "conv2DBatchNormRelu", "(", "in_channels", ",", "int", "(", "in_channels", "/", "len", "(", "pool_sizes", ")", ")", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n", "", "self", ".", "path_module_list", "=", "nn", ".", "ModuleList", "(", "self", ".", "paths", ")", "\n", "self", ".", "pool_sizes", "=", "pool_sizes", "\n", "self", ".", "out", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", "*", "2", ",", "out_channels", "=", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.pyramidPooling.forward": [[135, 147], ["zip", "modules.pyramidPooling.out", "torch.avg_pool2d", "torch.avg_pool2d", "module", "torch.upsample", "torch.upsample", "output_slices.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output_slices", "=", "[", "x", "]", "\n", "h", ",", "w", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "\n", "for", "module", ",", "pool_size", "in", "zip", "(", "self", ".", "path_module_list", ",", "self", ".", "pool_sizes", ")", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "x", ",", "int", "(", "h", "/", "pool_size", ")", ",", "int", "(", "h", "/", "pool_size", ")", ",", "0", ")", "\n", "# out = nn.AdaptiveAvgPool2d(x, int(h / pool_size), int(h / pool_size), 0)", "\n", "out", "=", "module", "(", "out", ")", "\n", "out", "=", "F", ".", "upsample", "(", "out", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "output_slices", ".", "append", "(", "out", ")", "\n", "# final = torch.cat(output_slices, dim=1)", "\n", "", "return", "self", ".", "out", "(", "torch", ".", "cat", "(", "output_slices", ",", "dim", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.PDNM1.__init__": [[150, 167], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "modules.PDNM1.down.weight.data.fill_", "torch.nn.Conv2d", "torch.nn.Conv2d", "modules.pyramidPooling", "modules.pyramidPooling", "modules.pyramidPooling", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "PDNM1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "eps", "=", "1e-6", "\n", "self", ".", "sigma_pow2", "=", "100", "\n", "\n", "self", ".", "theta", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "int", "(", "in_channels", "/", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "phi", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "int", "(", "in_channels", "/", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "g", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "int", "(", "in_channels", "/", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "down", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "groups", "=", "in_channels", ",", "bias", "=", "False", ")", "\n", "self", ".", "down", ".", "weight", ".", "data", ".", "fill_", "(", "1.", "/", "16", ")", "\n", "\n", "self", ".", "z", "=", "nn", ".", "Conv2d", "(", "int", "(", "in_channels", "/", "2", ")", ",", "in_channels", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "pyramid_pooling_g", "=", "pyramidPooling", "(", "int", "(", "in_channels", "/", "2", ")", ",", "[", "8", ",", "4", ",", "2", ",", "1", "]", ")", "\n", "self", ".", "pyramid_pooling_the", "=", "pyramidPooling", "(", "int", "(", "in_channels", "/", "2", ")", ",", "[", "8", ",", "4", ",", "2", ",", "1", "]", ")", "\n", "self", ".", "pyramid_pooling_phi", "=", "pyramidPooling", "(", "int", "(", "in_channels", "/", "2", ")", ",", "[", "8", ",", "4", ",", "2", ",", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.PDNM1.forward": [[168, 187], ["x.size", "modules.PDNM1.down", "torch.max_pool2d", "torch.max_pool2d", "modules.PDNM1.pyramid_pooling_g().view().transpose", "modules.PDNM1.theta", "modules.PDNM1.pyramid_pooling_the().view().transpose", "torch.max_pool2d", "torch.max_pool2d", "modules.PDNM1.pyramid_pooling_phi().view", "torch.softmax", "torch.softmax", "torch.interpolate().view().transpose", "torch.interpolate().view().transpose", "torch.interpolate().view", "torch.interpolate().view", "torch.interpolate().view().transpose.expand", "torch.interpolate().view.expand", "torch.min", "torch.min", "torch.min", "torch.min", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.bmm().transpose().contiguous().view", "torch.bmm().transpose().contiguous().view", "torch.bmm().transpose().contiguous().view", "torch.bmm().transpose().contiguous().view", "modules.PDNM1.g", "modules.PDNM1.phi", "int", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "int", "int", "int", "torch.upsample", "torch.upsample", "modules.PDNM1.pyramid_pooling_g().view", "modules.PDNM1.pyramid_pooling_the().view", "modules.PDNM1.pyramid_pooling_phi", "torch.interpolate().view", "torch.interpolate().view", "torch.interpolate", "torch.interpolate", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "torch.bmm().transpose().contiguous", "torch.bmm().transpose().contiguous", "torch.bmm().transpose().contiguous", "torch.bmm().transpose().contiguous", "modules.PDNM1.z", "int", "int", "modules.PDNM1.pyramid_pooling_g", "modules.PDNM1.pyramid_pooling_the", "torch.interpolate", "torch.interpolate", "int", "int", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "x.size", "int", "int", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "depth_map", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "x_down", "=", "self", ".", "down", "(", "x", ")", "\n", "g", "=", "F", ".", "max_pool2d", "(", "self", ".", "g", "(", "x_down", ")", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "g", "=", "self", ".", "pyramid_pooling_g", "(", "g", ")", ".", "view", "(", "n", ",", "int", "(", "c", "/", "2", ")", ",", "-", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "theta", "=", "self", ".", "theta", "(", "x_down", ")", "\n", "theta", "=", "self", ".", "pyramid_pooling_the", "(", "theta", ")", ".", "view", "(", "n", ",", "int", "(", "c", "/", "2", ")", ",", "-", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "phi", "=", "F", ".", "max_pool2d", "(", "self", ".", "phi", "(", "x_down", ")", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "phi", "=", "self", ".", "pyramid_pooling_phi", "(", "phi", ")", ".", "view", "(", "n", ",", "int", "(", "c", "/", "2", ")", ",", "-", "1", ")", "\n", "Ra", "=", "F", ".", "softmax", "(", "torch", ".", "bmm", "(", "theta", ",", "phi", ")", ",", "2", ")", "\n", "depth1", "=", "F", ".", "interpolate", "(", "depth_map", ",", "size", "=", "[", "int", "(", "h", "/", "4", ")", ",", "int", "(", "w", "/", "4", ")", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "view", "(", "n", ",", "1", ",", "int", "(", "h", "/", "4", ")", "*", "int", "(", "w", "/", "4", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "depth2", "=", "F", ".", "interpolate", "(", "depth_map", ",", "size", "=", "[", "int", "(", "h", "/", "8", ")", ",", "int", "(", "w", "/", "8", ")", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "view", "(", "n", ",", "1", ",", "int", "(", "h", "/", "8", ")", "*", "int", "(", "w", "/", "8", ")", ")", "\n", "depth1_expand", "=", "depth1", ".", "expand", "(", "n", ",", "int", "(", "h", "/", "4", ")", "*", "int", "(", "w", "/", "4", ")", ",", "int", "(", "h", "/", "8", ")", "*", "int", "(", "w", "/", "8", ")", ")", "\n", "depth2_expand", "=", "depth2", ".", "expand", "(", "n", ",", "int", "(", "h", "/", "4", ")", "*", "int", "(", "w", "/", "4", ")", ",", "int", "(", "h", "/", "8", ")", "*", "int", "(", "w", "/", "8", ")", ")", "\n", "Rd", "=", "torch", ".", "min", "(", "depth1_expand", "/", "(", "depth2_expand", "+", "self", ".", "eps", ")", ",", "depth2_expand", "/", "(", "depth1_expand", "+", "self", ".", "eps", ")", ")", "\n", "Rd", "=", "F", ".", "softmax", "(", "Rd", ",", "2", ")", "\n", "S", "=", "F", ".", "softmax", "(", "Ra", "*", "Rd", ",", "2", ")", "\n", "y", "=", "torch", ".", "bmm", "(", "S", ",", "g", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "n", ",", "int", "(", "c", "/", "2", ")", ",", "int", "(", "h", "/", "4", ")", ",", "int", "(", "w", "/", "4", ")", ")", "\n", "return", "x", "+", "F", ".", "upsample", "(", "self", ".", "z", "(", "y", ")", ",", "size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.PDNM.__init__": [[189, 210], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "modules.PAPAModule", "modules.PAPAModule", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv2d", "torch.nn.Conv2d", "modules.PDNM.down.weight.data.fill_", "torch.nn.Conv2d", "torch.nn.Conv2d", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "PDNM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "eps", "=", "1e-6", "\n", "self", ".", "sigma_pow2", "=", "100", "\n", "\n", "self", ".", "theta", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "int", "(", "in_channels", "/", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "phi", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "int", "(", "in_channels", "/", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "g", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "int", "(", "in_channels", "/", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "attention", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "4", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "pyramid_pooling_phi", "=", "PAPAModule", "(", ")", "\n", "self", ".", "pyramid_pooling_g", "=", "PAPAModule", "(", ")", "\n", "self", ".", "depth_down1", "=", "nn", ".", "Conv1d", "(", "2048", ",", "337", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "depth_down2", "=", "nn", ".", "Conv1d", "(", "2048", ",", "337", ",", "kernel_size", "=", "1", ")", "\n", "\n", "\n", "\n", "self", ".", "down", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "groups", "=", "in_channels", ",", "bias", "=", "False", ")", "\n", "self", ".", "down", ".", "weight", ".", "data", ".", "fill_", "(", "1.", "/", "16", ")", "\n", "\n", "self", ".", "z", "=", "nn", ".", "Conv2d", "(", "int", "(", "in_channels", "/", "2", ")", ",", "in_channels", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.modules.PDNM.forward": [[212, 260], ["x.size", "torch.interpolate().view().transpose", "torch.interpolate().view().transpose", "torch.interpolate().view", "torch.interpolate().view", "modules.PDNM.depth_down1().transpose", "modules.PDNM.depth_down2().transpose", "torch.min", "torch.min", "torch.min", "torch.min", "torch.softmax", "torch.softmax", "modules.PDNM.down", "modules.PDNM.attention", "modules.PDNM.g", "modules.PDNM.pyramid_pooling_g().transpose", "modules.PDNM.phi", "modules.PDNM.pyramid_pooling_phi", "modules.PDNM.theta().view().transpose", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.bmm().transpose().contiguous().view", "torch.bmm().transpose().contiguous().view", "torch.bmm().transpose().contiguous().view", "torch.bmm().transpose().contiguous().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "int", "int", "int", "torch.upsample", "torch.upsample", "torch.interpolate().view", "torch.interpolate().view", "torch.interpolate", "torch.interpolate", "int", "int", "modules.PDNM.depth_down1", "modules.PDNM.depth_down2", "modules.PDNM.pyramid_pooling_g", "modules.PDNM.theta().view", "torch.bmm().transpose().contiguous", "torch.bmm().transpose().contiguous", "torch.bmm().transpose().contiguous", "torch.bmm().transpose().contiguous", "modules.PDNM.z", "torch.interpolate().view().transpose.expand().transpose", "torch.interpolate().view.expand().transpose", "int", "torch.interpolate", "torch.interpolate", "int", "int", "modules.PDNM.theta", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "x.size", "int", "int", "torch.interpolate().view().transpose.expand", "torch.interpolate().view.expand", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "depth_map", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "###depth", "\n", "depth1", "=", "F", ".", "interpolate", "(", "depth_map", ",", "size", "=", "[", "int", "(", "h", "/", "4", ")", ",", "int", "(", "w", "/", "4", ")", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "view", "(", "n", ",", "1", ",", "\n", "int", "(", "\n", "h", "/", "4", ")", "*", "int", "(", "\n", "w", "/", "4", ")", ")", ".", "transpose", "(", "\n", "1", ",", "2", ")", "\n", "depth2", "=", "F", ".", "interpolate", "(", "depth_map", ",", "size", "=", "[", "int", "(", "h", "/", "8", ")", ",", "int", "(", "w", "/", "8", ")", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "view", "(", "n", ",", "1", ",", "\n", "int", "(", "\n", "h", "/", "8", ")", "*", "int", "(", "\n", "w", "/", "8", ")", ")", "\n", "depth1_expand", "=", "self", ".", "depth_down1", "(", "depth1", ".", "expand", "(", "n", ",", "int", "(", "h", "/", "4", ")", "*", "int", "(", "w", "/", "4", ")", ",", "int", "(", "h", "/", "8", ")", "*", "int", "(", "w", "/", "8", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "depth2_expand", "=", "self", ".", "depth_down2", "(", "depth2", ".", "expand", "(", "n", ",", "int", "(", "h", "/", "4", ")", "*", "int", "(", "w", "/", "4", ")", ",", "int", "(", "h", "/", "8", ")", "*", "int", "(", "w", "/", "8", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "Rd", "=", "torch", ".", "min", "(", "depth1_expand", "/", "(", "depth2_expand", "+", "self", ".", "eps", ")", ",", "depth2_expand", "/", "(", "depth1_expand", "+", "self", ".", "eps", ")", ")", "\n", "Rd", "=", "F", ".", "softmax", "(", "Rd", ",", "2", ")", "\n", "###", "\n", "x_down", "=", "self", ".", "down", "(", "x", ")", "\n", "attention", "=", "self", ".", "attention", "(", "x_down", ")", "\n", "g", "=", "self", ".", "g", "(", "x_down", ")", "\n", "g", "=", "self", ".", "pyramid_pooling_g", "(", "g", ",", "attention", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "phi", "=", "self", ".", "phi", "(", "x_down", ")", "\n", "phi", "=", "self", ".", "pyramid_pooling_phi", "(", "phi", ",", "attention", ")", "\n", "theta", "=", "self", ".", "theta", "(", "x_down", ")", ".", "view", "(", "n", ",", "int", "(", "c", "/", "2", ")", ",", "-", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "Ra", "=", "F", ".", "softmax", "(", "torch", ".", "bmm", "(", "theta", ",", "phi", ")", ",", "2", ")", "\n", "S", "=", "F", ".", "softmax", "(", "Ra", "*", "Rd", ",", "2", ")", "\n", "y", "=", "torch", ".", "bmm", "(", "S", ",", "g", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "n", ",", "int", "(", "c", "/", "2", ")", ",", "int", "(", "h", "/", "4", ")", ",", "int", "(", "w", "/", "4", ")", ")", "\n", "\n", "\n", "# g = self.pyramid_pooling_g(g).view(n, int(c / 2), -1).transpose(1, 2)", "\n", "#", "\n", "# theta = self.theta(x_down)", "\n", "# theta = self.pyramid_pooling_the(theta).view(n, int(c / 2), -1).transpose(1, 2)", "\n", "#", "\n", "# phi = F.max_pool2d(self.phi(x_down), kernel_size=2, stride=2)", "\n", "# phi = self.pyramid_pooling_phi(phi).view(n, int(c / 2), -1)", "\n", "#", "\n", "#", "\n", "# Ra = F.softmax(torch.bmm(theta, phi), 2)", "\n", "# depth1 = F.interpolate(depth_map, size=[int(h / 4), int(w / 4)], mode='bilinear', align_corners = True).view(n, 1, int(h / 4)*int(w / 4)).transpose(1,2)", "\n", "# depth2 = F.interpolate(depth_map, size=[int(h / 8), int(w / 8)], mode='bilinear', align_corners = True).view(n, 1, int(h / 8)*int(w / 8))", "\n", "# depth1_expand = depth1.expand(n, int(h / 4) * int(w / 4), int(h / 8) * int(w / 8))", "\n", "# depth2_expand = depth2.expand(n, int(h / 4) * int(w / 4), int(h / 8) * int(w / 8))", "\n", "# Rd = torch.min(depth1_expand / (depth2_expand + self.eps), depth2_expand / (depth1_expand + self.eps))", "\n", "# Rd = F.softmax(Rd, 2)", "\n", "# S = F.softmax(Ra * Rd, 2)", "\n", "# y = torch.bmm(S, g).transpose(1, 2).contiguous().view(n, int(c / 2), int(h / 4), int(w / 4))", "\n", "return", "x", "+", "F", ".", "upsample", "(", "self", ".", "z", "(", "y", ")", ",", "size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.dataset3.ImageFolder.__init__": [[34, 39], ["dataset3.make_dataset"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.dataset3.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "triple_transform", "=", "None", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "is_supervised", "=", "True", ")", ":", "\n", "        ", "self", ".", "imgs", "=", "make_dataset", "(", "is_supervised", ")", "\n", "self", ".", "triple_transform", "=", "triple_transform", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.dataset3.ImageFolder.__getitem__": [[40, 57], ["PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "dataset3.ImageFolder.triple_transform", "dataset3.ImageFolder.transform", "dataset3.ImageFolder.transform", "dataset3.ImageFolder.target_transform", "dataset3.ImageFolder.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "img_path", ",", "gt_path", ",", "depth_path", ",", "real_path", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "Image", ".", "open", "(", "img_path", ")", "\n", "target", "=", "Image", ".", "open", "(", "gt_path", ")", "\n", "depth", "=", "Image", ".", "open", "(", "depth_path", ")", "\n", "real", "=", "Image", ".", "open", "(", "real_path", ")", "\n", "if", "self", ".", "triple_transform", "is", "not", "None", ":", "\n", "            ", "img", ",", "target", ",", "depth", ",", "real", "=", "self", ".", "triple_transform", "(", "img", ",", "target", ",", "depth", ",", "real", ")", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "real", "=", "self", ".", "transform", "(", "real", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "depth", "=", "self", ".", "target_transform", "(", "depth", ")", "\n", "\n", "\n", "", "return", "img", ",", "target", ",", "depth", ",", "real", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.dataset3.ImageFolder.__len__": [[58, 60], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.dataset3.make_dataset": [[8, 30], ["open", "open", "open", "open.close", "open.close", "open.close", "open.close", "open", "open", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "img_name.strip", "img_name.strip", "img_name.strip", "img_name.strip", "range", "len"], "function", ["None"], ["def", "make_dataset", "(", "is_supervised", ")", ":", "\n", "    ", "input", "=", "open", "(", "'./train_input.txt'", ")", "\n", "ground_t", "=", "open", "(", "'./train_gt.txt'", ")", "\n", "depth_t", "=", "open", "(", "'./train_depth.txt'", ")", "\n", "if", "is_supervised", ":", "\n", "        ", "real_t", "=", "open", "(", "'./train_input.txt'", ")", "\n", "", "else", ":", "\n", "        ", "real_t", "=", "open", "(", "'./train_real.txt'", ")", "\n", "", "image", "=", "[", "(", "os", ".", "path", ".", "join", "(", "img_name", ".", "strip", "(", "'\\n'", ")", ")", ")", "for", "img_name", "in", "\n", "input", "]", "\n", "gt", "=", "[", "(", "os", ".", "path", ".", "join", "(", "img_name", ".", "strip", "(", "'\\n'", ")", ")", ")", "for", "img_name", "in", "\n", "ground_t", "]", "\n", "depth", "=", "[", "(", "os", ".", "path", ".", "join", "(", "img_name", ".", "strip", "(", "'\\n'", ")", ")", ")", "for", "img_name", "in", "\n", "depth_t", "]", "\n", "real", "=", "[", "(", "os", ".", "path", ".", "join", "(", "img_name", ".", "strip", "(", "'\\n'", ")", ")", ")", "for", "img_name", "in", "\n", "real_t", "]", "\n", "\n", "input", ".", "close", "(", ")", "\n", "ground_t", ".", "close", "(", ")", "\n", "depth_t", ".", "close", "(", ")", "\n", "real_t", ".", "close", "(", ")", "\n", "return", "[", "[", "image", "[", "i", "]", ",", "gt", "[", "i", "]", ",", "depth", "[", "i", "]", ",", "real", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "image", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.ContextualBlock.__init__": [[9, 33], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ")", ":", "\n", "        ", "super", "(", "ContextualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "orginal_conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "deconv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "5", ",", "dilation", "=", "5", ")", "\n", ")", "\n", "self", ".", "deconv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "5", ",", "dilation", "=", "5", ")", "\n", ")", "\n", "self", ".", "deconv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "channels", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "padding", "=", "5", ",", "dilation", "=", "5", ")", "\n", ")", "\n", "self", ".", "conv_c", "=", "nn", ".", "Conv2d", "(", "channels", "*", "3", ",", "channels", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "recon", "=", "nn", ".", "Sequential", "(", "nn", ".", "ConvTranspose2d", "(", "channels", ",", "channels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "channels", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.ContextualBlock.forward": [[34, 43], ["network.ContextualBlock.orginal_conv", "network.ContextualBlock.deconv1", "network.ContextualBlock.deconv2", "network.ContextualBlock.deconv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.ContextualBlock.conv_c", "network.ContextualBlock.recon"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "inputs", "=", "self", ".", "orginal_conv", "(", "x", ")", "\n", "x1", "=", "self", ".", "deconv1", "(", "inputs", ")", "\n", "x2", "=", "self", ".", "deconv2", "(", "inputs", "+", "x1", ")", "\n", "x3", "=", "self", ".", "deconv3", "(", "inputs", "+", "x2", ")", "\n", "catout", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ")", ",", "1", ")", "\n", "out", "=", "self", ".", "conv_c", "(", "catout", ")", "\n", "out", "=", "self", ".", "recon", "(", "inputs", "+", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.conv2DBatchNormRelu.__init__": [[45, 59], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "n_filters", ",", "k_size", ",", "stride", ",", "padding", ",", "bias", "=", "True", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "conv2DBatchNormRelu", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "dilation", ">", "1", ":", "\n", "            ", "conv_mod", "=", "nn", ".", "Conv2d", "(", "int", "(", "in_channels", ")", ",", "int", "(", "n_filters", ")", ",", "kernel_size", "=", "k_size", ",", "\n", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ",", "dilation", "=", "dilation", ")", "\n", "\n", "", "else", ":", "\n", "            ", "conv_mod", "=", "nn", ".", "Conv2d", "(", "int", "(", "in_channels", ")", ",", "int", "(", "n_filters", ")", ",", "kernel_size", "=", "k_size", ",", "\n", "padding", "=", "padding", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ",", "dilation", "=", "1", ")", "\n", "\n", "", "self", ".", "cbr_unit", "=", "nn", ".", "Sequential", "(", "conv_mod", ",", "\n", "nn", ".", "BatchNorm2d", "(", "int", "(", "n_filters", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.conv2DBatchNormRelu.forward": [[60, 63], ["network.conv2DBatchNormRelu.cbr_unit"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "outputs", "=", "self", ".", "cbr_unit", "(", "inputs", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.PAPAModule.__init__": [[66, 69], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "network.PAPAModule._make_stage"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__", "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.PAPAModule._make_stage"], ["    ", "def", "__init__", "(", "self", ",", "sizes", "=", "(", "1", ",", "4", ",", "8", ",", "16", ")", ",", "dimension", "=", "2", ")", ":", "\n", "        ", "super", "(", "PAPAModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stages", "=", "nn", ".", "ModuleList", "(", "[", "self", ".", "_make_stage", "(", "size", ",", "dimension", ")", "for", "size", "in", "sizes", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.PAPAModule._make_stage": [[70, 79], ["torch.nn.AdaptiveAvgPool1d", "torch.nn.AdaptiveAvgPool1d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool2d", "torch.nn.AdaptiveAvgPool3d", "torch.nn.AdaptiveAvgPool3d"], "methods", ["None"], ["", "def", "_make_stage", "(", "self", ",", "size", ",", "dimension", "=", "2", ")", ":", "\n", "#size = _pair(size)", "\n", "        ", "if", "dimension", "==", "1", ":", "\n", "            ", "prior", "=", "nn", ".", "AdaptiveAvgPool1d", "(", "output_size", "=", "size", ")", "\n", "", "elif", "dimension", "==", "2", ":", "\n", "            ", "prior", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "output_size", "=", "(", "size", ",", "size", ")", ")", "\n", "", "elif", "dimension", "==", "3", ":", "\n", "            ", "prior", "=", "nn", ".", "AdaptiveAvgPool3d", "(", "output_size", "=", "(", "size", ",", "size", ",", "size", ")", ")", "\n", "", "return", "prior", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.PAPAModule.forward": [[80, 92], ["feats.size", "enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "priors.append", "stage().view", "stage().view", "stage", "stage"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ",", "atten", ")", ":", "\n", "        ", "n", ",", "c", ",", "_", ",", "_", "=", "feats", ".", "size", "(", ")", "\n", "priors", "=", "[", "]", "\n", "for", "indx", ",", "stage", "in", "enumerate", "(", "self", ".", "stages", ")", ":", "\n", "            ", "if", "atten", "is", "not", "None", ":", "\n", "                ", "prior", "=", "stage", "(", "feats", "*", "atten", "[", ":", ",", "indx", ":", "indx", "+", "1", ",", ":", ",", ":", "]", ")", ".", "view", "(", "n", ",", "c", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "prior", "=", "stage", "(", "feats", ")", ".", "view", "(", "n", ",", "c", ",", "-", "1", ")", "\n", "", "priors", ".", "append", "(", "prior", ")", "\n", "\n", "", "center", "=", "torch", ".", "cat", "(", "priors", ",", "-", "1", ")", "\n", "return", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.pyramidPooling.__init__": [[95, 105], ["torch.nn.Module.__init__", "range", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.Conv2d", "torch.nn.Conv2d", "len", "network.pyramidPooling.paths.append", "network.conv2DBatchNormRelu", "int", "len"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "pool_sizes", ")", ":", "\n", "        ", "super", "(", "pyramidPooling", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "paths", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pool_sizes", ")", ")", ":", "\n", "            ", "self", ".", "paths", ".", "append", "(", "conv2DBatchNormRelu", "(", "in_channels", ",", "int", "(", "in_channels", "/", "len", "(", "pool_sizes", ")", ")", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", "\n", "\n", "", "self", ".", "path_module_list", "=", "nn", ".", "ModuleList", "(", "self", ".", "paths", ")", "\n", "self", ".", "pool_sizes", "=", "pool_sizes", "\n", "self", ".", "out", "=", "nn", ".", "Conv2d", "(", "in_channels", "=", "in_channels", "*", "2", ",", "out_channels", "=", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.pyramidPooling.forward": [[107, 119], ["zip", "network.pyramidPooling.out", "torch.avg_pool2d", "torch.avg_pool2d", "module", "torch.upsample", "torch.upsample", "output_slices.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output_slices", "=", "[", "x", "]", "\n", "h", ",", "w", "=", "x", ".", "shape", "[", "2", ":", "]", "\n", "\n", "for", "module", ",", "pool_size", "in", "zip", "(", "self", ".", "path_module_list", ",", "self", ".", "pool_sizes", ")", ":", "\n", "            ", "out", "=", "F", ".", "avg_pool2d", "(", "x", ",", "int", "(", "h", "/", "pool_size", ")", ",", "int", "(", "h", "/", "pool_size", ")", ",", "0", ")", "\n", "# out = nn.AdaptiveAvgPool2d(x, int(h / pool_size), int(h / pool_size), 0)", "\n", "out", "=", "module", "(", "out", ")", "\n", "out", "=", "F", ".", "upsample", "(", "out", ",", "size", "=", "(", "h", ",", "w", ")", ",", "mode", "=", "'bilinear'", ")", "\n", "output_slices", ".", "append", "(", "out", ")", "\n", "# final = torch.cat(output_slices, dim=1)", "\n", "", "return", "self", ".", "out", "(", "torch", ".", "cat", "(", "output_slices", ",", "dim", "=", "1", ")", ")", "\n", "", "", "class", "PDNL", "(", "nn", ".", "Module", ")", ":", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.PDNL.__init__": [[120, 141], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "network.PAPAModule", "network.PAPAModule", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv2d", "torch.nn.Conv2d", "network.PDNL.down.weight.data.fill_", "torch.nn.Conv2d", "torch.nn.Conv2d", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", "PDNL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "eps", "=", "1e-6", "\n", "self", ".", "sigma_pow2", "=", "100", "\n", "\n", "self", ".", "theta", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "int", "(", "in_channels", "/", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "phi", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "int", "(", "in_channels", "/", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "g", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "int", "(", "in_channels", "/", "2", ")", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "attention", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "4", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "pyramid_pooling_phi", "=", "PAPAModule", "(", ")", "\n", "self", ".", "pyramid_pooling_g", "=", "PAPAModule", "(", ")", "\n", "self", ".", "depth_down1", "=", "nn", ".", "Conv1d", "(", "2048", ",", "337", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "depth_down2", "=", "nn", ".", "Conv1d", "(", "2048", ",", "337", ",", "kernel_size", "=", "1", ")", "\n", "\n", "\n", "\n", "self", ".", "down", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "4", ",", "stride", "=", "4", ",", "groups", "=", "in_channels", ",", "bias", "=", "False", ")", "\n", "self", ".", "down", ".", "weight", ".", "data", ".", "fill_", "(", "1.", "/", "16", ")", "\n", "\n", "self", ".", "z", "=", "nn", ".", "Conv2d", "(", "int", "(", "in_channels", "/", "2", ")", ",", "in_channels", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.PDNL.forward": [[143, 171], ["x.size", "torch.interpolate().view().transpose", "torch.interpolate().view().transpose", "torch.interpolate().view", "torch.interpolate().view", "network.PDNL.depth_down1().transpose", "network.PDNL.depth_down2().transpose", "torch.min", "torch.min", "torch.min", "torch.min", "torch.softmax", "torch.softmax", "network.PDNL.down", "network.PDNL.attention", "network.PDNL.g", "network.PDNL.pyramid_pooling_g().transpose", "network.PDNL.phi", "network.PDNL.pyramid_pooling_phi", "network.PDNL.theta().view().transpose", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.bmm().transpose().contiguous().view", "torch.bmm().transpose().contiguous().view", "torch.bmm().transpose().contiguous().view", "torch.bmm().transpose().contiguous().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "int", "int", "int", "torch.upsample", "torch.upsample", "torch.interpolate().view", "torch.interpolate().view", "torch.interpolate", "torch.interpolate", "int", "int", "network.PDNL.depth_down1", "network.PDNL.depth_down2", "network.PDNL.pyramid_pooling_g", "network.PDNL.theta().view", "torch.bmm().transpose().contiguous", "torch.bmm().transpose().contiguous", "torch.bmm().transpose().contiguous", "torch.bmm().transpose().contiguous", "network.PDNL.z", "torch.interpolate().view().transpose.expand().transpose", "torch.interpolate().view.expand().transpose", "int", "torch.interpolate", "torch.interpolate", "int", "int", "network.PDNL.theta", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "torch.bmm().transpose", "x.size", "int", "int", "torch.interpolate().view().transpose.expand", "torch.interpolate().view.expand", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "depth_map", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "###depth", "\n", "depth1", "=", "F", ".", "interpolate", "(", "depth_map", ",", "size", "=", "[", "int", "(", "h", "/", "4", ")", ",", "int", "(", "w", "/", "4", ")", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "view", "(", "n", ",", "1", ",", "\n", "int", "(", "\n", "h", "/", "4", ")", "*", "int", "(", "\n", "w", "/", "4", ")", ")", ".", "transpose", "(", "\n", "1", ",", "2", ")", "\n", "depth2", "=", "F", ".", "interpolate", "(", "depth_map", ",", "size", "=", "[", "int", "(", "h", "/", "8", ")", ",", "int", "(", "w", "/", "8", ")", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", ".", "view", "(", "n", ",", "1", ",", "\n", "int", "(", "\n", "h", "/", "8", ")", "*", "int", "(", "\n", "w", "/", "8", ")", ")", "\n", "depth1_expand", "=", "self", ".", "depth_down1", "(", "depth1", ".", "expand", "(", "n", ",", "int", "(", "h", "/", "4", ")", "*", "int", "(", "w", "/", "4", ")", ",", "int", "(", "h", "/", "8", ")", "*", "int", "(", "w", "/", "8", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "depth2_expand", "=", "self", ".", "depth_down2", "(", "depth2", ".", "expand", "(", "n", ",", "int", "(", "h", "/", "4", ")", "*", "int", "(", "w", "/", "4", ")", ",", "int", "(", "h", "/", "8", ")", "*", "int", "(", "w", "/", "8", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "Rd", "=", "torch", ".", "min", "(", "depth1_expand", "/", "(", "depth2_expand", "+", "self", ".", "eps", ")", ",", "depth2_expand", "/", "(", "depth1_expand", "+", "self", ".", "eps", ")", ")", "\n", "Rd", "=", "F", ".", "softmax", "(", "Rd", ",", "2", ")", "\n", "###", "\n", "x_down", "=", "self", ".", "down", "(", "x", ")", "\n", "attention", "=", "self", ".", "attention", "(", "x_down", ")", "\n", "g", "=", "self", ".", "g", "(", "x_down", ")", "\n", "g", "=", "self", ".", "pyramid_pooling_g", "(", "g", ",", "attention", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "phi", "=", "self", ".", "phi", "(", "x_down", ")", "\n", "phi", "=", "self", ".", "pyramid_pooling_phi", "(", "phi", ",", "attention", ")", "\n", "theta", "=", "self", ".", "theta", "(", "x_down", ")", ".", "view", "(", "n", ",", "int", "(", "c", "/", "2", ")", ",", "-", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", "\n", "Ra", "=", "F", ".", "softmax", "(", "torch", ".", "bmm", "(", "theta", ",", "phi", ")", ",", "2", ")", "\n", "S", "=", "F", ".", "softmax", "(", "Ra", "*", "Rd", ",", "2", ")", "\n", "y", "=", "torch", ".", "bmm", "(", "S", ",", "g", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "n", ",", "int", "(", "c", "/", "2", ")", ",", "int", "(", "h", "/", "4", ")", ",", "int", "(", "w", "/", "4", ")", ")", "\n", "return", "x", "+", "F", ".", "upsample", "(", "self", ".", "z", "(", "y", ")", ",", "size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.selfattention.__init__": [[173, 181], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Softmax", "torch.nn.Softmax", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "query", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "key", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "value", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "gamma", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "# gamma\u4e3a\u4e00\u4e2a\u8870\u51cf\u53c2\u6570\uff0c\u7531torch.zero\u751f\u6210\uff0cnn.Parameter\u7684\u4f5c\u7528\u662f\u5c06\u5176\u8f6c\u5316\u6210\u4e3a\u53ef\u4ee5\u8bad\u7ec3\u7684\u53c2\u6570.", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.selfattention.forward": [[182, 197], ["network.selfattention.query().view().permute", "network.selfattention.key().view", "network.selfattention.value().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "network.selfattention.softmax", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.view.view.view", "network.selfattention.permute", "network.selfattention.query().view", "network.selfattention.key", "network.selfattention.value", "network.selfattention.query"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "batch_size", ",", "channels", ",", "height", ",", "width", "=", "input", ".", "shape", "\n", "# input: B, C, H, W -> q: B, H * W, C // 8", "\n", "q", "=", "self", ".", "query", "(", "input", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "height", "*", "width", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "# input: B, C, H, W -> k: B, C // 8, H * W", "\n", "k", "=", "self", ".", "key", "(", "input", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "height", "*", "width", ")", "\n", "# input: B, C, H, W -> v: B, C, H * W", "\n", "v", "=", "self", ".", "value", "(", "input", ")", ".", "view", "(", "batch_size", ",", "-", "1", ",", "height", "*", "width", ")", "\n", "# q: B, H * W, C // 8 x k: B, C // 8, H * W -> attn_matrix: B, H * W, H * W", "\n", "attn_matrix", "=", "torch", ".", "bmm", "(", "q", ",", "k", ")", "# torch.bmm\u8fdb\u884ctensor\u77e9\u9635\u4e58\u6cd5,q\u4e0ek\u76f8\u4e58\u5f97\u5230\u7684\u503c\u4e3aattn_matrix.", "\n", "attn_matrix", "=", "self", ".", "softmax", "(", "attn_matrix", ")", "# \u7ecf\u8fc7\u4e00\u4e2asoftmax\u8fdb\u884c\u7f29\u653e\u6743\u91cd\u5927\u5c0f.", "\n", "out", "=", "torch", ".", "bmm", "(", "v", ",", "attn_matrix", ".", "permute", "(", "0", ",", "2", ",", "1", ")", ")", "# tensor.permute\u5c06\u77e9\u9635\u7684\u6307\u5b9a\u7ef4\u8fdb\u884c\u6362\u4f4d.\u8fd9\u91cc\u5c061\u4e8e2\u8fdb\u884c\u6362\u4f4d\u3002", "\n", "out", "=", "out", ".", "view", "(", "*", "input", ".", "shape", ")", "\n", "\n", "return", "self", ".", "gamma", "*", "out", "+", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.GenerativeNetwork.__init__": [[199, 282], ["torch.nn.Module.__init__", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "network.PDNL", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "network.selfattention", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "network.ContextualBlock", "network.ContextualBlock", "network.ContextualBlock", "network.ContextualBlock", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", "=", "64", ")", ":", "\n", "        ", "super", "(", "GenerativeNetwork", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mean", "=", "torch", ".", "zeros", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "std", "=", "torch", ".", "zeros", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "mean", "[", "0", ",", "0", ",", "0", ",", "0", "]", "=", "0.485", "\n", "self", ".", "mean", "[", "0", ",", "1", ",", "0", ",", "0", "]", "=", "0.456", "\n", "self", ".", "mean", "[", "0", ",", "2", ",", "0", ",", "0", "]", "=", "0.406", "\n", "self", ".", "std", "[", "0", ",", "0", ",", "0", ",", "0", "]", "=", "0.229", "\n", "self", ".", "std", "[", "0", ",", "1", ",", "0", ",", "0", "]", "=", "0.224", "\n", "self", ".", "std", "[", "0", ",", "2", ",", "0", ",", "0", "]", "=", "0.225", "\n", "\n", "self", ".", "mean", "=", "nn", ".", "Parameter", "(", "self", ".", "mean", ")", "\n", "self", ".", "std", "=", "nn", ".", "Parameter", "(", "self", ".", "std", ")", "\n", "self", ".", "mean", ".", "requires_grad", "=", "False", "\n", "self", ".", "std", ".", "requires_grad", "=", "False", "\n", "####depth-attention prediction network", "\n", "self", ".", "upv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "upv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "upv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "\n", "self", ".", "upv4", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "self_attention", "=", "nn", ".", "Sequential", "(", "\n", "selfattention", "(", "256", ")", "\n", ")", "\n", "self", ".", "downv1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "256", ",", "128", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "downv2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "128", ",", "64", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "downv3", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "64", ",", "32", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "depth_pred", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ConvTranspose2d", "(", "32", ",", "32", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "1", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "####depth-attention prediction network", "\n", "####Detail recovery autoencoder", "\n", "self", ".", "autoencoder_head", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "num_features", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", ")", "\n", "self", ".", "autoencoder_body", "=", "nn", ".", "Sequential", "(", "\n", "ContextualBlock", "(", "num_features", ")", ",", "\n", "ContextualBlock", "(", "num_features", ")", ",", "\n", "ContextualBlock", "(", "num_features", ")", ",", "\n", "ContextualBlock", "(", "num_features", ")", "\n", ")", "\n", "\n", "####Detail recovery autoencoder", "\n", "self", ".", "dgnlb", "=", "PDNL", "(", "num_features", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "\n", "# nn.Conv2d(num_features, num_features, kernel_size=3, padding=1), nn.ReLU(),", "\n", "nn", ".", "ConvTranspose2d", "(", "num_features", ",", "32", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "3", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.GenerativeNetwork.forward": [[284, 310], ["network.GenerativeNetwork.upv1", "network.GenerativeNetwork.upv2", "network.GenerativeNetwork.upv3", "network.GenerativeNetwork.upv4", "network.GenerativeNetwork.self_attention", "network.GenerativeNetwork.downv1", "network.GenerativeNetwork.downv2", "network.GenerativeNetwork.downv3", "network.GenerativeNetwork.depth_pred", "network.GenerativeNetwork.autoencoder_head", "network.GenerativeNetwork.autoencoder_body", "network.GenerativeNetwork.dgnlb", "network.GenerativeNetwork.tail", "network.GenerativeNetwork.detach"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "(", "x", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "\n", "################################## depth prediction", "\n", "d_f1", "=", "self", ".", "upv1", "(", "x", ")", "\n", "d_f2", "=", "self", ".", "upv2", "(", "d_f1", ")", "\n", "d_f3", "=", "self", ".", "upv3", "(", "d_f2", ")", "\n", "d_f4", "=", "self", ".", "upv4", "(", "d_f3", ")", "\n", "d_f5", "=", "self", ".", "self_attention", "(", "d_f4", ")", "\n", "d_f6", "=", "self", ".", "downv1", "(", "d_f5", ")", "\n", "d_f7", "=", "self", ".", "downv2", "(", "d_f6", "+", "d_f3", ")", "\n", "d_f8", "=", "self", ".", "downv3", "(", "d_f7", "+", "d_f2", ")", "\n", "depth_pred", "=", "self", ".", "depth_pred", "(", "d_f8", "+", "d_f1", ")", "\n", "################################## rain removal", "\n", "f", "=", "self", ".", "autoencoder_head", "(", "x", ")", "\n", "f", "=", "self", ".", "autoencoder_body", "(", "f", ")", "\n", "# f = self.U_net(f)", "\n", "f", "=", "self", ".", "dgnlb", "(", "f", ",", "depth_pred", ".", "detach", "(", ")", ")", "\n", "r", "=", "self", ".", "tail", "(", "f", ")", "\n", "x", "=", "x", "+", "r", "\n", "x", "=", "(", "x", "*", "self", ".", "std", "+", "self", ".", "mean", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "x", ",", "depth_pred", "\n", "# return x, depth_pred", "\n", "\n", "", "return", "x", ",", "depth_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.Discriminator.__init__": [[313, 336], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.InstanceNorm2d", "torch.nn.InstanceNorm2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.InstanceNorm2d", "torch.nn.InstanceNorm2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.InstanceNorm2d", "torch.nn.InstanceNorm2d", "torch.nn.LeakyReLU", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_nc", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# 4*Conv layers coupled with leaky-relu & instance norm.", "\n", "model", "=", "[", "nn", ".", "Conv2d", "(", "input_nc", ",", "64", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "]", "\n", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "]", "\n", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "]", "\n", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "4", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "InstanceNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "]", "\n", "\n", "# FCN classification layer", "\n", "model", "+=", "[", "nn", ".", "Conv2d", "(", "512", ",", "1", ",", "4", ",", "padding", "=", "1", ")", "]", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", "*", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.network.Discriminator.forward": [[337, 341], ["network.Discriminator.model", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "torch.avg_pool2d", "torch.avg_pool2d", "network.Discriminator.size", "network.Discriminator.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "model", "(", "x", ")", "\n", "# Average pooling and flatten", "\n", "return", "F", ".", "avg_pool2d", "(", "x", ",", "x", ".", "size", "(", ")", "[", "2", ":", "]", ")", ".", "view", "(", "x", ".", "size", "(", ")", "[", "0", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.infer.main": [[33, 76], ["network.GenerativeNetwork().cuda", "GenerativeNetwork().cuda.eval", "len", "print", "GenerativeNetwork().cuda.load_state_dict", "torch.no_grad", "enumerate", "network.GenerativeNetwork", "torch.load", "misc.check_mkdir", "PIL.Image.open().convert", "torch.autograd.Variable().cuda", "time.time", "GenerativeNetwork().cuda.", "torch.cuda.synchronize", "print", "result.save", "os.path.join", "os.listdir", "os.path.join", "len", "misc.check_mkdir", "torchvision.transforms.Resize", "to_pil", "os.path.join", "os.path.join", "PIL.Image.open", "torch.autograd.Variable", "time.time", "dps.data.squeeze().cpu", "storage.cuda", "os.path.join", "transform().unsqueeze", "len", "dps.data.squeeze", "transform"], "function", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.check_mkdir", "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.check_mkdir"], ["def", "main", "(", ")", ":", "\n", "    ", "net", "=", "GenerativeNetwork", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "if", "len", "(", "args", "[", "'snapshot'", "]", ")", ">", "0", ":", "\n", "        ", "print", "(", "'load snapshot \\'%s\\' for testing'", "%", "args", "[", "'snapshot'", "]", ")", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ckpt_path", ",", "exp_name", ",", "args", "[", "'snapshot'", "]", "+", "'.pth'", ")", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ".", "cuda", "(", "0", ")", ")", ")", "\n", "\n", "", "net", ".", "eval", "(", ")", "\n", "avg_time", "=", "0", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "        ", "img_list", "=", "[", "img_name", "for", "img_name", "in", "os", ".", "listdir", "(", "root", ")", "]", "\n", "\n", "for", "idx", ",", "img_name", "in", "enumerate", "(", "img_list", ")", ":", "\n", "            ", "check_mkdir", "(", "\n", "os", ".", "path", ".", "join", "(", "ckpt_path", ",", "exp_name", ",", "'(%s) prediction_%s'", "%", "(", "exp_name", ",", "args", "[", "'snapshot'", "]", ")", ")", ")", "\n", "if", "len", "(", "args", "[", "'depth_snapshot'", "]", ")", ">", "0", ":", "\n", "                ", "check_mkdir", "(", "\n", "os", ".", "path", ".", "join", "(", "ckpt_path", ",", "exp_name", ",", "'(%s) prediction_%s'", "%", "(", "exp_name", ",", "args", "[", "'depth_snapshot'", "]", ")", ")", ")", "\n", "\n", "", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "root", ",", "img_name", ")", ")", ".", "convert", "(", "'RGB'", ")", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "img_var", "=", "Variable", "(", "transform", "(", "img", ")", ".", "unsqueeze", "(", "0", ")", ")", ".", "cuda", "(", ")", "\n", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "res", ",", "dps", "=", "net", "(", "img_var", ")", "\n", "# res = net(img_var)", "\n", "\n", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "\n", "avg_time", "=", "avg_time", "+", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n", "print", "(", "'predicting: %d / %d, avg_time: %.5f'", "%", "(", "idx", "+", "1", ",", "len", "(", "img_list", ")", ",", "avg_time", "/", "(", "idx", "+", "1", ")", ")", ")", "\n", "\n", "result", "=", "transforms", ".", "Resize", "(", "(", "h", ",", "w", ")", ")", "(", "to_pil", "(", "dps", ".", "data", ".", "squeeze", "(", "0", ")", ".", "cpu", "(", ")", ")", ")", "\n", "\n", "\n", "result", ".", "save", "(", "\n", "os", ".", "path", ".", "join", "(", "ckpt_path", ",", "exp_name", ",", "'(%s) prediction_%s'", "%", "(", "\n", "exp_name", ",", "args", "[", "'snapshot'", "]", ")", ",", "img_name", ")", ")", "\n", "", "", "", "if", "__name__", "==", "'__main__'", ":", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.AvgMeter.__init__": [[9, 11], ["misc.AvgMeter.reset"], "methods", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.AvgMeter.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.AvgMeter.reset": [[12, 17], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.AvgMeter.update": [[18, 23], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.ReplayBuffer.__init__": [[31, 35], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "max_size", "=", "50", ")", ":", "\n", "        ", "assert", "(", "max_size", ">", "0", ")", ",", "'Empty buffer or trying to create a black hole. Be careful.'", "\n", "self", ".", "max_size", "=", "max_size", "\n", "self", ".", "data", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.ReplayBuffer.push_and_pop": [[36, 51], ["torch.autograd.Variable", "torch.unsqueeze", "torch.cat", "len", "misc.ReplayBuffer.data.append", "to_return.append", "random.uniform", "random.randint", "to_return.append", "to_return.append", "misc.ReplayBuffer.data[].clone"], "methods", ["None"], ["", "def", "push_and_pop", "(", "self", ",", "data", ")", ":", "\n", "        ", "to_return", "=", "[", "]", "\n", "for", "element", "in", "data", ".", "data", ":", "\n", "            ", "element", "=", "torch", ".", "unsqueeze", "(", "element", ",", "0", ")", "\n", "if", "len", "(", "self", ".", "data", ")", "<", "self", ".", "max_size", ":", "\n", "                ", "self", ".", "data", ".", "append", "(", "element", ")", "\n", "to_return", ".", "append", "(", "element", ")", "\n", "", "else", ":", "\n", "                ", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", ">", "0.5", ":", "\n", "                    ", "i", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "max_size", "-", "1", ")", "\n", "to_return", ".", "append", "(", "self", ".", "data", "[", "i", "]", ".", "clone", "(", ")", ")", "\n", "self", ".", "data", "[", "i", "]", "=", "element", "\n", "", "else", ":", "\n", "                    ", "to_return", ".", "append", "(", "element", ")", "\n", "", "", "", "return", "Variable", "(", "torch", ".", "cat", "(", "to_return", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.check_mkdir": [[25, 28], ["os.path.exists", "os.mkdir"], "function", ["None"], ["", "", "def", "check_mkdir", "(", "dir_name", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "dir_name", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "dir_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.mse_loss": [[53, 55], ["torch.sum", "input.data.nelement"], "function", ["None"], ["", "", "def", "mse_loss", "(", "input", ",", "target", ")", ":", "\n", "    ", "return", "torch", ".", "sum", "(", "(", "input", "-", "target", ")", "**", "2", ")", "/", "input", ".", "data", ".", "nelement", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.weights_init_normal": [[57, 64], ["classname.find", "torch.nn.init.normal_", "classname.find", "torch.nn.init.normal_", "torch.nn.init.constant_"], "function", ["None"], ["", "def", "weights_init_normal", "(", "m", ")", ":", "\n", "    ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "0.0", ",", "0.02", ")", "\n", "", "elif", "classname", ".", "find", "(", "'BatchNorm2d'", ")", "!=", "-", "1", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "1.0", ",", "0.02", ")", "\n", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.Compose.__init__": [[6, 8], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.Compose.__call__": [[9, 16], ["t"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "mask", ",", "depth", ",", "real", ")", ":", "\n", "        ", "assert", "img", ".", "size", "==", "mask", ".", "size", "\n", "assert", "img", ".", "size", "==", "depth", ".", "size", "\n", "assert", "img", ".", "size", "==", "real", ".", "size", "\n", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "img", ",", "mask", ",", "depth", ",", "real", "=", "t", "(", "img", ",", "mask", ",", "depth", ",", "real", ")", "\n", "", "return", "img", ",", "mask", ",", "depth", ",", "real", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.Resize.__init__": [[18, 20], ["tuple", "reversed"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "self", ".", "size", "=", "tuple", "(", "reversed", "(", "size", ")", ")", "# size: (h, w)", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.Resize.__call__": [[21, 26], ["img.resize", "mask.resize", "depth.resize", "real.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "mask", ",", "depth", ",", "real", ")", ":", "\n", "        ", "assert", "img", ".", "size", "==", "mask", ".", "size", "\n", "assert", "img", ".", "size", "==", "depth", ".", "size", "\n", "assert", "img", ".", "size", "==", "real", ".", "size", "\n", "return", "img", ".", "resize", "(", "self", ".", "size", ",", "Image", ".", "BILINEAR", ")", ",", "mask", ".", "resize", "(", "self", ".", "size", ",", "Image", ".", "BILINEAR", ")", ",", "depth", ".", "resize", "(", "self", ".", "size", ",", "Image", ".", "BILINEAR", ")", ",", "real", ".", "resize", "(", "self", ".", "size", ",", "Image", ".", "BILINEAR", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__init__": [[29, 31], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomCrop.__call__": [[32, 41], ["random.randint", "random.randint", "img.crop", "mask.crop", "depth.crop", "real.crop"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "mask", ",", "depth", ",", "real", ")", ":", "\n", "        ", "assert", "img", ".", "size", "==", "mask", ".", "size", "\n", "assert", "img", ".", "size", "==", "depth", ".", "size", "\n", "assert", "img", ".", "size", "==", "real", ".", "size", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "\n", "x1", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "self", ".", "size", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "self", ".", "size", ")", "\n", "return", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "self", ".", "size", ",", "y1", "+", "self", ".", "size", ")", ")", ",", "mask", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "self", ".", "size", ",", "y1", "+", "self", ".", "size", ")", ")", ",", "depth", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "self", ".", "size", ",", "y1", "+", "self", ".", "size", ")", ")", ",", "real", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "self", ".", "size", ",", "y1", "+", "self", ".", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.triple_transforms.RandomHorizontallyFlip.__call__": [[44, 48], ["random.random", "img.transpose", "mask.transpose", "depth.transpose", "real.transpose"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "img", ",", "mask", ",", "depth", ",", "real", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "0.5", ":", "\n", "            ", "return", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", ",", "mask", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", ",", "depth", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", ",", "real", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "", "return", "img", ",", "mask", ",", "depth", ",", "real", "\n", "", "", ""]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.supervised_train.main": [[58, 77], ["network.GenerativeNetwork().cuda().train", "torch.optim.Adam", "misc.check_mkdir", "misc.check_mkdir", "open().write", "supervised_train.train", "len", "print", "GenerativeNetwork().cuda().train.load_state_dict", "optim.Adam.load_state_dict", "os.path.join", "network.GenerativeNetwork().cuda", "torch.load", "torch.load", "open", "str", "os.path.join", "os.path.join", "network.GenerativeNetwork", "GenerativeNetwork().cuda().train.named_parameters", "GenerativeNetwork().cuda().train.named_parameters"], "function", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.supervised_train.train", "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.check_mkdir", "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.check_mkdir", "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.supervised_train.train"], ["def", "main", "(", ")", ":", "\n", "    ", "gs_net", "=", "GenerativeNetwork", "(", ")", ".", "cuda", "(", ")", ".", "train", "(", ")", "\n", "GS_optimizer", "=", "optim", ".", "Adam", "(", "[", "\n", "{", "'params'", ":", "[", "param", "for", "name", ",", "param", "in", "gs_net", ".", "named_parameters", "(", ")", "if", "name", "[", "-", "4", ":", "]", "==", "'bias'", "and", "param", ".", "requires_grad", "]", ",", "\n", "'lr'", ":", "2", "*", "args", "[", "'lr'", "]", "}", ",", "\n", "{", "'params'", ":", "[", "param", "for", "name", ",", "param", "in", "gs_net", ".", "named_parameters", "(", ")", "if", "name", "[", "-", "4", ":", "]", "!=", "'bias'", "and", "param", ".", "requires_grad", "]", ",", "\n", "'lr'", ":", "args", "[", "'lr'", "]", ",", "'weight_decay'", ":", "args", "[", "'weight_decay'", "]", "}", "\n", "]", ")", "\n", "if", "len", "(", "args", "[", "'resume_snapshot'", "]", ")", ">", "0", ":", "\n", "        ", "print", "(", "'training resumes from \\'%s\\''", "%", "args", "[", "'resume_snapshot'", "]", ")", "\n", "gs_net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ckpt_path", ",", "exp_name", ",", "args", "[", "'resume_snapshot'", "]", "+", "'.pth'", ")", ")", ")", "\n", "GS_optimizer", ".", "load_state_dict", "(", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ckpt_path", ",", "exp_name", ",", "args", "[", "'resume_snapshot'", "]", "+", "'_optim.pth'", ")", ")", ")", "\n", "GS_optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "2", "*", "args", "[", "'lr'", "]", "\n", "GS_optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", "=", "args", "[", "'lr'", "]", "\n", "\n", "", "check_mkdir", "(", "ckpt_path", ")", "\n", "check_mkdir", "(", "os", ".", "path", ".", "join", "(", "ckpt_path", ",", "exp_name", ")", ")", "\n", "open", "(", "log_path", ",", "'w'", ")", ".", "write", "(", "str", "(", "args", ")", "+", "'\\n\\n'", ")", "\n", "train", "(", "gs_net", ",", "GS_optimizer", ")", "\n", "", "def", "train", "(", "gs_net", ",", "GS_optimizer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.supervised_train.train": [[77, 119], ["misc.AvgMeter", "misc.AvgMeter", "misc.AvgMeter", "enumerate", "Variable().cuda.size", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "GS_optimizer.zero_grad", "gs_net", "torch.nn.L1Loss", "nn.L1Loss.", "nn.L1Loss.", "loss.backward", "GS_optimizer.step", "misc.AvgMeter.update", "misc.AvgMeter.update", "misc.AvgMeter.update", "print", "open().write", "torch.save", "torch.save", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "open", "gs_net.state_dict", "os.path.join", "GS_optimizer.state_dict", "os.path.join", "float", "float"], "function", ["home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.AvgMeter.update", "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.AvgMeter.update", "home.repos.pwc.inspect_result.syy-whu_semi-moregan.None.misc.AvgMeter.update"], ["", "def", "train", "(", "gs_net", ",", "GS_optimizer", ")", ":", "\n", "    ", "curr_iter", "=", "args", "[", "'last_iter'", "]", "\n", "while", "True", ":", "\n", "        ", "train_loss_record", "=", "AvgMeter", "(", ")", "\n", "train_L1loss_record", "=", "AvgMeter", "(", ")", "\n", "train_depth_loss_record", "=", "AvgMeter", "(", ")", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "GS_optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "=", "2", "*", "args", "[", "'lr'", "]", "*", "(", "1", "-", "float", "(", "curr_iter", ")", "/", "args", "[", "'iter_num'", "]", "\n", ")", "**", "args", "[", "'lr_decay'", "]", "\n", "GS_optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", "=", "args", "[", "'lr'", "]", "*", "(", "1", "-", "float", "(", "curr_iter", ")", "/", "args", "[", "'iter_num'", "]", "\n", ")", "**", "args", "[", "'lr_decay'", "]", "\n", "\n", "inputs", ",", "gts", ",", "dps", ",", "reals", "=", "data", "\n", "batch_size", "=", "inputs", ".", "size", "(", "0", ")", "\n", "inputs", "=", "Variable", "(", "inputs", ")", ".", "cuda", "(", ")", "\n", "gts", "=", "Variable", "(", "gts", ")", ".", "cuda", "(", ")", "\n", "dps", "=", "Variable", "(", "dps", ")", ".", "cuda", "(", ")", "\n", "GS_optimizer", ".", "zero_grad", "(", ")", "\n", "GS_result", ",", "depth_pred", "=", "gs_net", "(", "inputs", ")", "\n", "l1loss", "=", "nn", ".", "L1Loss", "(", ")", "\n", "loss_net", "=", "l1loss", "(", "GS_result", ",", "gts", ")", "\n", "loss_depth", "=", "l1loss", "(", "depth_pred", ",", "dps", ")", "\n", "loss", "=", "loss_net", "+", "loss_depth", "\n", "loss", ".", "backward", "(", ")", "\n", "GS_optimizer", ".", "step", "(", ")", "\n", "train_loss_record", ".", "update", "(", "loss", ".", "data", ",", "batch_size", ")", "\n", "train_L1loss_record", ".", "update", "(", "loss_net", ".", "data", ",", "batch_size", ")", "\n", "train_depth_loss_record", ".", "update", "(", "loss_depth", ".", "data", ",", "batch_size", ")", "\n", "curr_iter", "+=", "1", "\n", "log", "=", "'[iter %d], [Total_loss %.13f], [lr %.13f], [L1_loss %.13f], [loss_depth %.13f]'", "%", "(", "curr_iter", ",", "train_loss_record", ".", "avg", ",", "GS_optimizer", ".", "param_groups", "[", "1", "]", "[", "'lr'", "]", ",", "\n", "train_L1loss_record", ".", "avg", ",", "train_depth_loss_record", ".", "avg", ")", "\n", "print", "(", "log", ")", "\n", "open", "(", "log_path", ",", "'a'", ")", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "\n", "if", "(", "curr_iter", "+", "1", ")", "%", "args", "[", "'snapshot_epochs'", "]", "==", "0", ":", "\n", "                ", "torch", ".", "save", "(", "gs_net", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "ckpt_path", ",", "exp_name", ",", "(", "'%d.pth'", "%", "(", "curr_iter", "+", "1", ")", ")", ")", ")", "\n", "torch", ".", "save", "(", "GS_optimizer", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "ckpt_path", ",", "exp_name", ",", "(", "'%d_optim.pth'", "%", "(", "curr_iter", "+", "1", ")", ")", ")", ")", "\n", "\n", "", "if", "curr_iter", ">", "args", "[", "'iter_num'", "]", ":", "\n", "                ", "return", "\n", "", "", "", "", "if", "__name__", "==", "'__main__'", ":", "\n"]]}