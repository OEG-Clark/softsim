{"home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.get_trajectories": [[7, 48], ["enumerate", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "trajectories.numpy.numpy", "avails.numpy.numpy", "object_types.numpy.numpy", "numpy.save", "numpy.save", "numpy.save", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.math.cos", "tensorflow.math.sin", "tensorflow.squeeze", "tensorflow.stack", "trajectories.numpy.append", "avails.numpy.append", "object_types.numpy.append", "tensorflow.squeeze", "tensorflow.squeeze", "print"], "function", ["None"], ["def", "get_trajectories", "(", "dataset", ")", ":", "\n", "  ", "trajectories", "=", "[", "]", "\n", "avails", "=", "[", "]", "\n", "object_types", "=", "[", "]", "\n", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "dataset", ")", ":", "\n", "    ", "future_states", "=", "tf", ".", "squeeze", "(", "batch", "[", "'gt_future_states'", "]", ",", "axis", "=", "1", ")", "[", ":", ",", "11", ":", ",", ":", "2", "]", "\n", "future_is_valid", "=", "tf", ".", "squeeze", "(", "batch", "[", "'gt_future_is_valid'", "]", ",", "axis", "=", "1", ")", "[", ":", ",", "11", ":", "]", "\n", "x", "=", "batch", "[", "'x'", "]", "\n", "y", "=", "batch", "[", "'y'", "]", "\n", "yaw", "=", "batch", "[", "'yaw'", "]", "\n", "x", "=", "tf", ".", "squeeze", "(", "x", ",", "axis", "=", "1", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "y", ",", "axis", "=", "1", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "yaw", ",", "axis", "=", "1", ")", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "\n", "object_type", "=", "tf", ".", "squeeze", "(", "batch", "[", "'object_type'", "]", ",", "axis", "=", "1", ")", "\n", "\n", "future_x", "=", "future_states", "[", ":", ",", ":", ",", "0", "]", "# (B, 80)", "\n", "future_y", "=", "future_states", "[", ":", ",", ":", ",", "1", "]", "# (B, 80)", "\n", "future_x_hat", "=", "future_x", "-", "x", "# (B, 80)", "\n", "future_y_hat", "=", "future_y", "-", "y", "# (B, 80)", "\n", "future_ego_x", "=", "c", "*", "future_x_hat", "+", "s", "*", "future_y_hat", "# (B, 80)", "\n", "future_ego_y", "=", "-", "s", "*", "future_x_hat", "+", "c", "*", "future_y_hat", "# (B, 80)", "\n", "future_states", "=", "tf", ".", "stack", "(", "[", "future_ego_x", ",", "future_ego_y", "]", ",", "axis", "=", "-", "1", ")", "\n", "trajectories", ".", "append", "(", "future_states", ")", "\n", "avails", ".", "append", "(", "future_is_valid", ")", "\n", "object_types", ".", "append", "(", "object_type", ")", "\n", "if", "i", "%", "1000", "==", "0", ":", "\n", "      ", "print", "(", "i", ")", "\n", "\n", "", "", "trajectories", "=", "tf", ".", "concat", "(", "trajectories", ",", "axis", "=", "0", ")", "\n", "avails", "=", "tf", ".", "concat", "(", "avails", ",", "axis", "=", "0", ")", "\n", "object_types", "=", "tf", ".", "concat", "(", "object_types", ",", "axis", "=", "0", ")", "\n", "trajectories", "=", "trajectories", ".", "numpy", "(", ")", "\n", "avails", "=", "avails", ".", "numpy", "(", ")", "\n", "object_types", "=", "object_types", ".", "numpy", "(", ")", "\n", "np", ".", "save", "(", "\"drive/MyDrive/Motion/trajectories.npy\"", ",", "trajectories", ")", "\n", "np", ".", "save", "(", "\"drive/MyDrive/Motion/avails.npy\"", ",", "avails", ")", "\n", "np", ".", "save", "(", "\"drive/MyDrive/Motion/object_types.npy\"", ",", "object_types", ")", "\n", "return", "trajectories", ",", "avails", ",", "object_types", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.cluster": [[49, 60], ["trajectories.copy().reshape.copy().reshape", "avails.reshape.reshape", "numpy.concatenate", "avails.reshape.reshape", "range", "trajectories.copy().reshape.copy", "clustering.m_step", "clustering.e_step", "trajectories.copy().reshape.copy"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.m_step", "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.e_step"], ["", "def", "cluster", "(", "trajectories", ",", "avails", ",", "K", "=", "8", ",", "num_iters", "=", "30", ")", ":", "\n", "  ", "num", "=", "trajectories", ".", "shape", "[", "1", "]", "\n", "trajectories", "=", "trajectories", ".", "copy", "(", ")", ".", "reshape", "(", "[", "-", "1", ",", "2", "*", "num", "]", ")", "\n", "avails", "=", "avails", ".", "reshape", "(", "[", "-", "1", ",", "num", ",", "1", "]", ")", "\n", "avails", "=", "np", ".", "concatenate", "(", "(", "avails", ",", "avails", ")", ",", "axis", "=", "2", ")", "\n", "avails", "=", "avails", ".", "reshape", "(", "[", "-", "1", ",", "2", "*", "num", "]", ")", "\n", "centroids", "=", "trajectories", ".", "copy", "(", ")", "[", "0", ":", "K", "*", "17", ":", "17", ",", ":", "]", "# (8, 160)", "\n", "for", "iteration", "in", "range", "(", "num_iters", ")", ":", "\n", "    ", "assignments", "=", "m_step", "(", "trajectories", ",", "avails", ",", "centroids", ")", "\n", "e_step", "(", "trajectories", ",", "avails", ",", "centroids", ",", "assignments", ")", "\n", "", "return", "assignments", ",", "centroids", ",", "trajectories", ",", "avails", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.chunked_cluster": [[61, 81], ["int", "trajectories.copy().reshape.copy().reshape", "avails.reshape.reshape", "numpy.concatenate", "avails.reshape.reshape", "len", "range", "initial_centroids.copy", "print", "range", "numpy.concatenate", "clustering.e_step", "trajectories.copy().reshape.copy", "trajectories.copy().reshape.copy", "min", "assignments_list.append", "clustering.m_step"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.e_step", "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.m_step"], ["", "def", "chunked_cluster", "(", "trajectories", ",", "avails", ",", "initial_centroids", "=", "None", ",", "K", "=", "8", ",", "num_iters", "=", "30", ",", "chunk_size", "=", "250000", ")", ":", "\n", "  ", "num", "=", "int", "(", "trajectories", ".", "shape", "[", "1", "]", ")", "\n", "trajectories", "=", "trajectories", ".", "copy", "(", ")", ".", "reshape", "(", "[", "-", "1", ",", "2", "*", "num", "]", ")", "\n", "avails", "=", "avails", ".", "reshape", "(", "[", "-", "1", ",", "num", ",", "1", "]", ")", "\n", "avails", "=", "np", ".", "concatenate", "(", "(", "avails", ",", "avails", ")", ",", "axis", "=", "2", ")", "\n", "avails", "=", "avails", ".", "reshape", "(", "[", "-", "1", ",", "2", "*", "num", "]", ")", "\n", "if", "initial_centroids", "is", "not", "None", ":", "\n", "    ", "centroids", "=", "initial_centroids", ".", "copy", "(", ")", "\n", "", "else", ":", "\n", "    ", "centroids", "=", "trajectories", ".", "copy", "(", ")", "[", "0", ":", "K", "*", "17", ":", "17", ",", ":", "]", "# (8, 160)", "\n", "", "N", "=", "len", "(", "trajectories", ")", "\n", "for", "iteration", "in", "range", "(", "num_iters", ")", ":", "\n", "    ", "print", "(", "iteration", ")", "\n", "assignments_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "N", ",", "chunk_size", ")", ":", "\n", "      ", "j", "=", "min", "(", "i", "+", "chunk_size", ",", "N", ")", "\n", "assignments_list", ".", "append", "(", "m_step", "(", "trajectories", "[", "i", ":", "j", "]", ",", "avails", "[", "i", ":", "j", "]", ",", "centroids", ")", ")", "\n", "", "assignments", "=", "np", ".", "concatenate", "(", "assignments_list", ",", "axis", "=", "0", ")", "\n", "e_step", "(", "trajectories", ",", "avails", ",", "centroids", ",", "assignments", ")", "\n", "", "return", "assignments", ",", "centroids", ",", "trajectories", ",", "avails", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.m_step": [[82, 103], ["len", "trajectories.reshape", "centroids.reshape", "avails.reshape", "numpy.sum", "numpy.argmin", "print", "numpy.sum", "numpy.min().astype", "numpy.min"], "function", ["None"], ["", "def", "m_step", "(", "trajectories", ",", "avails", ",", "centroids", ")", ":", "\n", "  ", "\"\"\"\n    Parameters:\n      trajectories: nparray of shape (B, 160)\n      avails: nparray of shape (B, 160)\n      centroids: nparray of shape (8, 160)\n    \n    Returns:\n      assignments: nparray of shape(B,)(Each trajectory has an assignment to a cluster)\n  \"\"\"", "\n", "K", "=", "len", "(", "centroids", ")", "\n", "num", "=", "trajectories", ".", "shape", "[", "1", "]", "//", "2", "\n", "assert", "num", "!=", "160", ",", "\"num is 160\"", "\n", "a", "=", "trajectories", ".", "reshape", "(", "[", "-", "1", ",", "1", ",", "2", "*", "num", "]", ")", "\n", "b", "=", "centroids", ".", "reshape", "(", "[", "1", ",", "K", ",", "2", "*", "num", "]", ")", "\n", "reshaped_avails", "=", "avails", ".", "reshape", "(", "[", "-", "1", ",", "1", ",", "2", "*", "num", "]", ")", "\n", "distance", "=", "(", "(", "a", "-", "b", ")", "**", "2", ")", "*", "reshaped_avails", "# (B, 8, 160)", "\n", "distance", "=", "np", ".", "sum", "(", "distance", ",", "axis", "=", "2", ")", "# (B, 8)", "\n", "assignments", "=", "np", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "print", "(", "'total cost:'", ",", "np", ".", "sum", "(", "np", ".", "min", "(", "distance", ",", "axis", "=", "1", ")", ".", "astype", "(", "np", ".", "float64", ")", ")", ")", "\n", "return", "assignments", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.e_step": [[104, 123], ["len", "range", "numpy.where", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "e_step", "(", "trajectories", ",", "avails", ",", "centroids", ",", "assignments", ",", "K", "=", "8", ")", ":", "\n", "  ", "\"\"\"\n    Parameters:\n      trajectories: nparray of shape (B, 160)\n      avails: nparray of shape (B, 160)\n      centroids: nparray of shape (8, 160)\n      assignments: nparray of shape(B,)(Each trajectory has an assignment to a cluster)\n\n    Returns:\n      None: centroids are changed in place.\n  \"\"\"", "\n", "K", "=", "len", "(", "centroids", ")", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "    ", "members", "=", "np", ".", "where", "(", "assignments", "==", "i", ")", "\n", "member_trajectories", "=", "trajectories", "[", "members", "]", "# (C, 160)", "\n", "member_avails", "=", "avails", "[", "members", "]", "# (C, 160)", "\n", "sum_trajectory", "=", "np", ".", "sum", "(", "member_trajectories", "*", "member_avails", ",", "axis", "=", "0", ")", "# (160,)", "\n", "sum_avails", "=", "np", ".", "sum", "(", "member_avails", ",", "axis", "=", "0", ")", "+", "1e-6", "# (160,)", "\n", "centroids", "[", "i", "]", "=", "sum_trajectory", "/", "sum_avails", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.visualize_clusters": [[124, 142], ["range", "len", "numpy.any", "print", "numpy.zeros", "cv2.polylines", "matplotlib.imshow", "matplotlib.show", "numpy.where", "[].reshape().astype", "len", "[].reshape"], "function", ["None"], ["", "", "def", "visualize_clusters", "(", "assignments", ",", "centroids", ",", "avails", ")", ":", "\n", "  ", "colors", "=", "[", "(", "255", ",", "0", ",", "0", ")", ",", "\n", "(", "255", ",", "255", ",", "0", ")", ",", "\n", "(", "255", ",", "255", ",", "255", ")", ",", "\n", "(", "0", ",", "255", ",", "255", ")", ",", "\n", "(", "0", ",", "255", ",", "0", ")", ",", "\n", "(", "0", ",", "0", ",", "255", ")", ",", "\n", "(", "255", ",", "0", ",", "255", ")", ",", "\n", "(", "255", ",", "255", ",", "100", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "centroids", ")", ")", ":", "\n", "    ", "indices", "=", "np", ".", "where", "(", "assignments", "==", "i", ")", "[", "0", "]", "\n", "centroid_avails", "=", "np", ".", "any", "(", "avails", "[", "indices", "]", ",", "axis", "=", "0", ")", "\n", "print", "(", "f\"the {i}th cluster has this many members:{len(indices)}\"", ")", "\n", "trajectory", "=", "centroids", "[", "i", "]", "[", "centroid_avails", "]", ".", "reshape", "(", "[", "-", "1", ",", "2", "]", ")", ".", "astype", "(", "np", ".", "int64", ")", "*", "2", "+", "112", "\n", "image", "=", "np", ".", "zeros", "(", "(", "224", ",", "448", ",", "3", ")", ")", "\n", "cv2", ".", "polylines", "(", "image", ",", "[", "trajectory", "]", ",", "False", ",", "color", "=", "colors", "[", "i", "%", "8", "]", ")", "\n", "plt", ".", "imshow", "(", "image", "/", "255", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.visualize_trajectories": [[143, 161], ["numpy.zeros", "matplotlib.imshow", "matplotlib.show", "cv2.polylines", "track_trajectory.reshape().astype", "track_trajectory.reshape"], "function", ["None"], ["", "", "def", "visualize_trajectories", "(", "trajectories", ",", "avails", ",", "indices", ")", ":", "# trajectories has shape (B, 160)", "\n", "  ", "colors", "=", "[", "(", "255", ",", "0", ",", "0", ")", ",", "\n", "(", "255", ",", "255", ",", "0", ")", ",", "\n", "(", "255", ",", "255", ",", "255", ")", ",", "\n", "(", "0", ",", "255", ",", "255", ")", ",", "\n", "(", "0", ",", "255", ",", "0", ")", ",", "\n", "(", "0", ",", "0", ",", "255", ")", ",", "\n", "(", "255", ",", "0", ",", "255", ")", ",", "\n", "(", "255", ",", "255", ",", "100", ")", "]", "\n", "image", "=", "np", ".", "zeros", "(", "(", "224", ",", "448", ",", "3", ")", ")", "\n", "for", "index", "in", "indices", ":", "\n", "    ", "track_trajectory", "=", "trajectories", "[", "index", "]", "\n", "track_avail", "=", "avails", "[", "index", "]", "\n", "track_trajectory", "=", "track_trajectory", "[", "track_avail", "]", "\n", "track_trajectory", "=", "2", "*", "track_trajectory", ".", "reshape", "(", "[", "1", ",", "-", "1", ",", "2", "]", ")", ".", "astype", "(", "np", ".", "int64", ")", "+", "112", "\n", "cv2", ".", "polylines", "(", "image", ",", "track_trajectory", ",", "False", ",", "color", "=", "colors", "[", "index", "%", "8", "]", ")", "\n", "", "plt", ".", "imshow", "(", "image", "/", "255", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.inspect_trajectory": [[162, 196], ["enumerate", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.math.cos", "tensorflow.math.sin", "tensorflow.stack", "future_states[].numpy", "future_is_valid[].numpy", "np.zeros.numpy", "numpy.zeros", "cv2.polylines", "matplotlib.imshow", "matplotlib.show", "tensorflow.squeeze", "tensorflow.squeeze"], "function", ["None"], ["", "def", "inspect_trajectory", "(", "dataset", ",", "index", ",", "batch_size", "=", "32", ")", ":", "\n", "  ", "batch_index", "=", "index", "//", "batch_size", "\n", "index_within_batch", "=", "index", "%", "batch_size", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "dataset", ")", ":", "\n", "    ", "if", "i", "<", "batch_index", ":", "\n", "      ", "continue", "\n", "", "image", "=", "batch", "[", "'image'", "]", "[", "index_within_batch", "]", "\n", "future_states", "=", "tf", ".", "squeeze", "(", "batch", "[", "'gt_future_states'", "]", ",", "axis", "=", "1", ")", "[", ":", ",", "11", ":", ",", ":", "2", "]", "\n", "future_is_valid", "=", "tf", ".", "squeeze", "(", "batch", "[", "'gt_future_is_valid'", "]", ",", "axis", "=", "1", ")", "[", ":", ",", "11", ":", "]", "# (B, 80)", "\n", "x", "=", "batch", "[", "'x'", "]", "\n", "y", "=", "batch", "[", "'y'", "]", "\n", "yaw", "=", "batch", "[", "'yaw'", "]", "\n", "x", "=", "tf", ".", "squeeze", "(", "x", ",", "axis", "=", "1", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "y", ",", "axis", "=", "1", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "yaw", ",", "axis", "=", "1", ")", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "\n", "\n", "future_x", "=", "future_states", "[", ":", ",", ":", ",", "0", "]", "# (B, 80)", "\n", "future_y", "=", "future_states", "[", ":", ",", ":", ",", "1", "]", "# (B, 80)", "\n", "future_x_hat", "=", "future_x", "-", "x", "# (B, 80)", "\n", "future_y_hat", "=", "future_y", "-", "y", "# (B, 80)", "\n", "future_ego_x", "=", "c", "*", "future_x_hat", "+", "s", "*", "future_y_hat", "# (B, 80)", "\n", "future_ego_y", "=", "-", "s", "*", "future_x_hat", "+", "c", "*", "future_y_hat", "# (B, 80)", "\n", "future_states", "=", "tf", ".", "stack", "(", "[", "future_ego_x", ",", "future_ego_y", "]", ",", "axis", "=", "-", "1", ")", "# (B, 80, 2)", "\n", "trajectory", "=", "future_states", "[", "index_within_batch", "]", ".", "numpy", "(", ")", "\n", "avails", "=", "future_is_valid", "[", "index_within_batch", "]", ".", "numpy", "(", ")", "\n", "trajectory", "=", "(", "2.5", "*", "trajectory", "[", "avails", "]", ")", ".", "astype", "(", "np", ".", "int64", ")", "+", "112", "\n", "image", "=", "image", ".", "numpy", "(", ")", "\n", "image", "=", "np", ".", "zeros", "(", "(", "224", ",", "448", ",", "3", ")", ")", "\n", "cv2", ".", "polylines", "(", "image", ",", "[", "trajectory", "]", ",", "False", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ")", "\n", "plt", ".", "imshow", "(", "image", "/", "255", ")", "\n", "plt", ".", "show", "(", ")", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.smooth": [[197, 228], ["len", "numpy.zeros", "range", "clustering.visualize_centroids", "print", "tensorflow.convert_to_tensor", "clustering.get_cluster_model", "tensorflow.keras.optimizers.SGD", "get_cluster_model.compile", "numpy.stack", "len", "get_cluster_model.fit", "histories.append", "print", "get_cluster_model.numpy", "model().numpy.reshape", "centroids[].reshape", "numpy.stack", "numpy.zeros", "get_cluster_model.", "numpy.array"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.visualize_centroids", "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.get_cluster_model", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.compile"], ["", "", "def", "smooth", "(", "trajectories", ",", "avails", ",", "centroids", ",", "assignments", ")", ":", "\n", "  ", "\"\"\"\n  Arguments:\n    trajectories: nparray of shape (X, 80, 2)\n    avails: nparray of shape (X, 80)\n    centroids: nparray of shape (n, 160)\n    assignments: nparray of shape (X,)\n  \n  Returns:\n    new_centroids: nparray of shape (n, 160)\n  \"\"\"", "\n", "n", "=", "len", "(", "centroids", ")", "\n", "new_centroids", "=", "np", ".", "zeros", "(", "(", "n", ",", "160", ")", ")", "\n", "histories", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "    ", "print", "(", "i", ")", "\n", "initial_knots", "=", "tf", ".", "convert_to_tensor", "(", "centroids", "[", "i", "]", ".", "reshape", "(", "[", "80", ",", "2", "]", ")", "[", "9", ":", ":", "10", "]", ")", "\n", "model", "=", "get_cluster_model", "(", "initial_knots", ")", "\n", "opt", "=", "tf", ".", "keras", ".", "optimizers", ".", "SGD", "(", "learning_rate", "=", "10", ")", "\n", "model", ".", "compile", "(", "opt", ",", "loss", "=", "cluster_loss", ")", "\n", "current_trajectories", "=", "trajectories", "[", "assignments", "==", "i", "]", "\n", "current_avails", "=", "avails", "[", "assignments", "==", "i", "]", "\n", "output", "=", "np", ".", "stack", "(", "[", "current_trajectories", ",", "np", ".", "stack", "(", "[", "current_avails", ",", "current_avails", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "num_examples", "=", "len", "(", "current_trajectories", ")", "\n", "history", "=", "model", ".", "fit", "(", "x", "=", "np", ".", "zeros", "(", "(", "num_examples", ",", ")", ")", ",", "y", "=", "output", ",", "batch_size", "=", "num_examples", ",", "epochs", "=", "100", ",", "verbose", "=", "0", ")", "\n", "histories", ".", "append", "(", "history", ")", "\n", "print", "(", "\"loss\"", ",", "history", ".", "history", "[", "\"loss\"", "]", "[", "-", "1", "]", ")", "\n", "current_centroid", "=", "model", "(", "np", ".", "array", "(", "[", "0", "]", ")", ")", ".", "numpy", "(", ")", "\n", "new_centroids", "[", "i", "]", "=", "current_centroid", ".", "reshape", "(", "[", "160", ",", "]", ")", "\n", "", "visualize_centroids", "(", "new_centroids", ")", "\n", "return", "new_centroids", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.cluster_and_get_all_avails": [[229, 237], ["clustering.chunked_cluster", "numpy.save", "numpy.save", "range", "all_avails_K.append", "numpy.where"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.chunked_cluster"], ["", "def", "cluster_and_get_all_avails", "(", "filtered_trajectories", ",", "filtered_avails", ",", "K", ",", "num_iters", ",", "chunk_size", ")", ":", "\n", "  ", "assignments_K", ",", "centroids_K", ",", "trajectories_K", ",", "avails_K", "=", "chunked_cluster", "(", "filtered_trajectories", ",", "filtered_avails", ",", "K", "=", "K", ",", "num_iters", "=", "num_iters", ",", "chunk_size", "=", "chunk_size", ")", "\n", "np", ".", "save", "(", "\"drive/MyDrive/Motion/clusters/filtered_veh_64.npy\"", ",", "centroids_K", ")", "\n", "np", ".", "save", "(", "\"drive/MyDrive/Motion/clusters/filtered_assignments_64.npy\"", ",", "assignments_K", ")", "\n", "all_avails_K", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "    ", "all_avails_K", ".", "append", "(", "avails_K", "[", "np", ".", "where", "(", "assignments_K", "==", "i", ")", "]", ")", "\n", "", "return", "assignments_K", ",", "centroids_K", ",", "trajectories_K", ",", "avails_K", ",", "all_avails", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.visualize_centroids": [[238, 260], ["len", "range", "print", "numpy.zeros", "cv2.polylines", "matplotlib.figure", "matplotlib.imshow", "matplotlib.show", "numpy.any", "cv2.circle", "centroids[].reshape", "centroids[].reshape"], "function", ["None"], ["", "def", "visualize_centroids", "(", "centroids", ",", "all_avails", "=", "None", ")", ":", "\n", "  ", "\"\"\"\n    Call Arguments:\n      centroids: (K, 160)\n      all_avails: python list of nparrays of shape (B, 80)\n  \"\"\"", "\n", "K", "=", "len", "(", "centroids", ")", "\n", "num", "=", "centroids", ".", "shape", "[", "1", "]", "//", "2", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "    ", "if", "all_avails", "!=", "None", ":", "\n", "      ", "avails", "=", "np", ".", "any", "(", "all_avails", "[", "i", "]", ",", "axis", "=", "0", ")", "\n", "centroid", "=", "(", "2.5", "*", "centroids", "[", "i", "]", ".", "reshape", "(", "[", "num", ",", "2", "]", ")", "[", "avails", "]", ")", ".", "astype", "(", "np", ".", "int32", ")", "+", "112", "\n", "", "else", ":", "\n", "      ", "centroid", "=", "(", "2.5", "*", "centroids", "[", "i", "]", ".", "reshape", "(", "[", "num", ",", "2", "]", ")", ")", ".", "astype", "(", "np", ".", "int32", ")", "+", "112", "\n", "", "print", "(", "i", ")", "\n", "image", "=", "np", ".", "zeros", "(", "(", "224", ",", "448", ",", "3", ")", ")", "\n", "cv2", ".", "polylines", "(", "image", ",", "[", "centroid", "]", ",", "False", ",", "(", "255", ",", "255", ",", "255", ")", ")", "\n", "for", "pt", "in", "centroid", "[", ":", ":", "4", "]", ":", "\n", "      ", "cv2", ".", "circle", "(", "image", ",", "(", "pt", "[", "0", "]", ",", "pt", "[", "1", "]", ")", ",", "1", ",", "(", "255", ",", "0", ",", "0", ")", ")", "\n", "", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "20", ")", ")", "\n", "plt", ".", "imshow", "(", "image", "/", "255", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.chunked_m_step": [[261, 273], ["len", "trajectories.copy().reshape.copy().reshape", "avails.reshape.reshape", "numpy.concatenate", "avails.reshape.reshape", "range", "numpy.concatenate", "min", "assignments_list.append", "trajectories.copy().reshape.copy", "clustering.m_step"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.m_step"], ["", "", "def", "chunked_m_step", "(", "trajectories", ",", "avails", ",", "centroids", ",", "chunk_size", "=", "125000", ")", ":", "\n", "  ", "N", "=", "len", "(", "trajectories", ")", "\n", "trajectories", "=", "trajectories", ".", "copy", "(", ")", ".", "reshape", "(", "[", "-", "1", ",", "160", "]", ")", "\n", "avails", "=", "avails", ".", "reshape", "(", "[", "-", "1", ",", "80", ",", "1", "]", ")", "\n", "avails", "=", "np", ".", "concatenate", "(", "(", "avails", ",", "avails", ")", ",", "axis", "=", "2", ")", "\n", "avails", "=", "avails", ".", "reshape", "(", "[", "-", "1", ",", "160", "]", ")", "\n", "assignments_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "N", ",", "chunk_size", ")", ":", "\n", "    ", "j", "=", "min", "(", "i", "+", "chunk_size", ",", "N", ")", "\n", "assignments_list", ".", "append", "(", "m_step", "(", "trajectories", "[", "i", ":", "j", "]", ",", "avails", "[", "i", ":", "j", "]", ",", "centroids", ")", ")", "\n", "", "assignments", "=", "np", ".", "concatenate", "(", "assignments_list", ",", "axis", "=", "0", ")", "\n", "return", "assignments", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.get_cluster_model": [[274, 291], ["tensorflow.keras.layers.Input", "tensorflow.reshape", "tensorflow.expand_dims", "tensorflow_graphics.math.interpolation.bspline.interpolate", "tensorflow.squeeze", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.keras.Model", "tensorflow.keras.layers.Dense", "tensorflow.transpose", "tensorflow.range"], "function", ["None"], ["", "def", "get_cluster_model", "(", "initial_knots", ")", ":", "\n", "    ", "\"\"\"\n    initial_knots: tensor of shape (8, 2)\n    \"\"\"", "\n", "dummy_input", "=", "tf", ".", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "1", ",", ")", ")", "\n", "knots", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "16", ")", "(", "dummy_input", ")", "\n", "knots", "=", "tf", ".", "reshape", "(", "knots", ",", "(", "-", "1", ",", "1", ",", "2", ",", "8", ")", ")", "# (B, 1, 2, 8)", "\n", "initial_knots", "=", "initial_knots", "[", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", ",", ":", ",", ":", "]", "\n", "knots", "=", "knots", "+", "tf", ".", "transpose", "(", "initial_knots", ",", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", "\n", "max_pos", "=", "8", "-", "3", "\n", "positions", "=", "tf", ".", "expand_dims", "(", "tf", ".", "range", "(", "start", "=", "0.0", ",", "limit", "=", "max_pos", ",", "delta", "=", "max_pos", "/", "80", ",", "dtype", "=", "knots", ".", "dtype", ")", ",", "axis", "=", "-", "1", ")", "\n", "spline", "=", "bspline", ".", "interpolate", "(", "knots", ",", "positions", ",", "3", ",", "False", ")", "\n", "spline", "=", "tf", ".", "squeeze", "(", "spline", ",", "axis", "=", "1", ")", "\n", "pred", "=", "tf", ".", "transpose", "(", "spline", ",", "perm", "=", "[", "1", ",", "2", ",", "0", ",", "3", "]", ")", "# (B, K, 80, 2)", "\n", "pred", "=", "tf", ".", "reshape", "(", "pred", ",", "[", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "model", "=", "tf", ".", "keras", ".", "Model", "(", "inputs", "=", "[", "dummy_input", "]", ",", "outputs", "=", "[", "pred", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.cluster_loss": [[292, 294], ["tensorflow.reduce_mean"], "function", ["None"], ["", "def", "cluster_loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "  ", "return", "tf", ".", "reduce_mean", "(", "(", "(", "y_true", "[", ":", ",", "0", "]", "-", "y_pred", ")", "**", "2", ")", "*", "y_true", "[", ":", ",", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.clustering.show_trajectory": [[295, 307], ["numpy.zeros", "cv2.polylines", "matplotlib.figure", "matplotlib.imshow", "matplotlib.show", "cv2.circle", "trajectory.reshape"], "function", ["None"], ["", "def", "show_trajectory", "(", "trajectory", ")", ":", "\n", "  ", "\"\"\"\n  trajectory: of shape (80, 2) or (160) or (1, 80, 2)\n  \"\"\"", "\n", "image", "=", "np", ".", "zeros", "(", "(", "224", ",", "448", ",", "3", ")", ")", "\n", "pts", "=", "(", "2.5", "*", "trajectory", ".", "reshape", "(", "[", "80", ",", "2", "]", ")", ")", ".", "astype", "(", "np", ".", "int32", ")", "+", "112", "\n", "cv2", ".", "polylines", "(", "image", ",", "pts", ",", "False", ",", "(", "255", ",", "255", ",", "255", ")", ")", "\n", "for", "pt", "in", "pts", ":", "\n", "    ", "cv2", ".", "circle", "(", "image", ",", "(", "pt", "[", "0", "]", ",", "pt", "[", "1", "]", ")", ",", "1", ",", "(", "255", ",", "0", ",", "0", ")", ")", "\n", "", "plt", ".", "figure", "(", "figsize", "=", "(", "10", ",", "20", ")", ")", "\n", "plt", ".", "imshow", "(", "image", ")", "\n", "plt", ".", "show", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.None.metrics.MotionMetrics.__init__": [[53, 63], ["super().__init__", "metrics._default_metrics_config"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics._default_metrics_config"], ["def", "__init__", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_ground_truth_trajectory", "=", "[", "]", "\n", "self", ".", "_ground_truth_is_valid", "=", "[", "]", "\n", "self", ".", "_prediction_trajectory", "=", "[", "]", "\n", "self", ".", "_prediction_score", "=", "[", "]", "\n", "self", ".", "_object_type", "=", "[", "]", "\n", "if", "config", "is", "None", ":", "\n", "      ", "config", "=", "_default_metrics_config", "(", ")", "\n", "", "self", ".", "_metrics_config", "=", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.metrics.MotionMetrics.reset_state": [[64, 70], ["None"], "methods", ["None"], ["", "def", "reset_state", "(", "self", ")", ":", "\n", "    ", "self", ".", "_ground_truth_trajectory", "=", "[", "]", "\n", "self", ".", "_ground_truth_is_valid", "=", "[", "]", "\n", "self", ".", "_prediction_trajectory", "=", "[", "]", "\n", "self", ".", "_prediction_score", "=", "[", "]", "\n", "self", ".", "_object_type", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.metrics.MotionMetrics.update_state": [[71, 80], ["metrics.MotionMetrics._prediction_trajectory.append", "metrics.MotionMetrics._prediction_score.append", "metrics.MotionMetrics._ground_truth_trajectory.append", "metrics.MotionMetrics._ground_truth_is_valid.append", "metrics.MotionMetrics._object_type.append"], "methods", ["None"], ["", "def", "update_state", "(", "self", ",", "prediction_trajectory", ",", "prediction_score", ",", "\n", "ground_truth_trajectory", "=", "None", ",", "\n", "ground_truth_is_valid", "=", "None", ",", "\n", "object_type", "=", "None", ")", ":", "\n", "    ", "self", ".", "_prediction_trajectory", ".", "append", "(", "prediction_trajectory", ")", "\n", "self", ".", "_prediction_score", ".", "append", "(", "prediction_score", ")", "\n", "self", ".", "_ground_truth_trajectory", ".", "append", "(", "ground_truth_trajectory", ")", "\n", "self", ".", "_ground_truth_is_valid", ".", "append", "(", "ground_truth_is_valid", ")", "\n", "self", ".", "_object_type", ".", "append", "(", "object_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.metrics.MotionMetrics.result": [[81, 139], ["tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.cast", "waymo_open_dataset.metrics.ops.py_metrics_ops.motion_metrics", "tensorflow.concat", "tensorflow.shape", "metrics.MotionMetrics._metrics_config.SerializeToString", "tensorflow.zeros", "tensorflow.ones"], "methods", ["None"], ["", "def", "result", "(", "self", ")", ":", "\n", "# [batch_size, K, steps, 2].", "\n", "    ", "prediction_trajectory", "=", "tf", ".", "concat", "(", "self", ".", "_prediction_trajectory", ",", "0", ")", "\n", "# [batch_size, K].", "\n", "prediction_score", "=", "tf", ".", "concat", "(", "self", ".", "_prediction_score", ",", "0", ")", "\n", "# [batch_size, gt_steps, 7].", "\n", "ground_truth_trajectory", "=", "tf", ".", "concat", "(", "self", ".", "_ground_truth_trajectory", ",", "0", ")", "\n", "# [batch_size, gt_steps].", "\n", "ground_truth_is_valid", "=", "tf", ".", "concat", "(", "self", ".", "_ground_truth_is_valid", ",", "0", ")", "\n", "# [batch_size].", "\n", "object_type", "=", "tf", ".", "cast", "(", "tf", ".", "concat", "(", "self", ".", "_object_type", ",", "0", ")", ",", "tf", ".", "int64", ")", "\n", "\n", "# We are predicting more steps than needed by the eval code. Subsample.", "\n", "interval", "=", "(", "\n", "self", ".", "_metrics_config", ".", "track_steps_per_second", "//", "\n", "self", ".", "_metrics_config", ".", "prediction_steps_per_second", ")", "\n", "prediction_trajectory", "=", "prediction_trajectory", "[", ":", ",", ":", ",", "(", "interval", "-", "1", ")", ":", ":", "interval", "]", "\n", "\n", "\n", "# prediction_trajectory: [B, M, K, N, TP, 2]. Predicted trajectories. The", "\n", "#   inner-most dimensions are [x, y].", "\n", "# prediction_score: [B, M, K]. Scores per joint prediction.", "\n", "# ground_truth_trajectory: [B, A, TG, 7]. Groundtruth trajectories. The", "\n", "#   inner-most dimensions are [x, y, length, width, heading, velocity_x,", "\n", "#   velocity_y].", "\n", "# ground_truth_is_valid: [B, A, TG]. Indicates whether a time stamp is valid", "\n", "#   per trajectory. If all timestamps for a trajectory are invalid, the", "\n", "#   trajectory is assumed invalid.", "\n", "# prediction_ground_truth_indices: [B, M, N]. Indices to gather the", "\n", "#   predictions of shape [B, M, ?, N] from the groundtruth of shape [B, A],", "\n", "#   values must be between [0, A).", "\n", "# prediction_ground_truth_indices_mask: [B, M, N]. A validity mask for", "\n", "#   `prediction_ground_truth_indices`.", "\n", "# object_type: [B, A] Object type per trajectory.", "\n", "# object_id: [B, A]. Object IDs per trajectory.", "\n", "# scenario_id: [B]. Scenario IDs of all groundtruth trajectories.", "\n", "\n", "# Prepare these into shapes expected by the metrics computation.", "\n", "# [batch_size, K, steps, 2] -> [B, M, K, N, TP, 2]", "\n", "prediction_trajectory", "=", "prediction_trajectory", "[", ":", ",", "tf", ".", "newaxis", ",", ":", ",", "tf", ".", "newaxis", "]", "\n", "prediction_score", "=", "prediction_score", "[", ":", ",", "tf", ".", "newaxis", "]", "\n", "# [batch_size, num_agents_per_joint_prediction, gt_steps, 7].", "\n", "ground_truth_trajectory", "=", "ground_truth_trajectory", "[", ":", ",", "tf", ".", "newaxis", "]", "\n", "# [batch_size, num_agents_per_joint_prediction, gt_steps].", "\n", "ground_truth_is_valid", "=", "ground_truth_is_valid", "[", ":", ",", "tf", ".", "newaxis", "]", "\n", "# [batch_size, num_agents_per_joint_prediction].", "\n", "object_type", "=", "object_type", "[", ":", ",", "tf", ".", "newaxis", "]", "\n", "batch_size", "=", "tf", ".", "shape", "(", "object_type", ")", "[", "0", "]", "\n", "\n", "return", "py_metrics_ops", ".", "motion_metrics", "(", "\n", "config", "=", "self", ".", "_metrics_config", ".", "SerializeToString", "(", ")", ",", "\n", "prediction_trajectory", "=", "prediction_trajectory", ",", "\n", "prediction_score", "=", "prediction_score", ",", "\n", "ground_truth_trajectory", "=", "ground_truth_trajectory", ",", "\n", "ground_truth_is_valid", "=", "ground_truth_is_valid", ",", "\n", "prediction_ground_truth_indices", "=", "tf", ".", "zeros", "(", "[", "batch_size", ",", "1", ",", "1", "]", ",", "dtype", "=", "tf", ".", "int64", ")", ",", "\n", "prediction_ground_truth_indices_mask", "=", "tf", ".", "ones", "(", "[", "batch_size", ",", "1", ",", "1", "]", ",", "dtype", "=", "tf", ".", "bool", ")", ",", "\n", "object_type", "=", "object_type", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.None.metrics._default_metrics_config": [[19, 49], ["waymo_open_dataset.protos.motion_metrics_pb2.MotionMetricsConfig", "google.protobuf.text_format.Parse"], "function", ["None"], ["def", "_default_metrics_config", "(", ")", ":", "\n", "  ", "config", "=", "motion_metrics_pb2", ".", "MotionMetricsConfig", "(", ")", "\n", "config_text", "=", "\"\"\"\n  track_steps_per_second: 10\n  prediction_steps_per_second: 2\n  track_history_samples: 10\n  track_future_samples: 80\n  speed_lower_bound: 1.4\n  speed_upper_bound: 11.0\n  speed_scale_lower: 0.5\n  speed_scale_upper: 1.0\n  step_configurations {\n    measurement_step: 5\n    lateral_miss_threshold: 1.0\n    longitudinal_miss_threshold: 2.0\n  }\n  step_configurations {\n    measurement_step: 9\n    lateral_miss_threshold: 1.8\n    longitudinal_miss_threshold: 3.6\n  }\n  step_configurations {\n    measurement_step: 15\n    lateral_miss_threshold: 3.0\n    longitudinal_miss_threshold: 6.0\n  }\n  max_predictions: 6\n  \"\"\"", "\n", "text_format", ".", "Parse", "(", "config_text", ",", "config", ")", "\n", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.eval.evaluate": [[17, 46], ["train.load_model", "utils.load_config_data", "utils.DotDict", "utils.DotDict", "waymo_open_dataset.metrics.python.config_util_py.get_breakdown_names_from_motion_config", "train.load_model.motion_metrics.reset_states", "enumerate", "train.load_model.motion_metrics.result", "enumerate", "numpy.mean", "print", "print", "int", "dataset.get_cyclist_dataset", "train.load_model.test_step", "enumerate", "numpy.mean", "dataset.get_ped_dataset", "print", "print", "dataset.get_veh_dataset", "dataset.get_dataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_cyclist_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.test_step", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_ped_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_veh_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset"], ["def", "evaluate", "(", "weights_file", ",", "experiment_file", "=", "\"c8.yaml\"", ",", "eval_file_pattern", "=", "'drive/MyDrive/Motion/validation/images-00000-of-00150'", ")", ":", "\n", "  ", "model", "=", "load_model", "(", "weights_file", ",", "experiment_file", ")", "\n", "cfg", "=", "load_config_data", "(", "experiment_file", ")", "\n", "train_params", "=", "DotDict", "(", "cfg", ".", "train_params", ")", "\n", "model_params", "=", "DotDict", "(", "cfg", ".", "model_params", ")", "\n", "batch_size", "=", "int", "(", "train_params", ".", "eval_batch_size", ")", "if", "train_params", ".", "eval_batch_size", "else", "32", "\n", "if", "train_params", ".", "cyclist", ":", "\n", "    ", "dataset", "=", "get_cyclist_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "elif", "train_params", ".", "ped", ":", "\n", "    ", "dataset", "=", "get_ped_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "elif", "train_params", ".", "veh", ":", "\n", "    ", "dataset", "=", "get_veh_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "else", ":", "\n", "    ", "dataset", "=", "get_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "metric_names", "=", "config_util", ".", "get_breakdown_names_from_motion_config", "(", "\n", "model", ".", "metrics_config", ")", "\n", "model", ".", "motion_metrics", ".", "reset_states", "(", ")", "\n", "for", "step", ",", "batch", "in", "enumerate", "(", "dataset", ")", ":", "\n", "    ", "if", "step", "%", "100", "==", "0", ":", "\n", "      ", "print", "(", "\"step\"", ",", "step", ")", "\n", "", "model", ".", "test_step", "(", "batch", ")", "\n", "", "metric_values", "=", "model", ".", "motion_metrics", ".", "result", "(", ")", "\n", "for", "i", ",", "m", "in", "enumerate", "(", "\n", "[", "'min_ade'", ",", "'min_fde'", ",", "'miss_rate'", ",", "'overlap_rate'", ",", "'map'", "]", ")", ":", "\n", "    ", "for", "j", ",", "n", "in", "enumerate", "(", "metric_names", ")", ":", "\n", "        ", "print", "(", "'{}/{}: {}'", ".", "format", "(", "m", ",", "n", ",", "metric_values", "[", "i", ",", "j", "]", ")", ")", "\n", "", "", "map_average", "=", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "0", ":", "9", "]", ")", "\n", "print", "(", "\"map_average\"", ",", "map_average", ")", "\n", "print", "(", "\"cyc_map_average\"", ",", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "6", ":", "9", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.eval.display_mAP": [[47, 55], ["numpy.mean", "numpy.mean", "numpy.mean", "print", "print", "print", "numpy.array"], "function", ["None"], ["", "def", "display_mAP", "(", "metric_values", ")", ":", "\n", "  ", "mAP_veh", "=", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "0", ":", "3", "]", ")", "\n", "mAP_ped", "=", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "3", ":", "6", "]", ")", "\n", "mAP_cyc", "=", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "6", ":", "]", ")", "\n", "print", "(", "\"map/TYPE_VEHICLE\"", ",", "mAP_veh", ")", "\n", "print", "(", "\"map/TYPE_PEDESTRIAN\"", ",", "mAP_ped", ")", "\n", "print", "(", "\"map/TYPE_CYCLIST\"", ",", "mAP_cyc", ")", "\n", "return", "np", ".", "array", "(", "[", "mAP_veh", ",", "mAP_ped", ",", "mAP_cyc", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.eval.dmAP_evaluate": [[57, 102], ["train.load_model", "dataset.get_deterministic_dataset", "waymo_open_dataset.metrics.python.config_util_py.get_breakdown_names_from_motion_config", "train.load_model.motion_metrics.reset_states", "train.load_model.loss_tracker.reset_states", "train.load_model.conf_loss_tracker.reset_states", "metrics.MotionMetrics", "metrics.MotionMetrics", "tensorflow.keras.metrics.Mean", "tensorflow.keras.metrics.Mean", "tensorflow.keras.metrics.Mean", "tensorflow.keras.metrics.Mean", "enumerate", "train.load_model.motion_metrics.result", "metrics.MotionMetrics.result", "metrics.MotionMetrics.result", "print", "eval.display_mAP", "print", "eval.display_mAP", "print", "eval.display_mAP", "train.load_model.conf_loss_tracker.result().numpy", "tf.keras.metrics.Mean.result().numpy", "print", "print", "print", "print", "print", "print", "print", "metrics._default_metrics_config", "metrics._default_metrics_config", "train.load_model.dmAP_step", "train.load_model.loss_tracker.result().numpy", "tf.keras.metrics.Mean.result().numpy", "tf.keras.metrics.Mean.result().numpy", "train.load_model.loss_tracker.result", "train.load_model.conf_loss_tracker.result", "tf.keras.metrics.Mean.result().numpy", "tf.keras.metrics.Mean.result().numpy", "tf.keras.metrics.Mean.result().numpy", "tf.keras.metrics.Mean.result().numpy", "train.load_model.conf_loss_tracker.result", "tf.keras.metrics.Mean.result", "train.load_model.loss_tracker.result", "tf.keras.metrics.Mean.result", "tf.keras.metrics.Mean.result", "tf.keras.metrics.Mean.result", "tf.keras.metrics.Mean.result", "tf.keras.metrics.Mean.result", "tf.keras.metrics.Mean.result"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_deterministic_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.None.eval.display_mAP", "home.repos.pwc.inspect_result.david9dragon9_air.None.eval.display_mAP", "home.repos.pwc.inspect_result.david9dragon9_air.None.eval.display_mAP", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics._default_metrics_config", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics._default_metrics_config", "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.dmAP_step", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result"], ["", "def", "dmAP_evaluate", "(", "weights_file", ",", "beta", ",", "gamma", ",", "experiment_file", "=", "\"moe_c16_2nd.yaml\"", ",", "eval_file_pattern", "=", "'drive/MyDrive/Motion/validation/images-00000-of-00150'", ")", ":", "\n", "  ", "model", "=", "load_model", "(", "weights_file", ",", "experiment_file", ")", "\n", "dataset", "=", "get_deterministic_dataset", "(", "eval_file_pattern", ")", "\n", "metric_names", "=", "config_util", ".", "get_breakdown_names_from_motion_config", "(", "\n", "model", ".", "metrics_config", ")", "\n", "model", ".", "motion_metrics", ".", "reset_states", "(", ")", "\n", "model", ".", "loss_tracker", ".", "reset_states", "(", ")", "\n", "model", ".", "conf_loss_tracker", ".", "reset_states", "(", ")", "\n", "cls_motion_metrics", "=", "MotionMetrics", "(", "_default_metrics_config", "(", ")", ")", "\n", "reg_motion_metrics", "=", "MotionMetrics", "(", "_default_metrics_config", "(", ")", ")", "\n", "cls_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'cls_loss'", ")", "\n", "cls_conf_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'cls_conf_loss'", ")", "\n", "reg_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'reg_loss'", ")", "\n", "reg_conf_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'reg_conf_loss'", ")", "\n", "for", "step", ",", "batch", "in", "enumerate", "(", "dataset", ")", ":", "\n", "    ", "model", ".", "dmAP_step", "(", "batch", ",", "cls_motion_metrics", ",", "reg_motion_metrics", ",", "cls_loss_tracker", ",", "cls_conf_loss_tracker", ",", "reg_loss_tracker", ",", "reg_conf_loss_tracker", ",", "beta", "=", "beta", ",", "gamma", "=", "gamma", ")", "\n", "", "metric_values", "=", "model", ".", "motion_metrics", ".", "result", "(", ")", "\n", "cls_metric_values", "=", "cls_motion_metrics", ".", "result", "(", ")", "\n", "reg_metric_values", "=", "reg_motion_metrics", ".", "result", "(", ")", "\n", "\n", "print", "(", "\"default metric_values\"", ")", "\n", "base_mAPs", "=", "display_mAP", "(", "metric_values", ")", "\n", "\n", "print", "(", "\"cls metric values\"", ")", "\n", "cls_mAPs", "=", "display_mAP", "(", "cls_metric_values", ")", "\n", "\n", "print", "(", "\"reg metric values\"", ")", "\n", "reg_mAPs", "=", "display_mAP", "(", "reg_metric_values", ")", "\n", "\n", "base_conf_loss", "=", "model", ".", "conf_loss_tracker", ".", "result", "(", ")", ".", "numpy", "(", ")", "\n", "base_reg_loss", "=", "model", ".", "loss_tracker", ".", "result", "(", ")", ".", "numpy", "(", ")", "-", "base_conf_loss", "\n", "cls_conf_loss", "=", "cls_conf_loss_tracker", ".", "result", "(", ")", ".", "numpy", "(", ")", "\n", "reg_reg_loss", "=", "reg_loss_tracker", ".", "result", "(", ")", ".", "numpy", "(", ")", "-", "reg_conf_loss_tracker", ".", "result", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "print", "(", "\"multi_path_loss:\"", ",", "model", ".", "loss_tracker", ".", "result", "(", ")", ")", "\n", "print", "(", "\"conf_loss:\"", ",", "model", ".", "conf_loss_tracker", ".", "result", "(", ")", ")", "\n", "print", "(", "\"cls_loss:\"", ",", "cls_loss_tracker", ".", "result", "(", ")", ".", "numpy", "(", ")", ")", "\n", "print", "(", "\"cls_conf_loss\"", ",", "cls_conf_loss_tracker", ".", "result", "(", ")", ".", "numpy", "(", ")", ")", "\n", "print", "(", "\"reg_loss:\"", ",", "reg_loss_tracker", ".", "result", "(", ")", ".", "numpy", "(", ")", ")", "\n", "print", "(", "\"reg_conf_loss\"", ",", "reg_conf_loss_tracker", ".", "result", "(", ")", ".", "numpy", "(", ")", ")", "\n", "cls_delta", "=", "(", "cls_mAPs", "-", "base_mAPs", ")", "/", "(", "base_conf_loss", "-", "cls_conf_loss", ")", "\n", "reg_delta", "=", "(", "reg_mAPs", "-", "base_mAPs", ")", "/", "(", "base_reg_loss", "-", "reg_reg_loss", ")", "\n", "print", "(", "f\"cls_delta:{cls_delta}\\nreg_delta: {reg_delta}\"", ")", "\n", "\n", "return", "cls_delta", ",", "reg_delta", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.None.train.load_model": [[12, 66], ["utils.load_cnn_model", "utils.load_config_data", "utils.DotDict", "utils.DotDict", "numpy.load", "numpy.load", "numpy.load", "len", "len", "len", "model.MOEModelWithVariableClusters", "tensorflow.keras.experimental.CosineDecay", "tensorflow.keras.optimizers.Adam", "tensorflow.keras.losses.MeanSquaredError", "tensorflow.keras.metrics.Mean", "tensorflow.keras.metrics.Mean", "metrics._default_metrics_config", "metrics.MotionMetrics", "waymo_open_dataset.metrics.python.config_util_py.get_breakdown_names_from_motion_config", "loss.MultiModalLoss", "numpy.load", "numpy.load", "numpy.load", "loss.MTMPLoss", "model.MOEModelWithVariableClusters.compile", "print", "utils.load_cnn_model.load_weights", "print", "float", "int", "float", "float", "float", "float", "dataset.get_dataset", "model.MOEModelWithVariableClusters.fit", "model.MOEModelWithVariableClusters.load_weights", "float", "dataset.get_dataset.take"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_cnn_model", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics._default_metrics_config", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.compile", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset"], ["def", "load_model", "(", "weights_file", "=", "None", ",", "experiment_name", "=", "'c8.yaml'", ")", ":", "\n", "  ", "backbone", "=", "load_cnn_model", "(", ")", "\n", "cfg", "=", "load_config_data", "(", "experiment_name", ")", "\n", "train_params", "=", "DotDict", "(", "cfg", ".", "train_params", ")", "\n", "model_params", "=", "DotDict", "(", "cfg", ".", "model_params", ")", "\n", "if", "model_params", ".", "backbone_weights", "and", "not", "weights_file", ":", "\n", "    ", "print", "(", "f\"loading backbone weights from {model_params.backbone_weights}...\"", ")", "\n", "backbone", ".", "load_weights", "(", "model_params", ".", "backbone_weights", ")", "\n", "print", "(", "f\"done loading!\"", ")", "\n", "", "if", "model_params", ".", "freeze_backbone", "==", "\"partial\"", ":", "\n", "    ", "for", "layer", "in", "backbone", ".", "layers", ":", "\n", "      ", "if", "layer", ".", "name", "==", "'block2a_dwconv_pad'", ":", "\n", "        ", "break", "\n", "", "layer", ".", "trainable", "=", "False", "\n", "", "", "elif", "model_params", ".", "freeze_backbone", ":", "\n", "    ", "backbone", ".", "trainable", "=", "False", "\n", "", "num_ps_units", "=", "train_params", ".", "num_ps_units", "if", "\"num_ps_units\"", "in", "train_params", "else", "None", "\n", "num_future_steps", "=", "80", "\n", "veh_centroids", "=", "np", ".", "load", "(", "model_params", ".", "veh_centroids", ")", "\n", "ped_centroids", "=", "np", ".", "load", "(", "model_params", ".", "ped_centroids", ")", "\n", "cyc_centroids", "=", "np", ".", "load", "(", "model_params", ".", "cyc_centroids", ")", "\n", "veh_modes", "=", "len", "(", "veh_centroids", ")", "\n", "ped_modes", "=", "len", "(", "ped_centroids", ")", "\n", "cyc_modes", "=", "len", "(", "cyc_centroids", ")", "\n", "num_knots", "=", "model_params", ".", "num_knots", "if", "model_params", ".", "num_knots", "is", "not", "None", "else", "8", "\n", "dropout", "=", "model_params", ".", "dropout", "if", "model_params", ".", "dropout", "is", "not", "None", "else", "0.", "\n", "model", "=", "MOEModelWithVariableClusters", "(", "80", ",", "backbone", ",", "num_modes", "=", "model_params", ".", "num_modes", ",", "num_knots", "=", "num_knots", ",", "veh_modes", "=", "veh_modes", ",", "ped_modes", "=", "ped_modes", ",", "cyc_modes", "=", "cyc_modes", ",", "loss_type", "=", "'multi_path_loss'", ",", "num_ps_units", "=", "num_ps_units", ",", "dropout", "=", "dropout", ")", "\n", "lr_schedule", "=", "tf", ".", "keras", ".", "experimental", ".", "CosineDecay", "(", "float", "(", "train_params", ".", "initial_lr", ")", ",", "int", "(", "train_params", ".", "steps", ")", ",", "alpha", "=", "float", "(", "train_params", ".", "alpha", ")", ")", "\n", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", "learning_rate", "=", "lr_schedule", ")", "\n", "loss_fn", "=", "tf", ".", "keras", ".", "losses", ".", "MeanSquaredError", "(", ")", "\n", "loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'loss'", ")", "\n", "multi_modal_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'mm_loss'", ")", "\n", "metrics_config", "=", "_default_metrics_config", "(", ")", "\n", "motion_metrics", "=", "MotionMetrics", "(", "metrics_config", ")", "\n", "metric_names", "=", "config_util", ".", "get_breakdown_names_from_motion_config", "(", "\n", "metrics_config", ")", "\n", "multi_modal_loss", "=", "MultiModalLoss", "(", "num_future_steps", "=", "num_future_steps", ")", "\n", "veh_centroids", "=", "np", ".", "load", "(", "model_params", ".", "veh_centroids", ")", "\n", "ped_centroids", "=", "np", ".", "load", "(", "model_params", ".", "ped_centroids", ")", "\n", "cyc_centroids", "=", "np", ".", "load", "(", "model_params", ".", "cyc_centroids", ")", "\n", "cls_weight", "=", "float", "(", "model_params", ".", "cls_weight", ")", "if", "model_params", ".", "cls_weight", "is", "not", "None", "else", "1.0", "\n", "reg_weight", "=", "float", "(", "model_params", ".", "reg_weight", ")", "if", "model_params", ".", "reg_weight", "is", "not", "None", "else", "1.0", "\n", "ped_weight", "=", "float", "(", "model_params", ".", "ped_weight", ")", "if", "model_params", ".", "ped_weight", "is", "not", "None", "else", "1.0", "\n", "cyc_weight", "=", "float", "(", "model_params", ".", "cyc_weight", ")", "if", "model_params", ".", "cyc_weight", "is", "not", "None", "else", "1.0", "\n", "multi_path_loss", "=", "MTMPLoss", "(", "veh_centroids", ",", "ped_centroids", ",", "cyc_centroids", ",", "cls_weight", ",", "reg_weight", ",", "ped_weight", ",", "cyc_weight", ",", "num_future_steps", ")", "\n", "model", ".", "compile", "(", "optimizer", ",", "multi_path_loss", ",", "multi_modal_loss", ",", "loss_tracker", ",", "multi_modal_loss_tracker", ",", "motion_metrics", ",", "metrics_config", ")", "\n", "\n", "if", "weights_file", ":", "\n", "    ", "eval_file_pattern", "=", "train_params", ".", "eval_file_pattern", "\n", "eval_dataset", "=", "get_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "1", ")", "\n", "model", ".", "fit", "(", "eval_dataset", ".", "take", "(", "1", ")", ",", "epochs", "=", "1", ")", "\n", "model", ".", "load_weights", "(", "weights_file", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.train.train": [[67, 117], ["utils.load_config_data", "utils.DotDict", "utils.DotDict", "pprint.pprint", "pprint.pprint", "train.load_model", "load_model.save_weights", "int", "dataset.get_cyclist_dataset", "dataset.get_cyclist_dataset", "int", "tensorflow.keras.callbacks.ModelCheckpoint", "utils.LRRecorder", "load_model.fit", "dataset.get_ped_dataset", "dataset.get_ped_dataset", "dataset.get_veh_dataset", "dataset.get_veh_dataset", "dataset.get_dataset", "dataset.get_weighted_dataset", "dataset.get_dataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_cyclist_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_cyclist_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_ped_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_ped_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_veh_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_veh_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_weighted_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset"], ["", "def", "train", "(", "experiment_name", "=", "'c8.yaml'", ")", ":", "\n", "  ", "cfg", "=", "load_config_data", "(", "experiment_name", ")", "\n", "train_params", "=", "DotDict", "(", "cfg", ".", "train_params", ")", "\n", "model_params", "=", "DotDict", "(", "cfg", ".", "model_params", ")", "\n", "pprint", ".", "pprint", "(", "train_params", ")", "\n", "pprint", ".", "pprint", "(", "model_params", ")", "\n", "\n", "model", "=", "load_model", "(", "train_params", ".", "initial_weights_file", ",", "experiment_name", "=", "experiment_name", ")", "\n", "\n", "file_pattern", "=", "train_params", ".", "train_file_pattern", "\n", "batch_size", "=", "int", "(", "train_params", ".", "batch_size", ")", "if", "train_params", ".", "batch_size", "is", "not", "None", "else", "32", "\n", "if", "train_params", ".", "cyclist", ":", "\n", "    ", "dataset", "=", "get_cyclist_dataset", "(", "file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "train_params", ".", "ped", ":", "\n", "    ", "dataset", "=", "get_ped_dataset", "(", "file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "train_params", ".", "veh", ":", "\n", "    ", "dataset", "=", "get_veh_dataset", "(", "file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "train_params", ".", "weighted", ":", "\n", "    ", "dataset", "=", "get_weighted_dataset", "(", "file_pattern", ",", "train_params", ".", "validation_file_pattern", ",", "0.33", ",", "0.33", ",", "0.33", ",", "batch_size", ")", "\n", "", "else", ":", "\n", "    ", "dataset", "=", "get_dataset", "(", "file_pattern", ",", "batch_size", "=", "batch_size", ",", "filter_valid", "=", "True", ")", "\n", "\n", "", "eval_file_pattern", "=", "train_params", ".", "eval_file_pattern", "\n", "if", "train_params", ".", "cyclist", ":", "\n", "    ", "eval_dataset", "=", "get_cyclist_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "train_params", ".", "ped", ":", "\n", "    ", "eval_dataset", "=", "get_ped_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "train_params", ".", "veh", ":", "\n", "    ", "eval_dataset", "=", "get_veh_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "else", ":", "\n", "    ", "eval_dataset", "=", "get_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "\n", "", "epochs", "=", "train_params", ".", "epochs", "\n", "save_freq", "=", "\"epoch\"", "\n", "if", "train_params", ".", "save_freq", "!=", "\"epoch\"", ":", "\n", "    ", "save_freq", "=", "int", "(", "train_params", ".", "save_freq", ")", "\n", "\n", "", "filepath", "=", "train_params", ".", "model_file_pattern", "\n", "callbacks", "=", "[", "\n", "tf", ".", "keras", ".", "callbacks", ".", "ModelCheckpoint", "(", "\n", "filepath", ",", "monitor", "=", "'val_loss'", ",", "save_best_only", "=", "False", ",", "save_weights_only", "=", "True", ",", "mode", "=", "'auto'", ",", "save_freq", "=", "save_freq", ")", ",", "\n", "LRRecorder", "(", ")", "\n", "]", "\n", "try", ":", "\n", "    ", "model", ".", "fit", "(", "dataset", ",", "epochs", "=", "epochs", ",", "validation_data", "=", "eval_dataset", ",", "callbacks", "=", "callbacks", ")", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "    ", "return", "model", "\n", "", "model", ".", "save_weights", "(", "train_params", ".", "final_file", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.train.continue_train": [[118, 146], ["utils.load_config_data", "utils.DotDict", "utils.DotDict", "dataset.get_dataset", "dataset.get_dataset", "tensorflow.keras.optimizers.Adam", "model.compile", "model.fit", "model.save_weights", "int", "tensorflow.keras.callbacks.ModelCheckpoint", "utils.LRRecorder"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.compile"], ["", "def", "continue_train", "(", "model", ",", "experiment_name", ",", "initial_lr", ",", "epochs", "=", "20", ")", ":", "\n", "  ", "cfg", "=", "load_config_data", "(", "experiment_name", ")", "\n", "train_params", "=", "DotDict", "(", "cfg", ".", "train_params", ")", "\n", "model_params", "=", "DotDict", "(", "cfg", ".", "model_params", ")", "\n", "\n", "file_pattern", "=", "train_params", ".", "train_file_pattern", "\n", "dataset", "=", "get_dataset", "(", "file_pattern", ")", "\n", "eval_file_pattern", "=", "train_params", ".", "eval_file_pattern", "\n", "eval_dataset", "=", "get_dataset", "(", "eval_file_pattern", ")", "\n", "save_freq", "=", "\"epoch\"", "\n", "if", "train_params", ".", "save_freq", "!=", "\"epoch\"", ":", "\n", "    ", "save_freq", "=", "int", "(", "train_params", ".", "save_freq", ")", "\n", "\n", "", "filepath", "=", "train_params", ".", "model_file_pattern", "\n", "callbacks", "=", "[", "\n", "tf", ".", "keras", ".", "callbacks", ".", "ModelCheckpoint", "(", "\n", "filepath", ",", "\n", "monitor", "=", "'val_loss'", ",", "\n", "save_best_only", "=", "False", ",", "\n", "save_weights_only", "=", "True", ",", "\n", "mode", "=", "'auto'", ",", "\n", "save_freq", "=", "save_freq", ")", ",", "\n", "LRRecorder", "(", ")", ",", "\n", "]", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", "learning_rate", "=", "initial_lr", ")", "\n", "model", ".", "compile", "(", "optimizer", ",", "model", ".", "multi_path_loss", ",", "model", ".", "multi_modal_loss", ",", "model", ".", "loss_tracker", ",", "model", ".", "multi_modal_loss_tracker", ",", "model", ".", "motion_metrics", ",", "model", ".", "metrics_config", ")", "\n", "model", ".", "fit", "(", "dataset", ",", "epochs", "=", "epochs", ",", "validation_data", "=", "eval_dataset", ",", "callbacks", "=", "callbacks", ")", "\n", "model", ".", "save_weights", "(", "train_params", ".", "final_file", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._parse_common": [[104, 163], ["tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat"], "function", ["None"], ["def", "_parse_common", "(", "decoded_example", ")", ":", "\n", "  ", "scenario_id", "=", "decoded_example", "[", "'scenario/id'", "]", "# [1]", "\n", "object_id", "=", "decoded_example", "[", "'state/id'", "]", "# [1]", "\n", "\n", "x", "=", "decoded_example", "[", "'state/current/x'", "]", "\n", "y", "=", "decoded_example", "[", "'state/current/y'", "]", "\n", "yaw", "=", "decoded_example", "[", "'state/current/bbox_yaw'", "]", "\n", "\n", "past_states", "=", "tf", ".", "stack", "(", "[", "\n", "decoded_example", "[", "'state/past/x'", "]", ",", "\n", "decoded_example", "[", "'state/past/y'", "]", ",", "\n", "decoded_example", "[", "'state/past/length'", "]", ",", "\n", "decoded_example", "[", "'state/past/width'", "]", ",", "\n", "decoded_example", "[", "'state/past/bbox_yaw'", "]", ",", "\n", "decoded_example", "[", "'state/past/velocity_x'", "]", ",", "\n", "decoded_example", "[", "'state/past/velocity_y'", "]", "\n", "]", ",", "-", "1", ")", "\n", "\n", "cur_states", "=", "tf", ".", "stack", "(", "[", "\n", "decoded_example", "[", "'state/current/x'", "]", ",", "\n", "decoded_example", "[", "'state/current/y'", "]", ",", "\n", "decoded_example", "[", "'state/current/length'", "]", ",", "\n", "decoded_example", "[", "'state/current/width'", "]", ",", "\n", "decoded_example", "[", "'state/current/bbox_yaw'", "]", ",", "\n", "decoded_example", "[", "'state/current/velocity_x'", "]", ",", "\n", "decoded_example", "[", "'state/current/velocity_y'", "]", "\n", "]", ",", "-", "1", ")", "\n", "\n", "input_states", "=", "tf", ".", "concat", "(", "[", "past_states", ",", "cur_states", "]", ",", "1", ")", "[", "...", ",", ":", "7", "]", "\n", "\n", "future_states", "=", "tf", ".", "stack", "(", "[", "\n", "decoded_example", "[", "'state/future/x'", "]", ",", "\n", "decoded_example", "[", "'state/future/y'", "]", ",", "\n", "decoded_example", "[", "'state/future/length'", "]", ",", "\n", "decoded_example", "[", "'state/future/width'", "]", ",", "\n", "decoded_example", "[", "'state/future/bbox_yaw'", "]", ",", "\n", "decoded_example", "[", "'state/future/velocity_x'", "]", ",", "\n", "decoded_example", "[", "'state/future/velocity_y'", "]", "\n", "]", ",", "-", "1", ")", "\n", "\n", "gt_future_states", "=", "tf", ".", "concat", "(", "[", "past_states", ",", "cur_states", ",", "future_states", "]", ",", "1", ")", "\n", "past_is_valid", "=", "decoded_example", "[", "'state/past/valid'", "]", ">", "0", "\n", "current_is_valid", "=", "decoded_example", "[", "'state/current/valid'", "]", ">", "0", "\n", "future_is_valid", "=", "decoded_example", "[", "'state/future/valid'", "]", ">", "0", "\n", "gt_future_is_valid", "=", "tf", ".", "concat", "(", "\n", "[", "past_is_valid", ",", "current_is_valid", ",", "future_is_valid", "]", ",", "1", ")", "\n", "\n", "inputs", "=", "{", "\n", "'is_sdc'", ":", "decoded_example", "[", "'state/is_sdc'", "]", ",", "# (1,)", "\n", "'gt_future_states'", ":", "gt_future_states", ",", "# (1, 91, 7)", "\n", "'gt_future_is_valid'", ":", "gt_future_is_valid", ",", "# (1, 91)", "\n", "'past_states'", ":", "past_states", ",", "# (1, 10, 7)", "\n", "'object_type'", ":", "decoded_example", "[", "'state/type'", "]", ",", "# (1, )", "\n", "'x'", ":", "x", ",", "# (1,)", "\n", "'y'", ":", "y", ",", "# (1, )", "\n", "'yaw'", ":", "yaw", ",", "# (1, )", "\n", "'scenario_id'", ":", "scenario_id", ",", "\n", "'object_id'", ":", "object_id", "}", "\n", "return", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._parse": [[165, 171], ["tensorflow.io.parse_single_example", "dataset._parse_common", "tensorflow.image.decode_jpeg", "tensorflow.sparse.to_dense"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._parse_common"], ["", "def", "_parse", "(", "value", ")", ":", "\n", "  ", "decoded_example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "value", ",", "e_features_description", ")", "\n", "inputs", "=", "_parse_common", "(", "decoded_example", ")", "\n", "encoded", "=", "tf", ".", "sparse", ".", "to_dense", "(", "decoded_example", "[", "'image/encoded'", "]", ")", "[", "0", "]", "\n", "inputs", "[", "'image'", "]", "=", "tf", ".", "image", ".", "decode_jpeg", "(", "encoded", ")", "\n", "return", "inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._parse_without_image": [[172, 175], ["tensorflow.io.parse_single_example", "dataset._parse_common"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._parse_common"], ["", "def", "_parse_without_image", "(", "value", ")", ":", "\n", "  ", "decoded_example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "value", ",", "e_features_description", ")", "\n", "return", "_parse_common", "(", "decoded_example", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.is_valid": [[176, 183], ["tensorflow.cast", "tensorflow.reduce_sum", "tensorflow.reduce_max"], "function", ["None"], ["", "def", "is_valid", "(", "x", ")", ":", "\n", "  ", "avails_float", "=", "tf", ".", "cast", "(", "x", "[", "\"gt_future_is_valid\"", "]", ",", "tf", ".", "float32", ")", "# (1, 91)", "\n", "dist", "=", "(", "x", "[", "\"gt_future_states\"", "]", "[", "0", ",", "12", ":", ",", "0", ":", "2", "]", "-", "x", "[", "\"gt_future_states\"", "]", "[", "0", ",", "11", ":", "90", ",", "0", ":", "2", "]", ")", "**", "2", "# (79, 2)", "\n", "dist", "=", "tf", ".", "reduce_sum", "(", "dist", ",", "axis", "=", "1", ")", "# (79,)", "\n", "dist", "*=", "avails_float", "[", "0", ",", "11", ":", "90", "]", "*", "avails_float", "[", "0", ",", "12", ":", "]", "# (79,)", "\n", "dist", "=", "tf", ".", "reduce_max", "(", "dist", ",", "axis", "=", "0", ")", "# ()", "\n", "return", "dist", "<", "36", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_dataset": [[184, 192], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map", "dataset.filter.batch", "dataset.filter.filter", "tf.data.Dataset.list_files.interleave", "dataset.is_valid", "tensorflow.data.TFRecordDataset().prefetch", "tensorflow.data.TFRecordDataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.is_valid"], ["", "def", "get_dataset", "(", "file_pattern", ",", "batch_size", "=", "32", ",", "filter_valid", "=", "False", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "if", "filter_valid", ":", "\n", "    ", "dataset", "=", "dataset", ".", "filter", "(", "lambda", "x", ":", "is_valid", "(", "x", ")", ")", "\n", "", "return", "dataset", ".", "batch", "(", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._cyc_only": [[193, 196], ["tensorflow.io.parse_single_example"], "function", ["None"], ["", "def", "_cyc_only", "(", "data", ")", ":", "\n", "  ", "example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "ot_feature_desc", ")", "\n", "return", "example", "[", "'state/type'", "]", "[", "0", "]", "==", "3.", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_cyclist_dataset": [[197, 205], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map", "dataset.filter.batch", "dataset.filter.filter", "tf.data.Dataset.list_files.interleave", "dataset.is_valid", "tensorflow.data.TFRecordDataset().prefetch().filter", "tensorflow.data.TFRecordDataset().prefetch", "dataset._cyc_only", "tensorflow.data.TFRecordDataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.is_valid", "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._cyc_only"], ["", "def", "get_cyclist_dataset", "(", "file_pattern", ",", "batch_size", "=", "32", ",", "filter_valid", "=", "False", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ".", "filter", "(", "lambda", "y", ":", "_cyc_only", "(", "y", ")", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "if", "filter_valid", ":", "\n", "      ", "dataset", "=", "dataset", ".", "filter", "(", "lambda", "x", ":", "is_valid", "(", "x", ")", ")", "\n", "", "return", "dataset", ".", "batch", "(", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_eval_dataset": [[206, 216], ["dataset.get_cyclist_dataset", "dataset.get_ped_dataset", "dataset.get_veh_dataset", "dataset.get_dataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_cyclist_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_ped_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_veh_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset"], ["", "def", "get_eval_dataset", "(", "data_type", ",", "eval_file_pattern", ",", "batch_size", "=", "32", ")", ":", "\n", "  ", "if", "data_type", "==", "\"cyclist\"", ":", "\n", "    ", "dataset", "=", "get_cyclist_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "elif", "data_type", "==", "\"ped\"", ":", "\n", "    ", "dataset", "=", "get_ped_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "elif", "data_type", "==", "\"veh\"", ":", "\n", "    ", "dataset", "=", "get_veh_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "else", ":", "\n", "    ", "dataset", "=", "get_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._ped_only": [[221, 224], ["tensorflow.io.parse_single_example"], "function", ["None"], ["def", "_ped_only", "(", "data", ")", ":", "\n", "  ", "example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "ot_feature_desc", ")", "\n", "return", "example", "[", "'state/type'", "]", "[", "0", "]", "==", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_ped_dataset": [[225, 233], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map", "dataset.filter.batch", "dataset.filter.filter", "tf.data.Dataset.list_files.interleave", "dataset.is_valid", "tensorflow.data.TFRecordDataset().prefetch().filter", "tensorflow.data.TFRecordDataset().prefetch", "dataset._ped_only", "tensorflow.data.TFRecordDataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.is_valid", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._ped_only"], ["", "def", "get_ped_dataset", "(", "file_pattern", ",", "batch_size", "=", "32", ",", "filter_valid", "=", "False", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ".", "filter", "(", "lambda", "y", ":", "_ped_only", "(", "y", ")", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "if", "filter_valid", ":", "\n", "      ", "dataset", "=", "dataset", ".", "filter", "(", "lambda", "x", ":", "is_valid", "(", "x", ")", ")", "\n", "", "return", "dataset", ".", "batch", "(", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._veh_only": [[234, 237], ["tensorflow.io.parse_single_example"], "function", ["None"], ["", "def", "_veh_only", "(", "data", ")", ":", "\n", "  ", "example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "ot_feature_desc", ")", "\n", "return", "example", "[", "'state/type'", "]", "[", "0", "]", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_veh_dataset": [[238, 246], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map", "dataset.filter.batch", "dataset.filter.filter", "tf.data.Dataset.list_files.interleave", "dataset.is_valid", "tensorflow.data.TFRecordDataset().prefetch().filter", "tensorflow.data.TFRecordDataset().prefetch", "dataset._veh_only", "tensorflow.data.TFRecordDataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.is_valid", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._veh_only"], ["", "def", "get_veh_dataset", "(", "file_pattern", ",", "batch_size", "=", "32", ",", "filter_valid", "=", "False", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ".", "filter", "(", "lambda", "y", ":", "_veh_only", "(", "y", ")", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "if", "filter_valid", ":", "\n", "    ", "dataset", "=", "dataset", ".", "filter", "(", "lambda", "x", ":", "is_valid", "(", "x", ")", ")", "\n", "", "return", "dataset", ".", "batch", "(", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_deterministic_dataset": [[247, 253], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map().batch", "tf.data.Dataset.list_files.interleave().map", "tf.data.Dataset.list_files.interleave", "tensorflow.data.TFRecordDataset().prefetch", "tensorflow.data.TFRecordDataset"], "function", ["None"], ["", "def", "get_deterministic_dataset", "(", "file_pattern", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ",", "shuffle", "=", "False", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ",", "cycle_length", "=", "1", ")", ".", "map", "(", "_parse", ")", ".", "batch", "(", "32", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_dataset_for_clustering": [[254, 260], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map().batch", "tf.data.Dataset.list_files.interleave().map", "tf.data.Dataset.list_files.interleave", "tensorflow.data.TFRecordDataset().prefetch", "tensorflow.data.TFRecordDataset"], "function", ["None"], ["", "def", "get_dataset_for_clustering", "(", "file_pattern", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse_without_image", ",", "num_parallel_calls", "=", "8", ")", ".", "batch", "(", "32", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset._object_type_only": [[261, 264], ["tensorflow.io.parse_single_example"], "function", ["None"], ["", "def", "_object_type_only", "(", "data", ",", "object_type", ")", ":", "\n", "  ", "example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "ot_feature_desc", ")", "\n", "return", "example", "[", "'state/type'", "]", "[", "0", "]", "==", "object_type", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_extended_dataset": [[265, 273], ["tensorflow.data.Dataset.list_files", "tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.concatenate().shuffle", "train_file_dataset.concatenate().shuffle.interleave().map", "tf.data.Dataset.list_files.concatenate", "train_file_dataset.concatenate().shuffle.interleave", "tensorflow.data.TFRecordDataset().prefetch().filter", "tensorflow.data.TFRecordDataset().prefetch", "dataset._object_type_only", "tensorflow.data.TFRecordDataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._object_type_only"], ["", "def", "get_extended_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "object_type", ")", ":", "\n", "  ", "train_file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "train_file_pattern", ")", "\n", "validation_file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "validation_file_pattern", ")", "\n", "combined_dataset", "=", "train_file_dataset", ".", "concatenate", "(", "validation_file_dataset", ")", ".", "shuffle", "(", "1100", ")", "\n", "dataset", "=", "combined_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ".", "filter", "(", "lambda", "y", ":", "_object_type_only", "(", "y", ",", "object_type", ")", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.combine_datasets": [[274, 280], ["veh_dataset.repeat.repeat", "ped_dataset.repeat.repeat", "cyc_dataset.repeat.repeat", "tensorflow.data.experimental.sample_from_datasets"], "function", ["None"], ["", "def", "combine_datasets", "(", "veh_dataset", ",", "ped_dataset", ",", "cyc_dataset", ",", "veh_val", ",", "ped_val", ",", "cyc_val", ")", ":", "\n", "  ", "veh_dataset", "=", "veh_dataset", ".", "repeat", "(", ")", "\n", "ped_dataset", "=", "ped_dataset", ".", "repeat", "(", ")", "\n", "cyc_dataset", "=", "cyc_dataset", ".", "repeat", "(", ")", "\n", "dataset", "=", "tf", ".", "data", ".", "experimental", ".", "sample_from_datasets", "(", "[", "veh_dataset", ",", "ped_dataset", ",", "cyc_dataset", "]", ",", "[", "veh_val", ",", "ped_val", ",", "cyc_val", "]", ")", "\n", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.dataset.get_weighted_dataset": [[281, 286], ["dataset.get_extended_dataset", "dataset.get_extended_dataset", "dataset.get_extended_dataset", "combine_datasets().batch", "dataset.combine_datasets"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_extended_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_extended_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_extended_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.combine_datasets"], ["", "def", "get_weighted_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "veh_val", ",", "ped_val", ",", "cyc_val", ",", "batch_size", "=", "32", ")", ":", "\n", "  ", "veh_dataset", "=", "get_extended_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "object_type", "=", "1", ")", "\n", "ped_dataset", "=", "get_extended_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "object_type", "=", "2", ")", "\n", "cyc_dataset", "=", "get_extended_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "object_type", "=", "3", ")", "\n", "return", "combine_datasets", "(", "veh_dataset", ",", "ped_dataset", ",", "cyc_dataset", ",", "veh_val", ",", "ped_val", ",", "cyc_val", ")", ".", "batch", "(", "batch_size", ")", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.None.loss.MultiModalLoss.__init__": [[5, 8], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["  ", "def", "__init__", "(", "self", ",", "num_future_steps", "=", "80", ",", "name", "=", "'multi_modal_loss'", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "name", "=", "name", ")", "\n", "self", ".", "num_future_steps", "=", "num_future_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.loss.MultiModalLoss.call": [[9, 38], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_sum", "len", "tensorflow.math.log", "tensorflow.math.reduce_logsumexp", "tensorflow.reduce_mean"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "gt", ",", "avails", ",", "pred", ",", "confidences", ",", "object_type", "=", "None", ",", "reduce_mean", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Call Arguments:\n      targets: (B, 80, 2)\n      pred: (B, 3, 80, 2)\n      confidences: (B, 3)\n      target_availabilities: (B, 80)\n    \n    Returns:\n      loss:\n        (1,) if reduce_mean\n        (B, 1) otherwise\n    \"\"\"", "\n", "assert", "len", "(", "pred", ".", "shape", ")", "==", "4", ",", "f\"expected 3D (MxTxC) array for pred, got {pred.shape}\"", "\n", "gt", "=", "tf", ".", "reshape", "(", "gt", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "2", "]", ")", "\n", "avails", "=", "tf", ".", "reshape", "(", "avails", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "1", "]", ")", "\n", "\n", "error", "=", "tf", ".", "reduce_sum", "(", "(", "(", "gt", "-", "pred", ")", "*", "avails", ")", "**", "2", ",", "axis", "=", "[", "2", ",", "3", "]", ")", "# Outputs:(B, 3)", "\n", "\n", "error", "=", "tf", ".", "math", ".", "log", "(", "confidences", "+", "1e-16", ")", "-", "0.5", "*", "error", "\n", "\n", "error", "=", "-", "tf", ".", "math", ".", "reduce_logsumexp", "(", "error", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "# (B, 1)", "\n", "\n", "error", "/=", "self", ".", "num_future_steps", "\n", "\n", "if", "reduce_mean", ":", "\n", "      ", "return", "tf", ".", "reduce_mean", "(", "error", ")", "\n", "", "else", ":", "\n", "      ", "return", "error", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.loss.MTMPLoss.__init__": [[40, 51], ["super().__init__", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "max", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["  ", "def", "__init__", "(", "self", ",", "veh_centroids", ",", "ped_centroids", ",", "cyc_centroids", ",", "cls_weight", ",", "reg_weight", ",", "ped_weight", "=", "1.", ",", "cyc_weight", "=", "1.", ",", "num_future_steps", "=", "80", ",", "name", "=", "'mtmp_loss'", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "name", "=", "name", ")", "\n", "self", ".", "veh_centroids", "=", "tf", ".", "convert_to_tensor", "(", "veh_centroids", ")", "\n", "self", ".", "ped_centroids", "=", "tf", ".", "convert_to_tensor", "(", "ped_centroids", ")", "\n", "self", ".", "cyc_centroids", "=", "tf", ".", "convert_to_tensor", "(", "cyc_centroids", ")", "\n", "self", ".", "cls_weight", "=", "cls_weight", "\n", "self", ".", "reg_weight", "=", "reg_weight", "\n", "self", ".", "ped_weight", "=", "ped_weight", "\n", "self", ".", "cyc_weight", "=", "cyc_weight", "\n", "self", ".", "num_future_steps", "=", "num_future_steps", "\n", "self", ".", "K", "=", "max", "(", "len", "(", "veh_centroids", ")", ",", "len", "(", "ped_centroids", ")", ",", "len", "(", "cyc_centroids", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.loss.MTMPLoss.call": [[52, 130], ["tensorflow.math.cos", "tensorflow.math.sin", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.stack", "tensorflow.reshape", "tensorflow.math.logical_not", "tensorflow.concat", "tensorflow.squeeze", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.argmin", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.argmin", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.argmin", "tensorflow.one_hot", "tensorflow.stack", "tensorflow.boolean_mask", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "len", "tensorflow.math.log", "tensorflow.math.logical_or", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.math.log", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "gt", ",", "avails", ",", "pred", ",", "confidences", ",", "x", ",", "y", ",", "yaw", ",", "object_type", ",", "reduce_mean", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Call Arguments:\n      targets: (B, 80, 2)\n      pred: (B, K, 80, 2)\n      confidences: (B, K)\n      target_availabilities: (B, 80)\n      x: (B, 1)\n      y: (B, 1)\n      yaw: (B, 1)\n    \n    Returns:\n      loss:\n        (1,) if reduce_mean\n        (B, 1) otherwise\n    \"\"\"", "\n", "assert", "len", "(", "pred", ".", "shape", ")", "==", "4", ",", "f\"expected 3D (MxTxC) array for pred, got {pred.shape}\"", "\n", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "# (B, 1)", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "# (B, 1)", "\n", "x_hat", "=", "gt", "[", ":", ",", ":", ",", "0", "]", "-", "x", "# (B, 80)", "\n", "y_hat", "=", "gt", "[", ":", ",", ":", ",", "1", "]", "-", "y", "# (B, 80)", "\n", "gt_ego_x", "=", "c", "*", "x_hat", "+", "s", "*", "y_hat", "# (B, 80)", "\n", "gt_ego_y", "=", "-", "s", "*", "x_hat", "+", "c", "*", "y_hat", "# (B, 80)", "\n", "\n", "gt", "=", "tf", ".", "reshape", "(", "gt", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "2", "]", ")", "\n", "avails", "=", "tf", ".", "reshape", "(", "avails", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "1", "]", ")", "\n", "error", "=", "tf", ".", "reduce_sum", "(", "(", "(", "gt", "-", "pred", ")", "*", "avails", ")", "**", "2", ",", "axis", "=", "[", "2", ",", "3", "]", ")", "# Outputs:(B, K)", "\n", "error", "=", "-", "self", ".", "cls_weight", "*", "tf", ".", "math", ".", "log", "(", "confidences", "+", "1e-16", ")", "+", "self", ".", "reg_weight", "*", "0.5", "*", "error", "\n", "conf_error", "=", "-", "self", ".", "cls_weight", "*", "tf", ".", "math", ".", "log", "(", "confidences", "+", "1e-16", ")", "\n", "\n", "gt_ego", "=", "tf", ".", "stack", "(", "[", "gt_ego_x", ",", "gt_ego_y", "]", ",", "axis", "=", "-", "1", ")", "# (B, 80, 2)", "\n", "# self.centroids has shape (K, 160)", "\n", "gt_ego", "=", "tf", ".", "reshape", "(", "gt_ego", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "2", "]", ")", "\n", "\n", "is_veh", "=", "object_type", "==", "1", "# object_type[:, 1] # (B, 1) object_type == 1", "\n", "is_ped", "=", "object_type", "==", "2", "# (B, 1)", "\n", "is_cyc", "=", "tf", ".", "math", ".", "logical_not", "(", "tf", ".", "math", ".", "logical_or", "(", "is_veh", ",", "is_ped", ")", ")", "\n", "object_type_mask", "=", "tf", ".", "concat", "(", "[", "is_veh", ",", "is_ped", ",", "is_cyc", "]", ",", "axis", "=", "-", "1", ")", "# (B, 3)", "\n", "\n", "object_type_weight", "=", "tf", ".", "squeeze", "(", "(", "tf", ".", "cast", "(", "is_veh", ",", "tf", ".", "float32", ")", "+", "tf", ".", "cast", "(", "is_ped", ",", "tf", ".", "float32", ")", "*", "self", ".", "ped_weight", "+", "tf", ".", "cast", "(", "is_cyc", ",", "tf", ".", "float32", ")", "*", "self", ".", "cyc_weight", ")", ",", "axis", "=", "1", ")", "# (B,)", "\n", "\n", "veh_centroids", "=", "tf", ".", "reshape", "(", "self", ".", "veh_centroids", ",", "[", "1", ",", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "distance", "=", "(", "(", "gt_ego", "[", ":", ",", ":", ",", "-", "80", ":", "]", "-", "veh_centroids", ")", "**", "2", ")", "*", "avails", "[", ":", ",", ":", ",", "-", "80", ":", "]", "# (B, K, 80, 2)", "\n", "distance", "=", "tf", ".", "reduce_sum", "(", "distance", ",", "[", "2", ",", "3", "]", ")", "# (B, K)", "\n", "veh_assignments", "=", "tf", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "veh_assignments_mask", "=", "tf", ".", "one_hot", "(", "veh_assignments", ",", "self", ".", "K", ")", "# (B, K)", "\n", "\n", "ped_centroids", "=", "tf", ".", "reshape", "(", "self", ".", "ped_centroids", ",", "[", "1", ",", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "distance", "=", "(", "(", "gt_ego", "[", ":", ",", ":", ",", "-", "80", ":", "]", "-", "ped_centroids", ")", "**", "2", ")", "*", "avails", "[", ":", ",", ":", ",", "-", "80", ":", "]", "# (B, K, 80, 2)", "\n", "distance", "=", "tf", ".", "reduce_sum", "(", "distance", ",", "[", "2", ",", "3", "]", ")", "# (B, K)", "\n", "ped_assignments", "=", "tf", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "ped_assignments_mask", "=", "tf", ".", "one_hot", "(", "ped_assignments", ",", "self", ".", "K", ")", "# (B, K)", "\n", "\n", "cyc_centroids", "=", "tf", ".", "reshape", "(", "self", ".", "cyc_centroids", ",", "[", "1", ",", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "distance", "=", "(", "(", "gt_ego", "[", ":", ",", ":", ",", "-", "80", ":", "]", "-", "cyc_centroids", ")", "**", "2", ")", "*", "avails", "[", ":", ",", ":", ",", "-", "80", ":", "]", "# (B, K, 80, 2)", "\n", "distance", "=", "tf", ".", "reduce_sum", "(", "distance", ",", "[", "2", ",", "3", "]", ")", "# (B, K)", "\n", "cyc_assignments", "=", "tf", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "cyc_assignments_mask", "=", "tf", ".", "one_hot", "(", "cyc_assignments", ",", "self", ".", "K", ")", "# (B, K)", "\n", "\n", "assignments_mask", "=", "tf", ".", "stack", "(", "[", "veh_assignments_mask", ",", "ped_assignments_mask", ",", "cyc_assignments_mask", "]", ",", "axis", "=", "1", ")", "\n", "assignments_mask", "=", "tf", ".", "boolean_mask", "(", "assignments_mask", ",", "object_type_mask", ")", "# (B, K)", "\n", "\n", "error", "=", "tf", ".", "cast", "(", "assignments_mask", ",", "tf", ".", "float32", ")", "*", "tf", ".", "cast", "(", "error", ",", "tf", ".", "float32", ")", "# (B, K)", "\n", "error", "=", "tf", ".", "reduce_sum", "(", "error", ",", "axis", "=", "1", ")", "\n", "\n", "error", "*=", "object_type_weight", "\n", "error", "/=", "self", ".", "num_future_steps", "\n", "\n", "conf_error", "=", "tf", ".", "cast", "(", "assignments_mask", ",", "tf", ".", "float32", ")", "*", "tf", ".", "cast", "(", "conf_error", ",", "tf", ".", "float32", ")", "# (B, K)", "\n", "conf_error", "=", "tf", ".", "reduce_sum", "(", "conf_error", ",", "axis", "=", "1", ")", "\n", "conf_error", "*=", "object_type_weight", "\n", "conf_error", "/=", "self", ".", "num_future_steps", "\n", "\n", "if", "reduce_mean", ":", "\n", "      ", "return", "tf", ".", "reduce_mean", "(", "error", ")", ",", "tf", ".", "reduce_mean", "(", "conf_error", ")", "\n", "", "else", ":", "\n", "      ", "return", "error", ",", "conf_error", ",", "assignments_mask", "", "", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.None.submission.eval_and_generate_submission": [[5, 37], ["waymo_open_dataset.protos.motion_submission_pb2.MotionChallengeSubmission", "enumerate", "model.predict_step", "trajectories.numpy.numpy", "confidences.numpy.numpy", "range", "print", "len", "[].numpy", "submission.scenario_predictions.add.single_predictions.predictions.add", "[].numpy().astype", "range", "motion_submission_pb2.MotionChallengeSubmission.scenario_predictions.add", "current_scenario_prediction.single_predictions.predictions.add.trajectories.add", "range", "trajectory.center_x.extend", "trajectory.center_y.extend", "[].numpy", "center_x.append", "center_y.append"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.predict_step"], ["def", "eval_and_generate_submission", "(", "model", ",", "eval_dataset", ",", "num_modes", "=", "6", ")", ":", "\n", "  ", "submission", "=", "motion_submission_pb2", ".", "MotionChallengeSubmission", "(", ")", "\n", "submission", ".", "submission_type", "=", "1", "\n", "current_scenario_id", "=", "\"\"", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "eval_dataset", ")", ":", "\n", "    ", "if", "i", "%", "100", "==", "0", ":", "\n", "      ", "print", "(", "i", ")", "\n", "", "trajectories", ",", "confidences", "=", "model", ".", "predict_step", "(", "batch", ")", "# (B, 3, 16, 2), (B, 3)", "\n", "trajectories", "=", "trajectories", ".", "numpy", "(", ")", "\n", "confidences", "=", "confidences", ".", "numpy", "(", ")", "\n", "for", "example_index", "in", "range", "(", "len", "(", "trajectories", ")", ")", ":", "\n", "      ", "example_scenario_id", "=", "batch", "[", "'scenario_id'", "]", "[", "example_index", "]", "[", "0", "]", ".", "numpy", "(", ")", "\n", "if", "example_scenario_id", "!=", "current_scenario_id", ":", "\n", "        ", "current_scenario_id", "=", "example_scenario_id", "\n", "current_scenario_prediction", "=", "submission", ".", "scenario_predictions", ".", "add", "(", ")", "\n", "current_scenario_prediction", ".", "scenario_id", "=", "example_scenario_id", "\n", "", "prediction", "=", "current_scenario_prediction", ".", "single_predictions", ".", "predictions", ".", "add", "(", ")", "# prediction is of type SingleObjectPrediction", "\n", "prediction", ".", "object_id", "=", "batch", "[", "'object_id'", "]", "[", "example_index", "]", "[", "0", "]", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "for", "mode", "in", "range", "(", "num_modes", ")", ":", "\n", "        ", "scored_trajectory", "=", "prediction", ".", "trajectories", ".", "add", "(", ")", "\n", "scored_trajectory", ".", "confidence", "=", "confidences", "[", "example_index", ",", "mode", "]", "\n", "center_x", "=", "[", "]", "\n", "center_y", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "16", ")", ":", "\n", "            ", "x", "=", "trajectories", "[", "example_index", ",", "mode", ",", "t", ",", "0", "]", "\n", "y", "=", "trajectories", "[", "example_index", ",", "mode", ",", "t", ",", "1", "]", "\n", "center_x", ".", "append", "(", "x", ")", "\n", "center_y", ".", "append", "(", "y", ")", "\n", "", "trajectory", "=", "scored_trajectory", ".", "trajectory", "\n", "trajectory", ".", "center_x", ".", "extend", "(", "center_x", ")", "\n", "trajectory", ".", "center_y", ".", "extend", "(", "center_y", ")", "\n", "", "", "", "return", "submission", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.submission.write_submission_to_file": [[38, 42], ["open", "open.write", "open.close", "submission.SerializeToString"], "function", ["None"], ["", "def", "write_submission_to_file", "(", "submission", ",", "output_filename", ")", ":", "\n", "  ", "f", "=", "open", "(", "output_filename", ",", "\"wb\"", ")", "\n", "f", ".", "write", "(", "submission", ".", "SerializeToString", "(", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.submission.combine_submission_bins": [[43, 63], ["waymo_open_dataset.protos.motion_submission_pb2.MotionChallengeSubmission", "scenario_id_to_sps.items", "waymo_open_dataset.protos.motion_submission_pb2.MotionChallengeSubmission", "motion_submission_pb2.MotionChallengeSubmission.scenario_predictions.add", "open", "f.write", "open", "motion_submission_pb2.MotionChallengeSubmission.ParseFromString", "submission.scenario_predictions.add.single_predictions.predictions.extend", "motion_submission_pb2.MotionChallengeSubmission.SerializeToString", "f.read", "scenario_id_to_sps[].append"], "function", ["None"], ["", "def", "combine_submission_bins", "(", "submission_files", ",", "output_bin", ")", ":", "\n", "  ", "scenario_id_to_sps", "=", "{", "}", "\n", "for", "submission_file", "in", "submission_files", ":", "\n", "    ", "submission", "=", "motion_submission_pb2", ".", "MotionChallengeSubmission", "(", ")", "\n", "with", "open", "(", "\"drive/MyDrive/Motion/submissions/\"", "+", "submission_file", ",", "\"rb\"", ")", "as", "f", ":", "\n", "      ", "submission", ".", "ParseFromString", "(", "f", ".", "read", "(", ")", ")", "\n", "", "for", "sp", "in", "submission", ".", "scenario_predictions", ":", "\n", "      ", "if", "sp", ".", "scenario_id", "in", "scenario_id_to_sps", ":", "\n", "        ", "scenario_id_to_sps", "[", "sp", ".", "scenario_id", "]", ".", "append", "(", "sp", ")", "\n", "", "else", ":", "\n", "        ", "scenario_id_to_sps", "[", "sp", ".", "scenario_id", "]", "=", "[", "sp", "]", "\n", "", "", "", "submission", "=", "motion_submission_pb2", ".", "MotionChallengeSubmission", "(", ")", "\n", "submission", ".", "submission_type", "=", "1", "\n", "for", "scenario_id", ",", "sps", "in", "scenario_id_to_sps", ".", "items", "(", ")", ":", "\n", "    ", "scenario_prediction", "=", "submission", ".", "scenario_predictions", ".", "add", "(", ")", "\n", "scenario_prediction", ".", "scenario_id", "=", "scenario_id", "\n", "for", "sp", "in", "sps", ":", "\n", "      ", "scenario_prediction", ".", "single_predictions", ".", "predictions", ".", "extend", "(", "sp", ".", "single_predictions", ".", "predictions", ")", "\n", "", "", "with", "open", "(", "\"drive/MyDrive/Motion/submissions/\"", "+", "output_bin", ",", "\"wb\"", ")", "as", "f", ":", "\n", "    ", "f", ".", "write", "(", "submission", ".", "SerializeToString", "(", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.Head.__init__": [[22, 29], ["super().__init__", "tensorflow.cast", "len", "tensorflow.keras.layers.Softmax", "tensorflow.convert_to_tensor"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["  ", "def", "__init__", "(", "self", ",", "centroids", ",", "num_knots", "=", "8", ",", "num_future_steps", "=", "80", ")", ":", "\n", "    ", "super", "(", "Head", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "centroids", "=", "tf", ".", "cast", "(", "tf", ".", "convert_to_tensor", "(", "centroids", ")", ",", "tf", ".", "float32", ")", "\n", "self", ".", "num_modes", "=", "len", "(", "centroids", ")", "\n", "self", ".", "num_knots", "=", "num_knots", "\n", "self", ".", "num_future_steps", "=", "num_future_steps", "\n", "self", ".", "softmax", "=", "tf", ".", "keras", ".", "layers", ".", "Softmax", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.Head.call": [[30, 66], ["tensorflow.math.cos", "tensorflow.math.sin", "tensorflow.reshape", "tensorflow.expand_dims", "tensorflow_graphics.math.interpolation.bspline.interpolate", "tensorflow.squeeze", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.stack", "tensorflow.reshape", "model.Head.softmax", "tensorflow.range"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "inputs", ",", "x", ",", "y", ",", "yaw", ",", "past_ego_x", "=", "None", ",", "past_ego_y", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Parameters:\n      inputs: (B, num_modes + num_modes*num_knots*2)\n      x: (B, 1)\n      past_ego_x: (B, 10)\n    Returns:\n      trajectories: (B, num_modes, num_future_steps, 2)\n      confidences: (B, num_modes)\n    \"\"\"", "\n", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "\n", "\n", "pred", "=", "inputs", "[", ":", ",", "self", ".", "num_modes", ":", "]", "# (B, 480)", "\n", "knots", "=", "tf", ".", "reshape", "(", "pred", ",", "(", "-", "1", ",", "self", ".", "num_modes", ",", "2", ",", "self", ".", "num_knots", ")", ")", "# (B, 3, 2, 8)", "\n", "max_pos", "=", "self", ".", "num_knots", "-", "3", "# + 1", "\n", "positions", "=", "tf", ".", "expand_dims", "(", "tf", ".", "range", "(", "start", "=", "0.0", ",", "limit", "=", "max_pos", ",", "delta", "=", "max_pos", "/", "self", ".", "num_future_steps", ",", "dtype", "=", "knots", ".", "dtype", ")", ",", "axis", "=", "-", "1", ")", "\n", "spline", "=", "bspline", ".", "interpolate", "(", "knots", ",", "positions", ",", "3", ",", "False", ")", "\n", "spline", "=", "tf", ".", "squeeze", "(", "spline", ",", "axis", "=", "1", ")", "\n", "pred", "=", "tf", ".", "transpose", "(", "spline", ",", "perm", "=", "[", "1", ",", "2", ",", "0", ",", "3", "]", ")", "# (B, K, 80, 2)", "\n", "\n", "centroid_bias", "=", "tf", ".", "reshape", "(", "self", ".", "centroids", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "80", ",", "2", "]", ")", "\n", "\n", "pred", "=", "pred", "+", "centroid_bias", "\n", "\n", "pred", "=", "tf", ".", "reshape", "(", "pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", "*", "self", ".", "num_future_steps", ",", "2", "]", ")", "\n", "\n", "pred_x", "=", "c", "*", "pred", "[", "...", ",", "0", "]", "-", "s", "*", "pred", "[", "...", ",", "1", "]", "+", "x", "\n", "pred_y", "=", "s", "*", "pred", "[", "...", ",", "0", "]", "+", "c", "*", "pred", "[", "...", ",", "1", "]", "+", "y", "\n", "pred", "=", "tf", ".", "stack", "(", "[", "pred_x", ",", "pred_y", "]", ",", "-", "1", ")", "\n", "pred", "=", "tf", ".", "reshape", "(", "pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "self", ".", "num_future_steps", ",", "2", "]", ",", "name", "=", "\"PRED\"", ")", "\n", "\n", "confidences", "=", "inputs", "[", ":", ",", ":", "self", ".", "num_modes", "]", "\n", "confidences", "=", "self", ".", "softmax", "(", "confidences", ")", "\n", "return", "pred", ",", "confidences", ",", "knots", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.__init__": [[68, 113], ["super().__init__", "tensorflow.keras.layers.GlobalAveragePooling2D", "max", "tensorflow.keras.layers.Softmax", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.BatchNormalization", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["  ", "def", "__init__", "(", "self", ",", "num_future_steps", ",", "backbone", ",", "num_modes", "=", "3", ",", "loss_type", "=", "'multi_path_loss'", ",", "num_knots", "=", "8", ",", "num_ps_units", "=", "None", ",", "veh_modes", "=", "16", ",", "ped_modes", "=", "8", ",", "cyc_modes", "=", "8", ",", "dropout", "=", "0.", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_num_knots", "=", "num_knots", "\n", "self", ".", "_loss_type", "=", "loss_type", "\n", "self", ".", "_num_future_steps", "=", "num_future_steps", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "pooling", "=", "tf", ".", "keras", ".", "layers", ".", "GlobalAveragePooling2D", "(", ")", "\n", "if", "dropout", ">", "0", ":", "\n", "      ", "self", ".", "shared_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "300", ",", "activation", "=", "\"relu\"", ")", "]", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "shared_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "300", ",", "activation", "=", "\"relu\"", ")", "]", ")", "\n", "", "self", ".", "veh_modes", "=", "veh_modes", "\n", "self", ".", "ped_modes", "=", "ped_modes", "\n", "self", ".", "cyc_modes", "=", "cyc_modes", "\n", "self", ".", "num_modes", "=", "max", "(", "veh_modes", ",", "ped_modes", ",", "cyc_modes", ")", "\n", "if", "dropout", ">", "0", ":", "\n", "      ", "self", ".", "veh_fc", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "veh_modes", "*", "2", "*", "num_knots", "+", "veh_modes", ")", "]", ")", "\n", "self", ".", "ped_fc", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "ped_modes", "*", "2", "*", "num_knots", "+", "ped_modes", ")", "]", ")", "\n", "self", ".", "cyc_fc", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "cyc_modes", "*", "2", "*", "num_knots", "+", "cyc_modes", ")", "]", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "veh_fc", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "veh_modes", "*", "2", "*", "num_knots", "+", "veh_modes", ")", "\n", "self", ".", "ped_fc", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "ped_modes", "*", "2", "*", "num_knots", "+", "ped_modes", ")", "\n", "self", ".", "cyc_fc", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "cyc_modes", "*", "2", "*", "num_knots", "+", "cyc_modes", ")", "\n", "", "self", ".", "softmax", "=", "tf", ".", "keras", ".", "layers", ".", "Softmax", "(", ")", "\n", "if", "num_ps_units", "is", "None", ":", "\n", "      ", "num_ps_units", "=", "num_future_steps", "*", "2", "*", "num_modes", "+", "num_modes", "\n", "\n", "", "self", ".", "veh_ego_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "num_ps_units", ",", "activation", "=", "'relu'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "veh_modes", "*", "2", "*", "num_knots", "+", "veh_modes", ")", "]", ")", "\n", "self", ".", "ped_ego_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "num_ps_units", ",", "activation", "=", "'relu'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "ped_modes", "*", "2", "*", "num_knots", "+", "ped_modes", ")", "]", ")", "\n", "self", ".", "cyc_ego_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "num_ps_units", ",", "activation", "=", "'relu'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "cyc_modes", "*", "2", "*", "num_knots", "+", "cyc_modes", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.call": [[114, 168], ["tensorflow.cast", "tensorflow.math.cos", "tensorflow.math.sin", "model.MOEModelWithVariableClusters.backbone", "model.MOEModelWithVariableClusters.pooling", "tensorflow.squeeze", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.concat", "tensorflow.cast", "tensorflow.cast", "model.MOEModelWithVariableClusters.shared_ffn", "model.MOEModelWithVariableClusters.veh_head", "model.MOEModelWithVariableClusters.ped_head", "model.MOEModelWithVariableClusters.cyc_head", "utils.pad_to_shape", "utils.pad_to_shape", "utils.pad_to_shape", "utils.pad_to_shape", "utils.pad_to_shape", "utils.pad_to_shape", "model.MOEModelWithVariableClusters.veh_fc", "model.MOEModelWithVariableClusters.veh_ego_ffn", "model.MOEModelWithVariableClusters.ped_fc", "model.MOEModelWithVariableClusters.ped_ego_ffn", "model.MOEModelWithVariableClusters.cyc_fc", "model.MOEModelWithVariableClusters.cyc_ego_ffn", "tensorflow.cast"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape"], ["", "def", "call", "(", "self", ",", "image", ",", "x", "=", "None", ",", "y", "=", "None", ",", "yaw", "=", "None", ",", "past_states", "=", "None", ",", "object_type", "=", "None", ",", "is_sdc", "=", "None", ",", "training", "=", "True", ")", ":", "\n", "    ", "image", "=", "tf", ".", "cast", "(", "image", ",", "tf", ".", "float32", ")", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "# (B, 1)", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "# (B, 1)", "\n", "embeddings", "=", "self", ".", "backbone", "(", "image", ",", "training", "=", "training", ")", "\n", "embeddings", "=", "embeddings", "[", ":", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", ",", ":", "]", "\n", "embeddings", "=", "self", ".", "pooling", "(", "embeddings", ")", "# Outputs (B,2048)", "\n", "past_states", "=", "tf", ".", "squeeze", "(", "past_states", ",", "axis", "=", "1", ")", "\n", "past_x", "=", "past_states", "[", ":", ",", ":", ",", "0", "]", "# (B, 10)", "\n", "past_y", "=", "past_states", "[", ":", ",", ":", ",", "1", "]", "# (B, 10)", "\n", "past_x_hat", "=", "past_x", "-", "x", "# (B, 10)", "\n", "past_y_hat", "=", "past_y", "-", "y", "# (B, 10)", "\n", "past_ego_x", "=", "c", "*", "past_x_hat", "+", "s", "*", "past_y_hat", "# (B, 10)", "\n", "past_ego_y", "=", "-", "s", "*", "past_x_hat", "+", "c", "*", "past_y_hat", "# (B, 10)", "\n", "\n", "past_length", "=", "tf", ".", "reduce_mean", "(", "past_states", "[", ":", ",", ":", ",", "2", "]", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "past_width", "=", "tf", ".", "reduce_mean", "(", "past_states", "[", ":", ",", ":", ",", "3", "]", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "past_yaw", "=", "past_states", "[", ":", ",", ":", ",", "4", "]", "-", "yaw", "\n", "past_vel_x", "=", "past_states", "[", ":", ",", ":", ",", "5", "]", "\n", "past_vel_y", "=", "past_states", "[", ":", ",", ":", ",", "6", "]", "\n", "past_vel_x", "=", "c", "*", "past_vel_x", "+", "s", "*", "past_vel_y", "# (B, 10)", "\n", "past_vel_y", "=", "-", "s", "*", "past_vel_x", "+", "c", "*", "past_vel_y", "# (B, 10)", "\n", "# is_sdc has shape (B, 1)", "\n", "\n", "past_states", "=", "tf", ".", "concat", "(", "[", "past_ego_x", ",", "past_ego_y", ",", "past_length", ",", "past_width", ",", "past_yaw", ",", "past_vel_x", ",", "past_vel_y", ",", "tf", ".", "cast", "(", "is_sdc", ",", "tf", ".", "float32", ")", "]", ",", "1", ")", "\n", "\n", "is_veh", "=", "tf", ".", "cast", "(", "object_type", "==", "1", ",", "tf", ".", "float32", ")", "# (B, 1)", "\n", "is_ped", "=", "tf", ".", "cast", "(", "object_type", "==", "2", ",", "tf", ".", "float32", ")", "\n", "is_cyc", "=", "1", "-", "is_veh", "-", "is_ped", "\n", "\n", "shared_output", "=", "self", ".", "shared_ffn", "(", "embeddings", ",", "training", "=", "training", ")", "\n", "veh_output", "=", "self", ".", "veh_fc", "(", "shared_output", ",", "training", "=", "training", ")", "+", "self", ".", "veh_ego_ffn", "(", "past_states", ",", "training", "=", "training", ")", "\n", "ped_output", "=", "self", ".", "ped_fc", "(", "shared_output", ",", "training", "=", "training", ")", "+", "self", ".", "ped_ego_ffn", "(", "past_states", ",", "training", "=", "training", ")", "\n", "cyc_output", "=", "self", ".", "cyc_fc", "(", "shared_output", ",", "training", "=", "training", ")", "+", "self", ".", "cyc_ego_ffn", "(", "past_states", ",", "training", "=", "training", ")", "\n", "\n", "veh_pred", ",", "veh_conf", ",", "veh_knots", "=", "self", ".", "veh_head", "(", "veh_output", ",", "x", ",", "y", ",", "yaw", ")", "\n", "ped_pred", ",", "ped_conf", ",", "ped_knots", "=", "self", ".", "ped_head", "(", "ped_output", ",", "x", ",", "y", ",", "yaw", ")", "\n", "cyc_pred", ",", "cyc_conf", ",", "cyc_knots", "=", "self", ".", "cyc_head", "(", "cyc_output", ",", "x", ",", "y", ",", "yaw", ")", "\n", "\n", "veh_pred", "=", "pad_to_shape", "(", "veh_pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "80", ",", "2", "]", ")", "\n", "ped_pred", "=", "pad_to_shape", "(", "ped_pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "80", ",", "2", "]", ")", "\n", "cyc_pred", "=", "pad_to_shape", "(", "cyc_pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "80", ",", "2", "]", ")", "\n", "\n", "veh_conf", "=", "pad_to_shape", "(", "veh_conf", ",", "[", "-", "1", ",", "self", ".", "num_modes", "]", ")", "\n", "ped_conf", "=", "pad_to_shape", "(", "ped_conf", ",", "[", "-", "1", ",", "self", ".", "num_modes", "]", ")", "\n", "cyc_conf", "=", "pad_to_shape", "(", "cyc_conf", ",", "[", "-", "1", ",", "self", ".", "num_modes", "]", ")", "\n", "\n", "pred", "=", "is_veh", "[", ":", ",", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "*", "veh_pred", "+", "is_ped", "[", ":", ",", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "*", "ped_pred", "+", "is_cyc", "[", ":", ",", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "*", "cyc_pred", "\n", "\n", "conf", "=", "is_veh", "*", "veh_conf", "+", "is_ped", "*", "ped_conf", "+", "is_cyc", "*", "cyc_conf", "\n", "\n", "return", "(", "pred", ",", "conf", ",", "shared_output", ",", "embeddings", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.compile": [[169, 184], ["super().compile", "tensorflow.keras.metrics.Mean", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "model.Head", "model.Head", "model.Head"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.compile"], ["", "def", "compile", "(", "self", ",", "optimizer", ",", "multi_path_loss", ",", "multi_modal_loss", ",", "loss_tracker", ",", "multi_modal_loss_tracker", ",", "motion_metrics", ",", "metrics_config", ")", ":", "\n", "    ", "super", "(", ")", ".", "compile", "(", "optimizer", "=", "optimizer", ",", "loss", "=", "multi_path_loss", ",", "metrics", "=", "[", "motion_metrics", "]", ")", "\n", "self", ".", "multi_path_loss", "=", "multi_path_loss", "\n", "self", ".", "multi_modal_loss", "=", "multi_modal_loss", "\n", "self", ".", "multi_modal_loss_tracker", "=", "multi_modal_loss_tracker", "\n", "self", ".", "motion_metrics", "=", "motion_metrics", "\n", "self", ".", "metrics_config", "=", "metrics_config", "\n", "self", ".", "loss_tracker", "=", "loss_tracker", "\n", "self", ".", "conf_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'conf_loss'", ")", "\n", "self", ".", "veh_centroids", "=", "tf", ".", "convert_to_tensor", "(", "self", ".", "multi_path_loss", ".", "veh_centroids", ")", "\n", "self", ".", "ped_centroids", "=", "tf", ".", "convert_to_tensor", "(", "self", ".", "multi_path_loss", ".", "ped_centroids", ")", "\n", "self", ".", "cyc_centroids", "=", "tf", ".", "convert_to_tensor", "(", "self", ".", "multi_path_loss", ".", "cyc_centroids", ")", "\n", "self", ".", "veh_head", "=", "Head", "(", "self", ".", "veh_centroids", ",", "num_knots", "=", "self", ".", "_num_knots", ")", "\n", "self", ".", "ped_head", "=", "Head", "(", "self", ".", "ped_centroids", ",", "num_knots", "=", "self", ".", "_num_knots", ")", "\n", "self", ".", "cyc_head", "=", "Head", "(", "self", ".", "cyc_centroids", ",", "num_knots", "=", "self", ".", "_num_knots", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.train_step": [[186, 216], ["model.MOEModelWithVariableClusters.loss_tracker.update_state", "model.MOEModelWithVariableClusters.conf_loss_tracker.update_state", "model.MOEModelWithVariableClusters.multi_modal_loss.call", "model.MOEModelWithVariableClusters.multi_modal_loss_tracker.update_state", "tape.gradient", "model.MOEModelWithVariableClusters.optimizer.apply_gradients", "tensorflow.squeeze", "tensorflow.GradientTape", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.cast", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "model.MOEModelWithVariableClusters.", "zip", "model.MOEModelWithVariableClusters.loss_tracker.result", "model.MOEModelWithVariableClusters.multi_modal_loss_tracker.result", "model.MOEModelWithVariableClusters.conf_loss_tracker.result", "model.MOEModelWithVariableClusters.multi_modal_loss.call", "model.MOEModelWithVariableClusters.multi_path_loss.call"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call"], ["", "def", "train_step", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "with", "tf", ".", "GradientTape", "(", ")", "as", "tape", ":", "\n", "      ", "gt_trajectory", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'gt_future_states'", "]", ",", "axis", "=", "1", ")", "\n", "gt_is_valid", "=", "inputs", "[", "'gt_future_is_valid'", "]", "\n", "gt_is_valid", "=", "tf", ".", "squeeze", "(", "gt_is_valid", ",", "axis", "=", "[", "1", "]", ")", "# (B, 91)", "\n", "prediction_start", "=", "self", ".", "metrics_config", ".", "track_history_samples", "+", "1", "\n", "gt_targets", "=", "gt_trajectory", "[", ":", ",", "prediction_start", ":", ",", ":", "2", "]", "# (B, 80, 2)", "\n", "weights", "=", "tf", ".", "cast", "(", "gt_is_valid", "[", ":", ",", "prediction_start", ":", "]", ",", "tf", ".", "float32", ")", "# (B, 80,)", "\n", "\n", "images", "=", "inputs", "[", "'image'", "]", "\n", "x", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'x'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'y'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'yaw'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "past_states", "=", "inputs", "[", "'past_states'", "]", "\n", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n", "pred_trajectory", ",", "confidences", ",", "_", ",", "_", "=", "self", "(", "images", ",", "x", "=", "x", ",", "y", "=", "y", ",", "yaw", "=", "yaw", ",", "past_states", "=", "past_states", ",", "object_type", "=", "object_type", ",", "is_sdc", "=", "inputs", "[", "'is_sdc'", "]", ",", "training", "=", "True", ")", "\n", "if", "self", ".", "_loss_type", "==", "'multi_modal_loss'", ":", "\n", "        ", "loss", "=", "self", ".", "multi_modal_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "object_type", "=", "object_type", ")", "\n", "", "else", ":", "\n", "        ", "loss", ",", "conf_loss", "=", "self", ".", "multi_path_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "x", ",", "y", ",", "yaw", ",", "object_type", "=", "object_type", ")", "\n", "", "", "self", ".", "loss_tracker", ".", "update_state", "(", "loss", ")", "\n", "self", ".", "conf_loss_tracker", ".", "update_state", "(", "conf_loss", ")", "\n", "mm_loss", "=", "self", ".", "multi_modal_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "object_type", "=", "object_type", ")", "\n", "self", ".", "multi_modal_loss_tracker", ".", "update_state", "(", "mm_loss", ")", "\n", "grads", "=", "tape", ".", "gradient", "(", "loss", ",", "self", ".", "trainable_variables", ")", "\n", "self", ".", "optimizer", ".", "apply_gradients", "(", "zip", "(", "grads", ",", "self", ".", "trainable_variables", ")", ")", "\n", "\n", "object_type", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'object_type'", "]", ")", "\n", "pred_score", "=", "confidences", "\n", "return", "{", "\"loss\"", ":", "self", ".", "loss_tracker", ".", "result", "(", ")", ",", "\"mm_loss\"", ":", "self", ".", "multi_modal_loss_tracker", ".", "result", "(", ")", ",", "\"conf_loss\"", ":", "self", ".", "conf_loss_tracker", ".", "result", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.test_step": [[217, 251], ["tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.cast", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "model.MOEModelWithVariableClusters.", "model.MOEModelWithVariableClusters.loss_tracker.update_state", "model.MOEModelWithVariableClusters.conf_loss_tracker.update_state", "model.MOEModelWithVariableClusters.multi_modal_loss.call", "model.MOEModelWithVariableClusters.multi_modal_loss_tracker.update_state", "tensorflow.squeeze", "utils.truncate_predictions", "model.MOEModelWithVariableClusters.motion_metrics.update_state", "model.MOEModelWithVariableClusters.multi_modal_loss.call", "model.MOEModelWithVariableClusters.multi_path_loss.call", "model.MOEModelWithVariableClusters.loss_tracker.result", "model.MOEModelWithVariableClusters.multi_modal_loss_tracker.result", "model.MOEModelWithVariableClusters.conf_loss_tracker.result"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result"], ["", "def", "test_step", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "images", "=", "inputs", "[", "'image'", "]", "\n", "gt_trajectory", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'gt_future_states'", "]", ",", "axis", "=", "1", ")", "\n", "gt_is_valid", "=", "inputs", "[", "'gt_future_is_valid'", "]", "\n", "gt_is_valid", "=", "tf", ".", "squeeze", "(", "gt_is_valid", ",", "axis", "=", "[", "1", "]", ")", "\n", "prediction_start", "=", "self", ".", "metrics_config", ".", "track_history_samples", "+", "1", "\n", "gt_targets", "=", "gt_trajectory", "[", ":", ",", "prediction_start", ":", ",", ":", "2", "]", "\n", "weights", "=", "tf", ".", "cast", "(", "gt_is_valid", "[", ":", ",", "prediction_start", ":", "]", ",", "tf", ".", "float32", ")", "\n", "x", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'x'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'y'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'yaw'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "past_states", "=", "inputs", "[", "'past_states'", "]", "\n", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n", "\n", "pred_trajectory", ",", "confidences", ",", "_", ",", "_", "=", "self", "(", "images", ",", "x", "=", "x", ",", "y", "=", "y", ",", "yaw", "=", "yaw", ",", "past_states", "=", "past_states", ",", "object_type", "=", "object_type", ",", "is_sdc", "=", "inputs", "[", "'is_sdc'", "]", ",", "training", "=", "False", ")", "\n", "if", "self", ".", "_loss_type", "==", "'multi_modal_loss'", ":", "\n", "      ", "loss", "=", "self", ".", "multi_modal_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "object_type", "=", "object_type", ")", "\n", "", "else", ":", "\n", "      ", "loss", ",", "conf_loss", "=", "self", ".", "multi_path_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "x", ",", "y", ",", "yaw", ",", "object_type", "=", "object_type", ")", "\n", "", "self", ".", "loss_tracker", ".", "update_state", "(", "loss", ")", "\n", "self", ".", "conf_loss_tracker", ".", "update_state", "(", "conf_loss", ")", "\n", "mm_loss", "=", "self", ".", "multi_modal_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "object_type", "=", "object_type", ")", "\n", "self", ".", "multi_modal_loss_tracker", ".", "update_state", "(", "mm_loss", ")", "\n", "\n", "object_type", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'object_type'", "]", ")", "\n", "pred_score", "=", "confidences", "\n", "pred_trajectory", ",", "pred_score", ",", "_", "=", "truncate_predictions", "(", "pred_trajectory", ",", "pred_score", ")", "\n", "self", ".", "motion_metrics", ".", "update_state", "(", "\n", "pred_trajectory", ",", "\n", "pred_score", ",", "\n", "gt_trajectory", ",", "\n", "gt_is_valid", ",", "\n", "object_type", ")", "\n", "return", "{", "\"loss\"", ":", "self", ".", "loss_tracker", ".", "result", "(", ")", ",", "\"mm_loss\"", ":", "self", ".", "multi_modal_loss_tracker", ".", "result", "(", ")", ",", "\"conf_loss\"", ":", "self", ".", "conf_loss_tracker", ".", "result", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.predict_step": [[252, 275], ["tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "model.MOEModelWithVariableClusters.", "utils.truncate_predictions"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions"], ["", "def", "predict_step", "(", "self", ",", "inputs", ",", "truncate", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n      Parameters:\n        inputs: A dictionary mapping from parsed feature names to batched tensors\n      Returns: \n        trajectories: tensor of shape(B, 3, 16, 2)\n        confidences: tensor of shape (B, 3)\n    \"\"\"", "\n", "past_states", "=", "inputs", "[", "'past_states'", "]", "# (B, 10, 2)", "\n", "images", "=", "inputs", "[", "'image'", "]", "# (B, 224, 448, 3)", "\n", "x", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'x'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'y'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'yaw'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n", "\n", "pred_trajectory", ",", "confidences", ",", "_", ",", "_", "=", "self", "(", "images", ",", "x", ",", "y", ",", "yaw", ",", "past_states", "=", "past_states", ",", "object_type", "=", "object_type", ",", "is_sdc", "=", "inputs", "[", "'is_sdc'", "]", ",", "training", "=", "False", ")", "# (B, 3, 80, 2)", "\n", "if", "truncate", ":", "\n", "      ", "interval", "=", "5", "\n", "prediction_trajectory", "=", "pred_trajectory", "[", ":", ",", ":", ",", "(", "interval", "-", "1", ")", ":", ":", "interval", "]", "\n", "prediction_trajectory", ",", "confidences", ",", "_", "=", "truncate_predictions", "(", "prediction_trajectory", ",", "confidences", ")", "\n", "", "else", ":", "\n", "      ", "prediction_trajectory", "=", "pred_trajectory", "\n", "", "return", "prediction_trajectory", ",", "confidences", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.inspect_step": [[276, 316], ["tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.cast", "tensorflow.cast.numpy().astype", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze().numpy", "model.MOEModelWithVariableClusters.", "model.MOEModelWithVariableClusters.multi_path_loss.call", "utils.truncate_predictions", "tensorflow.where().numpy", "pred_trajectory.numpy.numpy.numpy", "tensorflow.cast.numpy", "tensorflow.squeeze", "len", "tensorflow.squeeze().numpy.astype", "print", "print", "print", "print", "print", "print", "print", "tensorflow.squeeze().numpy", "tensorflow.squeeze().numpy", "tensorflow.squeeze().numpy", "utils.transform_matrix", "numpy.concatenate", "utils.draw_trajectory", "tensorflow.where", "tensorflow.where().numpy", "object_type[].numpy", "loss[].numpy", "conf_loss[].numpy", "confidences[].numpy", "orig_confidences[].numpy", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze().numpy", "tensorflow.where", "orig_pred_trajectory[].numpy", "tensorflow.squeeze"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_matrix", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.draw_trajectory"], ["", "def", "inspect_step", "(", "self", ",", "inputs", ",", "draw_pred", "=", "False", ")", ":", "\n", "    ", "past_states", "=", "inputs", "[", "'past_states'", "]", "\n", "images", "=", "inputs", "[", "'image'", "]", "\n", "gt_trajectory", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'gt_future_states'", "]", ",", "axis", "=", "1", ")", "\n", "gt_is_valid", "=", "inputs", "[", "'gt_future_is_valid'", "]", "# (B, 80)", "\n", "gt_is_valid", "=", "tf", ".", "squeeze", "(", "gt_is_valid", ",", "axis", "=", "[", "1", "]", ")", "\n", "prediction_start", "=", "self", ".", "metrics_config", ".", "track_history_samples", "+", "1", "\n", "gt_targets", "=", "gt_trajectory", "[", ":", ",", "prediction_start", ":", ",", ":", "2", "]", "# (B, 80, 2)", "\n", "weights", "=", "tf", ".", "cast", "(", "gt_is_valid", "[", ":", ",", "prediction_start", ":", "]", ",", "tf", ".", "float32", ")", "\n", "avails", "=", "weights", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "bool", ")", "\n", "x", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'x'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'y'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'yaw'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "image", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'image'", "]", ")", ".", "numpy", "(", ")", "\n", "\n", "if", "draw_pred", ":", "\n", "      ", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n", "orig_pred_trajectory", ",", "orig_confidences", ",", "_", ",", "knots", "=", "self", "(", "images", ",", "x", ",", "y", ",", "yaw", ",", "past_states", "=", "past_states", ",", "object_type", "=", "object_type", ",", "is_sdc", "=", "inputs", "[", "'is_sdc'", "]", ",", "training", "=", "False", ")", "# (B, 3, 80, 2)", "\n", "loss", ",", "conf_loss", ",", "assignments_mask", "=", "self", ".", "multi_path_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "orig_pred_trajectory", ",", "orig_confidences", ",", "x", ",", "y", ",", "yaw", ",", "object_type", "=", "object_type", ",", "reduce_mean", "=", "False", ")", "\n", "pred_trajectory", ",", "confidences", ",", "indices", "=", "truncate_predictions", "(", "orig_pred_trajectory", ",", "orig_confidences", ",", "k", "=", "1", ")", "\n", "loss_indices", "=", "tf", ".", "where", "(", "loss", ">", "0", ")", ".", "numpy", "(", ")", "\n", "if", "len", "(", "loss_indices", ")", ">", "0", ":", "\n", "        ", "loss_indices", "=", "loss_indices", "[", "0", "]", "\n", "", "image", "=", "image", ".", "astype", "(", "np", ".", "float32", ")", "*", "1", "\n", "pred_trajectory", "=", "pred_trajectory", ".", "numpy", "(", ")", "\n", "for", "example_index", "in", "loss_indices", ":", "\n", "        ", "assignment", "=", "tf", ".", "where", "(", "assignments_mask", "[", "example_index", "]", "==", "1", ")", ".", "numpy", "(", ")", "[", "0", ",", "0", "]", "# (K,)", "\n", "print", "(", "example_index", ",", "assignment", ")", "\n", "print", "(", "\"object_type\"", ",", "object_type", "[", "example_index", "]", ".", "numpy", "(", ")", ")", "\n", "print", "(", "\"loss:\"", ",", "loss", "[", "example_index", "]", ".", "numpy", "(", ")", ")", "\n", "print", "(", "\"conf_loss:\"", ",", "conf_loss", "[", "example_index", "]", ".", "numpy", "(", ")", ")", "\n", "print", "(", "\"confidence:\"", ",", "confidences", "[", "example_index", "]", ".", "numpy", "(", ")", ")", "\n", "print", "(", "\"assignment_confidence:\"", ",", "orig_confidences", "[", "example_index", ",", "assignment", "]", ".", "numpy", "(", ")", ")", "\n", "print", "(", "\"image[example_index].shape\"", ",", "image", "[", "example_index", "]", ".", "shape", ")", "\n", "current_x", "=", "tf", ".", "squeeze", "(", "x", "[", "example_index", "]", ")", ".", "numpy", "(", ")", "\n", "current_y", "=", "tf", ".", "squeeze", "(", "y", "[", "example_index", "]", ")", ".", "numpy", "(", ")", "\n", "current_yaw", "=", "tf", ".", "squeeze", "(", "yaw", "[", "example_index", "]", ")", ".", "numpy", "(", ")", "\n", "world_to_image", "=", "transform_matrix", "(", "current_x", ",", "current_y", ",", "current_yaw", ")", "\n", "trajectories", "=", "np", ".", "concatenate", "(", "[", "pred_trajectory", "[", "example_index", "]", ",", "orig_pred_trajectory", "[", "example_index", ",", "assignment", "]", ".", "numpy", "(", ")", "[", "np", ".", "newaxis", ",", ":", ",", ":", "]", "]", ",", "0", ")", "\n", "draw_trajectory", "(", "image", "[", "example_index", "]", ",", "world_to_image", ",", "trajectory", "=", "trajectories", ",", "gt_trajectory", "=", "tf", ".", "squeeze", "(", "gt_targets", "[", "example_index", "]", ")", ".", "numpy", "(", ")", ",", "avails", "=", "avails", "[", "example_index", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.dmAP_step": [[317, 416], ["tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.cast", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "model.MOEModelWithVariableClusters.", "model.MOEModelWithVariableClusters.multi_path_loss.call", "model.MOEModelWithVariableClusters.loss_tracker.update_state", "model.MOEModelWithVariableClusters.conf_loss_tracker.update_state", "utils.truncate_predictions", "model.MOEModelWithVariableClusters.motion_metrics.update_state", "tensorflow.math.cos", "tensorflow.math.sin", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.stack", "tensorflow.reshape", "tensorflow.math.logical_not", "tensorflow.concat", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.argmin", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.argmin", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.argmin", "tensorflow.one_hot", "tensorflow.stack", "tensorflow.boolean_mask", "model.MOEModelWithVariableClusters.multi_path_loss.call", "cls_loss_tracker.update_state", "cls_conf_loss_tracker.update_state", "utils.truncate_predictions", "cls_motion_metrics.update_state", "model.MOEModelWithVariableClusters.multi_path_loss.call", "reg_loss_tracker.update_state", "reg_conf_loss_tracker.update_state", "utils.truncate_predictions", "reg_motion_metrics.update_state", "tensorflow.math.logical_or"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state"], ["", "", "", "def", "dmAP_step", "(", "self", ",", "inputs", ",", "cls_motion_metrics", ",", "reg_motion_metrics", ",", "cls_loss_tracker", ",", "cls_conf_loss_tracker", ",", "reg_loss_tracker", ",", "reg_conf_loss_tracker", ",", "beta", "=", "0.5", ",", "gamma", "=", "1.", ")", ":", "\n", "    ", "images", "=", "inputs", "[", "'image'", "]", "\n", "gt_trajectory", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'gt_future_states'", "]", ",", "axis", "=", "1", ")", "\n", "gt_is_valid", "=", "inputs", "[", "'gt_future_is_valid'", "]", "\n", "gt_is_valid", "=", "tf", ".", "squeeze", "(", "gt_is_valid", ",", "axis", "=", "[", "1", "]", ")", "\n", "prediction_start", "=", "self", ".", "metrics_config", ".", "track_history_samples", "+", "1", "\n", "gt_targets", "=", "gt_trajectory", "[", ":", ",", "prediction_start", ":", ",", ":", "2", "]", "\n", "weights", "=", "tf", ".", "cast", "(", "gt_is_valid", "[", ":", ",", "prediction_start", ":", "]", ",", "tf", ".", "float32", ")", "\n", "x", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'x'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'y'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'yaw'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "past_states", "=", "inputs", "[", "'past_states'", "]", "\n", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n", "squeezed_object_type", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'object_type'", "]", ")", "\n", "\n", "pred_trajectory", ",", "confidences", ",", "_", "=", "self", "(", "images", ",", "x", "=", "x", ",", "y", "=", "y", ",", "yaw", "=", "yaw", ",", "past_states", "=", "past_states", ",", "object_type", "=", "object_type", ",", "is_sdc", "=", "inputs", "[", "'is_sdc'", "]", ",", "training", "=", "False", ")", "\n", "loss", ",", "conf_loss", "=", "self", ".", "multi_path_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "x", ",", "y", ",", "yaw", ",", "object_type", "=", "object_type", ")", "\n", "self", ".", "loss_tracker", ".", "update_state", "(", "loss", ")", "\n", "self", ".", "conf_loss_tracker", ".", "update_state", "(", "conf_loss", ")", "\n", "\n", "pred_score", "=", "confidences", "\n", "truncated_pred_trajectory", ",", "truncated_pred_score", "=", "truncate_predictions", "(", "pred_trajectory", ",", "pred_score", ")", "\n", "self", ".", "motion_metrics", ".", "update_state", "(", "\n", "truncated_pred_trajectory", ",", "\n", "truncated_pred_score", ",", "\n", "gt_trajectory", ",", "\n", "gt_is_valid", ",", "\n", "squeezed_object_type", ")", "\n", "gt", "=", "gt_targets", "\n", "avails", "=", "weights", "\n", "veh_centroids", "=", "self", ".", "multi_path_loss", ".", "veh_centroids", "\n", "ped_centroids", "=", "self", ".", "multi_path_loss", ".", "ped_centroids", "\n", "cyc_centroids", "=", "self", ".", "multi_path_loss", ".", "cyc_centroids", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "# (B, 1)", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "# (B, 1)", "\n", "x_hat", "=", "gt", "[", ":", ",", ":", ",", "0", "]", "-", "x", "# (B, 80)", "\n", "y_hat", "=", "gt", "[", ":", ",", ":", ",", "1", "]", "-", "y", "# (B, 80)", "\n", "gt_ego_x", "=", "c", "*", "x_hat", "+", "s", "*", "y_hat", "# (B, 80)", "\n", "gt_ego_y", "=", "-", "s", "*", "x_hat", "+", "c", "*", "y_hat", "# (B, 80)", "\n", "\n", "gt", "=", "tf", ".", "reshape", "(", "gt", ",", "[", "-", "1", ",", "1", ",", "80", ",", "2", "]", ")", "\n", "avails", "=", "tf", ".", "reshape", "(", "avails", ",", "[", "-", "1", ",", "1", ",", "80", ",", "1", "]", ")", "\n", "\n", "gt_ego", "=", "tf", ".", "stack", "(", "[", "gt_ego_x", ",", "gt_ego_y", "]", ",", "axis", "=", "-", "1", ")", "# (B, 80, 2)", "\n", "gt_ego", "=", "tf", ".", "reshape", "(", "gt_ego", ",", "[", "-", "1", ",", "1", ",", "80", ",", "2", "]", ")", "\n", "\n", "is_veh", "=", "object_type", "==", "1", "# object_type[:, 1] # (B,) object_type == 1", "\n", "is_ped", "=", "object_type", "==", "2", "# (B,)", "\n", "is_cyc", "=", "tf", ".", "math", ".", "logical_not", "(", "tf", ".", "math", ".", "logical_or", "(", "is_veh", ",", "is_ped", ")", ")", "\n", "object_type_mask", "=", "tf", ".", "concat", "(", "[", "is_veh", ",", "is_ped", ",", "is_cyc", "]", ",", "axis", "=", "-", "1", ")", "# (B, 3)", "\n", "\n", "veh_centroids", "=", "tf", ".", "reshape", "(", "veh_centroids", ",", "[", "1", ",", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "distance", "=", "(", "(", "gt_ego", "-", "veh_centroids", ")", "**", "2", ")", "*", "avails", "# (B, K, 80, 2)", "\n", "distance", "=", "tf", ".", "reduce_sum", "(", "distance", ",", "[", "2", ",", "3", "]", ")", "# (B, K)", "\n", "veh_assignments", "=", "tf", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "veh_assignments_mask", "=", "tf", ".", "one_hot", "(", "veh_assignments", ",", "self", ".", "num_modes", ")", "# (B, K)", "\n", "\n", "ped_centroids", "=", "tf", ".", "reshape", "(", "ped_centroids", ",", "[", "1", ",", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "distance", "=", "(", "(", "gt_ego", "-", "ped_centroids", ")", "**", "2", ")", "*", "avails", "# (B, K, 80, 2)", "\n", "distance", "=", "tf", ".", "reduce_sum", "(", "distance", ",", "[", "2", ",", "3", "]", ")", "# (B, K)", "\n", "ped_assignments", "=", "tf", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "ped_assignments_mask", "=", "tf", ".", "one_hot", "(", "ped_assignments", ",", "self", ".", "num_modes", ")", "# (B, K)", "\n", "\n", "cyc_centroids", "=", "tf", ".", "reshape", "(", "cyc_centroids", ",", "[", "1", ",", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "distance", "=", "(", "(", "gt_ego", "-", "cyc_centroids", ")", "**", "2", ")", "*", "avails", "# (B, K, 80, 2)", "\n", "distance", "=", "tf", ".", "reduce_sum", "(", "distance", ",", "[", "2", ",", "3", "]", ")", "# (B, K)", "\n", "cyc_assignments", "=", "tf", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "cyc_assignments_mask", "=", "tf", ".", "one_hot", "(", "cyc_assignments", ",", "self", ".", "num_modes", ")", "# (B, K)", "\n", "\n", "assignments_mask", "=", "tf", ".", "stack", "(", "[", "veh_assignments_mask", ",", "ped_assignments_mask", ",", "cyc_assignments_mask", "]", ",", "axis", "=", "1", ")", "\n", "assignments_mask", "=", "tf", ".", "boolean_mask", "(", "assignments_mask", ",", "object_type_mask", ")", "# (B, K)", "\n", "\n", "# Setting confidences to be the correct clustering assignments", "\n", "pred_score", "=", "assignments_mask", "*", "beta", "+", "confidences", "*", "(", "1", "-", "beta", ")", "\n", "loss", ",", "conf_loss", "=", "self", ".", "multi_path_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "pred_score", ",", "x", ",", "y", ",", "yaw", ",", "object_type", "=", "object_type", ")", "\n", "cls_loss_tracker", ".", "update_state", "(", "loss", ")", "\n", "cls_conf_loss_tracker", ".", "update_state", "(", "conf_loss", ")", "\n", "\n", "truncated_pred_trajectory", ",", "truncated_pred_score", "=", "truncate_predictions", "(", "pred_trajectory", ",", "pred_score", ")", "\n", "cls_motion_metrics", ".", "update_state", "(", "\n", "truncated_pred_trajectory", ",", "\n", "truncated_pred_score", ",", "\n", "gt_trajectory", ",", "\n", "gt_is_valid", ",", "\n", "squeezed_object_type", ")", "\n", "\n", "pred_trajectory", "=", "assignments_mask", "[", ":", ",", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "*", "(", "gt", "*", "gamma", "+", "(", "1", "-", "gamma", ")", "*", "pred_trajectory", ")", "+", "(", "1", "-", "assignments_mask", "[", ":", ",", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", ")", "*", "pred_trajectory", "\n", "pred_score", "=", "confidences", "\n", "loss", ",", "conf_loss", "=", "self", ".", "multi_path_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "pred_score", ",", "x", ",", "y", ",", "yaw", ",", "object_type", "=", "object_type", ")", "\n", "reg_loss_tracker", ".", "update_state", "(", "loss", ")", "\n", "reg_conf_loss_tracker", ".", "update_state", "(", "conf_loss", ")", "\n", "\n", "truncated_pred_trajectory", ",", "truncated_pred_score", "=", "truncate_predictions", "(", "pred_trajectory", ",", "pred_score", ")", "\n", "reg_motion_metrics", ".", "update_state", "(", "\n", "truncated_pred_trajectory", ",", "\n", "truncated_pred_score", ",", "\n", "gt_trajectory", ",", "\n", "gt_is_valid", ",", "\n", "squeezed_object_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.model.MOEModelWithVariableClusters.metrics": [[417, 420], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "metrics", "(", "self", ")", ":", "\n", "    ", "return", "[", "self", ".", "loss_tracker", ",", "self", ".", "multi_modal_loss_tracker", ",", "self", ".", "conf_loss_tracker", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.WorldToEgo.__init__": [[12, 14], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.WorldToEgo.call": [[15, 33], ["tensorflow.math.cos", "tensorflow.math.sin", "tensorflow.stack"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "coords", ",", "x", ",", "y", ",", "yaw", ")", ":", "\n", "    ", "\"\"\"\n    Call Args:\n      coords: (B, N, 2)\n      x: (B, 1)\n      y: (B, 1)\n      yaw: (B, 1)\n    Returns:\n      coords: (B, N, 2)\n    \"\"\"", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "\n", "x_hat", "=", "coords", "[", "...", ",", "0", "]", "-", "x", "# (B, N)", "\n", "y_hat", "=", "coords", "[", "...", ",", "1", "]", "-", "y", "# (B, N)", "\n", "coords_ego_x", "=", "c", "*", "x_hat", "+", "s", "*", "y_hat", "# (B, N)", "\n", "coords_ego_y", "=", "-", "s", "*", "x_hat", "+", "c", "*", "y_hat", "# (B, N)", "\n", "coords", "=", "tf", ".", "stack", "(", "[", "coords_ego_x", ",", "coords_ego_y", "]", ",", "axis", "=", "-", "1", ")", "\n", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.EgoToWorld.__init__": [[35, 37], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.EgoToWorld.call": [[38, 54], ["tensorflow.math.cos", "tensorflow.math.sin", "tensorflow.stack"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "coords", ",", "x", ",", "y", ",", "yaw", ")", ":", "\n", "    ", "\"\"\"\n    Call Args:\n      coords: (B, N, 2)\n      x: (B, 1)\n      y: (B, 1)\n      yaw: (B, 1)\n    Returns:\n      coords: (B, N, 2)\n    \"\"\"", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "\n", "coords_x", "=", "c", "*", "coords", "[", "...", ",", "0", "]", "-", "s", "*", "coords", "[", "...", ",", "1", "]", "+", "x", "# (B, 80)", "\n", "coords_y", "=", "s", "*", "coords", "[", "...", ",", "0", "]", "+", "c", "*", "coords", "[", "...", ",", "1", "]", "+", "y", "# (B, 80)", "\n", "coords", "=", "tf", ".", "stack", "(", "[", "coords_x", ",", "coords_y", "]", ",", "axis", "=", "-", "1", ")", "\n", "return", "coords", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.LRRecorder.on_epoch_begin": [[57, 60], ["utils.LRRecorder.model.optimizer._decayed_lr", "print", "utils.LRRecorder.numpy"], "methods", ["None"], ["def", "on_epoch_begin", "(", "self", ",", "epoch", ",", "logs", "=", "None", ")", ":", "\n", "      ", "lr", "=", "self", ".", "model", ".", "optimizer", ".", "_decayed_lr", "(", "tf", ".", "float32", ")", "\n", "print", "(", "f\"The current learning rate is {lr.numpy()}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions": [[61, 75], ["tensorflow.math.top_k", "tensorflow.gather"], "function", ["None"], ["", "", "def", "truncate_predictions", "(", "trajectories", ",", "confidences", ",", "k", "=", "6", ")", ":", "\n", "  ", "\"\"\"\n    Parameters:\n      trajectories: tensor of shape (B, K, 16, 2)\n      confidences: tensor of shape (B, K)\n    Returns:\n      truncated_trajectories: (B, min(K,6), 16,2)\n      truncated_confidences: (B, min(K,6))\n  \"\"\"", "\n", "if", "confidences", ".", "shape", "[", "1", "]", "<=", "k", ":", "\n", "    ", "return", "trajectories", ",", "confidences", ",", "None", "\n", "", "truncated_confidences", ",", "indices", "=", "tf", ".", "math", ".", "top_k", "(", "confidences", ",", "k", "=", "k", ")", "\n", "truncated_trajectories", "=", "tf", ".", "gather", "(", "trajectories", ",", "indices", ",", "batch_dims", "=", "1", ")", "\n", "return", "truncated_trajectories", ",", "truncated_confidences", ",", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_points": [[76, 84], ["None"], "function", ["None"], ["", "def", "transform_points", "(", "points", ",", "world_to_image", ")", ":", "\n", "  ", "\"\"\"\n  pts are nparray of shape(B, 2)\n  world_to_image is nparray of shape(3,3)\n  Returns nparray of shape(B, 2)\n  \"\"\"", "\n", "world_to_image", "=", "world_to_image", ".", "T", "\n", "return", "points", "@", "world_to_image", "[", ":", "2", ",", ":", "2", "]", "+", "world_to_image", "[", "2", ",", ":", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_matrix": [[85, 94], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "transform_matrix", "(", "cx", ",", "cy", ",", "yaw", ")", ":", "\n", "  ", "\"\"\"\n  Returns nparray of shape (3,3)\n  \"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "yaw", ")", "\n", "s", "=", "np", ".", "sin", "(", "yaw", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "2.5", "*", "c", ",", "2.5", "*", "s", ",", "-", "2.5", "*", "(", "c", "*", "cx", "+", "s", "*", "cy", ")", "+", "112", "]", ",", "\n", "[", "-", "2.5", "*", "s", ",", "2.5", "*", "c", ",", "-", "2.5", "*", "(", "-", "s", "*", "cx", "+", "c", "*", "cy", ")", "+", "112", "]", ",", "\n", "[", "0.", ",", "0.", ",", "1.", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.ego_to_world": [[95, 104], ["numpy.cos", "numpy.sin", "numpy.array"], "function", ["None"], ["", "def", "ego_to_world", "(", "cx", ",", "cy", ",", "yaw", ")", ":", "\n", "  ", "\"\"\"\n  Returns nparray of shape(3,3)\n  \"\"\"", "\n", "c", "=", "np", ".", "cos", "(", "yaw", ")", "\n", "s", "=", "np", ".", "sin", "(", "yaw", ")", "\n", "return", "np", ".", "array", "(", "[", "[", "c", ",", "-", "s", ",", "cx", "]", ",", "\n", "[", "s", ",", "c", ",", "cy", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.draw_trajectory": [[106, 152], ["utils.transform_points", "numpy.array().astype", "gt_transformed.astype.astype", "cv2.polylines", "range", "matplotlib.figure", "matplotlib.imshow", "matplotlib.show", "cv2.circle", "utils.transform_points", "numpy.array().astype", "transformed.astype.astype", "cv2.polylines", "numpy.array", "cv2.circle", "numpy.array"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_points", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_points"], ["", "def", "draw_trajectory", "(", "img", ",", "world_to_image", ",", "trajectory", "=", "None", ",", "gt_trajectory", "=", "None", ",", "avails", "=", "None", ",", "show_image", "=", "True", ",", "colors", "=", "None", ")", ":", "\n", "  ", "\"\"\"\n    img: (224,448,3)\n    trajectory: np array of (16, 80, 2) of (x,y) in world coordinates\n    world_to_image: 3x3 transform matrix to map from world to image coordinates\n    Returns: None.  img is modified in place to show the trajectory\n    gt_trajectory: np array of (80, 2)\n  \"\"\"", "\n", "if", "colors", "is", "None", ":", "\n", "    ", "colors", "=", "[", "\n", "(", "0", ",", "0", ",", "255", ")", ",", "\n", "(", "255", ",", "0", ",", "0", ")", ",", "\n", "(", "255", ",", "255", ",", "255", ")", ",", "\n", "(", "0", ",", "255", ",", "255", ")", ",", "\n", "(", "255", ",", "155", ",", "123", ")", ",", "\n", "(", "0", ",", "0", ",", "255", ")", ",", "\n", "(", "255", ",", "0", ",", "255", ")", ",", "\n", "(", "255", ",", "255", ",", "100", ")", "]", "\n", "", "num_modes", "=", "trajectory", ".", "shape", "[", "0", "]", "if", "trajectory", "is", "not", "None", "else", "1", "\n", "if", "gt_trajectory", "is", "not", "None", ":", "\n", "\n", "    ", "gt_transformed", "=", "transform_points", "(", "gt_trajectory", ",", "world_to_image", ")", "\n", "pts", "=", "np", ".", "array", "(", "[", "gt_transformed", "[", "29", "]", ",", "gt_transformed", "[", "59", "]", ",", "gt_transformed", "[", "79", "]", "]", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "for", "pt", "in", "pts", ":", "\n", "      ", "cv2", ".", "circle", "(", "img", ",", "(", "pt", "[", "0", "]", ",", "pt", "[", "1", "]", ")", ",", "2", ",", "(", "0", ",", "255", ",", "0", ")", ",", "-", "1", ")", "\n", "", "gt_transformed", "=", "gt_transformed", "*", "CV2_SHIFT_VALUE", "\n", "gt_transformed", "=", "gt_transformed", ".", "astype", "(", "np", ".", "int64", ")", "\n", "if", "avails", "is", "not", "None", ":", "\n", "      ", "gt_transformed", "=", "gt_transformed", "[", "avails", "]", "\n", "", "cv2", ".", "polylines", "(", "img", ",", "[", "gt_transformed", "]", ",", "False", ",", "color", "=", "(", "0", ",", "255", ",", "0", ")", ",", "thickness", "=", "1", ",", "lineType", "=", "cv2", ".", "LINE_AA", ",", "shift", "=", "CV2_SHIFT", ")", "\n", "\n", "\n", "", "if", "trajectory", "is", "not", "None", ":", "\n", "    ", "for", "i", "in", "range", "(", "num_modes", ")", ":", "\n", "      ", "transformed", "=", "transform_points", "(", "trajectory", "[", "i", ",", ":", ",", ":", "]", ",", "world_to_image", ")", "\n", "pts", "=", "np", ".", "array", "(", "[", "transformed", "[", "29", "]", ",", "transformed", "[", "59", "]", ",", "transformed", "[", "79", "]", "]", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "for", "pt", "in", "pts", ":", "\n", "        ", "cv2", ".", "circle", "(", "img", ",", "(", "pt", "[", "0", "]", ",", "pt", "[", "1", "]", ")", ",", "2", ",", "colors", "[", "i", "%", "8", "]", ",", "-", "1", ")", "\n", "\n", "", "transformed", "=", "transformed", "*", "CV2_SHIFT_VALUE", "\n", "transformed", "=", "transformed", ".", "astype", "(", "np", ".", "int64", ")", "\n", "cv2", ".", "polylines", "(", "img", ",", "[", "transformed", "]", ",", "False", ",", "color", "=", "colors", "[", "i", "%", "8", "]", ",", "thickness", "=", "1", ",", "lineType", "=", "cv2", ".", "LINE_AA", ",", "shift", "=", "CV2_SHIFT", ")", "\n", "", "", "if", "show_image", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "15", ",", "30", ")", ")", "\n", "plt", ".", "imshow", "(", "img", "[", ":", ":", "-", "1", "]", "/", "255", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_cnn_model": [[153, 162], ["tensorflow.keras.applications.EfficientNetB3"], "function", ["None"], ["", "", "def", "load_cnn_model", "(", "name", "=", "'efficient_net_b3'", ",", "input_shape", "=", "(", "224", ",", "448", ",", "3", ")", ")", ":", "\n", "  ", "efficient_net_b3", "=", "tf", ".", "keras", ".", "applications", ".", "EfficientNetB3", "(", "\n", "include_top", "=", "False", ",", "\n", "input_shape", "=", "input_shape", "\n", ")", "\n", "for", "layer", "in", "efficient_net_b3", ".", "layers", ":", "\n", "    ", "layer", ".", "trainable", "=", "True", "\n", "\n", "", "return", "efficient_net_b3", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.get_corners_in_world_coordinates": [[165, 194], ["numpy.zeros", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "get_corners_in_world_coordinates", "(", "boxes", ")", ":", "\n", "  ", "\"\"\"\n  boxes: Shape(B, 5): nparray of [centroidx, centroidy, length, width, yaw]\n  Returns: nparray of shape (B, 4, 2)\n  \"\"\"", "\n", "B", ",", "_", "=", "boxes", ".", "shape", "\n", "result", "=", "np", ".", "zeros", "(", "(", "B", ",", "4", ",", "2", ")", ",", "dtype", "=", "float", ")", "\n", "cx", "=", "boxes", "[", ":", ",", "0", "]", "\n", "cy", "=", "boxes", "[", ":", ",", "1", "]", "\n", "half_w", "=", "boxes", "[", ":", ",", "3", "]", "/", "2", "\n", "half_l", "=", "boxes", "[", ":", ",", "2", "]", "/", "2", "\n", "yaw", "=", "boxes", "[", ":", ",", "4", "]", "\n", "c", "=", "np", ".", "cos", "(", "yaw", ")", "\n", "s", "=", "np", ".", "sin", "(", "yaw", ")", "\n", "\n", "cl", "=", "c", "*", "half_l", "\n", "sw", "=", "s", "*", "half_w", "\n", "sl", "=", "s", "*", "half_l", "\n", "cw", "=", "c", "*", "half_w", "\n", "\n", "result", "[", ":", ",", "0", ",", "0", "]", "=", "cl", "-", "sw", "+", "cx", "\n", "result", "[", ":", ",", "1", ",", "0", "]", "=", "cl", "+", "sw", "+", "cx", "\n", "result", "[", ":", ",", "2", ",", "0", "]", "=", "-", "cl", "+", "sw", "+", "cx", "\n", "result", "[", ":", ",", "3", ",", "0", "]", "=", "-", "cl", "-", "sw", "+", "cx", "\n", "result", "[", ":", ",", "0", ",", "1", "]", "=", "sl", "+", "cw", "+", "cy", "\n", "result", "[", ":", ",", "1", ",", "1", "]", "=", "sl", "-", "cw", "+", "cy", "\n", "result", "[", ":", ",", "2", ",", "1", "]", "=", "-", "sl", "-", "cw", "+", "cy", "\n", "result", "[", ":", ",", "3", ",", "1", "]", "=", "-", "sl", "+", "cw", "+", "cy", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.road_segment_color": [[195, 214], ["None"], "function", ["None"], ["", "def", "road_segment_color", "(", "rs_type", ")", ":", "\n", "  ", "rs_color", "=", "{", "1", ":", "(", "1", ",", "1", ",", "1", ")", ",", "# LaneCenter-Freeway = 1", "\n", "2", ":", "(", "217", "/", "255", ",", "221", "/", "255", ",", "1", ")", ",", "# LaneCenter-SurfaceStreet = 2", "\n", "3", ":", "(", "0", ",", ".5", ",", "1", ")", ",", "# LaneCenter-BikeLane = 3", "\n", "6", ":", "(", "200", "/", "255", ",", "200", "/", "255", ",", "200", "/", "255", ")", ",", "# RoadLine-BrokenSingleWhite = 6", "\n", "7", ":", "(", "1", ",", "1", ",", "1", ")", ",", "# RoadLine-SolidSingleWhite = 7", "\n", "8", ":", "(", ".8", ",", ".8", ",", ".8", ")", ",", "#  RoadLine-SolidDoubleWhite = 8", "\n", "9", ":", "(", "1", ",", "1", ",", "0", ")", ",", "# RoadLine-BrokenSingleYellow = 9", "\n", "10", ":", "(", ".8", ",", ".8", ",", "0", ")", ",", "# RoadLine-BrokenDoubleYellow = 10", "\n", "11", ":", "(", ".9", ",", ".9", ",", "0", ")", ",", "#Roadline-SolidSingleYellow = 11, ", "\n", "12", ":", "(", ".7", ",", ".7", ",", "0", ")", ",", "#Roadline-SolidDoubleYellow=12, ", "\n", "13", ":", "(", ".75", ",", ".75", ",", "0", ")", ",", "#RoadLine-PassingDoubleYellow = 13,", "\n", "15", ":", "(", ".5", ",", "0", ",", "1", ")", ",", "#RoadEdgeBoundary = 15, ", "\n", "16", ":", "(", ".5", ",", "0", ",", "1", ")", ",", "#RoadEdgeMedian = 16, ", "\n", "17", ":", "(", "1", ",", "0", ",", "0", ")", ",", "#StopSign = 17, ", "\n", "18", ":", "(", "0", ",", "0", ",", "1", ")", ",", "#Crosswalk = 18, ", "\n", "19", ":", "(", ".6", ",", ".5", ",", ".6", ")", "#SpeedBump = 19", "\n", "}", "\n", "return", "rs_color", "[", "rs_type", "]", "if", "rs_type", "in", "rs_color", "else", "(", ".5", ",", ".5", ",", ".5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data": [[225, 229], ["utils.DotDict", "open", "yaml.load"], "function", ["None"], ["", "def", "load_config_data", "(", "experiment_name", ":", "str", ")", "->", "dict", ":", "\n", "    ", "with", "open", "(", "f\"drive/MyDrive/Motion/MotionPrediction/experiments/{experiment_name}\"", ")", "as", "f", ":", "\n", "        ", "cfg", ":", "dict", "=", "yaml", ".", "load", "(", "f", ",", "Loader", "=", "yaml", ".", "FullLoader", ")", "\n", "", "return", "DotDict", "(", "cfg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.cartesian_product": [[230, 244], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.tile", "tensorflow.tile", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.stack"], "function", ["None"], ["", "def", "cartesian_product", "(", "a", ",", "b", ")", ":", "\n", "  ", "\"\"\"\n  Note: this cartesian product only supports tiling of dimension 1(first dimension is batch)\n  \"\"\"", "\n", "length_a", "=", "a", ".", "shape", "[", "1", "]", "\n", "length_b", "=", "b", ".", "shape", "[", "1", "]", "\n", "a", "=", "tf", ".", "reshape", "(", "a", ",", "[", "-", "1", ",", "length_a", ",", "1", ",", "80", ",", "2", "]", ")", "\n", "b", "=", "tf", ".", "reshape", "(", "b", ",", "[", "-", "1", ",", "1", ",", "length_b", ",", "80", ",", "2", "]", ")", "\n", "a", "=", "tf", ".", "tile", "(", "a", ",", "[", "1", ",", "1", ",", "length_b", ",", "1", ",", "1", "]", ")", "\n", "b", "=", "tf", ".", "tile", "(", "b", ",", "[", "1", ",", "length_a", ",", "1", ",", "1", ",", "1", "]", ")", "\n", "a", "=", "tf", ".", "reshape", "(", "a", ",", "[", "-", "1", ",", "length_a", "*", "length_b", ",", "80", ",", "2", "]", ")", "\n", "b", "=", "tf", ".", "reshape", "(", "b", ",", "[", "-", "1", ",", "length_a", "*", "length_b", ",", "80", ",", "2", "]", ")", "\n", "c", "=", "tf", ".", "stack", "(", "[", "a", ",", "b", "]", ",", "2", ")", "\n", "return", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.confidence_cartesian_product": [[245, 256], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.tile", "tensorflow.tile", "tensorflow.reshape", "tensorflow.reshape"], "function", ["None"], ["", "def", "confidence_cartesian_product", "(", "a", ",", "b", ")", ":", "\n", "  ", "length_a", "=", "a", ".", "shape", "[", "1", "]", "\n", "length_b", "=", "b", ".", "shape", "[", "1", "]", "\n", "a", "=", "tf", ".", "reshape", "(", "a", ",", "[", "-", "1", ",", "1", ",", "length_a", "]", ")", "\n", "b", "=", "tf", ".", "reshape", "(", "b", ",", "[", "-", "1", ",", "length_b", ",", "1", "]", ")", "\n", "a", "=", "tf", ".", "tile", "(", "a", ",", "[", "1", ",", "length_b", ",", "1", "]", ")", "\n", "b", "=", "tf", ".", "tile", "(", "b", ",", "[", "1", ",", "1", ",", "length_a", "]", ")", "\n", "a", "=", "tf", ".", "reshape", "(", "a", ",", "[", "-", "1", ",", "length_a", "*", "length_b", "]", ")", "\n", "b", "=", "tf", ".", "reshape", "(", "b", ",", "[", "-", "1", ",", "length_a", "*", "length_b", "]", ")", "\n", "c", "=", "a", "*", "b", "\n", "return", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape": [[257, 262], ["tensorflow.zeros_like", "tensorflow.pad", "tensorflow.reshape", "tensorflow.minimum", "tensorflow.stack", "tensorflow.slice", "tensorflow.shape"], "function", ["None"], ["", "def", "pad_to_shape", "(", "x", ",", "shape", ",", "pad_val", "=", "0", ")", ":", "\n", "  ", "pad", "=", "shape", "-", "tf", ".", "minimum", "(", "tf", ".", "shape", "(", "x", ")", ",", "shape", ")", "\n", "zeros", "=", "tf", ".", "zeros_like", "(", "pad", ")", "\n", "x", "=", "tf", ".", "pad", "(", "x", ",", "tf", ".", "stack", "(", "[", "zeros", ",", "pad", "]", ",", "axis", "=", "1", ")", ",", "constant_values", "=", "pad_val", ")", "\n", "return", "tf", ".", "reshape", "(", "tf", ".", "slice", "(", "x", ",", "zeros", ",", "shape", ")", ",", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.calculate_lr": [[263, 274], ["utils.load_config_data", "utils.DotDict", "utils.DotDict"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data"], ["", "def", "calculate_lr", "(", "steps", ",", "yaml_file", ")", ":", "\n", "  ", "cfg", "=", "load_config_data", "(", "yaml_file", ")", "\n", "train_params", "=", "DotDict", "(", "cfg", ".", "train_params", ")", "\n", "model_params", "=", "DotDict", "(", "cfg", ".", "model_params", ")", "\n", "initial_lr", "=", "train_params", ".", "initial_lr", "\n", "decay_steps", "=", "train_params", ".", "steps", "\n", "alpha", "=", "train_params", ".", "alpha", "\n", "if", "steps", "<", "decay_steps", ":", "\n", "    ", "return", "initial_lr", "*", "(", "alpha", "+", "(", "1", "-", "alpha", ")", "*", "(", "decay_steps", "-", "steps", ")", "/", "decay_steps", ")", "\n", "", "else", ":", "\n", "    ", "return", "initial_lr", "*", "alpha", "", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.rasterize.rasterize": [[14, 143], ["tensorflow.stack", "tensorflow.stack", "tensorflow.concat", "tensorflow.concat", "tensorflow.reduce_any", "tensorflow.boolean_mask", "tensorflow.squeeze", "tensorflow.where().numpy", "tensorflow.boolean_mask", "tensorflow.where().numpy", "numpy.squeeze", "numpy.squeeze", "current_is_valid.numpy.numpy", "tensorflow.transpose", "tensorflow.reshape", "utils.get_corners_in_world_coordinates", "parsed[].numpy().reshape", "parsed[].numpy().reshape", "parsed[].numpy().reshape", "tensorflow.squeeze", "tensorflow.boolean_mask", "tensorflow.boolean_mask", "numpy.squeeze", "numpy.squeeze", "valid_xy_plus_dir.numpy.numpy", "valid_xy_road.numpy.numpy", "tensorflow.boolean_mask().numpy", "tensorflow.boolean_mask().numpy", "numpy.zeros", "enumerate", "tensorflow.boolean_mask().numpy", "tensorflow.boolean_mask().numpy", "Exception", "utils.transform_matrix", "utils.transform_points", "numpy.zeros", "numpy.stack().astype", "enumerate", "numpy.clip", "numpy.reshape().astype", "numpy.zeros", "range", "numpy.clip", "tensorflow.where", "tensorflow.where", "parsed[].numpy", "parsed[].numpy", "parsed[].numpy", "tensorflow.boolean_mask", "tensorflow.boolean_mask", "len", "len", "len", "print", "utils.transform_points", "utils.transform_points", "numpy.where", "cv2.polylines", "cv2.polylines", "cv2.fillPoly", "cv2.fillPoly", "tensorflow.cumsum", "tensorflow.boolean_mask", "tensorflow.boolean_mask", "numpy.stack", "numpy.where", "numpy.reshape", "tensorflow.cast", "utils.road_segment_color"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.get_corners_in_world_coordinates", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_matrix", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_points", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_points", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_points", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.road_segment_color"], ["def", "rasterize", "(", "parsed", ")", ":", "\n", "  ", "\"\"\"\n  Parameters:\n    parsed: a parsed example\n  \n  Returns:\n    batch_images: a nparray of rasterized images of shape(B, 224,448, 3) dtype = float32\n  \"\"\"", "\n", "decoded_example", "=", "parsed", "\n", "\n", "past_states", "=", "tf", ".", "stack", "(", "[", "\n", "decoded_example", "[", "'state/past/x'", "]", ",", "\n", "decoded_example", "[", "'state/past/y'", "]", ",", "\n", "decoded_example", "[", "'state/past/length'", "]", ",", "\n", "decoded_example", "[", "'state/past/width'", "]", ",", "\n", "decoded_example", "[", "'state/past/bbox_yaw'", "]", "\n", "]", ",", "-", "1", ")", "\n", "cur_states", "=", "tf", ".", "stack", "(", "[", "\n", "decoded_example", "[", "'state/current/x'", "]", ",", "\n", "decoded_example", "[", "'state/current/y'", "]", ",", "\n", "decoded_example", "[", "'state/current/length'", "]", ",", "\n", "decoded_example", "[", "'state/current/width'", "]", ",", "\n", "decoded_example", "[", "'state/current/bbox_yaw'", "]", "\n", "]", ",", "-", "1", ")", "\n", "states", "=", "tf", ".", "concat", "(", "[", "past_states", ",", "cur_states", "]", ",", "axis", "=", "1", ")", "\n", "past_is_valid", "=", "decoded_example", "[", "'state/past/valid'", "]", ">", "0", "\n", "current_is_valid", "=", "decoded_example", "[", "'state/current/valid'", "]", ">", "0", "\n", "is_valid", "=", "tf", ".", "concat", "(", "[", "past_is_valid", ",", "current_is_valid", "]", ",", "axis", "=", "1", ")", "\n", "is_valid", "=", "tf", ".", "reduce_any", "(", "is_valid", ",", "1", ")", "\n", "valid_states", "=", "tf", ".", "boolean_mask", "(", "states", ",", "is_valid", ")", "\n", "tracks_to_predict", "=", "parsed", "[", "'state/tracks_to_predict'", "]", "\n", "current_is_valid", "=", "tf", ".", "squeeze", "(", "current_is_valid", ",", "axis", "=", "1", ")", "\n", "orig_to_valid_map", "=", "(", "tf", ".", "cumsum", "(", "tf", ".", "cast", "(", "is_valid", ",", "dtype", "=", "tf", ".", "int32", ")", ")", "-", "1", ")", ".", "numpy", "(", ")", "\n", "tracks", "=", "tf", ".", "where", "(", "tracks_to_predict", ">", "0", ")", "\n", "tracks", "=", "tracks", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n", "current_is_valid", "=", "current_is_valid", ".", "numpy", "(", ")", "\n", "\n", "r_valid_states", "=", "tf", ".", "transpose", "(", "valid_states", ",", "perm", "=", "[", "1", ",", "0", ",", "2", "]", ")", "# (11,58,5)", "\n", "r_valid_states", "=", "tf", ".", "reshape", "(", "r_valid_states", ",", "(", "-", "1", ",", "5", ")", ")", "\n", "corners", "=", "get_corners_in_world_coordinates", "(", "r_valid_states", ")", "# (58*11, 4, 2)", "\n", "\n", "ego_info", "=", "{", "}", "\n", "current_x", "=", "parsed", "[", "'state/current/x'", "]", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n", "current_y", "=", "parsed", "[", "'state/current/y'", "]", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n", "current_yaw", "=", "parsed", "[", "'state/current/bbox_yaw'", "]", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "# Prepare the road data", "\n", "xyz_road", "=", "parsed", "[", "'roadgraph_samples/xyz'", "]", "\n", "is_valid_road", "=", "parsed", "[", "'roadgraph_samples/valid'", "]", "\n", "road_type", "=", "parsed", "[", "'roadgraph_samples/type'", "]", "\n", "\n", "xy_road", "=", "xyz_road", "[", ":", ",", ":", "2", "]", "\n", "is_valid_road", "=", "tf", ".", "squeeze", "(", "is_valid_road", ")", "\n", "valid_xy_road", "=", "tf", ".", "boolean_mask", "(", "xy_road", ",", "is_valid_road", ")", "\n", "dir_road", "=", "parsed", "[", "'roadgraph_samples/dir'", "]", "\n", "dir_xy_road", "=", "dir_road", "[", ":", ",", ":", "2", "]", "\n", "valid_dir_xy_road", "=", "tf", ".", "boolean_mask", "(", "dir_xy_road", ",", "is_valid_road", ")", "\n", "valid_road_type", "=", "np", ".", "squeeze", "(", "tf", ".", "boolean_mask", "(", "road_type", ",", "is_valid_road", ")", ".", "numpy", "(", ")", ")", "\n", "road_ids", "=", "np", ".", "squeeze", "(", "tf", ".", "boolean_mask", "(", "parsed", "[", "'roadgraph_samples/id'", "]", ",", "is_valid_road", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "valid_xy_plus_dir", "=", "valid_xy_road", "+", "valid_dir_xy_road", "\n", "valid_xy_plus_dir", "=", "valid_xy_plus_dir", ".", "numpy", "(", ")", "\n", "valid_xy_road", "=", "valid_xy_road", ".", "numpy", "(", ")", "\n", "\n", "tl_state", "=", "parsed", "[", "'traffic_light_state/current/state'", "]", "\n", "tl_ids", "=", "parsed", "[", "'traffic_light_state/current/id'", "]", "\n", "tl_valid", "=", "parsed", "[", "'traffic_light_state/current/valid'", "]", "\n", "valid_tl_states", "=", "tf", ".", "boolean_mask", "(", "tl_state", ",", "tl_valid", ")", ".", "numpy", "(", ")", "\n", "valid_tl_ids", "=", "tf", ".", "boolean_mask", "(", "tl_ids", ",", "tl_valid", ")", ".", "numpy", "(", ")", "\n", "\n", "batch_images", "=", "np", ".", "zeros", "(", "(", "len", "(", "tracks", ")", ",", "224", ",", "448", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "track_index", ",", "track", "in", "enumerate", "(", "tracks", ")", ":", "\n", "    ", "if", "not", "current_is_valid", "[", "track", "]", ":", "\n", "      ", "print", "(", "\"WARNING! Found a track that is not valid in current frame!\"", ")", "\n", "batch_images", "[", "track_index", "]", "=", "None", "\n", "continue", "\n", "", "track_in_valid_index", "=", "orig_to_valid_map", "[", "track", "]", "\n", "\n", "cx", "=", "current_x", "[", "track", "]", "\n", "cy", "=", "current_y", "[", "track", "]", "\n", "yaw", "=", "current_yaw", "[", "track", "]", "\n", "# generate the transfer matrix", "\n", "transform", "=", "transform_matrix", "(", "cx", ",", "cy", ",", "yaw", ")", "\n", "transformed", "=", "transform_points", "(", "corners", ",", "transform", ")", "\n", "\n", "tl_colors", "=", "[", "(", "1", ",", "1", ",", "1", ")", ",", "# white Unknown = 0", "\n", "(", "1", ",", "0", ",", "0", ")", ",", "# red Arrow_Stop = 1", "\n", "(", "1", ",", "1", ",", "0", ")", ",", "# yellow Arrow_Caution = 2", "\n", "(", "0", ",", "1", ",", "0", ")", ",", "# green Arrow_go = 3", "\n", "(", "1", ",", "0", ",", "0", ")", ",", "# red stop = 4", "\n", "(", "1", ",", "1", ",", "0", ")", ",", "# yellow caution = 5", "\n", "(", "0", ",", "1", ",", "0", ")", ",", "# green go = 6", "\n", "(", "1", ",", "115", "/", "255", ",", "0", ")", ",", "# red flashing_stop = 7", "\n", "(", "212", "/", "255", ",", "1", ",", "0", ")", "]", "# yellow flashing caution = 8", "\n", "# Drawing the road", "\n", "road_img", "=", "np", ".", "zeros", "(", "(", "224", ",", "448", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "valid_xy_road_in_img", "=", "transform_points", "(", "valid_xy_road", ",", "transform", ")", "*", "CV2_SHIFT_VALUE", "\n", "valid_xy_plus_dir_in_img", "=", "transform_points", "(", "valid_xy_plus_dir", ",", "transform", ")", "*", "CV2_SHIFT_VALUE", "\n", "road_pts", "=", "np", ".", "stack", "(", "[", "valid_xy_road_in_img", ",", "valid_xy_plus_dir_in_img", "]", ",", "1", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "for", "rs_type", "in", "[", "1", ",", "2", ",", "3", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", "]", ":", "\n", "      ", "type_indexes", "=", "np", ".", "where", "(", "valid_road_type", "==", "rs_type", ")", "\n", "cv2", ".", "polylines", "(", "road_img", ",", "road_pts", "[", "type_indexes", "]", ",", "False", ",", "color", "=", "road_segment_color", "(", "rs_type", ")", ",", "lineType", "=", "cv2", ".", "LINE_AA", ",", "shift", "=", "CV2_SHIFT", ")", "\n", "", "for", "i", ",", "tl_state", "in", "enumerate", "(", "valid_tl_states", ")", ":", "\n", "      ", "lane_id", "=", "valid_tl_ids", "[", "i", "]", "\n", "tl_road_pt_indexes", "=", "np", ".", "where", "(", "road_ids", "==", "lane_id", ")", "[", "0", "]", "\n", "cv2", ".", "polylines", "(", "road_img", ",", "road_pts", "[", "tl_road_pt_indexes", "]", ",", "False", ",", "tl_colors", "[", "tl_state", "]", ",", "lineType", "=", "cv2", ".", "LINE_AA", ",", "shift", "=", "CV2_SHIFT", ")", "\n", "", "road_img", "=", "np", ".", "clip", "(", "road_img", ",", "0", ",", "1", ")", "\n", "\n", "pts", "=", "np", ".", "reshape", "(", "transformed", "*", "CV2_SHIFT_VALUE", ",", "(", "11", ",", "-", "1", ",", "4", ",", "2", ")", ")", ".", "astype", "(", "np", ".", "int64", ")", "\n", "out_img", "=", "np", ".", "zeros", "(", "(", "224", ",", "448", ",", "3", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "range", "(", "11", ")", ":", "\n", "      ", "out_img", "*=", "0.85", "\n", "cv2", ".", "fillPoly", "(", "out_img", ",", "pts", "[", "i", "]", ",", "color", "=", "(", "1", ",", "1", ",", "0", ")", ",", "lineType", "=", "cv2", ".", "LINE_AA", ",", "shift", "=", "CV2_SHIFT", ")", "\n", "# draw the ego in green", "\n", "cv2", ".", "fillPoly", "(", "out_img", ",", "pts", "[", "i", "]", "[", "track_in_valid_index", ":", "track_in_valid_index", "+", "1", "]", ",", "color", "=", "(", "0", ",", "1", ",", "0", ")", ",", "lineType", "=", "cv2", ".", "LINE_AA", ",", "shift", "=", "CV2_SHIFT", ")", "\n", "", "out_img", "=", "np", ".", "clip", "(", "out_img", ",", "0", ",", "1", ")", "\n", "\n", "# Combine road and car images", "\n", "road_img", "[", "out_img", ">", "0", "]", "=", "out_img", "[", "out_img", ">", "0", "]", "\n", "batch_images", "[", "track_index", "]", "=", "(", "road_img", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "return", "batch_images", "\n", "\n", "", "def", "compute_embeddings", "(", "batch_images", ",", "cnn_models", ")", ":", "\n", "  "]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.rasterize.compute_embeddings": [[136, 153], ["cnn_models.items", "model.predict", "model.predict.numpy", "tensorflow.convert_to_tensor", "tensorflow.keras.layers.GlobalAveragePooling2D"], "function", ["None"], ["", "def", "compute_embeddings", "(", "batch_images", ",", "cnn_models", ")", ":", "\n", "  ", "\"\"\"\n  Parameters:\n    batch_images: nparray of shape(B, 224,448, 3)\n    cnn_models: dictionary from model_names to models\n\n  Returns:\n     a dictionary from model_names to embeddings of shape(B, out_embedding_size)\n  \"\"\"", "\n", "# evaluate the pre-trained CNN embeddings", "\n", "model_embeddings", "=", "{", "}", "\n", "for", "model_name", ",", "model", "in", "cnn_models", ".", "items", "(", ")", ":", "\n", "    ", "model_embedding", "=", "model", ".", "predict", "(", "tf", ".", "convert_to_tensor", "(", "batch_images", ")", ")", "# Outputs (B,7,7,2048)", "\n", "model_embedding", "=", "model_embedding", "[", ":", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", ",", ":", "]", "\n", "model_embedding", "=", "tf", ".", "keras", ".", "layers", ".", "GlobalAveragePooling2D", "(", ")", "(", "model_embedding", ")", "# Outputs (B,2048)", "\n", "model_embeddings", "[", "model_name", "]", "=", "model_embedding", ".", "numpy", "(", ")", "\n", "", "return", "model_embeddings", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process.process_validation": [[4, 13], ["range", "print", "os.system", "generate_data.process_one_raw_training_file", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file"], ["def", "process_validation", "(", "start", "=", "0", ",", "end", "=", "150", ")", ":", "\n", "  ", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/validation/validation_tfexample.tfrecord-0{i:04d}-of-00150 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "process_one_raw_training_file", "(", "f\"validation_tfexample.tfrecord-0{i:04d}-of-00150\"", ",", "f\"drive/MyDrive/Motion/validation/images-0{i:04d}-of-00150\"", ",", "include_images", "=", "True", ")", "\n", "rm_cmd", "=", "f'rm validation_tfexample.tfrecord-0{i:04d}-of-00150'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process.v2_process_train": [[14, 23], ["range", "print", "os.system", "generate_data.v2_process_one_raw_training_file", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.v2_process_one_raw_training_file"], ["", "", "def", "v2_process_train", "(", "start", "=", "0", ",", "end", "=", "1000", ")", ":", "\n", "  ", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/training/training_tfexample.tfrecord-0{i:04d}-of-01000 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "v2_process_one_raw_training_file", "(", "f\"training_tfexample.tfrecord-0{i:04d}-of-01000\"", ",", "f\"drive/MyDrive/Motion/data/training_v2/images-0{i:04d}-of-01000\"", ")", "\n", "rm_cmd", "=", "f'rm training_tfexample.tfrecord-0{i:04d}-of-01000'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process.v2_process_validation": [[24, 33], ["range", "print", "os.system", "generate_data.v2_process_one_raw_training_file", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.v2_process_one_raw_training_file"], ["", "", "def", "v2_process_validation", "(", "start", "=", "0", ",", "end", "=", "150", ")", ":", "\n", "  ", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/validation/validation_tfexample.tfrecord-0{i:04d}-of-00150 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "v2_process_one_raw_training_file", "(", "f\"validation_tfexample.tfrecord-0{i:04d}-of-00150\"", ",", "f\"drive/MyDrive/Motion/data/validation_v2/images-0{i:04d}-of-00150\"", ")", "\n", "rm_cmd", "=", "f'rm validation_tfexample.tfrecord-0{i:04d}-of-00150'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process.v2_process_testing": [[34, 43], ["range", "print", "os.system", "generate_data.v2_process_one_raw_training_file", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.v2_process_one_raw_training_file"], ["", "", "def", "v2_process_testing", "(", "start", "=", "0", ",", "end", "=", "150", ")", ":", "\n", "  ", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/testing/testing_tfexample.tfrecord-0{i:04d}-of-00150 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "v2_process_one_raw_training_file", "(", "f\"testing_tfexample.tfrecord-0{i:04d}-of-00150\"", ",", "f\"drive/MyDrive/Motion/data/testing_v2/images-0{i:04d}-of-00150\"", ")", "\n", "rm_cmd", "=", "f'rm testing_tfexample.tfrecord-0{i:04d}-of-00150'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.v2_build_tf_example": [[6, 36], ["tensorflow.squeeze().numpy", "tensorflow.train.Example", "enumerate", "raw_features.state_features.items", "tensorflow.compat.as_bytes", "tensorflow.gather().numpy", "tensorflow.squeeze", "tensorflow.image.encode_jpeg", "[].numpy", "list", "tensorflow.where", "tensorflow.compat.as_bytes", "tensorflow.gather", "tf.gather().numpy.reshape", "list", "tf.image.encode_jpeg.numpy", "tf.gather().numpy.reshape", "tensorflow.compat.as_bytes"], "function", ["None"], ["def", "v2_build_tf_example", "(", "parsed", ",", "images", "=", "None", ")", ":", "\n", "  ", "\"\"\"\n  Parameters:\n    parsed: the raw data\n    embeddings: a dictionary from models to embeddings for all egos (e.g. (# of egos, 2048))\n  \n  Returns:\n    example: tf.train.Example\n  \"\"\"", "\n", "tracks", "=", "parsed", "[", "'state/tracks_to_predict'", "]", "# (128,)", "\n", "tracks_before_mask", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "tracks", "==", "1", ")", ",", "axis", "=", "1", ")", ".", "numpy", "(", ")", "# indices before masking", "\n", "example", "=", "tf", ".", "train", ".", "Example", "(", ")", "\n", "feature", "=", "example", ".", "features", ".", "feature", "\n", "for", "i", ",", "index", "in", "enumerate", "(", "tracks_before_mask", ")", ":", "\n", "    ", "if", "images", "is", "not", "None", ":", "\n", "      ", "img", "=", "images", "[", "i", "]", "\n", "image_data", "=", "tf", ".", "image", ".", "encode_jpeg", "(", "img", ",", "format", "=", "'rgb'", ",", "quality", "=", "100", ")", "\n", "feature", "[", "f\"image{i}/encoded\"", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "image_data", ".", "numpy", "(", ")", ")", "]", "\n", "\n", "", "", "feature", "[", "'scenario/id'", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "parsed", "[", "'scenario/id'", "]", "[", "0", "]", ".", "numpy", "(", ")", ")", "]", "\n", "\n", "for", "feature_name", ",", "f", "in", "state_features", ".", "items", "(", ")", ":", "\n", "    ", "gathered", "=", "tf", ".", "gather", "(", "parsed", "[", "feature_name", "]", ",", "tracks_before_mask", ")", ".", "numpy", "(", ")", "\n", "if", "f", ".", "dtype", "is", "tf", ".", "float32", ":", "\n", "      ", "feature", "[", "feature_name", "]", ".", "float_list", ".", "value", "[", ":", "]", "=", "list", "(", "gathered", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "elif", "f", ".", "dtype", "is", "tf", ".", "int64", ":", "\n", "      ", "feature", "[", "feature_name", "]", ".", "int64_list", ".", "value", "[", ":", "]", "=", "list", "(", "gathered", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "elif", "f", ".", "dtype", "is", "tf", ".", "string", ":", "\n", "      ", "feature", "[", "feature_name", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "gathered", ")", "]", "\n", "", "", "return", "example", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.v2_process_one_raw_training_file": [[37, 55], ["tensorflow.data.TFRecordDataset", "tf.data.TFRecordDataset.as_numpy_iterator", "print", "tf.data.TFRecordDataset.as_numpy_iterator", "print", "tensorflow.io.parse_single_example", "rasterize.rasterize", "generate_data.v2_build_tf_example", "all_examples.append", "tensorflow.io.TFRecordWriter", "writer.write", "v2_build_tf_example.SerializeToString"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.rasterize.rasterize", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.v2_build_tf_example"], ["", "def", "v2_process_one_raw_training_file", "(", "input_filename", ",", "output_filename", ")", ":", "\n", "  ", "dataset", "=", "tf", ".", "data", ".", "TFRecordDataset", "(", "input_filename", ",", "compression_type", "=", "''", ")", "\n", "num_examples", "=", "0", "\n", "for", "data", "in", "dataset", ".", "as_numpy_iterator", "(", ")", ":", "\n", "    ", "num_examples", "+=", "1", "\n", "", "print", "(", "'num_examples'", ",", "num_examples", ")", "\n", "i", "=", "0", "\n", "all_examples", "=", "[", "]", "\n", "for", "data", "in", "dataset", ".", "as_numpy_iterator", "(", ")", ":", "\n", "    ", "parsed", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "features_description", ")", "\n", "batch_images", "=", "rasterize", "(", "parsed", ")", "\n", "example", "=", "v2_build_tf_example", "(", "parsed", ",", "images", "=", "batch_images", ")", "\n", "all_examples", ".", "append", "(", "example", ")", "\n", "i", "+=", "1", "\n", "", "print", "(", "'finished'", ",", "i", ")", "\n", "with", "tf", ".", "io", ".", "TFRecordWriter", "(", "output_filename", ")", "as", "writer", ":", "\n", "    ", "for", "example", "in", "all_examples", ":", "\n", "      ", "writer", ".", "write", "(", "example", ".", "SerializeToString", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.build_tf_examples": [[56, 91], ["tensorflow.boolean_mask().numpy().reshape", "range", "len", "tensorflow.train.Example", "raw_features.state_features.items", "examples.append", "tensorflow.boolean_mask().numpy", "tensorflow.image.encode_jpeg", "tensorflow.compat.as_bytes", "len", "embeddings.items", "tensorflow.compat.as_bytes", "[].numpy", "list", "list", "tensorflow.boolean_mask", "tf.image.encode_jpeg.numpy", "numpy.array().reshape", "[].numpy().reshape", "list", "[].numpy().reshape", "numpy.array", "[].numpy", "tensorflow.compat.as_bytes", "[].numpy", "[].numpy"], "function", ["None"], ["", "", "", "def", "build_tf_examples", "(", "parsed", ",", "embeddings", ",", "images", "=", "None", ")", ":", "\n", "  ", "\"\"\"\n  Parameters:\n    parsed: the raw data\n    embeddings: a dictionary from models to embeddings for all egos (e.g. (# of egos, 2048))\n  \n  Returns:\n    examples: list of tf.Examples\n  \"\"\"", "\n", "examples", "=", "[", "]", "\n", "ego_x", "=", "tf", ".", "boolean_mask", "(", "parsed", "[", "'state/current/x'", "]", ",", "parsed", "[", "'state/tracks_to_predict'", "]", ">", "0", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "ego_x", ")", ")", ":", "\n", "    ", "example", "=", "tf", ".", "train", ".", "Example", "(", ")", "\n", "feature", "=", "example", ".", "features", ".", "feature", "\n", "if", "images", "is", "not", "None", ":", "\n", "      ", "img", "=", "images", "[", "i", "]", "\n", "image_data", "=", "tf", ".", "image", ".", "encode_jpeg", "(", "img", ",", "format", "=", "'rgb'", ",", "quality", "=", "100", ")", "\n", "feature", "[", "'image/encoded'", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "image_data", ".", "numpy", "(", ")", ")", "]", "\n", "", "feature", "[", "'ego_index'", "]", ".", "int64_list", ".", "value", "[", ":", "]", "=", "[", "i", "]", "\n", "feature", "[", "'scenario/id'", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "parsed", "[", "'scenario/id'", "]", "[", "0", "]", ".", "numpy", "(", ")", ")", "]", "\n", "\n", "if", "len", "(", "embeddings", ")", ">", "0", ":", "\n", "      ", "for", "model_name", ",", "embedding", "in", "embeddings", ".", "items", "(", ")", ":", "\n", "        ", "feature", "[", "model_name", "]", ".", "float_list", ".", "value", "[", ":", "]", "=", "list", "(", "np", ".", "array", "(", "embedding", "[", "i", "]", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "", "for", "feature_name", ",", "f", "in", "state_features", ".", "items", "(", ")", ":", "\n", "      ", "if", "f", ".", "dtype", "is", "tf", ".", "float32", ":", "\n", "        ", "feature", "[", "feature_name", "]", ".", "float_list", ".", "value", "[", ":", "]", "=", "list", "(", "parsed", "[", "feature_name", "]", "[", "i", ":", "i", "+", "1", "]", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "elif", "f", ".", "dtype", "is", "tf", ".", "int64", ":", "\n", "        ", "feature", "[", "feature_name", "]", ".", "int64_list", ".", "value", "[", ":", "]", "=", "list", "(", "parsed", "[", "feature_name", "]", "[", "i", ":", "i", "+", "1", "]", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "elif", "f", ".", "dtype", "is", "tf", ".", "string", ":", "\n", "        ", "feature", "[", "feature_name", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "parsed", "[", "feature_name", "]", "[", "i", ":", "i", "+", "1", "]", ".", "numpy", "(", ")", ")", "]", "\n", "\n", "", "", "examples", ".", "append", "(", "example", ")", "\n", "", "return", "examples", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.generate_training_examples": [[92, 104], ["rasterize.rasterize", "generate_data.build_tf_examples", "raw_features.state_features"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.rasterize.rasterize", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.build_tf_examples"], ["", "def", "generate_training_examples", "(", "parsed", ",", "cnn_models", ",", "state_features", "=", "state_features", ",", "include_images", "=", "False", ")", ":", "\n", "  ", "\"\"\"\n  Parameters:\n    parsed: one parsed example\n    state_features: dictionary of different features\n  \n  Returns:\n    examples: list of tf.Examples(for training)\n  \"\"\"", "\n", "batch_images", "=", "rasterize", "(", "parsed", ")", "\n", "embeddings", "=", "{", "}", "\n", "return", "build_tf_examples", "(", "parsed", ",", "embeddings", ",", "batch_images", "if", "include_images", "else", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file": [[45, 66], ["tensorflow.data.TFRecordDataset", "tf.data.TFRecordDataset.as_numpy_iterator", "print", "tf.data.TFRecordDataset.as_numpy_iterator", "print", "tensorflow.io.parse_single_example", "rasterize.rasterize", "generate_data.build_tf_example", "all_examples.append", "tensorflow.io.TFRecordWriter", "len", "writer.write", "tensorflow.where().numpy", "build_tf_example.SerializeToString", "tensorflow.where"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.rasterize.rasterize", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.build_tf_example"], ["for", "data", "in", "dataset", ".", "as_numpy_iterator", "(", ")", ":", "\n", "    ", "parsed", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "features_description", ")", "\n", "batch_images", "=", "rasterize", "(", "parsed", ")", "\n", "example", "=", "v2_build_tf_example", "(", "parsed", ",", "images", "=", "batch_images", ")", "\n", "all_examples", ".", "append", "(", "example", ")", "\n", "i", "+=", "1", "\n", "", "print", "(", "'finished'", ",", "i", ")", "\n", "with", "tf", ".", "io", ".", "TFRecordWriter", "(", "output_filename", ")", "as", "writer", ":", "\n", "    ", "for", "example", "in", "all_examples", ":", "\n", "      ", "writer", ".", "write", "(", "example", ".", "SerializeToString", "(", ")", ")", "\n", "\n", "", "", "", "def", "build_tf_examples", "(", "parsed", ",", "embeddings", ",", "images", "=", "None", ")", ":", "\n", "  ", "\"\"\"\n  Parameters:\n    parsed: the raw data\n    embeddings: a dictionary from models to embeddings for all egos (e.g. (# of egos, 2048))\n  \n  Returns:\n    examples: list of tf.Examples\n  \"\"\"", "\n", "examples", "=", "[", "]", "\n", "ego_x", "=", "tf", ".", "boolean_mask", "(", "parsed", "[", "'state/current/x'", "]", ",", "parsed", "[", "'state/tracks_to_predict'", "]", ">", "0", ")", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.rerasterize.rerasterize_interaction": [[12, 63], ["MotionPrediction.interaction_prediction.dataset._parse_no_swap", "tensorflow.stack", "inputs[].numpy", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "model", "MotionPrediction.utils.truncate_predictions", "range", "numpy.stack", "example.SerializeToString", "numpy.zeros", "numpy.concatenate", "MotionPrediction.utils.transform_matrix", "MotionPrediction.utils.transform_points.reshape", "MotionPrediction.utils.transform_points", "range", "np.stack.append", "MotionPrediction.utils.transform_points.reshape", "cv2.polylines", "current_image.astype", "current_points.astype"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._parse_no_swap", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_matrix", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_points"], ["def", "rerasterize_interaction", "(", "model", ",", "example", ")", ":", "\n", "  ", "\"\"\"\n    Parameters:\n      model: MotionPrediction Model: MOEModelWithVariableClusters\n      example: one raw tf.example\n    Returns:\n      new_images: nparray of shape (2, 224, 448, 3)\n  \"\"\"", "\n", "inputs", "=", "_parse_no_swap", "(", "example", ".", "SerializeToString", "(", ")", ")", "\n", "\n", "for", "name", "in", "[", "\"gt_future_states\"", ",", "\"gt_future_is_valid\"", ",", "\"past_states\"", ",", "\"x\"", ",", "\"y\"", ",", "\"yaw\"", ",", "\"is_sdc\"", ",", "\"object_type\"", "]", ":", "\n", "    ", "inputs", "[", "name", "]", "=", "inputs", "[", "name", "]", "[", ":", ",", "tf", ".", "newaxis", ",", "...", "]", "\n", "# print(name, inputs[name].shape)", "\n", "# gt_future_states (8, 1, 91, 7)", "\n", "# gt_future_is_valid (8, 1, 91)", "\n", "# past_states (8, 1, 10, 7)", "\n", "# x (8, 1, 1)", "\n", "# y (8, 1, 1)", "\n", "# yaw (8, 1, 1)", "\n", "", "inputs", "[", "\"image\"", "]", "=", "tf", ".", "stack", "(", "[", "inputs", "[", "\"image_0\"", "]", ",", "inputs", "[", "\"image_1\"", "]", "]", ",", "axis", "=", "0", ")", "# (2, 224, 448, 3)", "\n", "images", "=", "inputs", "[", "\"image\"", "]", ".", "numpy", "(", ")", "\n", "past_states", "=", "inputs", "[", "'past_states'", "]", "# (B, 10, 2)", "\n", "x", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'x'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'y'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'yaw'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n", "pred_trajectory", ",", "confidences", ",", "_", ",", "_", "=", "model", "(", "inputs", "[", "'image'", "]", ",", "x", ",", "y", ",", "yaw", ",", "past_states", "=", "past_states", ",", "object_type", "=", "object_type", ",", "is_sdc", "=", "inputs", "[", "'is_sdc'", "]", ",", "training", "=", "False", ")", "# (B, 3, 80, 2)", "\n", "interval", "=", "5", "\n", "trajectories", "=", "pred_trajectory", "[", ":", ",", ":", ",", "(", "interval", "-", "1", ")", ":", ":", "interval", "]", "\n", "truncated_trajectories", ",", "truncated_confidences", ",", "_", "=", "truncate_predictions", "(", "trajectories", ",", "confidences", ",", "k", "=", "1", ")", "\n", "num_tracks", "=", "2", "\n", "new_images", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num_tracks", ")", ":", "\n", "    ", "image", "=", "np", ".", "zeros", "(", "(", "224", ",", "448", ",", "3", ")", ")", "\n", "x", "=", "inputs", "[", "\"x\"", "]", "[", "i", ",", "0", ",", "0", "]", "\n", "y", "=", "inputs", "[", "\"y\"", "]", "[", "i", ",", "0", ",", "0", "]", "\n", "yaw", "=", "inputs", "[", "\"yaw\"", "]", "[", "i", ",", "0", ",", "0", "]", "\n", "other_trajectories", "=", "np", ".", "concatenate", "(", "[", "truncated_trajectories", "[", ":", "i", ",", "0", "]", ",", "truncated_trajectories", "[", "i", "+", "1", ":", "num_tracks", ",", "0", "]", "]", ",", "axis", "=", "0", ")", "\n", "world_to_image", "=", "transform_matrix", "(", "x", ",", "y", ",", "yaw", ")", "\n", "other_trajectories", "=", "other_trajectories", ".", "reshape", "(", "[", "-", "1", ",", "2", "]", ")", "\n", "other_trajectories", "=", "transform_points", "(", "other_trajectories", ",", "world_to_image", ")", "\n", "other_trajectories", "=", "other_trajectories", ".", "reshape", "(", "[", "-", "1", ",", "16", ",", "2", "]", ")", "*", "CV2_SHIFT_VALUE", "\n", "for", "step", "in", "range", "(", "14", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "      ", "image", "*=", "0.9", "\n", "current_points", "=", "other_trajectories", "[", ":", ",", "step", ":", "step", "+", "2", "]", "# (5, 2, 2)", "\n", "cv2", ".", "polylines", "(", "image", ",", "current_points", ".", "astype", "(", "np", ".", "int32", ")", ",", "False", ",", "(", "255", ",", "155", ",", "55", ")", ",", "thickness", "=", "2", ",", "lineType", "=", "cv2", ".", "LINE_AA", ",", "shift", "=", "CV2_SHIFT", ")", "\n", "", "current_image", "=", "images", "[", "i", "]", "\n", "current_image", "[", "image", ">", "0", "]", "=", "image", "[", "image", ">", "0", "]", "\n", "new_images", ".", "append", "(", "current_image", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "", "new_images", "=", "np", ".", "stack", "(", "new_images", ",", "axis", "=", "0", ")", "\n", "return", "new_images", ",", "pred_trajectory", ",", "confidences", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process.process_train": [[14, 23], ["range", "print", "os.system", "generate_data.process_one_raw_training_file", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file"], ["", "", "def", "v2_process_train", "(", "start", "=", "0", ",", "end", "=", "1000", ")", ":", "\n", "  ", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/training/training_tfexample.tfrecord-0{i:04d}-of-01000 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "v2_process_one_raw_training_file", "(", "f\"training_tfexample.tfrecord-0{i:04d}-of-01000\"", ",", "f\"drive/MyDrive/Motion/data/training_v2/images-0{i:04d}-of-01000\"", ")", "\n", "rm_cmd", "=", "f'rm training_tfexample.tfrecord-0{i:04d}-of-01000'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process.process_testing": [[24, 33], ["range", "print", "os.system", "generate_data.process_one_raw_training_file", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file"], ["", "", "def", "v2_process_validation", "(", "start", "=", "0", ",", "end", "=", "150", ")", ":", "\n", "  ", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/validation/validation_tfexample.tfrecord-0{i:04d}-of-00150 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "v2_process_one_raw_training_file", "(", "f\"validation_tfexample.tfrecord-0{i:04d}-of-00150\"", ",", "f\"drive/MyDrive/Motion/data/validation_v2/images-0{i:04d}-of-00150\"", ")", "\n", "rm_cmd", "=", "f'rm validation_tfexample.tfrecord-0{i:04d}-of-00150'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process_rr_v2.process_validation": [[6, 21], ["MotionPrediction.train.load_model", "range", "print", "os.system", "MotionPrediction.interaction_prediction.DataPrep.generate_data.process_one_raw_training_file_for_rr", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file_for_rr"], ["def", "process_validation", "(", "start", "=", "0", ",", "end", "=", "150", ",", "weights_file", "=", "\"drive/MyDrive/Motion/MMM/c64c8c30.02-8.20.hdf5\"", ",", "yaml_file", "=", "\"c64c8c30.yaml\"", ")", ":", "\n", "  ", "model", "=", "load_model", "(", "weights_file", ",", "yaml_file", ")", "\n", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/validation_interactive/validation_interactive_tfexample.tfrecord-0{i:04d}-of-00150 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "process_one_raw_training_file_for_rr", "(", "\n", "f\"validation_interactive_tfexample.tfrecord-0{i:04d}-of-00150\"", ",", "\n", "None", ",", "\n", "f\"drive/MyDrive/Motion/interaction_data/validation_rr_v2_fixed/images-0{i:04d}-of-00150\"", ",", "\n", "model", ",", "\n", ")", "\n", "rm_cmd", "=", "f'rm validation_interactive_tfexample.tfrecord-0{i:04d}-of-00150'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process_rr_v2.process_train": [[22, 37], ["MotionPrediction.train.load_model", "range", "print", "os.system", "MotionPrediction.interaction_prediction.DataPrep.generate_data.process_one_raw_training_file_for_rr", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file_for_rr"], ["", "", "def", "process_train", "(", "start", "=", "0", ",", "end", "=", "1000", ",", "weights_file", "=", "\"drive/MyDrive/Motion/MMM/c64c8c30.02-8.20.hdf5\"", ",", "yaml_file", "=", "\"c64c8c30.yaml\"", ")", ":", "\n", "  ", "model", "=", "load_model", "(", "weights_file", ",", "yaml_file", ")", "\n", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/training/training_tfexample.tfrecord-0{i:04d}-of-01000 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "process_one_raw_training_file_for_rr", "(", "\n", "f\"training_tfexample.tfrecord-0{i:04d}-of-01000\"", ",", "\n", "None", ",", "\n", "f\"drive/MyDrive/Motion/interaction_data/training_rr_v2/images-0{i:04d}-of-01000\"", ",", "\n", "model", "\n", ")", "\n", "rm_cmd", "=", "f'rm training_tfexample.tfrecord-0{i:04d}-of-01000'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process_rr_v2.process_testing": [[38, 53], ["MotionPrediction.train.load_model", "range", "print", "os.system", "MotionPrediction.interaction_prediction.DataPrep.generate_data.process_one_raw_training_file_for_rr", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file_for_rr"], ["", "", "def", "process_testing", "(", "start", "=", "0", ",", "end", "=", "150", ",", "weights_file", "=", "\"drive/MyDrive/Motion/MMM/c64c8c30.02-8.20.hdf5\"", ",", "yaml_file", "=", "\"c64c8c30.yaml\"", ")", ":", "\n", "  ", "model", "=", "load_model", "(", "weights_file", ",", "yaml_file", ")", "\n", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/testing_interactive/testing_interactive_tfexample.tfrecord-0{i:04d}-of-00150 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "process_one_raw_training_file_for_rr", "(", "\n", "f\"testing_interactive_tfexample.tfrecord-0{i:04d}-of-00150\"", ",", "\n", "None", ",", "\n", "f\"drive/MyDrive/Motion/interaction_data/testing_rr_v2_fixed/images-0{i:04d}-of-00150\"", ",", "\n", "model", "\n", ")", "\n", "rm_cmd", "=", "f'rm testing_interactive_tfexample.tfrecord-0{i:04d}-of-00150'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process_rr.process_validation": [[6, 21], ["MotionPrediction.train.load_model", "range", "print", "os.system", "MotionPrediction.interaction_prediction.DataPrep.generate_data.process_one_raw_training_file_for_rr", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file_for_rr"], ["def", "process_validation", "(", "start", "=", "0", ",", "end", "=", "150", ",", "weights_file", "=", "\"drive/MyDrive/Motion/MMM/cls_weight_lr3_2.01-7.6130.hdf5\"", ",", "yaml_file", "=", "\"cls_weight_lg_lr_2.yaml\"", ")", ":", "\n", "  ", "model", "=", "load_model", "(", "weights_file", ",", "yaml_file", ")", "\n", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/validation_interactive/validation_interactive_tfexample.tfrecord-0{i:04d}-of-00150 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "process_one_raw_training_file_for_rr", "(", "\n", "f\"validation_interactive_tfexample.tfrecord-0{i:04d}-of-00150\"", ",", "\n", "f\"drive/MyDrive/Motion/interaction_data/validation_yellow/images-0{i:04d}-of-00150\"", ",", "\n", "f\"drive/MyDrive/Motion/interaction_data/validation_rr/images-0{i:04d}-of-00150\"", ",", "\n", "model", ",", "\n", ")", "\n", "rm_cmd", "=", "f'rm validation_interactive_tfexample.tfrecord-0{i:04d}-of-00150'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process_rr.process_train": [[22, 37], ["MotionPrediction.train.load_model", "range", "print", "os.system", "MotionPrediction.interaction_prediction.DataPrep.generate_data.process_one_raw_training_file_for_rr", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file_for_rr"], ["", "", "def", "process_train", "(", "start", "=", "0", ",", "end", "=", "1000", ",", "weights_file", "=", "\"drive/MyDrive/Motion/MMM/cls_weight_lr3_2.01-7.6130.hdf5\"", ",", "yaml_file", "=", "\"cls_weight_lg_lr_2.yaml\"", ")", ":", "\n", "  ", "model", "=", "load_model", "(", "weights_file", ",", "yaml_file", ")", "\n", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/training/training_tfexample.tfrecord-0{i:04d}-of-01000 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "process_one_raw_training_file_for_rr", "(", "\n", "f\"training_tfexample.tfrecord-0{i:04d}-of-01000\"", ",", "\n", "f\"drive/MyDrive/Motion/interaction_data/training_yellow/images-0{i:04d}-of-01000\"", ",", "\n", "f\"drive/MyDrive/Motion/interaction_data/training_rr/images-0{i:04d}-of-01000\"", ",", "\n", "model", "\n", ")", "\n", "rm_cmd", "=", "f'rm training_tfexample.tfrecord-0{i:04d}-of-01000'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.process_rr.process_testing": [[38, 53], ["MotionPrediction.train.load_model", "range", "print", "os.system", "MotionPrediction.interaction_prediction.DataPrep.generate_data.process_one_raw_training_file_for_rr", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file_for_rr"], ["", "", "def", "process_testing", "(", "start", "=", "0", ",", "end", "=", "150", ",", "weights_file", "=", "\"drive/MyDrive/Motion/MMM/cls_weight_lr3_2.01-7.6130.hdf5\"", ",", "yaml_file", "=", "\"cls_weight_lg_lr_2.yaml\"", ")", ":", "\n", "  ", "model", "=", "load_model", "(", "weights_file", ",", "yaml_file", ")", "\n", "for", "i", "in", "range", "(", "start", ",", "end", ")", ":", "\n", "    ", "cmd", "=", "f'gsutil cp gs://waymo_open_dataset_motion_v_1_0_0/uncompressed/tf_example/testing_interactive/testing_interactive_tfexample.tfrecord-0{i:04d}-of-00150 .'", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "process_one_raw_training_file_for_rr", "(", "\n", "f\"testing_interactive_tfexample.tfrecord-0{i:04d}-of-00150\"", ",", "\n", "f\"drive/MyDrive/Motion/interaction_data/testing_yellow/images-0{i:04d}-of-00150\"", ",", "\n", "f\"drive/MyDrive/Motion/interaction_data/testing_rr/images-0{i:04d}-of-00150\"", ",", "\n", "model", "\n", ")", "\n", "rm_cmd", "=", "f'rm testing_interactive_tfexample.tfrecord-0{i:04d}-of-00150'", "\n", "print", "(", "rm_cmd", ")", "\n", "os", ".", "system", "(", "rm_cmd", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.build_tf_example": [[8, 44], ["tensorflow.squeeze().numpy", "tensorflow.train.Example", "enumerate", "raw_features.state_features.items", "tensorflow.compat.as_bytes", "list", "list", "tensorflow.gather().numpy", "tensorflow.squeeze", "tensorflow.image.encode_jpeg", "[].numpy", "trajectories.numpy().reshape", "confidences.numpy().reshape", "list", "tensorflow.where", "tensorflow.compat.as_bytes", "tensorflow.gather", "tf.gather().numpy.reshape", "list", "tf.image.encode_jpeg.numpy", "trajectories.numpy", "confidences.numpy", "tf.gather().numpy.reshape", "tensorflow.compat.as_bytes"], "function", ["None"], ["\n", "tracks", "=", "parsed", "[", "'state/tracks_to_predict'", "]", "# (128,)", "\n", "tracks_before_mask", "=", "tf", ".", "squeeze", "(", "tf", ".", "where", "(", "tracks", "==", "1", ")", ",", "axis", "=", "1", ")", ".", "numpy", "(", ")", "# indices before masking", "\n", "example", "=", "tf", ".", "train", ".", "Example", "(", ")", "\n", "feature", "=", "example", ".", "features", ".", "feature", "\n", "for", "i", ",", "index", "in", "enumerate", "(", "tracks_before_mask", ")", ":", "\n", "    ", "if", "images", "is", "not", "None", ":", "\n", "      ", "img", "=", "images", "[", "i", "]", "\n", "image_data", "=", "tf", ".", "image", ".", "encode_jpeg", "(", "img", ",", "format", "=", "'rgb'", ",", "quality", "=", "100", ")", "\n", "feature", "[", "f\"image{i}/encoded\"", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "image_data", ".", "numpy", "(", ")", ")", "]", "\n", "\n", "", "", "feature", "[", "'scenario/id'", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "parsed", "[", "'scenario/id'", "]", "[", "0", "]", ".", "numpy", "(", ")", ")", "]", "\n", "\n", "for", "feature_name", ",", "f", "in", "state_features", ".", "items", "(", ")", ":", "\n", "    ", "gathered", "=", "tf", ".", "gather", "(", "parsed", "[", "feature_name", "]", ",", "tracks_before_mask", ")", ".", "numpy", "(", ")", "\n", "if", "f", ".", "dtype", "is", "tf", ".", "float32", ":", "\n", "      ", "feature", "[", "feature_name", "]", ".", "float_list", ".", "value", "[", ":", "]", "=", "list", "(", "gathered", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "elif", "f", ".", "dtype", "is", "tf", ".", "int64", ":", "\n", "      ", "feature", "[", "feature_name", "]", ".", "int64_list", ".", "value", "[", ":", "]", "=", "list", "(", "gathered", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "elif", "f", ".", "dtype", "is", "tf", ".", "string", ":", "\n", "      ", "feature", "[", "feature_name", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "gathered", ")", "]", "\n", "", "", "return", "example", "\n", "\n", "", "def", "v2_process_one_raw_training_file", "(", "input_filename", ",", "output_filename", ")", ":", "\n", "  ", "dataset", "=", "tf", ".", "data", ".", "TFRecordDataset", "(", "input_filename", ",", "compression_type", "=", "''", ")", "\n", "num_examples", "=", "0", "\n", "for", "data", "in", "dataset", ".", "as_numpy_iterator", "(", ")", ":", "\n", "    ", "num_examples", "+=", "1", "\n", "", "print", "(", "'num_examples'", ",", "num_examples", ")", "\n", "i", "=", "0", "\n", "all_examples", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.process_one_raw_training_file_for_rr": [[67, 95], ["tensorflow.data.TFRecordDataset", "tf.data.TFRecordDataset.as_numpy_iterator", "print", "tf.data.TFRecordDataset.as_numpy_iterator", "print", "tensorflow.io.parse_single_example", "rasterize.rasterize", "generate_data.build_tf_example", "all_examples.append", "rerasterize.rerasterize_interaction", "generate_data.build_tf_example", "all_examples_rr.append", "tensorflow.io.TFRecordWriter", "len", "tensorflow.io.TFRecordWriter", "writer.write", "tensorflow.where().numpy", "writer.write", "build_tf_example.SerializeToString", "build_tf_example.SerializeToString", "tensorflow.where"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.rasterize.rasterize", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.build_tf_example", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.rerasterize.rerasterize_interaction", "home.repos.pwc.inspect_result.david9dragon9_air.DataPrep.generate_data.build_tf_example"], ["\n", "for", "i", "in", "range", "(", "len", "(", "ego_x", ")", ")", ":", "\n", "    ", "example", "=", "tf", ".", "train", ".", "Example", "(", ")", "\n", "feature", "=", "example", ".", "features", ".", "feature", "\n", "if", "images", "is", "not", "None", ":", "\n", "      ", "img", "=", "images", "[", "i", "]", "\n", "image_data", "=", "tf", ".", "image", ".", "encode_jpeg", "(", "img", ",", "format", "=", "'rgb'", ",", "quality", "=", "100", ")", "\n", "feature", "[", "'image/encoded'", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "image_data", ".", "numpy", "(", ")", ")", "]", "\n", "", "feature", "[", "'ego_index'", "]", ".", "int64_list", ".", "value", "[", ":", "]", "=", "[", "i", "]", "\n", "feature", "[", "'scenario/id'", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "parsed", "[", "'scenario/id'", "]", "[", "0", "]", ".", "numpy", "(", ")", ")", "]", "\n", "\n", "if", "len", "(", "embeddings", ")", ">", "0", ":", "\n", "      ", "for", "model_name", ",", "embedding", "in", "embeddings", ".", "items", "(", ")", ":", "\n", "        ", "feature", "[", "model_name", "]", ".", "float_list", ".", "value", "[", ":", "]", "=", "list", "(", "np", ".", "array", "(", "embedding", "[", "i", "]", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "", "for", "feature_name", ",", "f", "in", "state_features", ".", "items", "(", ")", ":", "\n", "      ", "if", "f", ".", "dtype", "is", "tf", ".", "float32", ":", "\n", "        ", "feature", "[", "feature_name", "]", ".", "float_list", ".", "value", "[", ":", "]", "=", "list", "(", "parsed", "[", "feature_name", "]", "[", "i", ":", "i", "+", "1", "]", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "elif", "f", ".", "dtype", "is", "tf", ".", "int64", ":", "\n", "        ", "feature", "[", "feature_name", "]", ".", "int64_list", ".", "value", "[", ":", "]", "=", "list", "(", "parsed", "[", "feature_name", "]", "[", "i", ":", "i", "+", "1", "]", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", "", "elif", "f", ".", "dtype", "is", "tf", ".", "string", ":", "\n", "        ", "feature", "[", "feature_name", "]", ".", "bytes_list", ".", "value", "[", ":", "]", "=", "[", "tf", ".", "compat", ".", "as_bytes", "(", "parsed", "[", "feature_name", "]", "[", "i", ":", "i", "+", "1", "]", ".", "numpy", "(", ")", ")", "]", "\n", "\n", "", "", "examples", ".", "append", "(", "example", ")", "\n", "", "return", "examples", "\n", "\n", "", "def", "generate_training_examples", "(", "parsed", ",", "cnn_models", ",", "state_features", "=", "state_features", ",", "include_images", "=", "False", ")", ":", "\n", "  "]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.__init__": [[54, 62], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_ground_truth_trajectory", "=", "[", "]", "\n", "self", ".", "_ground_truth_is_valid", "=", "[", "]", "\n", "self", ".", "_prediction_trajectory", "=", "[", "]", "\n", "self", ".", "_prediction_score", "=", "[", "]", "\n", "self", ".", "_object_type", "=", "[", "]", "\n", "if", "config", "is", "None", ":", "\n", "      ", "config", "=", "_default_metrics_config", "(", ")", "\n", "", "self", ".", "_metrics_config", "=", "config", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.reset_state": [[63, 69], ["None"], "methods", ["None"], ["\n", "", "def", "reset_state", "(", "self", ")", ":", "\n", "    ", "self", ".", "_ground_truth_trajectory", "=", "[", "]", "\n", "self", ".", "_ground_truth_is_valid", "=", "[", "]", "\n", "self", ".", "_prediction_trajectory", "=", "[", "]", "\n", "self", ".", "_prediction_score", "=", "[", "]", "\n", "self", ".", "_object_type", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state": [[70, 79], ["metrics.MotionMetrics._prediction_trajectory.append", "metrics.MotionMetrics._prediction_score.append", "metrics.MotionMetrics._ground_truth_trajectory.append", "metrics.MotionMetrics._ground_truth_is_valid.append", "metrics.MotionMetrics._object_type.append"], "methods", ["None"], ["\n", "", "def", "update_state", "(", "self", ",", "prediction_trajectory", ",", "prediction_score", ",", "\n", "ground_truth_trajectory", "=", "None", ",", "\n", "ground_truth_is_valid", "=", "None", ",", "\n", "object_type", "=", "None", ")", ":", "\n", "    ", "self", ".", "_prediction_trajectory", ".", "append", "(", "prediction_trajectory", ")", "\n", "self", ".", "_prediction_score", ".", "append", "(", "prediction_score", ")", "\n", "self", ".", "_ground_truth_trajectory", ".", "append", "(", "ground_truth_trajectory", ")", "\n", "self", ".", "_ground_truth_is_valid", ".", "append", "(", "ground_truth_is_valid", ")", "\n", "self", ".", "_object_type", ".", "append", "(", "object_type", ")", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result": [[80, 111], ["tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.cast", "waymo_open_dataset.metrics.ops.py_metrics_ops.motion_metrics", "tensorflow.concat", "tensorflow.shape", "tensorflow.zeros", "tensorflow.constant", "metrics.MotionMetrics._metrics_config.SerializeToString", "tensorflow.ones"], "methods", ["None"], ["\n", "", "def", "result", "(", "self", ")", ":", "\n", "# [batch_size, K, steps, 2].", "\n", "    ", "prediction_trajectory", "=", "tf", ".", "concat", "(", "self", ".", "_prediction_trajectory", ",", "0", ")", "\n", "# [batch_size, K].", "\n", "prediction_score", "=", "tf", ".", "concat", "(", "self", ".", "_prediction_score", ",", "0", ")", "\n", "# [batch_size, gt_steps, 7].", "\n", "ground_truth_trajectory", "=", "tf", ".", "concat", "(", "self", ".", "_ground_truth_trajectory", ",", "0", ")", "\n", "# [batch_size, gt_steps].", "\n", "ground_truth_is_valid", "=", "tf", ".", "concat", "(", "self", ".", "_ground_truth_is_valid", ",", "0", ")", "\n", "# [batch_size].", "\n", "object_type", "=", "tf", ".", "cast", "(", "tf", ".", "concat", "(", "self", ".", "_object_type", ",", "0", ")", ",", "tf", ".", "int64", ")", "\n", "\n", "# We are predicting more steps than needed by the eval code. Subsample.", "\n", "interval", "=", "(", "\n", "self", ".", "_metrics_config", ".", "track_steps_per_second", "//", "\n", "self", ".", "_metrics_config", ".", "prediction_steps_per_second", ")", "\n", "prediction_trajectory", "=", "prediction_trajectory", "[", ":", ",", ":", ",", "(", "interval", "-", "1", ")", ":", ":", "interval", "]", "\n", "\n", "\n", "# prediction_trajectory: [B, M, K, N, TP, 2]. Predicted trajectories. The", "\n", "#   inner-most dimensions are [x, y].", "\n", "# prediction_score: [B, M, K]. Scores per joint prediction.", "\n", "# ground_truth_trajectory: [B, A, TG, 7]. Groundtruth trajectories. The", "\n", "#   inner-most dimensions are [x, y, length, width, heading, velocity_x,", "\n", "#   velocity_y].", "\n", "# ground_truth_is_valid: [B, A, TG]. Indicates whether a time stamp is valid", "\n", "#   per trajectory. If all timestamps for a trajectory are invalid, the", "\n", "#   trajectory is assumed invalid.", "\n", "# prediction_ground_truth_indices: [B, M, N]. Indices to gather the", "\n", "#   predictions of shape [B, M, ?, N] from the groundtruth of shape [B, A],", "\n", "#   values must be between [0, A).", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics._default_metrics_config": [[20, 50], ["waymo_open_dataset.protos.motion_metrics_pb2.MotionMetricsConfig", "google.protobuf.text_format.Parse"], "function", ["None"], ["  ", "config", "=", "motion_metrics_pb2", ".", "MotionMetricsConfig", "(", ")", "\n", "config_text", "=", "\"\"\"\n  track_steps_per_second: 10\n  prediction_steps_per_second: 2\n  track_history_samples: 10\n  track_future_samples: 80\n  speed_lower_bound: 1.4\n  speed_upper_bound: 11.0\n  speed_scale_lower: 0.5\n  speed_scale_upper: 1.0\n  step_configurations {\n    measurement_step: 5\n    lateral_miss_threshold: 1.0\n    longitudinal_miss_threshold: 2.0\n  }\n  step_configurations {\n    measurement_step: 9\n    lateral_miss_threshold: 1.8\n    longitudinal_miss_threshold: 3.6\n  }\n  step_configurations {\n    measurement_step: 15\n    lateral_miss_threshold: 3.0\n    longitudinal_miss_threshold: 6.0\n  }\n  max_predictions: 6\n  \"\"\"", "\n", "text_format", ".", "Parse", "(", "config_text", ",", "config", ")", "\n", "return", "config", "\n", "\n", "", "class", "MotionMetrics", "(", "tf", ".", "keras", ".", "metrics", ".", "Metric", ")", ":", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.eval.evaluate": [[19, 46], ["train.train", "utils.load_config_data", "utils.DotDict", "utils.DotDict", "train.train.load_weights", "dataset.get_interaction_eval_dataset", "waymo_open_dataset.metrics.python.config_util_py.get_breakdown_names_from_motion_config", "train.train.motion_metrics.reset_states", "enumerate", "train.train.motion_metrics.result", "enumerate", "numpy.mean", "print", "print", "print", "print", "int", "train.train.test_step", "enumerate", "numpy.mean", "numpy.mean", "numpy.mean", "print", "print"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.train", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_interaction_eval_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.test_step"], ["cfg", "=", "load_config_data", "(", "experiment_file", ")", "\n", "train_params", "=", "DotDict", "(", "cfg", ".", "train_params", ")", "\n", "model_params", "=", "DotDict", "(", "cfg", ".", "model_params", ")", "\n", "batch_size", "=", "int", "(", "train_params", ".", "eval_batch_size", ")", "if", "train_params", ".", "eval_batch_size", "else", "32", "\n", "if", "train_params", ".", "cyclist", ":", "\n", "    ", "dataset", "=", "get_cyclist_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "elif", "train_params", ".", "ped", ":", "\n", "    ", "dataset", "=", "get_ped_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "elif", "train_params", ".", "veh", ":", "\n", "    ", "dataset", "=", "get_veh_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "else", ":", "\n", "    ", "dataset", "=", "get_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "metric_names", "=", "config_util", ".", "get_breakdown_names_from_motion_config", "(", "\n", "model", ".", "metrics_config", ")", "\n", "model", ".", "motion_metrics", ".", "reset_states", "(", ")", "\n", "for", "step", ",", "batch", "in", "enumerate", "(", "dataset", ")", ":", "\n", "    ", "if", "step", "%", "100", "==", "0", ":", "\n", "      ", "print", "(", "\"step\"", ",", "step", ")", "\n", "", "model", ".", "test_step", "(", "batch", ")", "\n", "", "metric_values", "=", "model", ".", "motion_metrics", ".", "result", "(", ")", "\n", "for", "i", ",", "m", "in", "enumerate", "(", "\n", "[", "'min_ade'", ",", "'min_fde'", ",", "'miss_rate'", ",", "'overlap_rate'", ",", "'map'", "]", ")", ":", "\n", "    ", "for", "j", ",", "n", "in", "enumerate", "(", "metric_names", ")", ":", "\n", "        ", "print", "(", "'{}/{}: {}'", ".", "format", "(", "m", ",", "n", ",", "metric_values", "[", "i", ",", "j", "]", ")", ")", "\n", "", "", "map_average", "=", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "0", ":", "9", "]", ")", "\n", "print", "(", "\"map_average\"", ",", "map_average", ")", "\n", "print", "(", "\"cyc_map_average\"", ",", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "6", ":", "9", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.eval.evaluate_ensemble": [[47, 75], ["range", "MotionPrediction.interaction_prediction.ensemble.EnsembleModel", "utils.load_config_data", "utils.DotDict", "utils.DotDict", "dataset.get_interaction_eval_dataset", "waymo_open_dataset.metrics.python.config_util_py.get_breakdown_names_from_motion_config", "MotionPrediction.interaction_prediction.ensemble.EnsembleModel.motion_metrics.reset_states", "enumerate", "MotionPrediction.interaction_prediction.ensemble.EnsembleModel.motion_metrics.result", "enumerate", "numpy.mean", "print", "print", "len", "print", "models.append", "int", "MotionPrediction.interaction_prediction.ensemble.EnsembleModel.prev_test_step", "enumerate", "numpy.mean", "train.load_model", "print", "print"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_interaction_eval_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.prev_test_step", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model"], ["", "def", "display_mAP", "(", "metric_values", ")", ":", "\n", "  ", "mAP_veh", "=", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "0", ":", "3", "]", ")", "\n", "mAP_ped", "=", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "3", ":", "6", "]", ")", "\n", "mAP_cyc", "=", "np", ".", "mean", "(", "metric_values", "[", "4", ",", "6", ":", "]", ")", "\n", "print", "(", "\"map/TYPE_VEHICLE\"", ",", "mAP_veh", ")", "\n", "print", "(", "\"map/TYPE_PEDESTRIAN\"", ",", "mAP_ped", ")", "\n", "print", "(", "\"map/TYPE_CYCLIST\"", ",", "mAP_cyc", ")", "\n", "return", "np", ".", "array", "(", "[", "mAP_veh", ",", "mAP_ped", ",", "mAP_cyc", "]", ")", "\n", "\n", "# Metric-Loss Sensitivity Analysis", "\n", "", "def", "dmAP_evaluate", "(", "weights_file", ",", "beta", ",", "gamma", ",", "experiment_file", "=", "\"moe_c16_2nd.yaml\"", ",", "eval_file_pattern", "=", "'drive/MyDrive/Motion/validation/images-00000-of-00150'", ")", ":", "\n", "  ", "model", "=", "load_model", "(", "weights_file", ",", "experiment_file", ")", "\n", "dataset", "=", "get_deterministic_dataset", "(", "eval_file_pattern", ")", "\n", "metric_names", "=", "config_util", ".", "get_breakdown_names_from_motion_config", "(", "\n", "model", ".", "metrics_config", ")", "\n", "model", ".", "motion_metrics", ".", "reset_states", "(", ")", "\n", "model", ".", "loss_tracker", ".", "reset_states", "(", ")", "\n", "model", ".", "conf_loss_tracker", ".", "reset_states", "(", ")", "\n", "cls_motion_metrics", "=", "MotionMetrics", "(", "_default_metrics_config", "(", ")", ")", "\n", "reg_motion_metrics", "=", "MotionMetrics", "(", "_default_metrics_config", "(", ")", ")", "\n", "cls_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'cls_loss'", ")", "\n", "cls_conf_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'cls_conf_loss'", ")", "\n", "reg_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'reg_loss'", ")", "\n", "reg_conf_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'reg_conf_loss'", ")", "\n", "for", "step", ",", "batch", "in", "enumerate", "(", "dataset", ")", ":", "\n", "    ", "model", ".", "dmAP_step", "(", "batch", ",", "cls_motion_metrics", ",", "reg_motion_metrics", ",", "cls_loss_tracker", ",", "cls_conf_loss_tracker", ",", "reg_loss_tracker", ",", "reg_conf_loss_tracker", ",", "beta", "=", "beta", ",", "gamma", "=", "gamma", ")", "\n", "", "metric_values", "=", "model", ".", "motion_metrics", ".", "result", "(", ")", "\n", "cls_metric_values", "=", "cls_motion_metrics", ".", "result", "(", ")", "\n", "reg_metric_values", "=", "reg_motion_metrics", ".", "result", "(", ")", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model": [[17, 83], ["utils.load_config_data", "utils.DotDict", "utils.DotDict", "pprint.pprint", "pprint.pprint", "train.load_model", "model.JointMOEModel", "tensorflow.keras.experimental.CosineDecay", "tensorflow.keras.optimizers.Adam", "tensorflow.keras.losses.MeanSquaredError", "tensorflow.keras.metrics.Mean", "tensorflow.keras.metrics.Mean", "metrics._default_metrics_config", "metrics.MotionMetrics", "waymo_open_dataset.metrics.python.config_util_py.get_breakdown_names_from_motion_config", "loss.JointPredMultiModalLoss", "numpy.load().astype", "numpy.load().astype", "numpy.load().astype", "loss.JointPredMultiPathLoss", "model.JointMOEModel.compile", "dataset.get_dataset", "dataset.get_dataset", "float", "int", "float", "float", "float", "float", "float", "int", "tensorflow.keras.callbacks.ModelCheckpoint", "model.JointMOEModel.fit", "model.JointMOEModel.load_weights", "float", "numpy.load", "numpy.load", "numpy.load", "dataset.get_dataset.take"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics._default_metrics_config", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.compile", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset"], ["if", "model_params", ".", "backbone_weights", "and", "not", "weights_file", ":", "\n", "    ", "print", "(", "f\"loading backbone weights from {model_params.backbone_weights}...\"", ")", "\n", "backbone", ".", "load_weights", "(", "model_params", ".", "backbone_weights", ")", "\n", "print", "(", "f\"done loading!\"", ")", "\n", "", "if", "model_params", ".", "freeze_backbone", "==", "\"partial\"", ":", "\n", "    ", "for", "layer", "in", "backbone", ".", "layers", ":", "\n", "      ", "if", "layer", ".", "name", "==", "'block2a_dwconv_pad'", ":", "\n", "        ", "break", "\n", "", "layer", ".", "trainable", "=", "False", "\n", "", "", "elif", "model_params", ".", "freeze_backbone", ":", "\n", "    ", "backbone", ".", "trainable", "=", "False", "\n", "", "num_ps_units", "=", "train_params", ".", "num_ps_units", "if", "\"num_ps_units\"", "in", "train_params", "else", "None", "\n", "num_future_steps", "=", "80", "\n", "veh_centroids", "=", "np", ".", "load", "(", "model_params", ".", "veh_centroids", ")", "\n", "ped_centroids", "=", "np", ".", "load", "(", "model_params", ".", "ped_centroids", ")", "\n", "cyc_centroids", "=", "np", ".", "load", "(", "model_params", ".", "cyc_centroids", ")", "\n", "veh_modes", "=", "len", "(", "veh_centroids", ")", "\n", "ped_modes", "=", "len", "(", "ped_centroids", ")", "\n", "cyc_modes", "=", "len", "(", "cyc_centroids", ")", "\n", "num_knots", "=", "model_params", ".", "num_knots", "if", "model_params", ".", "num_knots", "is", "not", "None", "else", "8", "\n", "dropout", "=", "model_params", ".", "dropout", "if", "model_params", ".", "dropout", "is", "not", "None", "else", "0.", "\n", "model", "=", "MOEModelWithVariableClusters", "(", "80", ",", "backbone", ",", "num_modes", "=", "model_params", ".", "num_modes", ",", "num_knots", "=", "num_knots", ",", "veh_modes", "=", "veh_modes", ",", "ped_modes", "=", "ped_modes", ",", "cyc_modes", "=", "cyc_modes", ",", "loss_type", "=", "'multi_path_loss'", ",", "num_ps_units", "=", "num_ps_units", ",", "dropout", "=", "dropout", ")", "\n", "lr_schedule", "=", "tf", ".", "keras", ".", "experimental", ".", "CosineDecay", "(", "float", "(", "train_params", ".", "initial_lr", ")", ",", "int", "(", "train_params", ".", "steps", ")", ",", "alpha", "=", "float", "(", "train_params", ".", "alpha", ")", ")", "\n", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", "learning_rate", "=", "lr_schedule", ")", "\n", "loss_fn", "=", "tf", ".", "keras", ".", "losses", ".", "MeanSquaredError", "(", ")", "\n", "loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'loss'", ")", "\n", "multi_modal_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'mm_loss'", ")", "\n", "metrics_config", "=", "_default_metrics_config", "(", ")", "\n", "motion_metrics", "=", "MotionMetrics", "(", "metrics_config", ")", "\n", "metric_names", "=", "config_util", ".", "get_breakdown_names_from_motion_config", "(", "\n", "metrics_config", ")", "\n", "multi_modal_loss", "=", "MultiModalLoss", "(", "num_future_steps", "=", "num_future_steps", ")", "\n", "veh_centroids", "=", "np", ".", "load", "(", "model_params", ".", "veh_centroids", ")", "\n", "ped_centroids", "=", "np", ".", "load", "(", "model_params", ".", "ped_centroids", ")", "\n", "cyc_centroids", "=", "np", ".", "load", "(", "model_params", ".", "cyc_centroids", ")", "\n", "cls_weight", "=", "float", "(", "model_params", ".", "cls_weight", ")", "if", "model_params", ".", "cls_weight", "is", "not", "None", "else", "1.0", "\n", "reg_weight", "=", "float", "(", "model_params", ".", "reg_weight", ")", "if", "model_params", ".", "reg_weight", "is", "not", "None", "else", "1.0", "\n", "ped_weight", "=", "float", "(", "model_params", ".", "ped_weight", ")", "if", "model_params", ".", "ped_weight", "is", "not", "None", "else", "1.0", "\n", "cyc_weight", "=", "float", "(", "model_params", ".", "cyc_weight", ")", "if", "model_params", ".", "cyc_weight", "is", "not", "None", "else", "1.0", "\n", "multi_path_loss", "=", "MTMPLoss", "(", "veh_centroids", ",", "ped_centroids", ",", "cyc_centroids", ",", "cls_weight", ",", "reg_weight", ",", "ped_weight", ",", "cyc_weight", ",", "num_future_steps", ")", "\n", "model", ".", "compile", "(", "optimizer", ",", "multi_path_loss", ",", "multi_modal_loss", ",", "loss_tracker", ",", "multi_modal_loss_tracker", ",", "motion_metrics", ",", "metrics_config", ")", "\n", "\n", "if", "weights_file", ":", "\n", "    ", "eval_file_pattern", "=", "train_params", ".", "eval_file_pattern", "\n", "eval_dataset", "=", "get_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "1", ")", "\n", "model", ".", "fit", "(", "eval_dataset", ".", "take", "(", "1", ")", ",", "epochs", "=", "1", ")", "\n", "model", ".", "load_weights", "(", "weights_file", ")", "\n", "", "return", "model", "\n", "\n", "", "def", "train", "(", "experiment_name", "=", "'c8.yaml'", ")", ":", "\n", "  ", "cfg", "=", "load_config_data", "(", "experiment_name", ")", "\n", "train_params", "=", "DotDict", "(", "cfg", ".", "train_params", ")", "\n", "model_params", "=", "DotDict", "(", "cfg", ".", "model_params", ")", "\n", "pprint", ".", "pprint", "(", "train_params", ")", "\n", "pprint", ".", "pprint", "(", "model_params", ")", "\n", "\n", "model", "=", "load_model", "(", "train_params", ".", "initial_weights_file", ",", "experiment_name", "=", "experiment_name", ")", "\n", "\n", "file_pattern", "=", "train_params", ".", "train_file_pattern", "\n", "batch_size", "=", "int", "(", "train_params", ".", "batch_size", ")", "if", "train_params", ".", "batch_size", "is", "not", "None", "else", "32", "\n", "if", "train_params", ".", "cyclist", ":", "\n", "    ", "dataset", "=", "get_cyclist_dataset", "(", "file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "train_params", ".", "ped", ":", "\n", "    ", "dataset", "=", "get_ped_dataset", "(", "file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "train_params", ".", "veh", ":", "\n", "    ", "dataset", "=", "get_veh_dataset", "(", "file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.train": [[85, 131], ["utils.load_config_data", "utils.DotDict", "utils.DotDict", "train.load_model", "print", "dataset.get_cyclist_dataset", "dataset.get_cyclist_dataset", "dataset.get_dataset", "int", "tensorflow.keras.callbacks.ModelCheckpoint", "train.load_model.fit", "dataset.get_weighted_dataset", "dataset.get_dataset", "train.load_model.fit", "train.load_model.load_weights", "train.load_model.fit", "train.load_model.save_weights", "dataset.get_dataset.take", "dataset.get_dataset.take", "train.load_model.save_weights"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.load_model", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_cyclist_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_cyclist_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_weighted_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset"], ["    ", "dataset", "=", "get_weighted_dataset", "(", "file_pattern", ",", "train_params", ".", "validation_file_pattern", ",", "0.33", ",", "0.33", ",", "0.33", ",", "batch_size", ")", "\n", "", "else", ":", "\n", "    ", "dataset", "=", "get_dataset", "(", "file_pattern", ",", "batch_size", "=", "batch_size", ",", "filter_valid", "=", "True", ")", "\n", "\n", "", "eval_file_pattern", "=", "train_params", ".", "eval_file_pattern", "\n", "if", "train_params", ".", "cyclist", ":", "\n", "    ", "eval_dataset", "=", "get_cyclist_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "train_params", ".", "ped", ":", "\n", "    ", "eval_dataset", "=", "get_ped_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "train_params", ".", "veh", ":", "\n", "    ", "eval_dataset", "=", "get_veh_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "", "else", ":", "\n", "    ", "eval_dataset", "=", "get_dataset", "(", "eval_file_pattern", ",", "batch_size", "=", "batch_size", ")", "\n", "\n", "", "epochs", "=", "train_params", ".", "epochs", "\n", "save_freq", "=", "\"epoch\"", "\n", "if", "train_params", ".", "save_freq", "!=", "\"epoch\"", ":", "\n", "    ", "save_freq", "=", "int", "(", "train_params", ".", "save_freq", ")", "\n", "\n", "", "filepath", "=", "train_params", ".", "model_file_pattern", "\n", "callbacks", "=", "[", "\n", "tf", ".", "keras", ".", "callbacks", ".", "ModelCheckpoint", "(", "\n", "filepath", ",", "monitor", "=", "'val_loss'", ",", "save_best_only", "=", "False", ",", "save_weights_only", "=", "True", ",", "mode", "=", "'auto'", ",", "save_freq", "=", "save_freq", ")", ",", "\n", "LRRecorder", "(", ")", "\n", "]", "\n", "try", ":", "\n", "    ", "model", ".", "fit", "(", "dataset", ",", "epochs", "=", "epochs", ",", "validation_data", "=", "eval_dataset", ",", "callbacks", "=", "callbacks", ")", "\n", "", "except", "KeyboardInterrupt", ":", "\n", "    ", "return", "model", "\n", "", "model", ".", "save_weights", "(", "train_params", ".", "final_file", ")", "\n", "\n", "return", "model", "\n", "\n", "", "def", "continue_train", "(", "model", ",", "experiment_name", ",", "initial_lr", ",", "epochs", "=", "20", ")", ":", "\n", "  ", "cfg", "=", "load_config_data", "(", "experiment_name", ")", "\n", "train_params", "=", "DotDict", "(", "cfg", ".", "train_params", ")", "\n", "model_params", "=", "DotDict", "(", "cfg", ".", "model_params", ")", "\n", "\n", "file_pattern", "=", "train_params", ".", "train_file_pattern", "\n", "dataset", "=", "get_dataset", "(", "file_pattern", ")", "\n", "eval_file_pattern", "=", "train_params", ".", "eval_file_pattern", "\n", "eval_dataset", "=", "get_dataset", "(", "eval_file_pattern", ")", "\n", "save_freq", "=", "\"epoch\"", "\n", "if", "train_params", ".", "save_freq", "!=", "\"epoch\"", ":", "\n", "    ", "save_freq", "=", "int", "(", "train_params", ".", "save_freq", ")", "\n", "\n", "", "filepath", "=", "train_params", ".", "model_file_pattern", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.train.continue_train": [[132, 163], ["utils.load_config_data", "utils.DotDict", "utils.DotDict", "dataset.get_dataset", "dataset.get_dataset", "tensorflow.keras.optimizers.Adam", "model.compile", "int", "tensorflow.keras.callbacks.ModelCheckpoint", "LRRecorder", "model.fit", "model.save_weights"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.load_config_data", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.compile"], ["callbacks", "=", "[", "\n", "tf", ".", "keras", ".", "callbacks", ".", "ModelCheckpoint", "(", "\n", "filepath", ",", "\n", "monitor", "=", "'val_loss'", ",", "\n", "save_best_only", "=", "False", ",", "\n", "save_weights_only", "=", "True", ",", "\n", "mode", "=", "'auto'", ",", "\n", "save_freq", "=", "save_freq", ")", ",", "\n", "LRRecorder", "(", ")", ",", "\n", "]", "\n", "optimizer", "=", "tf", ".", "keras", ".", "optimizers", ".", "Adam", "(", "learning_rate", "=", "initial_lr", ")", "\n", "model", ".", "compile", "(", "optimizer", ",", "model", ".", "multi_path_loss", ",", "model", ".", "multi_modal_loss", ",", "model", ".", "loss_tracker", ",", "model", ".", "multi_modal_loss_tracker", ",", "model", ".", "motion_metrics", ",", "model", ".", "metrics_config", ")", "\n", "model", ".", "fit", "(", "dataset", ",", "epochs", "=", "epochs", ",", "validation_data", "=", "eval_dataset", ",", "callbacks", "=", "callbacks", ")", "\n", "model", ".", "save_weights", "(", "train_params", ".", "final_file", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._parse_no_swap": [[104, 107], ["tensorflow.io.parse_single_example", "dataset.parse_example_no_swap"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.parse_example_no_swap"], ["def", "_parse_common", "(", "decoded_example", ")", ":", "\n", "  ", "scenario_id", "=", "decoded_example", "[", "'scenario/id'", "]", "# [1]", "\n", "object_id", "=", "decoded_example", "[", "'state/id'", "]", "# [1]", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.parse_example_no_swap": [[108, 178], ["tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.concat", "tensorflow.concat", "tensorflow.image.decode_jpeg", "tensorflow.image.decode_jpeg", "tensorflow.concat"], "function", ["None"], ["x", "=", "decoded_example", "[", "'state/current/x'", "]", "\n", "y", "=", "decoded_example", "[", "'state/current/y'", "]", "\n", "yaw", "=", "decoded_example", "[", "'state/current/bbox_yaw'", "]", "\n", "\n", "past_states", "=", "tf", ".", "stack", "(", "[", "\n", "decoded_example", "[", "'state/past/x'", "]", ",", "\n", "decoded_example", "[", "'state/past/y'", "]", ",", "\n", "decoded_example", "[", "'state/past/length'", "]", ",", "\n", "decoded_example", "[", "'state/past/width'", "]", ",", "\n", "decoded_example", "[", "'state/past/bbox_yaw'", "]", ",", "\n", "decoded_example", "[", "'state/past/velocity_x'", "]", ",", "\n", "decoded_example", "[", "'state/past/velocity_y'", "]", "\n", "]", ",", "-", "1", ")", "\n", "\n", "cur_states", "=", "tf", ".", "stack", "(", "[", "\n", "decoded_example", "[", "'state/current/x'", "]", ",", "\n", "decoded_example", "[", "'state/current/y'", "]", ",", "\n", "decoded_example", "[", "'state/current/length'", "]", ",", "\n", "decoded_example", "[", "'state/current/width'", "]", ",", "\n", "decoded_example", "[", "'state/current/bbox_yaw'", "]", ",", "\n", "decoded_example", "[", "'state/current/velocity_x'", "]", ",", "\n", "decoded_example", "[", "'state/current/velocity_y'", "]", "\n", "]", ",", "-", "1", ")", "\n", "\n", "input_states", "=", "tf", ".", "concat", "(", "[", "past_states", ",", "cur_states", "]", ",", "1", ")", "[", "...", ",", ":", "7", "]", "\n", "\n", "future_states", "=", "tf", ".", "stack", "(", "[", "\n", "decoded_example", "[", "'state/future/x'", "]", ",", "\n", "decoded_example", "[", "'state/future/y'", "]", ",", "\n", "decoded_example", "[", "'state/future/length'", "]", ",", "\n", "decoded_example", "[", "'state/future/width'", "]", ",", "\n", "decoded_example", "[", "'state/future/bbox_yaw'", "]", ",", "\n", "decoded_example", "[", "'state/future/velocity_x'", "]", ",", "\n", "decoded_example", "[", "'state/future/velocity_y'", "]", "\n", "]", ",", "-", "1", ")", "\n", "\n", "gt_future_states", "=", "tf", ".", "concat", "(", "[", "past_states", ",", "cur_states", ",", "future_states", "]", ",", "1", ")", "\n", "past_is_valid", "=", "decoded_example", "[", "'state/past/valid'", "]", ">", "0", "\n", "current_is_valid", "=", "decoded_example", "[", "'state/current/valid'", "]", ">", "0", "\n", "future_is_valid", "=", "decoded_example", "[", "'state/future/valid'", "]", ">", "0", "\n", "gt_future_is_valid", "=", "tf", ".", "concat", "(", "\n", "[", "past_is_valid", ",", "current_is_valid", ",", "future_is_valid", "]", ",", "1", ")", "\n", "\n", "inputs", "=", "{", "\n", "'is_sdc'", ":", "decoded_example", "[", "'state/is_sdc'", "]", ",", "# (1,)", "\n", "'gt_future_states'", ":", "gt_future_states", ",", "# (1, 91, 7)", "\n", "'gt_future_is_valid'", ":", "gt_future_is_valid", ",", "# (1, 91)", "\n", "'past_states'", ":", "past_states", ",", "# (1, 10, 7)", "\n", "'object_type'", ":", "decoded_example", "[", "'state/type'", "]", ",", "# (1, )", "\n", "'x'", ":", "x", ",", "# (1,)", "\n", "'y'", ":", "y", ",", "# (1, )", "\n", "'yaw'", ":", "yaw", ",", "# (1, )", "\n", "'scenario_id'", ":", "scenario_id", ",", "\n", "'object_id'", ":", "object_id", "}", "\n", "return", "inputs", "\n", "\n", "\n", "", "def", "_parse", "(", "value", ")", ":", "\n", "  ", "decoded_example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "value", ",", "e_features_description", ")", "\n", "inputs", "=", "_parse_common", "(", "decoded_example", ")", "\n", "encoded", "=", "tf", ".", "sparse", ".", "to_dense", "(", "decoded_example", "[", "'image/encoded'", "]", ")", "[", "0", "]", "\n", "inputs", "[", "'image'", "]", "=", "tf", ".", "image", ".", "decode_jpeg", "(", "encoded", ")", "\n", "return", "inputs", "\n", "\n", "", "def", "_parse_without_image", "(", "value", ")", ":", "\n", "  ", "decoded_example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "value", ",", "e_features_description", ")", "\n", "return", "_parse_common", "(", "decoded_example", ")", "\n", "\n", "", "def", "is_valid", "(", "x", ")", ":", "\n", "  ", "avails_float", "=", "tf", ".", "cast", "(", "x", "[", "\"gt_future_is_valid\"", "]", ",", "tf", ".", "float32", ")", "# (1, 91)", "\n", "dist", "=", "(", "x", "[", "\"gt_future_states\"", "]", "[", "0", ",", "12", ":", ",", "0", ":", "2", "]", "-", "x", "[", "\"gt_future_states\"", "]", "[", "0", ",", "11", ":", "90", ",", "0", ":", "2", "]", ")", "**", "2", "# (79, 2)", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._parse": [[179, 182], ["tensorflow.io.parse_single_example", "dataset.parse_example"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.parse_example"], ["dist", "=", "tf", ".", "reduce_sum", "(", "dist", ",", "axis", "=", "1", ")", "# (79,)", "\n", "dist", "*=", "avails_float", "[", "0", ",", "11", ":", "90", "]", "*", "avails_float", "[", "0", ",", "12", ":", "]", "# (79,)", "\n", "dist", "=", "tf", ".", "reduce_max", "(", "dist", ",", "axis", "=", "0", ")", "# ()", "\n", "return", "dist", "<", "36", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.parse_example": [[183, 259], ["tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.concat", "tensorflow.concat", "tensorflow.cast", "tensorflow.image.decode_jpeg", "tensorflow.image.decode_jpeg", "tensorflow.cast", "tensorflow.concat", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.gather", "tensorflow.constant", "tensorflow.constant"], "function", ["None"], ["\n", "", "def", "get_dataset", "(", "file_pattern", ",", "batch_size", "=", "32", ",", "filter_valid", "=", "False", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "if", "filter_valid", ":", "\n", "    ", "dataset", "=", "dataset", ".", "filter", "(", "lambda", "x", ":", "is_valid", "(", "x", ")", ")", "\n", "", "return", "dataset", ".", "batch", "(", "batch_size", ")", "\n", "\n", "", "def", "_cyc_only", "(", "data", ")", ":", "\n", "  ", "example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "ot_feature_desc", ")", "\n", "return", "example", "[", "'state/type'", "]", "[", "0", "]", "==", "3.", "\n", "\n", "", "def", "get_cyclist_dataset", "(", "file_pattern", ",", "batch_size", "=", "32", ",", "filter_valid", "=", "False", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ".", "filter", "(", "lambda", "y", ":", "_cyc_only", "(", "y", ")", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "if", "filter_valid", ":", "\n", "      ", "dataset", "=", "dataset", ".", "filter", "(", "lambda", "x", ":", "is_valid", "(", "x", ")", ")", "\n", "", "return", "dataset", ".", "batch", "(", "batch_size", ")", "\n", "\n", "", "def", "get_eval_dataset", "(", "data_type", ",", "eval_file_pattern", ",", "batch_size", "=", "32", ")", ":", "\n", "  ", "if", "data_type", "==", "\"cyclist\"", ":", "\n", "    ", "dataset", "=", "get_cyclist_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "elif", "data_type", "==", "\"ped\"", ":", "\n", "    ", "dataset", "=", "get_ped_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "elif", "data_type", "==", "\"veh\"", ":", "\n", "    ", "dataset", "=", "get_veh_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "else", ":", "\n", "    ", "dataset", "=", "get_dataset", "(", "eval_file_pattern", ",", "batch_size", ")", "\n", "", "return", "dataset", "\n", "\n", "", "ot_feature_desc", "=", "{", "\n", "'state/type'", ":", "\n", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "1", "]", ",", "tf", ".", "float32", ",", "default_value", "=", "None", ")", ",", "\n", "}", "\n", "def", "_ped_only", "(", "data", ")", ":", "\n", "  ", "example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "ot_feature_desc", ")", "\n", "return", "example", "[", "'state/type'", "]", "[", "0", "]", "==", "2", "\n", "\n", "", "def", "get_ped_dataset", "(", "file_pattern", ",", "batch_size", "=", "32", ",", "filter_valid", "=", "False", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ".", "filter", "(", "lambda", "y", ":", "_ped_only", "(", "y", ")", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "if", "filter_valid", ":", "\n", "      ", "dataset", "=", "dataset", ".", "filter", "(", "lambda", "x", ":", "is_valid", "(", "x", ")", ")", "\n", "", "return", "dataset", ".", "batch", "(", "batch_size", ")", "\n", "\n", "", "def", "_veh_only", "(", "data", ")", ":", "\n", "  ", "example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "ot_feature_desc", ")", "\n", "return", "example", "[", "'state/type'", "]", "[", "0", "]", "==", "1", "\n", "\n", "", "def", "get_veh_dataset", "(", "file_pattern", ",", "batch_size", "=", "32", ",", "filter_valid", "=", "False", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ".", "filter", "(", "lambda", "y", ":", "_veh_only", "(", "y", ")", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "if", "filter_valid", ":", "\n", "    ", "dataset", "=", "dataset", ".", "filter", "(", "lambda", "x", ":", "is_valid", "(", "x", ")", ")", "\n", "", "return", "dataset", ".", "batch", "(", "batch_size", ")", "\n", "\n", "", "def", "get_deterministic_dataset", "(", "file_pattern", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ",", "shuffle", "=", "False", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ",", "cycle_length", "=", "1", ")", ".", "map", "(", "_parse", ")", ".", "batch", "(", "32", ")", "\n", "return", "dataset", "\n", "\n", "", "def", "get_dataset_for_clustering", "(", "file_pattern", ")", ":", "\n", "  ", "file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "file_pattern", ")", "\n", "dataset", "=", "file_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse_without_image", ",", "num_parallel_calls", "=", "8", ")", ".", "batch", "(", "32", ")", "\n", "return", "dataset", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._parse_without_image": [[260, 321], ["tensorflow.io.parse_single_example", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat"], "function", ["None"], ["\n", "", "def", "_object_type_only", "(", "data", ",", "object_type", ")", ":", "\n", "  ", "example", "=", "tf", ".", "io", ".", "parse_single_example", "(", "data", ",", "ot_feature_desc", ")", "\n", "return", "example", "[", "'state/type'", "]", "[", "0", "]", "==", "object_type", "\n", "\n", "", "def", "get_extended_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "object_type", ")", ":", "\n", "  ", "train_file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "train_file_pattern", ")", "\n", "validation_file_dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "list_files", "(", "validation_file_pattern", ")", "\n", "combined_dataset", "=", "train_file_dataset", ".", "concatenate", "(", "validation_file_dataset", ")", ".", "shuffle", "(", "1100", ")", "\n", "dataset", "=", "combined_dataset", ".", "interleave", "(", "lambda", "x", ":", "tf", ".", "data", ".", "TFRecordDataset", "(", "x", ")", ".", "prefetch", "(", "4", ")", ".", "filter", "(", "lambda", "y", ":", "_object_type_only", "(", "y", ",", "object_type", ")", ")", ",", "cycle_length", "=", "8", ")", ".", "map", "(", "_parse", ",", "num_parallel_calls", "=", "8", ")", "\n", "return", "dataset", "\n", "\n", "", "def", "combine_datasets", "(", "veh_dataset", ",", "ped_dataset", ",", "cyc_dataset", ",", "veh_val", ",", "ped_val", ",", "cyc_val", ")", ":", "\n", "  ", "veh_dataset", "=", "veh_dataset", ".", "repeat", "(", ")", "\n", "ped_dataset", "=", "ped_dataset", ".", "repeat", "(", ")", "\n", "cyc_dataset", "=", "cyc_dataset", ".", "repeat", "(", ")", "\n", "dataset", "=", "tf", ".", "data", ".", "experimental", ".", "sample_from_datasets", "(", "[", "veh_dataset", ",", "ped_dataset", ",", "cyc_dataset", "]", ",", "[", "veh_val", ",", "ped_val", ",", "cyc_val", "]", ")", "\n", "return", "dataset", "\n", "\n", "", "def", "get_weighted_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "veh_val", ",", "ped_val", ",", "cyc_val", ",", "batch_size", "=", "32", ")", ":", "\n", "  ", "veh_dataset", "=", "get_extended_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "object_type", "=", "1", ")", "\n", "ped_dataset", "=", "get_extended_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "object_type", "=", "2", ")", "\n", "cyc_dataset", "=", "get_extended_dataset", "(", "train_file_pattern", ",", "validation_file_pattern", ",", "object_type", "=", "3", ")", "\n", "return", "combine_datasets", "(", "veh_dataset", ",", "ped_dataset", ",", "cyc_dataset", ",", "veh_val", ",", "ped_val", ",", "cyc_val", ")", ".", "batch", "(", "batch_size", ")", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset": [[322, 328], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map().batch", "tf.data.Dataset.list_files.interleave().map", "tf.data.Dataset.list_files.interleave", "tensorflow.data.TFRecordDataset().prefetch", "tensorflow.data.TFRecordDataset"], "function", ["None"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._cyclist_only": [[334, 337], ["tensorflow.io.parse_single_example", "tensorflow.reduce_max"], "function", ["None"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_cyclist_dataset": [[338, 344], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map", "file_dataset.interleave().map.batch", "tf.data.Dataset.list_files.interleave", "tensorflow.data.TFRecordDataset().prefetch().filter", "tensorflow.data.TFRecordDataset().prefetch", "dataset._cyclist_only", "tensorflow.data.TFRecordDataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._cyclist_only"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._ped_only": [[345, 348], ["tensorflow.io.parse_single_example", "tensorflow.reduce_max"], "function", ["None"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_ped_dataset": [[349, 355], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map", "file_dataset.interleave().map.batch", "tf.data.Dataset.list_files.interleave", "tensorflow.data.TFRecordDataset().prefetch().filter", "tensorflow.data.TFRecordDataset().prefetch", "dataset._ped_only", "tensorflow.data.TFRecordDataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._ped_only"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._veh_only": [[356, 359], ["tensorflow.io.parse_single_example", "tensorflow.reduce_max"], "function", ["None"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_veh_dataset": [[360, 366], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map", "file_dataset.interleave().map.batch", "tf.data.Dataset.list_files.interleave", "tensorflow.data.TFRecordDataset().prefetch().filter", "tensorflow.data.TFRecordDataset().prefetch", "dataset._veh_only", "tensorflow.data.TFRecordDataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._veh_only"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_interaction_eval_dataset": [[367, 377], ["dataset.get_cyclist_dataset", "dataset.get_ped_dataset", "dataset.get_veh_dataset", "dataset.get_dataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_cyclist_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_ped_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_veh_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_dataset_for_clustering": [[378, 384], ["tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.interleave().map().batch", "tf.data.Dataset.list_files.interleave().map", "tf.data.Dataset.list_files.interleave", "tensorflow.data.TFRecordDataset().prefetch", "tensorflow.data.TFRecordDataset"], "function", ["None"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._object_type_only": [[385, 388], ["tensorflow.io.parse_single_example", "tensorflow.reduce_max"], "function", ["None"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_extended_dataset": [[389, 400], ["tensorflow.data.Dataset.list_files", "train_file_dataset.concatenate().shuffle.interleave().map", "tensorflow.data.Dataset.list_files", "tf.data.Dataset.list_files.concatenate().shuffle", "train_file_dataset.concatenate().shuffle.interleave", "tf.data.Dataset.list_files.concatenate", "tensorflow.data.TFRecordDataset().prefetch().filter", "tensorflow.data.TFRecordDataset().prefetch", "dataset._object_type_only", "tensorflow.data.TFRecordDataset"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset._object_type_only"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.combine_datasets": [[401, 407], ["veh_dataset.repeat.repeat", "ped_dataset.repeat.repeat", "cyc_dataset.repeat.repeat", "tensorflow.data.experimental.sample_from_datasets"], "function", ["None"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_weighted_dataset": [[408, 413], ["dataset.get_extended_dataset", "dataset.get_extended_dataset", "dataset.get_extended_dataset", "combine_datasets().batch", "dataset.combine_datasets"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_extended_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_extended_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.get_extended_dataset", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.dataset.combine_datasets"], []], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.loss.JointPredMultiModalLoss.__init__": [[6, 8], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["    ", "super", "(", ")", ".", "__init__", "(", "name", "=", "name", ")", "\n", "self", ".", "num_future_steps", "=", "num_future_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.loss.JointPredMultiModalLoss.call": [[9, 38], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_sum", "len", "tensorflow.math.log", "tensorflow.math.reduce_logsumexp", "tensorflow.reduce_mean"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "gt", ",", "avails", ",", "pred", ",", "confidences", ",", "object_type", "=", "None", ",", "reduce_mean", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Call Arguments:\n      targets: (B, 80, 2)\n      pred: (B, 3, 80, 2)\n      confidences: (B, 3)\n      target_availabilities: (B, 80)\n    \n    Returns:\n      loss:\n        (1,) if reduce_mean\n        (B, 1) otherwise\n    \"\"\"", "\n", "assert", "len", "(", "pred", ".", "shape", ")", "==", "4", ",", "f\"expected 3D (MxTxC) array for pred, got {pred.shape}\"", "\n", "gt", "=", "tf", ".", "reshape", "(", "gt", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "2", "]", ")", "\n", "avails", "=", "tf", ".", "reshape", "(", "avails", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "1", "]", ")", "\n", "\n", "error", "=", "tf", ".", "reduce_sum", "(", "(", "(", "gt", "-", "pred", ")", "*", "avails", ")", "**", "2", ",", "axis", "=", "[", "2", ",", "3", "]", ")", "# Outputs:(B, 3)", "\n", "\n", "error", "=", "tf", ".", "math", ".", "log", "(", "confidences", "+", "1e-16", ")", "-", "0.5", "*", "error", "\n", "\n", "error", "=", "-", "tf", ".", "math", ".", "reduce_logsumexp", "(", "error", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "# (B, 1)", "\n", "\n", "error", "/=", "self", ".", "num_future_steps", "\n", "\n", "if", "reduce_mean", ":", "\n", "      ", "return", "tf", ".", "reduce_mean", "(", "error", ")", "\n", "", "else", ":", "\n", "      ", "return", "error", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.loss.JointPredMultiPathLoss.__init__": [[40, 51], ["super().__init__", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "tensorflow.convert_to_tensor", "len"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["  ", "def", "__init__", "(", "self", ",", "veh_centroids", ",", "ped_centroids", ",", "cyc_centroids", ",", "cls_weight", ",", "reg_weight", ",", "ped_weight", "=", "1.", ",", "cyc_weight", "=", "1.", ",", "num_future_steps", "=", "80", ",", "name", "=", "'mtmp_loss'", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "name", "=", "name", ")", "\n", "self", ".", "veh_centroids", "=", "tf", ".", "convert_to_tensor", "(", "veh_centroids", ")", "\n", "self", ".", "ped_centroids", "=", "tf", ".", "convert_to_tensor", "(", "ped_centroids", ")", "\n", "self", ".", "cyc_centroids", "=", "tf", ".", "convert_to_tensor", "(", "cyc_centroids", ")", "\n", "self", ".", "cls_weight", "=", "cls_weight", "\n", "self", ".", "reg_weight", "=", "reg_weight", "\n", "self", ".", "ped_weight", "=", "ped_weight", "\n", "self", ".", "cyc_weight", "=", "cyc_weight", "\n", "self", ".", "num_future_steps", "=", "num_future_steps", "\n", "self", ".", "K", "=", "max", "(", "len", "(", "veh_centroids", ")", ",", "len", "(", "ped_centroids", ")", ",", "len", "(", "cyc_centroids", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.loss.JointPredMultiPathLoss.call": [[52, 155], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.math.cos", "tensorflow.math.sin", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.stack", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.argmin", "tensorflow.cast", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.argmin", "tensorflow.cast", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.argmin", "tensorflow.cast", "tensorflow.math.reduce_max", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.cast", "tensorflow.cast", "tensorflow.reshape", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.one_hot", "len", "tensorflow.math.log", "tensorflow.reshape", "tensorflow.math.log", "tensorflow.one_hot", "tensorflow.reshape", "tensorflow.math.log", "tensorflow.one_hot", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.math.log", "tensorflow.cast", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.cast", "tensorflow.cast"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "gt", ",", "avails", ",", "pred", ",", "confidences", ",", "x", ",", "y", ",", "yaw", ",", "object_type", ",", "reduce_mean", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Call Arguments:\n      targets: (B, 80, 2)\n      pred: (B, K, 80, 2)\n      confidences: (B, K)\n      target_availabilities: (B, 80)\n      x: (B, 1)\n      y: (B, 1)\n      yaw: (B, 1)\n    \n    Returns:\n      loss:\n        (1,) if reduce_mean\n        (B, 1) otherwise\n    \"\"\"", "\n", "assert", "len", "(", "pred", ".", "shape", ")", "==", "4", ",", "f\"expected 3D (MxTxC) array for pred, got {pred.shape}\"", "\n", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "# (B, 1)", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "# (B, 1)", "\n", "x_hat", "=", "gt", "[", ":", ",", ":", ",", "0", "]", "-", "x", "# (B, 80)", "\n", "y_hat", "=", "gt", "[", ":", ",", ":", ",", "1", "]", "-", "y", "# (B, 80)", "\n", "gt_ego_x", "=", "c", "*", "x_hat", "+", "s", "*", "y_hat", "# (B, 80)", "\n", "gt_ego_y", "=", "-", "s", "*", "x_hat", "+", "c", "*", "y_hat", "# (B, 80)", "\n", "\n", "gt", "=", "tf", ".", "reshape", "(", "gt", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "2", "]", ")", "\n", "avails", "=", "tf", ".", "reshape", "(", "avails", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "1", "]", ")", "\n", "error", "=", "tf", ".", "reduce_sum", "(", "(", "(", "gt", "-", "pred", ")", "*", "avails", ")", "**", "2", ",", "axis", "=", "[", "2", ",", "3", "]", ")", "# Outputs:(B, K)", "\n", "error", "=", "-", "self", ".", "cls_weight", "*", "tf", ".", "math", ".", "log", "(", "confidences", "+", "1e-16", ")", "+", "self", ".", "reg_weight", "*", "0.5", "*", "error", "\n", "conf_error", "=", "-", "self", ".", "cls_weight", "*", "tf", ".", "math", ".", "log", "(", "confidences", "+", "1e-16", ")", "\n", "\n", "gt_ego", "=", "tf", ".", "stack", "(", "[", "gt_ego_x", ",", "gt_ego_y", "]", ",", "axis", "=", "-", "1", ")", "# (B, 80, 2)", "\n", "# self.centroids has shape (K, 160)", "\n", "gt_ego", "=", "tf", ".", "reshape", "(", "gt_ego", ",", "[", "-", "1", ",", "1", ",", "self", ".", "num_future_steps", ",", "2", "]", ")", "\n", "\n", "is_veh", "=", "object_type", "==", "1", "# object_type[:, 1] # (B, 1) object_type == 1", "\n", "is_ped", "=", "object_type", "==", "2", "# (B, 1)", "\n", "is_cyc", "=", "tf", ".", "math", ".", "logical_not", "(", "tf", ".", "math", ".", "logical_or", "(", "is_veh", ",", "is_ped", ")", ")", "\n", "object_type_mask", "=", "tf", ".", "concat", "(", "[", "is_veh", ",", "is_ped", ",", "is_cyc", "]", ",", "axis", "=", "-", "1", ")", "# (B, 3)", "\n", "\n", "object_type_weight", "=", "tf", ".", "squeeze", "(", "(", "tf", ".", "cast", "(", "is_veh", ",", "tf", ".", "float32", ")", "+", "tf", ".", "cast", "(", "is_ped", ",", "tf", ".", "float32", ")", "*", "self", ".", "ped_weight", "+", "tf", ".", "cast", "(", "is_cyc", ",", "tf", ".", "float32", ")", "*", "self", ".", "cyc_weight", ")", ",", "axis", "=", "1", ")", "# (B,)", "\n", "\n", "veh_centroids", "=", "tf", ".", "reshape", "(", "self", ".", "veh_centroids", ",", "[", "1", ",", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "distance", "=", "(", "(", "gt_ego", "[", ":", ",", ":", ",", "-", "80", ":", "]", "-", "veh_centroids", ")", "**", "2", ")", "*", "avails", "[", ":", ",", ":", ",", "-", "80", ":", "]", "# (B, K, 80, 2)", "\n", "distance", "=", "tf", ".", "reduce_sum", "(", "distance", ",", "[", "2", ",", "3", "]", ")", "# (B, K)", "\n", "veh_assignments", "=", "tf", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "veh_assignments_mask", "=", "tf", ".", "one_hot", "(", "veh_assignments", ",", "self", ".", "K", ")", "# (B, K)", "\n", "\n", "ped_centroids", "=", "tf", ".", "reshape", "(", "self", ".", "ped_centroids", ",", "[", "1", ",", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "distance", "=", "(", "(", "gt_ego", "[", ":", ",", ":", ",", "-", "80", ":", "]", "-", "ped_centroids", ")", "**", "2", ")", "*", "avails", "[", ":", ",", ":", ",", "-", "80", ":", "]", "# (B, K, 80, 2)", "\n", "distance", "=", "tf", ".", "reduce_sum", "(", "distance", ",", "[", "2", ",", "3", "]", ")", "# (B, K)", "\n", "ped_assignments", "=", "tf", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "ped_assignments_mask", "=", "tf", ".", "one_hot", "(", "ped_assignments", ",", "self", ".", "K", ")", "# (B, K)", "\n", "\n", "cyc_centroids", "=", "tf", ".", "reshape", "(", "self", ".", "cyc_centroids", ",", "[", "1", ",", "-", "1", ",", "80", ",", "2", "]", ")", "\n", "distance", "=", "(", "(", "gt_ego", "[", ":", ",", ":", ",", "-", "80", ":", "]", "-", "cyc_centroids", ")", "**", "2", ")", "*", "avails", "[", ":", ",", ":", ",", "-", "80", ":", "]", "# (B, K, 80, 2)", "\n", "distance", "=", "tf", ".", "reduce_sum", "(", "distance", ",", "[", "2", ",", "3", "]", ")", "# (B, K)", "\n", "cyc_assignments", "=", "tf", ".", "argmin", "(", "distance", ",", "axis", "=", "1", ")", "# (B,)", "\n", "cyc_assignments_mask", "=", "tf", ".", "one_hot", "(", "cyc_assignments", ",", "self", ".", "K", ")", "# (B, K)", "\n", "\n", "assignments_mask", "=", "tf", ".", "stack", "(", "[", "veh_assignments_mask", ",", "ped_assignments_mask", ",", "cyc_assignments_mask", "]", ",", "axis", "=", "1", ")", "\n", "assignments_mask", "=", "tf", ".", "boolean_mask", "(", "assignments_mask", ",", "object_type_mask", ")", "# (B, K)", "\n", "\n", "error", "=", "tf", ".", "cast", "(", "assignments_mask", ",", "tf", ".", "float32", ")", "*", "tf", ".", "cast", "(", "error", ",", "tf", ".", "float32", ")", "# (B, K)", "\n", "error", "=", "tf", ".", "reduce_sum", "(", "error", ",", "axis", "=", "1", ")", "\n", "\n", "error", "*=", "object_type_weight", "\n", "error", "/=", "self", ".", "num_future_steps", "\n", "\n", "conf_error", "=", "tf", ".", "cast", "(", "assignments_mask", ",", "tf", ".", "float32", ")", "*", "tf", ".", "cast", "(", "conf_error", ",", "tf", ".", "float32", ")", "# (B, K)", "\n", "conf_error", "=", "tf", ".", "reduce_sum", "(", "conf_error", ",", "axis", "=", "1", ")", "\n", "conf_error", "*=", "object_type_weight", "\n", "conf_error", "/=", "self", ".", "num_future_steps", "\n", "\n", "if", "reduce_mean", ":", "\n", "      ", "return", "tf", ".", "reduce_mean", "(", "error", ")", ",", "tf", ".", "reduce_mean", "(", "conf_error", ")", "\n", "", "else", ":", "\n", "      ", "return", "error", ",", "conf_error", ",", "assignments_mask", "", "", "", "", ""]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.submission.eval_and_generate_submission": [[6, 44], ["waymo_open_dataset.protos.motion_submission_pb2.MotionChallengeSubmission", "enumerate", "model.predict_step", "trajectories.numpy.numpy", "confidences.numpy.numpy", "range", "print", "len", "[].numpy", "range", "motion_submission_pb2.MotionChallengeSubmission.scenario_predictions.add", "submission.scenario_predictions.add.joint_prediction.joint_trajectories.add", "current_scenario_prediction.joint_prediction.joint_trajectories.add.trajectories.add", "[].numpy().astype", "range", "trajectory.center_x.extend", "trajectory.center_y.extend", "center_x.append", "center_y.append", "[].numpy"], "function", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.predict_step"], ["  ", "submission", "=", "motion_submission_pb2", ".", "MotionChallengeSubmission", "(", ")", "\n", "submission", ".", "submission_type", "=", "1", "\n", "current_scenario_id", "=", "\"\"", "\n", "for", "i", ",", "batch", "in", "enumerate", "(", "eval_dataset", ")", ":", "\n", "    ", "if", "i", "%", "100", "==", "0", ":", "\n", "      ", "print", "(", "i", ")", "\n", "", "trajectories", ",", "confidences", "=", "model", ".", "predict_step", "(", "batch", ")", "# (B, 3, 16, 2), (B, 3)", "\n", "trajectories", "=", "trajectories", ".", "numpy", "(", ")", "\n", "confidences", "=", "confidences", ".", "numpy", "(", ")", "\n", "for", "example_index", "in", "range", "(", "len", "(", "trajectories", ")", ")", ":", "\n", "      ", "example_scenario_id", "=", "batch", "[", "'scenario_id'", "]", "[", "example_index", "]", "[", "0", "]", ".", "numpy", "(", ")", "\n", "if", "example_scenario_id", "!=", "current_scenario_id", ":", "\n", "        ", "current_scenario_id", "=", "example_scenario_id", "\n", "current_scenario_prediction", "=", "submission", ".", "scenario_predictions", ".", "add", "(", ")", "\n", "current_scenario_prediction", ".", "scenario_id", "=", "example_scenario_id", "\n", "", "prediction", "=", "current_scenario_prediction", ".", "single_predictions", ".", "predictions", ".", "add", "(", ")", "# prediction is of type SingleObjectPrediction", "\n", "prediction", ".", "object_id", "=", "batch", "[", "'object_id'", "]", "[", "example_index", "]", "[", "0", "]", ".", "numpy", "(", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "for", "mode", "in", "range", "(", "num_modes", ")", ":", "\n", "        ", "scored_trajectory", "=", "prediction", ".", "trajectories", ".", "add", "(", ")", "\n", "scored_trajectory", ".", "confidence", "=", "confidences", "[", "example_index", ",", "mode", "]", "\n", "center_x", "=", "[", "]", "\n", "center_y", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "16", ")", ":", "\n", "            ", "x", "=", "trajectories", "[", "example_index", ",", "mode", ",", "t", ",", "0", "]", "\n", "y", "=", "trajectories", "[", "example_index", ",", "mode", ",", "t", ",", "1", "]", "\n", "center_x", ".", "append", "(", "x", ")", "\n", "center_y", ".", "append", "(", "y", ")", "\n", "", "trajectory", "=", "scored_trajectory", ".", "trajectory", "\n", "trajectory", ".", "center_x", ".", "extend", "(", "center_x", ")", "\n", "trajectory", ".", "center_y", ".", "extend", "(", "center_y", ")", "\n", "", "", "", "return", "submission", "\n", "\n", "", "def", "write_submission_to_file", "(", "submission", ",", "output_filename", ")", ":", "\n", "  ", "f", "=", "open", "(", "output_filename", ",", "\"wb\"", ")", "\n", "f", ".", "write", "(", "submission", ".", "SerializeToString", "(", ")", ")", "\n", "f", ".", "close", "(", ")", "\n", "\n", "", "def", "combine_submission_bins", "(", "submission_files", ",", "output_bin", ")", ":", "\n", "  ", "scenario_id_to_sps", "=", "{", "}", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.submission.write_submission_to_file": [[45, 49], ["open", "open.write", "open.close", "submission.SerializeToString"], "function", ["None"], ["for", "submission_file", "in", "submission_files", ":", "\n", "    ", "submission", "=", "motion_submission_pb2", ".", "MotionChallengeSubmission", "(", ")", "\n", "with", "open", "(", "\"drive/MyDrive/Motion/submissions/\"", "+", "submission_file", ",", "\"rb\"", ")", "as", "f", ":", "\n", "      ", "submission", ".", "ParseFromString", "(", "f", ".", "read", "(", ")", ")", "\n", "", "for", "sp", "in", "submission", ".", "scenario_predictions", ":", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.__init__": [[25, 48], ["super().__init__", "tensorflow.keras.layers.Softmax", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.Sequential", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense", "tensorflow.keras.layers.Dropout", "tensorflow.keras.layers.Dense"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__"], ["self", ".", "num_modes", "=", "len", "(", "centroids", ")", "\n", "self", ".", "num_knots", "=", "num_knots", "\n", "self", ".", "num_future_steps", "=", "num_future_steps", "\n", "self", ".", "softmax", "=", "tf", ".", "keras", ".", "layers", ".", "Softmax", "(", ")", "\n", "\n", "", "def", "call", "(", "self", ",", "inputs", ",", "x", ",", "y", ",", "yaw", ",", "past_ego_x", "=", "None", ",", "past_ego_y", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Parameters:\n      inputs: (B, num_modes + num_modes*num_knots*2)\n      x: (B, 1)\n      past_ego_x: (B, 10)\n    Returns:\n      trajectories: (B, num_modes, num_future_steps, 2)\n      confidences: (B, num_modes)\n    \"\"\"", "\n", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "\n", "\n", "pred", "=", "inputs", "[", ":", ",", "self", ".", "num_modes", ":", "]", "# (B, 480)", "\n", "knots", "=", "tf", ".", "reshape", "(", "pred", ",", "(", "-", "1", ",", "self", ".", "num_modes", ",", "2", ",", "self", ".", "num_knots", ")", ")", "# (B, 3, 2, 8)", "\n", "max_pos", "=", "self", ".", "num_knots", "-", "3", "# + 1", "\n", "positions", "=", "tf", ".", "expand_dims", "(", "tf", ".", "range", "(", "start", "=", "0.0", ",", "limit", "=", "max_pos", ",", "delta", "=", "max_pos", "/", "self", ".", "num_future_steps", ",", "dtype", "=", "knots", ".", "dtype", ")", ",", "axis", "=", "-", "1", ")", "\n", "spline", "=", "bspline", ".", "interpolate", "(", "knots", ",", "positions", ",", "3", ",", "False", ")", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call": [[49, 120], ["tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "model.JointMOEModel.marginal_model", "tensorflow.cast", "tensorflow.cast", "tensorflow.reshape", "utils.cartesian_product", "tensorflow.reshape", "utils.confidence_cartesian_product", "model.JointMOEModel.vv_conf_fc", "model.JointMOEModel.vp_conf_fc", "model.JointMOEModel.vc_conf_fc", "model.JointMOEModel.vs_conf_fc", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.reshape", "model.JointMOEModel.softmax", "model.JointMOEModel.shared_conf_ffn", "model.JointMOEModel.shared_conf_ffn", "tensorflow.cast", "tensorflow.cast", "tensorflow.cast", "tensorflow.concat", "tensorflow.reduce_sum"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.cartesian_product", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.confidence_cartesian_product"], ["spline", "=", "tf", ".", "squeeze", "(", "spline", ",", "axis", "=", "1", ")", "\n", "pred", "=", "tf", ".", "transpose", "(", "spline", ",", "perm", "=", "[", "1", ",", "2", ",", "0", ",", "3", "]", ")", "# (B, K, 80, 2)", "\n", "\n", "centroid_bias", "=", "tf", ".", "reshape", "(", "self", ".", "centroids", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "80", ",", "2", "]", ")", "\n", "\n", "pred", "=", "pred", "+", "centroid_bias", "\n", "\n", "pred", "=", "tf", ".", "reshape", "(", "pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", "*", "self", ".", "num_future_steps", ",", "2", "]", ")", "\n", "\n", "pred_x", "=", "c", "*", "pred", "[", "...", ",", "0", "]", "-", "s", "*", "pred", "[", "...", ",", "1", "]", "+", "x", "\n", "pred_y", "=", "s", "*", "pred", "[", "...", ",", "0", "]", "+", "c", "*", "pred", "[", "...", ",", "1", "]", "+", "y", "\n", "pred", "=", "tf", ".", "stack", "(", "[", "pred_x", ",", "pred_y", "]", ",", "-", "1", ")", "\n", "pred", "=", "tf", ".", "reshape", "(", "pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "self", ".", "num_future_steps", ",", "2", "]", ",", "name", "=", "\"PRED\"", ")", "\n", "\n", "confidences", "=", "inputs", "[", ":", ",", ":", "self", ".", "num_modes", "]", "\n", "confidences", "=", "self", ".", "softmax", "(", "confidences", ")", "\n", "return", "pred", ",", "confidences", ",", "knots", "\n", "\n", "", "", "class", "MOEModelWithVariableClusters", "(", "tf", ".", "keras", ".", "Model", ")", ":", "\n", "  ", "def", "__init__", "(", "self", ",", "num_future_steps", ",", "backbone", ",", "num_modes", "=", "3", ",", "loss_type", "=", "'multi_path_loss'", ",", "num_knots", "=", "8", ",", "num_ps_units", "=", "None", ",", "veh_modes", "=", "16", ",", "ped_modes", "=", "8", ",", "cyc_modes", "=", "8", ",", "dropout", "=", "0.", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_num_knots", "=", "num_knots", "\n", "self", ".", "_loss_type", "=", "loss_type", "\n", "self", ".", "_num_future_steps", "=", "num_future_steps", "\n", "self", ".", "backbone", "=", "backbone", "\n", "self", ".", "pooling", "=", "tf", ".", "keras", ".", "layers", ".", "GlobalAveragePooling2D", "(", ")", "\n", "if", "dropout", ">", "0", ":", "\n", "      ", "self", ".", "shared_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "300", ",", "activation", "=", "\"relu\"", ")", "]", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "shared_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "300", ",", "activation", "=", "\"relu\"", ")", "]", ")", "\n", "", "self", ".", "veh_modes", "=", "veh_modes", "\n", "self", ".", "ped_modes", "=", "ped_modes", "\n", "self", ".", "cyc_modes", "=", "cyc_modes", "\n", "self", ".", "num_modes", "=", "max", "(", "veh_modes", ",", "ped_modes", ",", "cyc_modes", ")", "\n", "if", "dropout", ">", "0", ":", "\n", "      ", "self", ".", "veh_fc", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "veh_modes", "*", "2", "*", "num_knots", "+", "veh_modes", ")", "]", ")", "\n", "self", ".", "ped_fc", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "ped_modes", "*", "2", "*", "num_knots", "+", "ped_modes", ")", "]", ")", "\n", "self", ".", "cyc_fc", "=", "tf", ".", "keras", ".", "Sequential", "(", "\n", "[", "tf", ".", "keras", ".", "layers", ".", "Dropout", "(", "dropout", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "cyc_modes", "*", "2", "*", "num_knots", "+", "cyc_modes", ")", "]", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "veh_fc", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "veh_modes", "*", "2", "*", "num_knots", "+", "veh_modes", ")", "\n", "self", ".", "ped_fc", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "ped_modes", "*", "2", "*", "num_knots", "+", "ped_modes", ")", "\n", "self", ".", "cyc_fc", "=", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "cyc_modes", "*", "2", "*", "num_knots", "+", "cyc_modes", ")", "\n", "", "self", ".", "softmax", "=", "tf", ".", "keras", ".", "layers", ".", "Softmax", "(", ")", "\n", "if", "num_ps_units", "is", "None", ":", "\n", "      ", "num_ps_units", "=", "num_future_steps", "*", "2", "*", "num_modes", "+", "num_modes", "\n", "\n", "", "self", ".", "veh_ego_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "num_ps_units", ",", "activation", "=", "'relu'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "veh_modes", "*", "2", "*", "num_knots", "+", "veh_modes", ")", "]", ")", "\n", "self", ".", "ped_ego_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "num_ps_units", ",", "activation", "=", "'relu'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "ped_modes", "*", "2", "*", "num_knots", "+", "ped_modes", ")", "]", ")", "\n", "self", ".", "cyc_ego_ffn", "=", "tf", ".", "keras", ".", "Sequential", "(", "[", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "num_ps_units", ",", "activation", "=", "'relu'", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "BatchNormalization", "(", ")", ",", "\n", "tf", ".", "keras", ".", "layers", ".", "Dense", "(", "cyc_modes", "*", "2", "*", "num_knots", "+", "cyc_modes", ")", "]", ")", "\n", "\n", "", "def", "call", "(", "self", ",", "image", ",", "x", "=", "None", ",", "y", "=", "None", ",", "yaw", "=", "None", ",", "past_states", "=", "None", ",", "object_type", "=", "None", ",", "is_sdc", "=", "None", ",", "training", "=", "True", ")", ":", "\n", "    ", "image", "=", "tf", ".", "cast", "(", "image", ",", "tf", ".", "float32", ")", "\n", "c", "=", "tf", ".", "math", ".", "cos", "(", "yaw", ")", "# (B, 1)", "\n", "s", "=", "tf", ".", "math", ".", "sin", "(", "yaw", ")", "# (B, 1)", "\n", "embeddings", "=", "self", ".", "backbone", "(", "image", ",", "training", "=", "training", ")", "\n", "embeddings", "=", "embeddings", "[", ":", ",", "1", ":", "-", "1", ",", "1", ":", "-", "1", ",", ":", "]", "\n", "embeddings", "=", "self", ".", "pooling", "(", "embeddings", ")", "# Outputs (B,2048)", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.compile": [[121, 137], ["super().compile", "tensorflow.keras.metrics.Mean", "len", "len", "len", "max", "utils.pad_to_shape", "utils.pad_to_shape", "utils.pad_to_shape", "tensorflow.ones", "tensorflow.ones", "tensorflow.ones"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.compile", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.pad_to_shape"], ["past_states", "=", "tf", ".", "squeeze", "(", "past_states", ",", "axis", "=", "1", ")", "\n", "past_x", "=", "past_states", "[", ":", ",", ":", ",", "0", "]", "# (B, 10)", "\n", "past_y", "=", "past_states", "[", ":", ",", ":", ",", "1", "]", "# (B, 10)", "\n", "past_x_hat", "=", "past_x", "-", "x", "# (B, 10)", "\n", "past_y_hat", "=", "past_y", "-", "y", "# (B, 10)", "\n", "past_ego_x", "=", "c", "*", "past_x_hat", "+", "s", "*", "past_y_hat", "# (B, 10)", "\n", "past_ego_y", "=", "-", "s", "*", "past_x_hat", "+", "c", "*", "past_y_hat", "# (B, 10)", "\n", "\n", "past_length", "=", "tf", ".", "reduce_mean", "(", "past_states", "[", ":", ",", ":", ",", "2", "]", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "past_width", "=", "tf", ".", "reduce_mean", "(", "past_states", "[", ":", ",", ":", ",", "3", "]", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "past_yaw", "=", "past_states", "[", ":", ",", ":", ",", "4", "]", "-", "yaw", "\n", "past_vel_x", "=", "past_states", "[", ":", ",", ":", ",", "5", "]", "\n", "past_vel_y", "=", "past_states", "[", ":", ",", ":", ",", "6", "]", "\n", "past_vel_x", "=", "c", "*", "past_vel_x", "+", "s", "*", "past_vel_y", "# (B, 10)", "\n", "past_vel_y", "=", "-", "s", "*", "past_vel_x", "+", "c", "*", "past_vel_y", "# (B, 10)", "\n", "# is_sdc has shape (B, 1)", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.train_step": [[138, 174], ["model.JointMOEModel.loss_tracker.update_state", "model.JointMOEModel.conf_loss_tracker.update_state", "model.JointMOEModel.multi_modal_loss.call", "model.JointMOEModel.multi_modal_loss_tracker.update_state", "tape.gradient", "model.JointMOEModel.optimizer.apply_gradients", "tensorflow.squeeze", "tensorflow.GradientTape", "tensorflow.cast", "tensorflow.stack", "model.JointMOEModel.", "model.JointMOEModel.multi_path_loss.call", "zip", "model.JointMOEModel.loss_tracker.result", "model.JointMOEModel.multi_modal_loss_tracker.result", "model.JointMOEModel.conf_loss_tracker.result"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result"], ["past_states", "=", "tf", ".", "concat", "(", "[", "past_ego_x", ",", "past_ego_y", ",", "past_length", ",", "past_width", ",", "past_yaw", ",", "past_vel_x", ",", "past_vel_y", ",", "tf", ".", "cast", "(", "is_sdc", ",", "tf", ".", "float32", ")", "]", ",", "1", ")", "\n", "\n", "is_veh", "=", "tf", ".", "cast", "(", "object_type", "==", "1", ",", "tf", ".", "float32", ")", "# (B, 1)", "\n", "is_ped", "=", "tf", ".", "cast", "(", "object_type", "==", "2", ",", "tf", ".", "float32", ")", "\n", "is_cyc", "=", "1", "-", "is_veh", "-", "is_ped", "\n", "\n", "shared_output", "=", "self", ".", "shared_ffn", "(", "embeddings", ",", "training", "=", "training", ")", "\n", "veh_output", "=", "self", ".", "veh_fc", "(", "shared_output", ",", "training", "=", "training", ")", "+", "self", ".", "veh_ego_ffn", "(", "past_states", ",", "training", "=", "training", ")", "\n", "ped_output", "=", "self", ".", "ped_fc", "(", "shared_output", ",", "training", "=", "training", ")", "+", "self", ".", "ped_ego_ffn", "(", "past_states", ",", "training", "=", "training", ")", "\n", "cyc_output", "=", "self", ".", "cyc_fc", "(", "shared_output", ",", "training", "=", "training", ")", "+", "self", ".", "cyc_ego_ffn", "(", "past_states", ",", "training", "=", "training", ")", "\n", "\n", "veh_pred", ",", "veh_conf", ",", "veh_knots", "=", "self", ".", "veh_head", "(", "veh_output", ",", "x", ",", "y", ",", "yaw", ")", "\n", "ped_pred", ",", "ped_conf", ",", "ped_knots", "=", "self", ".", "ped_head", "(", "ped_output", ",", "x", ",", "y", ",", "yaw", ")", "\n", "cyc_pred", ",", "cyc_conf", ",", "cyc_knots", "=", "self", ".", "cyc_head", "(", "cyc_output", ",", "x", ",", "y", ",", "yaw", ")", "\n", "\n", "veh_pred", "=", "pad_to_shape", "(", "veh_pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "80", ",", "2", "]", ")", "\n", "ped_pred", "=", "pad_to_shape", "(", "ped_pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "80", ",", "2", "]", ")", "\n", "cyc_pred", "=", "pad_to_shape", "(", "cyc_pred", ",", "[", "-", "1", ",", "self", ".", "num_modes", ",", "80", ",", "2", "]", ")", "\n", "\n", "veh_conf", "=", "pad_to_shape", "(", "veh_conf", ",", "[", "-", "1", ",", "self", ".", "num_modes", "]", ")", "\n", "ped_conf", "=", "pad_to_shape", "(", "ped_conf", ",", "[", "-", "1", ",", "self", ".", "num_modes", "]", ")", "\n", "cyc_conf", "=", "pad_to_shape", "(", "cyc_conf", ",", "[", "-", "1", ",", "self", ".", "num_modes", "]", ")", "\n", "\n", "pred", "=", "is_veh", "[", ":", ",", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "*", "veh_pred", "+", "is_ped", "[", ":", ",", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "*", "ped_pred", "+", "is_cyc", "[", ":", ",", ":", ",", "tf", ".", "newaxis", ",", "tf", ".", "newaxis", "]", "*", "cyc_pred", "\n", "\n", "conf", "=", "is_veh", "*", "veh_conf", "+", "is_ped", "*", "ped_conf", "+", "is_cyc", "*", "cyc_conf", "\n", "\n", "return", "(", "pred", ",", "conf", ",", "shared_output", ",", "embeddings", ")", "\n", "\n", "", "def", "compile", "(", "self", ",", "optimizer", ",", "multi_path_loss", ",", "multi_modal_loss", ",", "loss_tracker", ",", "multi_modal_loss_tracker", ",", "motion_metrics", ",", "metrics_config", ")", ":", "\n", "    ", "super", "(", ")", ".", "compile", "(", "optimizer", "=", "optimizer", ",", "loss", "=", "multi_path_loss", ",", "metrics", "=", "[", "motion_metrics", "]", ")", "\n", "self", ".", "multi_path_loss", "=", "multi_path_loss", "\n", "self", ".", "multi_modal_loss", "=", "multi_modal_loss", "\n", "self", ".", "multi_modal_loss_tracker", "=", "multi_modal_loss_tracker", "\n", "self", ".", "motion_metrics", "=", "motion_metrics", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.test_step": [[175, 205], ["tensorflow.cast", "tensorflow.stack", "model.JointMOEModel.", "model.JointMOEModel.multi_path_loss.call", "model.JointMOEModel.loss_tracker.update_state", "model.JointMOEModel.conf_loss_tracker.update_state", "model.JointMOEModel.multi_modal_loss.call", "model.JointMOEModel.multi_modal_loss_tracker.update_state", "utils.truncate_predictions", "model.JointMOEModel.motion_metrics.update_state", "model.JointMOEModel.loss_tracker.result", "model.JointMOEModel.multi_modal_loss_tracker.result", "model.JointMOEModel.conf_loss_tracker.result"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.call", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.result"], ["self", ".", "metrics_config", "=", "metrics_config", "\n", "self", ".", "loss_tracker", "=", "loss_tracker", "\n", "self", ".", "conf_loss_tracker", "=", "tf", ".", "keras", ".", "metrics", ".", "Mean", "(", "name", "=", "'conf_loss'", ")", "\n", "self", ".", "veh_centroids", "=", "tf", ".", "convert_to_tensor", "(", "self", ".", "multi_path_loss", ".", "veh_centroids", ")", "\n", "self", ".", "ped_centroids", "=", "tf", ".", "convert_to_tensor", "(", "self", ".", "multi_path_loss", ".", "ped_centroids", ")", "\n", "self", ".", "cyc_centroids", "=", "tf", ".", "convert_to_tensor", "(", "self", ".", "multi_path_loss", ".", "cyc_centroids", ")", "\n", "self", ".", "veh_head", "=", "Head", "(", "self", ".", "veh_centroids", ",", "num_knots", "=", "self", ".", "_num_knots", ")", "\n", "self", ".", "ped_head", "=", "Head", "(", "self", ".", "ped_centroids", ",", "num_knots", "=", "self", ".", "_num_knots", ")", "\n", "self", ".", "cyc_head", "=", "Head", "(", "self", ".", "cyc_centroids", ",", "num_knots", "=", "self", ".", "_num_knots", ")", "\n", "\n", "\n", "", "def", "train_step", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "with", "tf", ".", "GradientTape", "(", ")", "as", "tape", ":", "\n", "      ", "gt_trajectory", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'gt_future_states'", "]", ",", "axis", "=", "1", ")", "\n", "gt_is_valid", "=", "inputs", "[", "'gt_future_is_valid'", "]", "\n", "gt_is_valid", "=", "tf", ".", "squeeze", "(", "gt_is_valid", ",", "axis", "=", "[", "1", "]", ")", "# (B, 91)", "\n", "prediction_start", "=", "self", ".", "metrics_config", ".", "track_history_samples", "+", "1", "\n", "gt_targets", "=", "gt_trajectory", "[", ":", ",", "prediction_start", ":", ",", ":", "2", "]", "# (B, 80, 2)", "\n", "weights", "=", "tf", ".", "cast", "(", "gt_is_valid", "[", ":", ",", "prediction_start", ":", "]", ",", "tf", ".", "float32", ")", "# (B, 80,)", "\n", "\n", "images", "=", "inputs", "[", "'image'", "]", "\n", "x", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'x'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'y'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'yaw'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "past_states", "=", "inputs", "[", "'past_states'", "]", "\n", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n", "pred_trajectory", ",", "confidences", ",", "_", ",", "_", "=", "self", "(", "images", ",", "x", "=", "x", ",", "y", "=", "y", ",", "yaw", "=", "yaw", ",", "past_states", "=", "past_states", ",", "object_type", "=", "object_type", ",", "is_sdc", "=", "inputs", "[", "'is_sdc'", "]", ",", "training", "=", "True", ")", "\n", "if", "self", ".", "_loss_type", "==", "'multi_modal_loss'", ":", "\n", "        ", "loss", "=", "self", ".", "multi_modal_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "object_type", "=", "object_type", ")", "\n", "", "else", ":", "\n", "        ", "loss", ",", "conf_loss", "=", "self", ".", "multi_path_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "x", ",", "y", ",", "yaw", ",", "object_type", "=", "object_type", ")", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.predict_step": [[206, 229], ["tensorflow.stack", "model.JointMOEModel.", "utils.truncate_predictions"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions"], ["", "", "self", ".", "loss_tracker", ".", "update_state", "(", "loss", ")", "\n", "self", ".", "conf_loss_tracker", ".", "update_state", "(", "conf_loss", ")", "\n", "mm_loss", "=", "self", ".", "multi_modal_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "object_type", "=", "object_type", ")", "\n", "self", ".", "multi_modal_loss_tracker", ".", "update_state", "(", "mm_loss", ")", "\n", "grads", "=", "tape", ".", "gradient", "(", "loss", ",", "self", ".", "trainable_variables", ")", "\n", "self", ".", "optimizer", ".", "apply_gradients", "(", "zip", "(", "grads", ",", "self", ".", "trainable_variables", ")", ")", "\n", "\n", "object_type", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'object_type'", "]", ")", "\n", "pred_score", "=", "confidences", "\n", "return", "{", "\"loss\"", ":", "self", ".", "loss_tracker", ".", "result", "(", ")", ",", "\"mm_loss\"", ":", "self", ".", "multi_modal_loss_tracker", ".", "result", "(", ")", ",", "\"conf_loss\"", ":", "self", ".", "conf_loss_tracker", ".", "result", "(", ")", "}", "\n", "\n", "", "def", "test_step", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "images", "=", "inputs", "[", "'image'", "]", "\n", "gt_trajectory", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'gt_future_states'", "]", ",", "axis", "=", "1", ")", "\n", "gt_is_valid", "=", "inputs", "[", "'gt_future_is_valid'", "]", "\n", "gt_is_valid", "=", "tf", ".", "squeeze", "(", "gt_is_valid", ",", "axis", "=", "[", "1", "]", ")", "\n", "prediction_start", "=", "self", ".", "metrics_config", ".", "track_history_samples", "+", "1", "\n", "gt_targets", "=", "gt_trajectory", "[", ":", ",", "prediction_start", ":", ",", ":", "2", "]", "\n", "weights", "=", "tf", ".", "cast", "(", "gt_is_valid", "[", ":", ",", "prediction_start", ":", "]", ",", "tf", ".", "float32", ")", "\n", "x", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'x'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'y'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'yaw'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "past_states", "=", "inputs", "[", "'past_states'", "]", "\n", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.inspect_step": [[230, 260], ["tensorflow.stack", "model.JointMOEModel.predict_step", "utils.truncate_predictions", "x.numpy.numpy.numpy", "y.numpy.numpy.numpy", "yaw.numpy.numpy.numpy", "object_type.numpy.numpy.numpy", "images[].numpy", "prediction_trajectory.numpy.numpy.numpy", "range", "len", "utils.transform_matrix", "utils.draw_trajectory", "utils.draw_trajectory"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.predict_step", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_matrix", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.draw_trajectory", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.draw_trajectory"], ["\n", "pred_trajectory", ",", "confidences", ",", "_", ",", "_", "=", "self", "(", "images", ",", "x", "=", "x", ",", "y", "=", "y", ",", "yaw", "=", "yaw", ",", "past_states", "=", "past_states", ",", "object_type", "=", "object_type", ",", "is_sdc", "=", "inputs", "[", "'is_sdc'", "]", ",", "training", "=", "False", ")", "\n", "if", "self", ".", "_loss_type", "==", "'multi_modal_loss'", ":", "\n", "      ", "loss", "=", "self", ".", "multi_modal_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "object_type", "=", "object_type", ")", "\n", "", "else", ":", "\n", "      ", "loss", ",", "conf_loss", "=", "self", ".", "multi_path_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "x", ",", "y", ",", "yaw", ",", "object_type", "=", "object_type", ")", "\n", "", "self", ".", "loss_tracker", ".", "update_state", "(", "loss", ")", "\n", "self", ".", "conf_loss_tracker", ".", "update_state", "(", "conf_loss", ")", "\n", "mm_loss", "=", "self", ".", "multi_modal_loss", ".", "call", "(", "gt_targets", ",", "weights", ",", "pred_trajectory", ",", "confidences", ",", "object_type", "=", "object_type", ")", "\n", "self", ".", "multi_modal_loss_tracker", ".", "update_state", "(", "mm_loss", ")", "\n", "\n", "object_type", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'object_type'", "]", ")", "\n", "pred_score", "=", "confidences", "\n", "pred_trajectory", ",", "pred_score", ",", "_", "=", "truncate_predictions", "(", "pred_trajectory", ",", "pred_score", ")", "\n", "self", ".", "motion_metrics", ".", "update_state", "(", "\n", "pred_trajectory", ",", "\n", "pred_score", ",", "\n", "gt_trajectory", ",", "\n", "gt_is_valid", ",", "\n", "object_type", ")", "\n", "return", "{", "\"loss\"", ":", "self", ".", "loss_tracker", ".", "result", "(", ")", ",", "\"mm_loss\"", ":", "self", ".", "multi_modal_loss_tracker", ".", "result", "(", ")", ",", "\"conf_loss\"", ":", "self", ".", "conf_loss_tracker", ".", "result", "(", ")", "}", "\n", "\n", "", "def", "predict_step", "(", "self", ",", "inputs", ",", "truncate", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n      Parameters:\n        inputs: A dictionary mapping from parsed feature names to batched tensors\n      Returns: \n        trajectories: tensor of shape(B, 3, 16, 2)\n        confidences: tensor of shape (B, 3)\n    \"\"\"", "\n", "past_states", "=", "inputs", "[", "'past_states'", "]", "# (B, 10, 2)", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.model.JointMOEModel.metrics": [[261, 264], ["None"], "methods", ["None"], ["images", "=", "inputs", "[", "'image'", "]", "# (B, 224, 448, 3)", "\n", "x", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'x'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "y", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'y'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n", "yaw", "=", "tf", ".", "squeeze", "(", "inputs", "[", "'yaw'", "]", ",", "axis", "=", "[", "1", "]", ")", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__": [[15, 23], ["super().__init__", "metrics._default_metrics_config", "metrics.MotionMetrics"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.__init__", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics._default_metrics_config"], ["  ", "def", "__init__", "(", "self", ",", "models", ",", "num_modes", ",", "dropout", "=", "0.2", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "models", "=", "models", "\n", "for", "model", "in", "models", ":", "\n", "      ", "model", ".", "trainable", "=", "False", "\n", "", "self", ".", "num_modes", "=", "num_modes", "\n", "self", ".", "metrics_config", "=", "_default_metrics_config", "(", ")", "\n", "self", ".", "motion_metrics", "=", "MotionMetrics", "(", "self", ".", "metrics_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.predict_step": [[24, 40], ["len", "len", "model.predict_step", "utils.truncate_predictions"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.predict_step", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions"], ["", "def", "predict_step", "(", "self", ",", "batch", ",", "truncate", "=", "True", ")", ":", "\n", "    ", "final_predictions", "=", "0", "\n", "final_confidences", "=", "0", "\n", "for", "model", "in", "self", ".", "models", ":", "\n", "      ", "predictions", ",", "confidences", "=", "model", ".", "predict_step", "(", "batch", ",", "truncate", "=", "False", ")", "\n", "predictions", "=", "predictions", "[", ":", ",", ":", "self", ".", "num_modes", "]", "# (B, K, 80, 2)", "\n", "confidences", "=", "confidences", "[", ":", ",", ":", "self", ".", "num_modes", "]", "\n", "final_predictions", "+=", "predictions", "\n", "final_confidences", "+=", "confidences", "\n", "", "final_predictions", "/=", "len", "(", "self", ".", "models", ")", "\n", "final_confidences", "/=", "len", "(", "self", ".", "models", ")", "\n", "if", "truncate", ":", "\n", "      ", "interval", "=", "5", "\n", "final_predictions", "=", "final_predictions", "[", ":", ",", ":", ",", ":", ",", "(", "interval", "-", "1", ")", ":", ":", "interval", "]", "\n", "final_predictions", ",", "final_confidences", ",", "_", "=", "truncate_predictions", "(", "final_predictions", ",", "final_confidences", ",", "k", "=", "6", ")", "\n", "", "return", "final_predictions", ",", "final_confidences", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.prev_test_step": [[41, 55], ["ensemble.EnsembleModel.predict_step", "utils.truncate_predictions", "ensemble.EnsembleModel.motion_metrics.update_state"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.predict_step", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.metrics.MotionMetrics.update_state"], ["", "def", "prev_test_step", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "final_predictions", ",", "final_confidences", "=", "self", ".", "predict_step", "(", "inputs", ",", "truncate", "=", "False", ")", "\n", "final_predictions", ",", "final_confidences", ",", "_", "=", "truncate_predictions", "(", "final_predictions", ",", "final_confidences", ",", "k", "=", "6", ")", "\n", "\n", "gt_trajectory", "=", "inputs", "[", "'gt_future_states'", "]", "\n", "gt_is_valid", "=", "inputs", "[", "'gt_future_is_valid'", "]", "\n", "\n", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n", "self", ".", "motion_metrics", ".", "update_state", "(", "\n", "final_predictions", ",", "\n", "final_confidences", ",", "\n", "gt_trajectory", ",", "\n", "gt_is_valid", ",", "\n", "object_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.inspect_step": [[56, 86], ["tensorflow.stack", "ensemble.EnsembleModel.predict_step", "utils.truncate_predictions", "x.numpy.numpy.numpy", "y.numpy.numpy.numpy", "yaw.numpy.numpy.numpy", "object_type.numpy.numpy.numpy", "images[].numpy", "prediction_trajectory.numpy.numpy.numpy", "range", "len", "utils.transform_matrix", "utils.draw_trajectory", "utils.draw_trajectory"], "methods", ["home.repos.pwc.inspect_result.david9dragon9_air.interaction_prediction.ensemble.EnsembleModel.predict_step", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.truncate_predictions", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.transform_matrix", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.draw_trajectory", "home.repos.pwc.inspect_result.david9dragon9_air.None.utils.draw_trajectory"], ["", "def", "inspect_step", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "\"\"\"\n      Parameters:\n        inputs: A dictionary mapping from parsed feature names to batched tensors\n      Returns: \n        trajectories: tensor of shape(B, 3, 16, 2)\n        confidences: tensor of shape (B, 3)\n    \"\"\"", "\n", "images", "=", "tf", ".", "stack", "(", "[", "inputs", "[", "'image_0'", "]", ",", "inputs", "[", "'image_1'", "]", "]", ",", "axis", "=", "1", ")", "\n", "x", "=", "inputs", "[", "'x'", "]", "\n", "y", "=", "inputs", "[", "'y'", "]", "\n", "yaw", "=", "inputs", "[", "'yaw'", "]", "\n", "past_states", "=", "inputs", "[", "'past_states'", "]", "\n", "object_type", "=", "inputs", "[", "'object_type'", "]", "\n", "pred_trajectory", ",", "confidences", "=", "self", ".", "predict_step", "(", "inputs", ",", "truncate", "=", "False", ")", "# (B, 3, 80, 2)", "\n", "prediction_trajectory", ",", "confidences", ",", "_", "=", "truncate_predictions", "(", "pred_trajectory", ",", "confidences", ",", "k", "=", "1", ")", "# (B, 1, 2, 80, 2), (B, 1)", "\n", "x", "=", "x", ".", "numpy", "(", ")", "\n", "y", "=", "y", ".", "numpy", "(", ")", "\n", "yaw", "=", "yaw", ".", "numpy", "(", ")", "\n", "object_type", "=", "object_type", ".", "numpy", "(", ")", "\n", "\n", "inspection_image", "=", "images", "[", ":", ",", "0", "]", ".", "numpy", "(", ")", "\n", "prediction_trajectory", "=", "prediction_trajectory", ".", "numpy", "(", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "object_type", ")", ")", ":", "\n", "      ", "if", "object_type", "[", "j", ",", "0", "]", "!=", "3", "and", "object_type", "[", "j", ",", "1", "]", "!=", "3", ":", "\n", "        ", "continue", "\n", "", "world_to_image", "=", "transform_matrix", "(", "x", "[", "j", ",", "0", ",", "0", "]", ",", "y", "[", "j", ",", "0", ",", "0", "]", ",", "yaw", "[", "j", ",", "0", ",", "0", "]", ")", "\n", "draw_trajectory", "(", "inspection_image", "[", "j", "]", ",", "world_to_image", ",", "trajectory", "=", "prediction_trajectory", "[", "j", ",", ":", ",", "0", "]", ",", "show_image", "=", "False", ",", "colors", "=", "[", "(", "0", ",", "255", ",", "0", ")", "]", ")", "\n", "draw_trajectory", "(", "inspection_image", "[", "j", "]", ",", "world_to_image", ",", "trajectory", "=", "prediction_trajectory", "[", "j", ",", ":", ",", "1", "]", ",", "show_image", "=", "True", ",", "colors", "=", "[", "(", "255", ",", "0", ",", "0", ")", "]", ")", "\n", "", "return", "prediction_trajectory", ",", "confidences", "", "", "", ""]]}