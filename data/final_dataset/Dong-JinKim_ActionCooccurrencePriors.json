{"home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.argparse_utils.manage_required_args": [[4, 48], ["set", "set", "len", "print", "print", "print", "sorted", "len", "print", "print", "print", "getattr", "not_specified_args.append", "specified_args.append", "getattr", "print", "print", "sys.exit", "print", "option_string.ljust", "option_str.ljust"], "function", ["None"], ["def", "manage_required_args", "(", "\n", "args", ",", "\n", "parser", ",", "\n", "required_args", "=", "[", "]", ",", "\n", "optional_args", "=", "[", "]", ",", "\n", "exit_if_unspecified", "=", "True", ")", ":", "\n", "    ", "not_specified_args", "=", "[", "]", "\n", "specified_args", "=", "[", "]", "\n", "for", "required_arg", "in", "required_args", ":", "\n", "        ", "if", "getattr", "(", "args", ",", "required_arg", ")", "is", "None", ":", "\n", "            ", "not_specified_args", ".", "append", "(", "required_arg", ")", "\n", "", "else", ":", "\n", "            ", "specified_args", ".", "append", "(", "required_arg", ")", "\n", "\n", "", "", "all_specified_args", "=", "set", "(", "optional_args", ")", "|", "set", "(", "specified_args", ")", "\n", "if", "len", "(", "all_specified_args", ")", ">", "0", ":", "\n", "        ", "print", "(", "'-'", "*", "80", ")", "\n", "print", "(", "'The following aguments were specified:'", ")", "\n", "print", "(", "'-'", "*", "80", ")", "\n", "for", "specified_arg", "in", "sorted", "(", "all_specified_args", ")", ":", "\n", "            ", "value", "=", "getattr", "(", "args", ",", "specified_arg", ")", "\n", "option_str", "=", "f'--{specified_arg}'", "\n", "print", "(", "f'{option_str.ljust(50)}{value}'", ")", "\n", "\n", "", "", "if", "len", "(", "not_specified_args", ")", ">", "0", ":", "\n", "        ", "print", "(", "'-'", "*", "80", ")", "\n", "print", "(", "'Need to specify the following arguments:'", ")", "\n", "print", "(", "'-'", "*", "80", ")", "\n", "for", "required_arg", "in", "not_specified_args", ":", "\n", "            ", "option_string", "=", "f'--{required_arg}'", "\n", "help_str", "=", "parser", ".", "_option_string_actions", "[", "option_string", "]", ".", "help", "\n", "print_str", "=", "f'{option_string.ljust(50)}{help_str}'", "\n", "print", "(", "print_str", ")", "\n", "choices", "=", "parser", ".", "_option_string_actions", "[", "option_string", "]", ".", "choices", "\n", "if", "choices", "is", "not", "None", ":", "\n", "                ", "choices_str", "=", "' / '", ".", "join", "(", "choices", ")", "\n", "whitespace", "=", "' '", "*", "50", "\n", "choices_str", "=", "f'{whitespace}Choices:    {choices_str}'", "\n", "print", "(", "choices_str", ")", "\n", "\n", "", "", "if", "exit_if_unspecified", ":", "\n", "            ", "sys", ".", "exit", "(", ")", "\n", "\n", "", "", "return", "not_specified_args", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.argparse_utils.str_to_bool": [[50, 57], ["v.lower", "v.lower", "argparse.ArgumentTypeError"], "function", ["None"], ["", "def", "str_to_bool", "(", "v", ")", ":", "\n", "    ", "if", "v", ".", "lower", "(", ")", "in", "(", "'yes'", ",", "'true'", ",", "'t'", ",", "'y'", ",", "'1'", ")", ":", "\n", "        ", "return", "True", "\n", "", "elif", "v", ".", "lower", "(", ")", "in", "(", "'no'", ",", "'false'", ",", "'f'", ",", "'n'", ",", "'0'", ")", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "argparse", ".", "ArgumentTypeError", "(", "'Boolean value expected.'", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.constants.Constants.__init__": [[7, 9], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.constants.ExpConstants.__init__": [[12, 20], ["os.path.join", "os.path.join", "os.getcwd"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "exp_name", "=", "'default_exp'", ",", "\n", "out_base_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "'data_symlinks/hico_exp'", ")", ")", ":", "\n", "        ", "self", ".", "exp_name", "=", "exp_name", "\n", "self", ".", "out_base_dir", "=", "out_base_dir", "\n", "self", ".", "exp_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "out_base_dir", ",", "self", ".", "exp_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.constants.save_constants": [[22, 27], ["name_const_dict.items", "print", "os.path.join", "const.to_json"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.JsonSerializableClass.to_json"], ["", "", "def", "save_constants", "(", "name_const_dict", ",", "outdir", ")", ":", "\n", "    ", "for", "name", ",", "const", "in", "name_const_dict", ".", "items", "(", ")", ":", "\n", "        ", "print", "(", "f'Saving {name} constants ...'", ")", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "outdir", ",", "f'{name}_constants.json'", ")", "\n", "const", ".", "to_json", "(", "filename", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.add_bbox": [[5, 19], ["skimage.polygon_perimeter", "skimage.set_color", "skimage.polygon", "skimage.set_color"], "function", ["None"], ["def", "add_bbox", "(", "img", ",", "bbox", ",", "color", "=", "[", "0", ",", "0", ",", "0", "]", ",", "fill", "=", "False", ",", "alpha", "=", "1", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "bbox", "\n", "\n", "# Clockwise starting from top left", "\n", "r", "=", "[", "y1", ",", "y1", ",", "y2", ",", "y2", "]", "\n", "c", "=", "[", "x1", ",", "x2", ",", "x2", ",", "x1", "]", "\n", "\n", "if", "fill", ":", "\n", "        ", "coords", "=", "skdraw", ".", "polygon", "(", "r", ",", "c", ",", "shape", "=", "img", ".", "shape", "[", "0", ":", "2", "]", ")", "\n", "skdraw", ".", "set_color", "(", "img", ",", "coords", ",", "color", ",", "alpha", "=", "alpha", ")", "\n", "return", "\n", "\n", "", "peri_coords", "=", "skdraw", ".", "polygon_perimeter", "(", "r", ",", "c", ",", "shape", "=", "img", ".", "shape", "[", "0", ":", "2", "]", ")", "\n", "skdraw", ".", "set_color", "(", "img", ",", "peri_coords", ",", "color", ",", "alpha", "=", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area": [[21, 30], ["None"], "function", ["None"], ["", "def", "compute_area", "(", "bbox", ",", "invalid", "=", "None", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "bbox", "\n", "\n", "if", "(", "x2", "<=", "x1", ")", "or", "(", "y2", "<=", "y1", ")", ":", "\n", "        ", "area", "=", "invalid", "\n", "", "else", ":", "\n", "        ", "area", "=", "(", "x2", "-", "x1", "+", "1", ")", "*", "(", "y2", "-", "y1", "+", "1", ")", "\n", "\n", "", "return", "area", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou": [[32, 51], ["max", "max", "min", "min", "bbox_utils.compute_area", "bbox_utils.compute_area", "bbox_utils.compute_area"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area"], ["", "def", "compute_iou", "(", "bbox1", ",", "bbox2", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "bbox1", "\n", "x1_", ",", "y1_", ",", "x2_", ",", "y2_", "=", "bbox2", "\n", "\n", "x1_in", "=", "max", "(", "x1", ",", "x1_", ")", "\n", "y1_in", "=", "max", "(", "y1", ",", "y1_", ")", "\n", "x2_in", "=", "min", "(", "x2", ",", "x2_", ")", "\n", "y2_in", "=", "min", "(", "y2", ",", "y2_", ")", "\n", "\n", "intersection", "=", "compute_area", "(", "bbox", "=", "[", "x1_in", ",", "y1_in", ",", "x2_in", ",", "y2_in", "]", ",", "invalid", "=", "0.0", ")", "\n", "area1", "=", "compute_area", "(", "bbox1", ")", "\n", "area2", "=", "compute_area", "(", "bbox2", ")", "\n", "union", "=", "area1", "+", "area2", "-", "intersection", "\n", "iou", "=", "intersection", "/", "(", "union", "+", "1e-6", ")", "\n", "\n", "if", "verbose", ":", "\n", "        ", "return", "iou", ",", "intersection", ",", "union", "\n", "\n", "", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area_batch": [[53, 60], ["numpy.zeros", "numpy.logical_and", "range"], "function", ["None"], ["", "def", "compute_area_batch", "(", "bbox", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "[", "bbox", "[", ":", ",", "i", "]", "for", "i", "in", "range", "(", "4", ")", "]", "\n", "area", "=", "np", ".", "zeros", "(", "x1", ".", "shape", "[", "0", "]", ")", "\n", "valid_mask", "=", "np", ".", "logical_and", "(", "x2", ">", "x1", ",", "y2", ">", "y1", ")", "\n", "area_", "=", "(", "x2", "-", "x1", "+", "1", ")", "*", "(", "y2", "-", "y1", "+", "1", ")", "\n", "area", "[", "valid_mask", "]", "=", "area_", "[", "valid_mask", "]", "\n", "return", "area", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou_batch": [[62, 83], ["numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.stack", "bbox_utils.compute_area_batch", "bbox_utils.compute_area_batch", "bbox_utils.compute_area_batch", "range", "range"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area_batch", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area_batch", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area_batch"], ["", "def", "compute_iou_batch", "(", "bbox1", ",", "bbox2", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "[", "bbox1", "[", ":", ",", "i", "]", "for", "i", "in", "range", "(", "4", ")", "]", "\n", "x1_", ",", "y1_", ",", "x2_", ",", "y2_", "=", "[", "bbox2", "[", ":", ",", "i", "]", "for", "i", "in", "range", "(", "4", ")", "]", "\n", "\n", "x1_in", "=", "np", ".", "maximum", "(", "x1", ",", "x1_", ")", "\n", "y1_in", "=", "np", ".", "maximum", "(", "y1", ",", "y1_", ")", "\n", "x2_in", "=", "np", ".", "minimum", "(", "x2", ",", "x2_", ")", "\n", "y2_in", "=", "np", ".", "minimum", "(", "y2", ",", "y2_", ")", "\n", "\n", "intersection_bbox", "=", "np", ".", "stack", "(", "(", "x1_in", ",", "y1_in", ",", "x2_in", ",", "y2_in", ")", ",", "1", ")", "\n", "intersection", "=", "compute_area_batch", "(", "bbox", "=", "intersection_bbox", ")", "\n", "\n", "area1", "=", "compute_area_batch", "(", "bbox1", ")", "\n", "area2", "=", "compute_area_batch", "(", "bbox2", ")", "\n", "union", "=", "area1", "+", "area2", "-", "intersection", "\n", "iou", "=", "intersection", "/", "(", "union", "+", "1e-6", ")", "\n", "\n", "if", "verbose", ":", "\n", "        ", "return", "iou", ",", "intersection", ",", "union", "\n", "\n", "", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_bbox": [[85, 108], ["max", "max", "max", "max", "skimage.polygon", "skimage.set_color", "skimage.polygon_perimeter", "range", "min", "min", "min", "min", "numpy.copy"], "function", ["None"], ["", "def", "vis_bbox", "(", "bbox", ",", "img", ",", "color", "=", "(", "0", ",", "0", ",", "0", ")", ",", "modify", "=", "False", ")", ":", "\n", "    ", "im_h", ",", "im_w", "=", "img", ".", "shape", "[", "0", ":", "2", "]", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "bbox", "\n", "x1", "=", "max", "(", "0", ",", "min", "(", "x1", ",", "im_w", "-", "1", ")", ")", "\n", "x2", "=", "max", "(", "x1", ",", "min", "(", "x2", ",", "im_w", "-", "1", ")", ")", "\n", "y1", "=", "max", "(", "0", ",", "min", "(", "y1", ",", "im_h", "-", "1", ")", ")", "\n", "y2", "=", "max", "(", "y1", ",", "min", "(", "y2", ",", "im_h", "-", "1", ")", ")", "\n", "r", "=", "[", "y1", ",", "y1", ",", "y2", ",", "y2", "]", "\n", "c", "=", "[", "x1", ",", "x2", ",", "x2", ",", "x1", "]", "\n", "\n", "if", "modify", ":", "\n", "        ", "img_", "=", "img", "\n", "", "else", ":", "\n", "        ", "img_", "=", "np", ".", "copy", "(", "img", ")", "\n", "\n", "", "rr", ",", "cc", "=", "skdraw", ".", "polygon", "(", "r", ",", "c", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "skdraw", ".", "set_color", "(", "img_", ",", "(", "rr", ",", "cc", ")", ",", "color", ",", "alpha", "=", "0.2", ")", "\n", "\n", "rr", ",", "cc", "=", "skdraw", ".", "polygon_perimeter", "(", "r", ",", "c", ",", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "        ", "img_", "[", "rr", ",", "cc", ",", "k", "]", "=", "color", "[", "k", "]", "\n", "\n", "", "return", "img_", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_bboxes": [[110, 120], ["numpy.copy", "bbox_utils.vis_bbox"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_bbox"], ["", "def", "vis_bboxes", "(", "bboxes", ",", "img", ",", "color", "=", "(", "0", ",", "0", ",", "0", ")", ",", "modify", "=", "False", ")", ":", "\n", "    ", "if", "modify", ":", "\n", "        ", "img_", "=", "img", "\n", "", "else", ":", "\n", "        ", "img_", "=", "np", ".", "copy", "(", "img", ")", "\n", "\n", "", "for", "bbox", "in", "bboxes", ":", "\n", "        ", "img_", "=", "vis_bbox", "(", "bbox", ",", "img_", ",", "color", ",", "True", ")", "\n", "\n", "", "return", "img_", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.join_bboxes_by_line": [[122, 155], ["max", "max", "max", "max", "skimage.draw.line_aa", "range", "skimage.circle", "range", "skimage.circle", "range", "int", "min", "min", "min", "min", "numpy.copy"], "function", ["None"], ["", "def", "join_bboxes_by_line", "(", "bbox1", ",", "bbox2", ",", "img", ",", "color", "=", "(", "255", ",", "0", ",", "255", ")", ",", "modify", "=", "False", ")", ":", "\n", "    ", "im_h", ",", "im_w", "=", "img", ".", "shape", "[", "0", ":", "2", "]", "\n", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "bbox1", "\n", "x1_", ",", "y1_", ",", "x2_", ",", "y2_", "=", "bbox2", "\n", "\n", "c0", "=", "0.5", "*", "(", "x1", "+", "x2", ")", "\n", "r0", "=", "0.5", "*", "(", "y1", "+", "y2", ")", "\n", "c1", "=", "0.5", "*", "(", "x1_", "+", "x2_", ")", "\n", "r1", "=", "0.5", "*", "(", "y1_", "+", "y2_", ")", "\n", "r0", ",", "c0", ",", "r1", ",", "c1", "=", "[", "int", "(", "x", ")", "for", "x", "in", "[", "r0", ",", "c0", ",", "r1", ",", "c1", "]", "]", "\n", "c0", "=", "max", "(", "0", ",", "min", "(", "c0", ",", "im_w", "-", "1", ")", ")", "\n", "c1", "=", "max", "(", "0", ",", "min", "(", "c1", ",", "im_w", "-", "1", ")", ")", "\n", "r0", "=", "max", "(", "0", ",", "min", "(", "r0", ",", "im_h", "-", "1", ")", ")", "\n", "r1", "=", "max", "(", "0", ",", "min", "(", "r1", ",", "im_h", "-", "1", ")", ")", "\n", "rr", ",", "cc", ",", "val", "=", "skdraw", ".", "draw", ".", "line_aa", "(", "r0", ",", "c0", ",", "r1", ",", "c1", ")", "\n", "\n", "if", "modify", ":", "\n", "        ", "img_", "=", "img", "\n", "", "else", ":", "\n", "        ", "img_", "=", "np", ".", "copy", "(", "img", ")", "\n", "\n", "", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "        ", "img_", "[", "rr", ",", "cc", ",", "k", "]", "=", "val", "*", "color", "[", "k", "]", "\n", "\n", "", "rr", ",", "cc", "=", "skdraw", ".", "circle", "(", "r0", ",", "c0", ",", "4", ",", "img_", ".", "shape", "[", ":", "2", "]", ")", "\n", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "        ", "img_", "[", "rr", ",", "cc", ",", "k", "]", "=", "color", "[", "k", "]", "\n", "\n", "", "rr", ",", "cc", "=", "skdraw", ".", "circle", "(", "r1", ",", "c1", ",", "4", ",", "img_", ".", "shape", "[", ":", "2", "]", ")", "\n", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "        ", "img_", "[", "rr", ",", "cc", ",", "k", "]", "=", "color", "[", "k", "]", "\n", "\n", "", "return", "img_", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_sub_obj_bboxes": [[157, 172], ["bbox_utils.vis_bboxes", "bbox_utils.vis_bboxes", "zip", "bbox_utils.join_bboxes_by_line"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_bboxes", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_bboxes", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.join_bboxes_by_line"], ["", "def", "vis_sub_obj_bboxes", "(", "\n", "sub_bboxes", ",", "\n", "obj_bboxes", ",", "\n", "img", ",", "\n", "sub_color", "=", "(", "0", ",", "0", ",", "255", ")", ",", "\n", "obj_color", "=", "(", "255", ",", "0", ",", "0", ")", ",", "\n", "modify", "=", "False", ")", ":", "\n", "\n", "    ", "img_", "=", "vis_bboxes", "(", "sub_bboxes", ",", "img", ",", "sub_color", ",", "modify", ")", "\n", "img_", "=", "vis_bboxes", "(", "obj_bboxes", ",", "img_", ",", "obj_color", ",", "modify", "=", "True", ")", "\n", "\n", "for", "sub_bbox", ",", "obj_bbox", "in", "zip", "(", "sub_bboxes", ",", "obj_bboxes", ")", ":", "\n", "        ", "img_", "=", "join_bboxes_by_line", "(", "sub_bbox", ",", "obj_bbox", ",", "img_", ",", "modify", "=", "True", ")", "\n", "\n", "", "return", "img_", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_human_keypts": [[174, 230], ["range", "numpy.copy", "skimage.circle", "range", "max", "max", "skimage.draw.line_aa", "range", "min", "min", "int", "int"], "function", ["None"], ["", "def", "vis_human_keypts", "(", "\n", "img", ",", "\n", "keypts", ",", "\n", "radius", "=", "2", ",", "\n", "pt_color", "=", "(", "0", ",", "255", ",", "255", ")", ",", "\n", "line_color", "=", "(", "0", ",", "255", ",", "255", ")", ",", "\n", "modify", "=", "False", ")", ":", "\n", "    ", "LINKS", "=", "[", "\n", "(", "0", ",", "1", ")", ",", "\n", "(", "1", ",", "2", ")", ",", "\n", "(", "2", ",", "3", ")", ",", "\n", "(", "3", ",", "4", ")", ",", "\n", "(", "1", ",", "5", ")", ",", "\n", "(", "5", ",", "6", ")", ",", "\n", "(", "6", ",", "7", ")", ",", "\n", "(", "0", ",", "15", ")", ",", "\n", "(", "15", ",", "17", ")", ",", "\n", "(", "0", ",", "14", ")", ",", "\n", "(", "14", ",", "16", ")", ",", "\n", "(", "1", ",", "8", ")", ",", "\n", "(", "8", ",", "9", ")", ",", "\n", "(", "9", ",", "10", ")", ",", "\n", "(", "1", ",", "11", ")", ",", "\n", "(", "11", ",", "12", ")", ",", "\n", "(", "12", ",", "13", ")", ",", "\n", "(", "8", ",", "11", ")", "\n", "]", "\n", "\n", "if", "modify", ":", "\n", "        ", "img_", "=", "img", "\n", "", "else", ":", "\n", "        ", "img_", "=", "np", ".", "copy", "(", "img", ")", "\n", "\n", "", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "\n", "for", "i", ",", "j", "in", "LINKS", ":", "\n", "        ", "c0", ",", "r0", ",", "conf0", "=", "keypts", "[", "i", "]", "\n", "c1", ",", "r1", ",", "conf1", "=", "keypts", "[", "j", "]", "\n", "r0", ",", "r1", "=", "[", "max", "(", "0", ",", "min", "(", "h", "-", "1", ",", "int", "(", "v", ")", ")", ")", "for", "v", "in", "[", "r0", ",", "r1", "]", "]", "\n", "c0", ",", "c1", "=", "[", "max", "(", "0", ",", "min", "(", "w", "-", "1", ",", "int", "(", "v", ")", ")", ")", "for", "v", "in", "[", "c0", ",", "c1", "]", "]", "\n", "if", "conf0", ">", "0", "and", "conf1", ">", "0", ":", "\n", "            ", "rr", ",", "cc", ",", "val", "=", "skdraw", ".", "draw", ".", "line_aa", "(", "r0", ",", "c0", ",", "r1", ",", "c1", ")", "\n", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "                ", "img_", "[", "rr", ",", "cc", ",", "k", "]", "=", "val", "*", "line_color", "[", "k", "]", "\n", "\n", "", "", "", "num_keypts", "=", "keypts", ".", "shape", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "num_keypts", ")", ":", "\n", "        ", "c", ",", "r", ",", "conf", "=", "keypts", "[", "i", "]", "\n", "if", "conf", "==", "0.0", ":", "\n", "            ", "continue", "\n", "\n", "", "rr", ",", "cc", "=", "skdraw", ".", "circle", "(", "r", ",", "c", ",", "radius", ",", "img_", ".", "shape", "[", ":", "2", "]", ")", "\n", "for", "k", "in", "range", "(", "3", ")", ":", "\n", "            ", "img_", "[", "rr", ",", "cc", ",", "k", "]", "=", "pt_color", "[", "k", "]", "\n", "\n", "", "", "return", "img_", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.NumpyAwareJSONEncoder.default": [[92, 117], ["isinstance", "json.JSONEncoder.default", "isinstance", "obj.tolist", "int", "isinstance", "io.NumpyAwareJSONEncoder.default", "int", "isinstance", "range", "int", "isinstance", "float", "isinstance", "float", "isinstance", "float", "isinstance", "int", "isinstance", "int", "isinstance", "int"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.NumpyAwareJSONEncoder.default", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.NumpyAwareJSONEncoder.default"], ["    ", "def", "default", "(", "self", ",", "obj", ")", ":", "\n", "        ", "if", "isinstance", "(", "obj", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "if", "obj", ".", "ndim", "==", "1", ":", "\n", "                ", "return", "obj", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "                ", "return", "[", "self", ".", "default", "(", "obj", "[", "i", "]", ")", "for", "i", "in", "range", "(", "obj", ".", "shape", "[", "0", "]", ")", "]", "\n", "", "", "elif", "isinstance", "(", "obj", ",", "np", ".", "int64", ")", ":", "\n", "            ", "return", "int", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "np", ".", "int32", ")", ":", "\n", "            ", "return", "int", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "np", ".", "int16", ")", ":", "\n", "            ", "return", "int", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "np", ".", "float64", ")", ":", "\n", "            ", "return", "float", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "np", ".", "float32", ")", ":", "\n", "            ", "return", "float", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "np", ".", "float16", ")", ":", "\n", "            ", "return", "float", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "np", ".", "uint64", ")", ":", "\n", "            ", "return", "int", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "np", ".", "uint32", ")", ":", "\n", "            ", "return", "int", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "np", ".", "uint16", ")", ":", "\n", "            ", "return", "int", "(", "obj", ")", "\n", "", "return", "json", ".", "JSONEncoder", ".", "default", "(", "self", ",", "obj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.JsonSerializableClass.to_json": [[120, 131], ["json.dumps", "json.loads", "io.dump_json_object"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object"], ["    ", "def", "to_json", "(", "self", ",", "json_filename", "=", "None", ")", ":", "\n", "        ", "serialized_dict", "=", "json", ".", "dumps", "(", "\n", "self", ",", "\n", "default", "=", "lambda", "o", ":", "o", ".", "__dict__", ",", "\n", "sort_keys", "=", "True", ",", "\n", "indent", "=", "4", ")", "\n", "serialized_dict", "=", "json", ".", "loads", "(", "serialized_dict", ")", "\n", "if", "json_filename", "is", "not", "None", ":", "\n", "            ", "dump_json_object", "(", "serialized_dict", ",", "json_filename", ")", "\n", "\n", "", "return", "serialized_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.JsonSerializableClass.from_json": [[132, 137], ["type", "io.load_json_object", "load_json_object.items", "setattr"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "from_json", "(", "self", ",", "json_filename", ")", ":", "\n", "        ", "assert", "(", "type", "(", "json_filename", "is", "dict", ")", ")", ",", "'Use from dict instead'", "\n", "dict_to_restore", "=", "load_json_object", "(", "json_filename", ")", "\n", "for", "attr_name", ",", "attr_value", "in", "dict_to_restore", ".", "items", "(", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "attr_name", ",", "attr_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.JsonSerializableClass.from_dict": [[138, 141], ["dict_to_restore.items", "setattr"], "methods", ["None"], ["", "", "def", "from_dict", "(", "self", ",", "dict_to_restore", ")", ":", "\n", "        ", "for", "attr_name", ",", "attr_value", "in", "dict_to_restore", ".", "items", "(", ")", ":", "\n", "            ", "setattr", "(", "self", ",", "attr_name", ",", "attr_value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.WritableToFile.to_file": [[144, 147], ["open", "file.write", "io.WritableToFile.__str__"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.model.Model.__str__"], ["    ", "def", "to_file", "(", "self", ",", "filename", ")", ":", "\n", "        ", "with", "open", "(", "filename", ",", "'w'", ")", "as", "file", ":", "\n", "            ", "file", ".", "write", "(", "self", ".", "__str__", "(", ")", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_pickle_object": [[10, 17], ["io.read", "pickle.loads", "pickle.loads", "gzip.decompress"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.read"], ["def", "load_pickle_object", "(", "file_name", ",", "compress", "=", "True", ")", ":", "\n", "    ", "data", "=", "read", "(", "file_name", ")", "\n", "if", "compress", ":", "\n", "        ", "load_object", "=", "pickle", ".", "loads", "(", "gzip", ".", "decompress", "(", "data", ")", ")", "\n", "", "else", ":", "\n", "        ", "load_object", "=", "pickle", ".", "loads", "(", "data", ")", "\n", "", "return", "load_object", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_pickle_object": [[19, 25], ["pickle.dumps", "io.write", "io.write", "gzip.compress"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write"], ["", "def", "dump_pickle_object", "(", "dump_object", ",", "file_name", ",", "compress", "=", "True", ",", "compress_level", "=", "9", ")", ":", "\n", "    ", "data", "=", "pickle", ".", "dumps", "(", "dump_object", ")", "\n", "if", "compress", ":", "\n", "        ", "write", "(", "file_name", ",", "gzip", ".", "compress", "(", "data", ",", "compresslevel", "=", "compress_level", ")", ")", "\n", "", "else", ":", "\n", "        ", "write", "(", "file_name", ",", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object": [[27, 32], ["json.loads", "json.loads", "gzip.decompress().decode", "io.read", "gzip.decompress", "io.read"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.read", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.read"], ["", "", "def", "load_json_object", "(", "file_name", ",", "compress", "=", "False", ")", ":", "\n", "    ", "if", "compress", ":", "\n", "        ", "return", "json", ".", "loads", "(", "gzip", ".", "decompress", "(", "read", "(", "file_name", ")", ")", ".", "decode", "(", "'utf8'", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "json", ".", "loads", "(", "read", "(", "file_name", ",", "'r'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object": [[34, 41], ["json.dumps", "io.write", "io.write", "gzip.compress", "json.dumps.encode"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write"], ["", "", "def", "dump_json_object", "(", "dump_object", ",", "file_name", ",", "compress", "=", "False", ",", "indent", "=", "4", ")", ":", "\n", "    ", "data", "=", "json", ".", "dumps", "(", "\n", "dump_object", ",", "cls", "=", "NumpyAwareJSONEncoder", ",", "sort_keys", "=", "True", ",", "indent", "=", "indent", ")", "\n", "if", "compress", ":", "\n", "        ", "write", "(", "file_name", ",", "gzip", ".", "compress", "(", "data", ".", "encode", "(", "'utf8'", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "write", "(", "file_name", ",", "data", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dumps_json_object": [[43, 47], ["json.dumps"], "function", ["None"], ["", "", "def", "dumps_json_object", "(", "dump_object", ",", "indent", "=", "4", ")", ":", "\n", "    ", "data", "=", "json", ".", "dumps", "(", "\n", "dump_object", ",", "cls", "=", "NumpyAwareJSONEncoder", ",", "sort_keys", "=", "True", ",", "indent", "=", "indent", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_mat_object": [[49, 51], ["scipy.io.loadmat"], "function", ["None"], ["", "def", "load_mat_object", "(", "file_name", ")", ":", "\n", "    ", "return", "scipy", ".", "io", ".", "loadmat", "(", "file_name", "=", "file_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_yaml_object": [[53, 55], ["yaml.load", "io.read"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.read"], ["", "def", "load_yaml_object", "(", "file_name", ")", ":", "\n", "    ", "return", "yaml", ".", "load", "(", "read", "(", "file_name", ",", "'r'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.read": [[57, 60], ["open", "f.read"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.read"], ["", "def", "read", "(", "file_name", ",", "mode", "=", "'rb'", ")", ":", "\n", "    ", "with", "open", "(", "file_name", ",", "mode", ")", "as", "f", ":", "\n", "        ", "return", "f", ".", "read", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write": [[62, 65], ["open", "f.write"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write"], ["", "", "def", "write", "(", "file_name", ",", "data", ",", "mode", "=", "'wb'", ")", ":", "\n", "    ", "with", "open", "(", "file_name", ",", "mode", ")", "as", "f", ":", "\n", "        ", "f", ".", "write", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.serialize_object": [[67, 72], ["json.dumps", "pickle.dumps"], "function", ["None"], ["", "", "def", "serialize_object", "(", "in_obj", ",", "method", "=", "'json'", ")", ":", "\n", "    ", "if", "method", "==", "'json'", ":", "\n", "        ", "return", "json", ".", "dumps", "(", "in_obj", ")", "\n", "", "else", ":", "\n", "        ", "return", "pickle", ".", "dumps", "(", "in_obj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.deserialize_object": [[74, 79], ["json.loads", "pickle.loads"], "function", ["None"], ["", "", "def", "deserialize_object", "(", "obj_str", ",", "method", "=", "'json'", ")", ":", "\n", "    ", "if", "method", "==", "'json'", ":", "\n", "        ", "return", "json", ".", "loads", "(", "obj_str", ")", "\n", "", "else", ":", "\n", "        ", "return", "pickle", ".", "loads", "(", "obj_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists": [[81, 89], ["os.path.exists", "os.makedirs", "os.mkdir"], "function", ["None"], ["", "", "def", "mkdir_if_not_exists", "(", "dir_name", ",", "recursive", "=", "False", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "dir_name", ")", ":", "\n", "        ", "return", "\n", "\n", "", "if", "recursive", ":", "\n", "        ", "os", ".", "makedirs", "(", "dir_name", ")", "\n", "", "else", ":", "\n", "        ", "os", ".", "mkdir", "(", "dir_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.__init__": [[2, 8], ["open", "html_writer.HtmlWriter.html_file.write"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write"], ["    ", "def", "__init__", "(", "self", ",", "filename", ")", ":", "\n", "        ", "self", ".", "filename", "=", "filename", "\n", "self", ".", "html_file", "=", "open", "(", "self", ".", "filename", ",", "'w'", ")", "\n", "self", ".", "html_file", ".", "write", "(", "\n", "\"\"\"<!DOCTYPE html>\\n\"\"\"", "+", "\"\"\"<html>\\n<body>\\n<table border=\"1\" style=\"width:100%\"> \\n\"\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.add_element": [[9, 15], ["html_writer.HtmlWriter.html_file.write", "range", "html_writer.HtmlWriter.html_file.write", "len", "html_writer.HtmlWriter.html_file.write"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write"], ["", "def", "add_element", "(", "self", ",", "col_dict", ")", ":", "\n", "        ", "self", ".", "html_file", ".", "write", "(", "'    <tr>\\n'", ")", "\n", "for", "key", "in", "range", "(", "len", "(", "col_dict", ")", ")", ":", "\n", "            ", "self", ".", "html_file", ".", "write", "(", "\"\"\"    <td>{}</td>\\n\"\"\"", ".", "format", "(", "col_dict", "[", "key", "]", ")", ")", "\n", "\n", "", "self", ".", "html_file", ".", "write", "(", "'    </tr>\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.image_tag": [[16, 19], ["None"], "methods", ["None"], ["", "def", "image_tag", "(", "self", ",", "image_path", ",", "height", "=", "240", ",", "width", "=", "320", ")", ":", "\n", "        ", "return", "\"\"\"<img src=\"{}\" alt=\"{}\" height={} width={}>\"\"\"", ".", "format", "(", "\n", "image_path", ",", "image_path", ",", "height", ",", "width", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.video_tag": [[20, 33], ["None"], "methods", ["None"], ["", "def", "video_tag", "(", "self", ",", "video_path", ",", "height", "=", "240", ",", "width", "=", "320", ",", "autoplay", "=", "True", ")", ":", "\n", "        ", "if", "autoplay", ":", "\n", "            ", "autoplay_str", "=", "'autoplay loop'", "\n", "", "else", ":", "\n", "            ", "autoplay_str", "=", "''", "\n", "\n", "", "tag", "=", "\"\"\"<video width=\"{}\" height=\"{}\" controls {}>\"\"\"", ".", "format", "(", "width", ",", "height", ",", "autoplay_str", ")", "+", "\"\"\"    <source src=\"{}\" type=\"video/mp4\">\"\"\"", ".", "format", "(", "video_path", ")", "+", "\"\"\"    Your browser does not support the video tag.\"\"\"", "+", "\"\"\"</video>\"\"\"", "\n", "\n", "return", "tag", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.colored_text": [[34, 36], ["None"], "methods", ["None"], ["", "def", "colored_text", "(", "self", ",", "text", ",", "color", ")", ":", "\n", "        ", "return", "'<span style=\\\"color:'", "+", "color", "+", "'\\\">'", "+", "text", "+", "'</span>'", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.bg_colored_text": [[37, 39], ["None"], "methods", ["None"], ["", "def", "bg_colored_text", "(", "self", ",", "text", ",", "bg_color", ",", "text_color", "=", "'rgb(0,0,0)'", ")", ":", "\n", "        ", "return", "f'<span style=\\\"background-color:{bg_color}; color:{text_color}\\\">'", "+", "text", "+", "'</span>'", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.editable_content": [[40, 42], ["None"], "methods", ["None"], ["", "def", "editable_content", "(", "self", ",", "content", ")", ":", "\n", "        ", "return", "\"\"\"<div contenteditable=\"True\">{}</div>\"\"\"", ".", "format", "(", "content", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close": [[43, 46], ["html_writer.HtmlWriter.html_file.write", "html_writer.HtmlWriter.html_file.close"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.write", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "html_file", ".", "write", "(", "'</table>\\n</body>\\n</html>'", ")", "\n", "self", ".", "html_file", ".", "close", "(", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.Identity.__init__": [[8, 10], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.Identity.forward": [[11, 13], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.MLP.__init__": [[46, 70], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "pytorch_layers.Identity", "pytorch_layers.MLP.layers.append", "pytorch_layers.MLP.linear_with_bn_and_activations", "pytorch_layers.MLP.layers.append", "pytorch_layers.MLP.layers.append", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.MLP.linear_with_bn_and_activations"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_dim", ",", "\n", "layer_units", "=", "[", "]", ",", "\n", "activation", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "use_bn", "=", "True", ",", "\n", "drop_prob", "=", "0", ")", ":", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "in_units", "=", "in_dim", "\n", "for", "num_units", "in", "layer_units", ":", "\n", "            ", "out_units", "=", "num_units", "\n", "fc_layer", "=", "self", ".", "linear_with_bn_and_activations", "(", "\n", "in_units", ",", "\n", "out_units", ",", "\n", "activation", ",", "\n", "use_bn", ")", "\n", "self", ".", "layers", ".", "append", "(", "fc_layer", ")", "\n", "if", "drop_prob", ">", "0", ":", "\n", "                ", "self", ".", "layers", ".", "append", "(", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", ")", "\n", "", "in_units", "=", "out_units", "\n", "\n", "", "fc_layer", "=", "Identity", "(", ")", "\n", "self", ".", "layers", ".", "append", "(", "fc_layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.MLP.linear_with_bn_and_activations": [[71, 85], ["torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["None"], ["", "def", "linear_with_bn_and_activations", "(", "\n", "self", ",", "\n", "in_dim", ",", "\n", "out_dim", ",", "\n", "activation", ",", "\n", "use_bn", "=", "True", ")", ":", "\n", "        ", "linear", "=", "nn", ".", "Linear", "(", "in_dim", ",", "out_dim", ")", "\n", "if", "use_bn", ":", "\n", "            ", "bn", "=", "nn", ".", "BatchNorm1d", "(", "out_dim", ")", "\n", "block", "=", "nn", ".", "Sequential", "(", "linear", ",", "bn", ",", "activation", ")", "\n", "", "else", ":", "\n", "            ", "block", "=", "nn", ".", "Sequential", "(", "linear", ",", "activation", ")", "\n", "\n", "", "return", "block", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.MLP.forward": [[86, 91], ["layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.get_activation": [[15, 28], ["torch.ReLU", "torch.Tanh", "pytorch_layers.Identity", "torch.Sigmoid", "torch.LeakyReLU"], "function", ["None"], ["", "", "def", "get_activation", "(", "name", ")", ":", "\n", "    ", "if", "name", "==", "'ReLU'", ":", "\n", "        ", "return", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "", "elif", "name", "==", "'Tanh'", ":", "\n", "        ", "return", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "name", "==", "'Identity'", ":", "\n", "        ", "return", "Identity", "(", ")", "\n", "", "elif", "name", "==", "'Sigmoid'", ":", "\n", "        ", "return", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "name", "==", "'LeakyReLU'", ":", "\n", "        ", "return", "nn", ".", "LeakyReLU", "(", "0.2", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "assert", "(", "False", ")", ",", "'Not Implemented'", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.create_mlp": [[30, 44], ["pytorch_layers.get_activation", "pytorch_layers.MLP"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.get_activation"], ["", "", "def", "create_mlp", "(", "const", ")", ":", "\n", "    ", "activation", "=", "get_activation", "(", "const", "[", "'activation'", "]", ")", "\n", "\n", "if", "'drop_prob'", "in", "const", ":", "\n", "        ", "drop_prob", "=", "const", "[", "'drop_prob'", "]", "\n", "", "else", ":", "\n", "        ", "drop_prob", "=", "0", "\n", "\n", "", "mlp", "=", "MLP", "(", "\n", "in_dim", "=", "const", "[", "'in_dim'", "]", ",", "\n", "activation", "=", "activation", ",", "\n", "layer_units", "=", "const", "[", "'layer_units'", "]", ",", "\n", "drop_prob", "=", "drop_prob", ")", "\n", "return", "mlp", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.adjust_learning_rate": [[93, 98], ["None"], "function", ["None"], ["", "", "def", "adjust_learning_rate", "(", "optimizer", ",", "init_lr", ",", "epoch", ",", "decay_by", "=", "0.2", ",", "decay_every", "=", "10", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by 10 every 30 epochs\"\"\"", "\n", "lr", "=", "init_lr", "*", "(", "decay_by", "**", "(", "epoch", "//", "decay_every", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.model.Model.__init__": [[9, 11], ["utils.WritableToFile.__init__"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.model.Model.to_txt": [[12, 23], ["model.Model.__dict__.items", "print", "os.path.join", "model.Model.to_file", "print", "os.path.join", "model_instance.to_file"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.WritableToFile.to_file", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.WritableToFile.to_file"], ["", "def", "to_txt", "(", "self", ",", "dir_name", ",", "single_file", "=", "False", ")", ":", "\n", "        ", "if", "single_file", ":", "\n", "            ", "print", "(", "'Writing model.txt ...'", ")", "\n", "model_txt", "=", "os", ".", "path", ".", "join", "(", "dir_name", ",", "f'model.txt'", ")", "\n", "self", ".", "to_file", "(", "model_txt", ")", "\n", "return", "\n", "\n", "", "for", "model_name", ",", "model_instance", "in", "self", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "print", "(", "f'Writing {model_name}.txt ...'", ")", "\n", "model_txt", "=", "os", ".", "path", ".", "join", "(", "dir_name", ",", "f'{model_name}.txt'", ")", "\n", "model_instance", ".", "to_file", "(", "model_txt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.model.Model.__str__": [[24, 37], ["model.Model.__dict__.items", "model_instance.__str__", "isinstance"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.model.Model.__str__"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "serialized", "=", "''", "\n", "for", "model_name", ",", "model_instance", "in", "self", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "if", "not", "isinstance", "(", "model_instance", ",", "nn", ".", "Module", ")", ":", "\n", "                ", "continue", "\n", "", "serialized", "+=", "'-'", "*", "80", "\n", "serialized", "+=", "'\\n'", "\n", "serialized", "+=", "'\\n'", "\n", "serialized", "+=", "model_instance", ".", "__str__", "(", ")", "\n", "serialized", "+=", "'\\n'", "\n", "serialized", "+=", "'\\n'", "\n", "", "serialized", "+=", "'-'", "*", "80", "\n", "return", "serialized", "", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.losses.FocalLoss.__init__": [[6, 11], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gamma", "=", "2", ",", "eps", "=", "1e-7", ",", "size_average", "=", "True", ")", ":", "\n", "        ", "super", "(", "FocalLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "size_average", "=", "size_average", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.losses.FocalLoss.forward": [[12, 18], ["torch.log", "torch.log", "torch.log", "torch.log", "torch.mean", "torch.mean", "torch.mean", "torch.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "prob", ",", "labels", ")", ":", "\n", "        ", "p_t", "=", "prob", "*", "labels", "+", "(", "1", "-", "prob", ")", "*", "(", "1", "-", "labels", ")", "\n", "loss", "=", "-", "(", "(", "1.0", "-", "p_t", ")", "**", "self", ".", "gamma", ")", "*", "torch", ".", "log", "(", "p_t", "+", "self", ".", "eps", ")", "\n", "if", "self", ".", "size_average", ":", "\n", "            ", "loss", "=", "torch", ".", "mean", "(", "loss", ")", "\n", "", "return", "loss", "", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.exp.run_template.exp_do_something": [[3, 5], ["print"], "function", ["None"], ["def", "exp_do_something", "(", ")", ":", "\n", "    ", "print", "(", "'Just ran something'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.exp.experimenter.list_exps": [[13, 24], ["parser.parse_args", "print", "print", "print", "print", "module_globals.keys"], "function", ["None"], ["def", "list_exps", "(", "module_globals", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "args", ".", "exp", ":", "\n", "        ", "module_globals", "[", "args", ".", "exp", "]", "(", ")", "\n", "", "else", ":", "\n", "        ", "list_of_exps", "=", "[", "name", "for", "name", "in", "module_globals", ".", "keys", "(", ")", "if", "'exp_'", "in", "name", "]", "\n", "print", "(", "'-'", "*", "80", ")", "\n", "print", "(", "'Select one of the following exp to run using flag --exp:'", ")", "\n", "print", "(", "'-'", "*", "80", ")", "\n", "for", "exp_name", "in", "list_of_exps", ":", "\n", "            ", "print", "(", "'  '", "+", "exp_name", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.compute_map.match_hoi": [[47, 61], ["enumerate", "utils.bbox_utils.compute_iou", "utils.bbox_utils.compute_iou"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou"], ["def", "match_hoi", "(", "pred_det", ",", "gt_dets", ")", ":", "\n", "    ", "is_match", "=", "False", "\n", "remaining_gt_dets", "=", "[", "gt_det", "for", "gt_det", "in", "gt_dets", "]", "\n", "for", "i", ",", "gt_det", "in", "enumerate", "(", "gt_dets", ")", ":", "\n", "        ", "human_iou", "=", "compute_iou", "(", "pred_det", "[", "'human_box'", "]", ",", "gt_det", "[", "'human_box'", "]", ")", "\n", "if", "human_iou", ">", "0.5", ":", "\n", "            ", "object_iou", "=", "compute_iou", "(", "pred_det", "[", "'object_box'", "]", ",", "gt_det", "[", "'object_box'", "]", ")", "\n", "if", "object_iou", ">", "0.5", ":", "\n", "                ", "is_match", "=", "True", "\n", "del", "remaining_gt_dets", "[", "i", "]", "\n", "break", "\n", "#remaining_gt_dets.append(gt_det)", "\n", "\n", "", "", "", "return", "is_match", ",", "remaining_gt_dets", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.compute_map.compute_ap": [[63, 77], ["numpy.any", "numpy.arange", "numpy.isnan", "numpy.max"], "function", ["None"], ["", "def", "compute_ap", "(", "precision", ",", "recall", ")", ":", "\n", "    ", "if", "np", ".", "any", "(", "np", ".", "isnan", "(", "recall", ")", ")", ":", "\n", "        ", "return", "np", ".", "nan", "\n", "\n", "", "ap", "=", "0", "\n", "for", "t", "in", "np", ".", "arange", "(", "0", ",", "1.1", ",", "0.1", ")", ":", "# 0, 0.1, 0.2, ..., 1.0", "\n", "        ", "selected_p", "=", "precision", "[", "recall", ">=", "t", "]", "\n", "if", "selected_p", ".", "size", "==", "0", ":", "\n", "            ", "p", "=", "0", "\n", "", "else", ":", "\n", "            ", "p", "=", "np", ".", "max", "(", "selected_p", ")", "\n", "", "ap", "+=", "p", "/", "11.", "\n", "\n", "", "return", "ap", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.compute_map.compute_pr": [[79, 91], ["numpy.array", "numpy.cumsum", "numpy.cumsum", "sorted", "zip"], "function", ["None"], ["", "def", "compute_pr", "(", "y_true", ",", "y_score", ",", "npos", ")", ":", "\n", "    ", "sorted_y_true", "=", "[", "y", "for", "y", ",", "_", "in", "sorted", "(", "zip", "(", "y_true", ",", "y_score", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "]", "\n", "tp", "=", "np", ".", "array", "(", "sorted_y_true", ")", "\n", "fp", "=", "~", "tp", "\n", "tp", "=", "np", ".", "cumsum", "(", "tp", ")", "\n", "fp", "=", "np", ".", "cumsum", "(", "fp", ")", "\n", "if", "npos", "==", "0", ":", "\n", "        ", "recall", "=", "np", ".", "nan", "*", "tp", "\n", "", "else", ":", "\n", "        ", "recall", "=", "tp", "/", "npos", "\n", "", "precision", "=", "tp", "/", "(", "tp", "+", "fp", ")", "\n", "return", "precision", ",", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.compute_map.compute_normalized_pr": [[93, 108], ["numpy.array", "numpy.cumsum", "numpy.cumsum", "numpy.sum", "sorted", "zip"], "function", ["None"], ["", "def", "compute_normalized_pr", "(", "y_true", ",", "y_score", ",", "npos", ",", "N", "=", "196.45", ")", ":", "\n", "    ", "sorted_y_true", "=", "[", "y", "for", "y", ",", "_", "in", "\n", "sorted", "(", "zip", "(", "y_true", ",", "y_score", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "]", "\n", "tp", "=", "np", ".", "array", "(", "sorted_y_true", ")", "\n", "fp", "=", "~", "tp", "\n", "tp", "=", "np", ".", "cumsum", "(", "tp", ")", "\n", "fp", "=", "np", ".", "cumsum", "(", "fp", ")", "\n", "if", "npos", "==", "0", ":", "\n", "        ", "recall", "=", "np", ".", "nan", "*", "tp", "\n", "", "else", ":", "\n", "        ", "recall", "=", "tp", "/", "npos", "\n", "", "precision", "=", "recall", "*", "N", "/", "(", "recall", "*", "N", "+", "fp", ")", "\n", "nap", "=", "np", ".", "sum", "(", "precision", "[", "sorted_y_true", "]", ")", "/", "(", "npos", "+", "1e-6", ")", "\n", "\n", "return", "precision", ",", "recall", ",", "nap", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.compute_map.eval_hoi": [[110, 179], ["print", "h5py.File", "compute_map.compute_pr", "compute_map.compute_ap", "print", "matplotlib.figure", "matplotlib.step", "matplotlib.fill_between", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylim", "matplotlib.xlim", "matplotlib.title", "matplotlib.savefig", "matplotlib.close", "numpy.save", "len", "os.path.join", "os.path.join", "compute_map.match_hoi", "y_true.append", "y_score.append", "det_id.append", "sorted", "int", "zip", "range", "hoi_dets[].tolist"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.compute_map.compute_pr", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.compute_map.compute_ap", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.label_hoi_candidates.match_hoi"], ["", "def", "eval_hoi", "(", "hoi_id", ",", "global_ids", ",", "gt_dets", ",", "pred_dets_hdf5", ",", "out_dir", ")", ":", "\n", "    ", "print", "(", "f'Evaluating hoi_id: {hoi_id} ...'", ")", "\n", "pred_dets", "=", "h5py", ".", "File", "(", "pred_dets_hdf5", ",", "'r'", ")", "\n", "y_true", "=", "[", "]", "\n", "y_score", "=", "[", "]", "\n", "det_id", "=", "[", "]", "\n", "npos", "=", "0", "\n", "for", "global_id", "in", "global_ids", ":", "\n", "        ", "if", "hoi_id", "in", "gt_dets", "[", "global_id", "]", ":", "\n", "            ", "candidate_gt_dets", "=", "gt_dets", "[", "global_id", "]", "[", "hoi_id", "]", "\n", "", "else", ":", "\n", "            ", "candidate_gt_dets", "=", "[", "]", "\n", "", "npos", "+=", "len", "(", "candidate_gt_dets", ")", "\n", "\n", "start_id", ",", "end_id", "=", "pred_dets", "[", "global_id", "]", "[", "'start_end_ids'", "]", "[", "int", "(", "hoi_id", ")", "-", "1", "]", "\n", "hoi_dets", "=", "pred_dets", "[", "global_id", "]", "[", "'human_obj_boxes_scores'", "]", "[", "start_id", ":", "end_id", "]", "\n", "\n", "num_dets", "=", "hoi_dets", ".", "shape", "[", "0", "]", "\n", "sorted_idx", "=", "[", "idx", "for", "idx", ",", "_", "in", "sorted", "(", "\n", "zip", "(", "range", "(", "num_dets", ")", ",", "hoi_dets", "[", ":", ",", "8", "]", ".", "tolist", "(", ")", ")", ",", "\n", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "\n", "reverse", "=", "True", ")", "]", "\n", "for", "i", "in", "sorted_idx", ":", "\n", "            ", "pred_det", "=", "{", "\n", "'human_box'", ":", "hoi_dets", "[", "i", ",", ":", "4", "]", ",", "\n", "'object_box'", ":", "hoi_dets", "[", "i", ",", "4", ":", "8", "]", ",", "\n", "'score'", ":", "hoi_dets", "[", "i", ",", "8", "]", "\n", "}", "\n", "is_match", ",", "candidate_gt_dets", "=", "match_hoi", "(", "pred_det", ",", "candidate_gt_dets", ")", "\n", "y_true", ".", "append", "(", "is_match", ")", "\n", "y_score", ".", "append", "(", "pred_det", "[", "'score'", "]", ")", "\n", "det_id", ".", "append", "(", "(", "global_id", ",", "i", ")", ")", "\n", "\n", "# Compute PReval_hoi", "\n", "", "", "precision", ",", "recall", "=", "compute_pr", "(", "y_true", ",", "y_score", ",", "npos", ")", "\n", "#nprecision,nrecall,nap = compute_normalized_pr(y_true,y_score,npos)", "\n", "\n", "# Compute AP", "\n", "ap", "=", "compute_ap", "(", "precision", ",", "recall", ")", "\n", "print", "(", "f'AP:{ap}'", ")", "\n", "\n", "# Plot PR curve", "\n", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "step", "(", "recall", ",", "precision", ",", "color", "=", "'b'", ",", "alpha", "=", "0.2", ",", "where", "=", "'post'", ")", "\n", "plt", ".", "fill_between", "(", "recall", ",", "precision", ",", "step", "=", "'post'", ",", "alpha", "=", "0.2", ",", "color", "=", "'b'", ")", "\n", "plt", ".", "xlabel", "(", "'Recall'", ")", "\n", "plt", ".", "ylabel", "(", "'Precision'", ")", "\n", "plt", ".", "ylim", "(", "[", "0.0", ",", "1.05", "]", ")", "\n", "plt", ".", "xlim", "(", "[", "0.0", ",", "1.0", "]", ")", "\n", "plt", ".", "title", "(", "'Precision-Recall curve: AP={0:0.4f}'", ".", "format", "(", "ap", ")", ")", "\n", "plt", ".", "savefig", "(", "\n", "os", ".", "path", ".", "join", "(", "out_dir", ",", "f'{hoi_id}_pr.png'", ")", ",", "\n", "bbox_inches", "=", "'tight'", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n", "# Save AP data", "\n", "ap_data", "=", "{", "\n", "'y_true'", ":", "y_true", ",", "\n", "'y_score'", ":", "y_score", ",", "\n", "'det_id'", ":", "det_id", ",", "\n", "'npos'", ":", "npos", ",", "\n", "'ap'", ":", "ap", ",", "\n", "}", "\n", "np", ".", "save", "(", "\n", "os", ".", "path", ".", "join", "(", "out_dir", ",", "f'{hoi_id}_ap_data.npy'", ")", ",", "\n", "ap_data", ")", "\n", "\n", "return", "(", "ap", ",", "hoi_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.compute_map.load_gt_dets": [[181, 207], ["print", "os.path.join", "utils.load_json_object", "[].append"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "load_gt_dets", "(", "proc_dir", ",", "global_ids_set", ")", ":", "\n", "# Load anno_list", "\n", "    ", "print", "(", "'Loading anno_list.json ...'", ")", "\n", "anno_list_json", "=", "os", ".", "path", ".", "join", "(", "proc_dir", ",", "'anno_list.json'", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "anno_list_json", ")", "\n", "\n", "gt_dets", "=", "{", "}", "\n", "for", "anno", "in", "anno_list", ":", "\n", "        ", "if", "anno", "[", "'global_id'", "]", "not", "in", "global_ids_set", ":", "\n", "            ", "continue", "\n", "\n", "", "global_id", "=", "anno", "[", "'global_id'", "]", "\n", "gt_dets", "[", "global_id", "]", "=", "{", "}", "\n", "for", "hoi", "in", "anno", "[", "'hois'", "]", ":", "\n", "            ", "hoi_id", "=", "hoi", "[", "'id'", "]", "\n", "gt_dets", "[", "global_id", "]", "[", "hoi_id", "]", "=", "[", "]", "\n", "for", "human_box_num", ",", "object_box_num", "in", "hoi", "[", "'connections'", "]", ":", "\n", "                ", "human_box", "=", "hoi", "[", "'human_bboxes'", "]", "[", "human_box_num", "]", "\n", "object_box", "=", "hoi", "[", "'object_bboxes'", "]", "[", "object_box_num", "]", "\n", "det", "=", "{", "\n", "'human_box'", ":", "human_box", ",", "\n", "'object_box'", ":", "object_box", ",", "\n", "}", "\n", "gt_dets", "[", "global_id", "]", "[", "hoi_id", "]", ".", "append", "(", "det", ")", "\n", "\n", "", "", "", "return", "gt_dets", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.compute_map.main": [[209, 266], ["parser.parse_args", "print", "utils.mkdir_if_not_exists", "os.path.join", "utils.load_json_object", "os.path.join", "utils.load_json_object", "set", "print", "compute_map.load_gt_dets", "print", "multiprocessing.Pool", "print", "multiprocessing.Pool.starmap", "multiprocessing.Pool.close", "multiprocessing.Pool.join", "os.path.join", "utils.dump_json_object", "print", "eval_inputs.append", "len", "numpy.isnan"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.label_hoi_candidates.load_gt_dets", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "print", "(", "'Creating output dir ...'", ")", "\n", "io", ".", "mkdir_if_not_exists", "(", "args", ".", "out_dir", ",", "recursive", "=", "True", ")", "\n", "\n", "# Load hoi_list", "\n", "hoi_list_json", "=", "os", ".", "path", ".", "join", "(", "args", ".", "proc_dir", ",", "'hoi_list.json'", ")", "\n", "hoi_list", "=", "io", ".", "load_json_object", "(", "hoi_list_json", ")", "\n", "\n", "# Load subset ids to eval on", "\n", "split_ids_json", "=", "os", ".", "path", ".", "join", "(", "args", ".", "proc_dir", ",", "'split_ids.json'", ")", "\n", "split_ids", "=", "io", ".", "load_json_object", "(", "split_ids_json", ")", "\n", "global_ids", "=", "split_ids", "[", "args", ".", "subset", "]", "\n", "global_ids_set", "=", "set", "(", "global_ids", ")", "\n", "\n", "# Create gt_dets", "\n", "print", "(", "'Creating GT dets ...'", ")", "\n", "gt_dets", "=", "load_gt_dets", "(", "args", ".", "proc_dir", ",", "global_ids_set", ")", "\n", "\n", "eval_inputs", "=", "[", "]", "\n", "for", "hoi", "in", "hoi_list", ":", "\n", "        ", "eval_inputs", ".", "append", "(", "\n", "(", "hoi", "[", "'id'", "]", ",", "global_ids", ",", "gt_dets", ",", "args", ".", "pred_hoi_dets_hdf5", ",", "args", ".", "out_dir", ")", ")", "\n", "\n", "", "print", "(", "f'Starting a pool of {args.num_processes} workers ...'", ")", "\n", "p", "=", "Pool", "(", "args", ".", "num_processes", ")", "\n", "\n", "print", "(", "f'Begin mAP computation ...'", ")", "\n", "output", "=", "p", ".", "starmap", "(", "eval_hoi", ",", "eval_inputs", ")", "\n", "#output = eval_hoi(hoi['id'],global_ids,gt_dets,args.pred_hoi_dets_hdf5,args.out_dir)", "\n", "\n", "p", ".", "close", "(", ")", "\n", "p", ".", "join", "(", ")", "\n", "\n", "mAP", "=", "{", "\n", "'AP'", ":", "{", "}", ",", "\n", "'mAP'", ":", "0", ",", "\n", "'invalid'", ":", "0", ",", "\n", "}", "\n", "map_", "=", "0", "\n", "count", "=", "0", "\n", "for", "ap", ",", "hoi_id", "in", "output", ":", "\n", "        ", "mAP", "[", "'AP'", "]", "[", "hoi_id", "]", "=", "ap", "\n", "if", "not", "np", ".", "isnan", "(", "ap", ")", ":", "\n", "            ", "count", "+=", "1", "\n", "map_", "+=", "ap", "\n", "\n", "", "", "mAP", "[", "'mAP'", "]", "=", "map_", "/", "count", "\n", "mAP", "[", "'invalid'", "]", "=", "len", "(", "output", ")", "-", "count", "\n", "\n", "mAP_json", "=", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "out_dir", ",", "\n", "'mAP.json'", ")", "\n", "io", ".", "dump_json_object", "(", "mAP", ",", "mAP_json", ")", "\n", "\n", "print", "(", "f'APs have been saved to {args.out_dir}'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.sample_complexity_analysis.compute_mAP": [[15, 17], ["sum", "len"], "function", ["None"], ["def", "compute_mAP", "(", "APs", ",", "hoi_ids", ")", ":", "\n", "    ", "return", "sum", "(", "[", "APs", "[", "hoi_id", "]", "for", "hoi_id", "in", "hoi_ids", "]", ")", "/", "len", "(", "hoi_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.sample_complexity_analysis.main": [[18, 66], ["parser.parse_args", "data.hico.hico_constants.HicoConstants", "utils.load_json_object", "os.path.join", "io.load_json_object.items", "io.load_json_object.keys", "os.path.join", "utils.dump_json_object", "sorted", "print", "print", "print", "utils.load_json_object", "sample_complexity_analysis.compute_mAP", "sample_complexity_analysis.compute_mAP", "sample_complexity_analysis.compute_mAP", "str", "str", "APs.keys", "int", "str", "enumerate", "round", "bin_map.keys", "int"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.sample_complexity_analysis.compute_mAP", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.sample_complexity_analysis.compute_mAP", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico_eval.sample_complexity_analysis.compute_mAP"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "data_const", "=", "HicoConstants", "(", ")", "\n", "bin_to_hoi_ids", "=", "io", ".", "load_json_object", "(", "data_const", ".", "bin_to_hoi_ids_json", ")", "\n", "\n", "mAP_json", "=", "os", ".", "path", ".", "join", "(", "args", ".", "out_dir", ",", "'mAP.json'", ")", "\n", "APs", "=", "io", ".", "load_json_object", "(", "mAP_json", ")", "[", "'AP'", "]", "\n", "bin_map", "=", "{", "}", "\n", "bin_count", "=", "{", "}", "\n", "for", "bin_id", ",", "hoi_ids", "in", "bin_to_hoi_ids", ".", "items", "(", ")", ":", "\n", "        ", "bin_map", "[", "bin_id", "]", "=", "compute_mAP", "(", "APs", ",", "hoi_ids", ")", "\n", "\n", "", "non_rare_hoi_ids", "=", "[", "]", "\n", "for", "ul", "in", "bin_to_hoi_ids", ".", "keys", "(", ")", ":", "\n", "        ", "if", "ul", "==", "'10'", ":", "\n", "            ", "continue", "\n", "", "non_rare_hoi_ids", "+=", "bin_to_hoi_ids", "[", "ul", "]", "\n", "\n", "", "sample_complexity_analysis", "=", "{", "\n", "'bin'", ":", "bin_map", ",", "\n", "'full'", ":", "compute_mAP", "(", "APs", ",", "APs", ".", "keys", "(", ")", ")", ",", "\n", "'rare'", ":", "bin_map", "[", "'10'", "]", ",", "\n", "'non_rare'", ":", "compute_mAP", "(", "APs", ",", "non_rare_hoi_ids", ")", "\n", "}", "\n", "\n", "sample_complexity_analysis_json", "=", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "out_dir", ",", "\n", "f'sample_complexity_analysis.json'", ")", "\n", "io", ".", "dump_json_object", "(", "\n", "sample_complexity_analysis", ",", "\n", "sample_complexity_analysis_json", ")", "\n", "\n", "\n", "bin_names", "=", "sorted", "(", "[", "int", "(", "ul", ")", "for", "ul", "in", "bin_map", ".", "keys", "(", ")", "]", ")", "\n", "bin_names", "=", "[", "str", "(", "ul", ")", "for", "ul", "in", "bin_names", "]", "\n", "bin_headers", "=", "[", "'0'", "]", "+", "bin_names", "\n", "bin_headers", "=", "[", "bin_headers", "[", "i", "]", "+", "'-'", "+", "str", "(", "int", "(", "ul", ")", "-", "1", ")", "for", "i", ",", "ul", "in", "enumerate", "(", "bin_headers", "[", "1", ":", "]", ")", "]", "\n", "headers", "=", "[", "'Full'", ",", "'Rare'", ",", "'Non-Rare'", "]", "+", "bin_headers", "\n", "\n", "sca", "=", "sample_complexity_analysis", "\n", "values", "=", "[", "sca", "[", "'full'", "]", ",", "sca", "[", "'rare'", "]", ",", "sca", "[", "'non_rare'", "]", "]", "+", "[", "bin_map", "[", "name", "]", "for", "name", "in", "bin_names", "]", "\n", "values", "=", "[", "str", "(", "round", "(", "v", "*", "100", ",", "2", ")", ")", "for", "v", "in", "values", "]", "\n", "\n", "print", "(", "'Space delimited values that can be copied to spreadsheet and split by space'", ")", "\n", "print", "(", "' '", ".", "join", "(", "headers", ")", ")", "\n", "print", "(", "' '", ".", "join", "(", "values", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.eval.eval_model": [[23, 102], ["print", "os.path.join", "h5py.File", "model.hoi_classifier.eval", "torch.utils.data.sampler.SequentialSampler", "torch.load", "torch.load", "torch.load", "utils.load_json_object", "print", "tqdm.tqdm", "h5py.File.close", "torch.load", "torch.load", "torch.load", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.load", "torch.load", "torch.load", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.eye().byte().cuda", "torch.eye().byte().cuda", "torch.eye().byte().cuda", "torch.cuda.FloatTensor.masked_fill_", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "model.hoi_classifier", "hoi_prob.data.cpu().numpy.data.cpu().numpy", "numpy.concatenate", "h5py.File.create_group", "pred_hois[].create_dataset", "pred_hois[].create_dataset", "torch.load.sum", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.autograd.Variable", "torch.eye().byte", "torch.eye().byte", "torch.eye().byte", "torch.stack", "torch.stack", "torch.stack", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "hoi_prob.data.cpu().numpy.data.cpu", "numpy.expand_dims", "torch.load.", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "numpy.arange", "numpy.array", "torch.eye", "torch.eye", "torch.eye", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "ww.sum", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close"], ["def", "eval_model", "(", "model", ",", "dataset", ",", "exp_const", ")", ":", "\n", "    ", "print", "(", "'Creating hdf5 file for predicted hoi dets ...'", ")", "\n", "pred_hoi_dets_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'pred_hoi_dets_{dataset.const.subset}_{model.const.model_num}.hdf5'", ")", "\n", "pred_hois", "=", "h5py", ".", "File", "(", "pred_hoi_dets_hdf5", ",", "'w'", ")", "\n", "model", ".", "hoi_classifier", ".", "eval", "(", ")", "\n", "sampler", "=", "SequentialSampler", "(", "dataset", ")", "\n", "\n", "Word2Vec", "=", "torch", ".", "load", "(", "'Word2Vec_Glove.pkl'", ")", "\n", "word2index", "=", "io", ".", "load_json_object", "(", "'word2vec_vocab_Glove.json'", ")", "\n", "print", "(", "'Word2Vec model Loaded!'", ")", "\n", "\n", "if", "USE_refine", ":", "\n", "        ", "co_occurrence", "=", "torch", ".", "load", "(", "'co-occurrence_pos.pkl'", ")", "\n", "co_occurrence", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "co_occurrence", ")", "\n", "\n", "co_occurrence_neg", "=", "torch", ".", "load", "(", "'co-occurrence_neg.pkl'", ")", "\n", "co_occurrence_neg", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "co_occurrence_neg", ")", "\n", "\n", "mask", "=", "torch", ".", "eye", "(", "600", ",", "600", ")", ".", "byte", "(", ")", ".", "cuda", "(", ")", "# keep the diagonal to be 1.0", "\n", "co_occurrence", ".", "masked_fill_", "(", "mask", ",", "3.5", ")", "\n", "\n", "", "for", "sample_id", "in", "tqdm", "(", "sampler", ")", ":", "\n", "        ", "data", "=", "dataset", "[", "sample_id", "]", "\n", "\n", "GT_obj", "=", "[", "Word2Vec", "(", "torch", ".", "LongTensor", "(", "[", "word2index", "[", "dataset", ".", "hoi_dict", "[", "dd", "]", "[", "'object'", "]", "]", "]", ")", ")", ".", "sum", "(", "0", ")", "for", "dd", "in", "data", "[", "'hoi_id'", "]", "]", "\n", "\n", "GT_obj", "=", "torch", ".", "stack", "(", "GT_obj", ",", "0", ")", ".", "cuda", "(", ")", "\n", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "feats", "=", "{", "\n", "'human_rcnn'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'human_feat'", "]", ")", ")", ",", "\n", "'object_rcnn'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'object_feat'", "]", ")", ")", ",", "\n", "'box'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'box_feat'", "]", ")", ")", ",", "\n", "'absolute_pose'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'absolute_pose'", "]", ")", ")", ",", "\n", "'relative_pose'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'relative_pose'", "]", ")", ")", ",", "\n", "'human_prob_vec'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'human_prob_vec'", "]", ")", ")", ",", "\n", "'object_prob_vec'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'object_prob_vec'", "]", ")", ")", ",", "\n", "'prob_mask'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'prob_mask'", "]", ")", ")", "\n", "}", "\n", "\n", "feats", "[", "'object_one_hot'", "]", "=", "GT_obj", "\n", "feats", "[", "'object_one_hot2'", "]", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'object_one_hot'", "]", ")", ")", "\n", "\n", "\n", "", "prob_vec", ",", "factor_scores", ",", "_", "=", "model", ".", "hoi_classifier", "(", "feats", ")", "\n", "\n", "hoi_prob", "=", "prob_vec", "[", "'hoi'", "]", "#  B*600", "\n", "\n", "if", "USE_refine", ":", "\n", "            ", "ww", "=", "(", "hoi_prob", ">", "0", ")", ".", "float", "(", ")", "\n", "hoi_prob", "=", "(", "(", "torch", ".", "matmul", "(", "hoi_prob", ",", "co_occurrence", ")", "*", "0.9", "+", "torch", ".", "matmul", "(", "(", "1", "-", "hoi_prob", ")", "*", "ww", ",", "co_occurrence_neg", ")", "*", "0.1", ")", ".", "t", "(", ")", "/", "ww", ".", "sum", "(", "1", ")", ")", ".", "t", "(", ")", "\n", "\n", "\n", "", "hoi_prob", "=", "hoi_prob", "*", "feats", "[", "'prob_mask'", "]", "#  B*600", "\n", "\n", "hoi_prob", "=", "hoi_prob", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "num_cand", "=", "hoi_prob", ".", "shape", "[", "0", "]", "# 1~B", "\n", "scores", "=", "hoi_prob", "[", "np", ".", "arange", "(", "num_cand", ")", ",", "np", ".", "array", "(", "data", "[", "'hoi_idx'", "]", ")", "]", "\n", "\n", "\n", "human_obj_boxes_scores", "=", "np", ".", "concatenate", "(", "(", "\n", "data", "[", "'human_box'", "]", ",", "\n", "data", "[", "'object_box'", "]", ",", "\n", "np", ".", "expand_dims", "(", "scores", ",", "1", ")", ")", ",", "1", ")", "\n", "\n", "global_id", "=", "data", "[", "'global_id'", "]", "\n", "pred_hois", ".", "create_group", "(", "global_id", ")", "\n", "pred_hois", "[", "global_id", "]", ".", "create_dataset", "(", "\n", "'human_obj_boxes_scores'", ",", "\n", "data", "=", "human_obj_boxes_scores", ")", "\n", "pred_hois", "[", "global_id", "]", ".", "create_dataset", "(", "\n", "'start_end_ids'", ",", "\n", "data", "=", "data", "[", "'start_end_ids_'", "]", ")", "\n", "\n", "", "pred_hois", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.eval.main": [[104, 123], ["print", "utils.model.Model", "exp.hoi_classifier.models.hoi_classifier_model.HoiClassifier().cuda", "print", "exp.hoi_classifier.data.features_dataset.Features", "eval.eval_model", "print", "torch.load", "torch.load", "torch.load", "utils.model.Model.hoi_classifier.load_state_dict", "exp.hoi_classifier.models.hoi_classifier_model.HoiClassifier", "torch.load.keys"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.train.eval_model"], ["", "def", "main", "(", "exp_const", ",", "data_const", ",", "model_const", ")", ":", "\n", "    ", "print", "(", "'Loading model ...'", ")", "\n", "model", "=", "Model", "(", ")", "\n", "model", ".", "const", "=", "model_const", "\n", "model", ".", "hoi_classifier", "=", "HoiClassifier", "(", "model", ".", "const", ".", "hoi_classifier", ")", ".", "cuda", "(", ")", "\n", "if", "model", ".", "const", ".", "model_num", "==", "-", "1", ":", "\n", "        ", "print", "(", "'No pretrained model will be loaded since model_num is set to -1'", ")", "\n", "", "else", ":", "\n", "        ", "state", "=", "torch", ".", "load", "(", "model", ".", "const", ".", "hoi_classifier", ".", "model_pth", ")", "#---------------------------!!!!!!!!!!!!!!!!!!!", "\n", "state", "=", "{", "kk", ":", "state", "[", "kk", "]", "for", "kk", "in", "state", ".", "keys", "(", ")", "if", "not", "'mlp.embedding'", "in", "kk", "}", "\n", "#pdb.set_trace()", "\n", "model", ".", "hoi_classifier", ".", "load_state_dict", "(", "state", ")", "\n", "#model.hoi_classifier.load_state_dict(", "\n", "#    torch.load(model.const.hoi_classifier.model_pth))", "\n", "\n", "", "print", "(", "'Creating data loader ...'", ")", "\n", "dataset", "=", "Features", "(", "data_const", ")", "\n", "\n", "eval_model", "(", "model", ",", "dataset", ",", "exp_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.train.train_model": [[28, 168], ["utils.load_json_object", "torch.load", "torch.load", "torch.load", "utils.load_json_object", "utils.load_json_object", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "itertools.chain", "torch.Adam", "torch.BCELoss", "torch.CrossEntropyLoss", "optim.Adam.zero_grad", "range", "model.hoi_classifier.parameters", "torch.utils.data.sampler.RandomSampler", "enumerate", "torch.cat().cuda", "torch.cat().cuda", "torch.cat().cuda", "torch.autograd.Variable", "model.hoi_classifier.train", "model.hoi_classifier", "torch.autograd.Variable", "nn.BCELoss.mean", "torch.autograd.Variable", "nn.CrossEntropyLoss.", "torch.matmul", "torch.matmul", "torch.matmul", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.matmul", "torch.matmul", "torch.matmul", "torch.autograd.Variable", "torch.mul().mean", "torch.mul().mean", "torch.mul().mean", "loss.backward", "numpy.random.choice", "torch.load.", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "optim.Adam.step", "optim.Adam.zero_grad", "hoi_prob.max", "torch.max", "torch.max", "torch.max", "numpy.sum", "log_str.format.format", "print", "train.eval_model", "log_str.format.format", "print", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.cat", "torch.cat", "torch.cat", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "nn.BCELoss.", "torch.mul", "torch.mul", "torch.mul", "model.hoi_classifier.state_dict", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.matmul.t", "nn.BCELoss.", "str", "torch.cuda.FloatTensor.sum"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.train.eval_model"], ["def", "train_model", "(", "model", ",", "dataset_train", ",", "dataset_val", ",", "exp_const", ")", ":", "\n", "\n", "    ", "hoi2gid", "=", "io", ".", "load_json_object", "(", "'hoi2gid1.json'", ")", "\n", "#hoi2gid = io.load_json_object('anchor_only/hoi2anchor45.json') ", "\n", "#hoi2gid = io.load_json_object('anchor+others/hoi2anchor10.json') ", "\n", "\n", "Word2Vec", "=", "torch", ".", "load", "(", "'Word2Vec_Glove.pkl'", ")", "\n", "word2index", "=", "io", ".", "load_json_object", "(", "'word2vec_vocab_Glove.json'", ")", "\n", "neighbors", "=", "io", ".", "load_json_object", "(", "'neighbor_object_Glove.json'", ")", "\n", "\n", "\n", "#probability = [0.2, 0.175, 0.150, 0.125, 0.1, 0.1, 0.075, 0.05, 0.025, 0.0]#----generalize2", "\n", "#probability = [0.3, 0.25, 0.2, 0.15, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0]#----generalize3 / Glove_genearalize1", "\n", "#probability = [0.4, 0.3, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]#----generalize4 / Glove_genearalize2", "\n", "probability", "=", "[", "0.5", ",", "0.3", ",", "0.2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "#----Glove_genearalize3", "\n", "\n", "print", "(", "'Word2Vec model Loaded!'", ")", "\n", "\n", "co_occurrence", "=", "torch", ".", "load", "(", "'co-occurrence_pos.pkl'", ")", "#------------for co-occurrence prior", "\n", "co_occurrence_neg", "=", "torch", ".", "load", "(", "'co-occurrence_neg.pkl'", ")", "#------------for negative co-occurrence prior", "\n", "\n", "co_occurrence", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "co_occurrence", ")", "\n", "co_occurrence_neg", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "co_occurrence_neg", ")", "\n", "\n", "\n", "params", "=", "itertools", ".", "chain", "(", "\n", "model", ".", "hoi_classifier", ".", "parameters", "(", ")", "\n", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "params", ",", "lr", "=", "exp_const", ".", "lr", ")", "\n", "\n", "criterion", "=", "nn", ".", "BCELoss", "(", "reduction", "=", "'none'", ")", "\n", "criterion_softmax", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "step", "=", "0", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "for", "epoch", "in", "range", "(", "exp_const", ".", "num_epochs", ")", ":", "\n", "        ", "sampler", "=", "RandomSampler", "(", "dataset_train", ")", "\n", "for", "i", ",", "sample_id", "in", "enumerate", "(", "sampler", ")", ":", "\n", "            ", "data", "=", "dataset_train", "[", "sample_id", "]", "\n", "\n", "ind", "=", "np", ".", "random", ".", "choice", "(", "10", ",", "1", ",", "p", "=", "probability", ")", "[", "0", "]", "\n", "GT_obj", "=", "[", "Word2Vec", "(", "torch", ".", "LongTensor", "(", "[", "word2index", "[", "neighbors", "[", "dataset_train", ".", "hoi_dict", "[", "dd", "]", "[", "'object'", "]", "]", "[", "ind", "]", "[", "0", "]", "]", "]", ")", ")", "for", "dd", "in", "data", "[", "'hoi_id'", "]", "]", "#-----generalized version! (weighted)", "\n", "GT_obj", "=", "torch", ".", "cat", "(", "GT_obj", ",", "0", ")", ".", "cuda", "(", ")", "\n", "\n", "\n", "feats", "=", "{", "\n", "'human_rcnn'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'human_feat'", "]", ")", ")", ",", "\n", "'object_rcnn'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'object_feat'", "]", ")", ")", ",", "\n", "'box'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'box_feat'", "]", ")", ")", ",", "\n", "'absolute_pose'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'absolute_pose'", "]", ")", ")", ",", "\n", "'relative_pose'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'relative_pose'", "]", ")", ")", ",", "\n", "'human_prob_vec'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'human_prob_vec'", "]", ")", ")", ",", "\n", "'object_prob_vec'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'object_prob_vec'", "]", ")", ")", ",", "\n", "'prob_mask'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'prob_mask'", "]", ")", ")", "\n", "}", "\n", "\n", "feats", "[", "'object_one_hot'", "]", "=", "GT_obj", "\n", "feats", "[", "'object_one_hot2'", "]", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'object_one_hot'", "]", ")", ")", "\n", "\n", "\n", "model", ".", "hoi_classifier", ".", "train", "(", ")", "\n", "prob_vec", ",", "factor_scores", ",", "embedding", "=", "model", ".", "hoi_classifier", "(", "feats", ")", "\n", "\n", "hoi_prob2", "=", "prob_vec", "[", "'hoi'", "]", "\n", "hoi_prob", "=", "prob_vec", "[", "'hoi'", "]", "*", "feats", "[", "'prob_mask'", "]", "\n", "\n", "\n", "hoi_labels", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'hoi_label_vec'", "]", ")", ")", "\n", "\n", "\n", "loss_cls", "=", "criterion", "(", "hoi_prob", ",", "hoi_labels", ")", ".", "mean", "(", ")", "\n", "\n", "\n", "cluster_label", "=", "[", "hoi2gid", "[", "str", "(", "dd", ")", "]", "for", "dd", "in", "data", "[", "'hoi_idx'", "]", "]", "*", "data", "[", "'hoi_label'", "]", "\n", "cluster_label", "=", "Variable", "(", "torch", ".", "cuda", ".", "LongTensor", "(", "cluster_label", ")", ")", "\n", "loss_cluster", "=", "criterion_softmax", "(", "embedding", ",", "cluster_label", ")", "\n", "\n", "\n", "new_label1", "=", "torch", ".", "matmul", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'hoi_label_vec'", "]", ")", ",", "co_occurrence", ")", "\n", "weight", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "(", "new_label1", ">", "0", ")", ".", "float", "(", ")", ")", "\n", "\n", "new_label1_neg", "=", "torch", ".", "matmul", "(", "(", "1", "-", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'hoi_label_vec'", "]", ")", ")", "*", "weight", ",", "co_occurrence_neg", ")", "\n", "new_label1_neg", "=", "(", "new_label1_neg", ".", "t", "(", ")", "/", "(", "weight", ".", "sum", "(", "1", ")", "-", "1", "+", "1e-8", ")", ")", ".", "t", "(", ")", "\n", "\n", "prior_labels1", "=", "Variable", "(", "new_label1", "*", "0.9", "+", "new_label1_neg", "*", "0.1", ")", "\n", "\n", "loss_distillation", "=", "torch", ".", "mul", "(", "criterion", "(", "hoi_prob2", ",", "prior_labels1", ")", ",", "weight", ")", ".", "mean", "(", ")", "\n", "\n", "\n", "loss", "=", "0.7", "*", "loss_cls", "+", "0.3", "*", "loss_distillation", "+", "0.1", "*", "loss_cluster", "\n", "\n", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "if", "step", "%", "exp_const", ".", "imgs_per_batch", "==", "0", ":", "\n", "                ", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "max_prob", "=", "hoi_prob", ".", "max", "(", ")", ".", "data", "\n", "max_prob_tp", "=", "torch", ".", "max", "(", "hoi_prob", "*", "hoi_labels", ")", ".", "data", "\n", "\n", "if", "step", "%", "20", "==", "0", ":", "\n", "                ", "num_tp", "=", "np", ".", "sum", "(", "data", "[", "'hoi_label'", "]", ")", "\n", "num_fp", "=", "data", "[", "'hoi_label'", "]", ".", "shape", "[", "0", "]", "-", "num_tp", "\n", "log_str", "=", "'Epoch: {} | Iter: {} | Step: {} | '", "+", "'Train Loss: {:.8f} | TPs: {} | FPs: {} | '", "+", "'Max TP Prob: {:.8f} | Max Prob: {:.8f}'", "\n", "log_str", "=", "log_str", ".", "format", "(", "\n", "epoch", ",", "\n", "i", ",", "\n", "step", ",", "\n", "loss", ".", "data", ",", "\n", "num_tp", ",", "\n", "num_fp", ",", "\n", "max_prob_tp", ",", "\n", "max_prob", ")", "\n", "print", "(", "log_str", ")", "\n", "\n", "", "if", "step", "%", "5000", "==", "0", ":", "\n", "                ", "val_loss", "=", "eval_model", "(", "model", ",", "dataset_val", ",", "exp_const", ",", "Word2Vec", ",", "word2index", ",", "num_samples", "=", "2500", ")", "\n", "log_str", "=", "'Epoch: {} | Iter: {} | Step: {} | Val Loss: {:.8f}'", "\n", "log_str", "=", "log_str", ".", "format", "(", "\n", "epoch", ",", "\n", "i", ",", "\n", "step", ",", "\n", "loss", ".", "data", ",", "\n", "val_loss", ")", "\n", "print", "(", "log_str", ")", "\n", "\n", "", "if", "step", "%", "5000", "==", "0", ":", "\n", "                ", "hoi_classifier_pth", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "model_dir", ",", "\n", "f'hoi_classifier_{step}'", ")", "\n", "torch", ".", "save", "(", "\n", "model", ".", "hoi_classifier", ".", "state_dict", "(", ")", ",", "\n", "hoi_classifier_pth", ")", "\n", "\n", "", "step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.train.eval_model": [[170, 215], ["model.hoi_classifier.eval", "torch.BCELoss", "torch.utils.data.sampler.RandomSampler", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "tqdm.tqdm", "torch.stack().cuda", "torch.stack().cuda", "torch.stack().cuda", "torch.autograd.Variable", "model.hoi_classifier", "torch.autograd.Variable", "nn.BCELoss.", "hoi_prob.size", "float", "Word2Vec().sum", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.stack", "torch.stack", "torch.stack", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "Word2Vec", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "", "", "def", "eval_model", "(", "model", ",", "dataset", ",", "exp_const", ",", "Word2Vec", ",", "word2index", ",", "num_samples", ")", ":", "\n", "    ", "model", ".", "hoi_classifier", ".", "eval", "(", ")", "\n", "criterion", "=", "nn", ".", "BCELoss", "(", ")", "\n", "step", "=", "0", "\n", "val_loss", "=", "0", "\n", "count", "=", "0", "\n", "sampler", "=", "RandomSampler", "(", "dataset", ")", "\n", "torch", ".", "manual_seed", "(", "0", ")", "\n", "for", "sample_id", "in", "tqdm", "(", "sampler", ")", ":", "\n", "        ", "if", "step", "==", "num_samples", ":", "\n", "            ", "break", "\n", "\n", "", "data", "=", "dataset", "[", "sample_id", "]", "\n", "\n", "\n", "GT_obj", "=", "[", "Word2Vec", "(", "torch", ".", "LongTensor", "(", "[", "word2index", "[", "dataset", ".", "hoi_dict", "[", "dd", "]", "[", "'object'", "]", "]", "]", ")", ")", ".", "sum", "(", "0", ")", "for", "dd", "in", "data", "[", "'hoi_id'", "]", "]", "\n", "GT_obj", "=", "torch", ".", "stack", "(", "GT_obj", ",", "0", ")", ".", "cuda", "(", ")", "\n", "\n", "feats", "=", "{", "\n", "'human_rcnn'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'human_feat'", "]", ")", ")", ",", "\n", "'object_rcnn'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'object_feat'", "]", ")", ")", ",", "\n", "'box'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'box_feat'", "]", ")", ")", ",", "\n", "'absolute_pose'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'absolute_pose'", "]", ")", ")", ",", "\n", "'relative_pose'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'relative_pose'", "]", ")", ")", ",", "\n", "'human_prob_vec'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'human_prob_vec'", "]", ")", ")", ",", "\n", "'object_prob_vec'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'object_prob_vec'", "]", ")", ")", ",", "\n", "'prob_mask'", ":", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'prob_mask'", "]", ")", ")", "\n", "}", "\n", "\n", "feats", "[", "'object_one_hot'", "]", "=", "GT_obj", "\n", "feats", "[", "'object_one_hot2'", "]", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'object_one_hot'", "]", ")", ")", "\n", "\n", "prob_vec", ",", "factor_scores", ",", "_", "=", "model", ".", "hoi_classifier", "(", "feats", ")", "\n", "\n", "hoi_prob", "=", "prob_vec", "[", "'hoi'", "]", "\n", "hoi_labels", "=", "Variable", "(", "torch", ".", "cuda", ".", "FloatTensor", "(", "data", "[", "'hoi_label_vec'", "]", ")", ")", "\n", "loss", "=", "criterion", "(", "hoi_prob", ",", "hoi_labels", ")", "\n", "\n", "batch_size", "=", "hoi_prob", ".", "size", "(", "0", ")", "\n", "val_loss", "+=", "(", "batch_size", "*", "loss", ".", "data", ")", "\n", "count", "+=", "batch_size", "\n", "step", "+=", "1", "\n", "\n", "", "val_loss", "=", "val_loss", "/", "float", "(", "count", ")", "\n", "return", "val_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.train.main": [[217, 239], ["utils.mkdir_if_not_exists", "utils.mkdir_if_not_exists", "utils.mkdir_if_not_exists", "utils.constants.save_constants", "print", "utils.model.Model", "exp.hoi_classifier.models.hoi_classifier_model.HoiClassifier().cuda", "utils.model.Model.to_txt", "print", "exp.hoi_classifier.data.features_dataset.Features", "exp.hoi_classifier.data.features_dataset.Features", "train.train_model", "exp.hoi_classifier.models.hoi_classifier_model.HoiClassifier"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.constants.save_constants", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.model.Model.to_txt", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.train.train_model"], ["", "def", "main", "(", "exp_const", ",", "data_const_train", ",", "data_const_val", ",", "model_const", ")", ":", "\n", "    ", "io", ".", "mkdir_if_not_exists", "(", "exp_const", ".", "exp_dir", ",", "recursive", "=", "True", ")", "\n", "io", ".", "mkdir_if_not_exists", "(", "exp_const", ".", "log_dir", ")", "\n", "io", ".", "mkdir_if_not_exists", "(", "exp_const", ".", "model_dir", ")", "\n", "save_constants", "(", "{", "\n", "'exp'", ":", "exp_const", ",", "\n", "'data_train'", ":", "data_const_train", ",", "\n", "'data_val'", ":", "data_const_val", ",", "\n", "'model'", ":", "model_const", "}", ",", "\n", "exp_const", ".", "exp_dir", ")", "\n", "\n", "print", "(", "'Creating model ...'", ")", "\n", "model", "=", "Model", "(", ")", "\n", "model", ".", "const", "=", "model_const", "\n", "model", ".", "hoi_classifier", "=", "HoiClassifier", "(", "model", ".", "const", ".", "hoi_classifier", ")", ".", "cuda", "(", ")", "\n", "model", ".", "to_txt", "(", "exp_const", ".", "exp_dir", ",", "single_file", "=", "True", ")", "\n", "\n", "print", "(", "'Creating data loaders ...'", ")", "\n", "dataset_train", "=", "Features", "(", "data_const_train", ")", "\n", "dataset_val", "=", "Features", "(", "data_const_val", ")", "\n", "\n", "train_model", "(", "model", ",", "dataset_train", ",", "dataset_val", ",", "exp_const", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.run.exp_gen_and_label_hoi_cand": [[87, 117], ["parser.parse_args", "utils.argparse_utils.manage_required_args", "utils.constants.ExpConstants", "data.hico.hico_constants.HicoConstants", "os.path.join", "len", "os.getcwd", "print", "exp.generate", "print", "os.path.join", "exp.assign"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.argparse_utils.manage_required_args", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.hoi_candidates.generate", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.label_hoi_candidates.assign"], ["def", "exp_gen_and_label_hoi_cand", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "not_specified_args", "=", "manage_required_args", "(", "\n", "args", ",", "\n", "parser", ",", "\n", "required_args", "=", "[", "'subset'", "]", ",", "\n", "optional_args", "=", "[", "'gen_hoi_cand'", ",", "'label_hoi_cand'", "]", ")", "\n", "if", "len", "(", "not_specified_args", ")", ">", "0", ":", "\n", "        ", "return", "\n", "\n", "", "exp_name", "=", "'hoi_candidates'", "\n", "exp_const", "=", "ExpConstants", "(", "exp_name", "=", "exp_name", ")", "\n", "exp_const", ".", "subset", "=", "args", ".", "subset", "\n", "\n", "data_const", "=", "HicoConstants", "(", ")", "\n", "data_const", ".", "selected_dets_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "'data_symlinks/hico_exp/select_confident_boxes_in_hico/'", "+", "'selected_coco_cls_dets.hdf5'", ")", "\n", "\n", "if", "args", ".", "gen_hoi_cand", ":", "\n", "        ", "print", "(", "'Generating HOI candidates from Faster-RCNN dets...'", ")", "\n", "hoi_candidates", ".", "generate", "(", "exp_const", ",", "data_const", ")", "\n", "\n", "", "if", "args", ".", "label_hoi_cand", ":", "\n", "        ", "print", "(", "'Labelling HOI candidates from Faster-RCNN dets...'", ")", "\n", "data_const", ".", "hoi_cand_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'hoi_candidates_{exp_const.subset}.hdf5'", ")", "\n", "label_hoi_candidates", ".", "assign", "(", "exp_const", ",", "data_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.run.exp_cache_box_feats": [[119, 137], ["parser.parse_args", "utils.argparse_utils.manage_required_args", "utils.constants.ExpConstants", "data.hico.hico_constants.HicoConstants", "os.path.join", "exp.main"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.argparse_utils.manage_required_args", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hoi_cls_count.main"], ["", "", "def", "exp_cache_box_feats", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "not_specified_args", "=", "manage_required_args", "(", "\n", "args", ",", "\n", "parser", ",", "\n", "required_args", "=", "[", "'subset'", "]", ")", "\n", "\n", "exp_name", "=", "'hoi_candidates'", "\n", "exp_const", "=", "ExpConstants", "(", "exp_name", "=", "exp_name", ")", "\n", "exp_const", ".", "subset", "=", "args", ".", "subset", "\n", "\n", "data_const", "=", "HicoConstants", "(", ")", "\n", "data_const", ".", "hoi_cand_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'hoi_candidates_{exp_const.subset}.hdf5'", ")", "\n", "\n", "cache_box_features", ".", "main", "(", "exp_const", ",", "data_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.run.exp_assign_pose_to_human_cand": [[139, 161], ["parser.parse_args", "utils.argparse_utils.manage_required_args", "utils.constants.ExpConstants", "data.hico.hico_constants.HicoConstants", "os.path.join", "os.path.join", "exp.main"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.argparse_utils.manage_required_args", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hoi_cls_count.main"], ["", "def", "exp_assign_pose_to_human_cand", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "not_specified_args", "=", "manage_required_args", "(", "\n", "args", ",", "\n", "parser", ",", "\n", "required_args", "=", "[", "'subset'", "]", ")", "\n", "\n", "exp_name", "=", "'hoi_candidates'", "\n", "exp_const", "=", "ExpConstants", "(", "exp_name", "=", "exp_name", ")", "\n", "exp_const", ".", "subset", "=", "args", ".", "subset", "\n", "\n", "data_const", "=", "HicoConstants", "(", ")", "\n", "data_const", ".", "hoi_cand_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'hoi_candidates_{exp_const.subset}.hdf5'", ")", "\n", "data_const", ".", "human_pose_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "proc_dir", ",", "\n", "'human_pose'", ")", "\n", "data_const", ".", "num_keypoints", "=", "18", "\n", "\n", "assign_pose_to_human_candidates", ".", "main", "(", "exp_const", ",", "data_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.run.exp_cache_pose_feats": [[163, 185], ["parser.parse_args", "utils.argparse_utils.manage_required_args", "utils.constants.ExpConstants", "data.hico.hico_constants.HicoConstants", "os.path.join", "os.path.join", "exp.main"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.argparse_utils.manage_required_args", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hoi_cls_count.main"], ["", "def", "exp_cache_pose_feats", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "not_specified_args", "=", "manage_required_args", "(", "\n", "args", ",", "\n", "parser", ",", "\n", "required_args", "=", "[", "'subset'", "]", ")", "\n", "\n", "exp_name", "=", "'hoi_candidates'", "\n", "exp_const", "=", "ExpConstants", "(", "exp_name", "=", "exp_name", ")", "\n", "exp_const", ".", "subset", "=", "args", ".", "subset", "\n", "\n", "data_const", "=", "HicoConstants", "(", ")", "\n", "data_const", ".", "hoi_cand_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'hoi_candidates_{exp_const.subset}.hdf5'", ")", "\n", "data_const", ".", "human_cands_pose_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'human_candidates_pose_{exp_const.subset}.hdf5'", ")", "\n", "data_const", ".", "num_keypoints", "=", "18", "\n", "\n", "cache_pose_features", ".", "main", "(", "exp_const", ",", "data_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.run.exp_train": [[187, 228], ["parser.parse_args", "utils.argparse_utils.manage_required_args", "os.path.join", "utils.constants.ExpConstants", "os.path.join", "os.path.join", "exp.hoi_classifier.data.features_dataset.FeatureConstants", "exp.hoi_classifier.data.features_dataset.FeatureConstants", "utils.constants.Constants", "exp.hoi_classifier.models.hoi_classifier_model.HoiClassifierConstants", "exp.main", "os.getcwd"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.argparse_utils.manage_required_args", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hoi_cls_count.main"], ["", "def", "exp_train", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "not_specified_args", "=", "manage_required_args", "(", "\n", "args", ",", "\n", "parser", ",", "\n", "required_args", "=", "[", "'fappend'", ",", "'imgs_per_batch'", ",", "'fp_to_tp_ratio'", "]", ",", "\n", "optional_args", "=", "[", "\n", "'verb_given_appearance'", ",", "\n", "'verb_given_human_appearance'", ",", "\n", "'verb_given_object_appearance'", ",", "\n", "'verb_given_boxes_and_object_label'", ",", "\n", "'rcnn_det_prob'", "]", ")", "\n", "\n", "exp_name", "=", "'factors'", "\n", "exp_name", "+=", "'_'", "+", "args", ".", "fappend", "\n", "\n", "out_base_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "'data_symlinks/hico_exp/hoi_classifier'", ")", "\n", "exp_const", "=", "ExpConstants", "(", "\n", "exp_name", "=", "exp_name", ",", "\n", "out_base_dir", "=", "out_base_dir", ")", "\n", "exp_const", ".", "log_dir", "=", "os", ".", "path", ".", "join", "(", "exp_const", ".", "exp_dir", ",", "'log'", ")", "\n", "exp_const", ".", "model_dir", "=", "os", ".", "path", ".", "join", "(", "exp_const", ".", "exp_dir", ",", "'models'", ")", "\n", "exp_const", ".", "num_epochs", "=", "10", "\n", "exp_const", ".", "imgs_per_batch", "=", "args", ".", "imgs_per_batch", "\n", "exp_const", ".", "lr", "=", "1e-3", "\n", "\n", "data_const_train", "=", "FeatureConstants", "(", "subset", "=", "'train'", ")", "\n", "data_const_val", "=", "FeatureConstants", "(", "subset", "=", "'val'", ")", "\n", "\n", "model_const", "=", "Constants", "(", ")", "\n", "model_const", ".", "hoi_classifier", "=", "HoiClassifierConstants", "(", ")", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_appearance", "=", "args", ".", "verb_given_appearance", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_human_appearance", "=", "args", ".", "verb_given_human_appearance", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_object_appearance", "=", "args", ".", "verb_given_object_appearance", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_boxes_and_object_label", "=", "args", ".", "verb_given_boxes_and_object_label", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_human_pose", "=", "args", ".", "verb_given_human_pose", "\n", "model_const", ".", "hoi_classifier", ".", "rcnn_det_prob", "=", "args", ".", "rcnn_det_prob", "\n", "\n", "train", ".", "main", "(", "exp_const", ",", "data_const_train", ",", "data_const_val", ",", "model_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.run.exp_eval": [[230, 271], ["parser.parse_args", "utils.argparse_utils.manage_required_args", "os.path.join", "utils.constants.ExpConstants", "os.path.join", "exp.hoi_classifier.data.features_dataset.FeatureConstants", "utils.constants.Constants", "exp.hoi_classifier.models.hoi_classifier_model.HoiClassifierConstants", "os.path.join", "exp.main", "os.getcwd"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.argparse_utils.manage_required_args", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hoi_cls_count.main"], ["", "def", "exp_eval", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "not_specified_args", "=", "manage_required_args", "(", "\n", "args", ",", "\n", "parser", ",", "\n", "required_args", "=", "[", "'fappend'", ",", "'model_num'", "]", ",", "\n", "optional_args", "=", "[", "\n", "'verb_given_appearance'", ",", "\n", "'verb_given_human_appearance'", ",", "\n", "'verb_given_object_appearance'", ",", "\n", "'verb_given_boxes_and_object_label'", ",", "\n", "'verb_given_human_pose'", ",", "\n", "'rcnn_det_prob'", "]", ")", "\n", "\n", "exp_name", "=", "'factors'", "\n", "exp_name", "+=", "'_'", "+", "args", ".", "fappend", "\n", "\n", "out_base_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "'data_symlinks/hico_exp/hoi_classifier'", ")", "\n", "exp_const", "=", "ExpConstants", "(", "\n", "exp_name", "=", "exp_name", ",", "\n", "out_base_dir", "=", "out_base_dir", ")", "\n", "exp_const", ".", "model_dir", "=", "os", ".", "path", ".", "join", "(", "exp_const", ".", "exp_dir", ",", "'models'", ")", "\n", "\n", "data_const", "=", "FeatureConstants", "(", "subset", "=", "'test'", ")", "\n", "data_const", ".", "balanced_sampling", "=", "False", "\n", "\n", "model_const", "=", "Constants", "(", ")", "\n", "model_const", ".", "model_num", "=", "args", ".", "model_num", "\n", "model_const", ".", "hoi_classifier", "=", "HoiClassifierConstants", "(", ")", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_appearance", "=", "args", ".", "verb_given_appearance", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_human_appearance", "=", "args", ".", "verb_given_human_appearance", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_object_appearance", "=", "args", ".", "verb_given_object_appearance", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_boxes_and_object_label", "=", "args", ".", "verb_given_boxes_and_object_label", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_human_pose", "=", "args", ".", "verb_given_human_pose", "\n", "model_const", ".", "hoi_classifier", ".", "rcnn_det_prob", "=", "args", ".", "rcnn_det_prob", "\n", "model_const", ".", "hoi_classifier", ".", "model_pth", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "model_dir", ",", "\n", "f'hoi_classifier_{model_const.model_num}'", ")", "\n", "evaluate", ".", "main", "(", "exp_const", ",", "data_const", ",", "model_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hoi_classifier.run.exp_top_boxes_per_hoi": [[273, 323], ["parser.parse_args", "utils.argparse_utils.manage_required_args", "os.path.join", "utils.constants.ExpConstants", "os.path.join", "exp.hoi_classifier.data.features_dataset.FeatureConstants", "os.path.join", "os.path.join", "os.path.join", "utils.constants.Constants", "exp.hoi_classifier.models.hoi_classifier_model.HoiClassifierConstants", "os.path.join", "exp.main", "os.getcwd", "os.getcwd"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.argparse_utils.manage_required_args", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hoi_cls_count.main"], ["", "def", "exp_top_boxes_per_hoi", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "not_specified_args", "=", "manage_required_args", "(", "\n", "args", ",", "\n", "parser", ",", "\n", "required_args", "=", "[", "'model_num'", "]", ",", "\n", "optional_args", "=", "[", "\n", "'verb_given_appearance'", ",", "\n", "'verb_given_human_appearance'", ",", "\n", "'verb_given_object_appearance'", ",", "\n", "'verb_given_boxes_and_object_label'", ",", "\n", "'verb_given_human_pose'", ",", "\n", "'rcnn_det_prob'", "]", ")", "\n", "\n", "exp_name", "=", "'factors'", "\n", "exp_name", "+=", "'_'", "+", "args", ".", "fappend", "\n", "\n", "out_base_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "'data_symlinks/hico_exp/hoi_classifier'", ")", "\n", "exp_const", "=", "ExpConstants", "(", "\n", "exp_name", "=", "exp_name", ",", "\n", "out_base_dir", "=", "out_base_dir", ")", "\n", "exp_const", ".", "model_dir", "=", "os", ".", "path", ".", "join", "(", "exp_const", ".", "exp_dir", ",", "'models'", ")", "\n", "exp_const", ".", "num_to_vis", "=", "10", "\n", "\n", "data_const", "=", "FeatureConstants", "(", "subset", "=", "'test'", ")", "\n", "data_const", ".", "pred_hoi_dets_h5py", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'pred_hoi_dets_test_{args.model_num}.hdf5'", ")", "\n", "hoi_cand_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "'data_symlinks/hico_exp/hoi_candidates'", ")", "\n", "data_const", ".", "human_pose_feats_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "hoi_cand_dir", ",", "\n", "'human_pose_feats_test.hdf5'", ")", "\n", "data_const", ".", "num_pose_keypoints", "=", "18", "\n", "\n", "model_const", "=", "Constants", "(", ")", "\n", "model_const", ".", "model_num", "=", "args", ".", "model_num", "\n", "model_const", ".", "hoi_classifier", "=", "HoiClassifierConstants", "(", ")", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_appearance", "=", "args", ".", "verb_given_appearance", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_boxes_and_object_label", "=", "args", ".", "verb_given_boxes_and_object_label", "\n", "model_const", ".", "hoi_classifier", ".", "verb_given_human_pose", "=", "args", ".", "verb_given_human_pose", "\n", "model_const", ".", "hoi_classifier", ".", "rcnn_det_prob", "=", "args", ".", "rcnn_det_prob", "\n", "model_const", ".", "hoi_classifier", ".", "model_pth", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "model_dir", ",", "\n", "f'hoi_classifier_{model_const.model_num}'", ")", "\n", "\n", "vis_top_boxes_per_hoi", ".", "main", "(", "exp_const", ",", "data_const", ",", "model_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_appearance.VerbGivenHumanAppearanceConstants.__init__": [[8, 10], ["exp.hoi_classifier.models.verb_given_object_appearance.VerbGivenObjectAppearanceConstants.__init__"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VerbGivenHumanAppearanceConstants", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_appearance.VerbGivenHumanAppearance.__init__": [[13, 15], ["exp.hoi_classifier.models.verb_given_object_appearance.VerbGivenObjectAppearance.__init__"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ",", "const", ")", ":", "\n", "        ", "super", "(", "VerbGivenHumanAppearance", ",", "self", ")", ".", "__init__", "(", "const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_appearance.VerbGivenHumanAppearance.forward": [[16, 22], ["verb_given_human_appearance.VerbGivenHumanAppearance.mlp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "\n", "        ", "in_feat", "=", "feats", "[", "'human_rcnn'", "]", "\n", "\n", "factor_scores", "=", "self", ".", "mlp", "(", "in_feat", ")", "\n", "return", "factor_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_boxes_and_object_label.VerbGivenBoxesAndObjectLabelConstants.__init__": [[11, 17], ["utils.JsonSerializableClass.__init__"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VerbGivenBoxesAndObjectLabelConstants", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "box_feat_size", "=", "21", "\n", "self", ".", "num_objects", "=", "300", "\n", "self", ".", "use_object_label", "=", "True", "\n", "self", ".", "use_log_feat", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_boxes_and_object_label.VerbGivenBoxesAndObjectLabelConstants.mlp_const": [[18, 29], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mlp_const", "(", "self", ")", ":", "\n", "        ", "in_dim", "=", "2", "*", "self", ".", "box_feat_size", "+", "self", ".", "num_objects", "\n", "layer_units", "=", "[", "512", "]", "*", "2", "\n", "factor_const", "=", "{", "\n", "'in_dim'", ":", "in_dim", ",", "\n", "'layer_units'", ":", "layer_units", ",", "\n", "'activation'", ":", "'ReLU'", ",", "\n", "'use_bn'", ":", "True", "\n", "}", "\n", "return", "factor_const", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_boxes_and_object_label.VerbGivenBoxesAndObjectLabel.__init__": [[32, 36], ["torch.Module.__init__", "copy.deepcopy", "utils.create_mlp", "utils.create_mlp"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.create_mlp", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "const", ")", ":", "\n", "        ", "super", "(", "VerbGivenBoxesAndObjectLabel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "const", "=", "copy", ".", "deepcopy", "(", "const", ")", "\n", "self", ".", "mlp", "=", "pytorch_layers", ".", "create_mlp", "(", "self", ".", "const", ".", "mlp_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_boxes_and_object_label.VerbGivenBoxesAndObjectLabel.transform_feat": [[37, 44], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.log", "torch.log", "torch.log", "torch.log", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "transform_feat", "(", "self", ",", "feat", ")", ":", "\n", "        ", "if", "self", ".", "const", ".", "use_log_feat", "is", "True", ":", "\n", "            ", "log_feat", "=", "torch", ".", "log", "(", "torch", ".", "abs", "(", "feat", ")", "+", "1e-6", ")", "\n", "", "else", ":", "\n", "            ", "log_feat", "=", "0", "*", "feat", "\n", "", "transformed_feat", "=", "torch", ".", "cat", "(", "(", "feat", ",", "log_feat", ")", ",", "1", ")", "\n", "return", "transformed_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_boxes_and_object_label.VerbGivenBoxesAndObjectLabel.forward": [[45, 54], ["verb_given_boxes_and_object_label.VerbGivenBoxesAndObjectLabel.transform_feat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "verb_given_boxes_and_object_label.VerbGivenBoxesAndObjectLabel.mlp"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_pose.VerbGivenHumanPose.transform_feat"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "        ", "transformed_box_feats", "=", "self", ".", "transform_feat", "(", "feats", "[", "'box'", "]", ")", "\n", "if", "self", ".", "const", ".", "use_object_label", "is", "True", ":", "\n", "            ", "object_label", "=", "feats", "[", "'object_one_hot'", "]", "\n", "", "else", ":", "\n", "            ", "object_label", "=", "0", "*", "feats", "[", "'object_one_hot'", "]", "\n", "", "in_feat", "=", "torch", ".", "cat", "(", "(", "transformed_box_feats", ",", "object_label", ")", ",", "1", ")", "\n", "factor_scores", "=", "self", ".", "mlp", "(", "in_feat", ")", "\n", "return", "factor_scores", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_object_appearance.VerbGivenObjectAppearanceConstants.__init__": [[12, 15], ["utils.JsonSerializableClass.__init__"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VerbGivenObjectAppearanceConstants", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "appearance_feat_size", "=", "1024", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_object_appearance.VerbGivenObjectAppearanceConstants.mlp_const": [[16, 25], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mlp_const", "(", "self", ")", ":", "\n", "        ", "factor_const", "=", "{", "\n", "'in_dim'", ":", "self", ".", "appearance_feat_size", ",", "\n", "'layer_units'", ":", "[", "512", "]", ",", "\n", "'activation'", ":", "'ReLU'", ",", "\n", "'use_bn'", ":", "True", "\n", "}", "\n", "return", "factor_const", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_object_appearance.VerbGivenObjectAppearance.__init__": [[28, 32], ["torch.Module.__init__", "copy.deepcopy", "utils.create_mlp", "utils.create_mlp"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.create_mlp", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "const", ")", ":", "\n", "        ", "super", "(", "VerbGivenObjectAppearance", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "const", "=", "copy", ".", "deepcopy", "(", "const", ")", "\n", "self", ".", "mlp", "=", "pytorch_layers", ".", "create_mlp", "(", "self", ".", "const", ".", "mlp_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_object_appearance.VerbGivenObjectAppearance.forward": [[33, 40], ["verb_given_object_appearance.VerbGivenObjectAppearance.mlp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "        ", "in_feat", "=", "feats", "[", "'object_rcnn'", "]", "\n", "\n", "\n", "\n", "factor_scores", "=", "self", ".", "mlp", "(", "in_feat", ")", "\n", "return", "factor_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_pose.VerbGivenHumanPoseConstants.__init__": [[11, 18], ["utils.JsonSerializableClass.__init__"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "VerbGivenHumanPoseConstants", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pose_feat_size", "=", "54", "+", "90", "\n", "self", ".", "use_absolute_pose", "=", "True", "\n", "self", ".", "use_relative_pose", "=", "True", "\n", "self", ".", "num_objects", "=", "300", "\n", "self", ".", "use_object_label", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_pose.VerbGivenHumanPoseConstants.mlp_const": [[19, 30], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "mlp_const", "(", "self", ")", ":", "\n", "        ", "in_dim", "=", "2", "*", "self", ".", "pose_feat_size", "+", "self", ".", "num_objects", "\n", "layer_units", "=", "[", "512", "]", "*", "2", "\n", "factor_const", "=", "{", "\n", "'in_dim'", ":", "in_dim", ",", "\n", "'layer_units'", ":", "layer_units", ",", "\n", "'activation'", ":", "'ReLU'", ",", "\n", "'use_bn'", ":", "True", "\n", "}", "\n", "return", "factor_const", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_pose.VerbGivenHumanPose.__init__": [[34, 38], ["torch.Module.__init__", "copy.deepcopy", "utils.create_mlp", "utils.create_mlp"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.create_mlp", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.create_mlp"], ["    ", "def", "__init__", "(", "self", ",", "const", ")", ":", "\n", "        ", "super", "(", "VerbGivenHumanPose", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "const", "=", "copy", ".", "deepcopy", "(", "const", ")", "\n", "self", ".", "mlp", "=", "pytorch_layers", ".", "create_mlp", "(", "self", ".", "const", ".", "mlp_const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_pose.VerbGivenHumanPose.transform_feat": [[39, 43], ["torch.log", "torch.log", "torch.log", "torch.log", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "transform_feat", "(", "self", ",", "feat", ")", ":", "\n", "        ", "log_feat", "=", "torch", ".", "log", "(", "torch", ".", "abs", "(", "feat", ")", "+", "1e-6", ")", "\n", "transformed_feat", "=", "torch", ".", "cat", "(", "(", "feat", ",", "log_feat", ")", ",", "1", ")", "\n", "return", "transformed_feat", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_pose.VerbGivenHumanPose.forward": [[44, 62], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "verb_given_human_pose.VerbGivenHumanPose.transform_feat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "verb_given_human_pose.VerbGivenHumanPose.mlp"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.verb_given_human_pose.VerbGivenHumanPose.transform_feat"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "        ", "if", "not", "self", ".", "const", ".", "use_absolute_pose", ":", "\n", "            ", "absolute_pose", "=", "0", "*", "feats", "[", "'absolute_pose'", "]", "\n", "", "else", ":", "\n", "            ", "absolute_pose", "=", "feats", "[", "'absolute_pose'", "]", "\n", "", "if", "not", "self", ".", "const", ".", "use_relative_pose", ":", "\n", "            ", "relative_pose", "=", "0", "*", "feats", "[", "'relative_pose'", "]", "\n", "", "else", ":", "\n", "            ", "relative_pose", "=", "feats", "[", "'relative_pose'", "]", "\n", "", "pose_feats", "=", "torch", ".", "cat", "(", "(", "absolute_pose", ",", "relative_pose", ")", ",", "1", ")", "\n", "transformed_box_feats", "=", "self", ".", "transform_feat", "(", "pose_feats", ")", "\n", "if", "self", ".", "const", ".", "use_object_label", "is", "True", ":", "\n", "            ", "object_label", "=", "feats", "[", "'object_one_hot'", "]", "\n", "", "else", ":", "\n", "            ", "object_label", "=", "0", "*", "feats", "[", "'object_one_hot'", "]", "\n", "", "in_feat", "=", "torch", ".", "cat", "(", "(", "transformed_box_feats", ",", "object_label", ")", ",", "1", ")", "\n", "factor_scores", "=", "self", ".", "mlp", "(", "in_feat", ")", "\n", "return", "factor_scores", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.MTL.__init__": [[22, 31], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "MTL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "input_size", "=", "512", "\n", "num_cluster", "=", "32", "#45+1", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "input_size", ",", "117", "*", "num_cluster", ")", "# 117 or 600------------------(1) For MoE", "\n", "#self.classifier = nn.Linear(input_size,(117-num_cluster+2)*num_cluster)# 117 or 600-----(2) For Anchor", "\n", "\n", "self", ".", "embedding", "=", "nn", ".", "Linear", "(", "input_size", ",", "num_cluster", ")", "\n", "", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.MTL.forward": [[31, 38], ["torch.functional.softmax", "torch.functional.softmax", "hoi_classifier_model.MTL.classifier", "hoi_classifier_model.MTL.embedding"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "\n", "        ", "output2", "=", "nn", ".", "functional", ".", "softmax", "(", "self", ".", "embedding", "(", "feats", ")", ")", "\n", "\n", "\n", "output1", "=", "self", ".", "classifier", "(", "feats", ")", "# B*(117*G)", "\n", "return", "output1", ",", "output2", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.ScatterClusterToHois.__init__": [[40, 43], ["torch.Module.__init__", "utils.load_json_object", "utils.load_json_object"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["    ", "def", "__init__", "(", "self", ",", "json_file", ")", ":", "\n", "        ", "super", "(", "ScatterClusterToHois", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gid2verb", "=", "io", ".", "load_json_object", "(", "json_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.ScatterClusterToHois.forward": [[44, 48], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "group_scores", ")", ":", "\n", "        ", "verb_scores", "=", "group_scores", "[", ":", ",", "self", ".", "gid2verb", "]", "\n", "\n", "return", "verb_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.HoiClassifierConstants.__init__": [[57, 68], ["utils.JsonSerializableClass.__init__", "exp.hoi_classifier.models.scatter_verbs_to_hois.ScatterVerbsToHoisConstants"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "HoiClassifierConstants", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "verb_given_appearance", "=", "True", "\n", "self", ".", "verb_given_human_appearance", "=", "True", "\n", "self", ".", "verb_given_object_appearance", "=", "True", "\n", "self", ".", "verb_given_boxes_and_object_label", "=", "True", "\n", "self", ".", "verb_given_human_pose", "=", "True", "\n", "self", ".", "rcnn_det_prob", "=", "True", "\n", "self", ".", "use_object_label", "=", "True", "\n", "self", ".", "use_log_feat", "=", "True", "\n", "self", ".", "scatter_verbs_to_hois", "=", "ScatterVerbsToHoisConstants", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.HoiClassifierConstants.selected_factor_constants": [[69, 76], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "selected_factor_constants", "(", "self", ")", ":", "\n", "        ", "factor_constants", "=", "{", "}", "\n", "for", "factor_name", "in", "self", ".", "selected_factor_names", ":", "\n", "            ", "const", "=", "self", ".", "FACTOR_NAME_TO_MODULE_CONSTANTS", "[", "factor_name", "]", "\n", "factor_constants", "[", "factor_name", "]", "=", "const", "\n", "", "return", "factor_constants", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.HoiClassifierConstants.selected_factor_names": [[77, 92], ["factor_names.append", "factor_names.append", "factor_names.append", "factor_names.append", "factor_names.append", "factor_names.append"], "methods", ["None"], ["", "@", "property", "\n", "def", "selected_factor_names", "(", "self", ")", ":", "\n", "        ", "factor_names", "=", "[", "]", "\n", "if", "self", ".", "verb_given_appearance", ":", "\n", "            ", "factor_names", ".", "append", "(", "'verb_given_object_app'", ")", "\n", "factor_names", ".", "append", "(", "'verb_given_human_app'", ")", "\n", "", "elif", "self", ".", "verb_given_human_appearance", ":", "\n", "            ", "factor_names", ".", "append", "(", "'verb_given_human_app'", ")", "\n", "", "elif", "self", ".", "verb_given_object_appearance", ":", "\n", "            ", "factor_names", ".", "append", "(", "'verb_given_object_app'", ")", "\n", "", "if", "self", ".", "verb_given_boxes_and_object_label", ":", "\n", "            ", "factor_names", ".", "append", "(", "'verb_given_boxes_and_object_label'", ")", "\n", "", "if", "self", ".", "verb_given_human_pose", ":", "\n", "            ", "factor_names", ".", "append", "(", "'verb_given_human_pose'", ")", "\n", "", "return", "factor_names", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.HoiClassifier.__init__": [[102, 116], ["torch.Module.__init__", "copy.deepcopy", "hoi_classifier_model.MTL", "utils.get_activation", "utils.get_activation", "exp.hoi_classifier.models.scatter_verbs_to_hois.ScatterVerbsToHois", "hoi_classifier_model.HoiClassifier.const.selected_factor_constants.items", "hoi_classifier_model.HoiClassifier.create_factor"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.get_activation", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.pytorch_layers.get_activation", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.HoiClassifier.create_factor"], ["def", "__init__", "(", "self", ",", "const", ")", ":", "\n", "        ", "super", "(", "HoiClassifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "const", "=", "copy", ".", "deepcopy", "(", "const", ")", "\n", "\n", "self", ".", "USE_cluster", "=", "True", "\n", "\n", "self", ".", "FC", "=", "MTL", "(", ")", "\n", "self", ".", "sigmoid", "=", "pytorch_layers", ".", "get_activation", "(", "'Sigmoid'", ")", "\n", "\n", "\n", "self", ".", "scatter_verbs_to_hois", "=", "ScatterVerbsToHois", "(", "\n", "self", ".", "const", ".", "scatter_verbs_to_hois", ")", "\n", "for", "name", ",", "const", "in", "self", ".", "const", ".", "selected_factor_constants", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "create_factor", "(", "name", ",", "const", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.HoiClassifier.create_factor": [[117, 124], ["setattr"], "methods", ["None"], ["", "", "def", "create_factor", "(", "self", ",", "factor_name", ",", "factor_const", ")", ":", "\n", "        ", "if", "factor_name", "in", "[", "'verb_given_boxes_and_object_label'", ",", "'verb_given_human_pose'", "]", ":", "\n", "            ", "factor_const", ".", "use_object_label", "=", "self", ".", "const", ".", "use_object_label", "\n", "", "if", "factor_name", "in", "[", "'verb_given_boxes_and_object_label'", "]", ":", "\n", "            ", "factor_const", ".", "use_log_feat", "=", "self", ".", "const", ".", "use_log_feat", "\n", "", "factor", "=", "self", ".", "FACTOR_NAME_TO_MODULE", "[", "factor_name", "]", "(", "factor_const", ")", "\n", "setattr", "(", "self", ",", "factor_name", ",", "factor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.hoi_classifier_model.HoiClassifier.forward": [[125, 182], ["hoi_classifier_model.HoiClassifier.FC", "getattr", "getattr.", "len", "hoi_classifier_model.HoiClassifier.sigmoid", "hoi_classifier_model.HoiClassifier.scatter_verbs_to_hois", "cluster_weight.unsqueeze.unsqueeze.unsqueeze", "torch.bmm().squeeze.reshape", "torch.bmm().squeeze.reshape", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm().squeeze", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "feats", ")", ":", "\n", "        ", "factor_scores", "=", "{", "}", "\n", "embedding", "=", "{", "}", "\n", "any_verb_factor", "=", "False", "\n", "verb_factor_scores", "=", "0", "\n", "for", "factor_name", "in", "self", ".", "const", ".", "selected_factor_names", ":", "\n", "            ", "module", "=", "getattr", "(", "self", ",", "factor_name", ")", "\n", "factor_scores", "[", "factor_name", "]", "=", "module", "(", "feats", ")", "\n", "if", "'verb_given'", "in", "factor_name", ":", "\n", "                ", "any_verb_factor", "=", "True", "\n", "verb_factor_scores", "+=", "factor_scores", "[", "factor_name", "]", "\n", "\n", "", "", "verb_factor_scores", "=", "verb_factor_scores", "/", "len", "(", "self", ".", "const", ".", "selected_factor_names", ")", "\n", "\n", "verb_factor_scores", ",", "embedding", "=", "self", ".", "FC", "(", "verb_factor_scores", ")", "\n", "\n", "\n", "if", "any_verb_factor", ":", "\n", "            ", "verb_prob", "=", "self", ".", "sigmoid", "(", "verb_factor_scores", ")", "\n", "\n", "if", "self", ".", "USE_cluster", ":", "\n", "                ", "NUM_of_CLUSTER", "=", "32", "#45+1", "\n", "#self.scatter_cluster_to_hois = ScatterClusterToHois(f'anchor_only/gid2cid{NUM_of_CLUSTER-1}.json')#-------(*) only for anchors!!!", "\n", "cluster_weight", "=", "embedding", "\n", "cluster_weight", "=", "cluster_weight", ".", "unsqueeze", "(", "1", ")", "# B,1,G", "\n", "\n", "#verb_prob = verb_prob.reshape(-1,NUM_of_CLUSTER,117-NUM_of_CLUSTER+2)# B,G,117#-(1) for anchors ", "\n", "verb_prob", "=", "verb_prob", ".", "reshape", "(", "-", "1", ",", "NUM_of_CLUSTER", ",", "117", ")", "# B,G,117#------------------(2) for MoE", "\n", "\n", "verb_prob", "=", "torch", ".", "bmm", "(", "cluster_weight", ",", "verb_prob", ")", ".", "squeeze", "(", ")", "\n", "#verb_prob = self.scatter_cluster_to_hois(torch.cat((embedding[:,1:-1],verb_prob),1))#-------(*) only for anchors!!!", "\n", "", "assert", "(", "verb_prob", ".", "shape", "[", "1", "]", "==", "117", ")", "\n", "\n", "verb_prob_vec", "=", "self", ".", "scatter_verbs_to_hois", "(", "verb_prob", ")", "\n", "\n", "", "else", ":", "\n", "            ", "verb_prob_vec", "=", "0", "*", "feats", "[", "'human_prob_vec'", "]", "+", "1", "\n", "\n", "", "if", "self", ".", "const", ".", "rcnn_det_prob", ":", "\n", "            ", "human_prob_vec", "=", "feats", "[", "'human_prob_vec'", "]", "\n", "object_prob_vec", "=", "feats", "[", "'object_prob_vec'", "]", "\n", "", "else", ":", "\n", "            ", "human_prob_vec", "=", "0", "*", "feats", "[", "'human_prob_vec'", "]", "+", "1", "\n", "object_prob_vec", "=", "0", "*", "feats", "[", "'object_prob_vec'", "]", "+", "1", "\n", "\n", "", "prob_vec", "=", "{", "\n", "'human'", ":", "human_prob_vec", ",", "\n", "'object'", ":", "object_prob_vec", ",", "\n", "'verb'", ":", "verb_prob_vec", ",", "\n", "}", "\n", "\n", "prob_vec", "[", "'hoi'", "]", "=", "prob_vec", "[", "'human'", "]", "*", "prob_vec", "[", "'object'", "]", "*", "prob_vec", "[", "'verb'", "]", "\n", "\n", "return", "prob_vec", ",", "factor_scores", ",", "embedding", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.scatter_verbs_to_hois.ScatterVerbsToHoisConstants.__init__": [[12, 20], ["utils.JsonSerializableClass.__init__", "os.path.join", "os.path.join", "os.getcwd", "os.getcwd"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ScatterVerbsToHoisConstants", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "hoi_list_json", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "'data_symlinks/hico_processed/hoi_list.json'", ")", "\n", "self", ".", "verb_list_json", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "'data_symlinks/hico_processed/verb_list.json'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.scatter_verbs_to_hois.ScatterVerbsToHois.__init__": [[23, 28], ["torch.Module.__init__", "copy.deepcopy", "scatter_verbs_to_hois.ScatterVerbsToHois.get_hoi_dict", "scatter_verbs_to_hois.ScatterVerbsToHois.get_verb_to_id"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_hoi_dict", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_verb_to_id"], ["    ", "def", "__init__", "(", "self", ",", "const", ")", ":", "\n", "        ", "super", "(", "ScatterVerbsToHois", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "const", "=", "copy", ".", "deepcopy", "(", "const", ")", "\n", "self", ".", "hoi_dict", "=", "self", ".", "get_hoi_dict", "(", "self", ".", "const", ".", "hoi_list_json", ")", "\n", "self", ".", "verb_to_id", "=", "self", ".", "get_verb_to_id", "(", "self", ".", "const", ".", "verb_list_json", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.scatter_verbs_to_hois.ScatterVerbsToHois.get_hoi_dict": [[29, 33], ["utils.load_json_object", "utils.load_json_object"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "get_hoi_dict", "(", "self", ",", "hoi_list_json", ")", ":", "\n", "        ", "hoi_list", "=", "io", ".", "load_json_object", "(", "hoi_list_json", ")", "\n", "hoi_dict", "=", "{", "hoi", "[", "'id'", "]", ":", "hoi", "for", "hoi", "in", "hoi_list", "}", "\n", "return", "hoi_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.scatter_verbs_to_hois.ScatterVerbsToHois.get_verb_to_id": [[34, 38], ["utils.load_json_object", "utils.load_json_object"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "get_verb_to_id", "(", "self", ",", "verb_list_json", ")", ":", "\n", "        ", "verb_list", "=", "io", ".", "load_json_object", "(", "verb_list_json", ")", "\n", "verb_to_id", "=", "{", "verb", "[", "'name'", "]", ":", "verb", "[", "'id'", "]", "for", "verb", "in", "verb_list", "}", "\n", "return", "verb_to_id", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.models.scatter_verbs_to_hois.ScatterVerbsToHois.forward": [[39, 49], ["verb_scores.size", "len", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "scatter_verbs_to_hois.ScatterVerbsToHois.hoi_dict.items", "torch.autograd.Variable", "torch.autograd.Variable", "int", "int", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "verb_scores", ")", ":", "\n", "        ", "batch_size", ",", "num_verbs", "=", "verb_scores", ".", "size", "(", ")", "\n", "num_hois", "=", "len", "(", "self", ".", "hoi_dict", ")", "\n", "hoi_scores", "=", "Variable", "(", "torch", ".", "zeros", "(", "batch_size", ",", "num_hois", ")", ")", ".", "cuda", "(", ")", "\n", "for", "hoi_id", ",", "hoi", "in", "self", ".", "hoi_dict", ".", "items", "(", ")", ":", "\n", "            ", "verb", "=", "hoi", "[", "'verb'", "]", "\n", "verb_idx", "=", "int", "(", "self", ".", "verb_to_id", "[", "verb", "]", ")", "-", "1", "\n", "hoi_idx", "=", "int", "(", "hoi_id", ")", "-", "1", "\n", "hoi_scores", "[", ":", ",", "hoi_idx", "]", "=", "verb_scores", "[", ":", ",", "verb_idx", "]", "\n", "", "return", "hoi_scores", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.__init__": [[8, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_center": [[11, 17], ["numpy.zeros"], "methods", ["None"], ["", "def", "compute_bbox_center", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "num_boxes", "=", "bbox", ".", "shape", "[", "0", "]", "\n", "center", "=", "np", ".", "zeros", "(", "[", "num_boxes", ",", "2", "]", ")", "\n", "center", "[", ":", ",", "0", "]", "=", "0.5", "*", "(", "bbox", "[", ":", ",", "0", "]", "+", "bbox", "[", ":", ",", "2", "]", ")", "\n", "center", "[", ":", ",", "1", "]", "=", "0.5", "*", "(", "bbox", "[", ":", ",", "1", "]", "+", "bbox", "[", ":", ",", "3", "]", ")", "\n", "return", "center", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.normalize_center": [[18, 20], ["None"], "methods", ["None"], ["", "def", "normalize_center", "(", "self", ",", "c", ",", "im_wh", ")", ":", "\n", "        ", "return", "c", "/", "im_wh", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_l2_norm": [[21, 23], ["numpy.sqrt", "numpy.sum"], "methods", ["None"], ["", "def", "compute_l2_norm", "(", "self", ",", "v", ")", ":", "\n", "        ", "return", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "v", "**", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_wh": [[24, 30], ["numpy.zeros"], "methods", ["None"], ["", "def", "compute_bbox_wh", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "num_boxes", "=", "bbox", ".", "shape", "[", "0", "]", "\n", "wh", "=", "np", ".", "zeros", "(", "[", "num_boxes", ",", "2", "]", ")", "\n", "wh", "[", ":", ",", "0", "]", "=", "0.5", "*", "(", "bbox", "[", ":", ",", "2", "]", "-", "bbox", "[", ":", ",", "0", "]", ")", "\n", "wh", "[", ":", ",", "1", "]", "=", "0.5", "*", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "\n", "return", "wh", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_offset": [[31, 36], ["None"], "methods", ["None"], ["", "def", "compute_offset", "(", "self", ",", "c1", ",", "c2", ",", "wh1", ",", "normalize", ")", ":", "\n", "        ", "offset", "=", "c2", "-", "c1", "\n", "if", "normalize", ":", "\n", "            ", "offset", "=", "offset", "/", "wh1", "\n", "", "return", "offset", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_aspect_ratio": [[37, 42], ["numpy.log2"], "methods", ["None"], ["", "def", "compute_aspect_ratio", "(", "self", ",", "wh", ",", "take_log", ")", ":", "\n", "        ", "aspect_ratio", "=", "wh", "[", ":", ",", "0", "]", "/", "(", "wh", "[", ":", ",", "1", "]", "+", "1e-6", ")", "\n", "if", "take_log", ":", "\n", "            ", "aspect_ratio", "=", "np", ".", "log2", "(", "aspect_ratio", "+", "1e-6", ")", "\n", "", "return", "aspect_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_size_ratio": [[43, 48], ["numpy.log2"], "methods", ["None"], ["", "def", "compute_bbox_size_ratio", "(", "self", ",", "wh1", ",", "wh2", ",", "take_log", ")", ":", "\n", "        ", "ratio", "=", "(", "wh2", "[", ":", ",", "0", "]", "*", "wh2", "[", ":", ",", "1", "]", ")", "/", "(", "wh1", "[", ":", ",", "0", "]", "*", "wh1", "[", ":", ",", "1", "]", ")", "\n", "if", "take_log", ":", "\n", "            ", "ratio", "=", "np", ".", "log2", "(", "ratio", "+", "1e-6", ")", "\n", "", "return", "ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_area": [[49, 57], ["None"], "methods", ["None"], ["", "def", "compute_bbox_area", "(", "self", ",", "wh", ",", "im_wh", ",", "normalize", ")", ":", "\n", "        ", "bbox_area", "=", "wh", "[", ":", ",", "0", "]", "*", "wh", "[", ":", ",", "1", "]", "\n", "if", "normalize", ":", "\n", "            ", "norm_factor", "=", "im_wh", "[", ":", ",", "0", "]", "*", "im_wh", "[", ":", ",", "1", "]", "\n", "", "else", ":", "\n", "            ", "norm_factor", "=", "1", "\n", "", "bbox_area", "=", "bbox_area", "/", "norm_factor", "\n", "return", "bbox_area", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_im_center": [[58, 60], ["None"], "methods", ["None"], ["", "def", "compute_im_center", "(", "self", ",", "im_wh", ")", ":", "\n", "        ", "return", "im_wh", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_features": [[61, 99], ["numpy.array", "numpy.tile", "box_features.BoxFeatures.compute_im_center", "box_features.BoxFeatures.compute_bbox_center", "box_features.BoxFeatures.compute_bbox_center", "box_features.BoxFeatures.normalize_center", "box_features.BoxFeatures.normalize_center", "box_features.BoxFeatures.compute_bbox_wh", "box_features.BoxFeatures.compute_bbox_wh", "box_features.BoxFeatures.compute_aspect_ratio", "box_features.BoxFeatures.compute_aspect_ratio", "box_features.BoxFeatures.compute_bbox_area", "box_features.BoxFeatures.compute_bbox_area", "box_features.BoxFeatures.compute_bbox_area", "box_features.BoxFeatures.compute_bbox_area", "box_features.BoxFeatures.compute_bbox_area", "box_features.BoxFeatures.compute_offset", "box_features.BoxFeatures.compute_bbox_size_ratio", "utils.compute_iou_batch", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_im_center", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_center", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_center", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.normalize_center", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.normalize_center", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.compute_bbox_wh", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.compute_bbox_wh", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_aspect_ratio", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_aspect_ratio", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_area", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_area", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_area", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_area", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_area", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_offset", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_bbox_size_ratio", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou_batch"], ["", "def", "compute_features", "(", "self", ",", "bbox1", ",", "bbox2", ",", "im_wh", ")", ":", "\n", "        ", "B", "=", "im_wh", ".", "shape", "[", "0", "]", "\n", "typical_wh", "=", "np", ".", "array", "(", "[", "[", "640.", ",", "480.", "]", "]", ")", "\n", "typical_wh", "=", "np", ".", "tile", "(", "typical_wh", ",", "(", "B", ",", "1", ")", ")", "\n", "im_c", "=", "self", ".", "compute_im_center", "(", "im_wh", ")", "\n", "c1", "=", "self", ".", "compute_bbox_center", "(", "bbox1", ")", "\n", "c2", "=", "self", ".", "compute_bbox_center", "(", "bbox2", ")", "\n", "c1_normalized", "=", "self", ".", "normalize_center", "(", "c1", ",", "im_wh", ")", "\n", "c2_normalized", "=", "self", ".", "normalize_center", "(", "c2", ",", "im_wh", ")", "\n", "wh1", "=", "self", ".", "compute_bbox_wh", "(", "bbox1", ")", "\n", "wh2", "=", "self", ".", "compute_bbox_wh", "(", "bbox2", ")", "\n", "aspect_ratio1", "=", "self", ".", "compute_aspect_ratio", "(", "wh1", ",", "take_log", "=", "False", ")", "\n", "aspect_ratio2", "=", "self", ".", "compute_aspect_ratio", "(", "wh2", ",", "take_log", "=", "False", ")", "\n", "area1", "=", "self", ".", "compute_bbox_area", "(", "wh1", ",", "im_wh", ",", "normalize", "=", "True", ")", "\n", "area2", "=", "self", ".", "compute_bbox_area", "(", "wh2", ",", "im_wh", ",", "normalize", "=", "True", ")", "\n", "area1_unnorm", "=", "self", ".", "compute_bbox_area", "(", "wh1", ",", "typical_wh", ",", "normalize", "=", "True", ")", "\n", "area2_unnorm", "=", "self", ".", "compute_bbox_area", "(", "wh2", ",", "typical_wh", ",", "normalize", "=", "True", ")", "\n", "area_im", "=", "self", ".", "compute_bbox_area", "(", "im_wh", ",", "typical_wh", ",", "normalize", "=", "True", ")", "\n", "offset_normalized", "=", "self", ".", "compute_offset", "(", "c1", ",", "c2", ",", "wh1", ",", "normalize", "=", "True", ")", "\n", "bbox_size_ratio", "=", "self", ".", "compute_bbox_size_ratio", "(", "wh1", ",", "wh2", ",", "take_log", "=", "False", ")", "\n", "iou", "=", "bbox_utils", ".", "compute_iou_batch", "(", "bbox1", ",", "bbox2", ")", "\n", "box_feat", "=", "np", ".", "concatenate", "(", "(", "\n", "offset_normalized", ",", "\n", "c1_normalized", "-", "0.5", ",", "\n", "c2_normalized", "-", "0.5", ",", "\n", "iou", "[", ":", ",", "np", ".", "newaxis", "]", ",", "\n", "aspect_ratio1", "[", ":", ",", "np", ".", "newaxis", "]", ",", "# w1/h1", "\n", "aspect_ratio2", "[", ":", ",", "np", ".", "newaxis", "]", ",", "# w2/h2", "\n", "bbox_size_ratio", "[", ":", ",", "np", ".", "newaxis", "]", ",", "# w2xh2 / w1xh1", "\n", "area1_unnorm", "[", ":", ",", "np", ".", "newaxis", "]", ",", "# w1xh1", "\n", "area2_unnorm", "[", ":", ",", "np", ".", "newaxis", "]", ",", "# w2xh2", "\n", "area1", "[", ":", ",", "np", ".", "newaxis", "]", ",", "# w1xh1 / imwximh", "\n", "area2", "[", ":", ",", "np", ".", "newaxis", "]", ",", "# w2xh2 / imwximh", "\n", "area_im", "[", ":", ",", "np", ".", "newaxis", "]", ",", "# imwximh", "\n", "wh1", "/", "typical_wh", ",", "\n", "wh2", "/", "typical_wh", ",", "\n", "im_wh", "/", "typical_wh", ")", ",", "1", ")", "\n", "return", "box_feat", "", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.FeatureConstants.__init__": [[17, 49], ["os.path.join", "os.path.join", "os.path.join", "super().__init__", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.getcwd", "os.getcwd", "os.getcwd"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "subset", ",", "\n", "clean_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "'data_symlinks/hico_clean'", ")", ",", "\n", "proc_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "'data_symlinks/hico_processed'", ")", ",", "\n", "hoi_cand_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "'data_symlinks/hico_exp/hoi_candidates'", ")", ")", ":", "\n", "        ", "super", "(", "FeatureConstants", ",", "self", ")", ".", "__init__", "(", "\n", "clean_dir", "=", "clean_dir", ",", "\n", "proc_dir", "=", "proc_dir", ")", "\n", "self", ".", "subset", "=", "subset", "\n", "self", ".", "hoi_cand_dir", "=", "hoi_cand_dir", "\n", "self", ".", "hoi_cands_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "hoi_cand_dir", ",", "\n", "f'hoi_candidates_{subset}.hdf5'", ")", "\n", "self", ".", "hoi_cand_labels_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "hoi_cand_dir", ",", "\n", "f'hoi_candidate_labels_{subset}.hdf5'", ")", "\n", "self", ".", "faster_rcnn_feats_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "proc_dir", ",", "\n", "'faster_rcnn_fc7.hdf5'", ")", "\n", "self", ".", "box_feats_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "hoi_cand_dir", ",", "\n", "f'hoi_candidates_box_feats_{subset}.hdf5'", ")", "\n", "self", ".", "human_pose_feats_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "hoi_cand_dir", ",", "\n", "f'human_pose_feats_{subset}.hdf5'", ")", "\n", "self", ".", "num_pose_keypoints", "=", "18", "\n", "self", ".", "balanced_sampling", "=", "True", "\n", "self", ".", "fp_to_tp_ratio", "=", "1000", "\n", "self", ".", "all_object_class_scores", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.__init__": [[52, 73], ["copy.deepcopy", "features_dataset.Features.load_hdf5_file", "features_dataset.Features.load_hdf5_file", "features_dataset.Features.load_hdf5_file", "features_dataset.Features.load_subset_ids", "features_dataset.Features.get_hoi_dict", "features_dataset.Features.get_obj_to_hoi_ids", "features_dataset.Features.get_obj_to_id", "features_dataset.Features.get_verb_to_id", "features_dataset.Features.get_anno_dict", "features_dataset.Features.load_hdf5_file", "features_dataset.Features.load_hdf5_file", "zip", "range", "len"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.load_hdf5_file", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.load_hdf5_file", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.load_hdf5_file", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.load_subset_ids", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_hoi_dict", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_obj_to_hoi_ids", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_obj_to_id", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_verb_to_id", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_anno_dict", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.load_hdf5_file", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.load_hdf5_file"], ["    ", "def", "__init__", "(", "self", ",", "const", ")", ":", "\n", "        ", "self", ".", "const", "=", "copy", ".", "deepcopy", "(", "const", ")", "\n", "self", ".", "hoi_cands", "=", "self", ".", "load_hdf5_file", "(", "self", ".", "const", ".", "hoi_cands_hdf5", ")", "\n", "self", ".", "hoi_cand_labels", "=", "self", ".", "load_hdf5_file", "(", "\n", "self", ".", "const", ".", "hoi_cand_labels_hdf5", ")", "\n", "self", ".", "faster_rcnn_feats", "=", "self", ".", "load_hdf5_file", "(", "\n", "self", ".", "const", ".", "faster_rcnn_feats_hdf5", ")", "\n", "self", ".", "global_ids", "=", "self", ".", "load_subset_ids", "(", "self", ".", "const", ".", "subset", ")", "\n", "self", ".", "hoi_dict", "=", "self", ".", "get_hoi_dict", "(", "self", ".", "const", ".", "hoi_list_json", ")", "\n", "\n", "self", ".", "obj_to_hoi_ids", "=", "self", ".", "get_obj_to_hoi_ids", "(", "self", ".", "hoi_dict", ")", "\n", "self", ".", "obj_to_id", "=", "self", ".", "get_obj_to_id", "(", "self", ".", "const", ".", "object_list_json", ")", "\n", "self", ".", "verb_to_id", "=", "self", ".", "get_verb_to_id", "(", "self", ".", "const", ".", "verb_list_json", ")", "\n", "self", ".", "anno_dict", "=", "self", ".", "get_anno_dict", "(", "self", ".", "const", ".", "anno_list_json", ")", "\n", "self", ".", "obj_to_coco_id", "=", "{", "\n", "k", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "COCO_CLASSES", ",", "range", "(", "len", "(", "COCO_CLASSES", ")", ")", ")", "}", "\n", "if", "self", ".", "const", ".", "box_feats_hdf5", ":", "\n", "            ", "self", ".", "box_feats", "=", "self", ".", "load_hdf5_file", "(", "self", ".", "const", ".", "box_feats_hdf5", ")", "\n", "", "if", "self", ".", "const", ".", "human_pose_feats_hdf5", ":", "\n", "            ", "self", ".", "human_pose_feat", "=", "self", ".", "load_hdf5_file", "(", "\n", "self", ".", "const", ".", "human_pose_feats_hdf5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_anno_dict": [[74, 78], ["utils.load_json_object"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "", "def", "get_anno_dict", "(", "self", ",", "anno_list_json", ")", ":", "\n", "        ", "anno_list", "=", "io", ".", "load_json_object", "(", "anno_list_json", ")", "\n", "anno_dict", "=", "{", "anno", "[", "'global_id'", "]", ":", "anno", "for", "anno", "in", "anno_list", "}", "\n", "return", "anno_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.load_hdf5_file": [[79, 81], ["h5py.File"], "methods", ["None"], ["", "def", "load_hdf5_file", "(", "self", ",", "hdf5_filename", ",", "mode", "=", "'r'", ")", ":", "\n", "        ", "return", "h5py", ".", "File", "(", "hdf5_filename", ",", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_hoi_dict": [[82, 86], ["utils.load_json_object"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "get_hoi_dict", "(", "self", ",", "hoi_list_json", ")", ":", "\n", "        ", "hoi_list", "=", "io", ".", "load_json_object", "(", "hoi_list_json", ")", "\n", "hoi_dict", "=", "{", "hoi", "[", "'id'", "]", ":", "hoi", "for", "hoi", "in", "hoi_list", "}", "\n", "return", "hoi_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_obj_to_id": [[87, 91], ["utils.load_json_object"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "get_obj_to_id", "(", "self", ",", "object_list_json", ")", ":", "\n", "        ", "object_list", "=", "io", ".", "load_json_object", "(", "object_list_json", ")", "\n", "obj_to_id", "=", "{", "obj", "[", "'name'", "]", ":", "obj", "[", "'id'", "]", "for", "obj", "in", "object_list", "}", "\n", "return", "obj_to_id", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_verb_to_id": [[92, 96], ["utils.load_json_object"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "get_verb_to_id", "(", "self", ",", "verb_list_json", ")", ":", "\n", "        ", "verb_list", "=", "io", ".", "load_json_object", "(", "verb_list_json", ")", "\n", "verb_to_id", "=", "{", "verb", "[", "'name'", "]", ":", "verb", "[", "'id'", "]", "for", "verb", "in", "verb_list", "}", "\n", "return", "verb_to_id", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_obj_to_hoi_ids": [[97, 106], ["hoi_dict.items", "obj_to_hoi_ids[].append"], "methods", ["None"], ["", "def", "get_obj_to_hoi_ids", "(", "self", ",", "hoi_dict", ")", ":", "\n", "        ", "obj_to_hoi_ids", "=", "{", "}", "\n", "for", "hoi_id", ",", "hoi", "in", "hoi_dict", ".", "items", "(", ")", ":", "\n", "            ", "obj", "=", "hoi", "[", "'object'", "]", "\n", "if", "obj", "in", "obj_to_hoi_ids", ":", "\n", "                ", "obj_to_hoi_ids", "[", "obj", "]", ".", "append", "(", "hoi_id", ")", "\n", "", "else", ":", "\n", "                ", "obj_to_hoi_ids", "[", "obj", "]", "=", "[", "hoi_id", "]", "\n", "", "", "return", "obj_to_hoi_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.load_subset_ids": [[107, 110], ["utils.load_json_object", "sorted"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "load_subset_ids", "(", "self", ",", "subset", ")", ":", "\n", "        ", "split_ids", "=", "io", ".", "load_json_object", "(", "self", ".", "const", ".", "split_ids_json", ")", "\n", "return", "sorted", "(", "split_ids", "[", "subset", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.__len__": [[111, 113], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "global_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_labels": [[114, 128], ["hoi_idxs.astype.astype.astype", "numpy.zeros", "range", "str().zfill", "len", "numpy.arange", "str"], "methods", ["None"], ["", "def", "get_labels", "(", "self", ",", "global_id", ")", ":", "\n", "# hoi_idx: number in [0,599]", "\n", "        ", "hoi_cands", "=", "self", ".", "hoi_cands", "[", "global_id", "]", "\n", "hoi_idxs", "=", "hoi_cands", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "[", ":", ",", "-", "1", "]", "\n", "hoi_idxs", "=", "hoi_idxs", ".", "astype", "(", "np", ".", "int", ")", "\n", "# label: 0/1 indicating if there was a match with any gt for that hoi", "\n", "labels", "=", "self", ".", "hoi_cand_labels", "[", "global_id", "]", "[", "(", ")", "]", "\n", "num_cand", "=", "labels", ".", "shape", "[", "0", "]", "\n", "hoi_label_vecs", "=", "np", ".", "zeros", "(", "[", "num_cand", ",", "len", "(", "self", ".", "hoi_dict", ")", "]", ")", "\n", "hoi_label_vecs", "[", "np", ".", "arange", "(", "num_cand", ")", ",", "hoi_idxs", "]", "=", "labels", "\n", "hoi_ids", "=", "[", "None", "]", "*", "num_cand", "\n", "for", "i", "in", "range", "(", "num_cand", ")", ":", "\n", "            ", "hoi_ids", "[", "i", "]", "=", "str", "(", "hoi_idxs", "[", "i", "]", "+", "1", ")", ".", "zfill", "(", "3", ")", "\n", "", "return", "hoi_ids", ",", "labels", ",", "hoi_label_vecs", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_faster_rcnn_prob_vecs": [[129, 140], ["len", "len", "numpy.tile", "numpy.zeros", "enumerate", "numpy.expand_dims", "int"], "methods", ["None"], ["", "def", "get_faster_rcnn_prob_vecs", "(", "self", ",", "hoi_ids", ",", "human_probs", ",", "object_probs", ")", ":", "\n", "        ", "num_hois", "=", "len", "(", "self", ".", "hoi_dict", ")", "\n", "num_cand", "=", "len", "(", "hoi_ids", ")", "\n", "human_prob_vecs", "=", "np", ".", "tile", "(", "np", ".", "expand_dims", "(", "human_probs", ",", "1", ")", ",", "[", "1", ",", "num_hois", "]", ")", "\n", "object_prob_vecs", "=", "np", ".", "zeros", "(", "[", "num_cand", ",", "num_hois", "]", ")", "\n", "for", "i", ",", "hoi_id", "in", "enumerate", "(", "hoi_ids", ")", ":", "\n", "            ", "obj", "=", "self", ".", "hoi_dict", "[", "hoi_id", "]", "[", "'object'", "]", "\n", "obj_hoi_ids", "=", "self", ".", "obj_to_hoi_ids", "[", "obj", "]", "\n", "for", "obj_hoi_id", "in", "obj_hoi_ids", ":", "\n", "                ", "object_prob_vecs", "[", "i", ",", "int", "(", "obj_hoi_id", ")", "-", "1", "]", "=", "object_probs", "[", "i", "]", "\n", "", "", "return", "human_prob_vecs", ",", "object_prob_vecs", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.sample_cands": [[141, 155], ["numpy.arange", "numpy.concatenate", "min", "numpy.random.permutation"], "methods", ["None"], ["", "def", "sample_cands", "(", "self", ",", "hoi_labels", ")", ":", "\n", "        ", "num_cands", "=", "hoi_labels", ".", "shape", "[", "0", "]", "\n", "indices", "=", "np", ".", "arange", "(", "num_cands", ")", "\n", "tp_ids", "=", "indices", "[", "hoi_labels", "==", "1.0", "]", "\n", "fp_ids", "=", "indices", "[", "hoi_labels", "==", "0", "]", "\n", "num_tp", "=", "tp_ids", ".", "shape", "[", "0", "]", "\n", "num_fp", "=", "fp_ids", ".", "shape", "[", "0", "]", "\n", "if", "num_tp", "==", "0", ":", "\n", "            ", "num_fp_to_sample", "=", "self", ".", "const", ".", "fp_to_tp_ratio", "\n", "", "else", ":", "\n", "            ", "num_fp_to_sample", "=", "min", "(", "num_fp", ",", "self", ".", "const", ".", "fp_to_tp_ratio", "*", "num_tp", ")", "\n", "", "sampled_fp_ids", "=", "np", ".", "random", ".", "permutation", "(", "fp_ids", ")", "[", ":", "num_fp_to_sample", "]", "\n", "sampled_ids", "=", "np", ".", "concatenate", "(", "(", "tp_ids", ",", "sampled_fp_ids", ")", ",", "0", ")", "\n", "return", "sampled_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_obj_one_hot": [[156, 164], ["len", "numpy.zeros", "enumerate", "len", "int"], "methods", ["None"], ["", "def", "get_obj_one_hot", "(", "self", ",", "hoi_ids", ")", ":", "\n", "        ", "num_cand", "=", "len", "(", "hoi_ids", ")", "\n", "obj_one_hot", "=", "np", ".", "zeros", "(", "[", "num_cand", ",", "len", "(", "self", ".", "obj_to_id", ")", "]", ")", "\n", "for", "i", ",", "hoi_id", "in", "enumerate", "(", "hoi_ids", ")", ":", "\n", "            ", "obj_id", "=", "self", ".", "obj_to_id", "[", "self", ".", "hoi_dict", "[", "hoi_id", "]", "[", "'object'", "]", "]", "\n", "obj_idx", "=", "int", "(", "obj_id", ")", "-", "1", "\n", "obj_one_hot", "[", "i", ",", "obj_idx", "]", "=", "1.0", "\n", "", "return", "obj_one_hot", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_verb_one_hot": [[165, 173], ["len", "numpy.zeros", "enumerate", "len", "int"], "methods", ["None"], ["", "def", "get_verb_one_hot", "(", "self", ",", "hoi_ids", ")", ":", "\n", "        ", "num_cand", "=", "len", "(", "hoi_ids", ")", "\n", "verb_one_hot", "=", "np", ".", "zeros", "(", "[", "num_cand", ",", "len", "(", "self", ".", "verb_to_id", ")", "]", ")", "\n", "for", "i", ",", "hoi_id", "in", "enumerate", "(", "hoi_ids", ")", ":", "\n", "            ", "verb_id", "=", "self", ".", "verb_to_id", "[", "self", ".", "hoi_dict", "[", "hoi_id", "]", "[", "'verb'", "]", "]", "\n", "verb_idx", "=", "int", "(", "verb_id", ")", "-", "1", "\n", "verb_one_hot", "[", "i", ",", "verb_idx", "]", "=", "1.0", "\n", "", "return", "verb_one_hot", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_prob_mask": [[174, 179], ["len", "numpy.zeros", "len", "numpy.arange"], "methods", ["None"], ["", "def", "get_prob_mask", "(", "self", ",", "hoi_idx", ")", ":", "\n", "        ", "num_cand", "=", "len", "(", "hoi_idx", ")", "\n", "prob_mask", "=", "np", ".", "zeros", "(", "[", "num_cand", ",", "len", "(", "self", ".", "hoi_dict", ")", "]", ")", "\n", "prob_mask", "[", "np", ".", "arange", "(", "num_cand", ")", ",", "hoi_idx", "]", "=", "1.0", "\n", "return", "prob_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_im_wh": [[180, 186], ["numpy.ones"], "methods", ["None"], ["", "def", "get_im_wh", "(", "self", ",", "global_id", ",", "num_cand", ")", ":", "\n", "        ", "h", ",", "w", "=", "self", ".", "anno_dict", "[", "global_id", "]", "[", "'image_size'", "]", "[", ":", "2", "]", "\n", "im_wh", "=", "np", ".", "ones", "(", "[", "num_cand", ",", "2", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "im_wh", "[", ":", ",", "0", "]", "=", "im_wh", "[", ":", ",", "0", "]", "*", "w", "\n", "im_wh", "[", ":", ",", "1", "]", "=", "im_wh", "[", ":", ",", "1", "]", "*", "h", "\n", "return", "im_wh", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_obj_prob_vec": [[187, 205], ["os.path.join", "numpy.load", "len", "numpy.zeros", "features_dataset.Features.obj_to_hoi_ids.items", "int", "obj.split"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.split_ids.split"], ["", "def", "get_obj_prob_vec", "(", "\n", "self", ",", "\n", "global_id", ",", "\n", "object_rpn_id", ")", ":", "\n", "        ", "scores_npy", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "const", ".", "faster_rcnn_boxes", ",", "\n", "f'{global_id}_scores.npy'", ")", "\n", "scores", "=", "np", ".", "load", "(", "scores_npy", ")", "\n", "scores", "=", "scores", "[", "object_rpn_id", ",", ":", "]", "\n", "num_hois", "=", "len", "(", "self", ".", "hoi_dict", ")", "\n", "gather_ids", "=", "np", ".", "zeros", "(", "[", "num_hois", "]", ",", "dtype", "=", "np", ".", "int", ")", "\n", "for", "obj", ",", "obj_hoi_ids", "in", "self", ".", "obj_to_hoi_ids", ".", "items", "(", ")", ":", "\n", "            ", "obj_idx", "=", "self", ".", "obj_to_coco_id", "[", "' '", ".", "join", "(", "obj", ".", "split", "(", "'_'", ")", ")", "]", "\n", "#obj_idx = int(self.obj_to_id[obj])-1", "\n", "obj_hoi_idx", "=", "[", "int", "(", "v", ")", "-", "1", "for", "v", "in", "obj_hoi_ids", "]", "\n", "gather_ids", "[", "obj_hoi_idx", "]", "=", "obj_idx", "\n", "", "obj_prob_vec", "=", "scores", "[", ":", ",", "gather_ids", "]", "\n", "return", "obj_prob_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.__getitem__": [[207, 289], ["features_dataset.Features.get_labels", "numpy.take", "numpy.take", "features_dataset.Features.get_faster_rcnn_prob_vecs", "features_dataset.Features.get_obj_one_hot", "features_dataset.Features.get_verb_one_hot", "features_dataset.Features.get_prob_mask", "features_dataset.Features.sample_cands", "[].tolist", "hoi_cands[].astype", "hoi_cands[].astype", "hoi_cands[].astype", "start_end_ids.astype", "features_dataset.Features.get_obj_prob_vec", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_labels", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_faster_rcnn_prob_vecs", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_obj_one_hot", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_verb_one_hot", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_prob_mask", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.sample_cands", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.features_dataset.Features.get_obj_prob_vec"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "global_id", "=", "self", ".", "global_ids", "[", "i", "]", "\n", "\n", "start_end_ids", "=", "self", ".", "hoi_cands", "[", "global_id", "]", "[", "'start_end_ids'", "]", "[", "(", ")", "]", "\n", "hoi_cands_", "=", "self", ".", "hoi_cands", "[", "global_id", "]", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "[", "(", ")", "]", "\n", "hoi_ids_", ",", "hoi_labels_", ",", "hoi_label_vecs_", "=", "self", ".", "get_labels", "(", "global_id", ")", "\n", "if", "self", ".", "const", ".", "box_feats_hdf5", ":", "\n", "            ", "box_feats_", "=", "self", ".", "box_feats", "[", "global_id", "]", "[", "(", ")", "]", "\n", "", "else", ":", "\n", "            ", "box_feats_", "=", "None", "\n", "\n", "", "if", "self", ".", "const", ".", "human_pose_feats_hdf5", ":", "\n", "            ", "absolute_pose_feat_", "=", "self", ".", "human_pose_feat", "[", "global_id", "]", "[", "'absolute_pose'", "]", "[", "(", ")", "]", "\n", "relative_pose_feat_", "=", "self", ".", "human_pose_feat", "[", "global_id", "]", "[", "'relative_pose'", "]", "[", "(", ")", "]", "\n", "", "else", ":", "\n", "            ", "absolute_pose_feat_", "=", "None", "\n", "relative_pose_feat_", "=", "None", "\n", "\n", "", "if", "self", ".", "const", ".", "balanced_sampling", ":", "\n", "            ", "cand_ids", "=", "self", ".", "sample_cands", "(", "hoi_labels_", ")", "\n", "hoi_cands", "=", "hoi_cands_", "[", "cand_ids", "]", "\n", "hoi_ids", "=", "np", ".", "array", "(", "hoi_ids_", ")", "[", "cand_ids", "]", ".", "tolist", "(", ")", "\n", "hoi_labels", "=", "hoi_labels_", "[", "cand_ids", "]", "\n", "hoi_label_vecs", "=", "hoi_label_vecs_", "[", "cand_ids", "]", "\n", "if", "box_feats_", "is", "not", "None", ":", "\n", "                ", "box_feats", "=", "box_feats_", "[", "cand_ids", "]", "\n", "", "else", ":", "\n", "                ", "box_feats", "=", "None", "\n", "", "if", "absolute_pose_feat_", "is", "not", "None", ":", "\n", "                ", "absolute_pose_feat", "=", "absolute_pose_feat_", "[", "cand_ids", "]", "\n", "relative_pose_feat", "=", "relative_pose_feat_", "[", "cand_ids", "]", "\n", "", "", "else", ":", "\n", "            ", "hoi_cands", "=", "hoi_cands_", "\n", "hoi_ids", "=", "hoi_ids_", "\n", "hoi_labels", "=", "hoi_labels_", "\n", "hoi_label_vecs", "=", "hoi_label_vecs_", "\n", "box_feats", "=", "box_feats_", "\n", "absolute_pose_feat", "=", "absolute_pose_feat_", "\n", "relative_pose_feat", "=", "relative_pose_feat_", "\n", "\n", "", "to_return", "=", "{", "\n", "'global_id'", ":", "global_id", ",", "# 'HICO_test2015_00000001'", "\n", "'human_box'", ":", "hoi_cands", "[", ":", ",", ":", "4", "]", ",", "# (B*4)", "\n", "'object_box'", ":", "hoi_cands", "[", ":", ",", "4", ":", "8", "]", ",", "# (B*4)", "\n", "'human_prob'", ":", "hoi_cands", "[", ":", ",", "8", "]", ",", "# (B,)", "\n", "'object_prob'", ":", "hoi_cands", "[", ":", ",", "9", "]", ",", "# (B,)", "\n", "'human_rpn_id'", ":", "hoi_cands", "[", ":", ",", "10", "]", ".", "astype", "(", "np", ".", "int", ")", ",", "# (B,), human box id,  [0,1,2,,....198]", "\n", "'object_rpn_id'", ":", "hoi_cands", "[", ":", ",", "11", "]", ".", "astype", "(", "np", ".", "int", ")", ",", "# (B,), object box id, [295,295, ... 148,148]]", "\n", "'hoi_idx'", ":", "hoi_cands", "[", ":", ",", "-", "1", "]", ".", "astype", "(", "np", ".", "int", ")", ",", "# (B,), ???, [  0,   0,   0, ..., 599, 599, 599]", "\n", "'hoi_id'", ":", "hoi_ids", ",", "# (B,), str version of hoi_idx, ['001', '001' '001' ..., '600','600','600']", "\n", "'hoi_label'", ":", "hoi_labels", ",", "# (B,) , label exists or not, [0000010000000100000]", "\n", "'hoi_label_vec'", ":", "hoi_label_vecs", ",", "# (B,600), one-hot version of hoi_labels", "\n", "'box_feat'", ":", "box_feats", ",", "# (B,21)", "\n", "'absolute_pose'", ":", "absolute_pose_feat", ",", "# (B,54)", "\n", "'relative_pose'", ":", "relative_pose_feat", ",", "# (B,90)", "\n", "'hoi_cands_'", ":", "hoi_cands_", ",", "#(B,13), boxes, prob, box_id, and idx", "\n", "'start_end_ids_'", ":", "start_end_ids", ".", "astype", "(", "np", ".", "int", ")", ",", "# Corresponds to non sampled hoi_cands_ which is the same as hoi_cands when balanced sampling is not used", "\n", "}", "\n", "to_return", "[", "'human_feat'", "]", "=", "np", ".", "take", "(", "\n", "self", ".", "faster_rcnn_feats", "[", "global_id", "]", ",", "\n", "to_return", "[", "'human_rpn_id'", "]", ",", "\n", "axis", "=", "0", ")", "\n", "to_return", "[", "'object_feat'", "]", "=", "np", ".", "take", "(", "\n", "self", ".", "faster_rcnn_feats", "[", "global_id", "]", ",", "\n", "to_return", "[", "'object_rpn_id'", "]", ",", "\n", "axis", "=", "0", ")", "\n", "\n", "human_prob_vecs", ",", "object_prob_vecs", "=", "self", ".", "get_faster_rcnn_prob_vecs", "(", "\n", "to_return", "[", "'hoi_id'", "]", ",", "\n", "to_return", "[", "'human_prob'", "]", ",", "\n", "to_return", "[", "'object_prob'", "]", ")", "\n", "if", "self", ".", "const", ".", "all_object_class_scores", "is", "True", ":", "\n", "            ", "object_prob_vecs", "=", "self", ".", "get_obj_prob_vec", "(", "\n", "global_id", ",", "\n", "to_return", "[", "'object_rpn_id'", "]", ")", "\n", "", "to_return", "[", "'human_prob_vec'", "]", "=", "human_prob_vecs", "\n", "to_return", "[", "'object_prob_vec'", "]", "=", "object_prob_vecs", "\n", "to_return", "[", "'object_one_hot'", "]", "=", "self", ".", "get_obj_one_hot", "(", "to_return", "[", "'hoi_id'", "]", ")", "\n", "to_return", "[", "'verb_one_hot'", "]", "=", "self", ".", "get_verb_one_hot", "(", "to_return", "[", "'hoi_id'", "]", ")", "\n", "to_return", "[", "'prob_mask'", "]", "=", "self", ".", "get_prob_mask", "(", "to_return", "[", "'hoi_idx'", "]", ")", "\n", "\n", "return", "to_return", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.hoi_candidates.HoiCandidatesGenerator.__init__": [[13, 16], ["hoi_candidates.HoiCandidatesGenerator.get_hoi_classes"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.hoi_candidates.HoiCandidatesGenerator.get_hoi_classes"], ["    ", "def", "__init__", "(", "self", ",", "data_const", ")", ":", "\n", "        ", "self", ".", "data_const", "=", "data_const", "\n", "self", ".", "hoi_classes", "=", "self", ".", "get_hoi_classes", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.hoi_candidates.HoiCandidatesGenerator.get_hoi_classes": [[17, 21], ["utils.load_json_object"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "get_hoi_classes", "(", "self", ")", ":", "\n", "        ", "hoi_list", "=", "io", ".", "load_json_object", "(", "self", ".", "data_const", ".", "hoi_list_json", ")", "\n", "hoi_classes", "=", "{", "hoi", "[", "'id'", "]", ":", "hoi", "for", "hoi", "in", "hoi_list", "}", "\n", "return", "hoi_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.hoi_candidates.HoiCandidatesGenerator.predict": [[22, 34], ["numpy.zeros", "hoi_candidates.HoiCandidatesGenerator.hoi_classes.items", "numpy.concatenate", "hoi_candidates.HoiCandidatesGenerator.predict_hoi", "numpy.concatenate.append", "len", "int"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.hoi_candidates.HoiCandidatesGenerator.predict_hoi"], ["", "def", "predict", "(", "self", ",", "selected_dets", ")", ":", "\n", "        ", "pred_hoi_dets", "=", "[", "]", "\n", "start_end_ids", "=", "np", ".", "zeros", "(", "[", "len", "(", "self", ".", "hoi_classes", ")", ",", "2", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "start_id", "=", "0", "\n", "for", "hoi_id", ",", "hoi_info", "in", "self", ".", "hoi_classes", ".", "items", "(", ")", ":", "\n", "            ", "dets", "=", "self", ".", "predict_hoi", "(", "selected_dets", ",", "hoi_info", ")", "\n", "pred_hoi_dets", ".", "append", "(", "dets", ")", "\n", "hoi_idx", "=", "int", "(", "hoi_id", ")", "-", "1", "\n", "start_end_ids", "[", "hoi_idx", ",", ":", "]", "=", "[", "start_id", ",", "start_id", "+", "dets", ".", "shape", "[", "0", "]", "]", "\n", "start_id", "+=", "dets", ".", "shape", "[", "0", "]", "\n", "", "pred_hoi_dets", "=", "np", ".", "concatenate", "(", "pred_hoi_dets", ")", "\n", "return", "pred_hoi_dets", ",", "start_end_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.hoi_candidates.HoiCandidatesGenerator.predict_hoi": [[35, 56], ["numpy.zeros", "range", "hoi_info[].split", "int", "range"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.split_ids.split"], ["", "def", "predict_hoi", "(", "self", ",", "selected_dets", ",", "hoi_info", ")", ":", "\n", "        ", "hoi_object", "=", "' '", ".", "join", "(", "hoi_info", "[", "'object'", "]", ".", "split", "(", "'_'", ")", ")", "\n", "human_boxes", "=", "selected_dets", "[", "'boxes'", "]", "[", "'person'", "]", "\n", "human_scores", "=", "selected_dets", "[", "'scores'", "]", "[", "'person'", "]", "\n", "human_rpn_ids", "=", "selected_dets", "[", "'rpn_ids'", "]", "[", "'person'", "]", "\n", "object_boxes", "=", "selected_dets", "[", "'boxes'", "]", "[", "hoi_object", "]", "\n", "object_scores", "=", "selected_dets", "[", "'scores'", "]", "[", "hoi_object", "]", "\n", "object_rpn_ids", "=", "selected_dets", "[", "'rpn_ids'", "]", "[", "hoi_object", "]", "\n", "num_hoi_dets", "=", "human_boxes", ".", "shape", "[", "0", "]", "*", "object_boxes", ".", "shape", "[", "0", "]", "\n", "hoi_dets", "=", "np", ".", "zeros", "(", "[", "num_hoi_dets", ",", "13", "]", ")", "\n", "hoi_idx", "=", "int", "(", "hoi_info", "[", "'id'", "]", ")", "-", "1", "\n", "hoi_dets", "[", ":", ",", "-", "1", "]", "=", "hoi_idx", "\n", "count", "=", "0", "\n", "for", "i", "in", "range", "(", "human_boxes", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "object_boxes", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "hoi_dets", "[", "count", ",", ":", "4", "]", "=", "human_boxes", "[", "i", "]", "\n", "hoi_dets", "[", "count", ",", "4", ":", "8", "]", "=", "object_boxes", "[", "j", "]", "\n", "hoi_dets", "[", "count", ",", "8", ":", "12", "]", "=", "[", "human_scores", "[", "i", "]", ",", "object_scores", "[", "j", "]", ",", "human_rpn_ids", "[", "i", "]", ",", "object_rpn_ids", "[", "j", "]", "]", "\n", "count", "+=", "1", "\n", "", "", "return", "hoi_dets", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.hoi_candidates.generate": [[58, 104], ["print", "utils.mkdir_if_not_exists", "utils.constants.save_constants", "print", "utils.load_json_object", "print", "hoi_candidates.HoiCandidatesGenerator", "print", "os.path.join", "h5py.File", "print", "h5py.File", "tqdm.tqdm", "h5py.File.close", "enumerate", "hoi_candidates.HoiCandidatesGenerator.predict", "h5py.File.create_group", "f[].create_dataset", "f[].create_dataset"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.constants.save_constants", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.hoi_candidates.HoiCandidatesGenerator.predict"], ["", "", "def", "generate", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "print", "(", "f'Creating exp_dir: {exp_const.exp_dir}'", ")", "\n", "io", ".", "mkdir_if_not_exists", "(", "exp_const", ".", "exp_dir", ")", "\n", "\n", "save_constants", "(", "{", "'exp'", ":", "exp_const", ",", "'data'", ":", "data_const", "}", ",", "exp_const", ".", "exp_dir", ")", "\n", "\n", "print", "(", "f'Reading split_ids.json ...'", ")", "\n", "split_ids", "=", "io", ".", "load_json_object", "(", "data_const", ".", "split_ids_json", ")", "\n", "\n", "print", "(", "'Creating an object-detector-only HOI detector ...'", ")", "\n", "hoi_cand_gen", "=", "HoiCandidatesGenerator", "(", "data_const", ")", "\n", "\n", "print", "(", "f'Creating a hoi_candidates_{exp_const.subset}.hdf5 file ...'", ")", "\n", "hoi_cand_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "f'hoi_candidates_{exp_const.subset}.hdf5'", ")", "\n", "f", "=", "h5py", ".", "File", "(", "hoi_cand_hdf5", ",", "'w'", ")", "\n", "\n", "print", "(", "'Reading selected dets from hdf5 file ...'", ")", "\n", "all_selected_dets", "=", "h5py", ".", "File", "(", "data_const", ".", "selected_dets_hdf5", ",", "'r'", ")", "\n", "\n", "for", "global_id", "in", "tqdm", "(", "split_ids", "[", "exp_const", ".", "subset", "]", ")", ":", "\n", "        ", "selected_dets", "=", "{", "\n", "'boxes'", ":", "{", "}", ",", "\n", "'scores'", ":", "{", "}", ",", "\n", "'rpn_ids'", ":", "{", "}", "\n", "}", "\n", "start_end_ids", "=", "all_selected_dets", "[", "global_id", "]", "[", "'start_end_ids'", "]", ".", "value", "\n", "boxes_scores_rpn_ids", "=", "all_selected_dets", "[", "global_id", "]", "[", "'boxes_scores_rpn_ids'", "]", ".", "value", "\n", "\n", "for", "cls_ind", ",", "cls_name", "in", "enumerate", "(", "COCO_CLASSES", ")", ":", "\n", "            ", "start_id", ",", "end_id", "=", "start_end_ids", "[", "cls_ind", "]", "\n", "boxes", "=", "boxes_scores_rpn_ids", "[", "start_id", ":", "end_id", ",", ":", "4", "]", "\n", "scores", "=", "boxes_scores_rpn_ids", "[", "start_id", ":", "end_id", ",", "4", "]", "\n", "rpn_ids", "=", "boxes_scores_rpn_ids", "[", "start_id", ":", "end_id", ",", "5", "]", "\n", "selected_dets", "[", "'boxes'", "]", "[", "cls_name", "]", "=", "boxes", "\n", "selected_dets", "[", "'scores'", "]", "[", "cls_name", "]", "=", "scores", "\n", "selected_dets", "[", "'rpn_ids'", "]", "[", "cls_name", "]", "=", "rpn_ids", "\n", "\n", "", "pred_dets", ",", "start_end_ids", "=", "hoi_cand_gen", ".", "predict", "(", "selected_dets", ")", "\n", "f", ".", "create_group", "(", "global_id", ")", "\n", "f", "[", "global_id", "]", ".", "create_dataset", "(", "\n", "'boxes_scores_rpn_ids_hoi_idx'", ",", "data", "=", "pred_dets", ")", "\n", "f", "[", "global_id", "]", ".", "create_dataset", "(", "'start_end_ids'", ",", "data", "=", "start_end_ids", ")", "\n", "\n", "", "f", ".", "close", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.label_hoi_candidates.load_gt_dets": [[11, 38], ["set", "print", "utils.load_json_object", "[].append"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["def", "load_gt_dets", "(", "anno_list_json", ",", "global_ids", ")", ":", "\n", "    ", "global_ids_set", "=", "set", "(", "global_ids", ")", "\n", "\n", "# Load anno_list", "\n", "print", "(", "'Loading anno_list.json ...'", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "anno_list_json", ")", "\n", "\n", "gt_dets", "=", "{", "}", "\n", "for", "anno", "in", "anno_list", ":", "\n", "        ", "if", "anno", "[", "'global_id'", "]", "not", "in", "global_ids_set", ":", "\n", "            ", "continue", "\n", "\n", "", "global_id", "=", "anno", "[", "'global_id'", "]", "\n", "gt_dets", "[", "global_id", "]", "=", "{", "}", "\n", "for", "hoi", "in", "anno", "[", "'hois'", "]", ":", "\n", "            ", "hoi_id", "=", "hoi", "[", "'id'", "]", "\n", "gt_dets", "[", "global_id", "]", "[", "hoi_id", "]", "=", "[", "]", "\n", "for", "human_box_num", ",", "object_box_num", "in", "hoi", "[", "'connections'", "]", ":", "\n", "                ", "human_box", "=", "hoi", "[", "'human_bboxes'", "]", "[", "human_box_num", "]", "\n", "object_box", "=", "hoi", "[", "'object_bboxes'", "]", "[", "object_box_num", "]", "\n", "det", "=", "{", "\n", "'human_box'", ":", "human_box", ",", "\n", "'object_box'", ":", "object_box", ",", "\n", "}", "\n", "gt_dets", "[", "global_id", "]", "[", "hoi_id", "]", ".", "append", "(", "det", ")", "\n", "\n", "", "", "", "return", "gt_dets", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.label_hoi_candidates.match_hoi": [[40, 51], ["utils.bbox_utils.compute_iou", "utils.bbox_utils.compute_iou"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou"], ["", "def", "match_hoi", "(", "pred_det", ",", "gt_dets", ")", ":", "\n", "    ", "is_match", "=", "False", "\n", "for", "gt_det", "in", "gt_dets", ":", "\n", "        ", "human_iou", "=", "compute_iou", "(", "pred_det", "[", "'human_box'", "]", ",", "gt_det", "[", "'human_box'", "]", ")", "\n", "if", "human_iou", ">", "0.5", ":", "\n", "            ", "object_iou", "=", "compute_iou", "(", "pred_det", "[", "'object_box'", "]", ",", "gt_det", "[", "'object_box'", "]", ")", "\n", "if", "object_iou", ">", "0.5", ":", "\n", "                ", "is_match", "=", "True", "\n", "break", "\n", "\n", "", "", "", "return", "is_match", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.label_hoi_candidates.assign": [[53, 97], ["utils.mkdir_if_not_exists", "print", "utils.constants.save_constants", "print", "h5py.File", "print", "os.path.join", "h5py.File", "print", "utils.load_json_object", "label_hoi_candidates.load_gt_dets", "print", "utils.load_json_object", "tqdm.tqdm", "h5py.File.close", "numpy.zeros", "h5py.File.create_dataset", "range", "label_hoi_candidates.match_hoi", "int"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.constants.save_constants", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.label_hoi_candidates.load_gt_dets", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.label_hoi_candidates.match_hoi"], ["", "def", "assign", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "io", ".", "mkdir_if_not_exists", "(", "exp_const", ".", "exp_dir", ")", "\n", "\n", "print", "(", "'Saving constants ...'", ")", "\n", "save_constants", "(", "{", "'exp'", ":", "exp_const", ",", "'data'", ":", "data_const", "}", ",", "exp_const", ".", "exp_dir", ")", "\n", "\n", "print", "(", "f'Reading hoi_candidates_{exp_const.subset}.hdf5 ...'", ")", "\n", "hoi_cand_hdf5", "=", "h5py", ".", "File", "(", "data_const", ".", "hoi_cand_hdf5", ",", "'r'", ")", "\n", "\n", "print", "(", "f'Creating hoi_candidate_labels_{exp_const.subset}.hdf5 ...'", ")", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'hoi_candidate_labels_{exp_const.subset}.hdf5'", ")", "\n", "hoi_cand_label_hdf5", "=", "h5py", ".", "File", "(", "filename", ",", "'w'", ")", "\n", "\n", "print", "(", "'Loading gt hoi detections ...'", ")", "\n", "split_ids", "=", "io", ".", "load_json_object", "(", "data_const", ".", "split_ids_json", ")", "\n", "global_ids", "=", "split_ids", "[", "exp_const", ".", "subset", "]", "\n", "gt_dets", "=", "load_gt_dets", "(", "data_const", ".", "anno_list_json", ",", "global_ids", ")", "\n", "\n", "print", "(", "'Loading hoi_list.json ...'", ")", "\n", "hoi_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "hoi_list_json", ")", "\n", "hoi_ids", "=", "[", "hoi", "[", "'id'", "]", "for", "hoi", "in", "hoi_list", "]", "\n", "\n", "for", "global_id", "in", "tqdm", "(", "global_ids", ")", ":", "\n", "        ", "boxes_scores_rpn_ids_hoi_idx", "=", "hoi_cand_hdf5", "[", "global_id", "]", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "\n", "start_end_ids", "=", "hoi_cand_hdf5", "[", "global_id", "]", "[", "'start_end_ids'", "]", "\n", "num_cand", "=", "boxes_scores_rpn_ids_hoi_idx", ".", "shape", "[", "0", "]", "\n", "labels", "=", "np", ".", "zeros", "(", "[", "num_cand", "]", ")", "\n", "for", "hoi_id", "in", "gt_dets", "[", "global_id", "]", ":", "\n", "            ", "start_id", ",", "end_id", "=", "start_end_ids", "[", "int", "(", "hoi_id", ")", "-", "1", "]", "\n", "for", "i", "in", "range", "(", "start_id", ",", "end_id", ")", ":", "\n", "                ", "cand_det", "=", "{", "\n", "'human_box'", ":", "boxes_scores_rpn_ids_hoi_idx", "[", "i", ",", ":", "4", "]", ",", "\n", "'object_box'", ":", "boxes_scores_rpn_ids_hoi_idx", "[", "i", ",", "4", ":", "8", "]", ",", "\n", "}", "\n", "is_match", "=", "match_hoi", "(", "cand_det", ",", "gt_dets", "[", "global_id", "]", "[", "hoi_id", "]", ")", "\n", "if", "is_match", ":", "\n", "                    ", "labels", "[", "i", "]", "=", "1.0", "\n", "\n", "", "", "", "hoi_cand_label_hdf5", ".", "create_dataset", "(", "global_id", ",", "data", "=", "labels", ")", "\n", "\n", "", "hoi_cand_label_hdf5", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.cache_box_features.compute_box_feats": [[11, 22], ["exp.hoi_classifier.data.box_features.BoxFeatures", "numpy.array", "numpy.tile", "exp.hoi_classifier.data.box_features.BoxFeatures.compute_features", "float"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.box_features.BoxFeatures.compute_features"], ["def", "compute_box_feats", "(", "human_boxes", ",", "object_boxes", ",", "img_size", ")", ":", "\n", "    ", "feat_extractor", "=", "BoxFeatures", "(", ")", "\n", "num_cand", "=", "human_boxes", ".", "shape", "[", "0", "]", "\n", "imh", ",", "imw", "=", "[", "float", "(", "v", ")", "for", "v", "in", "img_size", "[", ":", "2", "]", "]", "\n", "im_wh", "=", "np", ".", "array", "(", "[", "[", "imw", ",", "imh", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "im_wh", "=", "np", ".", "tile", "(", "im_wh", ",", "(", "num_cand", ",", "1", ")", ")", "\n", "feats", "=", "feat_extractor", ".", "compute_features", "(", "\n", "human_boxes", ",", "\n", "object_boxes", ",", "\n", "im_wh", ")", "\n", "return", "feats", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.cache_box_features.main": [[24, 44], ["h5py.File", "os.path.join", "h5py.File", "utils.load_json_object", "tqdm.tqdm", "h5py.File.close", "h5py.File.keys", "cache_box_features.compute_box_feats", "h5py.File.create_dataset"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.cache_box_features.compute_box_feats"], ["", "def", "main", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "hoi_cands", "=", "h5py", ".", "File", "(", "data_const", ".", "hoi_cand_hdf5", ",", "'r'", ")", "\n", "\n", "box_feats_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'hoi_candidates_box_feats_{exp_const.subset}.hdf5'", ")", "\n", "box_feats", "=", "h5py", ".", "File", "(", "box_feats_hdf5", ",", "'w'", ")", "\n", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "anno_dict", "=", "{", "anno", "[", "'global_id'", "]", ":", "anno", "for", "anno", "in", "anno_list", "}", "\n", "\n", "for", "global_id", "in", "tqdm", "(", "hoi_cands", ".", "keys", "(", ")", ")", ":", "\n", "        ", "img_hoi_cands", "=", "hoi_cands", "[", "global_id", "]", "\n", "human_boxes", "=", "img_hoi_cands", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "[", ":", ",", ":", "4", "]", "\n", "object_boxes", "=", "img_hoi_cands", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "[", ":", ",", "4", ":", "8", "]", "\n", "img_size", "=", "anno_dict", "[", "global_id", "]", "[", "'image_size'", "]", "[", ":", "2", "]", "\n", "feats", "=", "compute_box_feats", "(", "human_boxes", ",", "object_boxes", ",", "img_size", ")", "\n", "box_feats", ".", "create_dataset", "(", "global_id", ",", "data", "=", "feats", ")", "\n", "\n", "", "box_feats", ".", "close", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.write_faster_rcnn_feats_to_hdf5.main": [[10, 24], ["data.hico.hico_constants.HicoConstants", "utils.load_json_object", "os.path.join", "h5py.File", "tqdm.tqdm", "h5py.File.close", "os.path.join", "numpy.load", "h5py.File.create_dataset"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close"], ["def", "main", "(", ")", ":", "\n", "    ", "data_const", "=", "HicoConstants", "(", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "global_ids", "=", "[", "anno", "[", "'global_id'", "]", "for", "anno", "in", "anno_list", "]", "\n", "feats_hdf5", "=", "os", ".", "path", ".", "join", "(", "data_const", ".", "proc_dir", ",", "'faster_rcnn_fc7.hdf5'", ")", "\n", "feats", "=", "h5py", ".", "File", "(", "feats_hdf5", ",", "'w'", ")", "\n", "for", "global_id", "in", "tqdm", "(", "global_ids", ")", ":", "\n", "        ", "fc7_npy", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "faster_rcnn_boxes", ",", "\n", "f'{global_id}_fc7.npy'", ")", "\n", "fc7", "=", "np", ".", "load", "(", "fc7_npy", ")", "\n", "feats", ".", "create_dataset", "(", "global_id", ",", "data", "=", "fc7", ")", "\n", "\n", "", "feats", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.assign_pose_to_human_candidates.get_pose_box": [[10, 19], ["numpy.amin", "numpy.amax", "numpy.array", "numpy.any", "numpy.zeros"], "function", ["None"], ["def", "get_pose_box", "(", "pose", ")", ":", "\n", "    ", "valid_mask", "=", "pose", "[", ":", ",", "2", "]", ">", "0", "# consider points with non-zero confidence", "\n", "if", "not", "np", ".", "any", "(", "valid_mask", ")", ":", "\n", "        ", "return", "np", ".", "zeros", "(", "[", "4", "]", ")", "\n", "", "keypoints", "=", "pose", "[", "valid_mask", ",", ":", "2", "]", "\n", "x1", ",", "y1", "=", "np", ".", "amin", "(", "keypoints", ",", "0", ")", "\n", "x2", ",", "y2", "=", "np", ".", "amax", "(", "keypoints", ",", "0", ")", "\n", "box", "=", "np", ".", "array", "(", "[", "x1", ",", "y1", ",", "x2", ",", "y2", "]", ")", "\n", "return", "box", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.assign_pose_to_human_candidates.count_keypoints_in_box": [[21, 23], ["None"], "function", ["None"], ["", "def", "count_keypoints_in_box", "(", "keypoints", ",", "box", ")", ":", "\n", "    ", "x1", ",", "y1", ",", "x2", ",", "y2", "=", "box", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.assign_pose_to_human_candidates.assign_pose": [[25, 44], ["enumerate", "utils.bbox_utils.compute_iou", "utils.bbox_utils.compute_area", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area"], ["", "def", "assign_pose", "(", "human_box", ",", "pose_boxes", ",", "pose_keypoints", ",", "num_keypoints", ")", ":", "\n", "    ", "max_idx", "=", "-", "1", "\n", "max_frac_inside", "=", "0.7", "\n", "found_match", "=", "False", "\n", "for", "i", ",", "pose_box", "in", "enumerate", "(", "pose_boxes", ")", ":", "\n", "        ", "iou", ",", "intersection", ",", "union", "=", "compute_iou", "(", "human_box", ",", "pose_box", ",", "True", ")", "\n", "pose_area", "=", "compute_area", "(", "pose_box", ")", "\n", "frac_inside", "=", "intersection", "/", "pose_area", "\n", "if", "frac_inside", ">", "max_frac_inside", ":", "\n", "            ", "max_frac_inside", "=", "frac_inside", "\n", "max_idx", "=", "i", "\n", "found_match", "=", "True", "\n", "\n", "", "", "if", "max_idx", "==", "-", "1", ":", "\n", "        ", "keypoints", "=", "np", ".", "zeros", "(", "[", "num_keypoints", ",", "3", "]", ")", "\n", "", "else", ":", "\n", "        ", "keypoints", "=", "pose_keypoints", "[", "max_idx", "]", "\n", "\n", "", "return", "keypoints", ",", "found_match", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.assign_pose_to_human_candidates.main": [[46, 100], ["print", "utils.load_json_object", "print", "os.path.join", "h5py.File", "print", "h5py.File", "tqdm.tqdm", "print", "h5py.File.close", "h5py.File.close", "os.path.join", "range", "h5py.File.create_group", "rpn_id_to_pose.items", "numpy.reshape", "assign_pose_to_human_candidates.get_pose_box", "str", "human_cand_pose[].create_dataset", "numpy.array", "int", "assign_pose_to_human_candidates.assign_pose", "utils.load_json_object"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.assign_pose_to_human_candidates.get_pose_box", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.assign_pose_to_human_candidates.assign_pose", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object"], ["", "def", "main", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "print", "(", "f'Reading split_ids.json ...'", ")", "\n", "split_ids", "=", "io", ".", "load_json_object", "(", "data_const", ".", "split_ids_json", ")", "\n", "\n", "print", "(", "f'Creating a human_candidates_pose_{exp_const.subset}.hdf5 file ...'", ")", "\n", "human_cand_pose_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "f'human_candidates_pose_{exp_const.subset}.hdf5'", ")", "\n", "human_cand_pose", "=", "h5py", ".", "File", "(", "human_cand_pose_hdf5", ",", "'w'", ")", "\n", "\n", "print", "(", "f'Reading hoi_candidates_{exp_const.subset}.hdf5 file ...'", ")", "\n", "hoi_cand", "=", "h5py", ".", "File", "(", "data_const", ".", "hoi_cand_hdf5", ",", "'r'", ")", "\n", "count_assignments", "=", "0", "\n", "for", "global_id", "in", "tqdm", "(", "split_ids", "[", "exp_const", ".", "subset", "]", ")", ":", "\n", "        ", "boxes_scores_rpn_ids_hoi_idx", "=", "hoi_cand", "[", "global_id", "]", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "\n", "human_boxes", "=", "boxes_scores_rpn_ids_hoi_idx", "[", ":", ",", ":", "4", "]", "\n", "human_rpn_ids", "=", "boxes_scores_rpn_ids_hoi_idx", "[", ":", ",", "10", "]", "\n", "num_cand", "=", "human_boxes", ".", "shape", "[", "0", "]", "\n", "\n", "if", "'test'", "in", "global_id", ":", "\n", "            ", "pose_prefix", "=", "'test2015/'", "\n", "", "else", ":", "\n", "            ", "pose_prefix", "=", "'train2015/'", "\n", "", "pose_json", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "human_pose_dir", ",", "\n", "f'{pose_prefix}{global_id}_keypoints.json'", ")", "\n", "\n", "human_poses", "=", "[", "\n", "np", ".", "reshape", "(", "np", ".", "array", "(", "pose", "[", "'pose_keypoints_2d'", "]", ")", ",", "(", "-", "1", ",", "3", ")", ")", "\n", "for", "pose", "in", "io", ".", "load_json_object", "(", "pose_json", ")", "[", "'people'", "]", "]", "\n", "pose_boxes", "=", "[", "get_pose_box", "(", "pose", ")", "for", "pose", "in", "human_poses", "]", "\n", "\n", "rpn_id_to_pose", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "num_cand", ")", ":", "\n", "            ", "rpn_id", "=", "str", "(", "int", "(", "human_rpn_ids", "[", "i", "]", ")", ")", "\n", "if", "rpn_id", "in", "rpn_id_to_pose", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "rpn_id_to_pose", "[", "rpn_id", "]", ",", "match_status", "=", "assign_pose", "(", "\n", "human_boxes", "[", "i", "]", ",", "\n", "pose_boxes", ",", "\n", "human_poses", ",", "\n", "data_const", ".", "num_keypoints", ")", "\n", "if", "match_status", ":", "\n", "                    ", "count_assignments", "+=", "1", "\n", "\n", "", "", "", "human_cand_pose", ".", "create_group", "(", "global_id", ")", "\n", "for", "rpn_id", ",", "pose", "in", "rpn_id_to_pose", ".", "items", "(", ")", ":", "\n", "            ", "human_cand_pose", "[", "global_id", "]", ".", "create_dataset", "(", "rpn_id", ",", "data", "=", "pose", ")", "\n", "\n", "", "", "print", "(", "f'Number of assignments: {count_assignments}'", ")", "\n", "\n", "human_cand_pose", ".", "close", "(", ")", "\n", "hoi_cand", ".", "close", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.cache_pose_features.main": [[12, 52], ["h5py.File", "h5py.File", "os.path.join", "h5py.File", "utils.load_json_object", "exp.hoi_classifier.data.pose_features.PoseFeatures", "tqdm.tqdm", "h5py.File.close", "h5py.File.keys", "exp.hoi_classifier.data.pose_features.PoseFeatures.rpn_id_to_pose_h5py_to_npy", "numpy.array", "numpy.tile", "exp.hoi_classifier.data.pose_features.PoseFeatures.compute_pose_feats", "h5py.File.create_group", "human_pose_feats[].create_dataset", "human_pose_feats[].create_dataset", "float"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.rpn_id_to_pose_h5py_to_npy", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.compute_pose_feats"], ["def", "main", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "hoi_cands", "=", "h5py", ".", "File", "(", "data_const", ".", "hoi_cand_hdf5", ",", "'r'", ")", "\n", "human_cands_pose", "=", "h5py", ".", "File", "(", "data_const", ".", "human_cands_pose_hdf5", ",", "'r'", ")", "\n", "\n", "human_pose_feats_hdf5", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'human_pose_feats_{exp_const.subset}.hdf5'", ")", "\n", "human_pose_feats", "=", "h5py", ".", "File", "(", "human_pose_feats_hdf5", ",", "'w'", ")", "\n", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "anno_dict", "=", "{", "anno", "[", "'global_id'", "]", ":", "anno", "for", "anno", "in", "anno_list", "}", "\n", "\n", "pose_feat_computer", "=", "PoseFeatures", "(", "num_keypts", "=", "data_const", ".", "num_keypoints", ")", "\n", "for", "global_id", "in", "tqdm", "(", "hoi_cands", ".", "keys", "(", ")", ")", ":", "\n", "        ", "img_hoi_cands", "=", "hoi_cands", "[", "global_id", "]", "\n", "human_boxes", "=", "img_hoi_cands", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "[", ":", ",", ":", "4", "]", "\n", "object_boxes", "=", "img_hoi_cands", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "[", ":", ",", "4", ":", "8", "]", "\n", "human_rpn_ids", "=", "img_hoi_cands", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "[", ":", ",", "10", "]", "\n", "rpn_id_to_pose", "=", "pose_feat_computer", ".", "rpn_id_to_pose_h5py_to_npy", "(", "\n", "human_cands_pose", "[", "global_id", "]", ")", "\n", "img_size", "=", "anno_dict", "[", "global_id", "]", "[", "'image_size'", "]", "[", ":", "2", "]", "\n", "imh", ",", "imw", "=", "[", "float", "(", "v", ")", "for", "v", "in", "img_size", "[", ":", "2", "]", "]", "\n", "im_wh", "=", "np", ".", "array", "(", "[", "[", "imw", ",", "imh", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "num_cand", "=", "human_boxes", ".", "shape", "[", "0", "]", "\n", "im_wh", "=", "np", ".", "tile", "(", "im_wh", ",", "(", "num_cand", ",", "1", ")", ")", "\n", "feats", "=", "pose_feat_computer", ".", "compute_pose_feats", "(", "\n", "human_boxes", ",", "\n", "object_boxes", ",", "\n", "human_rpn_ids", ",", "\n", "rpn_id_to_pose", ",", "\n", "im_wh", ")", "\n", "human_pose_feats", ".", "create_group", "(", "global_id", ")", "\n", "human_pose_feats", "[", "global_id", "]", ".", "create_dataset", "(", "\n", "'absolute_pose'", ",", "\n", "data", "=", "feats", "[", "'absolute_pose'", "]", ")", "\n", "human_pose_feats", "[", "global_id", "]", ".", "create_dataset", "(", "\n", "'relative_pose'", ",", "\n", "data", "=", "feats", "[", "'relative_pose'", "]", ")", "\n", "\n", "", "human_pose_feats", ".", "close", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.__init__": [[10, 12], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "num_keypts", "=", "18", ")", ":", "\n", "        ", "self", ".", "num_keypts", "=", "num_keypts", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.rpn_id_to_pose_h5py_to_npy": [[13, 18], ["rpn_id_to_pose_h5py.keys"], "methods", ["None"], ["", "def", "rpn_id_to_pose_h5py_to_npy", "(", "self", ",", "rpn_id_to_pose_h5py", ")", ":", "\n", "        ", "rpn_id_to_pose_npy", "=", "{", "}", "\n", "for", "rpn_id", "in", "rpn_id_to_pose_h5py", ".", "keys", "(", ")", ":", "\n", "            ", "rpn_id_to_pose_npy", "[", "rpn_id", "]", "=", "rpn_id_to_pose_h5py", "[", "rpn_id", "]", "[", "(", ")", "]", "\n", "", "return", "rpn_id_to_pose_npy", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.get_keypoints": [[19, 27], ["numpy.zeros", "range", "str", "int"], "methods", ["None"], ["", "def", "get_keypoints", "(", "self", ",", "rpn_ids", ",", "rpn_id_to_pose", ")", ":", "\n", "        ", "num_cand", "=", "rpn_ids", ".", "shape", "[", "0", "]", "\n", "keypts", "=", "np", ".", "zeros", "(", "[", "num_cand", ",", "self", ".", "num_keypts", ",", "3", "]", ")", "\n", "for", "i", "in", "range", "(", "num_cand", ")", ":", "\n", "            ", "rpn_id", "=", "str", "(", "int", "(", "rpn_ids", "[", "i", "]", ")", ")", "\n", "keypts_", "=", "rpn_id_to_pose", "[", "rpn_id", "]", "\n", "keypts", "[", "i", "]", "=", "keypts_", "\n", "", "return", "keypts", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.compute_bbox_wh": [[28, 34], ["numpy.zeros"], "methods", ["None"], ["", "def", "compute_bbox_wh", "(", "self", ",", "bbox", ")", ":", "\n", "        ", "num_boxes", "=", "bbox", ".", "shape", "[", "0", "]", "\n", "wh", "=", "np", ".", "zeros", "(", "[", "num_boxes", ",", "2", "]", ")", "\n", "wh", "[", ":", ",", "0", "]", "=", "(", "bbox", "[", ":", ",", "2", "]", "-", "bbox", "[", ":", ",", "0", "]", ")", "\n", "wh", "[", ":", ",", "1", "]", "=", "(", "bbox", "[", ":", ",", "3", "]", "-", "bbox", "[", ":", ",", "1", "]", ")", "\n", "return", "wh", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.encode_pose": [[35, 42], ["pose_features.PoseFeatures.compute_bbox_wh", "numpy.tile", "numpy.tile", "copy.deepcopy"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.compute_bbox_wh"], ["", "def", "encode_pose", "(", "self", ",", "keypts", ",", "human_box", ")", ":", "\n", "        ", "wh", "=", "self", ".", "compute_bbox_wh", "(", "human_box", ")", "# Bx2", "\n", "wh", "=", "np", ".", "tile", "(", "wh", "[", ":", ",", "np", ".", "newaxis", ",", ":", "]", ",", "(", "1", ",", "self", ".", "num_keypts", ",", "1", ")", ")", "# Bx18x2", "\n", "xy", "=", "np", ".", "tile", "(", "human_box", "[", ":", ",", "np", ".", "newaxis", ",", ":", "2", "]", ",", "(", "1", ",", "self", ".", "num_keypts", ",", "1", ")", ")", "# Bx18x2", "\n", "pose", "=", "copy", ".", "deepcopy", "(", "keypts", ")", "# Bx18x3", "\n", "pose", "[", ":", ",", ":", ",", ":", "2", "]", "=", "(", "pose", "[", ":", ",", ":", ",", ":", "2", "]", "-", "xy", ")", "/", "(", "wh", "+", "1e-6", ")", "\n", "return", "pose", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.encode_relative_pose": [[43, 55], ["copy.deepcopy", "numpy.tile", "numpy.tile"], "methods", ["None"], ["", "def", "encode_relative_pose", "(", "self", ",", "keypts", ",", "object_box", ",", "im_wh", ")", ":", "\n", "        ", "keypts_", "=", "copy", ".", "deepcopy", "(", "keypts", ")", "\n", "keypts_", "[", ":", ",", ":", ",", ":", "2", "]", "=", "keypts_", "[", ":", ",", ":", ",", ":", "2", "]", "/", "im_wh", "\n", "x1y1", "=", "object_box", "[", ":", ",", ":", "2", "]", "\n", "x1y1", "=", "np", ".", "tile", "(", "x1y1", "[", ":", ",", "np", ".", "newaxis", ",", ":", "]", ",", "(", "1", ",", "self", ".", "num_keypts", ",", "1", ")", ")", "\n", "x1y1", "=", "x1y1", "/", "im_wh", "\n", "x2y2", "=", "object_box", "[", ":", ",", "2", ":", "4", "]", "\n", "x2y2", "=", "np", ".", "tile", "(", "x2y2", "[", ":", ",", "np", ".", "newaxis", ",", ":", "]", ",", "(", "1", ",", "self", ".", "num_keypts", ",", "1", ")", ")", "\n", "x2y2", "=", "x2y2", "/", "im_wh", "\n", "x1y1_wrt_keypts", "=", "x1y1", "-", "keypts_", "[", ":", ",", ":", ",", ":", "2", "]", "# Bx18x2", "\n", "x2y2_wrt_keypts", "=", "x2y2", "-", "keypts_", "[", ":", ",", ":", ",", ":", "2", "]", "# Bx18x2", "\n", "return", "x1y1_wrt_keypts", ",", "x2y2_wrt_keypts", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.compute_pose_feats": [[56, 84], ["numpy.tile", "pose_features.PoseFeatures.get_keypoints", "pose_features.PoseFeatures.encode_pose", "time.time", "numpy.reshape", "pose_features.PoseFeatures.encode_relative_pose", "numpy.concatenate", "numpy.reshape"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.get_keypoints", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.encode_pose", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.data.pose_features.PoseFeatures.encode_relative_pose"], ["", "def", "compute_pose_feats", "(", "\n", "self", ",", "\n", "human_bbox", ",", "\n", "object_bbox", ",", "\n", "rpn_ids", ",", "\n", "rpn_id_to_pose", ",", "\n", "im_wh", ")", ":", "\n", "        ", "B", "=", "human_bbox", ".", "shape", "[", "0", "]", "\n", "im_wh", "=", "np", ".", "tile", "(", "im_wh", "[", ":", ",", "np", ".", "newaxis", ",", ":", "]", ",", "(", "1", ",", "self", ".", "num_keypts", ",", "1", ")", ")", "\n", "keypts", "=", "self", ".", "get_keypoints", "(", "rpn_ids", ",", "rpn_id_to_pose", ")", "\n", "absolute_pose", "=", "self", ".", "encode_pose", "(", "keypts", ",", "human_bbox", ")", "# Bx18x3", "\n", "keypts_conf", "=", "absolute_pose", "[", ":", ",", ":", ",", "2", "]", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "# Bx18x1", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "absolute_pose", "=", "np", ".", "reshape", "(", "absolute_pose", ",", "(", "B", ",", "-", "1", ")", ")", "# Bx54", "\n", "x1y1_wrt_keypts", ",", "x2y2_wrt_keypts", "=", "self", ".", "encode_relative_pose", "(", "\n", "keypts", ",", "\n", "object_bbox", ",", "\n", "im_wh", ")", "\n", "relative_pose", "=", "np", ".", "concatenate", "(", "(", "\n", "x1y1_wrt_keypts", ",", "\n", "x2y2_wrt_keypts", ",", "\n", "keypts_conf", ")", ",", "2", ")", "\n", "relative_pose", "=", "np", ".", "reshape", "(", "relative_pose", ",", "(", "B", ",", "-", "1", ")", ")", "\n", "feats", "=", "{", "\n", "'absolute_pose'", ":", "absolute_pose", ",", "# Bx54", "\n", "'relative_pose'", ":", "relative_pose", ",", "# Bx90 (18*2 + 18*2 + 18)", "\n", "}", "\n", "return", "feats", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.vis_interaction_aps_per_object.main": [[10, 150], ["os.path.join", "os.path.join", "data.hico.hico_constants.HicoConstants", "utils.load_json_object", "obj_to_hoi_id.keys", "sorted", "sorted", "len", "enumerate", "plotly.Scatter", "plotly.Layout", "os.path.join", "plotly.offline.plot", "plotly.offline.plot", "enumerate", "plotly.Scatter", "plotly.Layout", "os.path.join", "plotly.offline.plot", "plotly.offline.plot", "os.getcwd", "utils.load_json_object", "obj_to_hoi_id[].append", "sorted.append", "sorted.append", "plotly.Box", "data.append", "obj_aps_x.append", "obj_aps_y.append", "obj_interaction_aps.append", "numpy.linspace", "dict", "dict", "dict", "dict", "plotly.Margin", "corr_x.append", "corr_y.append", "dict", "dict", "dict", "plotly.Margin", "numpy.median", "obj.split", "str", "obj.split", "dict", "dict"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.split_ids.split", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.split_ids.split"], ["def", "main", "(", ")", ":", "\n", "    ", "exp_name", "=", "'factors_101_glove_generalize3_FC2_MTLv1_MoE_distillation2_600'", "\n", "exp_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "f'data_symlinks/hico_exp/hoi_classifier/{exp_name}'", ")", "\n", "\n", "map_json", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_dir", ",", "\n", "'mAP_eval/test_65000/mAP.json'", ")", "\n", "\n", "hoi_aps", "=", "io", ".", "load_json_object", "(", "map_json", ")", "[", "'AP'", "]", "\n", "\n", "data_const", "=", "HicoConstants", "(", ")", "\n", "hoi_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "hoi_list_json", ")", "\n", "\n", "obj_to_hoi_id", "=", "{", "}", "\n", "for", "hoi", "in", "hoi_list", ":", "\n", "        ", "hoi_id", "=", "hoi", "[", "'id'", "]", "\n", "obj", "=", "hoi", "[", "'object'", "]", "\n", "if", "obj", "not", "in", "obj_to_hoi_id", ":", "\n", "            ", "obj_to_hoi_id", "[", "obj", "]", "=", "[", "]", "\n", "", "obj_to_hoi_id", "[", "obj", "]", ".", "append", "(", "hoi_id", ")", "\n", "\n", "", "obj_aps", "=", "[", "]", "\n", "for", "obj", "in", "obj_to_hoi_id", ".", "keys", "(", ")", ":", "\n", "        ", "obj_aps", ".", "append", "(", "(", "obj", ",", "COCO_CLS_TO_FASTER_RCNN_AP", "[", "obj", "]", ")", ")", "\n", "\n", "", "obj_aps", "=", "sorted", "(", "obj_aps", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", "\n", "\n", "per_obj_hoi_aps", "=", "[", "]", "\n", "for", "obj", ",", "obj_ap", "in", "obj_aps", ":", "\n", "        ", "obj_interaction_aps", "=", "[", "]", "\n", "for", "hoi_id", "in", "obj_to_hoi_id", "[", "obj", "]", ":", "\n", "            ", "obj_interaction_aps", ".", "append", "(", "hoi_aps", "[", "hoi_id", "]", "*", "100", ")", "\n", "\n", "", "per_obj_hoi_aps", ".", "append", "(", "(", "obj", ",", "obj_interaction_aps", ")", ")", "\n", "\n", "", "per_obj_hoi_aps", "=", "sorted", "(", "per_obj_hoi_aps", ",", "key", "=", "lambda", "x", ":", "np", ".", "median", "(", "x", "[", "1", "]", ")", ")", "\n", "\n", "N", "=", "len", "(", "per_obj_hoi_aps", ")", "\n", "c", "=", "[", "'hsl('", "+", "str", "(", "h", ")", "+", "',50%'", "+", "',50%)'", "for", "h", "in", "np", ".", "linspace", "(", "0", ",", "360", ",", "N", ")", "]", "\n", "data", "=", "[", "]", "\n", "obj_aps_x", "=", "[", "]", "\n", "obj_aps_y", "=", "[", "]", "\n", "for", "i", ",", "(", "obj", ",", "aps", ")", "in", "enumerate", "(", "per_obj_hoi_aps", ")", ":", "\n", "        ", "trace", "=", "go", ".", "Box", "(", "\n", "y", "=", "aps", ",", "\n", "name", "=", "\" \"", ".", "join", "(", "obj", ".", "split", "(", "\"_\"", ")", ")", ",", "\n", "boxpoints", "=", "False", ",", "#\"outliers\"", "\n", "marker", "=", "{", "'color'", ":", "c", "[", "i", "]", "}", ",", "\n", "line", "=", "{", "'width'", ":", "1", "}", "\n", ")", "\n", "data", ".", "append", "(", "trace", ")", "\n", "obj_aps_x", ".", "append", "(", "\" \"", ".", "join", "(", "obj", ".", "split", "(", "\"_\"", ")", ")", ")", "\n", "obj_aps_y", ".", "append", "(", "COCO_CLS_TO_FASTER_RCNN_AP", "[", "obj", "]", "*", "100", ")", "\n", "\n", "", "line_char_trace", "=", "go", ".", "Scatter", "(", "\n", "x", "=", "obj_aps_x", ",", "\n", "y", "=", "obj_aps_y", ",", "\n", "mode", "=", "'lines+markers'", ",", "\n", "line", "=", "dict", "(", "\n", "color", "=", "(", "'rgba(150, 150, 200, 1)'", ")", ",", "\n", "width", "=", "1", ",", ")", ",", "\n", "#dash = 'dash'),", "\n", "marker", "=", "dict", "(", "size", "=", "4", ")", ")", "\n", "#data.append(line_char_trace)", "\n", "\n", "layout", "=", "go", ".", "Layout", "(", "\n", "yaxis", "=", "dict", "(", "\n", "title", "=", "'AP of HOI Categories'", ",", "\n", "range", "=", "[", "0", ",", "100", "]", ",", "\n", ")", ",", "\n", "xaxis", "=", "dict", "(", "\n", "title", "=", "'Objects'", ",", "\n", "tickangle", "=", "45", ",", "\n", "tickfont", "=", "dict", "(", "\n", "size", "=", "12", ",", "\n", ")", ",", "\n", ")", ",", "\n", "height", "=", "500", ",", "\n", "margin", "=", "go", ".", "Margin", "(", "\n", "l", "=", "100", ",", "\n", "r", "=", "100", ",", "\n", "b", "=", "150", ",", "\n", "t", "=", "50", ",", "\n", ")", "\n", ")", "\n", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "exp_dir", ",", "'vis/interaction_aps_per_object.html'", ")", "\n", "plotly", ".", "offline", ".", "plot", "(", "\n", "{", "'data'", ":", "data", ",", "'layout'", ":", "layout", "}", ",", "\n", "filename", "=", "filename", ",", "\n", "auto_open", "=", "False", ")", "\n", "\n", "corr_x", "=", "[", "]", "\n", "corr_y", "=", "[", "]", "\n", "for", "i", ",", "(", "obj", ",", "aps", ")", "in", "enumerate", "(", "per_obj_hoi_aps", ")", ":", "\n", "        ", "obj_ap", "=", "COCO_CLS_TO_FASTER_RCNN_AP", "[", "obj", "]", "*", "100", "\n", "for", "hoi_ap", "in", "aps", ":", "\n", "            ", "corr_x", ".", "append", "(", "obj_ap", ")", "\n", "corr_y", ".", "append", "(", "hoi_ap", ")", "\n", "\n", "", "", "corr_trace", "=", "go", ".", "Scatter", "(", "\n", "x", "=", "corr_x", ",", "\n", "y", "=", "corr_y", ",", "\n", "mode", "=", "'markers'", ",", "\n", "marker", "=", "dict", "(", "\n", "size", "=", "8", ",", "\n", "color", "=", "'rgba(255, 182, 193, .8)'", ",", "\n", "line", "=", "dict", "(", "\n", "width", "=", "2", ",", "\n", "color", "=", "'rgba(100, 0, 0, 1)'", "\n", ")", "\n", ")", "\n", ")", "\n", "\n", "corr_layout", "=", "go", ".", "Layout", "(", "\n", "yaxis", "=", "dict", "(", "\n", "title", "=", "'AP of HOI Categories'", ",", "\n", "range", "=", "[", "0", ",", "100", "]", ",", "\n", ")", ",", "\n", "xaxis", "=", "dict", "(", "\n", "title", "=", "'AP of Object Categories'", ",", "\n", "range", "=", "[", "0", ",", "100", "]", ",", "\n", ")", ",", "\n", "height", "=", "800", ",", "\n", "width", "=", "800", ",", "\n", "margin", "=", "go", ".", "Margin", "(", "\n", "l", "=", "100", ",", "\n", "r", "=", "100", ",", "\n", "b", "=", "150", ",", "\n", "t", "=", "50", ",", "\n", ")", "\n", ")", "\n", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "exp_dir", ",", "'vis/hoi_ap_vs_obj_ap.html'", ")", "\n", "plotly", ".", "offline", ".", "plot", "(", "\n", "{", "'data'", ":", "[", "corr_trace", "]", ",", "'layout'", ":", "corr_layout", "}", ",", "\n", "filename", "=", "filename", ",", "\n", "auto_open", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.vis_object_aps_per_interaction.main": [[10, 82], ["os.path.join", "os.path.join", "data.hico.hico_constants.HicoConstants", "utils.load_json_object", "verb_to_hoi_id.items", "sorted", "len", "enumerate", "plotly.Layout", "os.path.join", "plotly.offline.plot", "plotly.offline.plot", "os.getcwd", "utils.load_json_object", "verb_to_hoi_id[].append", "sorted.append", "plotly.Box", "data.append", "verb_obj_aps.append", "numpy.linspace", "dict", "dict", "plotly.Margin", "numpy.median", "str", "verb.split", "dict"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.split_ids.split"], ["def", "main", "(", ")", ":", "\n", "    ", "exp_name", "=", "'factors_101_glove_generalize3_FC2_MTLv1_MoE_distillation2_600'", "\n", "exp_dir", "=", "os", ".", "path", ".", "join", "(", "\n", "os", ".", "getcwd", "(", ")", ",", "\n", "f'data_symlinks/hico_exp/hoi_classifier/{exp_name}'", ")", "\n", "\n", "map_json", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_dir", ",", "\n", "'mAP_eval/test_65000/mAP.json'", ")", "\n", "\n", "hoi_aps", "=", "io", ".", "load_json_object", "(", "map_json", ")", "[", "'AP'", "]", "\n", "\n", "data_const", "=", "HicoConstants", "(", ")", "\n", "hoi_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "hoi_list_json", ")", "\n", "\n", "verb_to_hoi_id", "=", "{", "}", "\n", "for", "hoi", "in", "hoi_list", ":", "\n", "        ", "hoi_id", "=", "hoi", "[", "'id'", "]", "\n", "verb", "=", "hoi", "[", "'verb'", "]", "\n", "if", "verb", "not", "in", "verb_to_hoi_id", ":", "\n", "            ", "verb_to_hoi_id", "[", "verb", "]", "=", "[", "]", "\n", "", "verb_to_hoi_id", "[", "verb", "]", ".", "append", "(", "hoi_id", ")", "\n", "\n", "", "per_verb_hoi_aps", "=", "[", "]", "\n", "for", "verb", ",", "hoi_ids", "in", "verb_to_hoi_id", ".", "items", "(", ")", ":", "\n", "        ", "verb_obj_aps", "=", "[", "]", "\n", "for", "hoi_id", "in", "hoi_ids", ":", "\n", "            ", "verb_obj_aps", ".", "append", "(", "hoi_aps", "[", "hoi_id", "]", "*", "100", ")", "\n", "\n", "", "per_verb_hoi_aps", ".", "append", "(", "(", "verb", ",", "verb_obj_aps", ")", ")", "\n", "\n", "", "per_verb_hoi_aps", "=", "sorted", "(", "per_verb_hoi_aps", ",", "key", "=", "lambda", "x", ":", "np", ".", "median", "(", "x", "[", "1", "]", ")", ")", "\n", "\n", "N", "=", "len", "(", "per_verb_hoi_aps", ")", "\n", "c", "=", "[", "'hsl('", "+", "str", "(", "h", ")", "+", "',50%'", "+", "',50%)'", "for", "h", "in", "np", ".", "linspace", "(", "0", ",", "360", ",", "N", ")", "]", "\n", "data", "=", "[", "]", "\n", "for", "i", ",", "(", "verb", ",", "aps", ")", "in", "enumerate", "(", "per_verb_hoi_aps", ")", ":", "\n", "        ", "trace", "=", "go", ".", "Box", "(", "\n", "y", "=", "aps", ",", "\n", "name", "=", "\" \"", ".", "join", "(", "verb", ".", "split", "(", "\"_\"", ")", ")", ",", "\n", "boxpoints", "=", "False", ",", "#\"outliers\"", "\n", "marker", "=", "{", "'color'", ":", "c", "[", "i", "]", "}", ",", "\n", "line", "=", "{", "'width'", ":", "1", "}", "\n", ")", "\n", "data", ".", "append", "(", "trace", ")", "\n", "\n", "", "layout", "=", "go", ".", "Layout", "(", "\n", "yaxis", "=", "dict", "(", "\n", "title", "=", "'AP of HOI Categories'", ",", "\n", "range", "=", "[", "0", ",", "100", "]", ",", "\n", ")", ",", "\n", "xaxis", "=", "dict", "(", "\n", "title", "=", "'Interactions'", ",", "\n", "tickangle", "=", "45", ",", "\n", "tickfont", "=", "dict", "(", "\n", "size", "=", "8", ",", "\n", ")", ",", "\n", ")", ",", "\n", "height", "=", "500", ",", "\n", "margin", "=", "go", ".", "Margin", "(", "\n", "l", "=", "100", ",", "\n", "r", "=", "100", ",", "\n", "b", "=", "150", ",", "\n", "t", "=", "50", ",", "\n", ")", ",", "\n", ")", "\n", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "exp_dir", ",", "'vis/obj_aps_per_interaction.html'", ")", "\n", "plotly", ".", "offline", ".", "plot", "(", "\n", "{", "'data'", ":", "data", ",", "'layout'", ":", "layout", "}", ",", "\n", "filename", "=", "filename", ",", "\n", "auto_open", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.vis_human_pose.main": [[13, 62], ["utils.mkdir_if_not_exists", "print", "utils.load_json_object", "print", "h5py.File", "h5py.File", "enumerate", "tqdm.tqdm", "numpy.reshape", "numpy.tile", "numpy.tile", "os.path.join", "skimage.imread", "set", "range", "h5py.File.keys", "len", "numpy.tile", "utils.vis_human_keypts", "os.path.join", "skimage.imsave", "set.add"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_human_keypts"], ["def", "main", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "io", ".", "mkdir_if_not_exists", "(", "exp_const", ".", "exp_dir", ")", "\n", "\n", "print", "(", "'Reading anno_list.json ...'", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "anno_dict", "=", "{", "anno", "[", "'global_id'", "]", ":", "anno", "for", "anno", "in", "anno_list", "}", "\n", "\n", "print", "(", "'Reading box and pose features ...'", ")", "\n", "human_pose_feats", "=", "h5py", ".", "File", "(", "data_const", ".", "human_pose_feats_h5py", ",", "'r'", ")", "\n", "hoi_cand", "=", "h5py", ".", "File", "(", "data_const", ".", "hoi_cand_h5py", ",", "'r'", ")", "\n", "\n", "for", "count", ",", "global_id", "in", "enumerate", "(", "tqdm", "(", "human_pose_feats", ".", "keys", "(", ")", ")", ")", ":", "\n", "        ", "if", "count", ">=", "exp_const", ".", "max_count", ":", "\n", "            ", "break", "\n", "", "human_boxes", "=", "hoi_cand", "[", "global_id", "]", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "[", ":", ",", ":", "4", "]", "\n", "human_rpn_ids", "=", "hoi_cand", "[", "global_id", "]", "[", "'boxes_scores_rpn_ids_hoi_idx'", "]", "[", ":", ",", "10", "]", "\n", "B", "=", "human_boxes", ".", "shape", "[", "0", "]", "\n", "absolute_pose", "=", "human_pose_feats", "[", "global_id", "]", "[", "'absolute_pose'", "]", "[", "(", ")", "]", "\n", "absolute_pose", "=", "np", ".", "reshape", "(", "absolute_pose", ",", "(", "B", ",", "data_const", ".", "num_keypts", ",", "3", ")", ")", "\n", "x1y1", "=", "human_boxes", "[", ":", ",", ":", "2", "]", "# Bx2", "\n", "wh", "=", "0", "*", "x1y1", "# Bx2", "\n", "wh", "[", ":", ",", "0", "]", "=", "(", "human_boxes", "[", ":", ",", "2", "]", "-", "human_boxes", "[", ":", ",", "0", "]", ")", "\n", "wh", "[", ":", ",", "1", "]", "=", "(", "human_boxes", "[", ":", ",", "3", "]", "-", "human_boxes", "[", ":", ",", "1", "]", ")", "\n", "x1y1", "=", "np", ".", "tile", "(", "x1y1", "[", ":", ",", "np", ".", "newaxis", ",", ":", "]", ",", "(", "1", ",", "data_const", ".", "num_keypts", ",", "1", ")", ")", "# Bx18x2", "\n", "wh", "=", "np", ".", "tile", "(", "wh", "[", ":", ",", "np", ".", "newaxis", ",", ":", "]", ",", "(", "1", ",", "data_const", ".", "num_keypts", ",", "1", ")", ")", "# Bx18x2", "\n", "keypts", "=", "0", "*", "absolute_pose", "\n", "keypts", "[", ":", ",", ":", ",", ":", "2", "]", "=", "absolute_pose", "[", ":", ",", ":", ",", ":", "2", "]", "*", "wh", "+", "x1y1", "\n", "keypts", "[", ":", ",", ":", ",", "2", "]", "=", "absolute_pose", "[", ":", ",", ":", ",", "2", "]", "\n", "img_path", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "images_dir", ",", "\n", "anno_dict", "[", "global_id", "]", "[", "'image_path_postfix'", "]", ")", "\n", "img", "=", "skio", ".", "imread", "(", "img_path", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "            ", "img", "=", "np", ".", "tile", "(", "img", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", ",", "(", "1", ",", "1", ",", "3", ")", ")", "\n", "\n", "", "seen_rpn_ids", "=", "set", "(", ")", "\n", "for", "i", "in", "range", "(", "B", ")", ":", "\n", "            ", "rpn_id", "=", "human_rpn_ids", "[", "i", "]", "\n", "if", "rpn_id", "in", "seen_rpn_ids", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "seen_rpn_ids", ".", "add", "(", "rpn_id", ")", "\n", "\n", "", "img", "=", "bbox_utils", ".", "vis_human_keypts", "(", "img", ",", "keypts", "[", "i", "]", ",", "modify", "=", "True", ")", "\n", "\n", "img_out_path", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'{global_id}.png'", ")", "\n", "skio", ".", "imsave", "(", "img_out_path", ",", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.get_gt_boxes": [[23, 42], ["len", "numpy.zeros", "enumerate", "numpy.concatenate", "indexes.append"], "function", ["None"], ["def", "get_gt_boxes", "(", "anno_dict", ",", "global_id", ",", "hoi_id", ")", ":", "\n", "    ", "indexes", "=", "[", "]", "\n", "boxes", "=", "None", "\n", "for", "hoi", "in", "anno_dict", "[", "global_id", "]", "[", "'hois'", "]", ":", "\n", "        ", "if", "hoi", "[", "'id'", "]", "!=", "hoi_id", ":", "\n", "            ", "continue", "\n", "", "num_boxes", "=", "len", "(", "hoi", "[", "'connections'", "]", ")", "\n", "boxes", "=", "np", ".", "zeros", "(", "[", "num_boxes", ",", "8", "]", ")", "\n", "\n", "for", "count", ",", "(", "i", ",", "j", ")", "in", "enumerate", "(", "hoi", "[", "'connections'", "]", ")", ":", "\n", "            ", "boxes", "[", "count", "]", "=", "np", ".", "concatenate", "(", "(", "\n", "hoi", "[", "'human_bboxes'", "]", "[", "i", "]", ",", "\n", "hoi", "[", "'object_bboxes'", "]", "[", "j", "]", "\n", ")", ")", "\n", "indexes", ".", "append", "(", "[", "i", ",", "j", "]", ")", "\n", "\n", "", "break", "\n", "\n", "", "return", "boxes", ",", "indexes", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.vis_keypts": [[44, 57], ["numpy.tile", "numpy.tile", "utils.bbox_utils.vis_human_keypts"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_human_keypts"], ["", "def", "vis_keypts", "(", "pose", ",", "human_box", ",", "img", ",", "modify", "=", "False", ")", ":", "\n", "    ", "num_keypts", "=", "pose", ".", "shape", "[", "0", "]", "\n", "x1y1", "=", "human_box", "[", ":", "2", "]", "\n", "wh", "=", "0", "*", "x1y1", "\n", "wh", "[", "0", "]", "=", "(", "human_box", "[", "2", "]", "-", "human_box", "[", "0", "]", ")", "\n", "wh", "[", "1", "]", "=", "(", "human_box", "[", "3", "]", "-", "human_box", "[", "1", "]", ")", "\n", "x1y1", "=", "np", ".", "tile", "(", "x1y1", "[", "np", ".", "newaxis", ",", ":", "]", ",", "(", "num_keypts", ",", "1", ")", ")", "\n", "wh", "=", "np", ".", "tile", "(", "wh", "[", "np", ".", "newaxis", ",", ":", "]", ",", "(", "num_keypts", ",", "1", ")", ")", "\n", "keypts", "=", "0", "*", "pose", "\n", "keypts", "[", ":", ",", ":", "2", "]", "=", "pose", "[", ":", ",", ":", "2", "]", "*", "wh", "+", "x1y1", "\n", "keypts", "[", ":", ",", "2", "]", "=", "pose", "[", ":", ",", "2", "]", "\n", "img_", "=", "vis_human_keypts", "(", "img", ",", "keypts", ",", "modify", "=", "modify", ")", "\n", "return", "img_", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.select_best_boxes_across_dataset": [[59, 125], ["range", "tqdm.tqdm", "tqdm.tqdm", "pred_hois.keys", "range", "global_id_det_id_score.keys", "sorted", "numpy.zeros", "range", "str().zfill", "range", "global_ids.append", "top_predictions.append", "top_boxes_per_hoi.get_gt_boxes", "gt_boxes.append", "boxes_index.append", "human_pose.append", "str().zfill", "global_id_det_id_score[].append", "numpy.reshape", "str", "str().zfill", "enumerate", "sorted", "str", "str"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.get_gt_boxes"], ["", "def", "select_best_boxes_across_dataset", "(", "\n", "pred_hois", ",", "\n", "anno_dict", ",", "\n", "human_pose_feats", ",", "\n", "data_const", ",", "\n", "exp_const", ")", ":", "\n", "    ", "global_id_det_id_score", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "600", ")", ":", "\n", "        ", "global_id_det_id_score", "[", "str", "(", "i", "+", "1", ")", ".", "zfill", "(", "3", ")", "]", "=", "[", "]", "\n", "\n", "", "for", "global_id", "in", "tqdm", "(", "pred_hois", ".", "keys", "(", ")", ")", ":", "\n", "        ", "human_obj_boxes_scores", "=", "pred_hois", "[", "global_id", "]", "[", "'human_obj_boxes_scores'", "]", "[", "(", ")", "]", "\n", "start_end_ids", "=", "pred_hois", "[", "global_id", "]", "[", "'start_end_ids'", "]", "[", "(", ")", "]", "\n", "for", "i", "in", "range", "(", "600", ")", ":", "\n", "            ", "hoi_id", "=", "str", "(", "i", "+", "1", ")", ".", "zfill", "(", "3", ")", "\n", "start_id", ",", "end_id", "=", "start_end_ids", "[", "i", "]", "\n", "for", "j", "in", "range", "(", "start_id", ",", "end_id", ")", ":", "\n", "                ", "global_id_det_id_score", "[", "hoi_id", "]", ".", "append", "(", "\n", "(", "\n", "global_id", ",", "\n", "j", ",", "\n", "human_obj_boxes_scores", "[", "j", ",", "8", "]", ",", "\n", ")", "\n", ")", "\n", "\n", "", "", "", "top_boxes", "=", "{", "}", "\n", "for", "hoi_id", "in", "tqdm", "(", "global_id_det_id_score", ".", "keys", "(", ")", ")", ":", "\n", "        ", "global_id_det_id_score", "[", "hoi_id", "]", "=", "sorted", "(", "\n", "global_id_det_id_score", "[", "hoi_id", "]", ",", "\n", "key", "=", "lambda", "x", ":", "x", "[", "2", "]", ",", "\n", "reverse", "=", "True", ")", "\n", "\n", "boxes_scores", "=", "np", ".", "zeros", "(", "[", "exp_const", ".", "num_to_vis", ",", "9", "]", ")", "\n", "\n", "global_ids", "=", "[", "]", "\n", "top_predictions", "=", "[", "]", "\n", "gt_boxes", "=", "[", "]", "\n", "human_pose", "=", "[", "]", "\n", "boxes_index", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "exp_const", ".", "num_to_vis", ")", ":", "\n", "            ", "global_id", ",", "det_id", ",", "score", "=", "global_id_det_id_score", "[", "hoi_id", "]", "[", "i", "]", "\n", "global_ids", ".", "append", "(", "global_id", ")", "\n", "\n", "box_score", "=", "pred_hois", "[", "global_id", "]", "[", "'human_obj_boxes_scores'", "]", "[", "det_id", "]", "\n", "boxes_scores", "[", "i", "]", "=", "box_score", "[", ":", "9", "]", "\n", "other_predictions", "=", "[", "[", "str", "(", "ii", "+", "1", ")", ".", "zfill", "(", "3", ")", ",", "bb", "]", "for", "ii", ",", "bb", "in", "enumerate", "(", "box_score", "[", "9", ":", "]", ")", "]", "\n", "top_predictions", ".", "append", "(", "sorted", "(", "other_predictions", ",", "key", "=", "lambda", "k", ":", "k", "[", "1", "]", ",", "reverse", "=", "True", ")", "[", ":", "10", "]", ")", "\n", "\n", "boxes", ",", "indexes", "=", "get_gt_boxes", "(", "anno_dict", ",", "global_id", ",", "hoi_id", ")", "\n", "gt_boxes", ".", "append", "(", "boxes", ")", "\n", "boxes_index", ".", "append", "(", "indexes", ")", "\n", "\n", "human_pose", ".", "append", "(", "\n", "np", ".", "reshape", "(", "\n", "human_pose_feats", "[", "global_id", "]", "[", "'absolute_pose'", "]", "[", "det_id", "]", ",", "\n", "(", "data_const", ".", "num_pose_keypoints", ",", "3", ")", ")", ")", "\n", "\n", "", "top_boxes", "[", "hoi_id", "]", "=", "{", "\n", "'boxes_scores'", ":", "boxes_scores", ",", "\n", "'gt_boxes'", ":", "gt_boxes", ",", "\n", "'global_ids'", ":", "global_ids", ",", "\n", "'human_pose'", ":", "human_pose", ",", "\n", "'boxes_index'", ":", "boxes_index", ",", "\n", "\n", "}", "\n", "", "return", "top_boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.get_gt_hois": [[127, 138], ["enumerate"], "function", ["None"], ["", "def", "get_gt_hois", "(", "anno", ",", "hoi_dict", ")", ":", "\n", "    ", "gt_hoi_names", "=", "''", "\n", "for", "hid", ",", "hoi_id", "in", "enumerate", "(", "anno", "[", "'pos_hoi_ids'", "]", ")", ":", "\n", "        ", "obj_name", "=", "hoi_dict", "[", "hoi_id", "]", "[", "'object'", "]", "\n", "verb_name", "=", "hoi_dict", "[", "hoi_id", "]", "[", "'verb'", "]", "\n", "connections", "=", "[", "f's{dd[0]}-o{dd[1]}'", "for", "dd", "in", "anno", "[", "'hois'", "]", "[", "hid", "]", "[", "'connections'", "]", "]", "\n", "hoi_name", "=", "f'{verb_name}_{obj_name},{connections}'", "\n", "gt_hoi_names", "+=", "hoi_name", "\n", "gt_hoi_names", "+=", "'<br />'", "\n", "\n", "", "return", "gt_hoi_names", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.create_html": [[140, 230], ["tqdm.tqdm", "top_boxes.keys", "os.path.join", "utils.mkdir_if_not_exists", "os.path.join", "utils.html_writer.HtmlWriter", "utils.html_writer.HtmlWriter.add_element", "enumerate", "utils.html_writer.HtmlWriter.close", "os.path.join", "skimage.imread", "utils.bbox_utils.vis_sub_obj_bboxes", "os.path.join", "skimage.imsave", "utils.bbox_utils.vis_sub_obj_bboxes", "top_boxes_per_hoi.vis_keypts", "os.path.join", "skimage.imsave", "os.path.join", "skimage.imsave", "top_boxes_per_hoi.get_gt_hois", "utils.html_writer.HtmlWriter.add_element", "len", "numpy.tile", "utils.bbox_utils.vis_sub_obj_bboxes", "copy.deepcopy", "round", "utils.html_writer.HtmlWriter.image_tag", "utils.html_writer.HtmlWriter.image_tag", "utils.html_writer.HtmlWriter.image_tag", "str().zfill", "str().zfill", "str().zfill", "str().zfill", "str().zfill", "str().zfill", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.add_element", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_sub_obj_bboxes", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_sub_obj_bboxes", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.vis_keypts", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.get_gt_hois", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.add_element", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.vis_sub_obj_bboxes", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.image_tag", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.image_tag", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.image_tag"], ["", "def", "create_html", "(", "top_boxes", ",", "anno_dict", ",", "hoi_dict", ",", "img_dir", ",", "vis_dir", ")", ":", "\n", "    ", "for", "hoi_id", "in", "tqdm", "(", "top_boxes", ".", "keys", "(", ")", ")", ":", "\n", "        ", "hoi_name", "=", "'_'", ".", "join", "(", "\n", "[", "hoi_id", ",", "hoi_dict", "[", "hoi_id", "]", "[", "'verb'", "]", ",", "hoi_dict", "[", "hoi_id", "]", "[", "'object'", "]", "]", ")", "\n", "object_name", "=", "hoi_dict", "[", "hoi_id", "]", "[", "'object'", "]", "\n", "hoi_vis_dir", "=", "os", ".", "path", ".", "join", "(", "vis_dir", ",", "hoi_name", ")", "\n", "io", ".", "mkdir_if_not_exists", "(", "hoi_vis_dir", ",", "recursive", "=", "True", ")", "\n", "html_filename", "=", "os", ".", "path", ".", "join", "(", "hoi_vis_dir", ",", "'index.html'", ")", "\n", "html_writer", "=", "HtmlWriter", "(", "html_filename", ")", "\n", "col_dict", "=", "{", "\n", "0", ":", "'Global ID'", ",", "\n", "1", ":", "'Predicted Score'", ",", "\n", "2", ":", "f'Predictions for {hoi_name}'", ",", "\n", "3", ":", "f'Detected Boxes and Pose for human and {object_name} categories'", ",", "\n", "4", ":", "f'GT Detections for {hoi_name}'", ",", "\n", "5", ":", "'All GT HOI categories annotated in the image <br /> (for any human-object pair)'", ",", "\n", "}", "\n", "html_writer", ".", "add_element", "(", "col_dict", ")", "\n", "boxes_scores", "=", "top_boxes", "[", "hoi_id", "]", "[", "'boxes_scores'", "]", "\n", "boxes_index", "=", "top_boxes", "[", "hoi_id", "]", "[", "'boxes_index'", "]", "\n", "gt_boxes", "=", "top_boxes", "[", "hoi_id", "]", "[", "'gt_boxes'", "]", "\n", "pose_keypts", "=", "top_boxes", "[", "hoi_id", "]", "[", "'human_pose'", "]", "\n", "for", "i", ",", "global_id", "in", "enumerate", "(", "top_boxes", "[", "hoi_id", "]", "[", "'global_ids'", "]", ")", ":", "\n", "            ", "anno", "=", "anno_dict", "[", "global_id", "]", "\n", "img_path", "=", "os", ".", "path", ".", "join", "(", "img_dir", ",", "anno", "[", "'image_path_postfix'", "]", ")", "\n", "img", "=", "skio", ".", "imread", "(", "img_path", ")", "\n", "if", "len", "(", "img", ".", "shape", ")", "==", "2", ":", "\n", "                ", "img", "=", "img", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "img", "=", "np", ".", "tile", "(", "img", ",", "(", "1", ",", "1", ",", "3", ")", ")", "\n", "\n", "", "out_img", "=", "vis_sub_obj_bboxes", "(", "\n", "[", "boxes_scores", "[", "i", ",", ":", "4", "]", "]", ",", "\n", "[", "boxes_scores", "[", "i", ",", "4", ":", "8", "]", "]", ",", "\n", "[", "]", ",", "\n", "img", ",", "\n", "modify", "=", "False", ")", "\n", "#out_img = vis_keypts(#--------------I don't want to draw kypoints!!!!", "\n", "#    pose_keypts[i],", "\n", "#    boxes_scores[i,:4],", "\n", "#    out_img,", "\n", "#    modify=True)", "\n", "out_img_path", "=", "os", ".", "path", ".", "join", "(", "\n", "hoi_vis_dir", ",", "\n", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", "+", "'.png'", ")", "\n", "skio", ".", "imsave", "(", "out_img_path", ",", "out_img", ")", "\n", "\n", "out_img_on_white", "=", "vis_sub_obj_bboxes", "(", "\n", "[", "boxes_scores", "[", "i", ",", ":", "4", "]", "]", ",", "\n", "[", "boxes_scores", "[", "i", ",", "4", ":", "8", "]", "]", ",", "\n", "[", "]", ",", "\n", "0", "*", "img", "+", "255", ",", "\n", "modify", "=", "False", ")", "\n", "out_img_on_white", "=", "vis_keypts", "(", "\n", "pose_keypts", "[", "i", "]", ",", "\n", "boxes_scores", "[", "i", ",", ":", "4", "]", ",", "\n", "out_img_on_white", ",", "\n", "modify", "=", "True", ")", "\n", "out_img_on_white_path", "=", "os", ".", "path", ".", "join", "(", "\n", "hoi_vis_dir", ",", "\n", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", "+", "'_on_white.png'", ")", "\n", "skio", ".", "imsave", "(", "out_img_on_white_path", ",", "out_img_on_white", ")", "\n", "\n", "if", "gt_boxes", "[", "i", "]", "is", "not", "None", ":", "\n", "                ", "gt_out_img", "=", "vis_sub_obj_bboxes", "(", "\n", "gt_boxes", "[", "i", "]", "[", ":", ",", ":", "4", "]", ",", "\n", "gt_boxes", "[", "i", "]", "[", ":", ",", "4", ":", "8", "]", ",", "\n", "boxes_index", "[", "i", "]", ",", "\n", "img", ",", "\n", "modify", "=", "False", ")", "\n", "", "else", ":", "\n", "                ", "gt_out_img", "=", "copy", ".", "deepcopy", "(", "img", ")", "\n", "\n", "", "gt_out_img_path", "=", "os", ".", "path", ".", "join", "(", "\n", "hoi_vis_dir", ",", "\n", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", "+", "'_gt.png'", ")", "\n", "skio", ".", "imsave", "(", "gt_out_img_path", ",", "gt_out_img", ")", "\n", "\n", "gt_hoi_names", "=", "get_gt_hois", "(", "anno", ",", "hoi_dict", ")", "\n", "\n", "col_dict", "=", "{", "\n", "0", ":", "global_id", ",", "\n", "1", ":", "round", "(", "boxes_scores", "[", "i", ",", "8", "]", ",", "4", ")", ",", "\n", "2", ":", "html_writer", ".", "image_tag", "(", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", "+", "'.png'", ")", ",", "\n", "3", ":", "html_writer", ".", "image_tag", "(", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", "+", "'_on_white.png'", ")", ",", "\n", "4", ":", "html_writer", ".", "image_tag", "(", "str", "(", "i", ")", ".", "zfill", "(", "3", ")", "+", "'_gt.png'", ")", ",", "\n", "5", ":", "gt_hoi_names", ",", "\n", "}", "\n", "html_writer", ".", "add_element", "(", "col_dict", ")", "\n", "\n", "", "html_writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.main": [[232, 260], ["print", "h5py.File", "h5py.File", "print", "utils.load_json_object", "print", "top_boxes_per_hoi.select_best_boxes_across_dataset", "utils.load_json_object", "print", "os.path.join", "top_boxes_per_hoi.create_html"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.select_best_boxes_across_dataset", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.vis.top_boxes_per_hoi.create_html"], ["", "", "def", "main", "(", "exp_const", ",", "data_const", ",", "model_const", ")", ":", "\n", "    ", "print", "(", "'Loading pred dets ...'", ")", "\n", "pred_hois", "=", "h5py", ".", "File", "(", "data_const", ".", "pred_hoi_dets_h5py", ",", "'r'", ")", "\n", "human_pose_feats", "=", "h5py", ".", "File", "(", "data_const", ".", "human_pose_feats_hdf5", ",", "'r'", ")", "\n", "\n", "print", "(", "'Reading anno_list.json ...'", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "anno_dict", "=", "{", "anno", "[", "'global_id'", "]", ":", "anno", "for", "anno", "in", "anno_list", "}", "\n", "\n", "print", "(", "'Selecting top box configurations for each hoi ...'", ")", "\n", "top_boxes", "=", "select_best_boxes_across_dataset", "(", "\n", "pred_hois", ",", "\n", "anno_dict", ",", "\n", "human_pose_feats", ",", "\n", "data_const", ",", "\n", "exp_const", ")", "\n", "\n", "hoi_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "hoi_list_json", ")", "\n", "hoi_dict", "=", "{", "hoi", "[", "'id'", "]", ":", "hoi", "for", "hoi", "in", "hoi_list", "}", "\n", "\n", "print", "(", "'Creating visualization images ...'", ")", "\n", "vis_dir", "=", "os", ".", "path", ".", "join", "(", "exp_const", ".", "exp_dir", ",", "'vis/top_boxes_per_hoi'", ")", "\n", "create_html", "(", "\n", "top_boxes", ",", "\n", "anno_dict", ",", "\n", "hoi_dict", ",", "\n", "data_const", ".", "images_dir", ",", "\n", "vis_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.evaluate_boxes.box_recall": [[17, 102], ["len", "len", "enumerate", "enumerate", "enumerate", "len", "gt_connections_recalled.count", "len", "gt_human_boxes_recalled.count", "len", "gt_object_boxes_recalled.count", "len", "len", "len", "utils.bbox_utils.compute_iou", "utils.bbox_utils.compute_iou", "pdb.set_trace", "pdb.set_trace"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou"], ["def", "box_recall", "(", "gt_hois", ",", "human_boxes", ",", "object_boxes", ",", "iou_thresh", ")", ":", "\n", "    ", "num_pred_human_boxes", "=", "len", "(", "human_boxes", ")", "\n", "num_pred_object_boxes", "=", "len", "(", "object_boxes", ")", "\n", "num_pred_connections", "=", "num_pred_human_boxes", "*", "num_pred_object_boxes", "\n", "\n", "num_gt_connections_recalled", "=", "0", "\n", "num_gt_connections", "=", "0", "\n", "num_gt_human_boxes_recalled", "=", "0", "\n", "num_gt_human_boxes", "=", "0", "\n", "num_gt_object_boxes_recalled", "=", "0", "\n", "num_gt_object_boxes", "=", "0", "\n", "\n", "for", "hois_per_type", "in", "gt_hois", ":", "\n", "        ", "gt_connections", "=", "hois_per_type", "[", "'connections'", "]", "\n", "gt_human_boxes", "=", "hois_per_type", "[", "'human_bboxes'", "]", "\n", "gt_object_boxes", "=", "hois_per_type", "[", "'object_bboxes'", "]", "\n", "invis", "=", "hois_per_type", "[", "'invis'", "]", "\n", "\n", "gt_human_boxes_recalled", "=", "[", "False", "]", "*", "len", "(", "gt_human_boxes", ")", "\n", "for", "i", ",", "gt_box", "in", "enumerate", "(", "gt_human_boxes", ")", ":", "\n", "            ", "for", "box", "in", "human_boxes", ":", "\n", "                ", "try", ":", "\n", "                    ", "iou", "=", "compute_iou", "(", "box", ",", "gt_box", ")", "\n", "", "except", ":", "\n", "                    ", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "", "if", "iou", ">=", "iou_thresh", ":", "\n", "                    ", "gt_human_boxes_recalled", "[", "i", "]", "=", "True", "\n", "break", "\n", "\n", "", "", "", "gt_object_boxes_recalled", "=", "[", "False", "]", "*", "len", "(", "gt_object_boxes", ")", "\n", "for", "i", ",", "gt_box", "in", "enumerate", "(", "gt_object_boxes", ")", ":", "\n", "            ", "for", "box", "in", "object_boxes", ":", "\n", "                ", "try", ":", "\n", "                    ", "iou", "=", "compute_iou", "(", "box", ",", "gt_box", ")", "\n", "", "except", ":", "\n", "                    ", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "", "if", "iou", ">=", "iou_thresh", ":", "\n", "                    ", "gt_object_boxes_recalled", "[", "i", "]", "=", "True", "\n", "break", "\n", "\n", "", "", "", "gt_connections_recalled", "=", "[", "False", "]", "*", "len", "(", "gt_connections", ")", "\n", "for", "k", ",", "(", "i", ",", "j", ")", "in", "enumerate", "(", "gt_connections", ")", ":", "\n", "            ", "if", "gt_human_boxes_recalled", "[", "i", "]", "and", "gt_object_boxes_recalled", "[", "j", "]", ":", "\n", "                ", "gt_connections_recalled", "[", "k", "]", "=", "True", "\n", "\n", "", "", "num_gt_connections", "+=", "len", "(", "gt_connections", ")", "\n", "num_gt_connections_recalled", "+=", "gt_connections_recalled", ".", "count", "(", "True", ")", "\n", "\n", "num_gt_human_boxes", "+=", "len", "(", "gt_human_boxes", ")", "\n", "num_gt_human_boxes_recalled", "+=", "gt_human_boxes_recalled", ".", "count", "(", "True", ")", "\n", "\n", "num_gt_object_boxes", "+=", "len", "(", "gt_object_boxes", ")", "\n", "num_gt_object_boxes_recalled", "+=", "gt_object_boxes_recalled", ".", "count", "(", "True", ")", "\n", "\n", "", "try", ":", "\n", "        ", "connection_recall", "=", "num_gt_connections_recalled", "/", "num_gt_connections", "\n", "", "except", "ZeroDivisionError", ":", "\n", "        ", "connection_recall", "=", "None", "\n", "\n", "", "try", ":", "\n", "        ", "human_recall", "=", "num_gt_human_boxes_recalled", "/", "num_gt_human_boxes", "\n", "", "except", "ZeroDivisionError", ":", "\n", "        ", "human_recall", "=", "None", "\n", "\n", "", "try", ":", "\n", "        ", "object_recall", "=", "num_gt_object_boxes_recalled", "/", "num_gt_object_boxes", "\n", "", "except", "ZeroDivisionError", ":", "\n", "        ", "object_recall", "=", "None", "\n", "\n", "", "stats", "=", "{", "\n", "'connection_recall'", ":", "connection_recall", ",", "\n", "'human_recall'", ":", "human_recall", ",", "\n", "'object_recall'", ":", "object_recall", ",", "\n", "'num_gt_connections_recalled'", ":", "num_gt_connections_recalled", ",", "\n", "'num_gt_connections'", ":", "num_gt_connections", ",", "\n", "'num_gt_human_boxes_recalled'", ":", "num_gt_human_boxes_recalled", ",", "\n", "'num_gt_human_boxes'", ":", "num_gt_human_boxes", ",", "\n", "'num_gt_object_boxes_recalled'", ":", "num_gt_object_boxes_recalled", ",", "\n", "'num_gt_object_boxes'", ":", "num_gt_object_boxes", ",", "\n", "'num_connection_proposals'", ":", "num_pred_connections", ",", "\n", "'num_human_proposals'", ":", "num_pred_human_boxes", ",", "\n", "'num_object_proposals'", ":", "num_pred_object_boxes", ",", "\n", "}", "\n", "\n", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.evaluate_boxes.box_label_recall": [[104, 194], ["len", "len", "enumerate", "enumerate", "enumerate", "len", "gt_connections_recalled.count", "len", "gt_human_boxes_recalled.count", "len", "gt_object_boxes_recalled.count", "len", "len", "zip", "len", "utils.bbox_utils.compute_iou", "utils.bbox_utils.compute_iou", "pdb.set_trace", "pdb.set_trace"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_iou"], ["", "def", "box_label_recall", "(", "gt_hois", ",", "human_boxes", ",", "object_boxes", ",", "object_labels", ",", "iou_thresh", ",", "hoi_list", ")", ":", "\n", "    ", "num_pred_human_boxes", "=", "len", "(", "human_boxes", ")", "\n", "num_pred_object_boxes", "=", "len", "(", "object_boxes", ")", "\n", "num_pred_connections", "=", "num_pred_human_boxes", "*", "num_pred_object_boxes", "\n", "\n", "hoi_dict", "=", "{", "hoi", "[", "'id'", "]", ":", "hoi", "for", "hoi", "in", "hoi_list", "}", "\n", "\n", "num_gt_connections_recalled", "=", "0", "\n", "num_gt_connections", "=", "0", "\n", "num_gt_human_boxes_recalled", "=", "0", "\n", "num_gt_human_boxes", "=", "0", "\n", "num_gt_object_boxes_recalled", "=", "0", "\n", "num_gt_object_boxes", "=", "0", "\n", "\n", "for", "hois_per_type", "in", "gt_hois", ":", "\n", "        ", "gt_id", "=", "hois_per_type", "[", "'id'", "]", "\n", "gt_hoi", "=", "hoi_dict", "[", "gt_id", "]", "\n", "\n", "gt_connections", "=", "hois_per_type", "[", "'connections'", "]", "\n", "gt_human_boxes", "=", "hois_per_type", "[", "'human_bboxes'", "]", "\n", "gt_object_boxes", "=", "hois_per_type", "[", "'object_bboxes'", "]", "\n", "invis", "=", "hois_per_type", "[", "'invis'", "]", "\n", "\n", "gt_human_boxes_recalled", "=", "[", "False", "]", "*", "len", "(", "gt_human_boxes", ")", "\n", "for", "i", ",", "gt_box", "in", "enumerate", "(", "gt_human_boxes", ")", ":", "\n", "            ", "for", "box", "in", "human_boxes", ":", "\n", "                ", "try", ":", "\n", "                    ", "iou", "=", "compute_iou", "(", "box", ",", "gt_box", ")", "\n", "", "except", ":", "\n", "                    ", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "", "if", "iou", ">=", "iou_thresh", ":", "\n", "                    ", "gt_human_boxes_recalled", "[", "i", "]", "=", "True", "\n", "break", "\n", "\n", "", "", "", "gt_object_boxes_recalled", "=", "[", "False", "]", "*", "len", "(", "gt_object_boxes", ")", "\n", "for", "i", ",", "gt_box", "in", "enumerate", "(", "gt_object_boxes", ")", ":", "\n", "            ", "for", "box", ",", "label", "in", "zip", "(", "object_boxes", ",", "object_labels", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "iou", "=", "compute_iou", "(", "box", ",", "gt_box", ")", "\n", "", "except", ":", "\n", "                    ", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "", "if", "iou", ">=", "iou_thresh", "and", "label", "==", "gt_hoi", "[", "'object'", "]", ":", "\n", "                    ", "gt_object_boxes_recalled", "[", "i", "]", "=", "True", "\n", "break", "\n", "\n", "", "", "", "gt_connections_recalled", "=", "[", "False", "]", "*", "len", "(", "gt_connections", ")", "\n", "for", "k", ",", "(", "i", ",", "j", ")", "in", "enumerate", "(", "gt_connections", ")", ":", "\n", "            ", "if", "gt_human_boxes_recalled", "[", "i", "]", "and", "gt_object_boxes_recalled", "[", "j", "]", ":", "\n", "                ", "gt_connections_recalled", "[", "k", "]", "=", "True", "\n", "\n", "", "", "num_gt_connections", "+=", "len", "(", "gt_connections", ")", "\n", "num_gt_connections_recalled", "+=", "gt_connections_recalled", ".", "count", "(", "True", ")", "\n", "\n", "num_gt_human_boxes", "+=", "len", "(", "gt_human_boxes", ")", "\n", "num_gt_human_boxes_recalled", "+=", "gt_human_boxes_recalled", ".", "count", "(", "True", ")", "\n", "\n", "num_gt_object_boxes", "+=", "len", "(", "gt_object_boxes", ")", "\n", "num_gt_object_boxes_recalled", "+=", "gt_object_boxes_recalled", ".", "count", "(", "True", ")", "\n", "\n", "", "try", ":", "\n", "        ", "connection_recall", "=", "num_gt_connections_recalled", "/", "num_gt_connections", "\n", "", "except", "ZeroDivisionError", ":", "\n", "        ", "connection_recall", "=", "None", "\n", "\n", "", "try", ":", "\n", "        ", "human_recall", "=", "num_gt_human_boxes_recalled", "/", "num_gt_human_boxes", "\n", "", "except", "ZeroDivisionError", ":", "\n", "        ", "human_recall", "=", "None", "\n", "\n", "", "try", ":", "\n", "        ", "object_recall", "=", "num_gt_object_boxes_recalled", "/", "num_gt_object_boxes", "\n", "", "except", "ZeroDivisionError", ":", "\n", "        ", "object_recall", "=", "None", "\n", "\n", "", "stats", "=", "{", "\n", "'connection_recall'", ":", "connection_recall", ",", "\n", "'human_recall'", ":", "human_recall", ",", "\n", "'object_recall'", ":", "object_recall", ",", "\n", "'num_gt_connections_recalled'", ":", "num_gt_connections_recalled", ",", "\n", "'num_gt_connections'", ":", "num_gt_connections", ",", "\n", "'num_gt_human_boxes_recalled'", ":", "num_gt_human_boxes_recalled", ",", "\n", "'num_gt_human_boxes'", ":", "num_gt_human_boxes", ",", "\n", "'num_gt_object_boxes_recalled'", ":", "num_gt_object_boxes_recalled", ",", "\n", "'num_gt_object_boxes'", ":", "num_gt_object_boxes", ",", "\n", "'num_connection_proposals'", ":", "num_pred_connections", ",", "\n", "'num_human_proposals'", ":", "num_pred_human_boxes", ",", "\n", "'num_object_proposals'", ":", "num_pred_object_boxes", ",", "\n", "}", "\n", "\n", "return", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.evaluate_boxes.evaluate_boxes": [[196, 291], ["os.path.join", "h5py.File", "print", "utils.load_json_object", "print", "tqdm.tqdm", "os.path.join", "utils.dump_json_object", "enumerate", "numpy.concatenate", "numpy.concatenate", "evaluation_stats.keys", "np.concatenate.append", "evaluate_boxes.box_recall", "np.concatenate.tolist", "np.concatenate.tolist"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.evaluate_boxes.box_recall"], ["", "def", "evaluate_boxes", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "select_boxes_dir", "=", "exp_const", ".", "exp_dir", "\n", "\n", "select_boxes_h5py", "=", "os", ".", "path", ".", "join", "(", "\n", "select_boxes_dir", ",", "\n", "'selected_coco_cls_dets.hdf5'", ")", "\n", "select_boxes", "=", "h5py", ".", "File", "(", "select_boxes_h5py", ")", "\n", "\n", "print", "(", "'Loading anno_list.json ...'", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "\n", "print", "(", "'Evaluating box proposals ...'", ")", "\n", "evaluation_stats", "=", "{", "\n", "'num_gt_connections_recalled'", ":", "0", ",", "\n", "'num_gt_connections'", ":", "0", ",", "\n", "'num_gt_human_boxes_recalled'", ":", "0", ",", "\n", "'num_gt_human_boxes'", ":", "0", ",", "\n", "'num_gt_object_boxes_recalled'", ":", "0", ",", "\n", "'num_gt_object_boxes'", ":", "0", ",", "\n", "'num_connection_proposals'", ":", "0", ",", "\n", "'num_human_proposals'", ":", "0", ",", "\n", "'num_object_proposals'", ":", "0", ",", "\n", "}", "\n", "\n", "index_error_misses", "=", "0", "\n", "num_images", "=", "0", "\n", "for", "anno", "in", "tqdm", "(", "anno_list", ")", ":", "\n", "        ", "global_id", "=", "anno", "[", "'global_id'", "]", "\n", "if", "'test'", "in", "global_id", ":", "\n", "            ", "num_images", "+=", "1", "\n", "", "else", ":", "\n", "            ", "continue", "\n", "\n", "# selected_dets_npy = os.path.join(", "\n", "#     select_boxes_dir,", "\n", "#     f'{global_id}_selected_dets.npy')", "\n", "# selected_dets = np.load(selected_dets_npy)[()]", "\n", "\n", "", "boxes_scores_rpn_ids", "=", "select_boxes", "[", "global_id", "]", "[", "'boxes_scores_rpn_ids'", "]", "[", "(", ")", "]", "\n", "start_end_ids", "=", "select_boxes", "[", "global_id", "]", "[", "'start_end_ids'", "]", "[", "(", ")", "]", "\n", "selected_dets", "=", "{", "'boxes'", ":", "{", "}", "}", "\n", "for", "cls_ind", ",", "cls_name", "in", "enumerate", "(", "COCO_CLASSES", ")", ":", "\n", "            ", "start_id", ",", "end_id", "=", "start_end_ids", "[", "cls_ind", "]", "\n", "selected_dets", "[", "'boxes'", "]", "[", "cls_name", "]", "=", "boxes_scores_rpn_ids", "[", "start_id", ":", "end_id", ",", ":", "4", "]", "\n", "\n", "", "human_boxes", "=", "selected_dets", "[", "'boxes'", "]", "[", "'person'", "]", "\n", "\n", "object_boxes", "=", "[", "]", "\n", "object_labels", "=", "[", "]", "\n", "for", "cls_name", "in", "selected_dets", "[", "'boxes'", "]", ":", "\n", "            ", "if", "cls_name", "in", "[", "'person'", ",", "'background'", "]", ":", "\n", "                ", "continue", "\n", "", "cls_object_boxes", "=", "selected_dets", "[", "'boxes'", "]", "[", "cls_name", "]", "\n", "object_boxes", ".", "append", "(", "cls_object_boxes", ")", "\n", "object_labels", "+=", "[", "cls_name", "]", "*", "cls_object_boxes", ".", "shape", "[", "0", "]", "\n", "", "object_boxes", "=", "np", ".", "concatenate", "(", "object_boxes", ")", "\n", "\n", "all_boxes", "=", "np", ".", "concatenate", "(", "(", "human_boxes", ",", "object_boxes", ")", ")", "\n", "\n", "try", ":", "\n", "            ", "recall_stats", "=", "box_recall", "(", "\n", "anno", "[", "'hois'", "]", ",", "\n", "all_boxes", ".", "tolist", "(", ")", ",", "\n", "all_boxes", ".", "tolist", "(", ")", ",", "\n", "exp_const", ".", "iou_thresh", ")", "\n", "", "except", "IndexError", ":", "\n", "            ", "index_error_misses", "+=", "1", "\n", "num_images", "-=", "index_error_misses", "\n", "\n", "", "for", "k", "in", "evaluation_stats", ".", "keys", "(", ")", ":", "\n", "            ", "evaluation_stats", "[", "k", "]", "+=", "recall_stats", "[", "k", "]", "\n", "\n", "", "", "evaluation_stats", "[", "'human_recall'", "]", "=", "evaluation_stats", "[", "'num_gt_human_boxes_recalled'", "]", "/", "evaluation_stats", "[", "'num_gt_human_boxes'", "]", "\n", "evaluation_stats", "[", "'object_recall'", "]", "=", "evaluation_stats", "[", "'num_gt_object_boxes_recalled'", "]", "/", "evaluation_stats", "[", "'num_gt_object_boxes'", "]", "\n", "evaluation_stats", "[", "'connection_recall'", "]", "=", "evaluation_stats", "[", "'num_gt_connections_recalled'", "]", "/", "evaluation_stats", "[", "'num_gt_connections'", "]", "\n", "evaluation_stats", "[", "'average_human_proposals_per_image'", "]", "=", "evaluation_stats", "[", "'num_human_proposals'", "]", "/", "num_images", "\n", "evaluation_stats", "[", "'average_object_proposals_per_image'", "]", "=", "evaluation_stats", "[", "'num_object_proposals'", "]", "/", "num_images", "\n", "evaluation_stats", "[", "'average_connection_proposals_per_image'", "]", "=", "evaluation_stats", "[", "'average_human_proposals_per_image'", "]", "*", "evaluation_stats", "[", "'average_object_proposals_per_image'", "]", "\n", "evaluation_stats", "[", "'index_error_misses'", "]", "=", "index_error_misses", "\n", "\n", "evaluation_stats_json", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'eval_stats_boxes.json'", ")", "\n", "\n", "io", ".", "dump_json_object", "(", "evaluation_stats", ",", "evaluation_stats_json", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.evaluate_boxes.evaluate_boxes_and_labels": [[293, 389], ["os.path.join", "h5py.File", "print", "utils.load_json_object", "print", "utils.load_json_object", "print", "tqdm.tqdm", "os.path.join", "utils.dump_json_object", "enumerate", "numpy.concatenate", "numpy.concatenate", "evaluation_stats.keys", "np.concatenate.append", "evaluate_boxes.box_label_recall", "human_boxes.tolist", "np.concatenate.tolist"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.evaluate_boxes.box_label_recall"], ["", "def", "evaluate_boxes_and_labels", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "select_boxes_dir", "=", "exp_const", ".", "exp_dir", "\n", "\n", "select_boxes_h5py", "=", "os", ".", "path", ".", "join", "(", "\n", "select_boxes_dir", ",", "\n", "'selected_coco_cls_dets.hdf5'", ")", "\n", "select_boxes", "=", "h5py", ".", "File", "(", "select_boxes_h5py", ")", "\n", "\n", "print", "(", "'Loading anno_list.json ...'", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "\n", "print", "(", "'Loading hoi_list.json ...'", ")", "\n", "hoi_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "hoi_list_json", ")", "\n", "\n", "print", "(", "'Evaluating box proposals ...'", ")", "\n", "evaluation_stats", "=", "{", "\n", "'num_gt_connections_recalled'", ":", "0", ",", "\n", "'num_gt_connections'", ":", "0", ",", "\n", "'num_gt_human_boxes_recalled'", ":", "0", ",", "\n", "'num_gt_human_boxes'", ":", "0", ",", "\n", "'num_gt_object_boxes_recalled'", ":", "0", ",", "\n", "'num_gt_object_boxes'", ":", "0", ",", "\n", "'num_connection_proposals'", ":", "0", ",", "\n", "'num_human_proposals'", ":", "0", ",", "\n", "'num_object_proposals'", ":", "0", ",", "\n", "}", "\n", "\n", "index_error_misses", "=", "0", "\n", "num_images", "=", "0", "\n", "for", "anno", "in", "tqdm", "(", "anno_list", ")", ":", "\n", "        ", "global_id", "=", "anno", "[", "'global_id'", "]", "\n", "if", "'test'", "in", "global_id", ":", "\n", "            ", "num_images", "+=", "1", "\n", "", "else", ":", "\n", "            ", "continue", "\n", "\n", "", "boxes_scores_rpn_ids", "=", "select_boxes", "[", "global_id", "]", "[", "'boxes_scores_rpn_ids'", "]", "[", "(", ")", "]", "\n", "start_end_ids", "=", "select_boxes", "[", "global_id", "]", "[", "'start_end_ids'", "]", "[", "(", ")", "]", "\n", "selected_dets", "=", "{", "'boxes'", ":", "{", "}", "}", "\n", "for", "cls_ind", ",", "cls_name", "in", "enumerate", "(", "COCO_CLASSES", ")", ":", "\n", "            ", "start_id", ",", "end_id", "=", "start_end_ids", "[", "cls_ind", "]", "\n", "selected_dets", "[", "'boxes'", "]", "[", "cls_name", "]", "=", "boxes_scores_rpn_ids", "[", "start_id", ":", "end_id", ",", ":", "4", "]", "\n", "\n", "", "human_boxes", "=", "selected_dets", "[", "'boxes'", "]", "[", "'person'", "]", "\n", "\n", "object_boxes", "=", "[", "]", "\n", "object_labels", "=", "[", "]", "\n", "for", "cls_name", "in", "selected_dets", "[", "'boxes'", "]", ":", "\n", "            ", "if", "cls_name", "in", "[", "'person'", ",", "'background'", "]", ":", "\n", "                ", "continue", "\n", "", "cls_object_boxes", "=", "selected_dets", "[", "'boxes'", "]", "[", "cls_name", "]", "\n", "object_boxes", ".", "append", "(", "cls_object_boxes", ")", "\n", "object_labels", "+=", "[", "cls_name", "]", "*", "cls_object_boxes", ".", "shape", "[", "0", "]", "\n", "", "object_boxes", "=", "np", ".", "concatenate", "(", "object_boxes", ")", "\n", "\n", "all_boxes", "=", "np", ".", "concatenate", "(", "(", "human_boxes", ",", "object_boxes", ")", ")", "\n", "\n", "try", ":", "\n", "            ", "recall_stats", "=", "box_label_recall", "(", "\n", "anno", "[", "'hois'", "]", ",", "\n", "human_boxes", ".", "tolist", "(", ")", ",", "\n", "object_boxes", ".", "tolist", "(", ")", ",", "\n", "object_labels", ",", "\n", "exp_const", ".", "iou_thresh", ",", "\n", "hoi_list", ")", "\n", "", "except", "IndexError", ":", "\n", "            ", "index_error_misses", "+=", "1", "\n", "num_images", "-=", "index_error_misses", "\n", "\n", "", "for", "k", "in", "evaluation_stats", ".", "keys", "(", ")", ":", "\n", "            ", "evaluation_stats", "[", "k", "]", "+=", "recall_stats", "[", "k", "]", "\n", "\n", "", "", "evaluation_stats", "[", "'human_recall'", "]", "=", "evaluation_stats", "[", "'num_gt_human_boxes_recalled'", "]", "/", "evaluation_stats", "[", "'num_gt_human_boxes'", "]", "\n", "evaluation_stats", "[", "'object_recall'", "]", "=", "evaluation_stats", "[", "'num_gt_object_boxes_recalled'", "]", "/", "evaluation_stats", "[", "'num_gt_object_boxes'", "]", "\n", "evaluation_stats", "[", "'connection_recall'", "]", "=", "evaluation_stats", "[", "'num_gt_connections_recalled'", "]", "/", "evaluation_stats", "[", "'num_gt_connections'", "]", "\n", "evaluation_stats", "[", "'average_human_proposals_per_image'", "]", "=", "evaluation_stats", "[", "'num_human_proposals'", "]", "/", "num_images", "\n", "evaluation_stats", "[", "'average_object_proposals_per_image'", "]", "=", "evaluation_stats", "[", "'num_object_proposals'", "]", "/", "num_images", "\n", "evaluation_stats", "[", "'average_connection_proposals_per_image'", "]", "=", "evaluation_stats", "[", "'average_human_proposals_per_image'", "]", "*", "evaluation_stats", "[", "'average_object_proposals_per_image'", "]", "\n", "evaluation_stats", "[", "'index_error_misses'", "]", "=", "index_error_misses", "\n", "\n", "\n", "evaluation_stats_json", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "f'eval_stats_boxes_labels.json'", ")", "\n", "\n", "io", ".", "dump_json_object", "(", "evaluation_stats", ",", "evaluation_stats_json", ")", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.prepare_data_for_faster_rcnn.prepare_hico": [[6, 37], ["utils.mkdir_if_not_exists", "print", "os.path.join", "data_const.to_json", "os.path.join", "exp_const.to_json", "print", "utils.load_json_object", "print", "enumerate", "os.path.join", "utils.dump_json_object", "len", "dict", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.JsonSerializableClass.to_json", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.JsonSerializableClass.to_json", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object"], ["def", "prepare_hico", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "io", ".", "mkdir_if_not_exists", "(", "exp_const", ".", "exp_dir", ")", "\n", "\n", "print", "(", "'Writing constants to exp dir ...'", ")", "\n", "data_const_json", "=", "os", ".", "path", ".", "join", "(", "exp_const", ".", "exp_dir", ",", "'data_const.json'", ")", "\n", "data_const", ".", "to_json", "(", "data_const_json", ")", "\n", "\n", "exp_const_json", "=", "os", ".", "path", ".", "join", "(", "exp_const", ".", "exp_dir", ",", "'exp_const.json'", ")", "\n", "exp_const", ".", "to_json", "(", "exp_const_json", ")", "\n", "\n", "print", "(", "'Loading anno_list.json ...'", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "\n", "print", "(", "'Creating input json for faster rcnn ...'", ")", "\n", "images_in_out", "=", "[", "None", "]", "*", "len", "(", "anno_list", ")", "\n", "for", "i", ",", "anno", "in", "enumerate", "(", "anno_list", ")", ":", "\n", "        ", "global_id", "=", "anno", "[", "'global_id'", "]", "\n", "image_in_out", "=", "dict", "(", ")", "\n", "image_in_out", "[", "'in_path'", "]", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "images_dir", ",", "\n", "anno", "[", "'image_path_postfix'", "]", ")", "\n", "image_in_out", "[", "'out_dir'", "]", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "proc_dir", ",", "\n", "'faster_rcnn_boxes'", ")", "\n", "image_in_out", "[", "'prefix'", "]", "=", "f'{global_id}_'", "\n", "images_in_out", "[", "i", "]", "=", "image_in_out", "\n", "\n", "", "images_in_out_json", "=", "os", ".", "path", ".", "join", "(", "\n", "exp_const", ".", "exp_dir", ",", "\n", "'faster_rcnn_im_in_out.json'", ")", "\n", "io", ".", "dump_json_object", "(", "images_in_out", ",", "images_in_out_json", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.select_confident_boxes.select_det_ids": [[11, 44], ["np.arange.astype", "range", "numpy.array", "numpy.arange", "numpy.nonzero", "min", "utils.bbox_utils.compute_area", "len", "range", "np.array.append", "utils.bbox_utils.compute_area", "pdb.set_trace"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.bbox_utils.compute_area"], ["def", "select_det_ids", "(", "boxes", ",", "scores", ",", "nms_keep_ids", ",", "score_thresh", ",", "max_dets", ")", ":", "\n", "    ", "if", "nms_keep_ids", "is", "None", ":", "\n", "        ", "nms_keep_ids", "=", "np", ".", "arange", "(", "0", ",", "scores", ".", "shape", "[", "0", "]", ")", "\n", "\n", "", "nms_keep_ids", "=", "nms_keep_ids", ".", "astype", "(", "'int'", ")", "\n", "# Select non max suppressed dets", "\n", "nms_scores", "=", "scores", "[", "nms_keep_ids", "]", "\n", "nms_boxes", "=", "boxes", "[", "nms_keep_ids", "]", "\n", "\n", "# Select dets above a score_thresh and which have area > 1", "\n", "nms_ids_above_thresh", "=", "np", ".", "nonzero", "(", "nms_scores", ">", "score_thresh", ")", "[", "0", "]", "\n", "nms_ids", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "min", "(", "nms_ids_above_thresh", ".", "shape", "[", "0", "]", ",", "max_dets", ")", ")", ":", "\n", "        ", "area", "=", "compute_area", "(", "nms_boxes", "[", "i", "]", ",", "invalid", "=", "-", "1", ")", "\n", "if", "area", ">", "1", ":", "\n", "            ", "nms_ids", ".", "append", "(", "i", ")", "\n", "\n", "# If no dets satisfy previous criterion select the highest ranking one with area > 1", "\n", "", "", "if", "len", "(", "nms_ids", ")", "==", "0", ":", "\n", "        ", "for", "i", "in", "range", "(", "nms_keep_ids", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "area", "=", "compute_area", "(", "nms_boxes", "[", "i", "]", ",", "invalid", "=", "-", "1", ")", "\n", "if", "area", ">", "1", ":", "\n", "                ", "nms_ids", "=", "[", "i", "]", "\n", "break", "\n", "\n", "# Convert nms ids to box ids", "\n", "", "", "", "nms_ids", "=", "np", ".", "array", "(", "nms_ids", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "try", ":", "\n", "        ", "ids", "=", "nms_keep_ids", "[", "nms_ids", "]", "\n", "", "except", ":", "\n", "        ", "import", "pdb", ";", "pdb", ".", "set_trace", "(", ")", "\n", "\n", "", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.select_confident_boxes.select_dets": [[46, 93], ["numpy.zeros", "enumerate", "numpy.concatenate", "numpy.array", "numpy.concatenate", "np.concatenate.append", "len", "select_confident_boxes.select_det_ids", "select_confident_boxes.select_det_ids", "select_confident_boxes.select_det_ids", "numpy.expand_dims", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.select_confident_boxes.select_det_ids", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.select_confident_boxes.select_det_ids", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.select_confident_boxes.select_det_ids"], ["", "def", "select_dets", "(", "\n", "boxes", ",", "\n", "scores", ",", "\n", "nms_keep_indices", ",", "\n", "exp_const", ")", ":", "\n", "    ", "selected_dets", "=", "[", "]", "\n", "\n", "start_end_ids", "=", "np", ".", "zeros", "(", "[", "len", "(", "COCO_CLASSES", ")", ",", "2", "]", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "start_id", "=", "0", "\n", "for", "cls_ind", ",", "cls_name", "in", "enumerate", "(", "COCO_CLASSES", ")", ":", "\n", "        ", "cls_boxes", "=", "boxes", "[", ":", ",", "4", "*", "cls_ind", ":", "4", "*", "(", "cls_ind", "+", "1", ")", "]", "\n", "cls_scores", "=", "scores", "[", ":", ",", "cls_ind", "]", "\n", "cls_nms_keep_ids", "=", "np", ".", "array", "(", "nms_keep_indices", "[", "cls_ind", "]", ")", "\n", "\n", "if", "cls_name", "==", "'person'", ":", "\n", "            ", "select_ids", "=", "select_det_ids", "(", "\n", "cls_boxes", ",", "\n", "cls_scores", ",", "\n", "cls_nms_keep_ids", ",", "\n", "exp_const", ".", "human_score_thresh", ",", "\n", "exp_const", ".", "max_humans", ")", "\n", "", "elif", "cls_name", "==", "'background'", ":", "\n", "            ", "select_ids", "=", "select_det_ids", "(", "\n", "cls_boxes", ",", "\n", "cls_scores", ",", "\n", "cls_nms_keep_ids", ",", "\n", "exp_const", ".", "background_score_thresh", ",", "\n", "exp_const", ".", "max_background", ")", "\n", "", "else", ":", "\n", "            ", "select_ids", "=", "select_det_ids", "(", "\n", "cls_boxes", ",", "\n", "cls_scores", ",", "\n", "cls_nms_keep_ids", ",", "\n", "exp_const", ".", "object_score_thresh", ",", "\n", "exp_const", ".", "max_objects_per_class", ")", "\n", "\n", "", "boxes_scores_rpn_id", "=", "np", ".", "concatenate", "(", "(", "\n", "cls_boxes", "[", "select_ids", "]", ",", "\n", "np", ".", "expand_dims", "(", "cls_scores", "[", "select_ids", "]", ",", "1", ")", ",", "\n", "np", ".", "expand_dims", "(", "select_ids", ",", "1", ")", ")", ",", "1", ")", "\n", "selected_dets", ".", "append", "(", "boxes_scores_rpn_id", ")", "\n", "num_boxes", "=", "boxes_scores_rpn_id", ".", "shape", "[", "0", "]", "\n", "start_end_ids", "[", "cls_ind", ",", ":", "]", "=", "[", "start_id", ",", "start_id", "+", "num_boxes", "]", "\n", "start_id", "+=", "num_boxes", "\n", "\n", "", "selected_dets", "=", "np", ".", "concatenate", "(", "selected_dets", ")", "\n", "return", "selected_dets", ",", "start_end_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.select_confident_boxes.select": [[95, 143], ["utils.mkdir_if_not_exists", "print", "print", "print", "os.path.join", "data_const.to_json", "os.path.join", "exp_const.to_json", "print", "utils.load_json_object", "print", "os.path.join", "h5py.File", "print", "tqdm.tqdm", "h5py.File.close", "os.path.join", "numpy.load", "os.path.join", "numpy.load", "os.path.join", "utils.load_json_object", "select_confident_boxes.select_dets", "h5py.File.create_group", "f[].create_dataset", "f[].create_dataset"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.mkdir_if_not_exists", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.JsonSerializableClass.to_json", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.JsonSerializableClass.to_json", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.html_writer.HtmlWriter.close", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.select_confident_boxes.select_dets"], ["", "def", "select", "(", "exp_const", ",", "data_const", ")", ":", "\n", "    ", "io", ".", "mkdir_if_not_exists", "(", "exp_const", ".", "exp_dir", ")", "\n", "\n", "select_boxes_dir", "=", "exp_const", ".", "exp_dir", "\n", "\n", "# Print where the boxes are coming from and where the output is written", "\n", "print", "(", "f'Boxes will be read from: {data_const.faster_rcnn_boxes}'", ")", "\n", "print", "(", "f'Boxes will be written to: {select_boxes_dir}'", ")", "\n", "\n", "print", "(", "'Writing constants to exp dir ...'", ")", "\n", "data_const_json", "=", "os", ".", "path", ".", "join", "(", "exp_const", ".", "exp_dir", ",", "'data_const.json'", ")", "\n", "data_const", ".", "to_json", "(", "data_const_json", ")", "\n", "\n", "exp_const_json", "=", "os", ".", "path", ".", "join", "(", "exp_const", ".", "exp_dir", ",", "'exp_const.json'", ")", "\n", "exp_const", ".", "to_json", "(", "exp_const_json", ")", "\n", "\n", "print", "(", "'Loading anno_list.json ...'", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "\n", "print", "(", "'Creating selected_coco_cls_dets.hdf5 file ...'", ")", "\n", "hdf5_file", "=", "os", ".", "path", ".", "join", "(", "select_boxes_dir", ",", "'selected_coco_cls_dets.hdf5'", ")", "\n", "f", "=", "h5py", ".", "File", "(", "hdf5_file", ",", "'w'", ")", "\n", "\n", "print", "(", "'Selecting boxes ...'", ")", "\n", "for", "anno", "in", "tqdm", "(", "anno_list", ")", ":", "\n", "        ", "global_id", "=", "anno", "[", "'global_id'", "]", "\n", "\n", "boxes_npy", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "faster_rcnn_boxes", ",", "\n", "f'{global_id}_boxes.npy'", ")", "\n", "boxes", "=", "np", ".", "load", "(", "boxes_npy", ")", "\n", "\n", "scores_npy", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "faster_rcnn_boxes", ",", "\n", "f'{global_id}_scores.npy'", ")", "\n", "scores", "=", "np", ".", "load", "(", "scores_npy", ")", "\n", "\n", "nms_keep_indices_json", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "faster_rcnn_boxes", ",", "\n", "f'{global_id}_nms_keep_indices.json'", ")", "\n", "nms_keep_indices", "=", "io", ".", "load_json_object", "(", "nms_keep_indices_json", ")", "\n", "\n", "selected_dets", ",", "start_end_ids", "=", "select_dets", "(", "boxes", ",", "scores", ",", "nms_keep_indices", ",", "exp_const", ")", "\n", "f", ".", "create_group", "(", "global_id", ")", "\n", "f", "[", "global_id", "]", ".", "create_dataset", "(", "'boxes_scores_rpn_ids'", ",", "data", "=", "selected_dets", ")", "\n", "f", "[", "global_id", "]", ".", "create_dataset", "(", "'start_end_ids'", ",", "data", "=", "start_end_ids", ")", "\n", "\n", "", "f", ".", "close", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.run.exp_detect_coco_objects_in_hico": [[9, 16], ["utils.constants.ExpConstants", "data.hico.hico_constants.HicoConstants", "exp.prepare_hico"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.prepare_data_for_faster_rcnn.prepare_hico"], ["from", "exp", ".", "hoi_classifier", ".", "models", ".", "hoi_classifier_model", "import", "HoiClassifierConstants", "\n", "import", "exp", ".", "hoi_classifier", ".", "train", "as", "train", "\n", "import", "exp", ".", "hoi_classifier", ".", "eval", "as", "evaluate", "\n", "from", "exp", ".", "hoi_classifier", ".", "data", ".", "features_dataset", "import", "FeatureConstants", "\n", "import", "exp", ".", "hoi_classifier", ".", "data", ".", "cache_box_features", "as", "cache_box_features", "\n", "import", "exp", ".", "hoi_classifier", ".", "data", ".", "cache_pose_features", "as", "cache_pose_features", "\n", "import", "exp", ".", "hoi_classifier", ".", "data", ".", "assign_pose_to_human_candidates", "as", "assign_pose_to_human_candidates", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.run.exp_select_and_evaluate_confident_boxes_in_hico": [[18, 40], ["utils.constants.ExpConstants", "data.hico.hico_constants.HicoConstants", "exp.select", "exp.evaluate_boxes", "exp.evaluate_boxes_and_labels"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.select_confident_boxes.select", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.evaluate_boxes.evaluate_boxes", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.detect_coco_objects.evaluate_boxes.evaluate_boxes_and_labels"], ["import", "exp", ".", "hoi_classifier", ".", "vis", ".", "top_boxes_per_hoi", "as", "vis_top_boxes_per_hoi", "\n", "\n", "\n", "parser", ".", "add_argument", "(", "\n", "'--gen_hoi_cand'", ",", "\n", "default", "=", "False", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "'Apply this flag to generate hoi candidates'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--label_hoi_cand'", ",", "\n", "default", "=", "False", ",", "\n", "action", "=", "'store_true'", ",", "\n", "help", "=", "'Apply this flag to label hoi candidates'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--subset'", ",", "\n", "type", "=", "str", ",", "\n", "choices", "=", "[", "'train'", ",", "'train_val'", ",", "'val'", ",", "'test'", "]", ",", "\n", "help", "=", "'Apply this flag to specify subset of data'", ")", "\n", "parser", ".", "add_argument", "(", "\n", "'--imgs_per_batch'", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ",", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.split_ids.split": [[8, 33], ["int", "random.sample", "set", "split_ids[].append", "split_ids[].append", "len", "split_ids[].append"], "function", ["None"], ["def", "split", "(", "global_ids", ",", "val_frac", ")", ":", "\n", "# val_frac is num_val / num_train_val", "\n", "\n", "    ", "split_ids", "=", "{", "\n", "'train'", ":", "[", "]", ",", "\n", "'val'", ":", "[", "]", ",", "\n", "'train_val'", ":", "[", "]", ",", "\n", "'test'", ":", "[", "]", "\n", "}", "\n", "\n", "for", "global_id", "in", "global_ids", ":", "\n", "        ", "if", "'test'", "in", "global_id", ":", "\n", "            ", "split_ids", "[", "'test'", "]", ".", "append", "(", "global_id", ")", "\n", "", "else", ":", "\n", "            ", "split_ids", "[", "'train_val'", "]", ".", "append", "(", "global_id", ")", "\n", "\n", "", "", "num_val", "=", "int", "(", "len", "(", "split_ids", "[", "'train_val'", "]", ")", "*", "val_frac", ")", "\n", "split_ids", "[", "'val'", "]", "=", "random", ".", "sample", "(", "split_ids", "[", "'train_val'", "]", ",", "num_val", ")", "\n", "\n", "val_set", "=", "set", "(", "split_ids", "[", "'val'", "]", ")", "\n", "for", "global_id", "in", "split_ids", "[", "'train_val'", "]", ":", "\n", "        ", "if", "global_id", "not", "in", "val_set", ":", "\n", "            ", "split_ids", "[", "'train'", "]", ".", "append", "(", "global_id", ")", "\n", "\n", "", "", "return", "split_ids", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.split_ids.main": [[35, 59], ["data.hico.hico_constants.HicoConstants", "utils.load_json_object", "split_ids.split", "os.path.join", "utils.dump_json_object", "split.items", "os.path.join", "utils.dump_json_object", "len", "print", "len"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.split_ids.split", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object"], ["", "def", "main", "(", ")", ":", "\n", "    ", "data_const", "=", "HicoConstants", "(", ")", "\n", "\n", "hico_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "global_ids", "=", "[", "anno", "[", "'global_id'", "]", "for", "anno", "in", "hico_list", "]", "\n", "\n", "# Create and save splits", "\n", "split_ids", "=", "split", "(", "global_ids", ",", "0.2", ")", "\n", "\n", "split_ids_json", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "proc_dir", ",", "\n", "'split_ids.json'", ")", "\n", "io", ".", "dump_json_object", "(", "split_ids", ",", "split_ids_json", ")", "\n", "\n", "# Create and save split stats", "\n", "split_stats", "=", "{", "}", "\n", "for", "subset_name", ",", "subset_ids", "in", "split_ids", ".", "items", "(", ")", ":", "\n", "        ", "split_stats", "[", "subset_name", "]", "=", "len", "(", "subset_ids", ")", "\n", "print", "(", "f'{subset_name}: {len(subset_ids)}'", ")", "\n", "\n", "", "split_stats_json", "=", "os", ".", "path", ".", "join", "(", "\n", "data_const", ".", "proc_dir", ",", "\n", "'split_ids_stats.json'", ")", "\n", "io", ".", "dump_json_object", "(", "split_stats", ",", "split_stats_json", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hico_constants.HicoConstants.__init__": [[7, 42], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.getcwd", "os.getcwd"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "clean_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "'data_symlinks/hico_clean'", ")", ",", "\n", "proc_dir", "=", "os", ".", "path", ".", "join", "(", "os", ".", "getcwd", "(", ")", ",", "'data_symlinks/hico_processed'", ")", ")", ":", "\n", "        ", "self", ".", "clean_dir", "=", "clean_dir", "\n", "self", ".", "proc_dir", "=", "proc_dir", "\n", "\n", "# Clean constants", "\n", "self", ".", "anno_bbox_mat", "=", "os", ".", "path", ".", "join", "(", "self", ".", "clean_dir", ",", "'anno_bbox.mat'", ")", "\n", "self", ".", "anno_mat", "=", "os", ".", "path", ".", "join", "(", "self", ".", "clean_dir", ",", "'anno.mat'", ")", "\n", "self", ".", "hico_list_hoi_txt", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "clean_dir", ",", "\n", "'hico_list_hoi.txt'", ")", "\n", "self", ".", "hico_list_obj_txt", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "clean_dir", ",", "\n", "'hico_list_obj.txt'", ")", "\n", "self", ".", "hico_list_vb_txt", "=", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "clean_dir", ",", "\n", "'hico_list_vb.txt'", ")", "\n", "self", ".", "images_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "clean_dir", ",", "'images'", ")", "\n", "\n", "# Processed constants", "\n", "self", ".", "anno_list_json", "=", "os", ".", "path", ".", "join", "(", "self", ".", "proc_dir", ",", "'anno_list.json'", ")", "\n", "self", ".", "hoi_list_json", "=", "os", ".", "path", ".", "join", "(", "self", ".", "proc_dir", ",", "'hoi_list.json'", ")", "\n", "self", ".", "object_list_json", "=", "os", ".", "path", ".", "join", "(", "self", ".", "proc_dir", ",", "'object_list.json'", ")", "\n", "self", ".", "verb_list_json", "=", "os", ".", "path", ".", "join", "(", "self", ".", "proc_dir", ",", "'verb_list.json'", ")", "\n", "\n", "# Need to run split_ids.py", "\n", "self", ".", "split_ids_json", "=", "os", ".", "path", ".", "join", "(", "self", ".", "proc_dir", ",", "'split_ids.json'", ")", "\n", "\n", "# Need to run hoi_cls_count.py", "\n", "self", ".", "hoi_cls_count_json", "=", "os", ".", "path", ".", "join", "(", "self", ".", "proc_dir", ",", "'hoi_cls_count.json'", ")", "\n", "self", ".", "bin_to_hoi_ids_json", "=", "os", ".", "path", ".", "join", "(", "self", ".", "proc_dir", ",", "'bin_to_hoi_ids.json'", ")", "\n", "\n", "self", ".", "faster_rcnn_boxes", "=", "os", ".", "path", ".", "join", "(", "self", ".", "proc_dir", ",", "'faster_rcnn_boxes'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.__init__": [[10, 14], ["scipy.loadmat", "scipy.loadmat"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "const", ")", ":", "\n", "        ", "self", ".", "const", "=", "const", "\n", "self", ".", "anno", "=", "scio", ".", "loadmat", "(", "self", ".", "const", ".", "anno_mat", ")", "\n", "self", ".", "anno_bbox", "=", "scio", ".", "loadmat", "(", "self", ".", "const", ".", "anno_bbox_mat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.create_hoi_list": [[15, 26], ["range", "str().zfill", "str"], "methods", ["None"], ["", "def", "create_hoi_list", "(", "self", ")", ":", "\n", "        ", "num_hoi", "=", "self", ".", "anno", "[", "'list_action'", "]", ".", "shape", "[", "0", "]", "\n", "hoi_list", "=", "[", "None", "]", "*", "num_hoi", "\n", "for", "i", "in", "range", "(", "num_hoi", ")", ":", "\n", "            ", "hoi_list", "[", "i", "]", "=", "{", "\n", "'id'", ":", "str", "(", "i", "+", "1", ")", ".", "zfill", "(", "3", ")", ",", "\n", "'object'", ":", "self", ".", "anno", "[", "'list_action'", "]", "[", "i", ",", "0", "]", "[", "0", "]", "[", "0", "]", ",", "\n", "'verb'", ":", "self", ".", "anno", "[", "'list_action'", "]", "[", "i", ",", "0", "]", "[", "1", "]", "[", "0", "]", ",", "\n", "}", "\n", "\n", "", "return", "hoi_list", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.get_image_size": [[27, 33], ["int"], "methods", ["None"], ["", "def", "get_image_size", "(", "self", ",", "i", ",", "subset", ")", ":", "\n", "        ", "W", "=", "self", ".", "anno_bbox", "[", "f'bbox_{subset}'", "]", "[", "0", ",", "i", "]", "[", "1", "]", "[", "0", ",", "0", "]", "[", "0", "]", "[", "0", ",", "0", "]", "\n", "H", "=", "self", ".", "anno_bbox", "[", "f'bbox_{subset}'", "]", "[", "0", ",", "i", "]", "[", "1", "]", "[", "0", ",", "0", "]", "[", "1", "]", "[", "0", ",", "0", "]", "\n", "C", "=", "self", ".", "anno_bbox", "[", "f'bbox_{subset}'", "]", "[", "0", ",", "i", "]", "[", "1", "]", "[", "0", ",", "0", "]", "[", "2", "]", "[", "0", ",", "0", "]", "\n", "image_size", "=", "[", "int", "(", "v", ")", "for", "v", "in", "[", "H", ",", "W", ",", "C", "]", "]", "\n", "return", "image_size", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.get_hoi_bboxes": [[34, 67], ["range", "str().zfill", "range", "range", "int", "str", "int", "int"], "methods", ["None"], ["", "def", "get_hoi_bboxes", "(", "self", ",", "i", ",", "subset", ")", ":", "\n", "        ", "num_hois", "=", "self", ".", "anno_bbox", "[", "f'bbox_{subset}'", "]", "[", "0", ",", "i", "]", "[", "2", "]", ".", "shape", "[", "1", "]", "\n", "hois", "=", "[", "None", "]", "*", "num_hois", "\n", "for", "j", "in", "range", "(", "num_hois", ")", ":", "\n", "            ", "hoi_data", "=", "self", ".", "anno_bbox", "[", "f'bbox_{subset}'", "]", "[", "0", ",", "i", "]", "[", "2", "]", "[", "0", ",", "j", "]", "\n", "\n", "hoi_id", "=", "str", "(", "hoi_data", "[", "0", "]", "[", "0", ",", "0", "]", ")", ".", "zfill", "(", "3", ")", "\n", "\n", "num_boxes", "=", "hoi_data", "[", "1", "]", ".", "shape", "[", "1", "]", "\n", "human_bboxes", "=", "[", "None", "]", "*", "num_boxes", "\n", "for", "b", "in", "range", "(", "num_boxes", ")", ":", "\n", "                ", "human_bboxes", "[", "b", "]", "=", "[", "int", "(", "hoi_data", "[", "1", "]", "[", "0", ",", "b", "]", "[", "k", "]", "[", "0", ",", "0", "]", "-", "1", ")", "for", "k", "in", "[", "0", ",", "2", ",", "1", ",", "3", "]", "]", "\n", "\n", "", "num_boxes", "=", "hoi_data", "[", "2", "]", ".", "shape", "[", "1", "]", "\n", "object_bboxes", "=", "[", "None", "]", "*", "num_boxes", "\n", "for", "b", "in", "range", "(", "num_boxes", ")", ":", "\n", "                ", "object_bboxes", "[", "b", "]", "=", "[", "int", "(", "hoi_data", "[", "2", "]", "[", "0", ",", "b", "]", "[", "k", "]", "[", "0", ",", "0", "]", "-", "1", ")", "for", "k", "in", "[", "0", ",", "2", ",", "1", ",", "3", "]", "]", "\n", "\n", "", "connections", "=", "(", "hoi_data", "[", "3", "]", "-", "1", ")", ".", "tolist", "(", ")", "\n", "\n", "invis", "=", "int", "(", "hoi_data", "[", "4", "]", "[", "0", ",", "0", "]", ")", "\n", "\n", "hois", "[", "j", "]", "=", "{", "\n", "'id'", ":", "hoi_id", ",", "\n", "'human_bboxes'", ":", "human_bboxes", ",", "\n", "'object_bboxes'", ":", "object_bboxes", ",", "\n", "'connections'", ":", "connections", ",", "\n", "'invis'", ":", "invis", ",", "\n", "}", "\n", "\n", "", "return", "hois", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.create_anno_list": [[68, 96], ["print", "tqdm.tqdm.tqdm", "range", "image_jpg.endswith", "anno_list.append", "mat_to_json.ConvertMat2Json.get_image_size", "mat_to_json.ConvertMat2Json.get_hoi_bboxes", "str().zfill", "str().zfill", "numpy.argwhere().tolist", "numpy.argwhere().tolist", "str", "str", "numpy.argwhere", "numpy.argwhere"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.get_image_size", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.get_hoi_bboxes"], ["", "def", "create_anno_list", "(", "self", ")", ":", "\n", "        ", "anno_list", "=", "[", "]", "\n", "for", "subset", "in", "[", "'train'", ",", "'test'", "]", ":", "\n", "            ", "print", "(", "f'Adding {subset} data to anno list ...'", ")", "\n", "num_samples", "=", "self", ".", "anno", "[", "f'anno_{subset}'", "]", ".", "shape", "[", "1", "]", "\n", "for", "i", "in", "tqdm", "(", "range", "(", "num_samples", ")", ")", ":", "\n", "                ", "image_jpg", "=", "self", ".", "anno", "[", "f'list_{subset}'", "]", "[", "i", "]", "[", "0", "]", "[", "0", "]", "\n", "\n", "if", "image_jpg", ".", "endswith", "(", "'.jpg'", ")", ":", "\n", "                    ", "global_id", "=", "image_jpg", "[", ":", "-", "4", "]", "\n", "", "else", ":", "\n", "                    ", "assert", "(", "False", ")", ",", "'Image extension is not .jpg'", "\n", "\n", "", "anno", "=", "{", "\n", "'global_id'", ":", "global_id", ",", "\n", "'image_path_postfix'", ":", "f'{subset}2015/{image_jpg}'", ",", "\n", "'image_size'", ":", "self", ".", "get_image_size", "(", "i", ",", "subset", ")", ",", "\n", "'hois'", ":", "self", ".", "get_hoi_bboxes", "(", "i", ",", "subset", ")", "\n", "}", "\n", "\n", "anno", "[", "'pos_hoi_ids'", "]", "=", "[", "str", "(", "k", "[", "0", "]", "+", "1", ")", ".", "zfill", "(", "3", ")", "for", "k", "in", "np", ".", "argwhere", "(", "self", ".", "anno", "[", "f'anno_{subset}'", "]", "[", ":", ",", "i", "]", "==", "1", ")", ".", "tolist", "(", ")", "]", "\n", "anno", "[", "'neg_hoi_ids'", "]", "=", "[", "str", "(", "k", "[", "0", "]", "+", "1", ")", ".", "zfill", "(", "3", ")", "for", "k", "in", "np", ".", "argwhere", "(", "self", ".", "anno", "[", "f'anno_{subset}'", "]", "[", ":", ",", "i", "]", "==", "-", "1", ")", ".", "tolist", "(", ")", "]", "\n", "\n", "anno_list", ".", "append", "(", "anno", ")", "\n", "\n", "", "", "return", "anno_list", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.convert": [[97, 125], ["print", "mat_to_json.ConvertMat2Json.create_anno_list", "utils.dump_json_object", "print", "mat_to_json.ConvertMat2Json.create_hoi_list", "utils.dump_json_object", "print", "sorted", "enumerate", "utils.dump_json_object", "print", "sorted", "enumerate", "utils.dump_json_object", "list", "list", "set", "str().zfill", "set", "str().zfill", "str", "str"], "methods", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.create_anno_list", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.mat_to_json.ConvertMat2Json.create_hoi_list", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object"], ["", "def", "convert", "(", "self", ")", ":", "\n", "        ", "print", "(", "'Creating anno list ...'", ")", "\n", "anno_list", "=", "self", ".", "create_anno_list", "(", ")", "\n", "io", ".", "dump_json_object", "(", "anno_list", ",", "self", ".", "const", ".", "anno_list_json", ")", "\n", "\n", "print", "(", "'Creating hoi list ...'", ")", "\n", "hoi_list", "=", "self", ".", "create_hoi_list", "(", ")", "\n", "io", ".", "dump_json_object", "(", "hoi_list", ",", "self", ".", "const", ".", "hoi_list_json", ")", "\n", "\n", "print", "(", "'Creating object list ...'", ")", "\n", "object_list", "=", "sorted", "(", "list", "(", "set", "(", "[", "hoi", "[", "'object'", "]", "for", "hoi", "in", "hoi_list", "]", ")", ")", ")", "\n", "for", "i", ",", "obj", "in", "enumerate", "(", "object_list", ")", ":", "\n", "            ", "object_list", "[", "i", "]", "=", "{", "\n", "'id'", ":", "str", "(", "i", "+", "1", ")", ".", "zfill", "(", "3", ")", ",", "\n", "'name'", ":", "obj", "\n", "}", "\n", "\n", "", "io", ".", "dump_json_object", "(", "object_list", ",", "self", ".", "const", ".", "object_list_json", ")", "\n", "\n", "print", "(", "'Creating verb list ...'", ")", "\n", "verb_list", "=", "sorted", "(", "list", "(", "set", "(", "[", "hoi", "[", "'verb'", "]", "for", "hoi", "in", "hoi_list", "]", ")", ")", ")", "\n", "for", "i", ",", "verb", "in", "enumerate", "(", "verb_list", ")", ":", "\n", "            ", "verb_list", "[", "i", "]", "=", "{", "\n", "'id'", ":", "str", "(", "i", "+", "1", ")", ".", "zfill", "(", "3", ")", ",", "\n", "'name'", ":", "verb", "\n", "}", "\n", "\n", "", "io", ".", "dump_json_object", "(", "verb_list", ",", "self", ".", "const", ".", "verb_list_json", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hoi_cls_count.bin_hoi_ids": [[8, 19], ["hoi_cls_count.items", "str", "bins[].append", "str"], "function", ["None"], ["def", "bin_hoi_ids", "(", "hoi_cls_count", ",", "upper_limits", ")", ":", "\n", "    ", "bins", "=", "{", "str", "(", "ul", ")", ":", "[", "]", "for", "ul", "in", "upper_limits", "}", "\n", "for", "hoi_id", ",", "count", "in", "hoi_cls_count", ".", "items", "(", ")", ":", "\n", "        ", "ll", "=", "0", "\n", "for", "ul", "in", "upper_limits", ":", "\n", "            ", "if", "count", ">=", "ll", "and", "count", "<", "ul", ":", "\n", "                ", "bins", "[", "str", "(", "ul", ")", "]", ".", "append", "(", "hoi_id", ")", "\n", "break", "\n", "", "else", ":", "\n", "                ", "ll", "=", "ul", "\n", "", "", "", "return", "bins", "\n", "\n"]], "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hoi_cls_count.main": [[21, 43], ["data.hico.hico_constants.HicoConstants", "utils.load_json_object", "tqdm.tqdm", "hoi_cls_count.bin_hoi_ids", "os.path.join", "utils.dump_json_object", "os.path.join", "utils.dump_json_object", "len"], "function", ["home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.load_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.hico.hoi_cls_count.bin_hoi_ids", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object", "home.repos.pwc.inspect_result.Dong-JinKim_ActionCooccurrencePriors.utils.io.dump_json_object"], ["", "def", "main", "(", ")", ":", "\n", "    ", "data_const", "=", "HicoConstants", "(", ")", "\n", "anno_list", "=", "io", ".", "load_json_object", "(", "data_const", ".", "anno_list_json", ")", "\n", "hoi_cls_count", "=", "{", "}", "\n", "for", "anno", "in", "tqdm", "(", "anno_list", ")", ":", "\n", "        ", "if", "'test'", "in", "anno", "[", "'global_id'", "]", ":", "\n", "            ", "continue", "\n", "\n", "", "for", "hoi", "in", "anno", "[", "'hois'", "]", ":", "\n", "            ", "hoi_id", "=", "hoi", "[", "'id'", "]", "\n", "if", "hoi_id", "not", "in", "hoi_cls_count", ":", "\n", "                ", "hoi_cls_count", "[", "hoi_id", "]", "=", "0", "\n", "", "hoi_cls_count", "[", "hoi_id", "]", "+=", "len", "(", "hoi", "[", "'connections'", "]", ")", "\n", "\n", "", "", "upper_limits", "=", "[", "10", ",", "50", ",", "100", ",", "500", ",", "1000", ",", "10000", "]", "\n", "bin_to_hoi_ids", "=", "bin_hoi_ids", "(", "hoi_cls_count", ",", "upper_limits", ")", "\n", "\n", "hoi_cls_count_json", "=", "os", ".", "path", ".", "join", "(", "data_const", ".", "proc_dir", ",", "'hoi_cls_count.json'", ")", "\n", "io", ".", "dump_json_object", "(", "hoi_cls_count", ",", "hoi_cls_count_json", ")", "\n", "\n", "bin_to_hoi_ids_json", "=", "os", ".", "path", ".", "join", "(", "data_const", ".", "proc_dir", ",", "'bin_to_hoi_ids.json'", ")", "\n", "io", ".", "dump_json_object", "(", "bin_to_hoi_ids", ",", "bin_to_hoi_ids_json", ")", "\n", "\n"]]}