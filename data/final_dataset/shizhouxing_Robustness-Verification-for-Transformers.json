{"home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.tokenize": [[12, 14], ["nltk.word_tokenize"], "function", ["None"], ["def", "tokenize", "(", "sent", ")", ":", "\n", "    ", "return", "nltk", ".", "word_tokenize", "(", "sent", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.tokenize_example": [[15, 20], ["data_utils.tokenize"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.tokenize"], ["", "def", "tokenize_example", "(", "example", ")", ":", "\n", "    ", "for", "key", "in", "[", "\"sent_a\"", ",", "\"sent_b\"", "]", ":", "\n", "        ", "if", "key", "in", "example", ":", "\n", "            ", "example", "[", "key", "]", "=", "tokenize", "(", "example", "[", "key", "]", ")", "\n", "", "", "return", "example", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.load_data_yelp": [[21, 40], ["print", "open", "csv.reader", "multiprocessing.Pool", "pool.map", "text.replace.replace", "text.replace.replace", "pool.map.append", "int"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append"], ["", "def", "load_data_yelp", "(", "args", ",", "set", ")", ":", "\n", "    ", "path", "=", "\"data/%s/%s.csv\"", "%", "(", "args", ".", "data", ",", "set", ")", "\n", "print", "(", "\"Loading yelp data from \"", "+", "path", ")", "\n", "data", "=", "[", "]", "\n", "with", "open", "(", "path", ")", "as", "file", ":", "\n", "        ", "raw", "=", "csv", ".", "reader", "(", "file", ")", "\n", "for", "row", "in", "raw", ":", "\n", "            ", "if", "row", "[", "0", "]", "==", "\"label\"", ":", "\n", "                ", "continue", "\n", "", "text", "=", "row", "[", "1", "]", "\n", "text", "=", "text", ".", "replace", "(", "\"\\\\n\"", ",", "\" \"", ")", "\n", "text", "=", "text", ".", "replace", "(", "'\\\\\"'", ",", "'\"'", ")", "\n", "data", ".", "append", "(", "{", "\n", "\"label\"", ":", "int", "(", "row", "[", "0", "]", ")", ",", "\n", "\"sent_a\"", ":", "text", "\n", "}", ")", "\n", "", "", "with", "Pool", "(", "processes", "=", "args", ".", "cpus", ")", "as", "pool", ":", "\n", "        ", "data", "=", "pool", ".", "map", "(", "tokenize_example", ",", "data", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.load_data_sst": [[41, 87], ["print", "print", "open", "file.readlines", "enumerate", "open", "multiprocessing.Pool", "pool.map", "line[].split", "int", "range", "pool.map.append", "file.readlines", "pool.map.append", "len", "tokens.append", "word_labels.append", "int", "int", "line.split", "line.split", "segs[].find"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append"], ["", "def", "load_data_sst", "(", "args", ",", "set", ")", ":", "\n", "    ", "if", "set", "!=", "\"train\"", ":", "\n", "        ", "path", "=", "\"data/%s/%s.txt\"", "%", "(", "args", ".", "data", ",", "set", ")", "\n", "print", "(", "\"Loading sst data from \"", "+", "path", ")", "\n", "data", "=", "[", "]", "\n", "with", "open", "(", "path", ")", "as", "file", ":", "\n", "            ", "for", "line", "in", "file", ".", "readlines", "(", ")", ":", "\n", "                ", "segs", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "\" \"", ")", "\n", "tokens", "=", "[", "]", "\n", "word_labels", "=", "[", "]", "\n", "label", "=", "int", "(", "segs", "[", "0", "]", "[", "1", "]", ")", "\n", "if", "label", "<", "2", ":", "\n", "                    ", "label", "=", "0", "\n", "", "elif", "label", ">=", "3", ":", "\n", "                    ", "label", "=", "1", "\n", "", "else", ":", "\n", "                    ", "continue", "\n", "", "for", "i", "in", "range", "(", "len", "(", "segs", ")", "-", "1", ")", ":", "\n", "                    ", "if", "segs", "[", "i", "]", "[", "0", "]", "==", "\"(\"", "and", "segs", "[", "i", "]", "[", "1", "]", "in", "[", "\"0\"", ",", "\"1\"", ",", "\"2\"", ",", "\"3\"", ",", "\"4\"", "]", "and", "segs", "[", "i", "+", "1", "]", "[", "0", "]", "!=", "\"(\"", ":", "\n", "                        ", "tokens", ".", "append", "(", "segs", "[", "i", "+", "1", "]", "[", ":", "segs", "[", "i", "+", "1", "]", ".", "find", "(", "\")\"", ")", "]", ")", "\n", "word_labels", ".", "append", "(", "int", "(", "segs", "[", "i", "]", "[", "1", "]", ")", ")", "\n", "", "", "data", ".", "append", "(", "{", "\n", "\"label\"", ":", "label", ",", "\n", "\"sent_a\"", ":", "tokens", ",", "\n", "\"word_labels\"", ":", "word_labels", "\n", "}", ")", "\n", "", "", "for", "example", "in", "data", ":", "\n", "            ", "for", "i", ",", "token", "in", "enumerate", "(", "example", "[", "\"sent_a\"", "]", ")", ":", "\n", "                ", "if", "token", "==", "\"-LRB-\"", ":", "\n", "                    ", "example", "[", "\"sent_a\"", "]", "[", "i", "]", "=", "\"(\"", "\n", "", "if", "token", "==", "\"-RRB-\"", ":", "\n", "                    ", "example", "[", "\"sent_a\"", "]", "[", "i", "]", "=", "\")\"", "\n", "", "", "", "", "else", ":", "\n", "        ", "path", "=", "\"data/sst/train-nodes.tsv\"", "\n", "print", "(", "\"Loading sst data from \"", "+", "path", ")", "\n", "data", "=", "[", "]", "\n", "with", "open", "(", "path", ")", "as", "file", ":", "\n", "            ", "for", "line", "in", "file", ".", "readlines", "(", ")", "[", "1", ":", "]", ":", "\n", "                ", "data", ".", "append", "(", "{", "\n", "\"sent_a\"", ":", "line", ".", "split", "(", "\"\\t\"", ")", "[", "0", "]", ",", "\n", "\"label\"", ":", "int", "(", "line", ".", "split", "(", "\"\\t\"", ")", "[", "1", "]", ")", "\n", "}", ")", "\n", "", "", "with", "Pool", "(", "processes", "=", "args", ".", "cpus", ")", "as", "pool", ":", "\n", "            ", "data", "=", "pool", ".", "map", "(", "tokenize_example", ",", "data", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.load_data_raw": [[88, 96], ["data_utils.load_data_yelp", "data_utils.load_data_sst"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.load_data_yelp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.load_data_sst"], ["", "def", "load_data_raw", "(", "args", ",", "set", ")", ":", "\n", "    ", "if", "args", ".", "data", "==", "\"yelp\"", ":", "\n", "        ", "data", "=", "load_data_yelp", "(", "args", ",", "set", ")", "\n", "", "elif", "args", ".", "data", "==", "\"sst\"", ":", "\n", "        ", "data", "=", "load_data_sst", "(", "args", ",", "set", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.load_data": [[97, 137], ["os.path.exists", "print", "data_utils.load_data_raw", "data_utils.load_data_raw", "gzip.open", "pickle.load", "random.shuffle", "random.shuffle", "data_utils.load_data_raw", "gzip.open", "pickle.dump", "gzip.open", "pickle.dump", "random.shuffle", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.load_data_raw", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.load_data_raw", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.load_data_raw"], ["", "def", "load_data", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "small", ":", "\n", "        ", "path", "=", "\"tmp/data_%s_small.pkl.gz\"", "%", "(", "args", ".", "data", ")", "\n", "path_no_train", "=", "\"tmp/data_%s_no_train_small.pkl.gz\"", "%", "(", "args", ".", "data", ")", "\n", "", "else", ":", "\n", "        ", "path", "=", "\"tmp/data_%s.pkl.gz\"", "%", "(", "args", ".", "data", ")", "\n", "path_no_train", "=", "\"tmp/data_%s_no_train.pkl.gz\"", "%", "(", "args", ".", "data", ")", "\n", "", "path_load", "=", "path", "if", "args", ".", "train", "else", "path_no_train", "\n", "if", "os", ".", "path", ".", "exists", "(", "path_load", ")", ":", "\n", "        ", "print", "(", "\"Loading cached data...\"", ")", "\n", "with", "gzip", ".", "open", "(", "path_load", ",", "\"rb\"", ")", "as", "file", ":", "\n", "            ", "data_train", ",", "data_valid", ",", "data_test", ",", "vocab_char", ",", "vocab_word", "=", "pickle", ".", "load", "(", "file", ")", "\n", "", "", "else", ":", "\n", "        ", "data_train", "=", "load_data_raw", "(", "args", ",", "\"train\"", ")", "\n", "if", "args", ".", "small", ":", "\n", "            ", "random", ".", "shuffle", "(", "data_train", ")", "\n", "data_train", "=", "data_train", "[", ":", "len", "(", "data_train", ")", "//", "10", "]", "\n", "", "vocab_char", ",", "vocab_word", "=", "None", ",", "None", "\n", "data_test", "=", "load_data_raw", "(", "args", ",", "\"test\"", ")", "\n", "if", "args", ".", "small", ":", "\n", "            ", "random", ".", "shuffle", "(", "data_test", ")", "\n", "data_test", "=", "data_test", "[", ":", "len", "(", "data_test", ")", "//", "10", "]", "\n", "", "try", ":", "\n", "            ", "data_valid", "=", "load_data_raw", "(", "args", ",", "\"dev\"", ")", "\n", "if", "args", ".", "small", ":", "\n", "                ", "random", ".", "shuffle", "(", "data_valid", ")", "\n", "data_valid", "=", "data_valid", "[", ":", "len", "(", "data_valid", ")", "//", "10", "]", "\n", "", "", "except", "FileNotFoundError", ":", "\n", "            ", "data_valid", "=", "[", "]", "\n", "", "with", "gzip", ".", "open", "(", "path", ",", "\"wb\"", ")", "as", "file", ":", "\n", "            ", "pickle", ".", "dump", "(", "(", "data_train", ",", "data_valid", ",", "data_test", ",", "vocab_char", ",", "vocab_word", ")", ",", "file", ")", "\n", "", "with", "gzip", ".", "open", "(", "path_no_train", ",", "\"wb\"", ")", "as", "file", ":", "\n", "            ", "pickle", ".", "dump", "(", "(", "[", "]", ",", "data_valid", ",", "data_test", ",", "vocab_char", ",", "vocab_word", ")", ",", "file", ")", "\n", "\n", "# in the yelp dataset labels are among {1, 2}", "\n", "", "", "if", "args", ".", "data", "==", "\"yelp\"", ":", "\n", "        ", "for", "example", "in", "data_train", "+", "data_valid", "+", "data_test", ":", "\n", "            ", "example", "[", "\"label\"", "]", "-=", "1", "\n", "\n", "", "", "return", "data_train", ",", "data_valid", ",", "data_test", ",", "vocab_char", ",", "vocab_word", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.get_batches": [[138, 143], ["range", "batches.append", "len"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append"], ["", "def", "get_batches", "(", "data", ",", "batch_size", ")", ":", "\n", "    ", "batches", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "(", "len", "(", "data", ")", "+", "batch_size", "-", "1", ")", "//", "batch_size", ")", ":", "\n", "        ", "batches", ".", "append", "(", "data", "[", "i", "*", "batch_size", ":", "(", "i", "+", "1", ")", "*", "batch_size", "]", ")", "\n", "", "return", "batches", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.sample": [[144, 159], ["range", "examples.append", "target.step", "random.randint", "len"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.step"], ["", "def", "sample", "(", "args", ",", "data", ",", "target", ")", ":", "\n", "    ", "examples", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "args", ".", "samples", ")", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "example", "=", "data", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "data", ")", "-", "1", ")", "]", "\n", "std", "=", "target", ".", "step", "(", "[", "example", "]", ")", "[", "-", "1", "]", "\n", "# too long", "\n", "if", "std", "[", "\"embedding_output\"", "]", "[", "0", "]", ".", "shape", "[", "0", "]", ">", "args", ".", "max_verify_length", ":", "\n", "                ", "continue", "\n", "# incorrectly classified            ", "\n", "", "if", "std", "[", "\"pred_labels\"", "]", "[", "0", "]", "!=", "example", "[", "\"label\"", "]", ":", "\n", "                ", "continue", "\n", "", "examples", ".", "append", "(", "example", ")", "\n", "break", "\n", "", "", "return", "examples", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.set_seeds": [[160, 165], ["random.seed", "numpy.random.seed", "torch.manual_seed", "torch.cuda.manual_seed_all"], "function", ["None"], ["", "def", "set_seeds", "(", "seed", ")", ":", "\n", "    ", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.__init__": [[9, 56], ["os.path.join", "os.path.join", "tensorflow.Variable", "Logger.Logger.global_step.assign", "tensorflow.Variable", "Logger.Logger.epoch.assign", "len", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter", "tensorflow.summary.FileWriter", "tensorflow.global_variables", "tensorflow.train.Saver", "Logger.Logger.sess.run", "tensorflow.train.get_checkpoint_state", "Logger.Logger._clear", "os.path.join", "os.path.join", "os.path.join", "tensorflow.placeholder", "tensorflow.summary.scalar", "params.append", "tensorflow.global_variables_initializer", "print", "Logger.Logger.saver.restore", "open", "range", "range", "tensorflow.train.latest_checkpoint"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Verifier.Verifier.run", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger._clear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["    ", "def", "__init__", "(", "self", ",", "sess", ",", "args", ",", "summary_names", ",", "key_output_index", ")", ":", "\n", "        ", "self", ".", "sess", "=", "sess", "\n", "self", ".", "dir", "=", "args", ".", "dir", "\n", "self", ".", "log", "=", "args", ".", "log", "\n", "self", ".", "model_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "\"model\"", ")", "\n", "self", ".", "log_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "\"log\"", ")", "\n", "self", ".", "display_interval", "=", "args", ".", "display_interval", "\n", "\n", "self", ".", "global_step", "=", "tf", ".", "Variable", "(", "0", ",", "name", "=", "\"global_step\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "global_step_inc_op", "=", "self", ".", "global_step", ".", "assign", "(", "self", ".", "global_step", "+", "1", ")", "\n", "self", ".", "epoch", "=", "tf", ".", "Variable", "(", "1", ",", "name", "=", "\"epoch\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "epoch_inc_op", "=", "self", ".", "epoch", ".", "assign", "(", "self", ".", "epoch", "+", "1", ")", "\n", "\n", "self", ".", "summary_names", "=", "summary_names", "\n", "self", ".", "summary_num", "=", "len", "(", "self", ".", "summary_names", ")", "\n", "self", ".", "key_output_index", "=", "key_output_index", "\n", "\n", "self", ".", "train_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "\"train\"", ")", ")", "\n", "self", ".", "valid_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "\"valid\"", ")", ")", "\n", "self", ".", "test_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "os", ".", "path", ".", "join", "(", "self", ".", "log_dir", ",", "\"test\"", ")", ")", "\n", "self", ".", "summary_placeholders", "=", "[", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "for", "i", "in", "range", "(", "self", ".", "summary_num", ")", "]", "\n", "self", ".", "summary_op", "=", "[", "tf", ".", "summary", ".", "scalar", "(", "\n", "self", ".", "summary_names", "[", "i", "]", ",", "self", ".", "summary_placeholders", "[", "i", "]", ")", "for", "i", "in", "range", "(", "self", ".", "summary_num", ")", "]", "\n", "\n", "params", "=", "[", "]", "\n", "for", "var", "in", "tf", ".", "global_variables", "(", ")", ":", "\n", "            ", "params", ".", "append", "(", "var", ")", "\n", "\n", "", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "\n", "params", ",", "\n", "write_version", "=", "tf", ".", "train", ".", "SaverDef", ".", "V2", ",", "\n", "max_to_keep", "=", "None", ",", "\n", "pad_step_number", "=", "True", ",", "\n", "keep_checkpoint_every_n_hours", "=", "1.0", "\n", ")", "\n", "\n", "self", ".", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "if", "tf", ".", "train", ".", "get_checkpoint_state", "(", "self", ".", "model_dir", ")", ":", "\n", "            ", "print", "(", "\"Restoring model...\"", ")", "\n", "self", ".", "saver", ".", "restore", "(", "self", ".", "sess", ",", "tf", ".", "train", ".", "latest_checkpoint", "(", "self", ".", "model_dir", ")", ")", "\n", "\n", "", "with", "open", "(", "self", ".", "log", ",", "\"w\"", ")", "as", "file", ":", "pass", "\n", "\n", "self", ".", "best", "=", "0", "\n", "self", ".", "best_valid", "=", "0", "\n", "self", ".", "decay", "=", "False", "\n", "self", ".", "_clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger._clear": [[57, 63], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "time.time"], "methods", ["None"], ["", "def", "_clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "s_train", "=", "np", ".", "zeros", "(", "self", ".", "summary_num", ")", "\n", "self", ".", "s_valid", "=", "np", ".", "zeros", "(", "self", ".", "summary_num", ")", "\n", "self", ".", "s_test", "=", "np", ".", "zeros", "(", "self", ".", "summary_num", ")", "\n", "self", ".", "train_steps", "=", "self", ".", "valid_steps", "=", "self", ".", "test_steps", "=", "0", "\n", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.get_summary_sum": [[64, 69], ["None"], "methods", ["None"], ["", "def", "get_summary_sum", "(", "self", ",", "s", ",", "length", ")", ":", "\n", "        ", "if", "length", "==", "0", ":", "\n", "            ", "return", "s", "\n", "", "else", ":", "\n", "            ", "return", "s", "/", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.next_epoch": [[70, 83], ["Logger.Logger.sess.as_default", "Logger.Logger.get_summary_sum", "Logger.Logger.sess.run", "print", "print", "range", "print", "Logger.Logger.epoch_inc_op.eval", "Logger.Logger.saver.save", "Logger.Logger.train_writer.add_summary", "Logger.Logger.epoch.eval", "print", "os.path.join", "dict", "zip", "Logger.Logger.epoch.eval", "Logger.Logger.epoch.eval"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.get_summary_sum", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Verifier.Verifier.run", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.save", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "", "def", "next_epoch", "(", "self", ")", ":", "\n", "        ", "with", "self", ".", "sess", ".", "as_default", "(", ")", ":", "\n", "            ", "summary_sum", "=", "self", ".", "get_summary_sum", "(", "self", ".", "s_train", ",", "self", ".", "train_steps", ")", "\n", "summaries", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "summary_op", ",", "feed_dict", "=", "dict", "(", "zip", "(", "self", ".", "summary_placeholders", ",", "summary_sum", ")", ")", ")", "\n", "for", "s", "in", "summaries", ":", "\n", "                ", "self", ".", "train_writer", ".", "add_summary", "(", "summary", "=", "s", ",", "global_step", "=", "self", ".", "epoch", ".", "eval", "(", ")", ")", "\n", "", "print", "(", "\"epoch\"", ",", "self", ".", "epoch", ".", "eval", "(", ")", ")", "\n", "print", "(", "\"  train\"", ",", "end", "=", "\"\"", ")", "\n", "for", "k", "in", "range", "(", "self", ".", "summary_num", ")", ":", "\n", "                ", "print", "(", "\" {}: {:.5f}\"", ".", "format", "(", "self", ".", "summary_names", "[", "k", "]", ",", "summary_sum", "[", "k", "]", ")", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", ")", "\n", "self", ".", "epoch_inc_op", ".", "eval", "(", ")", "\n", "self", ".", "saver", ".", "save", "(", "self", ".", "sess", ",", "os", ".", "path", ".", "join", "(", "self", ".", "model_dir", ",", "\"ckpt\"", ")", ",", "global_step", "=", "self", ".", "epoch", ".", "eval", "(", ")", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.next_step": [[84, 102], ["range", "Logger.Logger.global_step_inc_op.eval", "Logger.Logger.global_step.eval", "min", "print", "Logger.Logger.get_summary_sum", "print", "print", "range", "print", "len", "print", "Logger.Logger.epoch.eval", "time.time"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.get_summary_sum", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "", "def", "next_step", "(", "self", ",", "out", ")", ":", "\n", "        ", "self", ".", "train_steps", "+=", "1", "\n", "for", "i", "in", "range", "(", "min", "(", "self", ".", "summary_num", ",", "len", "(", "out", ")", ")", ")", ":", "\n", "            ", "self", ".", "s_train", "[", "i", "]", "+=", "out", "[", "i", "]", "\n", "\n", "", "self", ".", "global_step_inc_op", ".", "eval", "(", ")", "\n", "self", ".", "global_step_val", "=", "self", ".", "global_step", ".", "eval", "(", ")", "\n", "if", "self", ".", "global_step_val", "%", "self", ".", "display_interval", "==", "0", ":", "\n", "            ", "print", "(", "\"epoch %d, global step %d (%.3fs/step):\"", "%", "(", "\n", "self", ".", "epoch", ".", "eval", "(", ")", ",", "self", ".", "global_step_val", ",", "\n", "(", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", ")", "*", "1.", "/", "self", ".", "train_steps", "\n", ")", ")", "\n", "summary_sum", "=", "self", ".", "get_summary_sum", "(", "self", ".", "s_train", ",", "self", ".", "train_steps", ")", "\n", "print", "(", "\"  best {:.5f}\"", ".", "format", "(", "self", ".", "best", ")", ")", "\n", "print", "(", "\"  train\"", ",", "end", "=", "\"\"", ")", "\n", "for", "k", "in", "range", "(", "self", ".", "summary_num", ")", ":", "\n", "                ", "print", "(", "\" {} {:.5f}\"", ".", "format", "(", "self", ".", "summary_names", "[", "k", "]", ",", "summary_sum", "[", "k", "]", ")", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.add_valid": [[103, 107], ["range", "min", "len"], "methods", ["None"], ["", "", "def", "add_valid", "(", "self", ",", "out", ")", ":", "\n", "        ", "self", ".", "valid_steps", "+=", "1", "\n", "for", "i", "in", "range", "(", "min", "(", "self", ".", "summary_num", ",", "len", "(", "out", ")", ")", ")", ":", "\n", "            ", "self", ".", "s_valid", "[", "i", "]", "+=", "out", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.add_test": [[108, 112], ["range", "min", "len"], "methods", ["None"], ["", "", "def", "add_test", "(", "self", ",", "out", ")", ":", "\n", "        ", "self", ".", "test_steps", "+=", "1", "\n", "for", "i", "in", "range", "(", "min", "(", "self", ".", "summary_num", ",", "len", "(", "out", ")", ")", ")", ":", "\n", "            ", "self", ".", "s_test", "[", "i", "]", "+=", "out", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.save_valid": [[114, 131], ["Logger.Logger.get_summary_sum", "print", "range", "print", "numpy.zeros", "Logger.Logger.sess.run", "print", "Logger.Logger.valid_writer.add_summary", "dict", "zip", "Logger.Logger.epoch.eval"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.get_summary_sum", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Verifier.Verifier.run", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "", "def", "save_valid", "(", "self", ",", "log", "=", "False", ")", ":", "\n", "        ", "summary_sum", "=", "self", ".", "get_summary_sum", "(", "self", ".", "s_valid", ",", "self", ".", "valid_steps", ")", "\n", "if", "log", ":", "\n", "            ", "summaries", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "summary_op", ",", "feed_dict", "=", "dict", "(", "zip", "(", "self", ".", "summary_placeholders", ",", "summary_sum", ")", ")", ")", "\n", "for", "s", "in", "summaries", ":", "\n", "                ", "self", ".", "valid_writer", ".", "add_summary", "(", "summary", "=", "s", ",", "global_step", "=", "self", ".", "epoch", ".", "eval", "(", ")", "-", "1", ")", "\n", "", "", "print", "(", "\"  valid\"", ",", "end", "=", "\"\"", ")", "\n", "for", "k", "in", "range", "(", "self", ".", "summary_num", ")", ":", "\n", "            ", "print", "(", "\" {}: {:.5f}\"", ".", "format", "(", "self", ".", "summary_names", "[", "k", "]", ",", "summary_sum", "[", "k", "]", ")", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", ")", "\n", "self", ".", "valid_steps", "=", "0", "\n", "self", ".", "s_valid", "=", "np", ".", "zeros", "(", "self", ".", "summary_num", ")", "\n", "if", "summary_sum", "[", "self", ".", "key_output_index", "]", ">", "self", ".", "best_valid", ":", "\n", "            ", "self", ".", "best_valid", "=", "summary_sum", "[", "self", ".", "key_output_index", "]", "\n", "self", ".", "decay", "=", "False", "\n", "", "else", ":", "\n", "            ", "self", ".", "decay", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.save_test": [[132, 149], ["Logger.Logger.get_summary_sum", "print", "range", "print", "print", "numpy.zeros", "Logger.Logger.sess.run", "print", "Logger.Logger._clear", "Logger.Logger.test_writer.add_summary", "dict", "zip", "Logger.Logger.epoch.eval"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.get_summary_sum", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Verifier.Verifier.run", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger._clear"], ["", "", "def", "save_test", "(", "self", ",", "log", "=", "False", ")", ":", "\n", "        ", "summary_sum", "=", "self", ".", "get_summary_sum", "(", "self", ".", "s_test", ",", "self", ".", "test_steps", ")", "\n", "if", "log", ":", "\n", "            ", "summaries", "=", "self", ".", "sess", ".", "run", "(", "self", ".", "summary_op", ",", "feed_dict", "=", "dict", "(", "zip", "(", "self", ".", "summary_placeholders", ",", "summary_sum", ")", ")", ")", "\n", "for", "s", "in", "summaries", ":", "\n", "                ", "self", ".", "test_writer", ".", "add_summary", "(", "summary", "=", "s", ",", "global_step", "=", "self", ".", "epoch", ".", "eval", "(", ")", "-", "1", ")", "\n", "", "", "print", "(", "\"  test\"", ",", "end", "=", "\"\"", ")", "\n", "for", "k", "in", "range", "(", "self", ".", "summary_num", ")", ":", "\n", "            ", "print", "(", "\" {}: {:.5f}\"", ".", "format", "(", "self", ".", "summary_names", "[", "k", "]", ",", "summary_sum", "[", "k", "]", ")", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", ")", "\n", "if", "summary_sum", "[", "self", ".", "key_output_index", "]", ">", "self", ".", "best", ":", "\n", "            ", "self", ".", "best", "=", "summary_sum", "[", "self", ".", "key_output_index", "]", "\n", "", "print", "(", "\"  best: {:.5f}\"", ".", "format", "(", "self", ".", "best", ")", ")", "\n", "self", ".", "test_steps", "=", "0", "\n", "self", ".", "s_test", "=", "np", ".", "zeros", "(", "self", ".", "summary_num", ")", "\n", "if", "log", ":", "\n", "            ", "self", ".", "_clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.get_epoch": [[150, 152], ["Logger.Logger.epoch.eval"], "methods", ["None"], ["", "", "def", "get_epoch", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "epoch", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write": [[153, 160], ["open", "print", "file.write", "print", "file.write"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write"], ["", "def", "write", "(", "self", ",", "*", "all_text", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "log", ",", "\"a+\"", ")", "as", "file", ":", "\n", "            ", "for", "text", "in", "all_text", ":", "\n", "                ", "print", "(", "text", ",", "end", "=", "\" \"", ")", "\n", "file", ".", "write", "(", "\"{} \"", ".", "format", "(", "text", ")", ")", "\n", "", "print", "(", ")", "\n", "file", ".", "write", "(", "\"\\n\"", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Parser.Parser.getParser": [[8, 70], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "methods", ["None"], ["    ", "def", "getParser", "(", "self", ")", ":", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "\n", "# modes", "\n", "parser", ".", "add_argument", "(", "\"--train\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--infer\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--verify\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--word_label\"", ",", "action", "=", "\"store_true\"", ")", "\n", "\n", "# data", "\n", "parser", ".", "add_argument", "(", "\"--dir\"", ",", "type", "=", "str", ",", "default", "=", "None", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--data\"", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "choices", "=", "[", "\"yelp\"", ",", "\"sst\"", ",", "\"cifar\"", ",", "\"mnist\"", "]", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--base_dir\"", ",", "type", "=", "str", ",", "default", "=", "\"data/model_base\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--seed\"", ",", "type", "=", "int", ",", "default", "=", "0", ")", "\n", "parser", ".", "add_argument", "(", "\"--use_tsv\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--vocab_size\"", ",", "type", "=", "int", ",", "default", "=", "50000", ")", "\n", "parser", ".", "add_argument", "(", "\"--small\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--debug\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--use_dev\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_classes\"", ",", "type", "=", "int", ",", "default", "=", "2", ")", "\n", "\n", "# runtime", "\n", "parser", ".", "add_argument", "(", "\"--cpu\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--cpus\"", ",", "type", "=", "int", ",", "default", "=", "32", ")", "\n", "parser", ".", "add_argument", "(", "\"--display_interval\"", ",", "type", "=", "int", ",", "default", "=", "50", ")", "\n", "\n", "# model", "\n", "parser", ".", "add_argument", "(", "\"--num_epoches\"", ",", "type", "=", "int", ",", "default", "=", "3", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "32", ")", "\n", "parser", ".", "add_argument", "(", "\"--max_sent_length\"", ",", "type", "=", "int", ",", "default", "=", "128", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr\"", ",", "type", "=", "float", ",", "default", "=", "1e-4", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_labels\"", ",", "type", "=", "int", ",", "default", "=", "2", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_layers\"", ",", "type", "=", "int", ",", "default", "=", "12", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_attention_heads\"", ",", "type", "=", "int", ",", "default", "=", "4", ")", "\n", "parser", ".", "add_argument", "(", "\"--hidden_size\"", ",", "type", "=", "int", ",", "default", "=", "256", ")", "\n", "parser", ".", "add_argument", "(", "\"--intermediate_size\"", ",", "type", "=", "int", ",", "default", "=", "512", ")", "\n", "parser", ".", "add_argument", "(", "\"--warmup\"", ",", "type", "=", "float", ",", "default", "=", "-", "1", ")", "\n", "parser", ".", "add_argument", "(", "\"--hidden_act\"", ",", "type", "=", "str", ",", "default", "=", "\"relu\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight_decay\"", ",", "type", "=", "float", ",", "default", "=", "0.01", ")", "\n", "parser", ".", "add_argument", "(", "\"--min_word_freq\"", ",", "type", "=", "int", ",", "default", "=", "50", ")", "\n", "parser", ".", "add_argument", "(", "\"--layer_norm\"", ",", "type", "=", "str", ",", "default", "=", "\"no_var\"", ",", "\n", "choices", "=", "[", "\"standard\"", ",", "\"no\"", ",", "\"no_var\"", "]", ")", "\n", "\n", "# verification", "\n", "parser", ".", "add_argument", "(", "\"--samples\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--p\"", ",", "type", "=", "int", ",", "default", "=", "2", ")", "\n", "parser", ".", "add_argument", "(", "\"--eps\"", ",", "type", "=", "float", ",", "default", "=", "1e-5", ")", "\n", "parser", ".", "add_argument", "(", "\"--max_eps\"", ",", "type", "=", "float", ",", "default", "=", "0.01", ")", "\n", "parser", ".", "add_argument", "(", "\"--verbose\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--debug_pos\"", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "\"--log\"", ",", "type", "=", "str", ",", "default", "=", "\"log.txt\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--res\"", ",", "type", "=", "str", ",", "default", "=", "\"res.json\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--max_verify_length\"", ",", "type", "=", "int", ",", "default", "=", "32", ")", "\n", "parser", ".", "add_argument", "(", "\"--method\"", ",", "type", "=", "str", ",", "default", "=", "\"baf\"", ",", "\n", "choices", "=", "[", "\"baf\"", ",", "\"backward\"", ",", "\"forward\"", ",", "\"ibp\"", ",", "\"discrete\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_verify_iters\"", ",", "type", "=", "int", ",", "default", "=", "10", ")", "\n", "parser", ".", "add_argument", "(", "\"--view_embed_dist\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--empty_cache\"", ",", "action", "=", "\"store_true\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--perturbed_words\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "choices", "=", "[", "1", ",", "2", "]", ")", "\n", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Parser.update_arguments": [[71, 85], ["torch.device", "torch.cuda.is_available"], "function", ["None"], ["", "", "def", "update_arguments", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "infer", "or", "args", ".", "verify", "or", "args", ".", "word_label", ":", "\n", "        ", "args", ".", "small", "=", "True", "\n", "\n", "", "if", "not", "args", ".", "train", ":", "\n", "        ", "args", ".", "batch_size", "*=", "30", "\n", "\n", "", "if", "args", ".", "cpu", ":", "\n", "        ", "args", ".", "device", "=", "\"cpu\"", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "\"-1\"", "\n", "", "else", ":", "\n", "        ", "args", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "", "return", "args", "\n", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.eval_words.eval_words": [[14, 122], ["enumerate", "range", "numpy.zeros", "numpy.zeros", "sorted", "range", "words_top[].append", "range", "words_bottom[].append", "copy.deepcopy", "range", "torch.norm", "range", "eval_words.eval_words.add"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add"], ["def", "eval_words", "(", "args", ",", "target", ",", "data_test", ")", ":", "\n", "    ", "if", "args", ".", "data", "==", "\"yelp\"", ":", "\n", "        ", "bounds", "=", "{", "\n", "\"Upper\"", ":", "load_result", "(", "\"results/res_model_yelp_1_discrete_2_1.json\"", ")", ",", "\n", "\"Ours\"", ":", "load_result", "(", "\"results/res_model_yelp_1_baf_2_1.json\"", ")", "\n", "}", "\n", "", "else", ":", "\n", "        ", "bounds", "=", "{", "\n", "\"Upper\"", ":", "load_result", "(", "\"res_model_sst_1_discrete_2_1_100s.json\"", ")", ",", "\n", "\"Ours\"", ":", "load_result", "(", "\"res_model_sst_1_baf_2_1_100s.json\"", ")", "\n", "}", "\n", "\n", "", "label_dict", "=", "{", "}", "\n", "for", "example", "in", "data_test", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "example", "[", "\"sent_a\"", "]", ")", ")", ":", "\n", "            ", "if", "\"word_labels\"", "in", "example", ":", "\n", "                ", "label_dict", "[", "example", "[", "\"sent_a\"", "]", "[", "i", "]", ".", "lower", "(", ")", "]", "=", "example", "[", "\"word_labels\"", "]", "[", "i", "]", "\n", "\n", "", "", "", "words_sum_top", "=", "{", "}", "\n", "words_sum_bottom", "=", "{", "}", "\n", "words_top", "=", "{", "}", "\n", "words_bottom", "=", "{", "}", "\n", "for", "method", "in", "methods", ":", "\n", "        ", "words_sum_top", "[", "method", "]", "=", "np", ".", "zeros", "(", "100", ")", "\n", "words_sum_bottom", "[", "method", "]", "=", "np", ".", "zeros", "(", "100", ")", "\n", "words_top", "[", "method", "]", "=", "[", "]", "\n", "words_bottom", "[", "method", "]", "=", "[", "]", "\n", "\n", "", "def", "add", "(", "method", ",", "w", ")", ":", "\n", "        ", "w", "=", "sorted", "(", "w", ",", "key", "=", "lambda", "x", ":", "x", "[", "0", "]", ",", "reverse", "=", "True", ")", "\n", "if", "method", "in", "[", "\"Upper\"", ",", "\"Ours\"", "]", ":", "\n", "            ", "w", "=", "w", "[", ":", ":", "-", "1", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "w", ")", ")", ":", "\n", "            ", "if", "w", "[", "i", "]", "[", "1", "]", "in", "label_dict", ":", "\n", "                ", "words_sum_top", "[", "method", "]", "[", "i", "]", "+=", "abs", "(", "label_dict", "[", "w", "[", "i", "]", "[", "1", "]", "]", "-", "2", ")", "\n", "", "", "words_top", "[", "method", "]", ".", "append", "(", "w", "[", "0", "]", "[", "1", "]", ")", "\n", "w", "=", "w", "[", ":", ":", "-", "1", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "w", ")", ")", ":", "\n", "            ", "if", "w", "[", "i", "]", "[", "1", "]", "in", "label_dict", ":", "\n", "                ", "words_sum_bottom", "[", "method", "]", "[", "i", "]", "+=", "abs", "(", "label_dict", "[", "w", "[", "i", "]", "[", "1", "]", "]", "-", "2", ")", "\n", "", "", "words_bottom", "[", "method", "]", ".", "append", "(", "w", "[", "0", "]", "[", "1", "]", ")", "\n", "\n", "", "for", "t", ",", "example", "in", "enumerate", "(", "bounds", "[", "\"Ours\"", "]", "[", "\"examples\"", "]", ")", ":", "\n", "        ", "tokens", "=", "copy", ".", "deepcopy", "(", "example", "[", "\"tokens\"", "]", ")", "\n", "\n", "sent", "=", "\"\"", "\n", "for", "j", "in", "range", "(", "1", ",", "len", "(", "tokens", ")", "-", "1", ")", ":", "\n", "            ", "cur", "=", "tokens", "[", "j", "]", "\n", "if", "cur", "[", "0", "]", "==", "\"#\"", ":", "\n", "                ", "cur", "=", "cur", "[", "2", ":", "]", "\n", "", "sent", "+=", "cur", "+", "\" \"", "\n", "", "std", "=", "target", ".", "step", "(", "[", "{", "\n", "\"sent_a\"", ":", "sent", ".", "split", "(", ")", ",", "\n", "\"label\"", ":", "int", "(", "example", "[", "\"label\"", "]", ")", "\n", "}", "]", ",", "infer_grad", "=", "True", ")", "[", "-", "1", "]", "\n", "\n", "valid", "=", "[", "0", "]", "*", "std", "[", "\"embedding_output\"", "]", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "for", "p", "in", "example", "[", "\"bounds\"", "]", ":", "\n", "            ", "valid", "[", "p", "[", "\"position\"", "]", "]", "=", "True", "\n", "\n", "# assume we only consider one word now", "\n", "\n", "", "for", "method", "in", "[", "\"Upper\"", ",", "\"Ours\"", "]", ":", "\n", "            ", "if", "method", "in", "bounds", ":", "\n", "                ", "w", "=", "[", "]", "\n", "for", "p", "in", "bounds", "[", "method", "]", "[", "\"examples\"", "]", "[", "t", "]", "[", "\"bounds\"", "]", ":", "\n", "                    ", "w", ".", "append", "(", "(", "p", "[", "\"eps_normalized\"", "]", ",", "tokens", "[", "p", "[", "\"position\"", "]", "]", ")", ")", "\n", "", "add", "(", "method", ",", "w", ")", "\n", "\n", "", "", "grad", "=", "torch", ".", "norm", "(", "std", "[", "\"gradients\"", "]", "[", "0", "]", ",", "p", "=", "2", ",", "dim", "=", "-", "1", ")", "# / torch.norm(std[\"embedding_output\"][0], p=2, dim=-1) # this results in worse results", "\n", "w", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "tokens", ")", "-", "1", ")", ":", "\n", "            ", "if", "valid", "[", "i", "]", ":", "\n", "                ", "w", ".", "append", "(", "(", "float", "(", "grad", "[", "i", "]", ")", ",", "tokens", "[", "i", "]", ")", ")", "\n", "", "", "add", "(", "\"Grad\"", ",", "w", ")", "\n", "\n", "", "if", "args", ".", "data", "==", "\"yelp\"", ":", "\n", "        ", "important_words", "=", "[", "\"terrible\"", ",", "\"great\"", ",", "\"best\"", ",", "\"good\"", ",", "\"slow\"", ",", "\n", "\"perfect\"", ",", "\"typical\"", ",", "\"decadent\"", "]", "\n", "for", "word_list", "in", "[", "words_top", ",", "words_bottom", "]", ":", "\n", "            ", "if", "word_list", "==", "words_top", ":", "\n", "                ", "type", "=", "\"Most\"", "\n", "", "else", ":", "\n", "                ", "type", "=", "\"Least\"", "\n", "", "k", "=", "10", "\n", "for", "t", ",", "method", "in", "enumerate", "(", "methods", ")", ":", "\n", "                ", "print", "(", "\"%s & 0.00 & \"", "%", "method", ",", "end", "=", "\"\"", ")", "\n", "used", "=", "{", "}", "\n", "for", "i", ",", "w", "in", "enumerate", "(", "word_list", "[", "method", "]", "[", ":", "k", "]", ")", ":", "\n", "                    ", "used", "[", "w", "]", "=", "True", "\n", "if", "w", "==", "\"&\"", ":", "_w", "=", "\"\\\\&\"", "\n", "else", ":", "_w", "=", "w", "\n", "if", "w", "in", "important_words", ":", "\n", "                        ", "print", "(", "\"\\\\textbf{\\\\texttt{%s}}\"", "%", "_w", ",", "end", "=", "\"\"", ")", "\n", "", "else", ":", "\n", "                        ", "print", "(", "\"\\\\texttt{%s}\"", "%", "_w", ",", "end", "=", "\"\"", ")", "\n", "", "if", "i", "+", "1", "<", "len", "(", "word_list", "[", "method", "]", "[", ":", "k", "]", ")", ":", "\n", "                        ", "print", "(", "\" /\"", ",", "end", "=", "\" \"", ")", "\n", "", "", "print", "(", "\"\\\\\\\\\"", ")", "\n", "", "print", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "cnt", "=", "len", "(", "bounds", "[", "method", "]", "[", "\"examples\"", "]", ")", "\n", "for", "method", "in", "methods", ":", "\n", "            ", "ours", "=", "method", "==", "\"Ours\"", "\n", "print", "(", "method", ")", "\n", "print", "(", "\"{:.2f}\"", ".", "format", "(", "np", ".", "sum", "(", "words_sum_top", "[", "method", "]", "[", "0", "]", ")", "*", "1.", "/", "cnt", ")", ")", "\n", "print", "(", "\"{:.2f}\"", ".", "format", "(", "np", ".", "sum", "(", "words_sum_bottom", "[", "method", "]", "[", "0", "]", ")", "*", "1.", "/", "cnt", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.run_bounds.verify": [[30, 43], ["res_all.append", "print", "os.system"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["def", "verify", "(", "model", ",", "method", ",", "p", ")", ":", "\n", "    ", "log", "=", "\"log_{}_{}_{}_{}{}.txt\"", ".", "format", "(", "model", ",", "method", ",", "p", ",", "args", ".", "perturbed_words", ",", "args", ".", "suffix", ")", "\n", "res", "=", "\"res_{}_{}_{}_{}{}.json\"", ".", "format", "(", "model", ",", "method", ",", "p", ",", "args", ".", "perturbed_words", ",", "args", ".", "suffix", ")", "\n", "res_all", ".", "append", "(", "res", ")", "\n", "cmd", "=", "\"python main.py --verify --data={} --dir={} --method={} --p={}\\\n            --max_verify_length={} --perturbed_words={} --samples={}\\\n            --log={} --res={}\"", ".", "format", "(", "\n", "args", ".", "data", ",", "model", ",", "method", ",", "p", ",", "\n", "max_verify_length", ",", "args", ".", "perturbed_words", ",", "args", ".", "samples", ",", "\n", "log", ",", "res", "\n", ")", "\n", "print", "(", "cmd", ")", "\n", "os", ".", "system", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.load_result": [[9, 12], ["open", "json.loads", "file.read"], "function", ["None"], ["def", "load_result", "(", "filename", ")", ":", "\n", "    ", "with", "open", "(", "filename", ")", "as", "file", ":", "\n", "        ", "return", "json", ".", "loads", "(", "file", ".", "read", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.print_small_float": [[13, 19], ["str.find"], "function", ["None"], ["", "", "def", "print_small_float", "(", "x", ")", ":", "\n", "    ", "str", "=", "\"%.1E\"", "%", "x", "\n", "idx", "=", "str", ".", "find", "(", "\"E\"", ")", "\n", "if", "str", "[", "idx", "+", "2", "]", "==", "\"0\"", ":", "\n", "        ", "str", "=", "str", "[", ":", "(", "idx", "+", "2", ")", "]", "+", "str", "[", "(", "idx", "+", "3", ")", ":", "]", "\n", "", "return", "str", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.dump_one_word": [[24, 63], ["enumerate", "enumerate", "print", "print", "enumerate", "print", "print", "print", "print", "dump_bounds.load_result", "print", "dump_bounds.load_result", "print", "dump_bounds.load_result", "print", "print", "print", "print", "print", "dataset.lower", "dataset.lower", "dump_bounds.print_small_float", "dump_bounds.print_small_float", "dataset.lower", "dataset.lower"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.load_result", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.load_result", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.load_result", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.print_small_float", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.print_small_float"], ["def", "dump_one_word", "(", ")", ":", "\n", "    ", "for", "i", ",", "dataset", "in", "enumerate", "(", "[", "\"Yelp\"", ",", "\"SST\"", "]", ")", ":", "\n", "        ", "for", "j", ",", "model", "in", "enumerate", "(", "[", "\"1\"", ",", "\"2\"", ",", "\"3\"", "]", ")", ":", "\n", "            ", "if", "j", "==", "0", ":", "\n", "                ", "print", "(", "\"\\multirow{9}{*}{%s} \"", "%", "dataset", ",", "end", "=", "\"\"", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"\\cline{2-12}\"", ")", "\n", "", "print", "(", "\"& \"", ",", "end", "=", "\"\"", ")", "\n", "\n", "for", "k", ",", "p", "in", "enumerate", "(", "[", "\"1\"", ",", "\"2\"", ",", "\"\\infty\"", "]", ")", ":", "\n", "                ", "if", "k", "==", "0", ":", "\n", "                    ", "print", "(", "\"\\multirow{3}{*}{%s} & \\multirow{3}{*}{%.2f} \"", "%", "(", "\n", "model", ",", "acc", "[", "\"model_{}_{}\"", ".", "format", "(", "dataset", ".", "lower", "(", ")", ",", "model", ")", "]", "*", "100", ")", ",", "end", "=", "\"\"", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "\"& & \"", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", "\"& \"", ",", "end", "=", "\"\"", ")", "\n", "\n", "print", "(", "\"$\\ell_%s$ & \"", "%", "p", ",", "end", "=", "\"\"", ")", "\n", "\n", "res_upper", "=", "load_result", "(", "\"results/res_model_{}_{}_discrete_{}_1.json\"", ".", "format", "(", "\n", "dataset", ".", "lower", "(", ")", ",", "model", ",", "p_list", "[", "k", "]", ")", ")", "\n", "print", "(", "\"{:.3f} & {:.3f} & \"", ".", "format", "(", "res_upper", "[", "\"minimum\"", "]", ",", "res_upper", "[", "\"average\"", "]", ")", ")", "\n", "\n", "res", "=", "load_result", "(", "\"results/res_model_{}_{}_ibp_{}_1.json\"", ".", "format", "(", "\n", "dataset", ".", "lower", "(", ")", ",", "model", ",", "p_list", "[", "k", "]", ")", ")", "\n", "print", "(", "\"{} & {} & \"", ".", "format", "(", "\n", "print_small_float", "(", "res", "[", "\"minimum\"", "]", ")", ",", "print_small_float", "(", "res", "[", "\"average\"", "]", ")", ")", ")", "\n", "\n", "res", "=", "load_result", "(", "\"results/res_model_{}_{}_baf_{}_1.json\"", ".", "format", "(", "\n", "dataset", ".", "lower", "(", ")", ",", "model", ",", "p_list", "[", "k", "]", ")", ")", "\n", "print", "(", "\"{:.3f} & {:.3f} & \"", ".", "format", "(", "res", "[", "\"minimum\"", "]", ",", "res", "[", "\"average\"", "]", ")", ")", "\n", "\n", "print", "(", "\"{:.0f}\\\\% & {:.0f}\\\\% \"", ".", "format", "(", "\n", "res", "[", "\"minimum\"", "]", "/", "res_upper", "[", "\"minimum\"", "]", "*", "100", ",", "\n", "res", "[", "\"average\"", "]", "/", "res_upper", "[", "\"average\"", "]", "*", "100", ")", ",", "end", "=", "\"\"", ")", "\n", "\n", "print", "(", "\"\\\\\\\\\"", ")", "\n", "\n", "", "", "print", "(", "\"\\hline\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.dump_two_word": [[64, 77], ["enumerate", "print", "enumerate", "print", "dump_bounds.load_result", "print", "dump_bounds.load_result", "print", "dataset.lower", "dump_bounds.print_small_float", "dump_bounds.print_small_float", "dataset.lower"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.load_result", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.load_result", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.print_small_float", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.print_small_float"], ["", "", "def", "dump_two_word", "(", ")", ":", "\n", "    ", "for", "j", ",", "model", "in", "enumerate", "(", "[", "\"1\"", ",", "\"2\"", ",", "\"3\"", "]", ")", ":", "\n", "        ", "print", "(", "\"{} & \"", ".", "format", "(", "model", ")", ")", "\n", "for", "i", ",", "dataset", "in", "enumerate", "(", "[", "\"Yelp\"", ",", "\"SST\"", "]", ")", ":", "\n", "            ", "res", "=", "load_result", "(", "\"results/res_model_{}_{}_ibp_2_2.json\"", ".", "format", "(", "\n", "dataset", ".", "lower", "(", ")", ",", "model", ")", ")", "\n", "print", "(", "\"{} & {} & \"", ".", "format", "(", "\n", "print_small_float", "(", "res", "[", "\"minimum\"", "]", ")", ",", "print_small_float", "(", "res", "[", "\"average\"", "]", ")", ")", ")", "\n", "res", "=", "load_result", "(", "\"results/res_model_{}_{}_baf_2_2.json\"", ".", "format", "(", "\n", "dataset", ".", "lower", "(", ")", ",", "model", ")", ")", "\n", "print", "(", "\"{:.3f} & {:.3f} \"", ".", "format", "(", "\n", "res", "[", "\"minimum\"", "]", ",", "res", "[", "\"average\"", "]", ")", ")", "\n", "", "print", "(", "\"\\\\\\\\\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.dump_framework": [[78, 104], ["enumerate", "enumerate", "print", "print", "enumerate", "print", "print", "print", "dump_bounds.load_result", "len", "print", "print", "dataset.lower"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.load_result", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "", "def", "dump_framework", "(", ")", ":", "\n", "    ", "acc", "=", "[", "91.3", ",", "83.3", "]", "\n", "for", "i", ",", "dataset", "in", "enumerate", "(", "[", "\"Yelp\"", ",", "\"SST\"", "]", ")", ":", "\n", "        ", "for", "j", ",", "p", "in", "enumerate", "(", "[", "\"1\"", ",", "\"2\"", ",", "\"\\infty\"", "]", ")", ":", "\n", "            ", "if", "j", "==", "0", ":", "\n", "                ", "print", "(", "\"\\multirow{3}{*}{%s} & \\multirow{3}{*}{%.2f}\"", "%", "(", "dataset", ",", "acc", "[", "i", "]", ")", ",", "end", "=", "\"\"", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "\"& \"", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", "\" & $\\ell_%s$ & \"", "%", "p", ",", "end", "=", "\"\"", ")", "\n", "\n", "for", "k", ",", "method", "in", "enumerate", "(", "[", "\"forward\"", ",", "\"backward\"", ",", "\"baf\"", "]", ")", ":", "\n", "                ", "if", "k", ">", "0", ":", "\n", "                    ", "print", "(", "\" & \"", ",", "end", "=", "\"\"", ")", "\n", "", "_p", "=", "p", "if", "p", "!=", "\"\\infty\"", "else", "\"100\"", "\n", "res", "=", "load_result", "(", "\"results/res_model_{}_small_1_{}_{}_1.json\"", ".", "format", "(", "\n", "dataset", ".", "lower", "(", ")", ",", "method", ",", "p_list", "[", "j", "]", ")", ")", "\n", "avg_time", "=", "0", "\n", "for", "example", "in", "res", "[", "\"examples\"", "]", ":", "\n", "                    ", "avg_time", "+=", "example", "[", "\"time\"", "]", "\n", "", "avg_time", "/=", "len", "(", "res", "[", "\"examples\"", "]", ")", "\n", "print", "(", "\"%.3f & %.3f & %.1f \"", "%", "(", "\n", "res", "[", "\"minimum\"", "]", ",", "res", "[", "\"average\"", "]", ",", "avg_time", ")", ",", "end", "=", "\"\"", ")", "\n", "\n", "", "print", "(", "\"\\\\\\\\\"", ")", "\n", "\n", "", "print", "(", "\"\\hline\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.dump_layer_normalization": [[105, 152], ["enumerate", "enumerate", "print", "enumerate", "enumerate", "print", "print", "dump_bounds.load_result", "print", "dump_bounds.load_result", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "dataset.lower", "dataset.lower", "dump_bounds.print_small_float", "dump_bounds.print_small_float", "dataset.lower"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.load_result", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.load_result", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.print_small_float", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.dump_bounds.print_small_float"], ["", "", "def", "dump_layer_normalization", "(", ")", ":", "\n", "    ", "ln_list", "=", "[", "\"_standard\"", ",", "\"_no\"", ",", "\"\"", "]", "\n", "for", "i", ",", "dataset", "in", "enumerate", "(", "[", "\"Yelp\"", ",", "\"SST\"", "]", ")", ":", "\n", "        ", "for", "j", ",", "model", "in", "enumerate", "(", "[", "\"1\"", ",", "\"2\"", "]", ")", ":", "\n", "            ", "for", "jj", ",", "ln", "in", "enumerate", "(", "[", "\"Standard\"", ",", "\"None\"", ",", "\"Ours\"", "]", ")", ":", "\n", "                ", "for", "k", ",", "p", "in", "enumerate", "(", "[", "\"1\"", ",", "\"2\"", ",", "\"\\infty\"", "]", ")", ":", "\n", "                    ", "if", "j", "==", "0", "and", "jj", "==", "0", "and", "k", "==", "0", ":", "\n", "                        ", "print", "(", "\"\\multirow{%d}{*}{%s} \"", "%", "(", "2", "*", "3", "*", "3", ",", "dataset", ")", ",", "end", "=", "\"\"", ")", "\n", "", "if", "jj", "==", "0", "and", "k", "==", "0", ":", "\n", "                        ", "print", "(", "\" & \\multirow{%d}{*}{%s} \"", "%", "(", "3", "*", "3", ",", "model", ")", ",", "end", "=", "\"\"", ")", "\n", "", "else", ":", "\n", "                        ", "print", "(", "\" & \"", ",", "end", "=", "\"\"", ")", "\n", "", "if", "k", "==", "0", ":", "\n", "                        ", "print", "(", "\" & \\multirow{3}{*}{%s} \"", "%", "(", "ln", ")", ",", "end", "=", "\"\"", ")", "\n", "print", "(", "\" & \\multirow{3}{*}{%.1f} \"", "%", "(", "\n", "acc", "[", "\"model_{}_{}{}\"", ".", "format", "(", "dataset", ".", "lower", "(", ")", ",", "model", ",", "ln_list", "[", "jj", "]", ")", "]", "*", "100", ")", ",", "end", "=", "\"\"", ")", "\n", "", "else", ":", "\n", "                        ", "print", "(", "\" & \"", ",", "end", "=", "\"\"", ")", "\n", "print", "(", "\" & \"", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", "\" & $\\ell_%s$ \"", "%", "p", ",", "end", "=", "\"\"", ")", "\n", "\n", "res_upper", "=", "load_result", "(", "\"results/res_model_{}_{}{}_discrete_{}_1{}.json\"", ".", "format", "(", "\n", "dataset", ".", "lower", "(", ")", ",", "model", ",", "ln_list", "[", "jj", "]", ",", "p_list", "[", "k", "]", ",", "ln_list", "[", "jj", "]", ")", ")", "\n", "print", "(", "\"& {:.3f} & {:.3f} \"", ".", "format", "(", "res_upper", "[", "\"minimum\"", "]", ",", "res_upper", "[", "\"average\"", "]", ")", ")", "\n", "\n", "res", "=", "load_result", "(", "\"results/res_model_{}_{}{}_baf_{}_1{}.json\"", ".", "format", "(", "\n", "dataset", ".", "lower", "(", ")", ",", "model", ",", "ln_list", "[", "jj", "]", ",", "p_list", "[", "k", "]", ",", "ln_list", "[", "jj", "]", ")", ")", "\n", "print", "(", "\"& {:.3f} & {:.3f} \"", ".", "format", "(", "res", "[", "\"minimum\"", "]", ",", "res", "[", "\"average\"", "]", ")", ")", "\n", "\n", "if", "jj", "==", "0", ":", "\n", "                        ", "print", "(", "\"& %s\\\\ & %s\\\\ \"", "%", "(", "\n", "print_small_float", "(", "res", "[", "\"minimum\"", "]", "/", "res_upper", "[", "\"minimum\"", "]", ")", ",", "\n", "print_small_float", "(", "res", "[", "\"average\"", "]", "/", "res_upper", "[", "\"average\"", "]", ")", ")", ",", "end", "=", "\"\"", ")", "\n", "", "else", ":", "\n", "                        ", "print", "(", "\"& %.0f\\\\%% & %.0f\\\\%% \"", "%", "(", "\n", "res", "[", "\"minimum\"", "]", "/", "res_upper", "[", "\"minimum\"", "]", "*", "100", ",", "\n", "res", "[", "\"average\"", "]", "/", "res_upper", "[", "\"average\"", "]", "*", "100", ")", ",", "end", "=", "\"\"", ")", "\n", "\n", "", "print", "(", "\"\\\\\\\\\"", ")", "\n", "\n", "", "if", "jj", "<", "2", ":", "\n", "                    ", "print", "(", "\"\\cline{3-11}\"", ")", "\n", "\n", "", "", "if", "j", "==", "0", ":", "\n", "                ", "print", "(", "\"\\cline{2-11}\"", ")", "\n", "\n", "", "", "print", "(", "\"\\hline\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierDiscrete.VerifierDiscrete.__init__": [[10, 20], ["Verifiers.Verifier.Verifier.__init__", "len", "VerifierDiscrete.VerifierDiscrete.words.append"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "target", ",", "logger", ")", ":", "\n", "        ", "super", "(", "VerifierDiscrete", ",", "self", ")", ".", "__init__", "(", "args", ",", "target", ",", "logger", ")", "\n", "self", ".", "word_embeddings", "=", "target", ".", "model", ".", "bert", ".", "embeddings", ".", "word_embeddings", ".", "weight", "\n", "self", ".", "vocab", "=", "target", ".", "vocab", "\n", "self", ".", "vocab_size", "=", "len", "(", "self", ".", "vocab", ")", "\n", "self", ".", "words", "=", "[", "]", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "for", "w", "in", "target", ".", "vocab", ":", "\n", "            ", "if", "not", "w", "in", "[", "\"#\"", ",", "\"[\"", "]", ":", "\n", "                ", "self", ".", "words", ".", "append", "(", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierDiscrete.VerifierDiscrete.verify": [[21, 97], ["time.time", "VerifierDiscrete.VerifierDiscrete.target.get_embeddings", "VerifierDiscrete.VerifierDiscrete.logger.write", "VerifierDiscrete.VerifierDiscrete.logger.write", "VerifierDiscrete.VerifierDiscrete.logger.write", "range", "VerifierDiscrete.VerifierDiscrete.logger.write", "VerifierDiscrete.VerifierDiscrete.target.step", "float", "data_utils.get_batches", "min", "VerifierDiscrete.VerifierDiscrete.logger.write", "result[].append", "min", "time.time", "copy.deepcopy", "candidates.append", "torch.norm", "range", "torch.norm", "VerifierDiscrete.VerifierDiscrete.target.step", "len", "max", "float", "float", "sent.split", "[].unsqueeze", "min", "float", "float"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.get_embeddings", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.step", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.get_batches", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.step"], ["", "", "", "def", "verify", "(", "self", ",", "example", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "embeddings", ",", "tokens", "=", "self", ".", "target", ".", "get_embeddings", "(", "[", "example", "]", ")", "\n", "length", "=", "embeddings", ".", "shape", "[", "1", "]", "\n", "tokens", "=", "tokens", "[", "0", "]", "\n", "\n", "self", ".", "logger", ".", "write", "(", "\"tokens:\"", ",", "\" \"", ".", "join", "(", "tokens", ")", ")", "\n", "self", ".", "logger", ".", "write", "(", "\"length:\"", ",", "length", ")", "\n", "self", ".", "logger", ".", "write", "(", "\"label:\"", ",", "example", "[", "\"label\"", "]", ")", "\n", "\n", "self", ".", "std", "=", "self", ".", "target", ".", "step", "(", "[", "example", "]", ",", "infer_grad", "=", "True", ")", "[", "-", "1", "]", "\n", "\n", "result", "=", "{", "\n", "\"tokens\"", ":", "tokens", ",", "\n", "\"label\"", ":", "float", "(", "example", "[", "\"label\"", "]", ")", ",", "\n", "\"bounds\"", ":", "[", "]", "\n", "}", "\n", "\n", "cnt", "=", "0", "\n", "sum_eps", ",", "min_eps", "=", "0", ",", "1e30", "\n", "\n", "assert", "(", "self", ".", "perturbed_words", "==", "1", ")", "\n", "# [CLS] and [SEP] cannot be perturbed", "\n", "for", "i", "in", "range", "(", "1", ",", "length", "-", "1", ")", ":", "\n", "# skip OOV", "\n", "            ", "if", "tokens", "[", "i", "]", "[", "0", "]", "==", "\"#\"", "or", "tokens", "[", "i", "+", "1", "]", "[", "0", "]", "==", "\"#\"", ":", "\n", "                ", "continue", "\n", "\n", "", "candidates", "=", "[", "]", "\n", "for", "w", "in", "self", ".", "words", ":", "\n", "                ", "_tokens", "=", "copy", ".", "deepcopy", "(", "tokens", ")", "\n", "_tokens", "[", "i", "]", "=", "w", "\n", "sent", "=", "\"\"", "\n", "for", "_w", "in", "_tokens", "[", "1", ":", "-", "1", "]", ":", "\n", "                    ", "if", "_w", "[", "0", "]", "==", "\"#\"", ":", "\n", "                        ", "sent", "+=", "_w", "[", "2", ":", "]", "+", "\" \"", "\n", "", "else", ":", "\n", "                        ", "sent", "+=", "_w", "+", "\" \"", "\n", "", "", "candidates", ".", "append", "(", "{", "\n", "\"sent_a\"", ":", "sent", ".", "split", "(", ")", ",", "\n", "\"label\"", ":", "example", "[", "\"label\"", "]", "\n", "}", ")", "\n", "\n", "", "epsilon", "=", "1e10", "\n", "epsilon_max", "=", "0", "\n", "for", "batch", "in", "get_batches", "(", "candidates", ",", "self", ".", "batch_size", ")", ":", "\n", "                ", "r", "=", "self", ".", "target", ".", "step", "(", "batch", ")", "[", "-", "1", "]", "\n", "dist", "=", "torch", ".", "norm", "(", "\n", "r", "[", "\"embedding_output\"", "]", "[", ":", ",", "i", "]", "-", "embeddings", "[", "0", "]", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "p", "=", "self", ".", "p", ",", "dim", "=", "-", "1", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "batch", ")", ")", ":", "\n", "                    ", "if", "r", "[", "\"pred_labels\"", "]", "[", "j", "]", "!=", "example", "[", "\"label\"", "]", ":", "\n", "                        ", "epsilon", "=", "min", "(", "epsilon", ",", "float", "(", "dist", "[", "j", "]", ")", ")", "\n", "", "epsilon_max", "=", "max", "(", "epsilon_max", ",", "float", "(", "dist", "[", "j", "]", ")", ")", "\n", "", "", "epsilon", "=", "min", "(", "epsilon", ",", "epsilon_max", ")", "\n", "\n", "epsilon_normalized", "=", "epsilon", "/", "torch", ".", "norm", "(", "embeddings", "[", "0", ",", "i", "]", ",", "p", "=", "self", ".", "p", ")", "\n", "\n", "self", ".", "logger", ".", "write", "(", "\"Position %d: %s %.5f %.5f\"", "%", "(", "\n", "i", ",", "tokens", "[", "i", "]", ",", "epsilon", ",", "epsilon_normalized", ")", ")", "\n", "\n", "result", "[", "\"bounds\"", "]", ".", "append", "(", "{", "\n", "\"position\"", ":", "i", ",", "\n", "\"eps\"", ":", "float", "(", "epsilon", ")", ",", "\n", "\"eps_normalized\"", ":", "float", "(", "epsilon_normalized", ")", "\n", "}", ")", "\n", "\n", "cnt", "+=", "1", "\n", "sum_eps", "+=", "epsilon", "\n", "min_eps", "=", "min", "(", "min_eps", ",", "epsilon", ")", "\n", "\n", "", "result", "[", "\"time\"", "]", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n", "self", ".", "logger", ".", "write", "(", "\"Time elapsed\"", ",", "result", "[", "\"time\"", "]", ")", "\n", "\n", "return", "result", ",", "sum_eps", "/", "cnt", ",", "min_eps", "", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.Edge.__init__": [[25, 30], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "controller", "=", "controller", "\n", "self", ".", "use_forward", "=", "args", ".", "method", "==", "\"baf\"", "\n", "self", ".", "empty_cache", "=", "args", ".", "empty_cache", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.Edge.backward": [[31, 33], ["None"], "methods", ["None"], ["", "def", "backward", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeComplex.__init__": [[35, 37], ["Edge.Edge.__init__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ")", ":", "\n", "        ", "super", "(", "EdgeComplex", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeComplex.backward": [[38, 40], ["Edge.EdgeComplex.res.backward_buffer"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward_buffer"], ["", "def", "backward", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "self", ".", "res", ".", "backward_buffer", "(", "lw", ",", "uw", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeDirect.__init__": [[42, 45], ["Edge.Edge.__init__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ")", ":", "\n", "        ", "super", "(", "EdgeDirect", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "self", ".", "par", "=", "par", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeDirect.backward": [[46, 48], ["Edge.EdgeDirect.par.backward_buffer"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward_buffer"], ["", "def", "backward", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "self", ".", "par", ".", "backward_buffer", "(", "lw", ",", "uw", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeInput.__init__": [[50, 55], ["Edge.Edge.__init__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "embeddings", ",", "index", ")", ":", "\n", "        ", "super", "(", "EdgeInput", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "self", ".", "embeddings", "=", "embeddings", "\n", "self", ".", "index", "=", "index", "\n", "self", ".", "perturbed_words", "=", "args", ".", "perturbed_words", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeInput.backward": [[56, 101], ["Edge.EdgeInput.controller.lb.reshape().clone", "Edge.EdgeInput.controller.ub.reshape().clone", "Edge.EdgeInput.controller.concretize", "l.reshape.reshape.reshape", "u.reshape.reshape.reshape", "torch.sum", "torch.sum", "torch.cuda.empty_cache", "torch.zeros().cuda", "torch.zeros().cuda", "torch.sum", "torch.sum", "type", "Edge.EdgeInput.controller.lb.reshape", "Edge.EdgeInput.controller.ub.reshape", "type", "torch.zeros().cuda", "torch.zeros().cuda", "torch.sum", "torch.sum", "Edge.EdgeInput.embeddings.unsqueeze().unsqueeze", "Edge.EdgeInput.embeddings.unsqueeze().unsqueeze", "torch.zeros", "torch.zeros", "Edge.EdgeInput.embeddings.unsqueeze", "Edge.EdgeInput.embeddings.unsqueeze", "type", "torch.zeros", "torch.zeros", "Edge.EdgeInput.embeddings.unsqueeze", "Edge.EdgeInput.embeddings.unsqueeze", "Edge.EdgeInput.embeddings.unsqueeze", "Edge.EdgeInput.embeddings.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize"], ["", "def", "backward", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "if", "self", ".", "use_forward", ":", "\n", "            ", "if", "self", ".", "perturbed_words", "==", "2", ":", "\n", "                ", "assert", "(", "type", "(", "self", ".", "index", ")", "==", "list", ")", "\n", "dim", "=", "lw", ".", "shape", "[", "2", "]", "\n", "self", ".", "controller", ".", "final_lw", "=", "torch", ".", "zeros", "(", "lw", ".", "shape", "[", "0", "]", ",", "lw", ".", "shape", "[", "1", "]", ",", "dim", "*", "2", ")", ".", "cuda", "(", ")", "\n", "self", ".", "controller", ".", "final_uw", "=", "torch", ".", "zeros", "(", "lw", ".", "shape", "[", "0", "]", ",", "lw", ".", "shape", "[", "1", "]", ",", "dim", "*", "2", ")", ".", "cuda", "(", ")", "\n", "self", ".", "controller", ".", "final_lw", "[", "self", ".", "index", "[", "0", "]", ",", ":", ",", ":", "dim", "]", "=", "lw", "[", "self", ".", "index", "[", "0", "]", ",", ":", ",", ":", "]", "\n", "self", ".", "controller", ".", "final_uw", "[", "self", ".", "index", "[", "0", "]", ",", ":", ",", ":", "dim", "]", "=", "lw", "[", "self", ".", "index", "[", "0", "]", ",", ":", ",", ":", "]", "\n", "self", ".", "controller", ".", "final_lw", "[", "self", ".", "index", "[", "1", "]", ",", ":", ",", "dim", ":", "]", "=", "lw", "[", "self", ".", "index", "[", "1", "]", ",", ":", ",", ":", "]", "\n", "self", ".", "controller", ".", "final_uw", "[", "self", ".", "index", "[", "1", "]", ",", ":", ",", "dim", ":", "]", "=", "lw", "[", "self", ".", "index", "[", "1", "]", ",", ":", ",", ":", "]", "\n", "_lb", "=", "torch", ".", "sum", "(", "self", ".", "embeddings", ".", "unsqueeze", "(", "1", ")", "*", "lw", ",", "dim", "=", "-", "1", ")", "\n", "_ub", "=", "torch", ".", "sum", "(", "self", ".", "embeddings", ".", "unsqueeze", "(", "1", ")", "*", "uw", ",", "dim", "=", "-", "1", ")", "\n", "", "elif", "self", ".", "perturbed_words", "==", "1", ":", "\n", "                ", "assert", "(", "type", "(", "self", ".", "index", ")", "==", "int", ")", "\n", "self", ".", "controller", ".", "final_lw", "=", "torch", ".", "zeros", "(", "lw", ".", "shape", "[", "0", "]", ",", "lw", ".", "shape", "[", "1", "]", ",", "lw", ".", "shape", "[", "2", "]", ")", ".", "cuda", "(", ")", "\n", "self", ".", "controller", ".", "final_uw", "=", "torch", ".", "zeros", "(", "lw", ".", "shape", "[", "0", "]", ",", "lw", ".", "shape", "[", "1", "]", ",", "lw", ".", "shape", "[", "2", "]", ")", ".", "cuda", "(", ")", "\n", "self", ".", "controller", ".", "final_lw", "[", "self", ".", "index", ",", ":", ",", ":", "]", "=", "lw", "[", "self", ".", "index", ",", ":", ",", ":", "]", "\n", "self", ".", "controller", ".", "final_uw", "[", "self", ".", "index", ",", ":", ",", ":", "]", "=", "uw", "[", "self", ".", "index", ",", ":", ",", ":", "]", "\n", "_lb", "=", "torch", ".", "sum", "(", "self", ".", "embeddings", ".", "unsqueeze", "(", "1", ")", "*", "lw", ",", "dim", "=", "-", "1", ")", "\n", "_ub", "=", "torch", ".", "sum", "(", "self", ".", "embeddings", ".", "unsqueeze", "(", "1", ")", "*", "uw", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "", "", "else", ":", "\n", "            ", "assert", "(", "type", "(", "self", ".", "index", ")", "==", "int", ")", "\n", "self", ".", "controller", ".", "final_lw", "=", "lw", "[", ":", ",", ":", ",", "self", ".", "index", ",", ":", "]", "\n", "self", ".", "controller", ".", "final_uw", "=", "uw", "[", ":", ",", ":", ",", "self", ".", "index", ",", ":", "]", "\n", "_lb", "=", "torch", ".", "sum", "(", "lw", "*", "self", ".", "embeddings", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ",", "dim", "=", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "_ub", "=", "torch", ".", "sum", "(", "uw", "*", "self", ".", "embeddings", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ",", "dim", "=", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "\n", "", "self", ".", "controller", ".", "lb", "+=", "_lb", "\n", "self", ".", "controller", ".", "ub", "+=", "_ub", "\n", "\n", "self", ".", "controller", ".", "final_lb", "=", "self", ".", "controller", ".", "lb", ".", "reshape", "(", "_lb", ".", "shape", ")", ".", "clone", "(", ")", "\n", "self", ".", "controller", ".", "final_ub", "=", "self", ".", "controller", ".", "ub", ".", "reshape", "(", "_lb", ".", "shape", ")", ".", "clone", "(", ")", "\n", "\n", "l", ",", "u", "=", "self", ".", "controller", ".", "concretize", "(", "self", ".", "controller", ".", "final_lw", ",", "self", ".", "controller", ".", "final_uw", ")", "\n", "l", "=", "l", ".", "reshape", "(", "_lb", ".", "shape", ")", "\n", "u", "=", "u", ".", "reshape", "(", "_lb", ".", "shape", ")", "\n", "\n", "self", ".", "controller", ".", "lb", "+=", "l", "\n", "self", ".", "controller", ".", "ub", "+=", "u", "\n", "\n", "if", "self", ".", "empty_cache", ":", "\n", "            ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeSoftmax.__init__": [[104, 127], ["Edge.EdgeComplex.__init__", "Edge.EdgeSoftmax.par.next", "torch.ones().cuda", "torch.zeros().cuda", "torch.cat().reshape().permute().reshape", "Edge.EdgeSoftmax.exp.next", "Edge.EdgeSoftmax.exp.next", "Edge.EdgeExp", "Edge.EdgeDense", "Edge.EdgeDivide", "torch.ones", "torch.zeros", "torch.cat().reshape().permute", "torch.cat().reshape", "torch.cat", "torch.cat().repeat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ",", "num_attention_heads", ")", ":", "\n", "        ", "super", "(", "EdgeSoftmax", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "\n", "self", ".", "length", "=", "par", ".", "length", "\n", "self", ".", "num_attention_heads", "=", "num_attention_heads", "\n", "\n", "self", ".", "par", "=", "par", "\n", "\n", "self", ".", "exp", "=", "self", ".", "par", ".", "next", "(", "EdgeExp", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "self", ".", "par", ")", ")", "\n", "\n", "if", "self", ".", "use_forward", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "ones", "=", "torch", ".", "ones", "(", "1", ",", "self", ".", "length", ",", "self", ".", "length", ")", ".", "cuda", "(", ")", "\n", "zeros", "=", "torch", ".", "zeros", "(", "num_attention_heads", ",", "self", ".", "length", ",", "self", ".", "length", ")", ".", "cuda", "(", ")", "\n", "w", "=", "torch", ".", "cat", "(", "[", "\n", "ones", ",", "\n", "torch", ".", "cat", "(", "[", "zeros", ",", "ones", "]", ",", "dim", "=", "0", ")", ".", "repeat", "(", "num_attention_heads", "-", "1", ",", "1", ",", "1", ")", "\n", "]", ",", "dim", "=", "0", ")", ".", "reshape", "(", "num_attention_heads", ",", "num_attention_heads", ",", "self", ".", "length", ",", "self", ".", "length", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ".", "reshape", "(", "num_attention_heads", "*", "self", ".", "length", ",", "num_attention_heads", "*", "self", ".", "length", ")", "\n", "self", ".", "sum", "=", "self", ".", "exp", ".", "next", "(", "EdgeDense", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "self", ".", "exp", ",", "w", "=", "w", ",", "b", "=", "0.", ")", ")", "\n", "self", ".", "res", "=", "self", ".", "exp", ".", "next", "(", "EdgeDivide", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "self", ".", "exp", ",", "self", ".", "sum", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgePooling.__init__": [[129, 134], ["Edge.Edge.__init__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ")", ":", "\n", "        ", "super", "(", "EdgePooling", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "\n", "self", ".", "par", "=", "par", "\n", "self", ".", "length", "=", "par", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgePooling.backward": [[135, 145], ["torch.cat", "torch.cat", "Edge.EdgePooling.par.backward_buffer", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward_buffer"], ["", "def", "backward", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "if", "self", ".", "use_forward", ":", "\n", "            ", "dim", "=", "0", "\n", "zeros", "=", "torch", ".", "zeros", "(", "self", ".", "length", "-", "1", ",", "lw", ".", "shape", "[", "1", "]", ",", "lw", ".", "shape", "[", "2", "]", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "dim", "=", "2", "\n", "zeros", "=", "torch", ".", "zeros", "(", "lw", ".", "shape", "[", "0", "]", ",", "lw", ".", "shape", "[", "1", "]", ",", "self", ".", "length", "-", "1", ",", "lw", ".", "shape", "[", "3", "]", ")", ".", "cuda", "(", ")", "\n", "", "lw", "=", "torch", ".", "cat", "(", "[", "lw", ",", "zeros", "]", ",", "dim", "=", "dim", ")", "\n", "uw", "=", "torch", ".", "cat", "(", "[", "uw", ",", "zeros", "]", ",", "dim", "=", "dim", ")", "\n", "self", ".", "par", ".", "backward_buffer", "(", "lw", ",", "uw", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeDense.__init__": [[147, 158], ["Edge.Edge.__init__", "type", "torch.ones().cuda", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ",", "w", "=", "0.", ",", "b", "=", "0.", ",", "dense", "=", "None", ")", ":", "\n", "        ", "super", "(", "EdgeDense", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "self", ".", "par", "=", "par", "\n", "if", "dense", "is", "not", "None", ":", "\n", "            ", "w", "=", "dense", ".", "weight", "\n", "b", "=", "dense", ".", "bias", "\n", "", "self", ".", "w", "=", "w", "\n", "if", "type", "(", "b", ")", "==", "float", ":", "\n", "            ", "self", ".", "b", "=", "torch", ".", "ones", "(", "w", ".", "shape", "[", "-", "1", "]", ")", ".", "cuda", "(", ")", "*", "b", "\n", "", "else", ":", "\n", "            ", "self", ".", "b", "=", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeDense.backward": [[159, 171], ["torch.matmul", "torch.matmul", "Edge.EdgeDense.par.backward_buffer", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "Edge.EdgeDense.b.reshape", "Edge.EdgeDense.b.reshape"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward_buffer"], ["", "", "def", "backward", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "_lw", "=", "torch", ".", "matmul", "(", "lw", ",", "self", ".", "w", ")", "\n", "_uw", "=", "torch", ".", "matmul", "(", "uw", ",", "self", ".", "w", ")", "\n", "\n", "if", "self", ".", "use_forward", ":", "\n", "            ", "self", ".", "controller", ".", "lb", "+=", "torch", ".", "sum", "(", "lw", "*", "self", ".", "b", ",", "dim", "=", "-", "1", ")", "\n", "self", ".", "controller", ".", "ub", "+=", "torch", ".", "sum", "(", "uw", "*", "self", ".", "b", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "controller", ".", "lb", "+=", "torch", ".", "sum", "(", "lw", "*", "self", ".", "b", ".", "reshape", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", ",", "dim", "=", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "self", ".", "controller", ".", "ub", "+=", "torch", ".", "sum", "(", "uw", "*", "self", ".", "b", ".", "reshape", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", ",", "dim", "=", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "\n", "", "return", "self", ".", "par", ".", "backward_buffer", "(", "_lw", ",", "_uw", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeActivation.__init__": [[173, 178], ["Edge.Edge.__init__", "Edge.EdgeActivation.init_linear"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeActivation.init_linear"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ",", "par2", "=", "None", ")", ":", "\n", "        ", "super", "(", "EdgeActivation", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "self", ".", "par", "=", "par", "\n", "self", ".", "par2", "=", "par2", "\n", "self", ".", "init_linear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeActivation.init_linear": [[179, 197], ["torch.gt().to", "torch.lt().to", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.gt", "torch.lt", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "init_linear", "(", "self", ")", ":", "\n", "        ", "self", ".", "mask_pos", "=", "torch", ".", "gt", "(", "self", ".", "par", ".", "l", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "self", ".", "mask_neg", "=", "torch", ".", "lt", "(", "self", ".", "par", ".", "u", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "self", ".", "mask_both", "=", "1", "-", "self", ".", "mask_pos", "-", "self", ".", "mask_neg", "\n", "\n", "# element-wise for now", "\n", "shape", "=", "(", "self", ".", "par", ".", "length", ",", "self", ".", "par", ".", "dim", ")", "\n", "self", ".", "lw", "=", "torch", ".", "zeros", "(", "shape", ")", ".", "cuda", "(", ")", "\n", "self", ".", "lb", "=", "torch", ".", "zeros", "(", "shape", ")", ".", "cuda", "(", ")", "\n", "self", ".", "uw", "=", "torch", ".", "zeros", "(", "shape", ")", ".", "cuda", "(", ")", "\n", "self", ".", "ub", "=", "torch", ".", "zeros", "(", "shape", ")", ".", "cuda", "(", ")", "\n", "\n", "if", "self", ".", "par2", "is", "not", "None", ":", "\n", "            ", "shape", "=", "(", "self", ".", "par2", ".", "length", ",", "self", ".", "par2", ".", "dim", ")", "\n", "self", ".", "lw2", "=", "torch", ".", "zeros", "(", "shape", ")", ".", "cuda", "(", ")", "\n", "self", ".", "lb2", "=", "torch", ".", "zeros", "(", "shape", ")", ".", "cuda", "(", ")", "\n", "self", ".", "uw2", "=", "torch", ".", "zeros", "(", "shape", ")", ".", "cuda", "(", ")", "\n", "self", ".", "ub2", "=", "torch", ".", "zeros", "(", "shape", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeActivation.add_linear": [[198, 213], ["None"], "methods", ["None"], ["", "", "def", "add_linear", "(", "self", ",", "mask", ",", "type", ",", "k", ",", "x0", ",", "y0", ",", "second", "=", "False", ")", ":", "\n", "        ", "if", "mask", "is", "None", ":", "\n", "            ", "mask", "=", "1", "\n", "", "if", "type", "==", "\"lower\"", ":", "\n", "            ", "if", "second", ":", "\n", "                ", "w_out", ",", "b_out", "=", "self", ".", "lw2", ",", "self", ".", "lb2", "\n", "", "else", ":", "\n", "                ", "w_out", ",", "b_out", "=", "self", ".", "lw", ",", "self", ".", "lb", "\n", "", "", "else", ":", "\n", "            ", "if", "second", ":", "\n", "                ", "w_out", ",", "b_out", "=", "self", ".", "uw2", ",", "self", ".", "ub2", "\n", "", "else", ":", "\n", "                ", "w_out", ",", "b_out", "=", "self", ".", "uw", ",", "self", ".", "ub", "\n", "", "", "w_out", "+=", "mask", "*", "k", "\n", "b_out", "+=", "mask", "*", "(", "-", "x0", "*", "k", "+", "y0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeActivation.backward_par": [[214, 240], ["torch.gt().to", "torch.gt().to", "par.backward_buffer", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.gt", "torch.gt", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze().unsqueeze", "Edge.EdgeActivation.unsqueeze().unsqueeze", "Edge.EdgeActivation.unsqueeze().unsqueeze", "Edge.EdgeActivation.unsqueeze().unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze().unsqueeze", "Edge.EdgeActivation.unsqueeze().unsqueeze", "Edge.EdgeActivation.unsqueeze().unsqueeze", "Edge.EdgeActivation.unsqueeze().unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze", "Edge.EdgeActivation.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward_buffer"], ["", "def", "backward_par", "(", "self", ",", "lw", ",", "uw", ",", "self_lw", ",", "self_lb", ",", "self_uw", ",", "self_ub", ",", "par", ")", ":", "\n", "        ", "mask_l", "=", "torch", ".", "gt", "(", "lw", ",", "0.", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "mask_u", "=", "torch", ".", "gt", "(", "uw", ",", "0.", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "if", "self", ".", "use_forward", ":", "\n", "            ", "_lw", "=", "mask_l", "*", "lw", "*", "self_lw", ".", "unsqueeze", "(", "1", ")", "+", "(", "1", "-", "mask_l", ")", "*", "lw", "*", "self_uw", ".", "unsqueeze", "(", "1", ")", "\n", "_lb", "=", "torch", ".", "sum", "(", "mask_l", "*", "lw", "*", "self_lb", ".", "unsqueeze", "(", "1", ")", "+", "(", "1", "-", "mask_l", ")", "*", "lw", "*", "self_ub", ".", "unsqueeze", "(", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "_uw", "=", "mask_u", "*", "uw", "*", "self_uw", ".", "unsqueeze", "(", "1", ")", "+", "(", "1", "-", "mask_u", ")", "*", "uw", "*", "self_lw", ".", "unsqueeze", "(", "1", ")", "\n", "_ub", "=", "torch", ".", "sum", "(", "mask_u", "*", "uw", "*", "self_ub", ".", "unsqueeze", "(", "1", ")", "+", "(", "1", "-", "mask_u", ")", "*", "uw", "*", "self_lb", ".", "unsqueeze", "(", "1", ")", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "_lw", "=", "mask_l", "*", "lw", "*", "self_lw", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "+", "(", "1", "-", "mask_l", ")", "*", "lw", "*", "self_uw", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "_lb", "=", "torch", ".", "sum", "(", "mask_l", "*", "lw", "*", "self_lb", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "+", "(", "1", "-", "mask_l", ")", "*", "lw", "*", "self_ub", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ",", "dim", "=", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "_uw", "=", "mask_u", "*", "uw", "*", "self_uw", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "+", "(", "1", "-", "mask_u", ")", "*", "uw", "*", "self_lw", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "_ub", "=", "torch", ".", "sum", "(", "mask_u", "*", "uw", "*", "self_ub", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "+", "(", "1", "-", "mask_u", ")", "*", "uw", "*", "self_lb", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", ",", "dim", "=", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "\n", "", "self", ".", "controller", ".", "lb", "+=", "_lb", "\n", "self", ".", "controller", ".", "ub", "+=", "_ub", "\n", "\n", "par", ".", "backward_buffer", "(", "_lw", ",", "_uw", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeActivation.backward": [[241, 245], ["Edge.EdgeActivation.backward_par", "Edge.EdgeActivation.backward_par"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeActivation.backward_par", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeActivation.backward_par"], ["", "def", "backward", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "self", ".", "backward_par", "(", "lw", ",", "uw", ",", "self", ".", "lw", ",", "self", ".", "lb", ",", "self", ".", "uw", ",", "self", ".", "ub", ",", "self", ".", "par", ")", "\n", "if", "self", ".", "par2", "is", "not", "None", ":", "\n", "            ", "self", ".", "backward_par", "(", "lw", ",", "uw", ",", "self", ".", "lw2", ",", "self", ".", "lb2", ",", "self", ".", "uw2", ",", "self", ".", "ub2", ",", "self", ".", "par2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeDotProduct.__init__": [[249, 294], ["Edge.Edge.__init__", "a.l.reshape().repeat().reshape", "a.u.reshape().repeat().reshape", "b.l.reshape().transpose().repeat().reshape", "b.u.reshape().transpose().repeat().reshape", "Edge.get_bounds_xy", "Edge.EdgeDotProduct.alpha_l.reshape", "Edge.EdgeDotProduct.alpha_u.reshape", "Edge.EdgeDotProduct.beta_l.reshape", "Edge.EdgeDotProduct.beta_u.reshape", "Edge.EdgeDotProduct.gamma_l.reshape().sum", "Edge.EdgeDotProduct.gamma_u.reshape().sum", "a.l.reshape().repeat", "a.u.reshape().repeat", "b.l.reshape().transpose().repeat", "b.u.reshape().transpose().repeat", "Edge.EdgeDotProduct.gamma_l.reshape", "Edge.EdgeDotProduct.gamma_u.reshape", "a.l.reshape", "a.u.reshape", "b.l.reshape().transpose", "b.u.reshape().transpose", "b.l.reshape", "b.u.reshape"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.get_bounds_xy", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "a", ",", "b", ",", "num_attention_heads", ")", ":", "\n", "        ", "super", "(", "EdgeDotProduct", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "\n", "assert", "(", "args", ".", "method", "!=", "\"baf\"", ")", "\n", "\n", "self", ".", "a", "=", "a", "\n", "self", ".", "b", "=", "b", "\n", "self", ".", "num_attention_heads", "=", "num_attention_heads", "\n", "self", ".", "attention_head_size", "=", "a", ".", "l", ".", "shape", "[", "-", "1", "]", "//", "num_attention_heads", "\n", "\n", "l_a", "=", "a", ".", "l", ".", "reshape", "(", "a", ".", "length", ",", "num_attention_heads", ",", "self", ".", "attention_head_size", ")", ".", "repeat", "(", "1", ",", "1", ",", "b", ".", "length", ")", ".", "reshape", "(", "-", "1", ")", "\n", "u_a", "=", "a", ".", "u", ".", "reshape", "(", "a", ".", "length", ",", "num_attention_heads", ",", "self", ".", "attention_head_size", ")", ".", "repeat", "(", "1", ",", "1", ",", "b", ".", "length", ")", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "l_b", "=", "b", ".", "l", ".", "reshape", "(", "b", ".", "length", ",", "num_attention_heads", ",", "self", ".", "attention_head_size", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "repeat", "(", "a", ".", "length", ",", "1", ",", "1", ")", ".", "reshape", "(", "-", "1", ")", "\n", "u_b", "=", "b", ".", "u", ".", "reshape", "(", "b", ".", "length", ",", "num_attention_heads", ",", "self", ".", "attention_head_size", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "repeat", "(", "a", ".", "length", ",", "1", ",", "1", ")", ".", "reshape", "(", "-", "1", ")", "\n", "\n", "self", ".", "alpha_l", ",", "self", ".", "beta_l", ",", "self", ".", "gamma_l", ",", "self", ".", "alpha_u", ",", "self", ".", "beta_u", ",", "self", ".", "gamma_u", "=", "get_bounds_xy", "(", "l_a", ",", "u_a", ",", "l_b", ",", "u_b", ")", "\n", "\n", "# batch_size, length, h, h_size*length", "\n", "self", ".", "alpha_l", "=", "self", ".", "alpha_l", ".", "reshape", "(", "a", ".", "length", ",", "num_attention_heads", ",", "\n", "b", ".", "length", ",", "self", ".", "attention_head_size", ")", "\n", "self", ".", "alpha_u", "=", "self", ".", "alpha_u", ".", "reshape", "(", "a", ".", "length", ",", "num_attention_heads", ",", "\n", "b", ".", "length", ",", "self", ".", "attention_head_size", ")", "\n", "\n", "self", ".", "beta_l", "=", "self", ".", "beta_l", ".", "reshape", "(", "a", ".", "length", ",", "num_attention_heads", ",", "\n", "b", ".", "length", ",", "self", ".", "attention_head_size", ")", "#.transpose(0, 2)", "\n", "self", ".", "beta_u", "=", "self", ".", "beta_u", ".", "reshape", "(", "a", ".", "length", ",", "num_attention_heads", ",", "\n", "b", ".", "length", ",", "self", ".", "attention_head_size", ")", "#.transpose(0, 2)", "\n", "\n", "# batch_size, length, h, length*h_size", "\n", "self", ".", "gamma_l", "=", "self", ".", "gamma_l", ".", "reshape", "(", "a", ".", "length", ",", "num_attention_heads", ",", "b", ".", "length", ",", "self", ".", "attention_head_size", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "self", ".", "gamma_u", "=", "self", ".", "gamma_u", ".", "reshape", "(", "a", ".", "length", ",", "num_attention_heads", ",", "b", ".", "length", ",", "self", ".", "attention_head_size", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeDotProduct.backward": [[295, 370], ["Edge.EdgeDotProduct.alpha_l.unsqueeze().unsqueeze", "Edge.EdgeDotProduct.alpha_u.unsqueeze().unsqueeze", "Edge.EdgeDotProduct.beta_l.unsqueeze().unsqueeze", "Edge.EdgeDotProduct.beta_u.unsqueeze().unsqueeze", "Edge.EdgeDotProduct.gamma_l.reshape", "Edge.EdgeDotProduct.gamma_u.reshape", "torch.gt().to", "torch.sum", "torch.gt().to", "torch.sum", "lw.reshape", "torch.gt().to", "torch.sum().reshape", "uw.reshape", "torch.gt().to", "torch.sum().reshape", "Edge.EdgeDotProduct.a.backward_buffer", "lw.reshape", "torch.gt().to", "torch.sum().transpose", "_lw2.reshape.reshape.reshape", "uw.reshape", "torch.gt().to", "torch.sum().transpose", "_uw2.reshape.reshape.reshape", "Edge.EdgeDotProduct.b.backward_buffer", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "Edge.EdgeDotProduct.alpha_l.unsqueeze", "Edge.EdgeDotProduct.alpha_u.unsqueeze", "Edge.EdgeDotProduct.beta_l.unsqueeze", "Edge.EdgeDotProduct.beta_u.unsqueeze", "torch.gt", "torch.gt", "torch.gt", "torch.sum", "torch.gt", "torch.sum", "torch.gt", "torch.sum", "torch.gt", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward_buffer", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward_buffer"], ["", "def", "backward", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "# [length, 1, h, length, r]", "\n", "        ", "alpha_l", "=", "self", ".", "alpha_l", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "alpha_u", "=", "self", ".", "alpha_u", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "beta_l", "=", "self", ".", "beta_l", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "beta_u", "=", "self", ".", "beta_u", ".", "unsqueeze", "(", "0", ")", ".", "unsqueeze", "(", "0", ")", "\n", "gamma_l", "=", "self", ".", "gamma_l", ".", "reshape", "(", "1", ",", "1", ",", "self", ".", "a", ".", "length", ",", "-", "1", ")", "\n", "gamma_u", "=", "self", ".", "gamma_u", ".", "reshape", "(", "1", ",", "1", ",", "self", ".", "a", ".", "length", ",", "-", "1", ")", "\n", "\n", "mask", "=", "torch", ".", "gt", "(", "lw", ",", "0.", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_lb", "=", "torch", ".", "sum", "(", "lw", "*", "(", "\n", "mask", "*", "gamma_l", "+", "(", "1", "-", "mask", ")", "*", "gamma_u", ")", "\n", ",", "dim", "=", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "del", "(", "mask", ")", "\n", "\n", "mask", "=", "torch", ".", "gt", "(", "uw", ",", "0.", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_ub", "=", "torch", ".", "sum", "(", "uw", "*", "(", "\n", "mask", "*", "gamma_u", "+", "(", "1", "-", "mask", ")", "*", "gamma_l", ")", "\n", ",", "dim", "=", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "del", "(", "mask", ")", "\n", "del", "(", "gamma_l", ")", "\n", "del", "(", "gamma_u", ")", "\n", "\n", "if", "self", ".", "empty_cache", ":", "\n", "            ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "", "self", ".", "controller", ".", "lb", "+=", "_lb", "\n", "self", ".", "controller", ".", "ub", "+=", "_ub", "\n", "\n", "# [length, h * length (o), h, length, 1]", "\n", "_lw", "=", "lw", ".", "reshape", "(", "lw", ".", "shape", "[", "0", "]", ",", "lw", ".", "shape", "[", "1", "]", ",", "lw", ".", "shape", "[", "2", "]", ",", "self", ".", "num_attention_heads", ",", "self", ".", "b", ".", "length", ",", "1", ")", "\n", "mask", "=", "torch", ".", "gt", "(", "_lw", ",", "0.", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_lw", "=", "torch", ".", "sum", "(", "mask", "*", "_lw", "*", "alpha_l", "+", "(", "1", "-", "mask", ")", "*", "_lw", "*", "alpha_u", ",", "dim", "=", "-", "2", ")", ".", "reshape", "(", "lw", ".", "shape", "[", "0", "]", ",", "lw", ".", "shape", "[", "1", "]", ",", "lw", ".", "shape", "[", "2", "]", ",", "-", "1", ")", "\n", "\n", "# [length, h * length (o), h, length, 1]", "\n", "_uw", "=", "uw", ".", "reshape", "(", "uw", ".", "shape", "[", "0", "]", ",", "uw", ".", "shape", "[", "1", "]", ",", "uw", ".", "shape", "[", "2", "]", ",", "self", ".", "num_attention_heads", ",", "self", ".", "b", ".", "length", ",", "1", ")", "\n", "mask", "=", "torch", ".", "gt", "(", "_uw", ",", "0.", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_uw", "=", "torch", ".", "sum", "(", "mask", "*", "_uw", "*", "alpha_u", "+", "(", "1", "-", "mask", ")", "*", "_uw", "*", "alpha_l", ",", "dim", "=", "-", "2", ")", ".", "reshape", "(", "uw", ".", "shape", "[", "0", "]", ",", "uw", ".", "shape", "[", "1", "]", ",", "uw", ".", "shape", "[", "2", "]", ",", "-", "1", ")", "\n", "\n", "del", "(", "mask", ")", "\n", "if", "self", ".", "empty_cache", ":", "\n", "            ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "", "self", ".", "a", ".", "backward_buffer", "(", "_lw", ",", "_uw", ")", "\n", "\n", "del", "(", "_lw", ")", "\n", "del", "(", "_uw", ")", "\n", "if", "self", ".", "empty_cache", ":", "\n", "            ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "", "_lw2", "=", "lw", ".", "reshape", "(", "lw", ".", "shape", "[", "0", "]", ",", "lw", ".", "shape", "[", "1", "]", ",", "lw", ".", "shape", "[", "2", "]", ",", "self", ".", "num_attention_heads", ",", "self", ".", "b", ".", "length", ",", "1", ")", "\n", "mask", "=", "torch", ".", "gt", "(", "_lw2", ",", "0.", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_lw2", "=", "torch", ".", "sum", "(", "mask", "*", "_lw2", "*", "beta_l", "+", "(", "1", "-", "mask", ")", "*", "_lw2", "*", "beta_u", ",", "dim", "=", "-", "4", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "_lw2", "=", "_lw2", ".", "reshape", "(", "_lw2", ".", "shape", "[", "0", "]", ",", "_lw2", ".", "shape", "[", "1", "]", ",", "_lw2", ".", "shape", "[", "2", "]", ",", "-", "1", ")", "\n", "\n", "_uw2", "=", "uw", ".", "reshape", "(", "uw", ".", "shape", "[", "0", "]", ",", "uw", ".", "shape", "[", "1", "]", ",", "uw", ".", "shape", "[", "2", "]", ",", "self", ".", "num_attention_heads", ",", "self", ".", "b", ".", "length", ",", "1", ")", "\n", "mask", "=", "torch", ".", "gt", "(", "_uw2", ",", "0.", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_uw2", "=", "torch", ".", "sum", "(", "mask", "*", "_uw2", "*", "beta_u", "+", "(", "1", "-", "mask", ")", "*", "_uw2", "*", "beta_l", ",", "dim", "=", "-", "4", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "_uw2", "=", "_uw2", ".", "reshape", "(", "_uw2", ".", "shape", "[", "0", "]", ",", "_uw2", ".", "shape", "[", "1", "]", ",", "_uw2", ".", "shape", "[", "2", "]", ",", "-", "1", ")", "\n", "\n", "del", "(", "mask", ")", "\n", "if", "self", ".", "empty_cache", ":", "\n", "            ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "", "self", ".", "b", ".", "backward_buffer", "(", "_lw2", ",", "_uw2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.__init__": [[372, 379], ["Edge.Edge.__init__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ",", "num_attention_heads", ")", ":", "\n", "        ", "super", "(", "EdgeTranspose", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "\n", "assert", "(", "args", ".", "method", "!=", "\"baf\"", ")", "\n", "\n", "self", ".", "par", "=", "par", "\n", "self", ".", "num_attention_heads", "=", "num_attention_heads", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose": [[380, 387], ["w.reshape.reshape.reshape().transpose", "w.reshape.reshape.reshape", "w.reshape.reshape.reshape"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose"], ["", "def", "transpose", "(", "self", ",", "w", ")", ":", "\n", "        ", "w", "=", "w", ".", "reshape", "(", "\n", "w", ".", "shape", "[", "0", "]", ",", "w", ".", "shape", "[", "1", "]", ",", "w", ".", "shape", "[", "2", "]", ",", "\n", "self", ".", "num_attention_heads", ",", "-", "1", "\n", ")", ".", "transpose", "(", "2", ",", "4", ")", "\n", "w", "=", "w", ".", "reshape", "(", "w", ".", "shape", "[", "0", "]", ",", "w", ".", "shape", "[", "1", "]", ",", "w", ".", "shape", "[", "2", "]", ",", "-", "1", ")", "\n", "return", "w", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.backward": [[388, 393], ["Edge.EdgeTranspose.transpose", "Edge.EdgeTranspose.transpose", "Edge.EdgeTranspose.par.backward_buffer"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward_buffer"], ["", "def", "backward", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "lw", "=", "self", ".", "transpose", "(", "lw", ")", "\n", "uw", "=", "self", ".", "transpose", "(", "uw", ")", "\n", "\n", "self", ".", "par", ".", "backward_buffer", "(", "lw", ",", "uw", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeMultiply.__init__": [[395, 415], ["Edge.EdgeActivation.__init__", "Edge.get_bounds_xy", "alpha_l.reshape.reshape.reshape", "beta_l.reshape.reshape.reshape", "gamma_l.reshape.reshape.reshape", "alpha_u.reshape.reshape.reshape", "beta_u.reshape.reshape.reshape", "gamma_u.reshape.reshape.reshape", "Edge.EdgeMultiply.add_linear", "Edge.EdgeMultiply.add_linear", "Edge.EdgeMultiply.add_linear", "Edge.EdgeMultiply.add_linear", "a.l.reshape", "a.u.reshape", "b.l.reshape", "b.u.reshape"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.get_bounds_xy", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "a", ",", "b", ")", ":", "\n", "        ", "super", "(", "EdgeMultiply", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ",", "par", "=", "a", ",", "par2", "=", "b", ")", "\n", "\n", "alpha_l", ",", "beta_l", ",", "gamma_l", ",", "alpha_u", ",", "beta_u", ",", "gamma_u", "=", "get_bounds_xy", "(", "\n", "a", ".", "l", ".", "reshape", "(", "-", "1", ")", ",", "\n", "a", ".", "u", ".", "reshape", "(", "-", "1", ")", ",", "\n", "b", ".", "l", ".", "reshape", "(", "-", "1", ")", ",", "\n", "b", ".", "u", ".", "reshape", "(", "-", "1", ")", "\n", ")", "\n", "alpha_l", "=", "alpha_l", ".", "reshape", "(", "a", ".", "l", ".", "shape", ")", "\n", "beta_l", "=", "beta_l", ".", "reshape", "(", "a", ".", "l", ".", "shape", ")", "\n", "gamma_l", "=", "gamma_l", ".", "reshape", "(", "a", ".", "l", ".", "shape", ")", "\n", "alpha_u", "=", "alpha_u", ".", "reshape", "(", "a", ".", "l", ".", "shape", ")", "\n", "beta_u", "=", "beta_u", ".", "reshape", "(", "a", ".", "l", ".", "shape", ")", "\n", "gamma_u", "=", "gamma_u", ".", "reshape", "(", "a", ".", "l", ".", "shape", ")", "\n", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"lower\"", ",", "k", "=", "alpha_l", ",", "x0", "=", "0", ",", "y0", "=", "gamma_l", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"lower\"", ",", "k", "=", "beta_l", ",", "x0", "=", "0", ",", "y0", "=", "0", ",", "second", "=", "True", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"upper\"", ",", "k", "=", "alpha_u", ",", "x0", "=", "0", ",", "y0", "=", "gamma_u", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"upper\"", ",", "k", "=", "beta_u", ",", "x0", "=", "0", ",", "y0", "=", "0", ",", "second", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeSqr.__init__": [[417, 426], ["Edge.EdgeActivation.__init__", "Edge.EdgeSqr.add_linear", "torch.max", "Edge.EdgeSqr.add_linear", "torch.min", "Edge.EdgeSqr.add_linear", "Edge.EdgeSqr.par.l.pow", "torch.min.pow", "torch.min.pow"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ")", ":", "\n", "        ", "super", "(", "EdgeSqr", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ",", "par", ")", "\n", "\n", "k", "=", "self", ".", "par", ".", "u", "+", "self", ".", "par", ".", "l", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"upper\"", ",", "k", "=", "k", ",", "x0", "=", "self", ".", "par", ".", "l", ",", "y0", "=", "self", ".", "par", ".", "l", ".", "pow", "(", "2", ")", ")", "\n", "m", "=", "torch", ".", "max", "(", "(", "self", ".", "par", ".", "l", "+", "self", ".", "par", ".", "u", ")", "/", "2", ",", "2", "*", "self", ".", "par", ".", "u", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_neg", ",", "type", "=", "\"lower\"", ",", "k", "=", "2", "*", "m", ",", "x0", "=", "m", ",", "y0", "=", "m", ".", "pow", "(", "2", ")", ")", "\n", "m", "=", "torch", ".", "min", "(", "(", "self", ".", "par", ".", "l", "+", "self", ".", "par", ".", "u", ")", "/", "2", ",", "2", "*", "self", ".", "par", ".", "l", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_pos", ",", "type", "=", "\"lower\"", ",", "k", "=", "2", "*", "m", ",", "x0", "=", "m", ",", "y0", "=", "m", ".", "pow", "(", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeSqrt.__init__": [[428, 437], ["Edge.EdgeActivation.__init__", "Edge.EdgeSqrt.add_linear", "Edge.EdgeSqrt.add_linear", "torch.min", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ")", ":", "\n", "        ", "super", "(", "EdgeSqrt", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ",", "par", ")", "\n", "\n", "assert", "(", "torch", ".", "min", "(", "self", ".", "par", ".", "l", ")", ">=", "0", ")", "\n", "k", "=", "(", "torch", ".", "sqrt", "(", "self", ".", "par", ".", "u", ")", "-", "torch", ".", "sqrt", "(", "self", ".", "par", ".", "l", ")", ")", "/", "(", "self", ".", "par", ".", "u", "-", "self", ".", "par", ".", "l", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"lower\"", ",", "k", "=", "k", ",", "x0", "=", "self", ".", "par", ".", "l", ",", "y0", "=", "torch", ".", "sqrt", "(", "self", ".", "par", ".", "l", ")", "+", "epsilon", ")", "\n", "m", "=", "(", "self", ".", "par", ".", "l", "+", "self", ".", "par", ".", "u", ")", "/", "2", "\n", "k", "=", "0.5", "/", "torch", ".", "sqrt", "(", "m", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"upper\"", ",", "k", "=", "k", ",", "x0", "=", "m", ",", "y0", "=", "torch", ".", "sqrt", "(", "m", ")", "+", "epsilon", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeReciprocal.__init__": [[439, 448], ["Edge.EdgeActivation.__init__", "torch.min", "Edge.EdgeReciprocal.add_linear", "Edge.EdgeReciprocal.add_linear", "m.pow"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ")", ":", "\n", "        ", "super", "(", "EdgeReciprocal", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ",", "par", ")", "\n", "\n", "assert", "(", "torch", ".", "min", "(", "self", ".", "par", ".", "l", ")", ")", "\n", "m", "=", "(", "self", ".", "par", ".", "l", "+", "self", ".", "par", ".", "u", ")", "/", "2", "\n", "kl", "=", "-", "1", "/", "m", ".", "pow", "(", "2", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"lower\"", ",", "k", "=", "kl", ",", "x0", "=", "m", ",", "y0", "=", "1.", "/", "m", ")", "\n", "ku", "=", "-", "1.", "/", "(", "self", ".", "par", ".", "l", "*", "self", ".", "par", ".", "u", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"upper\"", ",", "k", "=", "ku", ",", "x0", "=", "self", ".", "par", ".", "l", ",", "y0", "=", "1.", "/", "self", ".", "par", ".", "l", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeLinear.__init__": [[450, 455], ["Edge.EdgeActivation.__init__", "Edge.EdgeLinear.add_linear", "Edge.EdgeLinear.add_linear"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ",", "w", ",", "b", ")", ":", "\n", "        ", "super", "(", "EdgeLinear", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ",", "par", ")", "\n", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"lower\"", ",", "k", "=", "w", ",", "x0", "=", "0.", ",", "y0", "=", "b", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"upper\"", ",", "k", "=", "w", ",", "x0", "=", "0.", ",", "y0", "=", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeExp.__init__": [[457, 465], ["Edge.EdgeActivation.__init__", "torch.min", "torch.exp", "Edge.EdgeExp.add_linear", "Edge.EdgeExp.add_linear", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ")", ":", "\n", "        ", "super", "(", "EdgeExp", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ",", "par", ")", "\n", "\n", "m", "=", "torch", ".", "min", "(", "(", "self", ".", "par", ".", "l", "+", "self", ".", "par", ".", "u", ")", "/", "2", ",", "self", ".", "par", ".", "l", "+", "0.99", ")", "\n", "k", "=", "torch", ".", "exp", "(", "m", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"lower\"", ",", "k", "=", "k", ",", "x0", "=", "m", ",", "y0", "=", "torch", ".", "exp", "(", "m", ")", ")", "\n", "k", "=", "(", "torch", ".", "exp", "(", "self", ".", "par", ".", "u", ")", "-", "torch", ".", "exp", "(", "self", ".", "par", ".", "l", ")", ")", "/", "(", "self", ".", "par", ".", "u", "-", "self", ".", "par", ".", "l", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "None", ",", "type", "=", "\"upper\"", ",", "k", "=", "k", ",", "x0", "=", "self", ".", "par", ".", "l", ",", "y0", "=", "torch", ".", "exp", "(", "self", ".", "par", ".", "l", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeDivide.__init__": [[467, 471], ["Edge.EdgeComplex.__init__", "b.next", "a.next", "Edge.EdgeReciprocal", "Edge.EdgeMultiply"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "a", ",", "b", ")", ":", "\n", "        ", "super", "(", "EdgeDivide", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ")", "\n", "b_reciprocal", "=", "b", ".", "next", "(", "EdgeReciprocal", "(", "args", ",", "controller", ",", "b", ")", ")", "\n", "self", ".", "res", "=", "a", ".", "next", "(", "EdgeMultiply", "(", "args", ",", "controller", ",", "a", ",", "b_reciprocal", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeRelu.__init__": [[473, 486], ["Edge.EdgeActivation.__init__", "Edge.EdgeRelu.add_linear", "Edge.EdgeRelu.add_linear", "Edge.EdgeRelu.add_linear", "Edge.EdgeRelu.add_linear", "Edge.EdgeRelu.add_linear", "torch.gt().to", "Edge.EdgeRelu.add_linear", "torch.gt", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ")", ":", "\n", "        ", "super", "(", "EdgeRelu", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ",", "par", ")", "\n", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_neg", ",", "type", "=", "\"lower\"", ",", "k", "=", "0.", ",", "x0", "=", "0", ",", "y0", "=", "0", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_neg", ",", "type", "=", "\"upper\"", ",", "k", "=", "0.", ",", "x0", "=", "0", ",", "y0", "=", "0", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_pos", ",", "type", "=", "\"lower\"", ",", "k", "=", "1.", ",", "x0", "=", "0", ",", "y0", "=", "0", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_pos", ",", "type", "=", "\"upper\"", ",", "k", "=", "1.", ",", "x0", "=", "0", ",", "y0", "=", "0", ")", "\n", "\n", "k", "=", "self", ".", "par", ".", "u", "/", "(", "self", ".", "par", ".", "u", "-", "self", ".", "par", ".", "l", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_both", ",", "type", "=", "\"upper\"", ",", "k", "=", "k", ",", "x0", "=", "self", ".", "par", ".", "l", ",", "y0", "=", "0", ")", "\n", "\n", "k", "=", "torch", ".", "gt", "(", "torch", ".", "abs", "(", "self", ".", "par", ".", "u", ")", ",", "torch", ".", "abs", "(", "self", ".", "par", ".", "l", ")", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_both", ",", "type", "=", "\"lower\"", ",", "k", "=", "k", ",", "x0", "=", "0", ",", "y0", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTanh.__init__": [[488, 537], ["Edge.EdgeActivation.__init__", "Edge.EdgeTanh.__init__.dtanh"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "par", ")", ":", "\n", "        ", "super", "(", "EdgeTanh", ",", "self", ")", ".", "__init__", "(", "args", ",", "controller", ",", "par", ")", "\n", "\n", "def", "dtanh", "(", "x", ")", ":", "\n", "            ", "return", "1.", "/", "torch", ".", "cosh", "(", "x", ")", ".", "pow", "(", "2", ")", "\n", "\n", "# lower bound for negative", "\n", "", "m", "=", "(", "self", ".", "par", ".", "l", "+", "self", ".", "par", ".", "u", ")", "/", "2", "\n", "k", "=", "dtanh", "(", "m", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_neg", ",", "type", "=", "\"lower\"", ",", "k", "=", "k", ",", "x0", "=", "m", ",", "y0", "=", "torch", ".", "tanh", "(", "m", ")", ")", "\n", "# upper bound for positive", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_pos", ",", "type", "=", "\"upper\"", ",", "k", "=", "k", ",", "x0", "=", "m", ",", "y0", "=", "torch", ".", "tanh", "(", "m", ")", ")", "\n", "\n", "# upper bound for negative", "\n", "k", "=", "(", "torch", ".", "tanh", "(", "self", ".", "par", ".", "u", ")", "-", "torch", ".", "tanh", "(", "self", ".", "par", ".", "l", ")", ")", "/", "(", "self", ".", "par", ".", "u", "-", "self", ".", "par", ".", "l", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_neg", ",", "type", "=", "\"upper\"", ",", "k", "=", "k", ",", "x0", "=", "self", ".", "par", ".", "l", ",", "y0", "=", "torch", ".", "tanh", "(", "self", ".", "par", ".", "l", ")", ")", "\n", "# lower bound for positive", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_pos", ",", "type", "=", "\"lower\"", ",", "k", "=", "k", ",", "x0", "=", "self", ".", "par", ".", "l", ",", "y0", "=", "torch", ".", "tanh", "(", "self", ".", "par", ".", "l", ")", ")", "\n", "\n", "# bounds for both", "\n", "max_iter", "=", "10", "\n", "\n", "# lower bound for both", "\n", "diff", "=", "lambda", "d", ":", "(", "torch", ".", "tanh", "(", "self", ".", "par", ".", "u", ")", "-", "torch", ".", "tanh", "(", "d", ")", ")", "/", "(", "self", ".", "par", ".", "u", "-", "d", "+", "epsilon", ")", "-", "dtanh", "(", "d", ")", "\n", "d", "=", "self", ".", "par", ".", "l", "/", "2", "\n", "_l", "=", "self", ".", "par", ".", "l", "\n", "_u", "=", "torch", ".", "zeros", "(", "self", ".", "par", ".", "l", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "for", "t", "in", "range", "(", "max_iter", ")", ":", "\n", "            ", "v", "=", "diff", "(", "d", ")", "\n", "mask_p", "=", "torch", ".", "gt", "(", "v", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_l", "=", "d", "*", "mask_p", "+", "_l", "*", "(", "1", "-", "mask_p", ")", "\n", "_u", "=", "d", "*", "(", "1", "-", "mask_p", ")", "+", "_u", "*", "mask_p", "\n", "d", "=", "(", "d", "+", "_u", ")", "/", "2", "*", "mask_p", "+", "(", "d", "+", "_l", ")", "/", "2", "*", "(", "1", "-", "mask_p", ")", "\n", "", "k", "=", "(", "torch", ".", "tanh", "(", "d", ")", "-", "torch", ".", "tanh", "(", "self", ".", "par", ".", "u", ")", ")", "/", "(", "d", "-", "self", ".", "par", ".", "u", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_both", ",", "type", "=", "\"lower\"", ",", "k", "=", "k", ",", "x0", "=", "d", ",", "y0", "=", "torch", ".", "tanh", "(", "d", ")", ")", "\n", "\n", "# upper bound for both", "\n", "diff", "=", "lambda", "d", ":", "(", "torch", ".", "tanh", "(", "d", ")", "-", "torch", ".", "tanh", "(", "self", ".", "par", ".", "l", ")", ")", "/", "(", "d", "-", "self", ".", "par", ".", "l", "+", "epsilon", ")", "-", "dtanh", "(", "d", ")", "\n", "d", "=", "self", ".", "par", ".", "u", "/", "2", "\n", "_l", "=", "torch", ".", "zeros", "(", "self", ".", "par", ".", "l", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "_u", "=", "self", ".", "par", ".", "u", "\n", "for", "t", "in", "range", "(", "max_iter", ")", ":", "\n", "            ", "v", "=", "diff", "(", "d", ")", "\n", "mask_p", "=", "torch", ".", "gt", "(", "v", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_l", "=", "d", "*", "(", "1", "-", "mask_p", ")", "+", "_l", "*", "mask_p", "\n", "_u", "=", "d", "*", "mask_p", "+", "_u", "*", "(", "1", "-", "mask_p", ")", "\n", "d", "=", "(", "d", "+", "_u", ")", "/", "2", "*", "(", "1", "-", "mask_p", ")", "+", "(", "d", "+", "_l", ")", "/", "2", "*", "mask_p", "\n", "", "k", "=", "(", "torch", ".", "tanh", "(", "d", ")", "-", "torch", ".", "tanh", "(", "self", ".", "par", ".", "l", ")", ")", "/", "(", "d", "-", "self", ".", "par", ".", "l", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "mask", "=", "self", ".", "mask_both", ",", "type", "=", "\"upper\"", ",", "k", "=", "k", ",", "x0", "=", "d", ",", "y0", "=", "torch", ".", "tanh", "(", "d", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.get_bounds_xy": [[13, 23], ["None"], "function", ["None"], ["def", "get_bounds_xy", "(", "l_x", ",", "u_x", ",", "l_y", ",", "u_y", ")", ":", "\n", "    ", "alpha_l", "=", "l_y", "\n", "beta_l", "=", "l_x", "\n", "gamma_l", "=", "-", "alpha_l", "*", "beta_l", "\n", "\n", "alpha_u", "=", "u_y", "\n", "beta_u", "=", "l_x", "\n", "gamma_u", "=", "-", "alpha_u", "*", "beta_u", "\n", "\n", "return", "alpha_l", ",", "beta_l", ",", "gamma_l", ",", "alpha_u", ",", "beta_u", ",", "gamma_u", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Verifier.Verifier.__init__": [[11, 35], ["float", "hasattr"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "target", ",", "logger", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "device", "=", "args", ".", "device", "\n", "self", ".", "target", "=", "target", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "res", "=", "args", ".", "res", "\n", "self", ".", "p", "=", "args", ".", "p", "if", "args", ".", "p", "<", "10", "else", "float", "(", "\"inf\"", ")", "\n", "self", ".", "eps", "=", "args", ".", "eps", "\n", "self", ".", "debug", "=", "args", ".", "debug", "\n", "self", ".", "verbose", "=", "args", ".", "debug", "or", "args", ".", "verbose", "\n", "self", ".", "method", "=", "args", ".", "method", "\n", "self", ".", "num_verify_iters", "=", "args", ".", "num_verify_iters", "\n", "self", ".", "max_eps", "=", "args", ".", "max_eps", "\n", "self", ".", "debug_pos", "=", "args", ".", "debug_pos", "\n", "self", ".", "perturbed_words", "=", "args", ".", "perturbed_words", "\n", "self", ".", "warmed", "=", "False", "\n", "\n", "self", ".", "embeddings", "=", "target", ".", "model", ".", "bert", ".", "embeddings", "\n", "self", ".", "encoding_layers", "=", "target", ".", "model", ".", "bert", ".", "encoder", ".", "layer", "\n", "self", ".", "pooler", "=", "target", ".", "model", ".", "bert", ".", "pooler", "\n", "self", ".", "classifier", "=", "target", ".", "model", ".", "classifier", "\n", "self", ".", "hidden_act", "=", "args", ".", "hidden_act", "\n", "self", ".", "layer_norm", "=", "target", ".", "model", ".", "config", ".", "layer_norm", "if", "hasattr", "(", "target", ".", "model", ".", "config", ",", "\"layer_norm\"", ")", "else", "\"standard\"", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Verifier.Verifier.run": [[36, 61], ["data_utils.sample", "print", "enumerate", "Verifier.Verifier.logger.write", "Verifier.Verifier.logger.write", "Verifier.Verifier.logger.write", "Verifier.Verifier.logger.write", "Verifier.Verifier.verify", "results.append", "open", "file.write", "len", "len", "float", "len", "float", "len", "json.dumps", "float", "len", "float", "len"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.sample", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Verifier.Verifier.verify", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write"], ["", "def", "run", "(", "self", ",", "data", ")", ":", "\n", "        ", "examples", "=", "sample", "(", "self", ".", "args", ",", "data", ",", "self", ".", "target", ")", "\n", "print", "(", "\"{} valid examples\"", ".", "format", "(", "len", "(", "examples", ")", ")", ")", "\n", "sum_avg", ",", "sum_min", "=", "0", ",", "0", "\n", "results", "=", "[", "]", "\n", "for", "i", ",", "example", "in", "enumerate", "(", "examples", ")", ":", "\n", "            ", "self", ".", "logger", ".", "write", "(", "\"Sample\"", ",", "i", ")", "\n", "res", "=", "self", ".", "verify", "(", "example", ")", "\n", "if", "self", ".", "debug", ":", "\n", "                ", "continue", "\n", "", "results", ".", "append", "(", "res", "[", "0", "]", ")", "\n", "sum_avg", "+=", "res", "[", "1", "]", "\n", "sum_min", "+=", "res", "[", "2", "]", "\n", "\n", "", "self", ".", "logger", ".", "write", "(", "\"{} valid examples\"", ".", "format", "(", "len", "(", "examples", ")", ")", ")", "\n", "self", ".", "logger", ".", "write", "(", "\"Minimum: {:.5f}\"", ".", "format", "(", "float", "(", "sum_min", ")", "/", "len", "(", "examples", ")", ")", ")", "\n", "self", ".", "logger", ".", "write", "(", "\"Average: {:.5f}\"", ".", "format", "(", "float", "(", "sum_avg", ")", "/", "len", "(", "examples", ")", ")", ")", "\n", "\n", "result", "=", "{", "\n", "\"examples\"", ":", "results", ",", "\n", "\"minimum\"", ":", "float", "(", "sum_min", ")", "/", "len", "(", "examples", ")", ",", "\n", "\"average\"", ":", "float", "(", "sum_avg", ")", "/", "len", "(", "examples", ")", "\n", "}", "\n", "with", "open", "(", "self", ".", "res", ",", "\"w\"", ")", "as", "file", ":", "\n", "            ", "file", ".", "write", "(", "json", ".", "dumps", "(", "result", ",", "indent", "=", "4", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Verifier.Verifier.verify": [[62, 209], ["time.time", "Verifier.Verifier.target.get_embeddings", "Verifier.Verifier.logger.write", "Verifier.Verifier.logger.write", "Verifier.Verifier.logger.write", "Verifier.Verifier.target.step", "float", "Verifier.Verifier.verify_safety", "Verifier.Verifier.logger.write", "torch.zeros", "Verifier.Verifier.logger.write", "range", "time.time", "time.time", "print", "Verifier.Verifier.verify_safety", "print", "print", "Verifier.Verifier.verify_safety", "range", "print", "Verifier.Verifier.logger.write", "min", "torch.norm", "result[].append", "range", "Verifier.Verifier.verify_safety", "print", "Verifier.Verifier.verify_safety", "print", "Verifier.Verifier.verify_safety", "print", "print", "Verifier.Verifier.verify_safety", "print", "range", "print", "Verifier.Verifier.verify_safety", "float", "float", "Verifier.Verifier.verify_safety", "print", "Verifier.Verifier.verify_safety", "range", "print", "Verifier.Verifier.logger.write", "min", "result[].append", "print", "Verifier.Verifier.verify_safety", "print", "Verifier.Verifier.verify_safety", "print", "print", "Verifier.Verifier.verify_safety", "float"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.get_embeddings", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.step", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety"], ["", "", "def", "verify", "(", "self", ",", "example", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "embeddings", ",", "tokens", "=", "self", ".", "target", ".", "get_embeddings", "(", "[", "example", "]", ")", "\n", "length", "=", "embeddings", ".", "shape", "[", "1", "]", "\n", "tokens", "=", "tokens", "[", "0", "]", "\n", "\n", "self", ".", "logger", ".", "write", "(", "\"tokens:\"", ",", "\" \"", ".", "join", "(", "tokens", ")", ")", "\n", "self", ".", "logger", ".", "write", "(", "\"length:\"", ",", "length", ")", "\n", "self", ".", "logger", ".", "write", "(", "\"label:\"", ",", "example", "[", "\"label\"", "]", ")", "\n", "\n", "self", ".", "std", "=", "self", ".", "target", ".", "step", "(", "[", "example", "]", ")", "[", "-", "1", "]", "\n", "\n", "result", "=", "{", "\n", "\"tokens\"", ":", "tokens", ",", "\n", "\"label\"", ":", "float", "(", "example", "[", "\"label\"", "]", ")", ",", "\n", "\"bounds\"", ":", "[", "]", "\n", "}", "\n", "\n", "if", "self", ".", "debug", ":", "\n", "            ", "eps", "=", "self", ".", "eps", "\n", "index", "=", "self", ".", "debug_pos", "\n", "safety", "=", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "index", ",", "self", ".", "eps", ")", "\n", "self", ".", "logger", ".", "write", "(", "\"Time elapsed\"", ",", "time", ".", "time", "(", ")", "-", "start_time", ")", "\n", "return", "eps", "\n", "", "else", ":", "\n", "            ", "eps", "=", "torch", ".", "zeros", "(", "length", ")", "\n", "num_iters", "=", "self", ".", "num_verify_iters", "\n", "\n", "cnt", "=", "0", "\n", "sum_eps", ",", "min_eps", "=", "0", ",", "1e30", "\n", "\n", "# TODO: redundant", "\n", "if", "self", ".", "perturbed_words", "==", "1", ":", "\n", "# warm up ", "\n", "                ", "if", "not", "self", ".", "warmed", ":", "\n", "                    ", "print", "(", "\"Warming up...\"", ")", "\n", "while", "not", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "1", ",", "self", ".", "max_eps", ")", ":", "\n", "                        ", "self", ".", "max_eps", "/=", "2", "\n", "", "while", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "1", ",", "self", ".", "max_eps", ")", ":", "\n", "                        ", "self", ".", "max_eps", "*=", "2", "\n", "", "self", ".", "warmed", "=", "True", "\n", "print", "(", "\"Approximate maximum eps:\"", ",", "self", ".", "max_eps", ")", "\n", "\n", "# [CLS] and [SEP] cannot be perturbed", "\n", "", "for", "i", "in", "range", "(", "1", ",", "length", "-", "1", ")", ":", "\n", "# skip OOV", "\n", "                    ", "if", "tokens", "[", "i", "]", "[", "0", "]", "==", "\"#\"", "or", "tokens", "[", "i", "+", "1", "]", "[", "0", "]", "==", "\"#\"", ":", "\n", "                        ", "continue", "\n", "\n", "", "cnt", "+=", "1", "\n", "\n", "l", ",", "r", "=", "0", ",", "self", ".", "max_eps", "\n", "print", "(", "\"{} {:.5f} {:.5f}\"", ".", "format", "(", "i", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "safe", "=", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "i", ",", "r", ")", "\n", "while", "safe", ":", "\n", "                        ", "l", "=", "r", "\n", "r", "*=", "2", "\n", "print", "(", "\"\\r{} {:.5f} {:.5f}\"", ".", "format", "(", "i", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "safe", "=", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "i", ",", "r", ")", "\n", "", "if", "l", "==", "0", ":", "\n", "                        ", "while", "not", "safe", ":", "\n", "                            ", "r", "/=", "2", "\n", "print", "(", "\"\\r{} {:.5f} {:.5f}\"", ".", "format", "(", "i", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "safe", "=", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "i", ",", "r", ")", "\n", "", "l", ",", "r", "=", "r", ",", "r", "*", "2", "\n", "print", "(", "\"\\r{} {:.5f} {:.5f}\"", ".", "format", "(", "i", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "", "for", "j", "in", "range", "(", "num_iters", ")", ":", "\n", "                        ", "m", "=", "(", "l", "+", "r", ")", "/", "2", "\n", "if", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "i", ",", "m", ")", ":", "\n", "                            ", "l", "=", "m", "\n", "", "else", ":", "\n", "                            ", "r", "=", "m", "\n", "", "print", "(", "\"\\r{} {:.5f} {:.5f}\"", ".", "format", "(", "i", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", ")", "\n", "eps", "[", "i", "]", "=", "l", "\n", "self", ".", "logger", ".", "write", "(", "\"Position {}: {} {:.5f}\"", ".", "format", "(", "\n", "i", ",", "tokens", "[", "i", "]", ",", "eps", "[", "i", "]", ",", ")", ")", "\n", "sum_eps", "+=", "eps", "[", "i", "]", "\n", "min_eps", "=", "min", "(", "min_eps", ",", "eps", "[", "i", "]", ")", "\n", "norm", "=", "torch", ".", "norm", "(", "embeddings", "[", "0", ",", "i", ",", ":", "]", ",", "p", "=", "self", ".", "p", ")", "\n", "result", "[", "\"bounds\"", "]", ".", "append", "(", "{", "\n", "\"position\"", ":", "i", ",", "\n", "\"eps\"", ":", "float", "(", "eps", "[", "i", "]", ")", ",", "\n", "\"eps_normalized\"", ":", "float", "(", "eps", "[", "i", "]", "/", "norm", ")", "\n", "}", ")", "\n", "\n", "", "", "elif", "self", ".", "perturbed_words", "==", "2", ":", "\n", "# warm up ", "\n", "                ", "if", "not", "self", ".", "warmed", ":", "\n", "                    ", "print", "(", "\"Warming up...\"", ")", "\n", "while", "not", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "[", "1", ",", "2", "]", ",", "self", ".", "max_eps", ")", ":", "\n", "                        ", "self", ".", "max_eps", "/=", "2", "\n", "", "while", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "[", "1", ",", "2", "]", ",", "self", ".", "max_eps", ")", ":", "\n", "                        ", "self", ".", "max_eps", "*=", "2", "\n", "", "self", ".", "warmed", "=", "True", "\n", "print", "(", "\"Approximate maximum eps:\"", ",", "self", ".", "max_eps", ")", "\n", "\n", "", "for", "i1", "in", "range", "(", "1", ",", "length", "-", "1", ")", ":", "\n", "                    ", "for", "i2", "in", "range", "(", "i1", "+", "1", ",", "length", "-", "1", ")", ":", "\n", "# skip OOV", "\n", "                        ", "if", "tokens", "[", "i1", "]", "[", "0", "]", "==", "\"#\"", "or", "tokens", "[", "i1", "+", "1", "]", "[", "0", "]", "==", "\"#\"", ":", "\n", "                            ", "continue", "\n", "", "if", "tokens", "[", "i2", "]", "[", "0", "]", "==", "\"#\"", "or", "tokens", "[", "i2", "+", "1", "]", "[", "0", "]", "==", "\"#\"", ":", "\n", "                            ", "continue", "\n", "\n", "", "cnt", "+=", "1", "\n", "\n", "l", ",", "r", "=", "0", ",", "self", ".", "max_eps", "\n", "print", "(", "\"%d %d %.6f %.6f\"", "%", "(", "i1", ",", "i2", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "safe", "=", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "[", "i1", ",", "i2", "]", ",", "r", ")", "\n", "while", "safe", ":", "\n", "                            ", "l", "=", "r", "\n", "r", "*=", "2", "\n", "print", "(", "\"\\r%d %d %.6f %.6f\"", "%", "(", "i1", ",", "i2", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "safe", "=", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "[", "i1", ",", "i2", "]", ",", "r", ")", "\n", "", "if", "l", "==", "0", ":", "\n", "                            ", "while", "not", "safe", ":", "\n", "                                ", "r", "/=", "2", "\n", "print", "(", "\"\\r%d %d %.6f %.6f\"", "%", "(", "i1", ",", "i2", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "safe", "=", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "[", "i1", ",", "i2", "]", ",", "r", ")", "\n", "", "l", ",", "r", "=", "r", ",", "r", "*", "2", "\n", "print", "(", "\"\\r%d %d %.6f %.6f\"", "%", "(", "i1", ",", "i2", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "", "for", "j", "in", "range", "(", "num_iters", ")", ":", "\n", "                            ", "m", "=", "(", "l", "+", "r", ")", "/", "2", "\n", "if", "self", ".", "verify_safety", "(", "example", ",", "embeddings", ",", "[", "i1", ",", "i2", "]", ",", "m", ")", ":", "\n", "                                ", "l", "=", "m", "\n", "", "else", ":", "\n", "                                ", "r", "=", "m", "\n", "", "print", "(", "\"\\r%d %d %.6f %.6f\"", "%", "(", "i1", ",", "i2", ",", "l", ",", "r", ")", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", ")", "\n", "eps", "=", "l", "\n", "self", ".", "logger", ".", "write", "(", "\"Position %d %d: %s %s %.5f\"", "%", "(", "\n", "i1", ",", "i2", ",", "tokens", "[", "i1", "]", ",", "tokens", "[", "i2", "]", ",", "eps", ")", ")", "\n", "sum_eps", "+=", "eps", "\n", "min_eps", "=", "min", "(", "min_eps", ",", "eps", ")", "\n", "result", "[", "\"bounds\"", "]", ".", "append", "(", "{", "\n", "\"position\"", ":", "(", "i1", ",", "i2", ")", ",", "\n", "\"eps\"", ":", "float", "(", "eps", ")", "\n", "}", ")", "\n", "", "", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n", "", "result", "[", "\"time\"", "]", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "\n", "self", ".", "logger", ".", "write", "(", "\"Time elapsed\"", ",", "result", "[", "\"time\"", "]", ")", "\n", "return", "result", ",", "sum_eps", "/", "cnt", ",", "min_eps", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Verifier.Verifier.verify_safety": [[210, 212], ["None"], "methods", ["None"], ["", "", "def", "verify_safety", "(", "self", ",", "example", ",", "embeddings", ",", "index", ",", "eps", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.__init__": [[12, 29], ["Bounds.Bounds.update_shape", "float", "w.clone", "w.clone", "b.clone", "b.clone"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.update_shape", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "p", ",", "eps", ",", "w", "=", "None", ",", "b", "=", "None", ",", "lw", "=", "None", ",", "lb", "=", "None", ",", "uw", "=", "None", ",", "ub", "=", "None", ",", "clone", "=", "True", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "ibp", "=", "args", ".", "method", "==", "\"ibp\"", "\n", "self", ".", "device", "=", "lw", ".", "device", "if", "lw", "is", "not", "None", "else", "w", ".", "device", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "q", "=", "1.", "/", "(", "1.", "-", "1.", "/", "p", ")", "if", "p", "!=", "1", "else", "float", "(", "\"inf\"", ")", "# dual norm", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "perturbed_words", "=", "args", ".", "perturbed_words", "\n", "self", ".", "lw", "=", "lw", "if", "lw", "is", "not", "None", "else", "(", "w", ".", "clone", "(", ")", "if", "clone", "else", "w", ")", "\n", "self", ".", "uw", "=", "uw", "if", "uw", "is", "not", "None", "else", "(", "w", ".", "clone", "(", ")", "if", "clone", "else", "w", ")", "\n", "self", ".", "lb", "=", "lb", "if", "lb", "is", "not", "None", "else", "(", "b", ".", "clone", "(", ")", "if", "clone", "else", "b", ")", "\n", "self", ".", "ub", "=", "ub", "if", "ub", "is", "not", "None", "else", "(", "b", ".", "clone", "(", ")", "if", "clone", "else", "b", ")", "\n", "if", "self", ".", "ibp", ":", "\n", "            ", "self", ".", "lw", ",", "self", ".", "uw", "=", "self", ".", "lw", "[", ":", ",", ":", ",", ":", "self", ".", "perturbed_words", ",", ":", "]", ",", "self", ".", "uw", "[", ":", ",", ":", ",", ":", "self", ".", "perturbed_words", ",", ":", "]", "\n", "", "self", ".", "update_shape", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.update_shape": [[30, 35], ["None"], "methods", ["None"], ["", "def", "update_shape", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "self", ".", "lw", ".", "shape", "[", "0", "]", "\n", "self", ".", "length", "=", "self", ".", "lw", ".", "shape", "[", "1", "]", "\n", "self", ".", "dim_in", "=", "self", ".", "lw", ".", "shape", "[", "2", "]", "\n", "self", ".", "dim_out", "=", "self", ".", "lw", ".", "shape", "[", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.print": [[36, 47], ["Bounds.Bounds.print"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "def", "print", "(", "self", ",", "message", ")", ":", "\n", "        ", "print", "(", "message", ")", "\n", "l", ",", "u", "=", "self", ".", "concretize", "(", ")", "\n", "print", "(", "\"mean abs %.5f %.5f\"", "%", "(", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "l", ")", ")", ",", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "u", ")", ")", ")", ")", "\n", "print", "(", "\"diff %.5f %.5f %.5f\"", "%", "(", "torch", ".", "min", "(", "u", "-", "l", ")", ",", "torch", ".", "max", "(", "u", "-", "l", ")", ",", "torch", ".", "mean", "(", "u", "-", "l", ")", ")", ")", "\n", "print", "(", "\"lw norm\"", ",", "torch", ".", "mean", "(", "torch", ".", "norm", "(", "self", ".", "lw", ",", "dim", "=", "-", "2", ")", ")", ")", "\n", "print", "(", "\"uw norm\"", ",", "torch", ".", "mean", "(", "torch", ".", "norm", "(", "self", ".", "uw", ",", "dim", "=", "-", "2", ")", ")", ")", "\n", "print", "(", "\"uw - lw norm\"", ",", "torch", ".", "mean", "(", "torch", ".", "norm", "(", "self", ".", "uw", "-", "self", ".", "lw", ",", "dim", "=", "-", "2", ")", ")", ")", "\n", "print", "(", "\"min\"", ",", "torch", ".", "min", "(", "l", ")", ")", "\n", "print", "(", "\"max\"", ",", "torch", ".", "max", "(", "u", ")", ")", "\n", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.concretize_l": [[48, 51], ["torch.norm", "torch.norm", "torch.norm", "torch.norm"], "methods", ["None"], ["", "def", "concretize_l", "(", "self", ",", "lw", "=", "None", ")", ":", "\n", "        ", "if", "lw", "is", "None", ":", "lw", "=", "self", ".", "lw", "\n", "return", "-", "self", ".", "eps", "*", "torch", ".", "norm", "(", "lw", ",", "p", "=", "self", ".", "q", ",", "dim", "=", "-", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.concretize_u": [[52, 55], ["torch.norm", "torch.norm", "torch.norm", "torch.norm"], "methods", ["None"], ["", "def", "concretize_u", "(", "self", ",", "uw", "=", "None", ")", ":", "\n", "        ", "if", "uw", "is", "None", ":", "uw", "=", "self", ".", "uw", "\n", "return", "self", ".", "eps", "*", "torch", ".", "norm", "(", "uw", ",", "p", "=", "self", ".", "q", ",", "dim", "=", "-", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.concretize": [[56, 64], ["Bounds.Bounds.lb.clone", "Bounds.Bounds.ub.clone", "range", "Bounds.Bounds.concretize_l", "Bounds.Bounds.concretize_u"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_l", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_u"], ["", "def", "concretize", "(", "self", ")", ":", "\n", "        ", "dim", "=", "self", ".", "lw", ".", "shape", "[", "-", "2", "]", "//", "self", ".", "perturbed_words", "\n", "res_l", "=", "self", ".", "lb", ".", "clone", "(", ")", "\n", "res_u", "=", "self", ".", "ub", ".", "clone", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "perturbed_words", ")", ":", "\n", "            ", "res_l", "+=", "self", ".", "concretize_l", "(", "self", ".", "lw", "[", ":", ",", ":", ",", "(", "dim", "*", "i", ")", ":", "(", "dim", "*", "(", "i", "+", "1", ")", ")", ",", ":", "]", ")", "\n", "res_u", "+=", "self", ".", "concretize_u", "(", "self", ".", "uw", "[", ":", ",", ":", ",", "(", "dim", "*", "i", ")", ":", "(", "dim", "*", "(", "i", "+", "1", ")", ")", ",", ":", "]", ")", "\n", "", "return", "res_l", ",", "res_u", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone": [[65, 70], ["Bounds.Bounds", "Bounds.Bounds.lw.clone", "Bounds.Bounds.lb.clone", "Bounds.Bounds.uw.clone", "Bounds.Bounds.ub.clone"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone"], ["", "def", "clone", "(", "self", ")", ":", "\n", "        ", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "self", ".", "lw", ".", "clone", "(", ")", ",", "lb", "=", "self", ".", "lb", ".", "clone", "(", ")", ",", "\n", "uw", "=", "self", ".", "uw", ".", "clone", "(", ")", ",", "ub", "=", "self", ".", "ub", ".", "clone", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.t": [[72, 79], ["Bounds.Bounds", "Bounds.Bounds.lw.transpose", "Bounds.Bounds.uw.transpose", "Bounds.Bounds.lb.transpose", "Bounds.Bounds.ub.transpose"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose"], ["", "def", "t", "(", "self", ")", ":", "\n", "        ", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "self", ".", "lw", ".", "transpose", "(", "1", ",", "3", ")", ",", "\n", "uw", "=", "self", ".", "uw", ".", "transpose", "(", "1", ",", "3", ")", ",", "\n", "lb", "=", "self", ".", "lb", ".", "transpose", "(", "1", ",", "2", ")", ",", "\n", "ub", "=", "self", ".", "ub", ".", "transpose", "(", "1", ",", "2", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.new": [[81, 94], ["Bounds.Bounds.concretize", "torch.gt().to", "torch.gt().to", "torch.gt().to", "torch.gt().to", "torch.lt().to", "torch.lt().to", "torch.lt().to", "torch.lt().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.gt", "torch.gt", "torch.gt", "torch.gt", "torch.lt", "torch.lt", "torch.lt", "torch.lt", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize"], ["", "def", "new", "(", "self", ")", ":", "\n", "        ", "l", ",", "u", "=", "self", ".", "concretize", "(", ")", "\n", "\n", "mask_pos", "=", "torch", ".", "gt", "(", "l", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "mask_neg", "=", "torch", ".", "lt", "(", "u", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "mask_both", "=", "1", "-", "mask_pos", "-", "mask_neg", "\n", "\n", "lw", "=", "torch", ".", "zeros", "(", "self", ".", "lw", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "lb", "=", "torch", ".", "zeros", "(", "self", ".", "lb", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "uw", "=", "torch", ".", "zeros", "(", "self", ".", "uw", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "ub", "=", "torch", ".", "zeros", "(", "self", ".", "ub", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "return", "l", ",", "u", ",", "mask_pos", ",", "mask_neg", ",", "mask_both", ",", "lw", ",", "lb", ",", "uw", ",", "ub", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear": [[95, 115], ["torch.gt().to", "torch.gt().to", "torch.gt().to", "torch.gt().to", "mask.unsqueeze", "k.unsqueeze", "k.unsqueeze", "torch.gt", "torch.gt", "torch.gt", "torch.gt", "torch.gt().to.unsqueeze", "torch.gt().to.unsqueeze", "mask_neg.unsqueeze"], "methods", ["None"], ["", "def", "add_linear", "(", "self", ",", "mask", ",", "w_out", ",", "b_out", ",", "type", ",", "k", ",", "x0", ",", "y0", ",", "src", "=", "None", ")", ":", "\n", "        ", "if", "mask", "is", "None", ":", "\n", "            ", "mask_w", "=", "mask_b", "=", "1", "\n", "", "else", ":", "\n", "            ", "mask_w", "=", "mask", ".", "unsqueeze", "(", "2", ")", "\n", "mask_b", "=", "mask", "\n", "", "if", "src", "is", "None", ":", "\n", "            ", "src", "=", "self", "\n", "", "if", "type", "==", "\"lower\"", ":", "\n", "            ", "w_pos", ",", "b_pos", "=", "src", ".", "lw", ",", "src", ".", "lb", "\n", "w_neg", ",", "b_neg", "=", "src", ".", "uw", ",", "src", ".", "ub", "\n", "", "else", ":", "\n", "            ", "w_pos", ",", "b_pos", "=", "src", ".", "uw", ",", "src", ".", "ub", "\n", "w_neg", ",", "b_neg", "=", "src", ".", "lw", ",", "src", ".", "lb", "\n", "", "mask_pos", "=", "torch", ".", "gt", "(", "k", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "w_out", "+=", "mask_w", "*", "mask_pos", ".", "unsqueeze", "(", "2", ")", "*", "w_pos", "*", "k", ".", "unsqueeze", "(", "2", ")", "\n", "b_out", "+=", "mask_b", "*", "mask_pos", "*", "(", "(", "b_pos", "-", "x0", ")", "*", "k", "+", "y0", ")", "\n", "mask_neg", "=", "1", "-", "mask_pos", "\n", "w_out", "+=", "mask_w", "*", "mask_neg", ".", "unsqueeze", "(", "2", ")", "*", "w_neg", "*", "k", ".", "unsqueeze", "(", "2", ")", "\n", "b_out", "+=", "mask_b", "*", "mask_neg", "*", "(", "(", "b_neg", "-", "x0", ")", "*", "k", "+", "y0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add": [[116, 128], ["type", "Bounds.Bounds", "Bounds.Bounds"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "delta", ")", ":", "\n", "        ", "if", "type", "(", "delta", ")", "==", "Bounds", ":", "\n", "            ", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "self", ".", "lw", "+", "delta", ".", "lw", ",", "lb", "=", "self", ".", "lb", "+", "delta", ".", "lb", ",", "\n", "uw", "=", "self", ".", "uw", "+", "delta", ".", "uw", ",", "ub", "=", "self", ".", "ub", "+", "delta", ".", "ub", "\n", ")", "\n", "", "else", ":", "\n", "            ", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "self", ".", "lw", ",", "lb", "=", "self", ".", "lb", "+", "delta", ",", "\n", "uw", "=", "self", ".", "uw", ",", "ub", "=", "self", ".", "ub", "+", "delta", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul": [[130, 160], ["type", "len", "W.transpose.transpose.t", "torch.gt().to", "torch.gt().to", "torch.gt().to", "torch.gt().to", "Bounds.Bounds", "W.transpose.transpose.transpose", "torch.gt().to", "torch.gt().to", "torch.gt().to", "torch.gt().to", "Bounds.Bounds", "torch.gt", "torch.gt", "torch.gt", "torch.gt", "torch.gt", "torch.gt", "torch.gt", "torch.gt", "Bounds.Bounds.lw.matmul", "Bounds.Bounds.uw.matmul", "Bounds.Bounds.lb.matmul", "Bounds.Bounds.ub.matmul", "Bounds.Bounds.lw.matmul", "Bounds.Bounds.uw.matmul", "Bounds.Bounds.lb.matmul", "Bounds.Bounds.ub.matmul", "Bounds.Bounds.lw.squeeze().bmm", "Bounds.Bounds.uw.squeeze().bmm", "Bounds.Bounds.lb.transpose().bmm", "Bounds.Bounds.ub.transpose().bmm", "Bounds.Bounds.lw.squeeze().bmm", "Bounds.Bounds.uw.squeeze().bmm", "Bounds.Bounds.lb.transpose().bmm", "Bounds.Bounds.ub.transpose().bmm", "Bounds.Bounds.lw.squeeze", "Bounds.Bounds.uw.squeeze", "Bounds.Bounds.lb.transpose", "Bounds.Bounds.ub.transpose", "Bounds.Bounds.lw.squeeze", "Bounds.Bounds.uw.squeeze", "Bounds.Bounds.lb.transpose", "Bounds.Bounds.ub.transpose"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.t", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose"], ["", "", "def", "matmul", "(", "self", ",", "W", ")", ":", "\n", "        ", "if", "type", "(", "W", ")", "==", "Bounds", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "elif", "len", "(", "W", ".", "shape", ")", "==", "2", ":", "\n", "            ", "W", "=", "W", ".", "t", "(", ")", "\n", "\n", "pos_mask", "=", "torch", ".", "gt", "(", "W", ",", "0", ")", ".", "to", "(", "torch", ".", "float32", ")", "\n", "W_pos", "=", "W", "*", "pos_mask", "\n", "W_neg", "=", "W", "-", "W_pos", "\n", "\n", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "self", ".", "lw", ".", "matmul", "(", "W_pos", ")", "+", "self", ".", "uw", ".", "matmul", "(", "W_neg", ")", ",", "\n", "lb", "=", "self", ".", "lb", ".", "matmul", "(", "W_pos", ")", "+", "self", ".", "ub", ".", "matmul", "(", "W_neg", ")", ",", "\n", "uw", "=", "self", ".", "lw", ".", "matmul", "(", "W_neg", ")", "+", "self", ".", "uw", ".", "matmul", "(", "W_pos", ")", ",", "\n", "ub", "=", "self", ".", "lb", ".", "matmul", "(", "W_neg", ")", "+", "self", ".", "ub", ".", "matmul", "(", "W_pos", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "W", "=", "W", ".", "transpose", "(", "1", ",", "2", ")", "\n", "\n", "pos_mask", "=", "torch", ".", "gt", "(", "W", ",", "0", ")", ".", "to", "(", "torch", ".", "float32", ")", "\n", "W_pos", "=", "W", "*", "pos_mask", "\n", "W_neg", "=", "W", "-", "W_pos", "\n", "\n", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "(", "self", ".", "lw", ".", "squeeze", "(", "0", ")", ".", "bmm", "(", "W_pos", ")", "+", "self", ".", "uw", ".", "squeeze", "(", "0", ")", ".", "bmm", "(", "W_neg", ")", ")", ".", "unsqueeze", "(", "0", ")", ",", "\n", "lb", "=", "(", "self", ".", "lb", ".", "transpose", "(", "0", ",", "1", ")", ".", "bmm", "(", "W_pos", ")", "+", "self", ".", "ub", ".", "transpose", "(", "0", ",", "1", ")", ".", "bmm", "(", "W_neg", ")", ")", ".", "transpose", "(", "0", ",", "1", ")", ",", "\n", "uw", "=", "(", "self", ".", "lw", ".", "squeeze", "(", "0", ")", ".", "bmm", "(", "W_neg", ")", "+", "self", ".", "uw", ".", "squeeze", "(", "0", ")", ".", "bmm", "(", "W_pos", ")", ")", ".", "unsqueeze", "(", "0", ")", ",", "\n", "ub", "=", "(", "self", ".", "lb", ".", "transpose", "(", "0", ",", "1", ")", ".", "bmm", "(", "W_neg", ")", "+", "self", ".", "ub", ".", "transpose", "(", "0", ",", "1", ")", ".", "bmm", "(", "W_pos", ")", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.multiply": [[162, 232], ["type", "Bounds.Bounds", "Bounds.Bounds", "type", "Bounds.Bounds.concretize", "W.concretize", "Bounds.Bounds.new", "Bounds.Bounds.get_bounds_xy", "alpha_l.reshape.reshape.reshape", "beta_l.reshape.reshape.reshape", "gamma_l.reshape.reshape.reshape", "alpha_u.reshape.reshape.reshape", "beta_u.reshape.reshape.reshape", "gamma_u.reshape.reshape.reshape", "Bounds.Bounds.add_linear", "Bounds.Bounds.add_linear", "Bounds.Bounds.add_linear", "Bounds.Bounds.add_linear", "Bounds.Bounds", "torch.gt().to", "torch.gt().to", "torch.gt().to", "torch.gt().to", "Bounds.Bounds", "l_a.reshape", "u_a.reshape", "l_b.reshape", "u_b.reshape", "torch.gt", "torch.gt", "torch.gt", "torch.gt"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.new", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.get_bounds_xy", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear"], ["", "", "def", "multiply", "(", "self", ",", "W", ")", ":", "\n", "        ", "if", "type", "(", "W", ")", "==", "float", ":", "\n", "            ", "if", "W", ">", "0", ":", "\n", "                ", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "self", ".", "lw", "*", "W", ",", "lb", "=", "self", ".", "lb", "*", "W", ",", "\n", "uw", "=", "self", ".", "uw", "*", "W", ",", "ub", "=", "self", ".", "ub", "*", "W", "\n", ")", "\n", "", "else", ":", "\n", "                ", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "self", ".", "uw", "*", "W", ",", "lb", "=", "self", ".", "ub", "*", "W", ",", "\n", "uw", "=", "self", ".", "lw", "*", "W", ",", "ub", "=", "self", ".", "lb", "*", "W", "\n", ")", "\n", "", "", "elif", "type", "(", "W", ")", "==", "Bounds", ":", "\n", "            ", "assert", "(", "self", ".", "lw", ".", "shape", "==", "W", ".", "lw", ".", "shape", ")", "\n", "\n", "l_a", ",", "u_a", "=", "self", ".", "concretize", "(", ")", "\n", "l_b", ",", "u_b", "=", "W", ".", "concretize", "(", ")", "\n", "\n", "l1", ",", "u1", ",", "mask_pos_only", ",", "mask_neg_only", ",", "mask_both", ",", "lw", ",", "lb", ",", "uw", ",", "ub", "=", "self", ".", "new", "(", ")", "\n", "\n", "alpha_l", ",", "beta_l", ",", "gamma_l", ",", "alpha_u", ",", "beta_u", ",", "gamma_u", "=", "self", ".", "get_bounds_xy", "(", "\n", "l_a", ".", "reshape", "(", "-", "1", ")", ",", "\n", "u_a", ".", "reshape", "(", "-", "1", ")", ",", "\n", "l_b", ".", "reshape", "(", "-", "1", ")", ",", "\n", "u_b", ".", "reshape", "(", "-", "1", ")", "\n", ")", "\n", "\n", "alpha_l", "=", "alpha_l", ".", "reshape", "(", "l_a", ".", "shape", ")", "\n", "beta_l", "=", "beta_l", ".", "reshape", "(", "l_a", ".", "shape", ")", "\n", "gamma_l", "=", "gamma_l", ".", "reshape", "(", "l_a", ".", "shape", ")", "\n", "alpha_u", "=", "alpha_u", ".", "reshape", "(", "l_a", ".", "shape", ")", "\n", "beta_u", "=", "beta_u", ".", "reshape", "(", "l_a", ".", "shape", ")", "\n", "gamma_u", "=", "gamma_u", ".", "reshape", "(", "l_a", ".", "shape", ")", "\n", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "None", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "alpha_l", ",", "x0", "=", "0", ",", "y0", "=", "gamma_l", "\n", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "None", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "beta_l", ",", "x0", "=", "0", ",", "y0", "=", "0", ",", "src", "=", "W", "\n", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "None", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "alpha_u", ",", "x0", "=", "0", ",", "y0", "=", "gamma_u", "\n", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "None", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "beta_u", ",", "x0", "=", "0", ",", "y0", "=", "0", ",", "src", "=", "W", "\n", ")", "\n", "\n", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "lw", ",", "lb", "=", "lb", ",", "uw", "=", "uw", ",", "ub", "=", "ub", "\n", ")", "\n", "\n", "", "else", ":", "\n", "            ", "pos_mask", "=", "torch", ".", "gt", "(", "W", ",", "0", ")", ".", "to", "(", "torch", ".", "float32", ")", "\n", "W_pos", "=", "W", "*", "pos_mask", "\n", "W_neg", "=", "W", "-", "W_pos", "\n", "\n", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "self", ".", "lw", "*", "W_pos", "+", "self", ".", "uw", "*", "W_neg", ",", "\n", "lb", "=", "self", ".", "lb", "*", "W_pos", "+", "self", ".", "ub", "*", "W_neg", ",", "\n", "uw", "=", "self", ".", "lw", "*", "W_neg", "+", "self", ".", "uw", "*", "W_pos", ",", "\n", "ub", "=", "self", ".", "lb", "*", "W_neg", "+", "self", ".", "ub", "*", "W_pos", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.get_bounds_xy": [[234, 257], ["torch.min", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.max", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.zeros().cuda", "torch.min", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.max", "torch.min", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.max", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "", "def", "get_bounds_xy", "(", "self", ",", "l_x", ",", "u_x", ",", "l_y", ",", "u_y", ",", "debug", "=", "False", ")", ":", "\n", "        ", "if", "self", ".", "ibp", ":", "\n", "            ", "prod1", "=", "l_x", "*", "l_y", "\n", "prod2", "=", "l_x", "*", "u_y", "\n", "prod3", "=", "u_x", "*", "l_y", "\n", "prod4", "=", "u_x", "*", "u_y", "\n", "\n", "l", "=", "torch", ".", "min", "(", "prod1", ",", "torch", ".", "min", "(", "prod2", ",", "torch", ".", "min", "(", "prod3", ",", "prod4", ")", ")", ")", "\n", "u", "=", "torch", ".", "max", "(", "prod1", ",", "torch", ".", "max", "(", "prod2", ",", "torch", ".", "max", "(", "prod3", ",", "prod4", ")", ")", ")", "\n", "\n", "zeros", "=", "torch", ".", "zeros", "(", "l_x", ".", "shape", ")", ".", "cuda", "(", ")", "\n", "\n", "return", "zeros", ",", "zeros", ",", "l", ",", "zeros", ",", "zeros", ",", "u", "\n", "\n", "", "alpha_l", "=", "l_y", "\n", "beta_l", "=", "l_x", "\n", "gamma_l", "=", "-", "alpha_l", "*", "beta_l", "\n", "\n", "alpha_u", "=", "u_y", "\n", "beta_u", "=", "l_x", "\n", "gamma_u", "=", "-", "alpha_u", "*", "beta_u", "\n", "\n", "return", "alpha_l", ",", "beta_l", ",", "gamma_l", ",", "alpha_u", ",", "beta_u", ",", "gamma_u", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dot_product": [[278, 382], ["time.time", "Bounds.Bounds.concretize", "other.concretize", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "Bounds.Bounds", "torch.min().sum", "torch.min().sum", "torch.min().sum", "torch.min().sum", "torch.max().sum", "torch.max().sum", "torch.max().sum", "torch.max().sum", "Bounds.Bounds", "Bounds.Bounds.get_bounds_xy", "alpha_l.reshape.reshape.reshape", "beta_l.reshape.reshape.reshape", "gamma_l.reshape.reshape.reshape", "alpha_u.reshape.reshape.reshape", "beta_u.reshape.reshape.reshape", "gamma_u.reshape.reshape.reshape", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "Bounds.Bounds.lb.unsqueeze", "Bounds.Bounds.ub.unsqueeze", "other.lb.unsqueeze", "other.ub.unsqueeze", "torch.min().sum.unsqueeze", "torch.min().sum.unsqueeze", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "l_a[].repeat().reshape", "u_a[].repeat().reshape", "l_b[].reshape().repeat", "u_b[].reshape().repeat", "old[].reshape", "a[].matmul().reshape", "old[].reshape().bmm().reshape", "old[].reshape", "a[].matmul().reshape().transpose", "old[].reshape().bmm().reshape().transpose", "Bounds.Bounds.dot_product.add_w_alpha"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.get_bounds_xy", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose"], ["def", "dot_product", "(", "self", ",", "other", ",", "debug", "=", "False", ",", "verbose", "=", "False", ",", "lower", "=", "True", ",", "upper", "=", "True", ")", ":", "\n", "        ", "if", "self", ".", "dim_in", "==", "1", ":", "\n", "            ", "l1", ",", "u1", "=", "self", ".", "lb", ".", "unsqueeze", "(", "-", "2", ")", ",", "self", ".", "ub", ".", "unsqueeze", "(", "-", "2", ")", "\n", "l2", ",", "u2", "=", "other", ".", "lb", ".", "unsqueeze", "(", "1", ")", ",", "other", ".", "ub", ".", "unsqueeze", "(", "1", ")", "\n", "prod1", ",", "prod2", ",", "prod3", ",", "prod4", "=", "l1", "*", "l2", ",", "l1", "*", "u2", ",", "u1", "*", "l2", ",", "u1", "*", "u2", "\n", "l", "=", "torch", ".", "min", "(", "torch", ".", "min", "(", "prod1", ",", "prod2", ")", ",", "torch", ".", "min", "(", "prod3", ",", "prod4", ")", ")", ".", "sum", "(", "-", "1", ")", "\n", "u", "=", "torch", ".", "max", "(", "torch", ".", "max", "(", "prod1", ",", "prod2", ")", ",", "torch", ".", "max", "(", "prod3", ",", "prod4", ")", ")", ".", "sum", "(", "-", "1", ")", "\n", "w", "=", "l", ".", "unsqueeze", "(", "-", "2", ")", "*", "0", "\n", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "w", ",", "lb", "=", "l", ",", "uw", "=", "w", ",", "ub", "=", "u", "\n", ")", "\n", "\n", "", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "l_a", ",", "u_a", "=", "self", ".", "concretize", "(", ")", "\n", "l_b", ",", "u_b", "=", "other", ".", "concretize", "(", ")", "\n", "\n", "lw", "=", "torch", ".", "zeros", "(", "self", ".", "lw", ".", "shape", "[", "0", "]", ",", "self", ".", "lw", ".", "shape", "[", "1", "]", ",", "self", ".", "dim_in", ",", "other", ".", "lw", ".", "shape", "[", "1", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "uw", "=", "torch", ".", "zeros", "(", "self", ".", "lw", ".", "shape", "[", "0", "]", ",", "self", ".", "lw", ".", "shape", "[", "1", "]", ",", "self", ".", "dim_in", ",", "other", ".", "lw", ".", "shape", "[", "1", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "lb", "=", "torch", ".", "zeros", "(", "self", ".", "lw", ".", "shape", "[", "0", "]", ",", "self", ".", "lw", ".", "shape", "[", "1", "]", ",", "other", ".", "lw", ".", "shape", "[", "1", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "ub", "=", "torch", ".", "zeros", "(", "self", ".", "lw", ".", "shape", "[", "0", "]", ",", "self", ".", "lw", ".", "shape", "[", "1", "]", ",", "other", ".", "lw", ".", "shape", "[", "1", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "for", "t", "in", "range", "(", "self", ".", "batch_size", ")", ":", "\n", "            ", "alpha_l", ",", "beta_l", ",", "gamma_l", ",", "alpha_u", ",", "beta_u", ",", "gamma_u", "=", "self", ".", "get_bounds_xy", "(", "\n", "l_a", "[", "t", "]", ".", "repeat", "(", "1", ",", "other", ".", "length", ")", ".", "reshape", "(", "-", "1", ")", ",", "\n", "u_a", "[", "t", "]", ".", "repeat", "(", "1", ",", "other", ".", "length", ")", ".", "reshape", "(", "-", "1", ")", ",", "\n", "l_b", "[", "t", "]", ".", "reshape", "(", "-", "1", ")", ".", "repeat", "(", "self", ".", "length", ")", ",", "\n", "u_b", "[", "t", "]", ".", "reshape", "(", "-", "1", ")", ".", "repeat", "(", "self", ".", "length", ")", ",", "\n", "debug", "=", "debug", "\n", ")", "\n", "\n", "alpha_l", "=", "alpha_l", ".", "reshape", "(", "self", ".", "length", ",", "other", ".", "length", ",", "self", ".", "dim_out", ")", "\n", "beta_l", "=", "beta_l", ".", "reshape", "(", "self", ".", "length", ",", "other", ".", "length", ",", "self", ".", "dim_out", ")", "\n", "gamma_l", "=", "gamma_l", ".", "reshape", "(", "self", ".", "length", ",", "other", ".", "length", ",", "self", ".", "dim_out", ")", "\n", "alpha_u", "=", "alpha_u", ".", "reshape", "(", "self", ".", "length", ",", "other", ".", "length", ",", "self", ".", "dim_out", ")", "\n", "beta_u", "=", "beta_u", ".", "reshape", "(", "self", ".", "length", ",", "other", ".", "length", ",", "self", ".", "dim_out", ")", "\n", "gamma_u", "=", "gamma_u", ".", "reshape", "(", "self", ".", "length", ",", "other", ".", "length", ",", "self", ".", "dim_out", ")", "\n", "\n", "lb", "[", "t", "]", "+=", "torch", ".", "sum", "(", "gamma_l", ",", "dim", "=", "-", "1", ")", "\n", "ub", "[", "t", "]", "+=", "torch", ".", "sum", "(", "gamma_u", ",", "dim", "=", "-", "1", ")", "\n", "\n", "matmul_batch_size", "=", "128", "#64", "\n", "\n", "def", "add_w_alpha", "(", "new", ",", "old", ",", "weight", ",", "cmp", ")", ":", "\n", "                ", "a", "=", "old", "[", "t", "]", ".", "reshape", "(", "self", ".", "length", ",", "self", ".", "dim_in", ",", "1", ",", "self", ".", "dim_out", ")", "\n", "b", "=", "(", "weight", "*", "cmp", "(", "weight", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", ")", ".", "reshape", "(", "self", ".", "length", ",", "1", ",", "other", ".", "length", ",", "self", ".", "dim_out", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "new", "[", "t", ",", ":", ",", ":", ",", ":", "]", "+=", "a", "[", ":", ",", ":", ",", ":", ",", ":", "]", ".", "matmul", "(", "b", "[", ":", ",", ":", ",", ":", ",", ":", "]", ")", ".", "reshape", "(", "self", ".", "length", ",", "self", ".", "dim_in", ",", "other", ".", "length", ")", "\n", "\n", "", "def", "add_b_alpha", "(", "new", ",", "old", ",", "weight", ",", "cmp", ")", ":", "\n", "                ", "new", "[", "t", ",", ":", ",", ":", "]", "+=", "(", "(", "old", "[", "t", "]", ".", "reshape", "(", "self", ".", "length", ",", "1", ",", "self", ".", "dim_out", ")", ")", ".", "bmm", "(", "(", "weight", "*", "cmp", "(", "weight", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", ")", ".", "reshape", "(", "self", ".", "length", ",", "other", ".", "length", ",", "self", ".", "dim_out", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "reshape", "(", "self", ".", "length", ",", "other", ".", "length", ")", ")", "\n", "\n", "", "def", "add_w_beta", "(", "new", ",", "old", ",", "weight", ",", "cmp", ")", ":", "\n", "                ", "a", "=", "old", "[", "t", "]", ".", "reshape", "(", "other", ".", "length", ",", "self", ".", "dim_in", ",", "1", ",", "self", ".", "dim_out", ")", "\n", "b", "=", "(", "weight", "*", "cmp", "(", "weight", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "other", ".", "length", ",", "1", ",", "self", ".", "length", ",", "self", ".", "dim_out", ")", ".", "transpose", "(", "2", ",", "3", ")", "\n", "new", "[", "t", ",", ":", ",", ":", ",", ":", "]", "+=", "a", "[", ":", ",", ":", ",", ":", ",", ":", "]", ".", "matmul", "(", "b", "[", ":", ",", ":", ",", ":", ",", ":", "]", ")", ".", "reshape", "(", "other", ".", "length", ",", "self", ".", "dim_in", ",", "self", ".", "length", ")", ".", "transpose", "(", "0", ",", "2", ")", "\n", "\n", "", "def", "add_b_beta", "(", "new", ",", "old", ",", "weight", ",", "cmp", ")", ":", "\n", "                ", "new", "[", "t", ",", ":", ",", ":", "]", "+=", "(", "(", "old", "[", "t", "]", ".", "reshape", "(", "other", ".", "length", ",", "1", ",", "self", ".", "dim_out", ")", ")", ".", "bmm", "(", "(", "weight", "*", "cmp", "(", "weight", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "other", ".", "length", ",", "self", ".", "length", ",", "self", ".", "dim_out", ")", ".", "transpose", "(", "1", ",", "2", ")", ")", ".", "reshape", "(", "other", ".", "length", ",", "self", ".", "length", ")", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "\n", "", "if", "lower", ":", "\n", "                ", "add_w_alpha", "(", "lw", ",", "self", ".", "lw", ",", "alpha_l", ",", "torch", ".", "gt", ")", "\n", "add_w_alpha", "(", "lw", ",", "self", ".", "uw", ",", "alpha_l", ",", "torch", ".", "lt", ")", "\n", "add_w_beta", "(", "lw", ",", "other", ".", "lw", ",", "beta_l", ",", "torch", ".", "gt", ")", "\n", "add_w_beta", "(", "lw", ",", "other", ".", "uw", ",", "beta_l", ",", "torch", ".", "lt", ")", "\n", "\n", "add_b_alpha", "(", "lb", ",", "self", ".", "lb", ",", "alpha_l", ",", "torch", ".", "gt", ")", "\n", "add_b_alpha", "(", "lb", ",", "self", ".", "ub", ",", "alpha_l", ",", "torch", ".", "lt", ")", "\n", "add_b_beta", "(", "lb", ",", "other", ".", "lb", ",", "beta_l", ",", "torch", ".", "gt", ")", "\n", "add_b_beta", "(", "lb", ",", "other", ".", "ub", ",", "beta_l", ",", "torch", ".", "lt", ")", "\n", "\n", "", "if", "upper", ":", "\n", "                ", "add_w_alpha", "(", "uw", ",", "self", ".", "uw", ",", "alpha_u", ",", "torch", ".", "gt", ")", "\n", "add_w_alpha", "(", "uw", ",", "self", ".", "lw", ",", "alpha_u", ",", "torch", ".", "lt", ")", "\n", "add_w_beta", "(", "uw", ",", "other", ".", "uw", ",", "beta_u", ",", "torch", ".", "gt", ")", "\n", "add_w_beta", "(", "uw", ",", "other", ".", "lw", ",", "beta_u", ",", "torch", ".", "lt", ")", "\n", "\n", "add_b_alpha", "(", "ub", ",", "self", ".", "ub", ",", "alpha_u", ",", "torch", ".", "gt", ")", "\n", "add_b_alpha", "(", "ub", ",", "self", ".", "lb", ",", "alpha_u", ",", "torch", ".", "lt", ")", "\n", "add_b_beta", "(", "ub", ",", "other", ".", "ub", ",", "beta_u", ",", "torch", ".", "gt", ")", "\n", "add_b_beta", "(", "ub", ",", "other", ".", "lb", ",", "beta_u", ",", "torch", ".", "lt", ")", "\n", "\n", "", "", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "lw", ",", "lb", "=", "lb", ",", "uw", "=", "uw", ",", "ub", "=", "ub", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.divide": [[384, 390], ["type", "W.reciprocal.reciprocal.reciprocal", "Bounds.Bounds.multiply"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.reciprocal", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.multiply"], ["", "def", "divide", "(", "self", ",", "W", ")", ":", "\n", "        ", "if", "type", "(", "W", ")", "==", "Bounds", ":", "\n", "            ", "W", "=", "W", ".", "reciprocal", "(", ")", "\n", "return", "self", ".", "multiply", "(", "W", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.context": [[391, 394], ["Bounds.Bounds.dot_product", "value.t"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dot_product", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.t"], ["", "", "def", "context", "(", "self", ",", "value", ")", ":", "\n", "        ", "context", "=", "self", ".", "dot_product", "(", "value", ".", "t", "(", ")", ")", "\n", "return", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqr": [[403, 433], ["Bounds.Bounds.new", "Bounds.Bounds", "torch.min", "torch.min", "torch.min", "torch.min", "torch.max", "torch.max", "torch.max", "torch.max", "Bounds.Bounds.add_linear", "torch.max", "torch.max", "torch.max", "torch.max", "Bounds.Bounds.add_linear", "torch.min", "torch.min", "torch.min", "torch.min", "Bounds.Bounds.add_linear", "l.pow", "torch.min.pow", "torch.min.pow", "torch.min.pow", "torch.min.pow"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.new", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear"], ["def", "sqr", "(", "self", ")", ":", "\n", "        ", "l", ",", "u", ",", "mask_pos", ",", "mask_neg", ",", "mask_both", ",", "lw", ",", "lb", ",", "uw", ",", "ub", "=", "self", ".", "new", "(", ")", "\n", "\n", "if", "self", ".", "ibp", ":", "\n", "            ", "lb", "=", "torch", ".", "min", "(", "l", "*", "l", ",", "u", "*", "u", ")", "\n", "lb", "-=", "mask_both", "*", "lb", "# lower bound is zero for this case", "\n", "ub", "=", "torch", ".", "max", "(", "l", "*", "l", ",", "u", "*", "u", ")", "\n", "", "else", ":", "\n", "# upper bound", "\n", "            ", "k", "=", "u", "+", "l", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "None", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "l", ",", "y0", "=", "l", ".", "pow", "(", "2", ")", "\n", ")", "\n", "\n", "# lower bound", "\n", "m", "=", "torch", ".", "max", "(", "(", "l", "+", "u", ")", "/", "2", ",", "2", "*", "u", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_neg", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "2", "*", "m", ",", "x0", "=", "m", ",", "y0", "=", "m", ".", "pow", "(", "2", ")", "\n", ")", "\n", "m", "=", "torch", ".", "min", "(", "(", "l", "+", "u", ")", "/", "2", ",", "2", "*", "l", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_pos", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "2", "*", "m", ",", "x0", "=", "m", ",", "y0", "=", "m", ".", "pow", "(", "2", ")", "\n", ")", "\n", "\n", "", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "lw", ",", "lb", "=", "lb", ",", "uw", "=", "uw", ",", "ub", "=", "ub", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt": [[435, 462], ["Bounds.Bounds.new", "Bounds.Bounds", "torch.min", "torch.min", "torch.min", "torch.min", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "Bounds.Bounds.add_linear", "Bounds.Bounds.add_linear", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.new", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt"], ["", "def", "sqrt", "(", "self", ")", ":", "\n", "        ", "l", ",", "u", ",", "mask_pos", ",", "mask_neg", ",", "mask_both", ",", "lw", ",", "lb", ",", "uw", ",", "ub", "=", "self", ".", "new", "(", ")", "\n", "assert", "(", "torch", ".", "min", "(", "l", ")", ">", "0", ")", "\n", "\n", "if", "self", ".", "ibp", ":", "\n", "            ", "lb", "=", "torch", ".", "sqrt", "(", "l", ")", "\n", "ub", "=", "torch", ".", "sqrt", "(", "u", ")", "\n", "", "else", ":", "\n", "            ", "k", "=", "(", "torch", ".", "sqrt", "(", "u", ")", "-", "torch", ".", "sqrt", "(", "l", ")", ")", "/", "(", "u", "-", "l", "+", "epsilon", ")", "\n", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "None", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "l", ",", "y0", "=", "torch", ".", "sqrt", "(", "l", ")", "\n", ")", "\n", "\n", "m", "=", "(", "l", "+", "u", ")", "/", "2", "\n", "k", "=", "0.5", "/", "torch", ".", "sqrt", "(", "m", ")", "\n", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "None", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "m", ",", "y0", "=", "torch", ".", "sqrt", "(", "m", ")", "\n", ")", "\n", "\n", "", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "lw", ",", "lb", "=", "lb", ",", "\n", "uw", "=", "uw", ",", "ub", "=", "ub", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.relu": [[464, 506], ["Bounds.Bounds.new", "Bounds.Bounds", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "Bounds.Bounds.add_linear", "Bounds.Bounds.add_linear", "Bounds.Bounds.add_linear", "Bounds.Bounds.add_linear", "Bounds.Bounds.add_linear", "torch.gt().to", "torch.gt().to", "torch.gt().to", "torch.gt().to", "Bounds.Bounds.add_linear", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.tensor().cuda", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.gt", "torch.gt", "torch.gt", "torch.gt", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.new", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add_linear"], ["", "def", "relu", "(", "self", ")", ":", "\n", "        ", "l", ",", "u", ",", "mask_pos", ",", "mask_neg", ",", "mask_both", ",", "lw", ",", "lb", ",", "uw", ",", "ub", "=", "self", ".", "new", "(", ")", "\n", "\n", "if", "self", ".", "ibp", ":", "\n", "            ", "lb", "=", "torch", ".", "max", "(", "l", ",", "torch", ".", "tensor", "(", "0.", ")", ".", "cuda", "(", ")", ")", "\n", "ub", "=", "torch", ".", "max", "(", "u", ",", "torch", ".", "tensor", "(", "0.", ")", ".", "cuda", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_neg", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "torch", ".", "zeros", "(", "l", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", ",", "x0", "=", "0", ",", "y0", "=", "0", "\n", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_neg", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "torch", ".", "zeros", "(", "l", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", ",", "x0", "=", "0", ",", "y0", "=", "0", "\n", ")", "\n", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_pos", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "torch", ".", "ones", "(", "l", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", ",", "x0", "=", "0", ",", "y0", "=", "0", "\n", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_pos", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "torch", ".", "ones", "(", "l", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", ",", "x0", "=", "0", ",", "y0", "=", "0", "\n", ")", "\n", "\n", "k", "=", "u", "/", "(", "u", "-", "l", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_both", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "l", ",", "y0", "=", "0", "\n", ")", "\n", "\n", "k", "=", "torch", ".", "gt", "(", "torch", ".", "abs", "(", "u", ")", ",", "torch", ".", "abs", "(", "l", ")", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_both", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "0", ",", "y0", "=", "0", "\n", ")", "\n", "\n", "", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "lw", ",", "lb", "=", "lb", ",", "\n", "uw", "=", "uw", ",", "ub", "=", "ub", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp": [[513, 546], ["Bounds.Bounds.new", "Bounds.Bounds", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.min", "torch.min", "torch.min", "torch.min", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.lt().to", "torch.lt().to", "torch.lt().to", "torch.lt().to", "torch.min", "torch.min", "torch.min", "torch.min", "torch.exp.unsqueeze", "torch.exp.unsqueeze", "ku.unsqueeze", "Bounds.Bounds.exp.exp_with_trick"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.new", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp"], ["def", "exp", "(", "self", ")", ":", "\n", "        ", "l", ",", "u", ",", "mask_pos", ",", "mask_neg", ",", "mask_both", ",", "lw", ",", "lb", ",", "uw", ",", "ub", "=", "self", ".", "new", "(", ")", "\n", "\n", "if", "self", ".", "ibp", ":", "\n", "            ", "lb", "=", "torch", ".", "exp", "(", "l", ")", "\n", "ub", "=", "torch", ".", "exp", "(", "u", ")", "\n", "", "else", ":", "\n", "            ", "\"\"\"\n            To ensure that the global lower bound is always positive:\n                e^alpha (l - alpha) + e^alpha > 0\n                => alpha < l + 1\n            \"\"\"", "\n", "m", "=", "torch", ".", "min", "(", "(", "l", "+", "u", ")", "/", "2", ",", "l", "+", "0.99", ")", "\n", "\n", "thres", "=", "torch", ".", "tensor", "(", "12.", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "def", "exp_with_trick", "(", "x", ")", ":", "\n", "                ", "mask", "=", "torch", ".", "lt", "(", "x", ",", "thres", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "return", "mask", "*", "torch", ".", "exp", "(", "torch", ".", "min", "(", "x", ",", "thres", ")", ")", "+", "(", "1", "-", "mask", ")", "*", "(", "torch", ".", "exp", "(", "thres", ")", "*", "(", "x", "-", "thres", "+", "1", ")", ")", "\n", "\n", "", "kl", "=", "torch", ".", "exp", "(", "torch", ".", "min", "(", "m", ",", "thres", ")", ")", "\n", "lw", "=", "self", ".", "lw", "*", "kl", ".", "unsqueeze", "(", "2", ")", "\n", "lb", "=", "kl", "*", "(", "self", ".", "lb", "-", "m", "+", "1", ")", "\n", "\n", "ku", "=", "(", "exp_with_trick", "(", "u", ")", "-", "exp_with_trick", "(", "l", ")", ")", "/", "(", "u", "-", "l", "+", "epsilon", ")", "\n", "uw", "=", "self", ".", "uw", "*", "ku", ".", "unsqueeze", "(", "2", ")", "\n", "ub", "=", "self", ".", "ub", "*", "ku", "-", "ku", "*", "l", "+", "exp_with_trick", "(", "l", ")", "\n", "\n", "", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "lw", ",", "lb", "=", "lb", ",", "\n", "uw", "=", "uw", ",", "ub", "=", "ub", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.softmax": [[548, 558], ["Bounds.Bounds.exp", "Bounds.Bounds", "Bounds.Bounds.divide", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum().repeat", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.exp", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.divide"], ["", "def", "softmax", "(", "self", ",", "verbose", "=", "False", ")", ":", "\n", "        ", "bounds_exp", "=", "self", ".", "exp", "(", ")", "\n", "bounds_sum", "=", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "torch", ".", "sum", "(", "bounds_exp", ".", "lw", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "self", ".", "dim_out", ")", ",", "\n", "uw", "=", "torch", ".", "sum", "(", "bounds_exp", ".", "uw", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "self", ".", "dim_out", ")", ",", "\n", "lb", "=", "torch", ".", "sum", "(", "bounds_exp", ".", "lb", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "dim_out", ")", ",", "\n", "ub", "=", "torch", ".", "sum", "(", "bounds_exp", ".", "ub", ",", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "dim_out", ")", ",", "\n", ")", "\n", "return", "bounds_exp", ".", "divide", "(", "bounds_sum", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense": [[559, 561], ["Bounds.Bounds.matmul().add", "Bounds.Bounds.matmul"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul"], ["", "def", "dense", "(", "self", ",", "dense", ")", ":", "\n", "        ", "return", "self", ".", "matmul", "(", "dense", ".", "weight", ")", ".", "add", "(", "dense", ".", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh": [[562, 638], ["Bounds.Bounds.new", "Bounds.Bounds", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "Bounds.Bounds.tanh.dtanh"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.new", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh"], ["", "def", "tanh", "(", "self", ")", ":", "\n", "        ", "l", ",", "u", ",", "mask_pos", ",", "mask_neg", ",", "mask_both", ",", "lw", ",", "lb", ",", "uw", ",", "ub", "=", "self", ".", "new", "(", ")", "\n", "\n", "if", "self", ".", "ibp", ":", "\n", "            ", "lb", "=", "torch", ".", "tanh", "(", "l", ")", "\n", "ub", "=", "torch", ".", "tanh", "(", "u", ")", "\n", "", "else", ":", "\n", "            ", "def", "dtanh", "(", "x", ")", ":", "\n", "                ", "return", "1.", "/", "torch", ".", "cosh", "(", "x", ")", ".", "pow", "(", "2", ")", "\n", "\n", "# lower bound for negative", "\n", "", "m", "=", "(", "l", "+", "u", ")", "/", "2", "\n", "k", "=", "dtanh", "(", "m", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_neg", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "m", ",", "y0", "=", "torch", ".", "tanh", "(", "m", ")", "\n", ")", "\n", "# upper bound for positive", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_pos", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "m", ",", "y0", "=", "torch", ".", "tanh", "(", "m", ")", "\n", ")", "\n", "\n", "# upper bound for negative", "\n", "k", "=", "(", "torch", ".", "tanh", "(", "u", ")", "-", "torch", ".", "tanh", "(", "l", ")", ")", "/", "(", "u", "-", "l", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_neg", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "l", ",", "y0", "=", "torch", ".", "tanh", "(", "l", ")", "\n", ")", "\n", "# lower bound for positive", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_pos", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "l", ",", "y0", "=", "torch", ".", "tanh", "(", "l", ")", "\n", ")", "\n", "\n", "# bounds for both", "\n", "max_iter", "=", "10", "\n", "\n", "# lower bound for both", "\n", "diff", "=", "lambda", "d", ":", "(", "torch", ".", "tanh", "(", "u", ")", "-", "torch", ".", "tanh", "(", "d", ")", ")", "/", "(", "u", "-", "d", "+", "epsilon", ")", "-", "dtanh", "(", "d", ")", "\n", "d", "=", "l", "/", "2", "\n", "_l", "=", "l", "\n", "_u", "=", "torch", ".", "zeros", "(", "l", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "for", "t", "in", "range", "(", "max_iter", ")", ":", "\n", "                ", "v", "=", "diff", "(", "d", ")", "\n", "mask_p", "=", "torch", ".", "gt", "(", "v", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_l", "=", "d", "*", "mask_p", "+", "_l", "*", "(", "1", "-", "mask_p", ")", "\n", "_u", "=", "d", "*", "(", "1", "-", "mask_p", ")", "+", "_u", "*", "mask_p", "\n", "d", "=", "(", "d", "+", "_u", ")", "/", "2", "*", "mask_p", "+", "(", "d", "+", "_l", ")", "/", "2", "*", "(", "1", "-", "mask_p", ")", "\n", "", "k", "=", "(", "torch", ".", "tanh", "(", "d", ")", "-", "torch", ".", "tanh", "(", "u", ")", ")", "/", "(", "d", "-", "u", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_both", ",", "w_out", "=", "lw", ",", "b_out", "=", "lb", ",", "type", "=", "\"lower\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "d", ",", "y0", "=", "torch", ".", "tanh", "(", "d", ")", "\n", ")", "\n", "\n", "# upper bound for both", "\n", "diff", "=", "lambda", "d", ":", "(", "torch", ".", "tanh", "(", "d", ")", "-", "torch", ".", "tanh", "(", "l", ")", ")", "/", "(", "d", "-", "l", "+", "epsilon", ")", "-", "dtanh", "(", "d", ")", "\n", "d", "=", "u", "/", "2", "\n", "_l", "=", "torch", ".", "zeros", "(", "l", ".", "shape", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "_u", "=", "u", "\n", "for", "t", "in", "range", "(", "max_iter", ")", ":", "\n", "                ", "v", "=", "diff", "(", "d", ")", "\n", "mask_p", "=", "torch", ".", "gt", "(", "v", ",", "0", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "_l", "=", "d", "*", "(", "1", "-", "mask_p", ")", "+", "_l", "*", "mask_p", "\n", "_u", "=", "d", "*", "mask_p", "+", "_u", "*", "(", "1", "-", "mask_p", ")", "\n", "d", "=", "(", "d", "+", "_u", ")", "/", "2", "*", "(", "1", "-", "mask_p", ")", "+", "(", "d", "+", "_l", ")", "/", "2", "*", "mask_p", "\n", "", "k", "=", "(", "torch", ".", "tanh", "(", "d", ")", "-", "torch", ".", "tanh", "(", "l", ")", ")", "/", "(", "d", "-", "l", "+", "epsilon", ")", "\n", "self", ".", "add_linear", "(", "\n", "mask", "=", "mask_both", ",", "w_out", "=", "uw", ",", "b_out", "=", "ub", ",", "type", "=", "\"upper\"", ",", "\n", "k", "=", "k", ",", "x0", "=", "d", ",", "y0", "=", "torch", ".", "tanh", "(", "d", ")", "\n", ")", "\n", "\n", "", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "lw", ",", "lb", "=", "lb", ",", "\n", "uw", "=", "uw", ",", "ub", "=", "ub", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.act": [[640, 645], ["Bounds.Bounds.relu"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.relu"], ["", "def", "act", "(", "self", ",", "act_name", ")", ":", "\n", "        ", "if", "act_name", "==", "\"relu\"", ":", "\n", "            ", "return", "self", ".", "relu", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.layer_norm": [[646, 667], ["Bounds.Bounds.concretize", "Bounds.Bounds.add", "Bounds.Bounds.concretize", "Bounds.Bounds.divide.multiply().add", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "Bounds.Bounds.matmul().multiply", "Bounds.Bounds.sqr().matmul", "Bounds.Bounds.divide", "Bounds.Bounds.sqr().matmul.add().sqrt", "Bounds.Bounds.divide.multiply", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "Bounds.Bounds.matmul", "Bounds.Bounds.sqr", "Bounds.Bounds.sqr().matmul.add"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.multiply", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.divide", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.multiply", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqr", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add"], ["", "", "def", "layer_norm", "(", "self", ",", "normalizer", ",", "layer_norm", ")", ":", "\n", "        ", "if", "layer_norm", "==", "\"no\"", ":", "\n", "            ", "return", "self", "\n", "\n", "", "l_in", ",", "u_in", "=", "self", ".", "concretize", "(", ")", "\n", "w_avg", "=", "torch", ".", "ones", "(", "(", "self", ".", "dim_out", ",", "self", ".", "dim_out", ")", ")", ".", "to", "(", "self", ".", "device", ")", "*", "(", "1.", "/", "self", ".", "dim_out", ")", "\n", "minus_mu", "=", "self", ".", "add", "(", "self", ".", "matmul", "(", "w_avg", ")", ".", "multiply", "(", "-", "1.", ")", ")", "\n", "\n", "l_minus_mu", ",", "u_minus_mu", "=", "minus_mu", ".", "concretize", "(", ")", "\n", "dim", "=", "self", ".", "dim_out", "\n", "\n", "if", "layer_norm", "==", "\"standard\"", ":", "\n", "            ", "variance", "=", "minus_mu", ".", "sqr", "(", ")", ".", "matmul", "(", "w_avg", ")", "\n", "normalized", "=", "minus_mu", ".", "divide", "(", "variance", ".", "add", "(", "epsilon", ")", ".", "sqrt", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "assert", "(", "layer_norm", "==", "\"no_var\"", ")", "\n", "normalized", "=", "minus_mu", "\n", "\n", "", "normalized", "=", "normalized", ".", "multiply", "(", "normalizer", ".", "weight", ")", ".", "add", "(", "normalizer", ".", "bias", ")", "\n", "\n", "return", "normalized", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.reciprocal": [[671, 696], ["Bounds.Bounds.concretize", "Bounds.Bounds", "torch.min", "torch.min", "torch.min", "torch.min", "m.pow", "kl.unsqueeze", "ku.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize"], ["", "def", "reciprocal", "(", "self", ")", ":", "\n", "        ", "l", ",", "u", "=", "self", ".", "concretize", "(", ")", "\n", "\n", "if", "self", ".", "ibp", ":", "\n", "            ", "lw", "=", "self", ".", "lw", "*", "0.", "\n", "uw", "=", "self", ".", "uw", "*", "0.", "\n", "lb", "=", "1.", "/", "u", "\n", "ub", "=", "1.", "/", "l", "\n", "", "else", ":", "\n", "            ", "m", "=", "(", "l", "+", "u", ")", "/", "2", "\n", "\n", "assert", "(", "torch", ".", "min", "(", "l", ")", ">=", "epsilon", ")", "\n", "\n", "kl", "=", "-", "1", "/", "m", ".", "pow", "(", "2", ")", "\n", "lw", "=", "self", ".", "uw", "*", "kl", ".", "unsqueeze", "(", "2", ")", "\n", "lb", "=", "self", ".", "ub", "*", "kl", "+", "2", "/", "m", "\n", "\n", "ku", "=", "-", "1.", "/", "(", "l", "*", "u", ")", "\n", "uw", "=", "self", ".", "lw", "*", "ku", ".", "unsqueeze", "(", "2", ")", "\n", "ub", "=", "self", ".", "lb", "*", "ku", "-", "ku", "*", "l", "+", "1", "/", "l", "\n", "\n", "", "return", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "p", ",", "self", ".", "eps", ",", "\n", "lw", "=", "lw", ",", "lb", "=", "lb", ",", "\n", "uw", "=", "uw", ",", "ub", "=", "ub", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward.__init__": [[17, 22], ["Verifiers.Verifier.__init__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "target", ",", "logger", ")", ":", "\n", "        ", "super", "(", "VerifierBackward", ",", "self", ")", ".", "__init__", "(", "args", ",", "target", ",", "logger", ")", "\n", "self", ".", "controller", "=", "None", "\n", "self", ".", "use_forward", "=", "args", ".", "method", "==", "\"baf\"", "\n", "self", ".", "empty_cache", "=", "args", ".", "empty_cache", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward.verify_safety": [[23, 73], ["torch.no_grad", "VerifierBackward.VerifierBackward._bound_input", "Verifiers.utils.check", "enumerate", "VerifierBackward.VerifierBackward._bound_pooling", "Verifiers.utils.check", "VerifierBackward.VerifierBackward._bound_classifier", "print", "print", "VerifierBackward.VerifierBackward.print", "VerifierBackward.VerifierBackward._bound_layer", "std.transpose().reshape.transpose().reshape.transpose().reshape", "Verifiers.utils.check", "std.transpose().reshape.transpose().reshape.transpose().reshape", "Verifiers.utils.check", "Verifiers.utils.check", "torch.cuda.empty_cache", "print", "print", "std.transpose().reshape.transpose().reshape.transpose", "std.transpose().reshape.transpose().reshape.transpose"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_input", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_pooling", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_classifier", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_layer", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose"], ["", "def", "verify_safety", "(", "self", ",", "example", ",", "embeddings", ",", "index", ",", "eps", ")", ":", "\n", "        ", "errorType", "=", "OSError", "if", "self", ".", "debug", "else", "AssertionError", "\n", "\n", "# cannot accept a batch", "\n", "embeddings", "=", "embeddings", "[", "0", "]", "\n", "\n", "try", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "bounds", "=", "self", ".", "_bound_input", "(", "embeddings", ",", "index", "=", "index", ",", "eps", "=", "eps", ")", "# hard-coded yet", "\n", "check", "(", "\"embedding\"", ",", "l", "=", "bounds", ".", "l", ",", "u", "=", "bounds", ".", "u", ",", "std", "=", "self", ".", "std", "[", "\"embedding_output\"", "]", "[", "0", "]", ",", "verbose", "=", "self", ".", "debug", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "bounds", ".", "print", "(", "\"embedding\"", ")", "\n", "\n", "", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "encoding_layers", ")", ":", "\n", "                    ", "attention_scores", ",", "attention_probs", ",", "bounds", "=", "self", ".", "_bound_layer", "(", "bounds", ",", "layer", ")", "\n", "\n", "std", "=", "self", ".", "std", "[", "\"attention_scores\"", "]", "[", "i", "]", "[", "0", "]", "\n", "std", "=", "std", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "1", ",", "std", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "check", "(", "\"layer {} attention_scores\"", ".", "format", "(", "i", ")", ",", "\n", "l", "=", "attention_scores", ".", "l", ",", "u", "=", "attention_scores", ".", "u", ",", "std", "=", "std", ",", "verbose", "=", "self", ".", "debug", ")", "\n", "std", "=", "self", ".", "std", "[", "\"attention_probs\"", "]", "[", "i", "]", "[", "0", "]", "\n", "std", "=", "std", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "1", ",", "std", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "check", "(", "\"layer {} attention_probs\"", ".", "format", "(", "i", ")", ",", "\n", "l", "=", "attention_probs", ".", "l", ",", "u", "=", "attention_probs", ".", "u", ",", "std", "=", "std", ",", "verbose", "=", "self", ".", "debug", ")", "\n", "check", "(", "\"layer {}\"", ".", "format", "(", "i", ")", ",", "l", "=", "bounds", ".", "l", ",", "u", "=", "bounds", ".", "u", ",", "std", "=", "self", ".", "std", "[", "\"encoded_layers\"", "]", "[", "i", "]", "[", "0", "]", ",", "verbose", "=", "self", ".", "debug", ")", "\n", "\n", "", "bounds", "=", "self", ".", "_bound_pooling", "(", "bounds", ",", "self", ".", "pooler", ")", "\n", "check", "(", "\"pooled output\"", ",", "l", "=", "bounds", ".", "l", "[", ":", "1", "]", ",", "u", "=", "bounds", ".", "u", "[", ":", "1", "]", ",", "std", "=", "self", ".", "std", "[", "\"pooled_output\"", "]", "[", "0", "]", ",", "verbose", "=", "self", ".", "debug", ")", "\n", "\n", "safety", "=", "self", ".", "_bound_classifier", "(", "bounds", ",", "self", ".", "classifier", ",", "example", "[", "\"label\"", "]", ")", "\n", "\n", "for", "layer", "in", "self", ".", "controller", ".", "layers", ":", "\n", "                    ", "del", "(", "layer", ".", "lw", ")", "\n", "del", "(", "layer", ".", "uw", ")", "\n", "del", "(", "layer", ".", "final_lw", ")", "\n", "del", "(", "layer", ".", "final_uw", ")", "\n", "del", "(", "layer", ".", "final_lb", ")", "\n", "del", "(", "layer", ".", "final_ub", ")", "\n", "", "if", "self", ".", "empty_cache", ":", "\n", "                    ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "", "return", "safety", "\n", "", "", "except", "errorType", "as", "err", ":", "# for debug", "\n", "            ", "if", "self", ".", "verbose", ":", "\n", "                ", "print", "(", "\"Warning: failed assertion\"", ")", "\n", "print", "(", "err", ")", "\n", "", "print", "(", "\"Warning: failed assertion\"", ",", "eps", ")", "\n", "print", "(", "err", ")", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward._bound_input": [[74, 86], ["Verifiers.Controller.Controller", "Verifiers.Layer.Layer", "VerifierBackward.VerifierBackward.add_edge", "VerifierBackward.VerifierBackward.compute", "VerifierBackward.VerifierBackward._bound_layer_normalization", "EdgeInput"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.add_edge", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.compute", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward._bound_layer_normalization"], ["", "", "def", "_bound_input", "(", "self", ",", "embeddings", ",", "index", ",", "eps", ")", ":", "\n", "        ", "length", ",", "dim", "=", "embeddings", ".", "shape", "[", "0", "]", ",", "embeddings", ".", "shape", "[", "1", "]", "\n", "\n", "self", ".", "controller", "=", "Controller", "(", "self", ".", "args", ",", "eps", ")", "\n", "\n", "layer", "=", "Layer", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "length", ",", "dim", ")", "\n", "layer", ".", "add_edge", "(", "EdgeInput", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "embeddings", ",", "index", ")", ")", "\n", "layer", ".", "compute", "(", ")", "\n", "\n", "layer", "=", "self", ".", "_bound_layer_normalization", "(", "layer", ",", "self", ".", "embeddings", ".", "LayerNorm", ")", "\n", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward._bound_layer_normalization": [[87, 123], ["torch.eye().cuda", "torch.zeros().cuda", "torch.ones().cuda", "layer.next", "layer.next.next.next", "EdgeDense", "layer.next.next", "layer.next.next.next", "minus_mu.next.next.next", "layer.next.next", "EdgeLinear", "torch.eye", "torch.zeros", "torch.ones", "EdgeSqr", "EdgeDense", "minus_mu.next.next.print", "EdgeSqrt", "EdgeDivide"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "def", "_bound_layer_normalization", "(", "self", ",", "layer", ",", "normalizer", ",", "debug", "=", "False", ")", ":", "\n", "        ", "if", "self", ".", "layer_norm", "==", "\"no\"", ":", "\n", "            ", "return", "layer", "\n", "\n", "", "length", ",", "dim", "=", "layer", ".", "length", ",", "layer", ".", "dim", "\n", "\n", "eye", "=", "torch", ".", "eye", "(", "dim", ")", ".", "cuda", "(", ")", "\n", "zeros", "=", "torch", ".", "zeros", "(", "dim", ",", "dim", ")", ".", "cuda", "(", ")", "\n", "ones", "=", "torch", ".", "ones", "(", "(", "dim", ",", "dim", ")", ")", ".", "cuda", "(", ")", "\n", "w_avg", "=", "ones", "/", "layer", ".", "dim", "\n", "\n", "minus_mu", "=", "layer", ".", "next", "(", "EdgeDense", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "layer", ",", "w", "=", "eye", "-", "w_avg", ",", "b", "=", "0.", ")", ")", "\n", "\n", "if", "self", ".", "layer_norm", "==", "\"standard\"", ":", "\n", "            ", "minus_mu_sqr", "=", "minus_mu", ".", "next", "(", "EdgeSqr", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "minus_mu", ")", ")", "\n", "\n", "variance", "=", "minus_mu_sqr", ".", "next", "(", "EdgeDense", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "minus_mu_sqr", ",", "\n", "w", "=", "w_avg", ",", "b", "=", "epsilon", "\n", ")", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "                ", "variance", ".", "print", "(", "\"variance\"", ")", "\n", "\n", "", "std", "=", "variance", ".", "next", "(", "EdgeSqrt", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "variance", ")", ")", "\n", "\n", "normalized", "=", "minus_mu", ".", "next", "(", "EdgeDivide", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "minus_mu", ",", "std", ")", ")", "\n", "", "else", ":", "\n", "            ", "assert", "(", "self", ".", "layer_norm", "==", "\"no_var\"", ")", "\n", "normalized", "=", "minus_mu", "\n", "\n", "", "normalized", "=", "normalized", ".", "next", "(", "\n", "EdgeLinear", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "normalized", ",", "normalizer", ".", "weight", ",", "normalizer", ".", "bias", ")", ")", "\n", "\n", "return", "normalized", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward._bound_layer": [[124, 156], ["VerifierBackward.VerifierBackward._bound_attention", "VerifierBackward.VerifierBackward.next", "Verifiers.Layer.Layer", "Verifiers.Layer.Layer.add_edge", "Verifiers.Layer.Layer.add_edge", "Verifiers.Layer.Layer.compute", "VerifierBackward.VerifierBackward._bound_layer_normalization", "VerifierBackward.VerifierBackward.next", "intermediate.next.next.next", "intermediate.next.next.next", "Verifiers.Layer.Layer", "Verifiers.Layer.Layer.add_edge", "Verifiers.Layer.Layer.add_edge", "Verifiers.Layer.Layer.compute", "VerifierBackward.VerifierBackward._bound_layer_normalization", "EdgeDense", "EdgeDirect", "EdgeDirect", "EdgeDense", "EdgeRelu", "EdgeDense", "EdgeDirect", "EdgeDirect"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_attention", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.add_edge", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.add_edge", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.compute", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward._bound_layer_normalization", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.add_edge", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.add_edge", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.compute", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward._bound_layer_normalization"], ["", "def", "_bound_layer", "(", "self", ",", "bounds_input", ",", "layer", ")", ":", "\n", "        ", "attention_scores", ",", "attention_probs", ",", "attention", "=", "self", ".", "_bound_attention", "(", "\n", "bounds_input", ",", "layer", ".", "attention", ")", "\n", "\n", "attention", "=", "attention", ".", "next", "(", "EdgeDense", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "attention", ",", "dense", "=", "layer", ".", "attention", ".", "output", ".", "dense", ")", ")", "\n", "\n", "attention_residual", "=", "Layer", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "attention", ".", "length", ",", "attention", ".", "dim", ")", "\n", "attention_residual", ".", "add_edge", "(", "EdgeDirect", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "attention", ")", ")", "\n", "attention_residual", ".", "add_edge", "(", "EdgeDirect", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "bounds_input", ")", ")", "\n", "attention_residual", ".", "compute", "(", ")", "\n", "\n", "attention", "=", "self", ".", "_bound_layer_normalization", "(", "\n", "attention_residual", ",", "layer", ".", "attention", ".", "output", ".", "LayerNorm", ",", "debug", "=", "True", ")", "\n", "\n", "intermediate", "=", "attention", ".", "next", "(", "EdgeDense", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "attention", ",", "dense", "=", "layer", ".", "intermediate", ".", "dense", "\n", ")", ",", "dim", "=", "layer", ".", "intermediate", ".", "dense", ".", "weight", ".", "shape", "[", "0", "]", ")", "\n", "assert", "(", "self", ".", "hidden_act", "==", "\"relu\"", ")", "\n", "intermediate", "=", "intermediate", ".", "next", "(", "EdgeRelu", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "intermediate", ")", ")", "\n", "\n", "dense", "=", "intermediate", ".", "next", "(", "EdgeDense", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "intermediate", ",", "dense", "=", "layer", ".", "output", ".", "dense", "\n", ")", ",", "dim", "=", "layer", ".", "output", ".", "dense", ".", "weight", ".", "shape", "[", "0", "]", ")", "\n", "\n", "dense_residual", "=", "Layer", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "dense", ".", "length", ",", "dense", ".", "dim", ")", "\n", "dense_residual", ".", "add_edge", "(", "EdgeDirect", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "dense", ")", ")", "\n", "dense_residual", ".", "add_edge", "(", "EdgeDirect", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "attention", ")", ")", "\n", "dense_residual", ".", "compute", "(", ")", "\n", "\n", "output", "=", "self", ".", "_bound_layer_normalization", "(", "dense_residual", ",", "layer", ".", "output", ".", "LayerNorm", ")", "\n", "\n", "return", "attention_scores", ",", "attention_probs", ",", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward._bound_attention": [[157, 266], ["bounds_input.next", "bounds_input.next", "bounds_input.next", "EdgeDense", "EdgeDense", "EdgeDense", "Verifiers.Bounds.Bounds", "Verifiers.Bounds.Bounds", "Verifiers.Bounds.Bounds", "VerifierBackward.VerifierBackward._bound_attention.transpose_for_scores"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfAttention.transpose_for_scores"], ["", "def", "_bound_attention", "(", "self", ",", "bounds_input", ",", "attention", ")", ":", "\n", "        ", "num_attention_heads", "=", "attention", ".", "self", ".", "num_attention_heads", "\n", "attention_head_size", "=", "attention", ".", "self", ".", "attention_head_size", "\n", "\n", "query", "=", "bounds_input", ".", "next", "(", "EdgeDense", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "bounds_input", ",", "dense", "=", "attention", ".", "self", ".", "query", ")", ")", "\n", "key", "=", "bounds_input", ".", "next", "(", "EdgeDense", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "bounds_input", ",", "dense", "=", "attention", ".", "self", ".", "key", ")", ")", "\n", "value", "=", "bounds_input", ".", "next", "(", "EdgeDense", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "bounds_input", ",", "dense", "=", "attention", ".", "self", ".", "value", ")", ")", "\n", "\n", "if", "self", ".", "use_forward", ":", "\n", "            ", "query", "=", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ".", "p", ",", "self", ".", "controller", ".", "eps", ",", "\n", "lw", "=", "query", ".", "final_lw", ".", "unsqueeze", "(", "0", ")", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ",", "lb", "=", "query", ".", "final_lb", ".", "unsqueeze", "(", "0", ")", ",", "\n", "uw", "=", "query", ".", "final_uw", ".", "unsqueeze", "(", "0", ")", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ",", "ub", "=", "query", ".", "final_ub", ".", "unsqueeze", "(", "0", ")", "\n", ")", "\n", "\n", "key", "=", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ".", "p", ",", "self", ".", "controller", ".", "eps", ",", "\n", "lw", "=", "key", ".", "final_lw", ".", "unsqueeze", "(", "0", ")", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ",", "lb", "=", "key", ".", "final_lb", ".", "unsqueeze", "(", "0", ")", ",", "\n", "uw", "=", "key", ".", "final_uw", ".", "unsqueeze", "(", "0", ")", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ",", "ub", "=", "key", ".", "final_ub", ".", "unsqueeze", "(", "0", ")", "\n", ")", "\n", "\n", "value", "=", "Bounds", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ".", "p", ",", "self", ".", "controller", ".", "eps", ",", "\n", "lw", "=", "value", ".", "final_lw", ".", "unsqueeze", "(", "0", ")", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ",", "lb", "=", "value", ".", "final_lb", ".", "unsqueeze", "(", "0", ")", ",", "\n", "uw", "=", "value", ".", "final_uw", ".", "unsqueeze", "(", "0", ")", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ",", "ub", "=", "value", ".", "final_ub", ".", "unsqueeze", "(", "0", ")", "\n", ")", "\n", "\n", "# copied from the forward framework", "\n", "def", "transpose_for_scores", "(", "x", ")", ":", "\n", "                ", "def", "transpose_w", "(", "x", ")", ":", "\n", "                    ", "return", "x", ".", "reshape", "(", "\n", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "\n", "num_attention_heads", ",", "attention_head_size", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ",", "4", ")", ".", "reshape", "(", "-", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "attention_head_size", ")", "\n", "", "def", "transpose_b", "(", "x", ")", ":", "\n", "                    ", "return", "x", ".", "reshape", "(", "\n", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "num_attention_heads", ",", "attention_head_size", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ".", "reshape", "(", "-", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "attention_head_size", ")", "\n", "", "x", ".", "lw", "=", "transpose_w", "(", "x", ".", "lw", ")", "\n", "x", ".", "uw", "=", "transpose_w", "(", "x", ".", "uw", ")", "\n", "x", ".", "lb", "=", "transpose_b", "(", "x", ".", "lb", ")", "\n", "x", ".", "ub", "=", "transpose_b", "(", "x", ".", "ub", ")", "\n", "x", ".", "update_shape", "(", ")", "\n", "\n", "", "transpose_for_scores", "(", "query", ")", "\n", "transpose_for_scores", "(", "key", ")", "\n", "\n", "# ignoring the attention mask", "\n", "attention_scores", "=", "query", ".", "dot_product", "(", "key", ",", "verbose", "=", "self", ".", "verbose", ")", ".", "multiply", "(", "1.", "/", "math", ".", "sqrt", "(", "attention_head_size", ")", ")", "\n", "\n", "del", "(", "query", ")", "\n", "del", "(", "key", ")", "\n", "attention_probs", "=", "attention_scores", ".", "softmax", "(", "verbose", "=", "self", ".", "verbose", ")", "\n", "\n", "transpose_for_scores", "(", "value", ")", "\n", "\n", "context", "=", "attention_probs", ".", "context", "(", "value", ")", "\n", "\n", "def", "transpose_back", "(", "x", ")", ":", "\n", "                ", "def", "transpose_w", "(", "x", ")", ":", "\n", "                    ", "return", "x", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "reshape", "(", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "-", "1", ")", "\n", "", "def", "transpose_b", "(", "x", ")", ":", "\n", "                    ", "return", "x", ".", "permute", "(", "1", ",", "0", ",", "2", ")", ".", "reshape", "(", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "\n", "", "x", ".", "lw", "=", "transpose_w", "(", "x", ".", "lw", ")", "\n", "x", ".", "uw", "=", "transpose_w", "(", "x", ".", "uw", ")", "\n", "x", ".", "lb", "=", "transpose_b", "(", "x", ".", "lb", ")", "\n", "x", ".", "ub", "=", "transpose_b", "(", "x", ".", "ub", ")", "\n", "x", ".", "update_shape", "(", ")", "\n", "\n", "", "transpose_back", "(", "context", ")", "\n", "\n", "context", "=", "Layer", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "bounds_input", ".", "length", ",", "bounds_input", ".", "dim", ",", "\n", "bounds", "=", "context", "\n", ")", "\n", "\n", "attention_scores", ".", "l", ",", "attention_scores", ".", "u", "=", "attention_scores", ".", "concretize", "(", ")", "\n", "attention_probs", ".", "l", ",", "attention_probs", ".", "u", "=", "attention_probs", ".", "concretize", "(", ")", "\n", "attention_scores", ".", "l", "=", "attention_scores", ".", "l", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "bounds_input", ".", "length", ",", "-", "1", ")", "\n", "attention_scores", ".", "u", "=", "attention_scores", ".", "u", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "bounds_input", ".", "length", ",", "-", "1", ")", "\n", "attention_probs", ".", "l", "=", "attention_probs", ".", "l", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "bounds_input", ".", "length", ",", "-", "1", ")", "\n", "attention_probs", ".", "u", "=", "attention_probs", ".", "u", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "bounds_input", ".", "length", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "attention_scores", "=", "query", ".", "next", "(", "EdgeDotProduct", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "query", ",", "key", ",", "num_attention_heads", ")", ",", "\n", "dim", "=", "num_attention_heads", "*", "query", ".", "length", ")", "\n", "\n", "attention_scores", "=", "attention_scores", ".", "next", "(", "EdgeLinear", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "attention_scores", ",", "w", "=", "1.", "/", "math", ".", "sqrt", "(", "attention_head_size", ")", ",", "b", "=", "0.", ")", ")", "\n", "\n", "attention_probs", "=", "attention_scores", ".", "next", "(", "EdgeSoftmax", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "attention_scores", ",", "num_attention_heads", "\n", ")", ")", "\n", "\n", "dim_out", "=", "value", ".", "dim", "\n", "value", "=", "value", ".", "next", "(", "EdgeTranspose", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "value", ",", "num_attention_heads", "\n", ")", ",", "length", "=", "attention_head_size", ",", "dim", "=", "num_attention_heads", "*", "value", ".", "length", ")", "\n", "context", "=", "attention_probs", ".", "next", "(", "EdgeDotProduct", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "attention_probs", ",", "value", ",", "num_attention_heads", "\n", ")", ",", "dim", "=", "dim_out", ")", "\n", "\n", "", "return", "attention_scores", ",", "attention_probs", ",", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward._bound_pooling": [[267, 277], ["bounds.next.next.next", "bounds.next.next.next", "EdgeDense", "EdgeTanh"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next"], ["", "def", "_bound_pooling", "(", "self", ",", "bounds", ",", "pooler", ")", ":", "\n", "        ", "bounds", "=", "bounds", ".", "next", "(", "EdgeDense", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "bounds", ",", "dense", "=", "pooler", ".", "dense", "\n", ")", ")", "\n", "\n", "bounds", "=", "bounds", ".", "next", "(", "EdgeTanh", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "bounds", "\n", ")", ")", "\n", "\n", "return", "bounds", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierBackward.VerifierBackward._bound_classifier": [[278, 296], ["copy.deepcopy", "bounds.next.next.next", "EdgeDense", "print"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "def", "_bound_classifier", "(", "self", ",", "bounds", ",", "classifier", ",", "label", ")", ":", "\n", "        ", "classifier", "=", "copy", ".", "deepcopy", "(", "classifier", ")", "\n", "classifier", ".", "weight", "[", "0", ",", ":", "]", "-=", "classifier", ".", "weight", "[", "1", ",", ":", "]", "\n", "classifier", ".", "bias", "[", "0", "]", "-=", "classifier", ".", "bias", "[", "1", "]", "\n", "\n", "bounds", "=", "bounds", ".", "next", "(", "EdgeDense", "(", "\n", "self", ".", "args", ",", "self", ".", "controller", ",", "bounds", ",", "dense", "=", "classifier", "\n", ")", ",", "dim", "=", "classifier", ".", "weight", ".", "shape", "[", "0", "]", ")", "\n", "\n", "if", "label", "==", "0", ":", "\n", "            ", "safe", "=", "bounds", ".", "l", "[", "0", "]", "[", "0", "]", ">", "0", "\n", "", "else", ":", "\n", "            ", "safe", "=", "bounds", ".", "u", "[", "0", "]", "[", "0", "]", "<", "0", "\n", "\n", "", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "\"Safe\"", "if", "safe", "else", "\"Unsafe\"", ")", "\n", "\n", "", "return", "safe", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.__init__": [[7, 14], ["float"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "eps", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "layers", "=", "[", "]", "\n", "self", ".", "p", "=", "args", ".", "p", "\n", "self", ".", "q", "=", "1.", "/", "(", "1.", "-", "1.", "/", "args", ".", "p", ")", "if", "args", ".", "p", "!=", "1", "else", "float", "(", "\"inf\"", ")", "# dual norm", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "perturbed_words", "=", "args", ".", "perturbed_words", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append": [[15, 17], ["Controller.Controller.layers.append"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append"], ["", "def", "append", "(", "self", ",", "layer", ")", ":", "\n", "        ", "self", ".", "layers", ".", "append", "(", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.compute": [[18, 26], ["torch.zeros().cuda", "Controller.Controller.lb.clone", "torch.zeros", "layer.backward"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward"], ["", "def", "compute", "(", "self", ",", "length", ",", "dim", ")", ":", "\n", "        ", "self", ".", "lb", "=", "torch", ".", "zeros", "(", "length", ",", "dim", ")", ".", "cuda", "(", ")", "\n", "self", ".", "ub", "=", "self", ".", "lb", ".", "clone", "(", ")", "\n", "self", ".", "final_lw", "=", "self", ".", "final_uw", "=", "None", "\n", "self", ".", "final_lb", "=", "self", ".", "final_ub", "=", "None", "\n", "for", "layer", "in", "self", ".", "layers", "[", ":", ":", "-", "1", "]", ":", "\n", "            ", "if", "layer", ".", "lw", "is", "not", "None", ":", "\n", "                ", "layer", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_l": [[27, 29], ["torch.norm"], "methods", ["None"], ["", "", "", "def", "concretize_l", "(", "self", ",", "lw", "=", "None", ")", ":", "\n", "        ", "return", "-", "self", ".", "eps", "*", "torch", ".", "norm", "(", "lw", ",", "p", "=", "self", ".", "q", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_u": [[30, 32], ["torch.norm"], "methods", ["None"], ["", "def", "concretize_u", "(", "self", ",", "uw", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "eps", "*", "torch", ".", "norm", "(", "uw", ",", "p", "=", "self", ".", "q", ",", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize": [[33, 44], ["len", "Controller.Controller.concretize_l", "Controller.Controller.concretize_l", "Controller.Controller.concretize_u", "Controller.Controller.concretize_u", "Controller.Controller.concretize_l", "Controller.Controller.concretize_u"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_l", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_l", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_u", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_u", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_l", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize_u"], ["", "def", "concretize", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "if", "self", ".", "perturbed_words", "==", "2", ":", "\n", "            ", "assert", "(", "len", "(", "lw", ".", "shape", ")", "==", "3", ")", "\n", "half", "=", "lw", ".", "shape", "[", "-", "1", "]", "//", "2", "\n", "return", "self", ".", "concretize_l", "(", "lw", "[", ":", ",", ":", ",", ":", "half", "]", ")", "+", "self", ".", "concretize_l", "(", "lw", "[", ":", ",", ":", ",", "half", ":", "]", ")", ",", "self", ".", "concretize_u", "(", "uw", "[", ":", ",", ":", ",", ":", "half", "]", ")", "+", "self", ".", "concretize_u", "(", "uw", "[", ":", ",", ":", ",", "half", ":", "]", ")", "\n", "", "elif", "self", ".", "perturbed_words", "==", "1", ":", "\n", "            ", "return", "self", ".", "concretize_l", "(", "lw", ")", ",", "self", ".", "concretize_u", "(", "uw", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "", "", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check": [[6, 32], ["torch.sum", "float", "print", "bounds.concretize", "len", "torch.gt().to", "torch.lt().to", "torch.mean", "print", "torch.gt().to", "torch.lt().to", "range", "torch.gt", "torch.lt", "range", "torch.gt", "torch.lt", "print", "print"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["def", "check", "(", "name", ",", "bounds", "=", "None", ",", "l", "=", "None", ",", "u", "=", "None", ",", "std", "=", "None", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "if", "verbose", ":", "\n", "        ", "print", "(", "\"Check \"", ",", "name", ")", "\n", "", "eps", "=", "1e-4", "\n", "if", "bounds", "is", "not", "None", ":", "\n", "        ", "l", ",", "u", "=", "bounds", ".", "concretize", "(", ")", "\n", "", "if", "len", "(", "l", ".", "shape", ")", "==", "3", ":", "\n", "        ", "l", ",", "u", ",", "std", "=", "l", "[", "0", "]", ",", "u", "[", "0", "]", ",", "std", "[", "0", "]", "\n", "", "c", "=", "torch", ".", "gt", "(", "l", "-", "eps", ",", "std", ")", ".", "to", "(", "torch", ".", "float", ")", "+", "torch", ".", "lt", "(", "u", "+", "eps", ",", "std", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "if", "bounds", "is", "not", "None", ":", "\n", "        ", "c", "+=", "torch", ".", "gt", "(", "bounds", ".", "lb", "[", "0", "]", "-", "eps", ",", "std", ")", ".", "to", "(", "torch", ".", "float", ")", "+", "torch", ".", "lt", "(", "bounds", ".", "ub", "[", "0", "]", "+", "eps", ",", "std", ")", ".", "to", "(", "torch", ".", "float", ")", "\n", "", "errors", "=", "torch", ".", "sum", "(", "c", ")", "\n", "score", "=", "float", "(", "torch", ".", "mean", "(", "u", "-", "l", ")", ")", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "\"%d errors, %.5f average range\"", "%", "(", "errors", ",", "score", ")", ")", "\n", "if", "errors", ">", "0", ":", "\n", "            ", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "c", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "c", ".", "shape", "[", "1", "]", ")", ":", "\n", "                    ", "if", "c", "[", "i", "]", "[", "j", "]", ">", "0", ":", "\n", "                        ", "print", "(", "i", ",", "j", ")", "\n", "print", "(", "l", "[", "i", "]", "[", "j", "]", ",", "u", "[", "i", "]", "[", "j", "]", ",", "std", "[", "i", "]", "[", "j", "]", ")", "\n", "cnt", "+=", "1", "\n", "if", "cnt", ">=", "10", ":", "\n", "                            ", "assert", "(", "0", ")", "\n", "", "", "", "", "", "", "assert", "(", "errors", "==", "0", ")", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.__init__": [[13, 47], ["Layer.Layer.controller.append", "bounds.concretize", "bounds.lw.transpose", "bounds.uw.transpose"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "controller", ",", "length", ",", "dim", ",", "bounds", "=", "None", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "controller", "=", "controller", "\n", "self", ".", "length", "=", "length", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "use_forward", "=", "args", ".", "method", "==", "\"baf\"", "\n", "self", ".", "parents", "=", "[", "]", "\n", "self", ".", "l", "=", "self", ".", "u", "=", "None", "\n", "# for back propagation", "\n", "self", ".", "lw", "=", "self", ".", "uw", "=", "None", "\n", "# bounds of the layer ", "\n", "self", ".", "final_lw", "=", "self", ".", "final_uw", "=", "None", "\n", "self", ".", "final_lb", "=", "self", ".", "final_ub", "=", "None", "\n", "self", ".", "empty_cache", "=", "args", ".", "empty_cache", "\n", "self", ".", "controller", ".", "append", "(", "self", ")", "\n", "\n", "# bounds obtained from the forward framework", "\n", "if", "bounds", "is", "not", "None", ":", "\n", "            ", "self", ".", "back", "=", "False", "\n", "self", ".", "bounds", "=", "bounds", "\n", "\n", "self", ".", "l", ",", "self", ".", "u", "=", "bounds", ".", "concretize", "(", ")", "\n", "self", ".", "final_lw", ",", "self", ".", "final_lb", "=", "bounds", ".", "lw", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ",", "bounds", ".", "lb", "\n", "self", ".", "final_uw", ",", "self", ".", "final_ub", "=", "bounds", ".", "uw", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ",", "bounds", ".", "ub", "\n", "\n", "# incompatible format (batch)", "\n", "self", ".", "l", "=", "self", ".", "l", "[", "0", "]", "\n", "self", ".", "u", "=", "self", ".", "u", "[", "0", "]", "\n", "self", ".", "final_lw", "=", "self", ".", "final_lw", "[", "0", "]", "\n", "self", ".", "final_lb", "=", "self", ".", "final_lb", "[", "0", "]", "\n", "self", ".", "final_uw", "=", "self", ".", "final_uw", "[", "0", "]", "\n", "self", ".", "final_ub", "=", "self", ".", "final_ub", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "back", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print": [[48, 56], ["Layer.Layer.print"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "", "def", "print", "(", "self", ",", "message", ")", ":", "\n", "        ", "print", "(", "message", ")", "\n", "print", "(", "\"shape (%d, %d)\"", "%", "(", "self", ".", "length", ",", "self", ".", "dim", ")", ")", "\n", "print", "(", "\"mean abs %.5f %.5f\"", "%", "(", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "l", ")", ")", ",", "torch", ".", "mean", "(", "torch", ".", "abs", "(", "self", ".", "u", ")", ")", ")", ")", "\n", "print", "(", "\"diff %.5f %.5f %.5f\"", "%", "(", "torch", ".", "min", "(", "self", ".", "u", "-", "self", ".", "l", ")", ",", "torch", ".", "max", "(", "self", ".", "u", "-", "self", ".", "l", ")", ",", "torch", ".", "mean", "(", "self", ".", "u", "-", "self", ".", "l", ")", ")", ")", "\n", "print", "(", "\"min\"", ",", "torch", ".", "min", "(", "self", ".", "l", ")", ")", "\n", "print", "(", "\"max\"", ",", "torch", ".", "max", "(", "self", ".", "u", ")", ")", "\n", "print", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.add_edge": [[57, 59], ["Layer.Layer.parents.append"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append"], ["", "def", "add_edge", "(", "self", ",", "edge", ")", ":", "\n", "        ", "self", ".", "parents", ".", "append", "(", "edge", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next": [[60, 69], ["Layer.Layer", "Layer.add_edge", "Layer.compute"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.add_edge", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.compute"], ["", "def", "next", "(", "self", ",", "edge", ",", "length", "=", "None", ",", "dim", "=", "None", ")", ":", "\n", "        ", "if", "length", "is", "None", ":", "\n", "            ", "length", "=", "self", ".", "length", "\n", "", "if", "dim", "is", "None", ":", "\n", "            ", "dim", "=", "self", ".", "dim", "\n", "", "layer", "=", "Layer", "(", "self", ".", "args", ",", "self", ".", "controller", ",", "length", ",", "dim", ")", "\n", "layer", ".", "add_edge", "(", "edge", ")", "\n", "layer", ".", "compute", "(", ")", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.compute": [[70, 82], ["Layer.Layer.lw.clone", "Layer.Layer.controller.compute", "torch.eye().cuda().reshape().repeat", "torch.eye().cuda().reshape().repeat", "torch.eye().cuda().reshape().repeat", "torch.eye().cuda().reshape().repeat", "torch.eye().cuda().reshape", "torch.eye().cuda().reshape", "torch.eye().cuda().reshape", "torch.eye().cuda().reshape", "torch.eye().cuda().reshape", "torch.eye().cuda().reshape", "torch.eye().cuda().reshape", "torch.eye().cuda().reshape", "torch.eye().cuda", "torch.eye().cuda", "torch.eye().cuda", "torch.eye().cuda", "torch.eye().cuda", "torch.eye().cuda", "torch.eye().cuda", "torch.eye().cuda", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.compute"], ["", "def", "compute", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "use_forward", ":", "\n", "            ", "self", ".", "lw", "=", "torch", ".", "eye", "(", "self", ".", "dim", ")", ".", "cuda", "(", ")", ".", "reshape", "(", "1", ",", "self", ".", "dim", ",", "self", ".", "dim", ")", ".", "repeat", "(", "self", ".", "length", ",", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "lw", "=", "torch", ".", "eye", "(", "self", ".", "length", "*", "self", ".", "dim", ")", ".", "cuda", "(", ")", ".", "reshape", "(", "self", ".", "length", ",", "self", ".", "dim", ",", "self", ".", "length", ",", "self", ".", "dim", ")", "\n", "", "self", ".", "uw", "=", "self", ".", "lw", ".", "clone", "(", ")", "\n", "self", ".", "controller", ".", "compute", "(", "self", ".", "length", ",", "self", ".", "dim", ")", "\n", "self", ".", "l", ",", "self", ".", "u", "=", "self", ".", "controller", ".", "lb", ",", "self", ".", "controller", ".", "ub", "\n", "self", ".", "final_lw", ",", "self", ".", "final_uw", "=", "self", ".", "controller", ".", "final_lw", ",", "self", ".", "controller", ".", "final_uw", "\n", "self", ".", "final_lb", ",", "self", ".", "final_ub", "=", "self", ".", "controller", ".", "final_lb", ",", "self", ".", "controller", ".", "final_ub", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward_buffer": [[83, 89], ["None"], "methods", ["None"], ["", "def", "backward_buffer", "(", "self", ",", "lw", ",", "uw", ")", ":", "\n", "        ", "if", "self", ".", "lw", "is", "None", ":", "\n", "            ", "self", ".", "lw", ",", "self", ".", "uw", "=", "lw", ",", "uw", "\n", "", "else", ":", "\n", "            ", "self", ".", "lw", "+=", "lw", "\n", "self", ".", "uw", "+=", "uw", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward": [[90, 117], ["Layer.Layer.bounds.matmul().add", "Layer.Layer.bounds.matmul().add", "Verifiers.Bounds.Bounds", "Verifiers.Bounds.Bounds.lw[].transpose", "Verifiers.Bounds.Bounds.uw[].transpose", "Verifiers.Bounds.Bounds.concretize", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "edge.backward", "Layer.Layer.controller.lb.unsqueeze", "Layer.Layer.controller.ub.unsqueeze", "Layer.Layer.bounds.matmul", "Layer.Layer.bounds.matmul"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul"], ["", "", "def", "backward", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "back", ":", "\n", "            ", "for", "edge", "in", "self", ".", "parents", ":", "\n", "                ", "edge", ".", "backward", "(", "self", ".", "lw", ",", "self", ".", "uw", ")", "\n", "", "", "else", ":", "\n", "            ", "bounds_l", "=", "self", ".", "bounds", ".", "matmul", "(", "self", ".", "lw", ")", ".", "add", "(", "self", ".", "controller", ".", "lb", ".", "unsqueeze", "(", "0", ")", ")", "\n", "bounds_u", "=", "self", ".", "bounds", ".", "matmul", "(", "self", ".", "uw", ")", ".", "add", "(", "self", ".", "controller", ".", "ub", ".", "unsqueeze", "(", "0", ")", ")", "\n", "bounds", "=", "Bounds", "(", "\n", "bounds_l", ".", "args", ",", "bounds_l", ".", "p", ",", "bounds_l", ".", "eps", ",", "\n", "lw", "=", "bounds_l", ".", "lw", ",", "lb", "=", "bounds_l", ".", "lb", ",", "\n", "uw", "=", "bounds_u", ".", "uw", ",", "ub", "=", "bounds_u", ".", "ub", "\n", ")", "\n", "self", ".", "controller", ".", "final_lw", "=", "bounds", ".", "lw", "[", "0", "]", ".", "transpose", "(", "1", ",", "2", ")", "\n", "self", ".", "controller", ".", "final_uw", "=", "bounds", ".", "uw", "[", "0", "]", ".", "transpose", "(", "1", ",", "2", ")", "\n", "self", ".", "controller", ".", "final_lb", "=", "bounds", ".", "lb", "[", "0", "]", "\n", "self", ".", "controller", ".", "final_ub", "=", "bounds", ".", "ub", "[", "0", "]", "\n", "self", ".", "controller", ".", "lb", ",", "self", ".", "controller", ".", "ub", "=", "bounds", ".", "concretize", "(", ")", "\n", "self", ".", "controller", ".", "lb", "=", "self", ".", "controller", ".", "lb", "[", "0", "]", "\n", "self", ".", "controller", ".", "ub", "=", "self", ".", "controller", ".", "ub", "[", "0", "]", "\n", "\n", "", "del", "(", "self", ".", "lw", ")", "\n", "del", "(", "self", ".", "uw", ")", "\n", "if", "self", ".", "empty_cache", ":", "\n", "            ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "", "self", ".", "lw", ",", "self", ".", "uw", "=", "None", ",", "None", "", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.__init__": [[12, 15], ["Verifiers.Verifier.__init__"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "target", ",", "logger", ")", ":", "\n", "        ", "super", "(", "VerifierForward", ",", "self", ")", ".", "__init__", "(", "args", ",", "target", ",", "logger", ")", "\n", "self", ".", "ibp", "=", "args", ".", "method", "==", "\"ibp\"", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward.verify_safety": [[16, 49], ["torch.no_grad", "VerifierForward.VerifierForward._bound_input", "Verifiers.utils.check", "enumerate", "VerifierForward.VerifierForward._bound_pooling", "Verifiers.utils.check", "VerifierForward.VerifierForward._bound_classifier", "print", "VerifierForward.VerifierForward.print", "VerifierForward.VerifierForward._bound_layer", "Verifiers.utils.check", "Verifiers.utils.check", "Verifiers.utils.check", "print", "print"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_input", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_pooling", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_classifier", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_layer", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.utils.check", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "def", "verify_safety", "(", "self", ",", "example", ",", "embeddings", ",", "index", ",", "eps", ")", ":", "\n", "        ", "errorType", "=", "OSError", "if", "self", ".", "debug", "else", "AssertionError", "\n", "\n", "try", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "bounds", "=", "self", ".", "_bound_input", "(", "embeddings", ",", "index", "=", "index", ",", "eps", "=", "eps", ")", "# hard-coded yet", "\n", "\n", "check", "(", "\"embedding\"", ",", "bounds", "=", "bounds", ",", "std", "=", "self", ".", "std", "[", "\"embedding_output\"", "]", ",", "verbose", "=", "self", ".", "verbose", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "                    ", "bounds", ".", "print", "(", "\"embedding\"", ")", "\n", "\n", "", "for", "i", ",", "layer", "in", "enumerate", "(", "self", ".", "encoding_layers", ")", ":", "\n", "                    ", "attention_scores", ",", "attention_probs", ",", "bounds", "=", "self", ".", "_bound_layer", "(", "bounds", ",", "layer", ")", "\n", "\n", "check", "(", "\"layer %d attention_scores\"", "%", "i", ",", "\n", "bounds", "=", "attention_scores", ",", "std", "=", "self", ".", "std", "[", "\"attention_scores\"", "]", "[", "i", "]", "[", "0", "]", ",", "verbose", "=", "self", ".", "verbose", ")", "\n", "check", "(", "\"layer %d attention_probs\"", "%", "i", ",", "\n", "bounds", "=", "attention_probs", ",", "std", "=", "self", ".", "std", "[", "\"attention_probs\"", "]", "[", "i", "]", "[", "0", "]", ",", "verbose", "=", "self", ".", "verbose", ")", "\n", "check", "(", "\"layer %d\"", "%", "i", ",", "bounds", "=", "bounds", ",", "std", "=", "self", ".", "std", "[", "\"encoded_layers\"", "]", "[", "i", "]", ",", "verbose", "=", "self", ".", "verbose", ")", "\n", "\n", "", "bounds", "=", "self", ".", "_bound_pooling", "(", "bounds", ",", "self", ".", "pooler", ")", "\n", "check", "(", "\"pooled output\"", ",", "bounds", "=", "bounds", ",", "std", "=", "self", ".", "std", "[", "\"pooled_output\"", "]", ",", "verbose", "=", "self", ".", "verbose", ")", "\n", "\n", "safety", "=", "self", ".", "_bound_classifier", "(", "bounds", ",", "self", ".", "classifier", ",", "example", "[", "\"label\"", "]", ")", "\n", "\n", "return", "safety", "\n", "", "", "except", "errorType", "as", "err", ":", "# for debug", "\n", "            ", "if", "self", ".", "verbose", ":", "\n", "                ", "print", "(", "\"Warning: failed assertion\"", ")", "\n", "print", "(", "err", ")", "\n", "", "print", "(", "\"Warning: failed assertion\"", ",", "eps", ")", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_input": [[50, 80], ["torch.zeros().to", "torch.zeros().to.unsqueeze", "torch.zeros().to.unsqueeze.clone", "lb.unsqueeze.unsqueeze.unsqueeze", "ub.unsqueeze.unsqueeze.unsqueeze", "Verifiers.Bounds.Bounds", "bounds.layer_norm.layer_norm.layer_norm", "b.clone", "torch.zeros", "torch.eye().to", "range", "range", "torch.eye().to", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.layer_norm", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.clone"], ["", "", "def", "_bound_input", "(", "self", ",", "embeddings", ",", "index", ",", "eps", ")", ":", "\n", "        ", "length", ",", "dim", "=", "embeddings", ".", "shape", "[", "1", "]", ",", "embeddings", ".", "shape", "[", "2", "]", "\n", "\n", "w", "=", "torch", ".", "zeros", "(", "(", "length", ",", "dim", "*", "self", ".", "perturbed_words", ",", "dim", ")", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "b", "=", "embeddings", "[", "0", "]", "\n", "lb", ",", "ub", "=", "b", ",", "b", ".", "clone", "(", ")", "\n", "\n", "if", "self", ".", "perturbed_words", "==", "1", ":", "\n", "            ", "if", "self", ".", "ibp", ":", "\n", "                ", "lb", "[", "index", "]", ",", "ub", "[", "index", "]", "=", "lb", "[", "index", "]", "-", "eps", ",", "ub", "[", "index", "]", "+", "eps", "\n", "", "else", ":", "\n", "                ", "w", "[", "index", "]", "=", "torch", ".", "eye", "(", "dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "ibp", ":", "\n", "                ", "for", "i", "in", "range", "(", "self", ".", "perturbed_words", ")", ":", "\n", "                    ", "lb", "[", "index", "[", "i", "]", "]", ",", "ub", "[", "index", "[", "i", "]", "]", "=", "lb", "[", "index", "[", "i", "]", "]", "-", "eps", ",", "ub", "[", "index", "[", "i", "]", "]", "+", "eps", "\n", "", "", "else", ":", "\n", "                ", "for", "i", "in", "range", "(", "self", ".", "perturbed_words", ")", ":", "\n", "                    ", "w", "[", "index", "[", "i", "]", ",", "(", "dim", "*", "i", ")", ":", "(", "dim", "*", "(", "i", "+", "1", ")", ")", ",", ":", "]", "=", "torch", ".", "eye", "(", "dim", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "", "", "lw", "=", "w", ".", "unsqueeze", "(", "0", ")", "\n", "uw", "=", "lw", ".", "clone", "(", ")", "\n", "lb", "=", "lb", ".", "unsqueeze", "(", "0", ")", "\n", "ub", "=", "ub", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "bounds", "=", "Bounds", "(", "self", ".", "args", ",", "self", ".", "p", ",", "eps", ",", "lw", "=", "lw", ",", "lb", "=", "lb", ",", "uw", "=", "uw", ",", "ub", "=", "ub", ")", "\n", "\n", "bounds", "=", "bounds", ".", "layer_norm", "(", "self", ".", "embeddings", ".", "LayerNorm", ",", "self", ".", "layer_norm", ")", "\n", "\n", "return", "bounds", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_layer": [[81, 120], ["time.time", "VerifierForward.VerifierForward._bound_attention", "attention.add().layer_norm.add().layer_norm.dense", "attention.add().layer_norm.add().layer_norm.add().layer_norm", "attention.add().layer_norm.add().layer_norm.dense().act", "attention.add().layer_norm.dense().act.dense().add", "attention.dense().act.dense().add.layer_norm", "attention.add().layer_norm.add().layer_norm.print", "attention.add().layer_norm.add().layer_norm.dense().print", "print", "time.time", "attention.add().layer_norm.dense().act.print", "time.time", "print", "attention.dense().act.dense().add.print", "intermediate.dense().add.layer_norm.print", "time.time", "attention.add().layer_norm.add().layer_norm.add", "torch.norm", "attention.add().layer_norm.add().layer_norm.dense", "attention.add().layer_norm.dense().act.dense", "torch.norm", "attention.add().layer_norm.add().layer_norm.dense"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_attention", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.layer_norm", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.act", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.layer_norm", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.add", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense"], ["", "def", "_bound_layer", "(", "self", ",", "bounds_input", ",", "layer", ")", ":", "\n", "        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "# main self-attention", "\n", "attention_scores", ",", "attention_probs", ",", "attention", "=", "self", ".", "_bound_attention", "(", "bounds_input", ",", "layer", ".", "attention", ")", "\n", "\n", "attention", "=", "attention", ".", "dense", "(", "layer", ".", "attention", ".", "output", ".", "dense", ")", "\n", "attention", "=", "attention", ".", "add", "(", "bounds_input", ")", ".", "layer_norm", "(", "layer", ".", "attention", ".", "output", ".", "LayerNorm", ",", "self", ".", "layer_norm", ")", "\n", "del", "(", "bounds_input", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "attention", ".", "print", "(", "\"after attention layernorm\"", ")", "\n", "attention", ".", "dense", "(", "layer", ".", "intermediate", ".", "dense", ")", ".", "print", "(", "\"intermediate pre-activation\"", ")", "\n", "print", "(", "\"dense norm\"", ",", "torch", ".", "norm", "(", "layer", ".", "intermediate", ".", "dense", ".", "weight", ",", "p", "=", "self", ".", "p", ")", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "intermediate", "=", "attention", ".", "dense", "(", "layer", ".", "intermediate", ".", "dense", ")", ".", "act", "(", "self", ".", "hidden_act", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "intermediate", ".", "print", "(", "\"intermediate\"", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "dense", "=", "intermediate", ".", "dense", "(", "layer", ".", "output", ".", "dense", ")", ".", "add", "(", "attention", ")", "\n", "del", "(", "intermediate", ")", "\n", "del", "(", "attention", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "\"dense norm\"", ",", "torch", ".", "norm", "(", "layer", ".", "output", ".", "dense", ".", "weight", ",", "p", "=", "self", ".", "p", ")", ")", "\n", "dense", ".", "print", "(", "\"output pre layer norm\"", ")", "\n", "\n", "", "output", "=", "dense", ".", "layer_norm", "(", "layer", ".", "output", ".", "LayerNorm", ",", "self", ".", "layer_norm", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "output", ".", "print", "(", "\"output\"", ")", "\n", "# print(\" time\", time.time() - start_time)", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "return", "attention_scores", ",", "attention_probs", ",", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_attention": [[121, 191], ["bounds_input.dense", "bounds_input.dense", "bounds_input.dense", "VerifierForward.VerifierForward._bound_attention.transpose_for_scores"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfAttention.transpose_for_scores"], ["", "def", "_bound_attention", "(", "self", ",", "bounds_input", ",", "attention", ")", ":", "\n", "        ", "num_attention_heads", "=", "attention", ".", "self", ".", "num_attention_heads", "\n", "attention_head_size", "=", "attention", ".", "self", ".", "attention_head_size", "\n", "\n", "query", "=", "bounds_input", ".", "dense", "(", "attention", ".", "self", ".", "query", ")", "\n", "key", "=", "bounds_input", ".", "dense", "(", "attention", ".", "self", ".", "key", ")", "\n", "value", "=", "bounds_input", ".", "dense", "(", "attention", ".", "self", ".", "value", ")", "\n", "\n", "del", "(", "bounds_input", ")", "\n", "\n", "def", "transpose_for_scores", "(", "x", ")", ":", "\n", "            ", "def", "transpose_w", "(", "x", ")", ":", "\n", "                ", "return", "x", ".", "reshape", "(", "\n", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "\n", "num_attention_heads", ",", "attention_head_size", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ",", "4", ")", ".", "reshape", "(", "-", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "attention_head_size", ")", "\n", "", "def", "transpose_b", "(", "x", ")", ":", "\n", "                ", "return", "x", ".", "reshape", "(", "\n", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "num_attention_heads", ",", "attention_head_size", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ".", "reshape", "(", "-", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "attention_head_size", ")", "\n", "", "x", ".", "lw", "=", "transpose_w", "(", "x", ".", "lw", ")", "\n", "x", ".", "uw", "=", "transpose_w", "(", "x", ".", "uw", ")", "\n", "x", ".", "lb", "=", "transpose_b", "(", "x", ".", "lb", ")", "\n", "x", ".", "ub", "=", "transpose_b", "(", "x", ".", "ub", ")", "\n", "x", ".", "update_shape", "(", ")", "\n", "\n", "", "transpose_for_scores", "(", "query", ")", "\n", "transpose_for_scores", "(", "key", ")", "\n", "\n", "# TODO: no attention mask for now (doesn't matter for batch_size=1)", "\n", "attention_scores", "=", "query", ".", "dot_product", "(", "key", ",", "verbose", "=", "self", ".", "verbose", ")", ".", "multiply", "(", "1.", "/", "math", ".", "sqrt", "(", "attention_head_size", ")", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "attention_scores", ".", "print", "(", "\"attention score\"", ")", "\n", "\n", "", "del", "(", "query", ")", "\n", "del", "(", "key", ")", "\n", "attention_probs", "=", "attention_scores", ".", "softmax", "(", "verbose", "=", "self", ".", "verbose", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "attention_probs", ".", "print", "(", "\"attention probs\"", ")", "\n", "\n", "", "transpose_for_scores", "(", "value", ")", "\n", "\n", "context", "=", "attention_probs", ".", "context", "(", "value", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "value", ".", "print", "(", "\"value\"", ")", "\n", "context", ".", "print", "(", "\"context\"", ")", "\n", "\n", "", "def", "transpose_back", "(", "x", ")", ":", "\n", "            ", "def", "transpose_w", "(", "x", ")", ":", "\n", "                ", "return", "x", ".", "permute", "(", "1", ",", "2", ",", "0", ",", "3", ")", ".", "reshape", "(", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "-", "1", ")", "\n", "", "def", "transpose_b", "(", "x", ")", ":", "\n", "                ", "return", "x", ".", "permute", "(", "1", ",", "0", ",", "2", ")", ".", "reshape", "(", "1", ",", "x", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "\n", "", "x", ".", "lw", "=", "transpose_w", "(", "x", ".", "lw", ")", "\n", "x", ".", "uw", "=", "transpose_w", "(", "x", ".", "uw", ")", "\n", "x", ".", "lb", "=", "transpose_b", "(", "x", ".", "lb", ")", "\n", "x", ".", "ub", "=", "transpose_b", "(", "x", ".", "ub", ")", "\n", "x", ".", "update_shape", "(", ")", "\n", "\n", "", "transpose_back", "(", "context", ")", "\n", "\n", "return", "attention_scores", ",", "attention_probs", ",", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_pooling": [[192, 211], ["Verifiers.Bounds.Bounds", "bounds.tanh.tanh.dense", "bounds.tanh.tanh.tanh", "bounds.tanh.tanh.print", "bounds.tanh.tanh.print", "bounds.tanh.tanh.print"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.tanh", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "def", "_bound_pooling", "(", "self", ",", "bounds", ",", "pooler", ")", ":", "\n", "        ", "bounds", "=", "Bounds", "(", "\n", "self", ".", "args", ",", "bounds", ".", "p", ",", "bounds", ".", "eps", ",", "\n", "lw", "=", "bounds", ".", "lw", "[", ":", ",", ":", "1", ",", ":", ",", ":", "]", ",", "lb", "=", "bounds", ".", "lb", "[", ":", ",", ":", "1", ",", ":", "]", ",", "\n", "uw", "=", "bounds", ".", "uw", "[", ":", ",", ":", "1", ",", ":", ",", ":", "]", ",", "ub", "=", "bounds", ".", "ub", "[", ":", ",", ":", "1", ",", ":", "]", "\n", ")", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "bounds", ".", "print", "(", "\"pooling before dense\"", ")", "\n", "\n", "", "bounds", "=", "bounds", ".", "dense", "(", "pooler", ".", "dense", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "bounds", ".", "print", "(", "\"pooling pre-activation\"", ")", "\n", "\n", "", "bounds", "=", "bounds", ".", "tanh", "(", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "bounds", ".", "print", "(", "\"pooling after activation\"", ")", "\n", "", "return", "bounds", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.VerifierForward.VerifierForward._bound_classifier": [[212, 243], ["copy.deepcopy", "bounds.dense.dense.dense", "bounds.dense.dense.concretize", "bounds.dense.dense.print", "print", "print", "print", "bounds.dense.dense.print", "print", "print", "print", "torch.norm", "torch.mean", "torch.mean", "torch.norm", "torch.norm", "bounds.dense.dense.dense"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.concretize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense"], ["", "def", "_bound_classifier", "(", "self", ",", "bounds", ",", "classifier", ",", "label", ")", ":", "\n", "        ", "classifier", "=", "copy", ".", "deepcopy", "(", "classifier", ")", "\n", "classifier", ".", "weight", "[", "0", ",", ":", "]", "-=", "classifier", ".", "weight", "[", "1", ",", ":", "]", "\n", "classifier", ".", "bias", "[", "0", "]", "-=", "classifier", ".", "bias", "[", "1", "]", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "bounds", ".", "print", "(", "\"before dense\"", ")", "\n", "print", "(", "torch", ".", "norm", "(", "classifier", ".", "weight", "[", "0", ",", ":", "]", ")", ")", "\n", "print", "(", "torch", ".", "mean", "(", "torch", ".", "norm", "(", "bounds", ".", "lw", ",", "dim", "=", "-", "2", ")", ")", ")", "\n", "print", "(", "torch", ".", "mean", "(", "torch", ".", "norm", "(", "bounds", ".", "dense", "(", "classifier", ")", ".", "lw", ",", "dim", "=", "-", "2", ")", ")", ")", "\n", "\n", "", "bounds", "=", "bounds", ".", "dense", "(", "classifier", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "bounds", ".", "print", "(", "\"after dense\"", ")", "\n", "\n", "", "l", ",", "u", "=", "bounds", ".", "concretize", "(", ")", "\n", "\n", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "l", "[", "0", "]", "[", "0", "]", "[", "0", "]", ")", "\n", "print", "(", "u", "[", "0", "]", "[", "0", "]", "[", "0", "]", ")", "\n", "\n", "", "if", "label", "==", "0", ":", "\n", "            ", "safe", "=", "l", "[", "0", "]", "[", "0", "]", "[", "0", "]", ">", "0", "\n", "", "else", ":", "\n", "            ", "safe", "=", "u", "[", "0", "]", "[", "0", "]", "[", "0", "]", "<", "0", "\n", "\n", "", "if", "self", ".", "verbose", ":", "\n", "            ", "print", "(", "\"Safe\"", "if", "safe", "else", "\"Unsafe\"", ")", "\n", "\n", "", "return", "safe", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertLayerNorm.__init__": [[41, 48], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.ones", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_size", ",", "eps", "=", "1e-12", ")", ":", "\n", "        ", "\"\"\"Construct a layernorm module in the TF style (epsilon inside the square root).\n        \"\"\"", "\n", "super", "(", "BertLayerNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "hidden_size", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "hidden_size", ")", ")", "\n", "self", ".", "variance_epsilon", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertLayerNorm.forward": [[49, 54], ["x.mean", "torch.sqrt"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "u", "=", "x", ".", "mean", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "s", "=", "(", "x", "-", "u", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "x", "=", "(", "x", "-", "u", ")", "/", "torch", ".", "sqrt", "(", "s", "+", "self", ".", "variance_epsilon", ")", "\n", "return", "self", ".", "weight", "*", "x", "+", "self", ".", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertLayerNormNoVar.__init__": [[56, 63], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.ones", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "hidden_size", ",", "eps", "=", "1e-12", ")", ":", "\n", "        ", "\"\"\"Construct a layernorm module in the TF style (epsilon inside the square root).\n        \"\"\"", "\n", "super", "(", "BertLayerNormNoVar", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "hidden_size", ")", ")", "\n", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "hidden_size", ")", ")", "\n", "self", ".", "variance_epsilon", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertLayerNormNoVar.forward": [[64, 68], ["x.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "u", "=", "x", ".", "mean", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "x", "=", "x", "-", "u", "\n", "return", "self", ".", "weight", "*", "x", "+", "self", ".", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertEmbeddings.__init__": [[72, 85], ["torch.nn.Module.__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Dropout", "hasattr", "modeling.BertLayerNormNoVar", "modeling.BertLayerNorm"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertEmbeddings", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "word_embeddings", "=", "nn", ".", "Embedding", "(", "config", ".", "vocab_size", ",", "config", ".", "hidden_size", ",", "padding_idx", "=", "0", ")", "\n", "self", ".", "position_embeddings", "=", "nn", ".", "Embedding", "(", "config", ".", "max_position_embeddings", ",", "config", ".", "hidden_size", ")", "\n", "self", ".", "token_type_embeddings", "=", "nn", ".", "Embedding", "(", "config", ".", "type_vocab_size", ",", "config", ".", "hidden_size", ")", "\n", "\n", "self", ".", "config", "=", "config", "\n", "\n", "if", "hasattr", "(", "config", ",", "\"layer_norm\"", ")", "and", "config", ".", "layer_norm", "==", "\"no_var\"", ":", "\n", "            ", "self", ".", "LayerNorm", "=", "BertLayerNormNoVar", "(", "config", ".", "hidden_size", ",", "eps", "=", "1e-12", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "LayerNorm", "=", "BertLayerNorm", "(", "config", ".", "hidden_size", ",", "eps", "=", "1e-12", ")", "\n", "", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "config", ".", "hidden_dropout_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertEmbeddings.forward": [[86, 104], ["input_ids.size", "torch.arange", "position_ids.unsqueeze().expand_as.unsqueeze().expand_as.unsqueeze().expand_as", "modeling.BertEmbeddings.word_embeddings", "modeling.BertEmbeddings.position_embeddings", "modeling.BertEmbeddings.token_type_embeddings", "modeling.BertEmbeddings.dropout", "torch.zeros_like", "hasattr", "modeling.BertEmbeddings.LayerNorm", "position_ids.unsqueeze().expand_as.unsqueeze().expand_as.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_ids", ",", "token_type_ids", "=", "None", ")", ":", "\n", "        ", "seq_length", "=", "input_ids", ".", "size", "(", "1", ")", "\n", "position_ids", "=", "torch", ".", "arange", "(", "seq_length", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "input_ids", ".", "device", ")", "\n", "position_ids", "=", "position_ids", ".", "unsqueeze", "(", "0", ")", ".", "expand_as", "(", "input_ids", ")", "\n", "if", "token_type_ids", "is", "None", ":", "\n", "            ", "token_type_ids", "=", "torch", ".", "zeros_like", "(", "input_ids", ")", "\n", "\n", "", "words_embeddings", "=", "self", ".", "word_embeddings", "(", "input_ids", ")", "\n", "position_embeddings", "=", "self", ".", "position_embeddings", "(", "position_ids", ")", "\n", "token_type_embeddings", "=", "self", ".", "token_type_embeddings", "(", "token_type_ids", ")", "\n", "\n", "embeddings", "=", "words_embeddings", "+", "position_embeddings", "+", "token_type_embeddings", "\n", "if", "hasattr", "(", "self", ".", "config", ",", "\"layer_norm\"", ")", "and", "self", ".", "config", ".", "layer_norm", "==", "\"no\"", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "embeddings", "=", "self", ".", "LayerNorm", "(", "embeddings", ")", "\n", "", "embeddings", "=", "self", ".", "dropout", "(", "embeddings", ")", "\n", "return", "embeddings", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfAttention.__init__": [[106, 121], ["torch.nn.Module.__init__", "int", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Dropout", "ValueError"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertSelfAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "config", ".", "hidden_size", "%", "config", ".", "num_attention_heads", "!=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"The hidden size (%d) is not a multiple of the number of attention \"", "\n", "\"heads (%d)\"", "%", "(", "config", ".", "hidden_size", ",", "config", ".", "num_attention_heads", ")", ")", "\n", "", "self", ".", "num_attention_heads", "=", "config", ".", "num_attention_heads", "\n", "self", ".", "attention_head_size", "=", "int", "(", "config", ".", "hidden_size", "/", "config", ".", "num_attention_heads", ")", "\n", "self", ".", "all_head_size", "=", "self", ".", "num_attention_heads", "*", "self", ".", "attention_head_size", "\n", "\n", "self", ".", "query", "=", "nn", ".", "Linear", "(", "config", ".", "hidden_size", ",", "self", ".", "all_head_size", ")", "\n", "self", ".", "key", "=", "nn", ".", "Linear", "(", "config", ".", "hidden_size", ",", "self", ".", "all_head_size", ")", "\n", "self", ".", "value", "=", "nn", ".", "Linear", "(", "config", ".", "hidden_size", ",", "self", ".", "all_head_size", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "config", ".", "attention_probs_dropout_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfAttention.transpose_for_scores": [[122, 126], ["x.view.view.view", "x.view.view.permute", "x.view.view.size"], "methods", ["None"], ["", "def", "transpose_for_scores", "(", "self", ",", "x", ")", ":", "\n", "        ", "new_x_shape", "=", "x", ".", "size", "(", ")", "[", ":", "-", "1", "]", "+", "(", "self", ".", "num_attention_heads", ",", "self", ".", "attention_head_size", ")", "\n", "x", "=", "x", ".", "view", "(", "*", "new_x_shape", ")", "\n", "return", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfAttention.forward": [[127, 155], ["modeling.BertSelfAttention.query", "modeling.BertSelfAttention.key", "modeling.BertSelfAttention.value", "modeling.BertSelfAttention.transpose_for_scores", "modeling.BertSelfAttention.transpose_for_scores", "modeling.BertSelfAttention.transpose_for_scores", "torch.matmul", "modeling.BertSelfAttention.dropout", "torch.matmul", "context_layer.view.view.permute().contiguous", "context_layer.view.view.view", "modeling.BertSelfAttention.transpose", "math.sqrt", "torch.nn.Softmax", "context_layer.view.view.permute", "context_layer.view.view.size"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfAttention.transpose_for_scores", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfAttention.transpose_for_scores", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfAttention.transpose_for_scores", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.matmul", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Edge.EdgeTranspose.transpose", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.sqrt"], ["", "def", "forward", "(", "self", ",", "hidden_states", ",", "attention_mask", ")", ":", "\n", "        ", "mixed_query_layer", "=", "self", ".", "query", "(", "hidden_states", ")", "\n", "mixed_key_layer", "=", "self", ".", "key", "(", "hidden_states", ")", "\n", "mixed_value_layer", "=", "self", ".", "value", "(", "hidden_states", ")", "\n", "\n", "query_layer", "=", "self", ".", "transpose_for_scores", "(", "mixed_query_layer", ")", "\n", "key_layer", "=", "self", ".", "transpose_for_scores", "(", "mixed_key_layer", ")", "\n", "value_layer", "=", "self", ".", "transpose_for_scores", "(", "mixed_value_layer", ")", "\n", "\n", "# Take the dot product between \"query\" and \"key\" to get the raw attention scores.", "\n", "attention_scores", "=", "torch", ".", "matmul", "(", "query_layer", ",", "key_layer", ".", "transpose", "(", "-", "1", ",", "-", "2", ")", ")", "\n", "attention_scores", "=", "attention_scores", "/", "math", ".", "sqrt", "(", "self", ".", "attention_head_size", ")", "# DEBUG", "\n", "# Apply the attention mask is (precomputed for all layers in BertModel forward() function)", "\n", "attention_scores", "=", "attention_scores", "+", "attention_mask", "\n", "\n", "# Normalize the attention scores to probabilities.", "\n", "attention_probs", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "(", "attention_scores", ")", "\n", "\n", "# This is actually dropping out entire tokens to attend to, which might", "\n", "# seem a bit unusual, but is taken from the original Transformer paper.", "\n", "attention_probs", "=", "self", ".", "dropout", "(", "attention_probs", ")", "\n", "\n", "context_layer", "=", "torch", ".", "matmul", "(", "attention_probs", ",", "value_layer", ")", "\n", "context_layer", "=", "context_layer", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", ".", "contiguous", "(", ")", "\n", "new_context_layer_shape", "=", "context_layer", ".", "size", "(", ")", "[", ":", "-", "2", "]", "+", "(", "self", ".", "all_head_size", ",", ")", "\n", "context_layer", "=", "context_layer", ".", "view", "(", "*", "new_context_layer_shape", ")", "\n", "\n", "return", "context_layer", ",", "attention_scores", ",", "attention_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfOutput.__init__": [[158, 167], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Dropout", "hasattr", "modeling.BertLayerNormNoVar", "modeling.BertLayerNorm"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertSelfOutput", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "dense", "=", "nn", ".", "Linear", "(", "config", ".", "hidden_size", ",", "config", ".", "hidden_size", ")", "\n", "if", "hasattr", "(", "config", ",", "\"layer_norm\"", ")", "and", "config", ".", "layer_norm", "==", "\"no_var\"", ":", "\n", "            ", "self", ".", "LayerNorm", "=", "BertLayerNormNoVar", "(", "config", ".", "hidden_size", ",", "eps", "=", "1e-12", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "LayerNorm", "=", "BertLayerNorm", "(", "config", ".", "hidden_size", ",", "eps", "=", "1e-12", ")", "\n", "", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "config", ".", "hidden_dropout_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertSelfOutput.forward": [[168, 177], ["modeling.BertSelfOutput.dense", "modeling.BertSelfOutput.dropout", "hasattr", "modeling.BertSelfOutput.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense"], ["", "def", "forward", "(", "self", ",", "hidden_states", ",", "input_tensor", ")", ":", "\n", "        ", "hidden_states", "=", "self", ".", "dense", "(", "hidden_states", ")", "\n", "hidden_states", "=", "self", ".", "dropout", "(", "hidden_states", ")", "\n", "hidden_states", "=", "hidden_states", "+", "input_tensor", "\n", "if", "hasattr", "(", "self", ".", "config", ",", "\"layer_norm\"", ")", "and", "self", ".", "config", ".", "layer_norm", "==", "\"no\"", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "hidden_states", "=", "self", ".", "LayerNorm", "(", "hidden_states", ")", "\n", "", "return", "hidden_states", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertAttention.__init__": [[180, 184], ["torch.nn.Module.__init__", "modeling.BertSelfAttention", "modeling.BertSelfOutput"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "self", "=", "BertSelfAttention", "(", "config", ")", "\n", "self", ".", "output", "=", "BertSelfOutput", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertAttention.forward": [[185, 190], ["modeling.BertAttention.self", "modeling.BertAttention.output"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_tensor", ",", "attention_mask", ")", ":", "\n", "        ", "self_output", ",", "attention_scores", ",", "attention_probs", "=", "self", ".", "self", "(", "input_tensor", ",", "attention_mask", ")", "\n", "attention_output", "=", "self", ".", "output", "(", "self_output", ",", "input_tensor", ")", "\n", "\n", "return", "attention_output", ",", "self_output", ",", "attention_scores", ",", "attention_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertIntermediate.__init__": [[193, 200], ["torch.nn.Module.__init__", "torch.nn.Linear", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertIntermediate", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dense", "=", "nn", ".", "Linear", "(", "config", ".", "hidden_size", ",", "config", ".", "intermediate_size", ")", "\n", "if", "isinstance", "(", "config", ".", "hidden_act", ",", "str", ")", "or", "(", "sys", ".", "version_info", "[", "0", "]", "==", "2", "and", "isinstance", "(", "config", ".", "hidden_act", ",", "unicode", ")", ")", ":", "\n", "            ", "self", ".", "intermediate_act_fn", "=", "ACT2FN", "[", "config", ".", "hidden_act", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "intermediate_act_fn", "=", "config", ".", "hidden_act", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertIntermediate.forward": [[201, 205], ["modeling.BertIntermediate.dense", "modeling.BertIntermediate.intermediate_act_fn"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense"], ["", "", "def", "forward", "(", "self", ",", "hidden_states", ")", ":", "\n", "        ", "hidden_states", "=", "self", ".", "dense", "(", "hidden_states", ")", "\n", "hidden_states", "=", "self", ".", "intermediate_act_fn", "(", "hidden_states", ")", "\n", "return", "hidden_states", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertOutput.__init__": [[208, 217], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Dropout", "hasattr", "modeling.BertLayerNormNoVar", "modeling.BertLayerNorm"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertOutput", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "self", ".", "dense", "=", "nn", ".", "Linear", "(", "config", ".", "intermediate_size", ",", "config", ".", "hidden_size", ")", "\n", "if", "hasattr", "(", "config", ",", "\"layer_norm\"", ")", "and", "config", ".", "layer_norm", "==", "\"no_var\"", ":", "\n", "            ", "self", ".", "LayerNorm", "=", "BertLayerNormNoVar", "(", "config", ".", "hidden_size", ",", "eps", "=", "1e-12", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "LayerNorm", "=", "BertLayerNorm", "(", "config", ".", "hidden_size", ",", "eps", "=", "1e-12", ")", "\n", "", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "config", ".", "hidden_dropout_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertOutput.forward": [[218, 227], ["modeling.BertOutput.dense", "modeling.BertOutput.dropout", "hasattr", "modeling.BertOutput.LayerNorm"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense"], ["", "def", "forward", "(", "self", ",", "hidden_states", ",", "input_tensor", ")", ":", "\n", "        ", "hidden_states", "=", "self", ".", "dense", "(", "hidden_states", ")", "\n", "hidden_states", "=", "self", ".", "dropout", "(", "hidden_states", ")", "\n", "hidden_states", "=", "hidden_states", "+", "input_tensor", "\n", "if", "hasattr", "(", "self", ".", "config", ",", "\"layer_norm\"", ")", "and", "self", ".", "config", ".", "layer_norm", "==", "\"no\"", ":", "\n", "            ", "pass", "\n", "", "else", ":", "\n", "            ", "hidden_states", "=", "self", ".", "LayerNorm", "(", "hidden_states", ")", "\n", "", "return", "hidden_states", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertLayer.__init__": [[229, 234], ["torch.nn.Module.__init__", "modeling.BertAttention", "modeling.BertIntermediate", "modeling.BertOutput"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "attention", "=", "BertAttention", "(", "config", ")", "\n", "self", ".", "intermediate", "=", "BertIntermediate", "(", "config", ")", "\n", "self", ".", "output", "=", "BertOutput", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertLayer.forward": [[235, 241], ["modeling.BertLayer.attention", "modeling.BertLayer.intermediate", "modeling.BertLayer.output"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "hidden_states", ",", "attention_mask", ")", ":", "\n", "        ", "attention_output", ",", "self_output", ",", "attention_scores", ",", "attention_probs", "=", "self", ".", "attention", "(", "hidden_states", ",", "attention_mask", ")", "\n", "intermediate_output", "=", "self", ".", "intermediate", "(", "attention_output", ")", "\n", "layer_output", "=", "self", ".", "output", "(", "intermediate_output", ",", "attention_output", ")", "\n", "\n", "return", "layer_output", ",", "self_output", ",", "attention_scores", ",", "attention_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertEncoder.__init__": [[243, 247], ["torch.nn.Module.__init__", "modeling.BertLayer", "torch.nn.ModuleList", "copy.deepcopy", "range"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layer", "=", "BertLayer", "(", "config", ")", "\n", "self", ".", "layer", "=", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "layer", ")", "for", "_", "in", "range", "(", "config", ".", "num_hidden_layers", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertEncoder.forward": [[248, 267], ["layer_module", "all_encoder_layers.append", "modeling.BertEncoder.append", "all_attention_scores.append", "all_attention_probs.append", "all_encoder_layers.append", "modeling.BertEncoder.append", "all_attention_scores.append", "all_attention_probs.append"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append"], ["", "def", "forward", "(", "self", ",", "hidden_states", ",", "attention_mask", ",", "output_all_encoded_layers", "=", "True", ")", ":", "\n", "        ", "all_encoder_layers", "=", "[", "]", "\n", "all_self_output", "=", "[", "]", "# right after summation weighted by softmax probs", "\n", "all_attention_scores", "=", "[", "]", "\n", "all_attention_probs", "=", "[", "]", "\n", "all_attention_output", "=", "[", "]", "\n", "for", "layer_module", "in", "self", ".", "layer", ":", "\n", "            ", "hidden_states", ",", "self_output", ",", "attention_scores", ",", "attention_probs", "=", "layer_module", "(", "hidden_states", ",", "attention_mask", ")", "\n", "if", "output_all_encoded_layers", ":", "\n", "                ", "all_encoder_layers", ".", "append", "(", "hidden_states", ")", "\n", "all_self_output", ".", "append", "(", "self_output", ")", "\n", "all_attention_scores", ".", "append", "(", "attention_scores", ")", "\n", "all_attention_probs", ".", "append", "(", "attention_probs", ")", "\n", "", "", "if", "not", "output_all_encoded_layers", ":", "\n", "            ", "all_encoder_layers", ".", "append", "(", "hidden_states", ")", "\n", "all_self_output", ".", "append", "(", "self_output", ")", "\n", "all_attention_scores", ".", "append", "(", "attention_scores", ")", "\n", "all_attention_probs", ".", "append", "(", "attention_probs", ")", "\n", "", "return", "all_encoder_layers", ",", "all_self_output", ",", "all_attention_scores", ",", "all_attention_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertPooler.__init__": [[269, 273], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Tanh"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertPooler", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dense", "=", "nn", ".", "Linear", "(", "config", ".", "hidden_size", ",", "config", ".", "hidden_size", ")", "\n", "self", ".", "activation", "=", "nn", ".", "Tanh", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertPooler.forward": [[274, 281], ["modeling.BertPooler.dense", "modeling.BertPooler.activation"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.dense"], ["", "def", "forward", "(", "self", ",", "hidden_states", ")", ":", "\n", "# We \"pool\" the model by simply taking the hidden state corresponding", "\n", "# to the first token.", "\n", "        ", "first_token_tensor", "=", "hidden_states", "[", ":", ",", "0", "]", "\n", "pooled_output", "=", "self", ".", "dense", "(", "first_token_tensor", ")", "\n", "pooled_output", "=", "self", ".", "activation", "(", "pooled_output", ")", "\n", "return", "pooled_output", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertModel.__init__": [[283, 289], ["pytorch_pretrained_bert.modeling.BertPreTrainedModel.__init__", "modeling.BertEmbeddings", "modeling.BertEncoder", "modeling.BertPooler", "modeling.BertModel.apply"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "super", "(", "BertModel", ",", "self", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "embeddings", "=", "BertEmbeddings", "(", "config", ")", "\n", "self", ".", "encoder", "=", "BertEncoder", "(", "config", ")", "\n", "self", ".", "pooler", "=", "BertPooler", "(", "config", ")", "\n", "self", ".", "apply", "(", "self", ".", "init_bert_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertModel.forward": [[290, 328], ["torch.ones_like.unsqueeze().unsqueeze", "extended_attention_mask.to.to.to", "modeling.BertModel.embeddings", "modeling.BertModel.encoder", "modeling.BertModel.pooler", "torch.ones_like", "torch.zeros_like", "torch.ones_like.unsqueeze", "next", "modeling.BertModel.parameters"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.next"], ["", "def", "forward", "(", "self", ",", "input_ids", ",", "token_type_ids", "=", "None", ",", "attention_mask", "=", "None", ",", "output_all_encoded_layers", "=", "True", ",", "embeddings", "=", "None", ")", ":", "\n", "        ", "if", "attention_mask", "is", "None", ":", "\n", "            ", "attention_mask", "=", "torch", ".", "ones_like", "(", "input_ids", ")", "\n", "", "if", "token_type_ids", "is", "None", ":", "\n", "            ", "token_type_ids", "=", "torch", ".", "zeros_like", "(", "input_ids", ")", "\n", "\n", "# We create a 3D attention mask from a 2D tensor mask.", "\n", "# Sizes are [batch_size, 1, 1, to_seq_length]", "\n", "# So we can broadcast to [batch_size, num_heads, from_seq_length, to_seq_length]", "\n", "# this attention mask is more simple than the triangular masking of causal attention", "\n", "# used in OpenAI GPT, we just need to prepare the broadcast dimension here.", "\n", "", "extended_attention_mask", "=", "attention_mask", ".", "unsqueeze", "(", "1", ")", ".", "unsqueeze", "(", "2", ")", "\n", "\n", "# Since attention_mask is 1.0 for positions we want to attend and 0.0 for", "\n", "# masked positions, this operation will create a tensor which is 0.0 for", "\n", "# positions we want to attend and -10000.0 for masked positions.", "\n", "# Since we are adding it to the raw scores before the softmax, this is", "\n", "# effectively the same as removing these entirely.", "\n", "extended_attention_mask", "=", "extended_attention_mask", ".", "to", "(", "dtype", "=", "next", "(", "self", ".", "parameters", "(", ")", ")", ".", "dtype", ")", "# fp16 compatibility", "\n", "extended_attention_mask", "=", "(", "1.0", "-", "extended_attention_mask", ")", "*", "-", "10000.0", "\n", "\n", "embedding_output", "=", "self", ".", "embeddings", "(", "input_ids", ",", "token_type_ids", ")", "\n", "\n", "if", "embeddings", "is", "None", ":", "\n", "            ", "embeddings", "=", "embedding_output", "\n", "\n", "", "encoded_layers", ",", "self_output", ",", "attention_scores", ",", "attention_probs", "=", "self", ".", "encoder", "(", "embeddings", ",", "\n", "extended_attention_mask", ",", "\n", "output_all_encoded_layers", "=", "output_all_encoded_layers", ")", "\n", "\n", "sequence_output", "=", "encoded_layers", "[", "-", "1", "]", "\n", "pooled_output", "=", "self", ".", "pooler", "(", "sequence_output", ")", "\n", "if", "not", "output_all_encoded_layers", ":", "\n", "            ", "encoded_layers", "=", "encoded_layers", "[", "-", "1", "]", "\n", "attention_scores", "=", "attention_scores", "[", "-", "1", "]", "\n", "attention_probs", "=", "attention_probs", "[", "-", "1", "]", "\n", "", "return", "embeddings", ",", "encoded_layers", ",", "attention_scores", ",", "attention_probs", ",", "pooled_output", ",", "self_output", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertForSequenceClassification.__init__": [[367, 374], ["pytorch_pretrained_bert.modeling.BertPreTrainedModel.__init__", "modeling.BertModel", "torch.nn.Dropout", "torch.nn.Linear", "modeling.BertForSequenceClassification.apply"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__"], ["def", "__init__", "(", "self", ",", "config", ",", "num_labels", "=", "2", ")", ":", "\n", "        ", "super", "(", "BertForSequenceClassification", ",", "self", ")", ".", "__init__", "(", "config", ")", "\n", "self", ".", "num_labels", "=", "num_labels", "\n", "self", ".", "bert", "=", "BertModel", "(", "config", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "config", ".", "hidden_dropout_prob", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "config", ".", "hidden_size", ",", "num_labels", ")", "\n", "self", ".", "apply", "(", "self", ".", "init_bert_weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.modeling.BertForSequenceClassification.forward": [[375, 390], ["modeling.BertForSequenceClassification.bert", "modeling.BertForSequenceClassification.dropout", "modeling.BertForSequenceClassification.classifier", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss.", "modeling.BertForSequenceClassification.view", "labels.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input_ids", ",", "token_type_ids", "=", "None", ",", "attention_mask", "=", "None", ",", "labels", "=", "None", ",", "embeddings", "=", "None", ")", ":", "\n", "        ", "embedding_output", ",", "encoded_layers", ",", "attention_scores", ",", "attention_probs", ",", "pooled_output", ",", "self_output", "=", "self", ".", "bert", "(", "input_ids", ",", "token_type_ids", ",", "attention_mask", ",", "output_all_encoded_layers", "=", "True", ",", "embeddings", "=", "embeddings", ")", "\n", "\n", "pooled_output", "=", "self", ".", "dropout", "(", "pooled_output", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "pooled_output", ")", "\n", "\n", "assert", "(", "labels", "is", "None", ")", "\n", "\n", "if", "labels", "is", "not", "None", ":", "\n", "            ", "loss_fct", "=", "CrossEntropyLoss", "(", ")", "\n", "loss", "=", "loss_fct", "(", "logits", ".", "view", "(", "-", "1", ",", "self", ".", "num_labels", ")", ",", "labels", ".", "view", "(", "-", "1", ")", ")", "\n", "return", "loss", "\n", "", "else", ":", "\n", "            ", "return", "logits", ",", "embedding_output", ",", "encoded_layers", ",", "attention_scores", ",", "attention_probs", ",", "self_output", ",", "pooled_output", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.Transformer.Transformer.__init__": [[11, 33], ["Transformer.Transformer.general_init", "Transformer.Transformer.update_vocabulary", "Models.modeling.BertConfig", "Transformer.Transformer.load_pretrained", "Transformer.Transformer._build_trainer", "Models.modeling.BertForSequenceClassification", "Transformer.Transformer.model.to"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.general_init", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.Transformer.Transformer.update_vocabulary", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.load_pretrained", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT._build_trainer"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "data_train", ")", ":", "\n", "        ", "self", ".", "general_init", "(", "args", ",", "data_train", ")", "\n", "\n", "self", ".", "min_word_freq", "=", "args", ".", "min_word_freq", "\n", "self", ".", "update_vocabulary", "(", "data_train", ")", "\n", "\n", "config", "=", "BertConfig", "(", "self", ".", "vocab_size", ")", "\n", "config", ".", "num_hidden_layers", "=", "args", ".", "num_layers", "\n", "config", ".", "hidden_size", "=", "args", ".", "hidden_size", "\n", "config", ".", "intermediate_size", "=", "args", ".", "intermediate_size", "\n", "config", ".", "hidden_act", "=", "args", ".", "hidden_act", "\n", "config", ".", "num_attention_heads", "=", "args", ".", "num_attention_heads", "\n", "config", ".", "layer_norm", "=", "args", ".", "layer_norm", "\n", "\n", "self", ".", "load_pretrained", "(", ")", "\n", "if", "not", "self", ".", "checkpoint", ":", "\n", "            ", "bert", "=", "self", ".", "model", ".", "bert", "\n", "\n", "self", ".", "model", "=", "BertForSequenceClassification", "(", "config", ",", "self", ".", "num_labels", ")", "\n", "self", ".", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "", "self", ".", "_build_trainer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.Transformer.Transformer.update_vocabulary": [[38, 68], ["os.path.join", "sorted", "len", "pytorch_pretrained_bert.tokenization.BertTokenizer.from_pretrained", "os.path.exists", "open", "file.readlines", "open", "open", "len", "sorted.append", "os.path.join", "file.write", "os.path.join", "file.readlines"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write"], ["def", "update_vocabulary", "(", "self", ",", "data_train", ")", ":", "\n", "        ", "vocab_base", "=", "os", ".", "path", ".", "join", "(", "self", ".", "bert_model", ",", "\"vocab_base.txt\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "vocab_base", ")", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "bert_model", ",", "\"vocab.txt\"", ")", ")", "as", "file", ":", "\n", "                ", "self", ".", "vocab_size", "=", "len", "(", "file", ".", "readlines", "(", ")", ")", "\n", "", "return", "\n", "", "cnt", "=", "{", "}", "\n", "in_bert", "=", "{", "}", "\n", "with", "open", "(", "vocab_base", ")", "as", "file", ":", "\n", "            ", "for", "line", "in", "file", ".", "readlines", "(", ")", ":", "\n", "                ", "cnt", "[", "line", "[", ":", "-", "1", "]", "]", "=", "0", "\n", "in_bert", "[", "line", "[", ":", "-", "1", "]", "]", "=", "True", "\n", "", "", "for", "example", "in", "data_train", ":", "\n", "            ", "for", "token", "in", "example", "[", "\"sent_a\"", "]", ":", "\n", "                ", "if", "not", "token", "in", "cnt", ":", "\n", "                    ", "cnt", "[", "token", "]", "=", "0", "\n", "", "cnt", "[", "token", "]", "+=", "1", "\n", "", "", "cnt", "[", "\"[PAD]\"", "]", "=", "1e8", "\n", "words", "=", "[", "]", "\n", "for", "w", "in", "cnt", ":", "\n", "            ", "if", "w", "[", "0", "]", "==", "\"#\"", "or", "w", "[", "0", "]", "==", "\"[\"", "or", "w", "in", "in_bert", "or", "cnt", "[", "w", "]", ">=", "self", ".", "min_word_freq", ":", "\n", "                ", "words", ".", "append", "(", "w", ")", "\n", "", "", "words", "=", "sorted", "(", "words", ",", "key", "=", "lambda", "w", ":", "cnt", "[", "w", "]", ",", "reverse", "=", "True", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "bert_model", ",", "\"vocab.txt\"", ")", ",", "\"w\"", ")", "as", "file", ":", "\n", "            ", "for", "w", "in", "words", ":", "\n", "                ", "file", ".", "write", "(", "\"%s\\n\"", "%", "w", ")", "\n", "\n", "", "", "self", ".", "vocab_size", "=", "len", "(", "words", ")", "\n", "self", ".", "tokenizer", "=", "BertTokenizer", ".", "from_pretrained", "(", "self", ".", "bert_model", ",", "do_lower_case", "=", "self", ".", "do_lower_case", ")", "\n", "self", ".", "vocab", "=", "self", ".", "tokenizer", ".", "vocab", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.__init__": [[39, 43], ["BERT.BERT.general_init", "BERT.BERT.load_pretrained", "BERT.BERT._build_trainer"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.general_init", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.load_pretrained", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT._build_trainer"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "data_train", ")", ":", "\n", "        ", "self", ".", "general_init", "(", "args", ",", "data_train", ")", "\n", "self", ".", "load_pretrained", "(", ")", "\n", "self", ".", "_build_trainer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.general_init": [[44, 74], ["range", "os.path.exists", "torch.manual_seed", "torch.cuda.manual_seed_all", "pytorch_pretrained_bert.tokenization.BertTokenizer.from_pretrained", "torch.nn.Softmax", "os.path.exists", "os.system", "os.path.join", "open", "os.path.join", "print", "os.path.join", "len", "int", "file.readline"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print"], ["", "def", "general_init", "(", "self", ",", "args", ",", "data_train", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "max_seq_length", "=", "args", ".", "max_sent_length", "\n", "self", ".", "do_lower_case", "=", "True", "\n", "self", ".", "learning_rate", "=", "args", ".", "lr", "\n", "self", ".", "gradient_accumulation_steps", "=", "1", "\n", "self", ".", "seed", "=", "args", ".", "seed", "\n", "self", ".", "num_labels", "=", "args", ".", "num_labels", "\n", "self", ".", "label_list", "=", "range", "(", "args", ".", "num_labels", ")", "\n", "self", ".", "num_train_optimization_steps", "=", "args", ".", "num_epoches", "*", "(", "len", "(", "data_train", ")", "+", "args", ".", "batch_size", "-", "1", ")", "//", "args", ".", "batch_size", "\n", "self", ".", "warmup_proportion", "=", "args", ".", "warmup", "\n", "self", ".", "weight_decay", "=", "args", ".", "weight_decay", "\n", "self", ".", "device", "=", "args", ".", "device", "\n", "\n", "self", ".", "dir", "=", "self", ".", "bert_model", "=", "args", ".", "dir", "\n", "self", ".", "checkpoint", "=", "False", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", ")", ":", "\n", "            ", "os", ".", "system", "(", "\"cp -r %s %s\"", "%", "(", "args", ".", "base_dir", ",", "self", ".", "dir", ")", ")", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "bert_model", ",", "\"checkpoint\"", ")", ")", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "bert_model", ",", "\"checkpoint\"", ")", ")", "as", "file", ":", "\n", "                ", "self", ".", "bert_model", "=", "os", ".", "path", ".", "join", "(", "self", ".", "bert_model", ",", "\"ckpt-%d\"", "%", "(", "int", "(", "file", ".", "readline", "(", ")", ")", ")", ")", "\n", "self", ".", "checkpoint", "=", "True", "\n", "print", "(", "\"BERT checkpoint:\"", ",", "self", ".", "bert_model", ")", "\n", "\n", "", "", "torch", ".", "manual_seed", "(", "self", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "self", ".", "seed", ")", "\n", "self", ".", "tokenizer", "=", "BertTokenizer", ".", "from_pretrained", "(", "self", ".", "bert_model", ",", "do_lower_case", "=", "self", ".", "do_lower_case", ")", "\n", "self", ".", "vocab", "=", "self", ".", "tokenizer", ".", "vocab", "\n", "self", ".", "softmax", "=", "torch", ".", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.load_pretrained": [[75, 81], ["Models.modeling.BertForSequenceClassification.from_pretrained", "BERT.BERT.model.to"], "methods", ["None"], ["", "def", "load_pretrained", "(", "self", ")", ":", "\n", "        ", "cache_dir", "=", "\"cache/bert\"", "\n", "self", ".", "model", "=", "BertForSequenceClassification", ".", "from_pretrained", "(", "self", ".", "bert_model", ",", "\n", "cache_dir", "=", "cache_dir", ",", "\n", "num_labels", "=", "self", ".", "num_labels", ")", "\n", "self", ".", "model", ".", "to", "(", "self", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT._build_trainer": [[82, 97], ["list", "pytorch_pretrained_bert.optimization.BertAdam", "BERT.BERT.model.named_parameters", "any", "any"], "methods", ["None"], ["", "def", "_build_trainer", "(", "self", ")", ":", "\n", "        ", "param_optimizer", "=", "list", "(", "self", ".", "model", ".", "named_parameters", "(", ")", ")", "\n", "no_decay", "=", "[", "'bias'", ",", "'LayerNorm.bias'", ",", "'LayerNorm.weight'", "]", "\n", "\n", "optimizer_grouped_parameters", "=", "[", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "param_optimizer", "if", "not", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "self", ".", "weight_decay", "}", ",", "\n", "{", "'params'", ":", "[", "p", "for", "n", ",", "p", "in", "param_optimizer", "if", "any", "(", "nd", "in", "n", "for", "nd", "in", "no_decay", ")", "]", ",", "'weight_decay'", ":", "0.0", "}", "\n", "]", "\n", "\n", "self", ".", "optimizer", "=", "BertAdam", "(", "optimizer_grouped_parameters", ",", "\n", "lr", "=", "self", ".", "learning_rate", ",", "\n", "warmup", "=", "self", ".", "warmup_proportion", ",", "\n", "t_total", "=", "self", ".", "num_train_optimization_steps", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.save": [[99, 120], ["os.path.join", "os.path.exists", "os.mkdir", "os.path.join", "os.path.join", "torch.save", "model_to_save.config.to_json_file", "BERT.BERT.tokenizer.save_vocabulary", "print", "hasattr", "shutil.rmtree", "model_to_save.state_dict", "open", "file.write", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.save", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.print", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.Logger.Logger.write"], ["", "def", "save", "(", "self", ",", "epoch", ")", ":", "\n", "# Save a trained model, configuration and tokenizer", "\n", "        ", "model_to_save", "=", "self", ".", "model", ".", "module", "if", "hasattr", "(", "self", ".", "model", ",", "'module'", ")", "else", "self", ".", "model", "# Only save the model it-self", "\n", "\n", "# If we save using the predefined names, we can load using `from_pretrained`", "\n", "output_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "\"ckpt-%d\"", "%", "epoch", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "output_dir", ")", ":", "\n", "            ", "shutil", ".", "rmtree", "(", "output_dir", ")", "\n", "", "os", ".", "mkdir", "(", "output_dir", ")", "\n", "\n", "output_model_file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "WEIGHTS_NAME", ")", "\n", "output_config_file", "=", "os", ".", "path", ".", "join", "(", "output_dir", ",", "CONFIG_NAME", ")", "\n", "\n", "torch", ".", "save", "(", "model_to_save", ".", "state_dict", "(", ")", ",", "output_model_file", ")", "\n", "model_to_save", ".", "config", ".", "to_json_file", "(", "output_config_file", ")", "\n", "self", ".", "tokenizer", ".", "save_vocabulary", "(", "output_dir", ")", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "\"checkpoint\"", ")", ",", "\"w\"", ")", "as", "file", ":", "\n", "            ", "file", ".", "write", "(", "\"%d\"", "%", "epoch", ")", "\n", "\n", "", "print", "(", "\"BERT saved: %s\"", "%", "output_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.get_input": [[121, 134], ["Models.utils.convert_examples_to_features", "torch.tensor", "torch.tensor", "torch.tensor", "input_ids.to.to.to", "input_mask.to.to.to", "segment_ids.to.to.to"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.convert_examples_to_features"], ["", "def", "get_input", "(", "self", ",", "batch", ")", ":", "\n", "        ", "features", "=", "convert_examples_to_features", "(", "\n", "batch", ",", "self", ".", "label_list", ",", "self", ".", "max_seq_length", ",", "self", ".", "tokenizer", ")", "\n", "\n", "input_ids", "=", "torch", ".", "tensor", "(", "[", "f", ".", "input_ids", "for", "f", "in", "features", "]", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "input_mask", "=", "torch", ".", "tensor", "(", "[", "f", ".", "input_mask", "for", "f", "in", "features", "]", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "segment_ids", "=", "torch", ".", "tensor", "(", "[", "f", ".", "segment_ids", "for", "f", "in", "features", "]", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "input_ids", "=", "input_ids", ".", "to", "(", "self", ".", "device", ")", "\n", "input_mask", "=", "input_mask", ".", "to", "(", "self", ".", "device", ")", "\n", "segment_ids", "=", "segment_ids", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "return", "input_ids", ",", "input_mask", ",", "segment_ids", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.get_embeddings": [[135, 151], ["BERT.BERT.get_input", "input_ids.size", "torch.arange", "position_ids.unsqueeze().expand_as.unsqueeze().expand_as.unsqueeze().expand_as", "BERT.BERT.model.bert.embeddings.word_embeddings", "BERT.BERT.model.bert.embeddings.position_embeddings", "BERT.BERT.model.bert.embeddings.token_type_embeddings", "torch.zeros_like", "position_ids.unsqueeze().expand_as.unsqueeze().expand_as.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.get_input"], ["", "def", "get_embeddings", "(", "self", ",", "batch", ")", ":", "\n", "        ", "input_ids", ",", "input_mask", ",", "token_type_ids", ",", "features", "=", "self", ".", "get_input", "(", "batch", ")", "\n", "\n", "seq_length", "=", "input_ids", ".", "size", "(", "1", ")", "\n", "position_ids", "=", "torch", ".", "arange", "(", "seq_length", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "input_ids", ".", "device", ")", "\n", "position_ids", "=", "position_ids", ".", "unsqueeze", "(", "0", ")", ".", "expand_as", "(", "input_ids", ")", "\n", "if", "token_type_ids", "is", "None", ":", "\n", "            ", "token_type_ids", "=", "torch", ".", "zeros_like", "(", "input_ids", ")", "\n", "\n", "", "word_embeddings", "=", "self", ".", "model", ".", "bert", ".", "embeddings", ".", "word_embeddings", "(", "input_ids", ")", "\n", "position_embeddings", "=", "self", ".", "model", ".", "bert", ".", "embeddings", ".", "position_embeddings", "(", "position_ids", ")", "\n", "token_type_embeddings", "=", "self", ".", "model", ".", "bert", ".", "embeddings", ".", "token_type_embeddings", "(", "token_type_ids", ")", "\n", "embeddings", "=", "(", "word_embeddings", "+", "position_embeddings", "+", "token_type_embeddings", ")", "\n", "tokens", "=", "[", "feature", ".", "tokens", "for", "feature", "in", "features", "]", "\n", "\n", "return", "embeddings", ",", "tokens", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.step": [[152, 204], ["BERT.BERT.get_input", "torch.tensor", "label_ids.to.to.to", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss.", "BERT.BERT.softmax().detach().cpu().numpy", "numpy.argmax", "BERT.BERT.model.train", "BERT.BERT.model", "BERT.BERT.model.eval", "logits.view", "label_ids.to.to.view", "torch.nn.CrossEntropyLoss.backward", "BERT.BERT.optimizer.step", "BERT.BERT.optimizer.zero_grad", "torch.enable_grad", "torch.no_grad", "BERT.BERT.model", "BERT.BERT.softmax().detach().cpu", "torch.autograd.grad", "label_ids.to.to.cpu().numpy", "BERT.BERT.softmax().detach", "label_ids.to.to.cpu", "BERT.BERT.softmax"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.get_input", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Layer.Layer.backward", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.step", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Bounds.Bounds.softmax"], ["", "def", "step", "(", "self", ",", "batch", ",", "is_train", "=", "False", ",", "infer_grad", "=", "False", ")", ":", "\n", "        ", "input_ids", ",", "input_mask", ",", "segment_ids", ",", "features", "=", "self", ".", "get_input", "(", "batch", ")", "\n", "label_ids", "=", "torch", ".", "tensor", "(", "[", "f", ".", "label_id", "for", "f", "in", "features", "]", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "label_ids", "=", "label_ids", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "if", "is_train", ":", "\n", "            ", "self", ".", "model", ".", "train", "(", ")", "\n", "logits", ",", "embedding_output", ",", "encoded_layers", ",", "attention_scores", ",", "attention_probs", ",", "self_output", ",", "pooled_output", "=", "self", ".", "model", "(", "\n", "input_ids", ",", "segment_ids", ",", "input_mask", ",", "labels", "=", "None", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "model", ".", "eval", "(", ")", "\n", "grad", "=", "torch", ".", "enable_grad", "(", ")", "if", "infer_grad", "else", "torch", ".", "no_grad", "(", ")", "\n", "with", "grad", ":", "\n", "                ", "logits", ",", "embedding_output", ",", "encoded_layers", ",", "attention_scores", ",", "attention_probs", ",", "self_output", ",", "pooled_output", "=", "self", ".", "model", "(", "\n", "input_ids", ",", "segment_ids", ",", "input_mask", ",", "labels", "=", "None", ")", "\n", "\n", "", "", "loss_fct", "=", "CrossEntropyLoss", "(", ")", "\n", "loss", "=", "loss_fct", "(", "logits", ".", "view", "(", "-", "1", ",", "self", ".", "num_labels", ")", ",", "label_ids", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "preds", "=", "self", ".", "softmax", "(", "logits", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "pred_labels", "=", "np", ".", "argmax", "(", "preds", ",", "axis", "=", "1", ")", "\n", "acc", "=", "(", "pred_labels", "==", "label_ids", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ".", "mean", "(", ")", "\n", "\n", "if", "infer_grad", ":", "\n", "            ", "gradients", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "embedding_output", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "gradients", "=", "None", "\n", "\n", "", "ret", "=", "[", "\n", "loss", ",", "acc", ",", "\n", "{", "\n", "\"pred_scores\"", ":", "preds", ",", "\n", "\"pred_labels\"", ":", "pred_labels", ",", "\n", "\"embedding_output\"", ":", "embedding_output", ",", "\n", "\"encoded_layers\"", ":", "encoded_layers", ",", "\n", "\"attention_scores\"", ":", "attention_scores", ",", "\n", "\"attention_probs\"", ":", "attention_probs", ",", "\n", "\"self_output\"", ":", "self_output", ",", "\n", "\"pooled_output\"", ":", "pooled_output", ",", "\n", "\"features\"", ":", "features", ",", "\n", "\"gradients\"", ":", "gradients", "\n", "}", "\n", "]", "\n", "\n", "if", "is_train", ":", "\n", "            ", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.predict": [[205, 210], ["BERT.BERT.step"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.step"], ["", "def", "predict", "(", "self", ",", "X", ")", ":", "\n", "        ", "return", "self", ".", "step", "(", "[", "\n", "{", "\"sent_a\"", ":", "x", ",", "\"label\"", ":", "1", "}", "\n", "for", "x", "in", "X", "\n", "]", ")", "[", "-", "1", "]", "[", "\"pred_scores\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.get_gradients": [[211, 229], ["BERT.BERT.get_input", "torch.tensor", "label_ids.to.to.to", "BERT.BERT.model.eval", "BERT.BERT.model", "torch.nn.CrossEntropyLoss", "torch.nn.CrossEntropyLoss.", "torch.zeros().to", "logits.view", "label_ids.to.to.view", "torch.zeros", "torch.autograd.grad", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.BERT.BERT.get_input"], ["", "def", "get_gradients", "(", "self", ",", "batch", ",", "embeddings", ")", ":", "\n", "        ", "input_ids", ",", "input_mask", ",", "segment_ids", ",", "features", "=", "self", ".", "get_input", "(", "batch", ")", "\n", "label_ids", "=", "torch", ".", "tensor", "(", "[", "f", ".", "label_id", "for", "f", "in", "features", "]", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "label_ids", "=", "label_ids", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "logits", ",", "embedding_output", ",", "encoded_layers", ",", "attention_scores", ",", "attention_probs", ",", "self_output", ",", "pooled_output", "=", "self", ".", "model", "(", "\n", "input_ids", ",", "segment_ids", ",", "input_mask", ",", "labels", "=", "None", ")", "\n", "loss_fct", "=", "CrossEntropyLoss", "(", ")", "\n", "loss", "=", "loss_fct", "(", "logits", ".", "view", "(", "-", "1", ",", "self", ".", "num_labels", ")", ",", "label_ids", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "grad", "=", "torch", ".", "zeros", "(", "preds", ".", "shape", "[", "0", "]", ",", "preds", ".", "shape", "[", "1", "]", ",", "embeddings", ".", "shape", "[", "-", "1", "]", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "grad", "[", ":", ",", "0", ",", ":", "]", "=", "torch", ".", "autograd", ".", "grad", "(", "torch", ".", "sum", "(", "preds", ",", "dim", "=", "0", ")", "[", "0", "]", ",", "embeddings", ",", "\n", "retain_graph", "=", "True", ",", "only_inputs", "=", "True", ")", "[", "0", "]", "[", ":", ",", "pos", ",", ":", "]", "\n", "grad", "[", ":", ",", "1", ",", ":", "]", "=", "-", "grad", "[", ":", ",", "0", ",", ":", "]", "\n", "\n", "return", "grad", "", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputExample.__init__": [[35, 40], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.InputFeatures.__init__": [[42, 48], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.truncate_seq_pair": [[18, 33], ["len", "len", "len", "len", "tokens_a.pop", "tokens_b.pop"], "function", ["None"], ["score", "=", "float", "(", "torch", ".", "mean", "(", "u", "-", "l", ")", ")", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "\"%d errors, %.5f average range\"", "%", "(", "errors", ",", "score", ")", ")", "\n", "if", "errors", ">", "0", ":", "\n", "            ", "cnt", "=", "0", "\n", "for", "i", "in", "range", "(", "c", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "c", ".", "shape", "[", "1", "]", ")", ":", "\n", "                    ", "if", "c", "[", "i", "]", "[", "j", "]", ">", "0", ":", "\n", "                        ", "print", "(", "i", ",", "j", ")", "\n", "print", "(", "l", "[", "i", "]", "[", "j", "]", ",", "u", "[", "i", "]", "[", "j", "]", ",", "std", "[", "i", "]", "[", "j", "]", ")", "\n", "cnt", "+=", "1", "\n", "if", "cnt", ">=", "10", ":", "\n", "                            ", "assert", "(", "0", ")", "\n", "", "", "", "", "", "", "assert", "(", "errors", "==", "0", ")", "", "", ""]], "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.convert_examples_to_features": [[49, 135], ["enumerate", "min", "enumerate", "utils.InputExample", "tokenizer.tokenize", "all_tokens.append", "max", "tokenizer.convert_tokens_to_ids", "features.append", "int", "enumerate", "tokenizer.tokenize", "utils.truncate_seq_pair", "len", "len", "len", "len", "len", "utils.InputFeatures", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.tokenize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Verifiers.Controller.Controller.append", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.None.data_utils.tokenize", "home.repos.pwc.inspect_result.shizhouxing_Robustness-Verification-for-Transformers.Models.utils.truncate_seq_pair"], []]}