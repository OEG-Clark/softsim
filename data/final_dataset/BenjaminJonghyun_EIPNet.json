{"home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.mk_variable": [[4, 6], ["tensorflow.get_variable"], "function", ["None"], ["def", "mk_variable", "(", "name", ",", "shape", ",", "initializer", "=", "None", ",", "trainable", "=", "None", ")", ":", "\n", "    ", "return", "tf", ".", "get_variable", "(", "name", ",", "shape", ",", "initializer", "=", "initializer", ",", "trainable", "=", "trainable", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d": [[8, 26], ["input.get_shape", "tensorflow.nn.conv2d", "tensorflow.variable_scope", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.constant_initializer", "networks.mk_variable", "networks.mk_variable", "conv", "tensorflow.nn.bias_add", "tensorflow.layers.batch_normalization", "tensorflow.nn.relu"], "function", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.mk_variable", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.mk_variable"], ["", "def", "conv2d", "(", "input", ",", "h_k", ",", "w_k", ",", "h_s", ",", "w_s", ",", "c_output", ",", "name", ",", "padding", "=", "'SAME'", ",", "batchnorm", "=", "False", ",", "relu", "=", "True", ",", "trainable", "=", "None", ")", ":", "\n", "    ", "c_input", "=", "input", ".", "get_shape", "(", ")", "[", "-", "1", "]", "\n", "\n", "conv", "=", "lambda", "i", ",", "k", ":", "tf", ".", "nn", ".", "conv2d", "(", "i", ",", "k", ",", "[", "1", ",", "h_s", ",", "w_s", ",", "1", "]", ",", "padding", "=", "padding", ")", "\n", "with", "tf", ".", "variable_scope", "(", "name", ")", "as", "scope", ":", "\n", "        ", "init_weight", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", "\n", "init_bias", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", "\n", "\n", "w", "=", "mk_variable", "(", "'w'", ",", "[", "h_k", ",", "w_k", ",", "c_input", ",", "c_output", "]", ",", "init_weight", ",", "trainable", "=", "trainable", ")", "\n", "b", "=", "mk_variable", "(", "'b'", ",", "[", "c_output", "]", ",", "init_bias", ",", "trainable", "=", "trainable", ")", "\n", "\n", "c", "=", "conv", "(", "input", ",", "w", ")", "\n", "bias", "=", "tf", ".", "nn", ".", "bias_add", "(", "c", ",", "b", ")", "\n", "if", "batchnorm", ":", "\n", "            ", "bias", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "bias", ",", "name", "=", "scope", ".", "name", ",", "training", "=", "trainable", ")", "\n", "", "if", "relu", ":", "\n", "            ", "bias", "=", "tf", ".", "nn", ".", "relu", "(", "bias", ",", "name", "=", "scope", ".", "name", ")", "\n", "", "", "return", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.deconv2d": [[27, 36], ["tensorflow.variable_scope", "tensorflow.layers.conv2d_transpose", "tensorflow.layers.batch_normalization", "tensorflow.nn.relu"], "function", ["None"], ["", "def", "deconv2d", "(", "input", ",", "h_k", ",", "w_k", ",", "h_s", ",", "w_s", ",", "c_output", ",", "name", ",", "padding", "=", "'SAME'", ",", "batchnorm", "=", "False", ",", "relu", "=", "True", ",", "trainable", "=", "None", ")", ":", "\n", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "name", ")", "as", "scope", ":", "\n", "        ", "bias", "=", "tf", ".", "layers", ".", "conv2d_transpose", "(", "input", ",", "c_output", ",", "[", "h_k", ",", "w_k", "]", ",", "strides", "=", "h_s", ",", "padding", "=", "padding", ",", "trainable", "=", "trainable", ")", "\n", "if", "batchnorm", ":", "\n", "            ", "bias", "=", "tf", ".", "layers", ".", "batch_normalization", "(", "bias", ",", "name", "=", "scope", ".", "name", ",", "training", "=", "trainable", ")", "\n", "", "if", "relu", ":", "\n", "            ", "bias", "=", "tf", ".", "nn", ".", "relu", "(", "bias", ",", "name", "=", "scope", ".", "name", ")", "\n", "", "", "return", "bias", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.edge_conv": [[37, 43], ["tensorflow.nn.avg_pool2d", "tensorflow.nn.relu", "networks.conv2d"], "function", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d"], ["", "def", "edge_conv", "(", "input", ",", "ksize", ",", "strides", ",", "name", ",", "padding", "=", "'SAME'", ",", "trainalbe", "=", "None", ")", ":", "\n", "    ", "smooth", "=", "tf", ".", "nn", ".", "avg_pool2d", "(", "input", ",", "ksize", "=", "ksize", ",", "strides", "=", "strides", ",", "padding", "=", "padding", ")", "\n", "sub", "=", "tf", ".", "nn", ".", "relu", "(", "input", "-", "smooth", ")", "\n", "edge", "=", "conv2d", "(", "sub", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "name", ",", "batchnorm", "=", "False", ",", "trainable", "=", "trainalbe", ")", "\n", "\n", "return", "edge", ",", "sub", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.discriminator": [[44, 73], ["tensorflow.variable_scope", "networks.conv2d", "tensorflow.nn.leaky_relu", "networks.conv2d", "tensorflow.nn.leaky_relu", "networks.conv2d", "tensorflow.nn.leaky_relu", "networks.conv2d", "tensorflow.nn.leaky_relu", "networks.conv2d", "tensorflow.nn.leaky_relu", "networks.conv2d", "tensorflow.nn.leaky_relu", "networks.conv2d", "tensorflow.contrib.layers.flatten", "tensorflow.layers.dense", "tensorflow.nn.leaky_relu", "tensorflow.layers.dense", "scope.reuse_variables"], "function", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d"], ["", "def", "discriminator", "(", "input", ",", "reuse", "=", "False", ",", "trainable", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "\"discriminator\"", ")", "as", "scope", ":", "\n", "        ", "if", "reuse", ":", "\n", "            ", "scope", ".", "reuse_variables", "(", ")", "\n", "\n", "", "di_conv1_1", "=", "conv2d", "(", "input", ",", "3", ",", "3", ",", "1", ",", "1", ",", "128", ",", "'di_conv1_1'", ",", "relu", "=", "False", ",", "trainable", "=", "trainable", ")", "\n", "di_conv1_1", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "di_conv1_1", ",", "alpha", "=", "0.2", ")", "\n", "di_conv1_2", "=", "conv2d", "(", "di_conv1_1", ",", "3", ",", "3", ",", "2", ",", "2", ",", "128", ",", "'di_conv1_2'", ",", "padding", "=", "'VALID'", ",", "relu", "=", "False", ",", "trainable", "=", "trainable", ")", "\n", "di_conv1_2", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "di_conv1_2", ",", "alpha", "=", "0.2", ")", "\n", "\n", "di_conv2_1", "=", "conv2d", "(", "di_conv1_2", ",", "3", ",", "3", ",", "1", ",", "1", ",", "256", ",", "'di_conv2_1'", ",", "relu", "=", "False", ",", "trainable", "=", "trainable", ")", "\n", "di_conv2_1", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "di_conv2_1", ",", "alpha", "=", "0.2", ")", "\n", "di_conv2_2", "=", "conv2d", "(", "di_conv2_1", ",", "3", ",", "3", ",", "2", ",", "2", ",", "256", ",", "'di_conv2_2'", ",", "padding", "=", "'VALID'", ",", "relu", "=", "False", ",", "trainable", "=", "trainable", ")", "\n", "di_conv2_2", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "di_conv2_2", ",", "alpha", "=", "0.2", ")", "\n", "\n", "di_conv3_1", "=", "conv2d", "(", "di_conv2_2", ",", "3", ",", "3", ",", "1", ",", "1", ",", "256", ",", "'di_conv3_1'", ",", "relu", "=", "False", ",", "trainable", "=", "trainable", ")", "\n", "di_conv3_1", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "di_conv3_1", ",", "alpha", "=", "0.2", ")", "\n", "di_conv3_2", "=", "conv2d", "(", "di_conv3_1", ",", "3", ",", "3", ",", "2", ",", "2", ",", "512", ",", "'di_conv3_2'", ",", "padding", "=", "'VALID'", ",", "relu", "=", "False", ",", "trainable", "=", "trainable", ")", "\n", "di_conv3_2", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "di_conv3_2", ",", "alpha", "=", "0.2", ")", "\n", "\n", "di_conv4_1", "=", "conv2d", "(", "di_conv3_2", ",", "3", ",", "3", ",", "1", ",", "1", ",", "512", ",", "'di_conv4_1'", ",", "relu", "=", "False", ",", "trainable", "=", "trainable", ")", "\n", "\n", "x", "=", "tf", ".", "contrib", ".", "layers", ".", "flatten", "(", "di_conv4_1", ")", "\n", "x", "=", "tf", ".", "layers", ".", "dense", "(", "x", ",", "512", ")", "\n", "x", "=", "tf", ".", "nn", ".", "leaky_relu", "(", "x", ",", "alpha", "=", "0.2", ")", "\n", "logits", "=", "tf", ".", "layers", ".", "dense", "(", "x", ",", "1", ")", "\n", "#x = tf.sigmoid(logits)", "\n", "\n", "", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.generator": [[74, 104], ["tensorflow.variable_scope", "networks.conv2d", "networks.conv2d", "networks.conv2d", "networks.deconv2d", "networks.edge_conv", "tensorflow.concat", "networks.conv2d", "networks.conv2d", "networks.deconv2d", "networks.edge_conv", "tensorflow.concat", "networks.conv2d", "networks.conv2d", "networks.deconv2d", "networks.edge_conv", "tensorflow.concat", "networks.conv2d"], "function", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.deconv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.edge_conv", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.deconv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.edge_conv", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.deconv2d", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.edge_conv", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.networks.conv2d"], ["", "def", "generator", "(", "input", ",", "training", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "\"generator\"", ")", ":", "\n", "        ", "Conv1", "=", "conv2d", "(", "input", ",", "3", ",", "3", ",", "1", ",", "1", ",", "512", ",", "'Conv1'", ",", "relu", "=", "False", ",", "trainable", "=", "training", ")", "\n", "\n", "Step1_1", "=", "conv2d", "(", "Conv1", ",", "3", ",", "3", ",", "1", ",", "1", ",", "512", ",", "'Step1_1'", ",", "trainable", "=", "training", ")", "\n", "Step1_2", "=", "conv2d", "(", "Step1_1", ",", "3", ",", "3", ",", "1", ",", "1", ",", "512", ",", "'Step1_2'", ",", "trainable", "=", "training", ")", "\n", "Step1_res", "=", "Conv1", "+", "Step1_2", "\n", "Step1_de", "=", "deconv2d", "(", "Step1_res", ",", "4", ",", "4", ",", "2", ",", "2", ",", "256", ",", "'Step1_de'", ",", "trainable", "=", "training", ")", "\n", "\n", "Step1_edge", ",", "sub1", "=", "edge_conv", "(", "Step1_de", ",", "ksize", "=", "5", ",", "strides", "=", "1", ",", "name", "=", "'Step1_edge'", ",", "trainalbe", "=", "training", ")", "\n", "Step1_con", "=", "tf", ".", "concat", "(", "[", "Step1_de", ",", "sub1", "]", ",", "axis", "=", "3", ")", "\n", "\n", "Step2_1", "=", "conv2d", "(", "Step1_con", ",", "3", ",", "3", ",", "1", ",", "1", ",", "512", ",", "'Step2_1'", ",", "trainable", "=", "training", ")", "\n", "Step2_2", "=", "conv2d", "(", "Step2_1", ",", "3", ",", "3", ",", "1", ",", "1", ",", "256", ",", "'Step2_2'", ",", "trainable", "=", "training", ")", "\n", "Step2_res", "=", "Step1_de", "+", "Step2_2", "\n", "Step2_de", "=", "deconv2d", "(", "Step2_res", ",", "4", ",", "4", ",", "2", ",", "2", ",", "128", ",", "'Step2_de'", ",", "trainable", "=", "training", ")", "\n", "\n", "Step2_edge", ",", "sub2", "=", "edge_conv", "(", "Step2_de", ",", "ksize", "=", "7", ",", "strides", "=", "1", ",", "name", "=", "'Step2_edge'", ",", "trainalbe", "=", "training", ")", "\n", "Step2_con", "=", "tf", ".", "concat", "(", "[", "Step2_de", ",", "sub2", "]", ",", "axis", "=", "3", ")", "\n", "\n", "Step3_1", "=", "conv2d", "(", "Step2_con", ",", "3", ",", "3", ",", "1", ",", "1", ",", "256", ",", "'Step3_1'", ",", "trainable", "=", "training", ")", "\n", "Step3_2", "=", "conv2d", "(", "Step3_1", ",", "3", ",", "3", ",", "1", ",", "1", ",", "128", ",", "'Step3_2'", ",", "trainable", "=", "training", ")", "\n", "Step3_res", "=", "Step2_de", "+", "Step3_2", "\n", "Step3_de", "=", "deconv2d", "(", "Step3_res", ",", "4", ",", "4", ",", "2", ",", "2", ",", "64", ",", "'Step3_de'", ",", "trainable", "=", "training", ")", "\n", "\n", "Step3_edge", ",", "sub3", "=", "edge_conv", "(", "Step3_de", ",", "ksize", "=", "10", ",", "strides", "=", "1", ",", "name", "=", "'Step3_edge'", ",", "trainalbe", "=", "training", ")", "\n", "Step3_con", "=", "tf", ".", "concat", "(", "[", "Step3_de", ",", "sub3", "]", ",", "axis", "=", "3", ")", "\n", "\n", "RGB", "=", "conv2d", "(", "Step3_con", ",", "1", ",", "1", ",", "1", ",", "1", ",", "3", ",", "'RGB'", ",", "relu", "=", "False", ",", "trainable", "=", "training", ")", "\n", "", "return", "RGB", ",", "Step1_edge", ",", "Step2_edge", ",", "Step3_edge", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.visualizer.Visualizer.__init__": [[9, 17], ["os.path.join", "open", "time.strftime", "log_file.write"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "\n", "if", "opt", ".", "isTrain", ":", "\n", "            ", "self", ".", "log_name", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoint_path", ",", "opt", ".", "save_path", ",", "'loss_log.txt'", ")", "\n", "with", "open", "(", "self", ".", "log_name", ",", "\"a\"", ")", "as", "log_file", ":", "\n", "                ", "now", "=", "time", ".", "strftime", "(", "\"%c\"", ")", "\n", "log_file", ".", "write", "(", "'================ Training Loss (%s) ================\\n'", "%", "now", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.visualizer.Visualizer.loss_initialization": [[18, 32], ["collections.OrderedDict"], "methods", ["None"], ["", "", "", "def", "loss_initialization", "(", "self", ")", ":", "\n", "        ", "MSE", "=", "0", "\n", "EDGE", "=", "0", "\n", "YUV", "=", "0", "\n", "G_GAN", "=", "0", "\n", "D_GAN", "=", "0", "\n", "G_total", "=", "0", "\n", "losses", "=", "OrderedDict", "(", "[", "(", "'G_total'", ",", "G_total", ")", ",", "\n", "(", "'MSE'", ",", "MSE", ")", ",", "\n", "(", "'EDGE'", ",", "EDGE", ")", ",", "\n", "(", "'YUV'", ",", "YUV", ")", ",", "\n", "(", "'G_GAN'", ",", "G_GAN", ")", ",", "\n", "(", "'D_GAN'", ",", "D_GAN", ")", "]", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.visualizer.Visualizer.print_save_current_error": [[34, 42], ["errors.items", "print", "open", "log_file.write"], "methods", ["None"], ["", "def", "print_save_current_error", "(", "self", ",", "epoch", ",", "i", ",", "errors", ")", ":", "\n", "        ", "message", "=", "'(epoch: %d, iters: %d) '", "%", "(", "epoch", ",", "i", ")", "\n", "for", "k", ",", "v", "in", "errors", ".", "items", "(", ")", ":", "\n", "            ", "message", "+=", "'%s: %.4f '", "%", "(", "k", ",", "v", ")", "\n", "\n", "", "print", "(", "message", ")", "\n", "with", "open", "(", "self", ".", "log_name", ",", "\"a\"", ")", "as", "log_file", ":", "\n", "            ", "log_file", ".", "write", "(", "'%s\\n'", "%", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.visualizer.Visualizer.save_image": [[44, 61], ["image_numpy.items", "os.path.join", "os.path.join", "visualizer.Visualizer.tile_image", "PIL.Image.fromarray", "PIL.Image.fromarray.save", "os.path.exists", "os.makedirs", "visualizer.Visualizer.astype", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.visualizer.Visualizer.tile_image"], ["", "", "def", "save_image", "(", "self", ",", "epoch", ",", "image_numpy", ",", "create_dir", "=", "True", ")", ":", "\n", "#self.opt.isTrain = False", "\n", "        ", "if", "self", ".", "opt", ".", "isTrain", ":", "\n", "            ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opt", ".", "checkpoint_path", ",", "self", ".", "opt", ".", "save_path", ",", "'images'", ")", "\n", "", "else", ":", "\n", "            ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "opt", ".", "checkpoint_path", ",", "self", ".", "opt", ".", "save_path", ",", "'test_images'", ")", "\n", "", "if", "create_dir", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "image_path", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "image_path", ")", "\n", "", "", "for", "k", ",", "v", "in", "image_numpy", ".", "items", "(", ")", ":", "\n", "            ", "image", "=", "self", ".", "tile_image", "(", "v", ")", "\n", "image_pil", "=", "Image", ".", "fromarray", "(", "image", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "if", "self", ".", "opt", ".", "isTrain", ":", "\n", "                ", "image_name", "=", "'%d_epoch_%s_image.png'", "%", "(", "epoch", ",", "k", ")", "\n", "", "else", ":", "\n", "                ", "image_name", "=", "'%05d_%s.png'", "%", "(", "epoch", ",", "k", ")", "\n", "", "image_pil", ".", "save", "(", "os", ".", "path", ".", "join", "(", "image_path", ",", "image_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.visualizer.Visualizer.tile_image": [[63, 76], ["numpy.shape", "int", "numpy.array", "numpy.zeros", "range", "range"], "methods", ["None"], ["", "", "def", "tile_image", "(", "self", ",", "array", ",", "num_tile", "=", "4", ")", ":", "\n", "        ", "b", ",", "h", ",", "w", ",", "c", "=", "np", ".", "shape", "(", "array", ")", "\n", "h_size", "=", "int", "(", "b", "/", "num_tile", ")", "\n", "if", "h_size", ">", "0", ":", "\n", "            ", "count", "=", "0", "\n", "new_array", "=", "np", ".", "zeros", "(", "(", "h", "*", "h_size", ",", "w", "*", "num_tile", ",", "c", ")", ")", "\n", "for", "h_s", "in", "range", "(", "h_size", ")", ":", "\n", "                ", "for", "w_s", "in", "range", "(", "num_tile", ")", ":", "\n", "                    ", "new_array", "[", "h_s", "*", "h", ":", "(", "h_s", "+", "1", ")", "*", "h", ",", "w_s", "*", "w", ":", "(", "w_s", "+", "1", ")", "*", "w", ",", ":", "]", "=", "array", "[", "count", "]", "\n", "count", "+=", "1", "\n", "", "", "", "else", ":", "\n", "            ", "new_array", "=", "array", "[", "0", "]", "\n", "", "return", "np", ".", "array", "(", "new_array", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.test.get_evaluation.__init__": [[17, 20], ["glob.glob", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "opt", ")", ":", "\n", "        ", "self", ".", "opt", "=", "opt", "\n", "self", ".", "test_list", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "self", ".", "opt", ".", "test_path", ",", "'*.jpg'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.test.get_evaluation.open_image": [[22, 44], ["cv2.imread", "cv2.cvtColor", "cv2.resize.astype", "cv2.warpAffine.astype", "cv2.resize", "cv2.flip", "cv2.getRotationMatrix2D", "cv2.warpAffine", "cv2.resize", "cv2.resize", "cv2.resize"], "methods", ["None"], ["", "def", "open_image", "(", "self", ",", "path", ",", "width", ",", "height", ",", "angle", ",", "isDown", "=", "True", ",", "isCrop", "=", "False", ",", "isResize", "=", "True", ",", "isflip", "=", "False", ",", "isRotate", "=", "False", ")", ":", "\n", "        ", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "if", "isCrop", ":", "\n", "            ", "img", "=", "img", "[", "20", ":", "198", ",", "0", ":", "178", "]", "\n", "", "if", "isResize", ":", "\n", "            ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "width", ",", "height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "if", "isflip", ":", "# horizontal flip", "\n", "            ", "img", "=", "cv2", ".", "flip", "(", "img", ",", "1", ")", "\n", "", "if", "isRotate", ":", "\n", "            ", "img_waf", "=", "img", "\n", "img", "=", "cv2", ".", "getRotationMatrix2D", "(", "(", "width", "/", "2", ",", "height", "/", "2", ")", ",", "angle", ",", "1", ")", "\n", "img", "=", "cv2", ".", "warpAffine", "(", "img_waf", ",", "img", ",", "(", "width", ",", "height", ")", ")", "\n", "", "if", "isDown", ":", "\n", "            ", "img_lr_2", "=", "cv2", ".", "resize", "(", "img", ",", "(", "64", ",", "64", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "img_lr_4", "=", "cv2", ".", "resize", "(", "img_lr_2", ",", "(", "32", ",", "32", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "img_lr", "=", "cv2", ".", "resize", "(", "img_lr_4", ",", "(", "16", ",", "16", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "", "img_lr", "=", "img_lr", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "return", "img", ",", "img_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.test.get_evaluation.get_psnr_ssim": [[45, 75], ["tqdm.tqdm.tqdm", "sorted", "test.get_evaluation.open_image", "imgs.append", "cv2.resize.append", "numpy.array", "numpy.array", "sess.run", "cv2.imwrite", "cv2.resize", "cv2.imwrite", "image.split", "name.split", "os.path.join", "os.path.join", "cv2.cvtColor", "cv2.cvtColor", "str", "str"], "methods", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.utils.data_augmentation.open_image"], ["", "def", "get_psnr_ssim", "(", "self", ",", ")", ":", "\n", "\n", "        ", "for", "image", "in", "tqdm", "(", "sorted", "(", "self", ".", "test_list", ")", ")", ":", "\n", "            ", "name", "=", "image", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "name", "=", "name", ".", "split", "(", "'.'", ")", "[", "0", "]", "\n", "imgs", "=", "[", "]", "\n", "imgs_lr", "=", "[", "]", "\n", "\n", "img", ",", "img_lr", "=", "self", ".", "open_image", "(", "image", ",", "width", "=", "self", ".", "opt", ".", "crop_size", ",", "height", "=", "self", ".", "opt", ".", "crop_size", ",", "\n", "isDown", "=", "True", ",", "\n", "isCrop", "=", "False", ",", "\n", "isResize", "=", "True", ",", "\n", "isflip", "=", "False", ",", "\n", "isRotate", "=", "False", ",", "\n", "angle", "=", "0", ")", "\n", "\n", "imgs", ".", "append", "(", "img", ")", "\n", "imgs_lr", ".", "append", "(", "img_lr", ")", "\n", "\n", "imgs_hr", "=", "np", ".", "array", "(", "imgs", ")", "\n", "imgs_lr", "=", "np", ".", "array", "(", "imgs_lr", ")", "\n", "\n", "imgs_sr", ",", "edgex2", ",", "edgex4", ",", "edgex8", "=", "sess", ".", "run", "(", "[", "RGB", ",", "Step1_edge", ",", "Step2_edge", ",", "Step3_edge", "]", ",", "\n", "feed_dict", "=", "{", "X_hr", ":", "imgs_hr", ",", "\n", "X_lr", ":", "imgs_lr", "}", ")", "\n", "\n", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "save_path", ",", "str", "(", "name", ")", "+", "'_SR'", "+", "'.jpg'", ")", ",", "cv2", ".", "cvtColor", "(", "imgs_sr", "[", "0", "]", "/", "255", ",", "cv2", ".", "COLOR_RGB2BGR", ")", "*", "255", ")", "\n", "imgs_lr", "=", "cv2", ".", "resize", "(", "imgs_lr", "[", "0", "]", ",", "(", "128", ",", "128", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "save_path", ",", "str", "(", "name", ")", "+", "'_LR'", "+", "'.jpg'", ")", ",", "cv2", ".", "cvtColor", "(", "imgs_lr", "/", "255", ",", "cv2", ".", "COLOR_RGB2BGR", ")", "*", "255", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.utils.data_augmentation.__init__": [[14, 18], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "train_list", ",", "test_list", ")", ":", "\n", "\n", "        ", "self", ".", "train_list", "=", "train_list", "\n", "self", ".", "test_list", "=", "test_list", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.utils.data_augmentation.open_image": [[19, 57], ["cv2.imread", "cv2.cvtColor", "cv2.resize", "cv2.resize", "cv2.resize", "cv2.cvtColor", "cv2.Canny", "cv2.cvtColor", "cv2.Canny", "cv2.cvtColor", "cv2.Canny", "cv2.warpAffine.astype", "img_lr.astype.astype.astype", "numpy.reshape.astype", "numpy.reshape", "numpy.reshape.astype", "numpy.reshape", "numpy.reshape.astype", "numpy.reshape", "cv2.resize", "cv2.flip", "cv2.getRotationMatrix2D", "cv2.warpAffine"], "methods", ["None"], ["", "def", "open_image", "(", "self", ",", "path", ",", "width", ",", "height", ",", "isCrop", "=", "False", ",", "isResize", "=", "True", ",", "isflip", "=", "False", ",", "isRotate", "=", "False", ",", "angle", "=", "0", ")", ":", "\n", "# print(self.data_list[class_list][subclass_list][start])", "\n", "        ", "img", "=", "cv2", ".", "imread", "(", "path", ")", "\n", "img", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "if", "isCrop", ":", "\n", "            ", "img", "=", "img", "[", "20", ":", "198", ",", "0", ":", "178", "]", "\n", "", "if", "isResize", ":", "\n", "            ", "img", "=", "cv2", ".", "resize", "(", "img", ",", "(", "width", ",", "height", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "", "if", "isflip", ":", "# horizontal flip", "\n", "            ", "img", "=", "cv2", ".", "flip", "(", "img", ",", "1", ")", "\n", "", "if", "isRotate", ":", "\n", "            ", "img_waf", "=", "img", "\n", "img", "=", "cv2", ".", "getRotationMatrix2D", "(", "(", "width", "/", "2", ",", "height", "/", "2", ")", ",", "angle", ",", "1", ")", "\n", "img", "=", "cv2", ".", "warpAffine", "(", "img_waf", ",", "img", ",", "(", "width", ",", "height", ")", ")", "\n", "\n", "", "img_lr_2", "=", "cv2", ".", "resize", "(", "img", ",", "(", "64", ",", "64", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "img_lr_4", "=", "cv2", ".", "resize", "(", "img_lr_2", ",", "(", "32", ",", "32", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "img_lr", "=", "cv2", ".", "resize", "(", "img_lr_4", ",", "(", "16", ",", "16", ")", ",", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "img_grad", "=", "cv2", ".", "cvtColor", "(", "img", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "img_grad", "=", "cv2", ".", "Canny", "(", "img_grad", ",", "50", ",", "255", ")", "\n", "\n", "img_grad_2", "=", "cv2", ".", "cvtColor", "(", "img_lr_2", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "img_grad_2", "=", "cv2", ".", "Canny", "(", "img_grad_2", ",", "50", ",", "255", ")", "\n", "\n", "img_grad_4", "=", "cv2", ".", "cvtColor", "(", "img_lr_4", ",", "cv2", ".", "COLOR_BGR2GRAY", ")", "\n", "img_grad_4", "=", "cv2", ".", "Canny", "(", "img_grad_4", ",", "50", ",", "255", ")", "\n", "\n", "img", "=", "img", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_lr", "=", "img_lr", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_grad", "=", "img_grad", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_grad", "=", "np", ".", "reshape", "(", "img_grad", ",", "(", "128", ",", "128", ",", "1", ")", ")", "\n", "img_grad_2", "=", "img_grad_2", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_grad_2", "=", "np", ".", "reshape", "(", "img_grad_2", ",", "(", "64", ",", "64", ",", "1", ")", ")", "\n", "img_grad_4", "=", "img_grad_4", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_grad_4", "=", "np", ".", "reshape", "(", "img_grad_4", ",", "(", "32", ",", "32", ",", "1", ")", ")", "\n", "\n", "return", "img", ",", "img_lr", ",", "img_grad", ",", "img_grad_2", ",", "img_grad_4", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.utils.data_augmentation.next_batch": [[58, 88], ["range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "random.choice", "random.choice", "random.choice", "random.choice", "utils.data_augmentation.open_image", "numpy.array.append", "numpy.array.append", "numpy.array.append", "numpy.array.append", "numpy.array.append"], "methods", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.utils.data_augmentation.open_image"], ["", "def", "next_batch", "(", "self", ",", "batch_size", ",", "width", ",", "height", ")", ":", "\n", "        ", "imgs", "=", "[", "]", "\n", "imgs_lr", "=", "[", "]", "\n", "imgs_grad", "=", "[", "]", "\n", "imgs_grad_2", "=", "[", "]", "\n", "imgs_grad_4", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "            ", "train_img", "=", "random", ".", "choice", "(", "self", ".", "train_list", ")", "\n", "\n", "flip", "=", "random", ".", "choice", "(", "[", "True", ",", "False", "]", ")", "\n", "rotation", "=", "random", ".", "choice", "(", "[", "True", ",", "False", "]", ")", "\n", "angle", "=", "random", ".", "choice", "(", "[", "90", ",", "180", ",", "270", "]", ")", "\n", "\n", "img", ",", "img_lr", ",", "img_grad", ",", "img_grad_2", ",", "img_grad_4", "=", "self", ".", "open_image", "(", "train_img", ",", "width", "=", "width", ",", "\n", "height", "=", "height", ",", "isflip", "=", "flip", ",", "\n", "isRotate", "=", "rotation", ",", "angle", "=", "angle", ")", "\n", "imgs", ".", "append", "(", "img", ")", "\n", "imgs_lr", ".", "append", "(", "img_lr", ")", "\n", "imgs_grad", ".", "append", "(", "img_grad", ")", "\n", "imgs_grad_2", ".", "append", "(", "img_grad_2", ")", "\n", "imgs_grad_4", ".", "append", "(", "img_grad_4", ")", "\n", "\n", "", "imgs", "=", "np", ".", "array", "(", "imgs", ")", "\n", "imgs_lr", "=", "np", ".", "array", "(", "imgs_lr", ")", "\n", "imgs_grad", "=", "np", ".", "array", "(", "imgs_grad", ")", "\n", "imgs_grad_2", "=", "np", ".", "array", "(", "imgs_grad_2", ")", "\n", "imgs_grad_4", "=", "np", ".", "array", "(", "imgs_grad_4", ")", "\n", "\n", "return", "imgs", ",", "imgs_lr", ",", "imgs_grad", ",", "imgs_grad_2", ",", "imgs_grad_4", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.utils.data_augmentation.next_batch_test": [[89, 119], ["range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "random.choice", "utils.data_augmentation.open_image", "numpy.array.append", "numpy.array.append", "numpy.array.append", "numpy.array.append", "numpy.array.append"], "methods", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.utils.data_augmentation.open_image"], ["", "def", "next_batch_test", "(", "self", ",", "batch_size", ",", "width", ",", "height", ")", ":", "\n", "        ", "imgs", "=", "[", "]", "\n", "imgs_lr", "=", "[", "]", "\n", "imgs_grad", "=", "[", "]", "\n", "imgs_grad_2", "=", "[", "]", "\n", "imgs_grad_4", "=", "[", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "            ", "test_img", "=", "random", ".", "choice", "(", "self", ".", "test_list", ")", "\n", "\n", "flip", "=", "False", "\n", "rotation", "=", "False", "\n", "angle", "=", "0", "\n", "\n", "img", ",", "img_lr", ",", "img_grad", ",", "img_grad_2", ",", "img_grad_4", "=", "self", ".", "open_image", "(", "test_img", ",", "width", "=", "width", ",", "\n", "height", "=", "height", ",", "isflip", "=", "flip", ",", "\n", "isRotate", "=", "rotation", ",", "angle", "=", "angle", ")", "\n", "imgs", ".", "append", "(", "img", ")", "\n", "imgs_lr", ".", "append", "(", "img_lr", ")", "\n", "imgs_grad", ".", "append", "(", "img_grad", ")", "\n", "imgs_grad_2", ".", "append", "(", "img_grad_2", ")", "\n", "imgs_grad_4", ".", "append", "(", "img_grad_4", ")", "\n", "\n", "", "imgs", "=", "np", ".", "array", "(", "imgs", ")", "\n", "imgs_lr", "=", "np", ".", "array", "(", "imgs_lr", ")", "\n", "imgs_grad", "=", "np", ".", "array", "(", "imgs_grad", ")", "\n", "imgs_grad_2", "=", "np", ".", "array", "(", "imgs_grad_2", ")", "\n", "imgs_grad_4", "=", "np", ".", "array", "(", "imgs_grad_4", ")", "\n", "\n", "return", "imgs", ",", "imgs_lr", ",", "imgs_grad", ",", "imgs_grad_2", ",", "imgs_grad_4", "", "", "", ""]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.None.utils.make_data_path": [[7, 11], ["glob.glob", "glob.glob", "os.path.join", "os.path.join"], "function", ["None"], ["def", "make_data_path", "(", "train_list", ",", "test_list", ")", ":", "\n", "    ", "train", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "train_list", ",", "'*'", ")", ")", "\n", "test", "=", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "test_list", ",", "'*'", ")", ")", "\n", "return", "train", ",", "test", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.test_options.TestOptions.initialize": [[10, 19], ["base_options.BaseOptions.initialize", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "methods", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.initialize"], ["    ", "def", "initialize", "(", "self", ",", "parser", ")", ":", "\n", "        ", "BaseOptions", ".", "initialize", "(", "self", ",", "parser", ")", "\n", "parser", ".", "add_argument", "(", "'--weight_path'", ",", "type", "=", "str", ",", "default", "=", "'checkpoint/CelebA'", ",", "help", "=", "'which epoch to load? set to latest to use latest cached model'", ")", "\n", "parser", ".", "add_argument", "(", "'--image_save_path'", ",", "type", "=", "str", ",", "default", "=", "'result'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--status'", ",", "type", "=", "str", ",", "default", "=", "'test'", ")", "\n", "\n", "self", ".", "isTrain", "=", "False", "\n", "return", "parser", "\n", "", "", ""]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.train_options.TrainOptions.initialize": [[10, 32], ["base_options.BaseOptions.initialize", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "methods", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.initialize"], ["    ", "def", "initialize", "(", "self", ",", "parser", ")", ":", "\n", "        ", "BaseOptions", ".", "initialize", "(", "self", ",", "parser", ")", "\n", "# for save and display", "\n", "parser", ".", "add_argument", "(", "'--display_epoch_freq'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'frequency of showing training results on screen'", ")", "\n", "parser", ".", "add_argument", "(", "'--print_epoch_freq'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'frequency of showing training results on console'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_epoch_freq'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'frequency of saving checkpoints at the end of epochs'", ")", "\n", "\n", "# for training", "\n", "parser", ".", "add_argument", "(", "'--learning_rate'", ",", "type", "=", "float", ",", "default", "=", "0.0001", ")", "\n", "parser", ".", "add_argument", "(", "'--ad_r'", ",", "type", "=", "float", ",", "default", "=", "5e-3", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch'", ",", "type", "=", "int", ",", "default", "=", "200", ")", "\n", "parser", ".", "add_argument", "(", "'--D_steps_per_G'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'number of discriminator iterations per generator iterations.'", ")", "\n", "parser", ".", "add_argument", "(", "'--continue_train'", ",", "action", "=", "'store_true'", ",", "help", "=", "'continue training: load the latest model'", ")", "\n", "parser", ".", "add_argument", "(", "'--which_epoch'", ",", "type", "=", "int", ",", "help", "=", "'which epoch to load? set to latest to use latest cached model'", ")", "\n", "parser", ".", "add_argument", "(", "'--max_to_keep'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "''", ")", "\n", "\n", "# for discriminators", "\n", "parser", ".", "add_argument", "(", "'--lambda_edge'", ",", "type", "=", "float", ",", "default", "=", "0.3", ",", "help", "=", "'weight for feature matching loss'", ")", "\n", "parser", ".", "add_argument", "(", "'--status'", ",", "type", "=", "str", ",", "default", "=", "'train'", ")", "\n", "\n", "self", ".", "isTrain", "=", "True", "\n", "return", "parser", "\n", "", "", ""]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.initialize": [[12, 28], ["parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument", "parser.add_argument"], "methods", ["None"], ["    ", "def", "initialize", "(", "self", ",", "parser", ")", ":", "\n", "# experiment specifics", "\n", "        ", "parser", ".", "add_argument", "(", "'--save_path'", ",", "type", "=", "str", ",", "default", "=", "'CelebA'", ",", "help", "=", "'name of the experiment. It decides where to store samples'", ")", "\n", "parser", ".", "add_argument", "(", "'--gpu_ids'", ",", "type", "=", "str", ",", "default", "=", "'0'", ",", "help", "=", "'gpu ids: e.g. 0  0,1,2, 0,2.'", ")", "\n", "parser", ".", "add_argument", "(", "'--checkpoint_path'", ",", "type", "=", "str", ",", "default", "=", "'checkpoint'", ",", "help", "=", "'models are saved here'", ")", "\n", "parser", ".", "add_argument", "(", "'--train_path'", ",", "type", "=", "str", ",", "default", "=", "'datasets/train'", ",", "help", "=", "'train images are saved in here'", ")", "\n", "parser", ".", "add_argument", "(", "'--test_path'", ",", "type", "=", "str", ",", "default", "=", "'datasets/test'", ",", "help", "=", "'test images are saved in here'", ")", "\n", "\n", "# input/output", "\n", "parser", ".", "add_argument", "(", "'--batchSize'", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "'input batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--load_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'Scale images to this size. The final image will be cropped to --crop_size.'", ")", "\n", "parser", ".", "add_argument", "(", "'--crop_size'", ",", "type", "=", "int", ",", "default", "=", "128", ",", "help", "=", "'Crop to the width of crop_size (after initially scaling the images to load_size.)'", ")", "\n", "parser", ".", "add_argument", "(", "'--output_nc'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'# of output image channels'", ")", "\n", "parser", ".", "add_argument", "(", "'--no_flip'", ",", "action", "=", "'store_true'", ",", "help", "=", "'if specified, do not flip the images for data argumentation'", ")", "\n", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.gather_options": [[29, 38], ["argparse.ArgumentParser", "base_options.BaseOptions.initialize", "base_options.BaseOptions.parse_args"], "methods", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.initialize"], ["", "def", "gather_options", "(", "self", ")", ":", "\n", "# initialize parser with basic options", "\n", "        ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", "=", "self", ".", "initialize", "(", "parser", ")", "\n", "\n", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "self", ".", "parser", "=", "parser", "\n", "return", "opt", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.print_options": [[39, 50], ["sorted", "print", "vars().items", "base_options.BaseOptions.parser.get_default", "str", "str", "vars", "str"], "methods", ["None"], ["", "def", "print_options", "(", "self", ",", "opt", ")", ":", "\n", "        ", "message", "=", "''", "\n", "message", "+=", "'----------------- Options ---------------\\n'", "\n", "for", "k", ",", "v", "in", "sorted", "(", "vars", "(", "opt", ")", ".", "items", "(", ")", ")", ":", "\n", "            ", "comment", "=", "''", "\n", "default", "=", "self", ".", "parser", ".", "get_default", "(", "k", ")", "\n", "if", "v", "!=", "default", ":", "\n", "                ", "comment", "=", "'\\t[default: %s]'", "%", "str", "(", "default", ")", "\n", "", "message", "+=", "'{:>25}: {:<30}{}\\n'", ".", "format", "(", "str", "(", "k", ")", ",", "str", "(", "v", ")", ",", "comment", ")", "\n", "", "message", "+=", "'----------------- End -------------------'", "\n", "print", "(", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.option_file_path": [[51, 58], ["os.path.join", "os.path.join", "os.path.exists", "os.makedirs"], "methods", ["None"], ["", "def", "option_file_path", "(", "self", ",", "opt", ",", "makedir", "=", "False", ")", ":", "\n", "        ", "expr_dir", "=", "os", ".", "path", ".", "join", "(", "opt", ".", "checkpoint_path", ",", "opt", ".", "save_path", ")", "\n", "if", "makedir", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "expr_dir", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "expr_dir", ")", "\n", "", "", "file_name", "=", "os", ".", "path", ".", "join", "(", "expr_dir", ",", "'opt'", ")", "\n", "return", "file_name", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.save_options": [[59, 71], ["base_options.BaseOptions.option_file_path", "open", "sorted", "open", "pickle.dump", "vars().items", "base_options.BaseOptions.parser.get_default", "opt_file.write", "vars", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.option_file_path"], ["", "def", "save_options", "(", "self", ",", "opt", ")", ":", "\n", "        ", "file_name", "=", "self", ".", "option_file_path", "(", "opt", ",", "makedir", "=", "True", ")", "\n", "with", "open", "(", "file_name", "+", "'.txt'", ",", "'wt'", ")", "as", "opt_file", ":", "\n", "            ", "for", "k", ",", "v", "in", "sorted", "(", "vars", "(", "opt", ")", ".", "items", "(", ")", ")", ":", "\n", "                ", "comment", "=", "''", "\n", "default", "=", "self", ".", "parser", ".", "get_default", "(", "k", ")", "\n", "if", "v", "!=", "default", ":", "\n", "                    ", "comment", "=", "'\\t[default: %s]'", "%", "str", "(", "default", ")", "\n", "", "opt_file", ".", "write", "(", "'{:>25}: {:<30}{}\\n'", ".", "format", "(", "str", "(", "k", ")", ",", "str", "(", "v", ")", ",", "comment", ")", ")", "\n", "\n", "", "", "with", "open", "(", "file_name", "+", "'.pkl'", ",", "'wb'", ")", "as", "opt_file", ":", "\n", "            ", "pickle", ".", "dump", "(", "opt", ",", "opt_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.parse": [[73, 84], ["base_options.BaseOptions.gather_options", "base_options.BaseOptions.print_options", "base_options.BaseOptions.save_options"], "methods", ["home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.gather_options", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.print_options", "home.repos.pwc.inspect_result.BenjaminJonghyun_EIPNet.options.base_options.BaseOptions.save_options"], ["", "", "def", "parse", "(", "self", ",", "save", "=", "False", ")", ":", "\n", "\n", "        ", "opt", "=", "self", ".", "gather_options", "(", ")", "\n", "opt", ".", "isTrain", "=", "self", ".", "isTrain", "# train or test", "\n", "\n", "self", ".", "print_options", "(", "opt", ")", "\n", "if", "opt", ".", "isTrain", ":", "\n", "            ", "self", ".", "save_options", "(", "opt", ")", "\n", "\n", "", "self", ".", "opt", "=", "opt", "\n", "return", "self", ".", "opt", "\n", "", "", ""]]}