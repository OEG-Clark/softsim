{"home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.__init__": [[20, 76], ["dict", "workspace.workspace.create_flatten_supporting_set", "os.path.join", "workspace.workspace.read_supporting_sets", "workspace.workspace.target_sets.append", "workspace.workspace.target_sets_files.append", "range", "dict", "range", "os.path.join", "workspace.workspace.read_supporting_sets", "range", "os.path.join", "os.path.isfile", "os.path.join", "workspace.workspace.target_sets.append", "workspace.workspace.target_sets.append", "workspace.workspace.target_sets.append", "workspace.workspace.target_sets_files.append", "workspace.workspace.target_sets_files.append", "workspace.workspace.target_sets_files.append", "workspace.workspace.read_sentences", "len", "len", "workspace.workspace.train_intent2ids_list[].append", "len", "os.path.join", "os.path.join", "os.path.join", "workspace.workspace.read_sentences", "workspace.workspace.read_sentences", "workspace.workspace.read_sentences", "Exception"], "methods", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.create_flatten_supporting_set", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.read_supporting_sets", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.read_supporting_sets", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.read_sentences", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.read_sentences", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.read_sentences", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.read_sentences"], ["    ", "def", "__init__", "(", "self", ",", "workspace_name", ",", "params", ",", "role", ")", ":", "\n", "        ", "''' Description: '''", "\n", "self", ".", "role", "=", "role", "\n", "self", ".", "wid", "=", "workspace_name", "\n", "self", ".", "word2idx", "=", "params", "[", "'vocabulary'", "]", "\n", "self", ".", "supporting_sets", "=", "[", "]", "\n", "self", ".", "flatten_supporting_sets", "=", "None", "\n", "self", ".", "lb2id", "=", "dict", "(", ")", "\n", "self", ".", "lblist", "=", "[", "]", "\n", "self", ".", "params", "=", "params", "\n", "\n", "self", ".", "target_sets", "=", "[", "]", "\n", "self", ".", "target_sets_files", "=", "[", "]", "\n", "self", ".", "labels_in_train", "=", "None", "\n", "self", ".", "train_intent2ids_list", "=", "None", "\n", "\n", "if", "self", ".", "role", "==", "'train_workspace'", ":", "\n", "            ", "trainfile", "=", "os", ".", "path", ".", "join", "(", "params", "[", "'mnet_training_dir'", "]", ",", "\n", "workspace_name", "+", "'.train'", ")", "\n", "self", ".", "read_supporting_sets", "(", "trainfile", ")", "\n", "self", ".", "target_sets", ".", "append", "(", "self", ".", "read_sentences", "(", "trainfile", ")", ")", "\n", "self", ".", "target_sets_files", ".", "append", "(", "trainfile", ")", "\n", "self", ".", "labels_in_train", "=", "range", "(", "0", ",", "len", "(", "self", ".", "supporting_sets", ")", ")", "\n", "self", ".", "train_intent2ids_list", "=", "dict", "(", "[", "(", "l", ",", "[", "]", ")", "for", "l", "in", "self", ".", "labels_in_train", "]", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "target_sets", "[", "0", "]", ")", ")", ":", "\n", "                ", "utt", "=", "self", ".", "target_sets", "[", "0", "]", "[", "idx", "]", "\n", "label", "=", "utt", "[", "SENT_LABELID", "]", "\n", "self", ".", "train_intent2ids_list", "[", "label", "]", ".", "append", "(", "idx", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "role", "==", "'valid_workspace'", ":", "\n", "                ", "indir", "=", "params", "[", "'mnet_dev_dir'", "]", "\n", "", "elif", "self", ".", "role", "==", "'test_workspace'", ":", "\n", "                ", "indir", "=", "params", "[", "'testing_dir'", "]", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "'Unknown workspace role'", ")", "\n", "\n", "", "support_set_file", "=", "os", ".", "path", ".", "join", "(", "indir", ",", "\n", "workspace_name", "+", "'.train'", ")", "\n", "self", ".", "read_supporting_sets", "(", "support_set_file", ")", "\n", "self", ".", "labels_in_train", "=", "range", "(", "0", ",", "len", "(", "self", ".", "supporting_sets", ")", ")", "\n", "\n", "trainfile", "=", "os", ".", "path", ".", "join", "(", "indir", ",", "workspace_name", "+", "'.train'", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "indir", ",", "workspace_name", "+", "'.dev'", ")", ")", ":", "\n", "                ", "validfile", "=", "os", ".", "path", ".", "join", "(", "indir", ",", "workspace_name", "+", "'.dev'", ")", "\n", "", "else", ":", "\n", "                ", "validfile", "=", "os", ".", "path", ".", "join", "(", "indir", ",", "workspace_name", "+", "'.test'", ")", "\n", "", "testfile", "=", "os", ".", "path", ".", "join", "(", "indir", ",", "workspace_name", "+", "'.test'", ")", "\n", "\n", "self", ".", "target_sets", ".", "append", "(", "self", ".", "read_sentences", "(", "trainfile", ")", ")", "\n", "self", ".", "target_sets", ".", "append", "(", "self", ".", "read_sentences", "(", "validfile", ")", ")", "\n", "self", ".", "target_sets", ".", "append", "(", "self", ".", "read_sentences", "(", "testfile", ")", ")", "\n", "self", ".", "target_sets_files", ".", "append", "(", "trainfile", ")", "\n", "self", ".", "target_sets_files", ".", "append", "(", "validfile", ")", "\n", "self", ".", "target_sets_files", ".", "append", "(", "testfile", ")", "\n", "\n", "", "self", ".", "create_flatten_supporting_set", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.update_lbmaps": [[77, 82], ["len", "workspace.workspace.lblist.append"], "methods", ["None"], ["", "def", "update_lbmaps", "(", "self", ",", "lb", ")", ":", "\n", "        ", "if", "lb", "not", "in", "self", ".", "lb2id", ":", "\n", "            ", "newidx", "=", "len", "(", "self", ".", "lb2id", ")", "\n", "self", ".", "lb2id", "[", "lb", "]", "=", "newidx", "\n", "self", ".", "lblist", ".", "append", "(", "lb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.read_sentences": [[83, 108], ["open", "line.strip.strip.strip", "line.strip.strip.split", "len", "workspace.workspace.update_lbmaps", "simple_tokenizer.tokenizeSimple", "target_info.append", "len", "Exception", "textids.append", "textids.append", "int", "int"], "methods", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.update_lbmaps", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.simple_tokenizer.tokenizeSimple"], ["", "", "def", "read_sentences", "(", "self", ",", "filename", ")", ":", "\n", "        ", "target_info", "=", "[", "]", "\n", "with", "open", "(", "filename", ",", "'r'", ")", "as", "fi", ":", "\n", "            ", "for", "line", "in", "fi", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", "\n", "items", "=", "line", ".", "split", "(", "'\\t'", ")", "\n", "if", "len", "(", "items", ")", ">", "1", ":", "\n", "                    ", "text", ",", "lb", "=", "items", "\n", "self", ".", "update_lbmaps", "(", "lb", ")", "\n", "textwds", "=", "tokenizeSimple", "(", "text", ",", "self", ".", "params", "[", "'max_length'", "]", ")", "\n", "textids", "=", "[", "]", "\n", "for", "wd", "in", "textwds", ":", "\n", "                        ", "if", "wd", "in", "self", ".", "word2idx", ":", "\n", "                            ", "textids", ".", "append", "(", "self", ".", "word2idx", "[", "wd", "]", ")", "\n", "", "else", ":", "\n", "                            ", "textids", ".", "append", "(", "UNKNOWN_WORD_INDEX", ")", "\n", "", "", "textids_mask", "=", "[", "int", "(", "wd", "==", "0", ")", "*", "0", "+", "int", "(", "wd", "!=", "0", ")", "*", "1", "\n", "for", "wd", "in", "textids", "]", "\n", "target_info", ".", "append", "(", "(", "textids", ",", "self", ".", "lb2id", "[", "lb", "]", ",", "\n", "textids_mask", ",", "line", ")", ")", "\n", "", "elif", "len", "(", "items", ")", "==", "1", ":", "\n", "                    ", "pass", "\n", "", "else", ":", "\n", "                    ", "raise", "Exception", "(", "\"File Input Wrong\"", ")", "\n", "", "", "", "return", "target_info", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.read_supporting_sets": [[109, 116], ["workspace.workspace.read_sentences", "range", "len", "workspace.workspace.supporting_sets.append", "workspace.workspace.supporting_sets[].append"], "methods", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.read_sentences"], ["", "def", "read_supporting_sets", "(", "self", ",", "filename", ")", ":", "\n", "        ", "sentence_data", "=", "self", ".", "read_sentences", "(", "filename", ")", "\n", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "lblist", ")", ")", ":", "\n", "            ", "self", ".", "supporting_sets", ".", "append", "(", "[", "]", ")", "\n", "", "for", "sent_info", "in", "sentence_data", ":", "\n", "            ", "assert", "(", "sent_info", "[", "1", "]", "is", "not", "None", ")", "\n", "self", ".", "supporting_sets", "[", "sent_info", "[", "1", "]", "]", ".", "append", "(", "sent_info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.select_support_set": [[117, 165], ["range", "len", "len", "numpy.random.permutation().tolist", "ss_sent_info.extend", "len", "range", "len", "len", "random.randint", "numpy.random.permutation", "len", "sentences_id_per_intent.append", "range", "sentences_id_per_intent.append", "len"], "methods", ["None"], ["", "", "def", "select_support_set", "(", "self", ",", "sentence_size_per_intent", ",", "\n", "target_group_id", ",", "target_sid", ",", "sampled_labels", "=", "None", ")", ":", "\n", "\n", "        ", "sent_info", "=", "self", ".", "target_sets", "[", "target_group_id", "]", "[", "target_sid", "]", "\n", "ss_sent_info", "=", "[", "]", "\n", "\n", "for", "lb_idx", "in", "range", "(", "len", "(", "self", ".", "supporting_sets", ")", ")", ":", "\n", "\n", "            ", "if", "self", ".", "params", "[", "'sampling_classes'", "]", ">", "1", "and", "lb_idx", "not", "in", "sampled_labels", ":", "\n", "                ", "continue", "\n", "\n", "", "find_remove_target", "=", "False", "\n", "if", "len", "(", "self", ".", "supporting_sets", "[", "lb_idx", "]", ")", ">", "1", "and", "sent_info", "[", "SENT_LABELID", "]", "==", "lb_idx", "and", "self", ".", "params", "[", "'remove_target_from_support_set'", "]", ":", "\n", "                ", "find_remove_target", "=", "True", "\n", "\n", "", "if", "len", "(", "self", ".", "supporting_sets", "[", "lb_idx", "]", ")", ">", "0", ":", "\n", "                ", "randlist", "=", "numpy", ".", "random", ".", "permutation", "(", "range", "(", "\n", "len", "(", "self", ".", "supporting_sets", "[", "lb_idx", "]", ")", ")", ")", ".", "tolist", "(", ")", "\n", "selfidx", "=", "-", "1", "\n", "\n", "sentences_id_per_intent_tmp", "=", "randlist", "[", ":", "sentence_size_per_intent", "]", "\n", "sentences_id_per_intent", "=", "[", "]", "\n", "if", "find_remove_target", ":", "\n", "                    ", "first_time", "=", "True", "\n", "for", "idx", "in", "range", "(", "len", "(", "sentences_id_per_intent_tmp", ")", ")", ":", "\n", "                        ", "a_support_info", "=", "self", ".", "supporting_sets", "[", "lb_idx", "]", "[", "sentences_id_per_intent_tmp", "[", "idx", "]", "]", "\n", "if", "sent_info", "[", "SENT_WORDID", "]", "==", "a_support_info", "[", "SENT_WORDID", "]", "and", "first_time", "is", "True", ":", "\n", "                                ", "first_time", "is", "False", "\n", "selfidx", "=", "sentences_id_per_intent_tmp", "[", "idx", "]", "\n", "", "else", ":", "\n", "                            ", "sentences_id_per_intent", ".", "append", "(", "sentences_id_per_intent_tmp", "[", "idx", "]", ")", "\n", "", "", "", "else", ":", "\n", "                    ", "sentences_id_per_intent", "=", "sentences_id_per_intent_tmp", "\n", "\n", "", "while", "len", "(", "sentences_id_per_intent", ")", "<", "sentence_size_per_intent", ":", "\n", "                    ", "ll", "=", "len", "(", "randlist", ")", "\n", "rd", "=", "randint", "(", "0", ",", "ll", "-", "1", ")", "\n", "if", "(", "not", "find_remove_target", ")", "or", "selfidx", "!=", "rd", ":", "\n", "                        ", "sentences_id_per_intent", ".", "append", "(", "randlist", "[", "rd", "]", ")", "\n", "\n", "", "", "sentences_per_intent", "=", "[", "self", ".", "supporting_sets", "[", "lb_idx", "]", "[", "i", "]", "\n", "for", "i", "in", "sentences_id_per_intent", "]", "\n", "ss_sent_info", ".", "extend", "(", "sentences_per_intent", ")", "\n", "", "", "return", "ss_sent_info", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.create_flatten_supporting_set": [[166, 171], ["range", "len", "workspace.workspace.flatten_supporting_sets.append"], "methods", ["None"], ["", "def", "create_flatten_supporting_set", "(", "self", ")", ":", "\n", "        ", "self", ".", "flatten_supporting_sets", "=", "[", "]", "\n", "for", "lb_idx", "in", "range", "(", "len", "(", "self", ".", "supporting_sets", ")", ")", ":", "\n", "            ", "for", "ss_info", "in", "self", ".", "supporting_sets", "[", "lb_idx", "]", ":", "\n", "                ", "self", ".", "flatten_supporting_sets", ".", "append", "(", "ss_info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.get_flatten_supporting_set": [[172, 174], ["None"], "methods", ["None"], ["", "", "", "def", "get_flatten_supporting_set", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "flatten_supporting_sets", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.sample_classes": [[175, 180], ["random.sample", "range", "len"], "methods", ["None"], ["", "def", "sample_classes", "(", "self", ",", "sampled_class_size", ")", ":", "\n", "        ", "sampled_labels", "=", "random", ".", "sample", "(", "range", "(", "len", "(", "self", ".", "labels_in_train", ")", ")", ",", "\n", "sampled_class_size", ")", "\n", "sampled_labels", "=", "[", "self", ".", "labels_in_train", "[", "ii", "]", "for", "ii", "in", "sampled_labels", "]", "\n", "return", "sampled_labels", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.wordvector_integrator.wordvector_integrator.__init__": [[9, 22], ["json.load", "dict", "dict", "tensorflow.get_variable", "open", "int", "int", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "params", "=", "params", "\n", "voc_info", "=", "json", ".", "load", "(", "open", "(", "self", ".", "params", "[", "'initial_manager_file'", "]", ",", "'r'", ")", ")", "\n", "self", ".", "idx2str", "=", "voc_info", "[", "'idx2str'", "]", "\n", "self", ".", "str2idx", "=", "voc_info", "[", "'str2idx'", "]", "\n", "\n", "self", ".", "str2idx", "=", "dict", "(", "[", "(", "key", ",", "int", "(", "self", ".", "str2idx", "[", "key", "]", ")", ")", "for", "key", "in", "self", ".", "str2idx", "]", ")", "\n", "self", ".", "idx2str", "=", "dict", "(", "[", "(", "int", "(", "key", ")", ",", "self", ".", "idx2str", "[", "key", "]", ")", "for", "key", "in", "self", ".", "idx2str", "]", ")", "\n", "\n", "self", ".", "initial_word_vector_tensor", "=", "tf", ".", "get_variable", "(", "\"embedding/embedding\"", ",", "\n", "shape", "=", "[", "len", "(", "self", ".", "idx2str", ")", ",", "100", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "initial_w2v", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.wordvector_integrator.wordvector_integrator.load_initial_wordvectors": [[23, 30], ["tensorflow.train.Saver", "tensorflow.train.Saver.restore", "sess.run", "print", "print", "len", "len"], "methods", ["None"], ["", "def", "load_initial_wordvectors", "(", "self", ",", "sess", ")", ":", "\n", "        ", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "saver", ".", "restore", "(", "sess", ",", "self", ".", "params", "[", "'initial_model_prefix_emb'", "]", ")", "\n", "WV", "=", "sess", ".", "run", "(", "[", "self", ".", "initial_word_vector_tensor", "]", ")", "\n", "self", ".", "initial_w2v", "=", "WV", "[", "0", "]", "\n", "print", "(", "\"initial word vector length\"", ",", "len", "(", "self", ".", "initial_w2v", ")", ")", "\n", "print", "(", "\"initial vocabulary size\"", ",", "len", "(", "self", ".", "str2idx", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.wordvector_integrator.wordvector_integrator.combine_with_indomain": [[31, 43], ["wordvector_integrator.wordvector_integrator.initial_w2v.tolist", "numpy.array", "wordvector_integrator.wordvector_integrator.append", "len", "len", "numpy.random.rand"], "methods", ["None"], ["", "def", "combine_with_indomain", "(", "self", ",", "voclist", ")", ":", "\n", "        ", "neww2v", "=", "self", ".", "initial_w2v", ".", "tolist", "(", ")", "\n", "for", "wd", "in", "voclist", ":", "\n", "            ", "if", "wd", "not", "in", "self", ".", "str2idx", ":", "\n", "# self.initial_w2v = numpy.concatenate((self.initial_w2v,", "\n", "# [(numpy.random.rand(self.params['emb_size']) - 0.5) *2]))", "\n", "                ", "neww2v", ".", "append", "(", "(", "(", "numpy", ".", "random", ".", "rand", "(", "self", ".", "params", "[", "'emb_size'", "]", ")", "-", "0.5", ")", "*", "2", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "self", ".", "str2idx", "[", "wd", "]", "=", "len", "(", "self", ".", "str2idx", ")", "\n", "self", ".", "idx2str", "[", "len", "(", "self", ".", "idx2str", ")", "]", "=", "wd", "\n", "", "", "self", ".", "initial_w2v", "=", "numpy", ".", "array", "(", "neww2v", ")", "\n", "return", "self", ".", "str2idx", ",", "self", ".", "initial_w2v", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.vocabulary.read_word_vectors": [[7, 23], ["dict", "print", "print", "open", "f.close", "len", "len", "line.strip.strip", "line.strip.split", "W.append", "len", "float", "items[].split"], "function", ["None"], ["def", "read_word_vectors", "(", "filename", ")", ":", "\n", "    ", "wdmap", "=", "dict", "(", ")", "\n", "W", "=", "[", "]", "\n", "curr", "=", "0", "\n", "with", "open", "(", "filename", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", "\n", "items", "=", "line", ".", "split", "(", "'\\t'", ")", "\n", "if", "len", "(", "items", ")", "==", "2", "and", "items", "[", "0", "]", "not", "in", "wdmap", ":", "\n", "                ", "wdmap", "[", "items", "[", "0", "]", "]", "=", "curr", "\n", "W", ".", "append", "(", "[", "float", "(", "ii", ")", "for", "ii", "in", "items", "[", "1", "]", ".", "split", "(", ")", "]", ")", "\n", "curr", "+=", "1", "\n", "", "", "f", ".", "close", "(", ")", "\n", "", "print", "(", "'wdmap'", ",", "len", "(", "wdmap", ")", ")", "\n", "print", "(", "'len(W)'", ",", "len", "(", "W", ")", ")", "\n", "return", "wdmap", ",", "W", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.vocabulary.read_word2idx": [[25, 33], ["dict", "open", "fi.close", "line[].split", "int"], "function", ["None"], ["", "def", "read_word2idx", "(", "infile", ")", ":", "\n", "    ", "word2idx", "=", "dict", "(", ")", "\n", "with", "open", "(", "infile", ",", "'r'", ")", "as", "fi", ":", "\n", "        ", "for", "line", "in", "fi", ":", "\n", "            ", "wd", ",", "idx", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "'\\t'", ")", "\n", "word2idx", "[", "wd", "]", "=", "int", "(", "idx", ")", "\n", "", "fi", ".", "close", "(", ")", "\n", "", "return", "word2idx", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.vocabulary.get_word_info": [[35, 52], ["dict", "vocabulary.read_word_vectors", "vocabulary.enrich_word_info_with_train_file", "print", "print", "range", "numpy.array", "len", "len", "len", "Exception", "len"], "function", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.vocabulary.read_word_vectors", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.vocabulary.enrich_word_info_with_train_file"], ["", "def", "get_word_info", "(", "params", ")", ":", "\n", "    ", "word2idx", "=", "dict", "(", ")", "\n", "w2v", "=", "[", "]", "\n", "word2idx", ",", "w2v", "=", "read_word_vectors", "(", "params", "[", "'w2vfile'", "]", ")", "\n", "enrich_word_info_with_train_file", "(", "word2idx", ",", "\n", "w2v", ",", "\n", "params", "[", "'mnet_training_dir'", "]", ",", "\n", "params", "[", "'mnet_training_list'", "]", ",", "\n", "params", ")", "\n", "print", "(", "\"After combined with train file\"", ")", "\n", "print", "(", "\"word2idx size:\"", ",", "len", "(", "word2idx", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "w2v", ")", ")", ":", "\n", "        ", "if", "len", "(", "w2v", "[", "i", "]", ")", "!=", "params", "[", "'emb_size'", "]", ":", "\n", "            ", "raise", "Exception", "(", "\"wordvec idx %d has a dimension of %d\"", "\n", "%", "(", "i", ",", "len", "(", "w2v", "[", "i", "]", ")", ")", ")", "\n", "", "", "w2v", "=", "numpy", ".", "array", "(", "w2v", ")", "\n", "return", "word2idx", ",", "w2v", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.vocabulary.enrich_word_info_with_train_file": [[54, 89], ["open", "open.readlines", "open.close", "open", "line.strip.strip", "line.strip.split", "simple_tokenizer.tokenizeSimple", "wid.split", "os.path.join", "os.path.join", "len", "textids.append", "len", "wksp.strip", "wksp.strip", "w2v.append", "numpy.random.rand"], "function", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.simple_tokenizer.tokenizeSimple"], ["", "def", "enrich_word_info_with_train_file", "(", "word2idx", ",", "\n", "w2v", ",", "\n", "mnet_training_wksp_dir", ",", "\n", "mnet_training_wksp_list", ",", "params", ")", ":", "\n", "    ", "with", "open", "(", "mnet_training_wksp_list", ",", "'r'", ")", "as", "fi", ":", "\n", "        ", "wksp_ids", "=", "fi", ".", "readlines", "(", ")", "\n", "wksp_ids", "=", "[", "wid", ".", "split", "(", "'\\t'", ")", "[", "0", "]", "for", "wid", "in", "wksp_ids", "]", "\n", "if", "params", "[", "'single_workspace'", "]", "is", "False", ":", "\n", "            ", "wksp_tr_files", "=", "[", "os", ".", "path", ".", "join", "(", "mnet_training_wksp_dir", ",", "\n", "wksp", ".", "strip", "(", ")", "+", "'.train'", ")", "\n", "for", "wksp", "in", "wksp_ids", "]", "\n", "", "else", ":", "\n", "            ", "wksp_tr_files", "=", "[", "os", ".", "path", ".", "join", "(", "mnet_training_wksp_dir", ",", "\n", "wksp", ".", "strip", "(", ")", "+", "'.train'", ")", "\n", "for", "wksp", "in", "wksp_ids", "]", "\n", "", "fi", ".", "close", "(", ")", "\n", "\n", "", "for", "wkspfile", "in", "wksp_tr_files", ":", "\n", "        ", "fi", "=", "open", "(", "wkspfile", ",", "'r'", ")", "\n", "for", "line", "in", "fi", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", "\n", "items", "=", "line", ".", "split", "(", "'\\t'", ")", "\n", "if", "len", "(", "items", ")", "==", "2", ":", "\n", "                ", "text", ",", "lb", "=", "items", "\n", "", "textwds", "=", "tokenizeSimple", "(", "text", ",", "params", "[", "'max_length'", "]", ")", "\n", "textids", "=", "[", "]", "\n", "for", "wd", "in", "textwds", ":", "\n", "                ", "if", "wd", "in", "word2idx", ":", "\n", "                    ", "textids", ".", "append", "(", "word2idx", "[", "wd", "]", ")", "\n", "", "else", ":", "\n", "                    ", "word2idx", "[", "wd", "]", "=", "len", "(", "word2idx", ")", "\n", "if", "w2v", "is", "not", "None", ":", "\n", "                        ", "w2v", ".", "append", "(", "(", "(", "numpy", ".", "random", ".", "rand", "(", "params", "[", "'emb_size'", "]", ")", "\n", "-", "0.5", ")", "*", "2", ")", ".", "tolist", "(", ")", ")", "\n", "", "", "", "", "", "return", "word2idx", ",", "w2v", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.vocabulary.write_word2idx": [[91, 97], ["open", "fo.close", "fo.write", "str"], "function", ["None"], ["", "def", "write_word2idx", "(", "word2idx", ",", "outfile", ")", ":", "\n", "    ", "with", "open", "(", "outfile", ",", "'w'", ")", "as", "fo", ":", "\n", "        ", "for", "wd", "in", "word2idx", ":", "\n", "            ", "fo", ".", "write", "(", "wd", "+", "'\\t'", "+", "str", "(", "word2idx", "[", "wd", "]", ")", "+", "'\\n'", ")", "\n", "", "fo", ".", "close", "(", ")", "\n", "", "return", "\n", "", ""]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.main.train_test_model": [[18, 71], ["utils.get_data", "utils.get_data", "utils.get_data", "range", "numpy.random.permutation", "print", "range", "experiment.run_training_epoch", "sys.stdout.flush", "len", "sys.stdout.flush", "utils.compute_values", "utils.compute_values", "print", "print", "len", "print"], "function", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.get_data", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.get_data", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.get_data", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.run_training_epoch", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.compute_values", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.compute_values"], ["def", "train_test_model", "(", "params", ",", "sess", ",", "model", ",", "experiment", ")", ":", "\n", "    ", "TEST_FILE_INDEX", "=", "2", "\n", "train_data", "=", "get_data", "(", "params", ",", "\n", "params", "[", "'mnet_training_list'", "]", ",", "\n", "role", "=", "'train_workspace'", ")", "\n", "\n", "dev_data", "=", "get_data", "(", "params", ",", "\n", "params", "[", "'mnet_dev_list'", "]", ",", "\n", "role", "=", "'valid_workspace'", ")", "\n", "\n", "test_data", "=", "get_data", "(", "params", ",", "\n", "params", "[", "'testing_list'", "]", ",", "\n", "role", "=", "'test_workspace'", ")", "\n", "\n", "best_v_macro_avg_eer", "=", "1.0", "\n", "total_epoches", "=", "params", "[", "'total_epoch'", "]", "\n", "for", "e", "in", "range", "(", "0", ",", "total_epoches", ")", ":", "\n", "        ", "avg_loss", "=", "0.0", "\n", "\n", "for", "workspace_idx", "in", "numpy", ".", "random", ".", "permutation", "(", "range", "(", "len", "(", "train_data", ")", ")", ")", ":", "\n", "            ", "curr_train_workspace", "=", "train_data", "[", "workspace_idx", "]", "\n", "all_ood_workapces", "=", "train_data", "[", ":", "workspace_idx", "]", "+", "train_data", "[", "workspace_idx", "+", "1", ":", "]", "\n", "batch_loss", "=", "experiment", ".", "run_training_epoch", "(", "curr_train_workspace", ",", "\n", "all_ood_workapces", ")", "\n", "if", "params", "[", "'single_workspace'", "]", "is", "False", "or", "e", "%", "500", "==", "0", ":", "\n", "                ", "print", "(", "\"Epoch {}: train_loss: {}\"", ".", "format", "(", "e", ",", "\n", "batch_loss", ")", ")", "\n", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "avg_loss", "+=", "batch_loss", "\n", "", "avg_loss", "=", "avg_loss", "/", "len", "(", "train_data", ")", "\n", "print", "(", "'Epoch {}: avg_loss: {}'", ".", "format", "(", "e", ",", "\n", "avg_loss", ")", ")", "\n", "\n", "if", "e", "%", "50", "==", "0", ":", "\n", "            ", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n", "v_macro_avg_eer", ",", "v_macro_avg_far", ",", "v_macro_avg_frr", ",", "v_macro_avg_acc_ideal", ",", "v_macro_avg_acc", ",", "val_output_info_list", "=", "compute_values", "(", "params", ",", "experiment", ",", "dev_data", ",", "e", ")", "\n", "\n", "t_macro_avg_eer", ",", "t_macro_avg_far", ",", "t_macro_avg_frr", ",", "t_macro_avg_acc_ideal", ",", "t_macro_avg_acc", ",", "test_output_info_list", "=", "compute_values", "(", "params", ",", "experiment", ",", "test_data", ",", "e", ")", "\n", "\n", "print", "(", "\"Meta-Valid Macro(eer, onacc_ideal, onacc): %.3f, %.3f, %.3f\"", "%", "\n", "(", "v_macro_avg_eer", ",", "\n", "v_macro_avg_acc_ideal", ",", "\n", "v_macro_avg_acc", ")", ")", "\n", "print", "(", "\"Meta-Test Macro(eer, onacc_ideal, onacc): %.3f, %.3f, %.3f\"", "%", "\n", "(", "t_macro_avg_eer", ",", "\n", "t_macro_avg_acc_ideal", ",", "\n", "t_macro_avg_acc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.simple_tokenizer.tokenizeSimple": [[3, 27], ["sent.lower", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "ret.strip.replace", "re.sub", "ret.strip.strip", "ret.strip.split", "len", "ret.strip.append"], "function", ["None"], ["def", "tokenizeSimple", "(", "sent", ",", "max_token_size", "=", "100000", ")", ":", "\n", "    ", "ret", "=", "sent", ".", "lower", "(", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"\\\"\"", ",", "\" \\\" \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\",\"", ",", "\" , \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\".\"", ",", "\" . \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"(\"", ",", "\" ( \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\")\"", ",", "\" ) \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"/\"", ",", "\" / \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"?\"", ",", "\" ? \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"!\"", ",", "\" ! \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"n't\"", ",", "\" n't \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"'ve \"", ",", "\" 've \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"'ll \"", ",", "\" 'll \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"'re \"", ",", "\" 're \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"'s \"", ",", "\" 's \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"'m \"", ",", "\" 'm \"", ")", "\n", "ret", "=", "ret", ".", "replace", "(", "\"'d \"", ",", "\" 'd \"", ")", "\n", "ret", "=", "re", ".", "sub", "(", "\" +\"", ",", "' '", ",", "ret", ")", "\n", "ret", "=", "ret", ".", "strip", "(", ")", "\n", "ret", "=", "ret", ".", "split", "(", "' '", ")", "[", ":", "max_token_size", "]", "\n", "\n", "while", "len", "(", "ret", ")", "<", "max_token_size", ":", "\n", "        ", "ret", ".", "append", "(", "\"</s>\"", ")", "\n", "", "return", "ret", "", "", ""]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.__init__": [[10, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "params", ",", "sess", ")", ":", "\n", "        ", "self", ".", "model", "=", "model", "\n", "self", ".", "params", "=", "params", "\n", "self", ".", "sess", "=", "sess", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_train_batch": [[15, 78], ["len", "train_workspace.sample_classes", "max", "range", "range", "int", "random.choice", "random.choice", "sent_id_batch.append", "len", "range", "train_workspace.select_support_set", "x_support_set_mask.append", "x_support_set_wid.append", "y_support_set.append", "x_ood_wid.append", "x_ood_mask.append", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.random.choice", "numpy.random.choice.get_flatten_supporting_set", "numpy.random.choice", "selected_ood_sent_infos.append", "range", "len"], "methods", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.sample_classes", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.select_support_set", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.get_flatten_supporting_set"], ["", "def", "get_train_batch", "(", "self", ",", "train_workspace", ",", "batch_size", ",", "all_ood_workspaces", ")", ":", "\n", "        ", "sent_list", "=", "train_workspace", ".", "target_sets", "[", "0", "]", "\n", "nClasses_in_Train", "=", "len", "(", "train_workspace", ".", "labels_in_train", ")", "\n", "\n", "if", "self", ".", "params", "[", "'sampling_classes'", "]", "<=", "1", "or", "self", ".", "params", "[", "'sampling_classes'", "]", ">=", "nClasses_in_Train", ":", "\n", "                ", "sampled_class_size", "=", "nClasses_in_Train", "\n", "", "else", ":", "\n", "            ", "sampled_class_size", "=", "self", ".", "params", "[", "'sampling_classes'", "]", "\n", "", "sampled_classes", "=", "train_workspace", ".", "sample_classes", "(", "sampled_class_size", ")", "\n", "sentence_size_per_intent", "=", "max", "(", "1", ",", "int", "(", "self", ".", "params", "[", "'min_ss_size'", "]", "\n", "/", "sampled_class_size", ")", ")", "\n", "sent_id_batch", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "selected_label", "=", "random", ".", "choice", "(", "sampled_classes", ")", "\n", "selected_utt", "=", "random", ".", "choice", "(", "train_workspace", ".", "train_intent2ids_list", "[", "selected_label", "]", ")", "\n", "sent_id_batch", ".", "append", "(", "selected_utt", ")", "\n", "\n", "", "x_target_wid", "=", "[", "sent_list", "[", "i", "]", "[", "SENT_WORDID", "]", "for", "i", "in", "sent_id_batch", "]", "\n", "y_target", "=", "[", "sent_list", "[", "i", "]", "[", "SENT_LABELID", "]", "for", "i", "in", "sent_id_batch", "]", "\n", "x_target_mask", "=", "[", "sent_list", "[", "i", "]", "[", "SENT_WORD_MASK", "]", "for", "i", "in", "sent_id_batch", "]", "\n", "\n", "x_support_set_wid", "=", "[", "]", "\n", "y_support_set", "=", "[", "]", "\n", "x_support_set_mask", "=", "[", "]", "\n", "x_ood_wid", "=", "[", "]", "\n", "x_ood_mask", "=", "[", "]", "\n", "\n", "for", "target_sid", "in", "range", "(", "len", "(", "sent_id_batch", ")", ")", ":", "\n", "            ", "selected_ood_sent_infos", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "params", "[", "'ood_example_size'", "]", ")", ":", "\n", "                ", "selected_ood_workspace", "=", "numpy", ".", "random", ".", "choice", "(", "all_ood_workspaces", ")", "\n", "fss", "=", "selected_ood_workspace", ".", "get_flatten_supporting_set", "(", ")", "\n", "selected_id", "=", "numpy", ".", "random", ".", "choice", "(", "[", "i", "for", "i", "in", "range", "(", "len", "(", "fss", ")", ")", "]", ")", "\n", "selected_ood_sent_info", "=", "fss", "[", "selected_id", "]", "\n", "selected_ood_sent_infos", ".", "append", "(", "selected_ood_sent_info", ")", "\n", "\n", "", "ss_sent_info", "=", "train_workspace", ".", "select_support_set", "(", "sentence_size_per_intent", ",", "\n", "0", ",", "\n", "sent_id_batch", "[", "target_sid", "]", ",", "\n", "sampled_classes", ")", "\n", "x_support_set_wid_per_sent", "=", "[", "sinfo", "[", "SENT_WORDID", "]", "for", "sinfo", "in", "ss_sent_info", "]", "\n", "y_support_set_per_sent", "=", "[", "sinfo", "[", "SENT_LABELID", "]", "for", "sinfo", "in", "ss_sent_info", "]", "\n", "x_support_set_mask_per_sent", "=", "[", "sinfo", "[", "SENT_WORD_MASK", "]", "for", "sinfo", "in", "ss_sent_info", "]", "\n", "\n", "x_support_set_mask", ".", "append", "(", "x_support_set_mask_per_sent", ")", "\n", "x_support_set_wid", ".", "append", "(", "x_support_set_wid_per_sent", ")", "\n", "y_support_set", ".", "append", "(", "y_support_set_per_sent", ")", "\n", "\n", "x_ood_wid_per_sent", "=", "[", "sinfo", "[", "SENT_WORDID", "]", "for", "sinfo", "in", "selected_ood_sent_infos", "]", "\n", "x_ood_mask_per_sent", "=", "[", "sinfo", "[", "SENT_WORD_MASK", "]", "for", "sinfo", "in", "selected_ood_sent_infos", "]", "\n", "x_ood_wid", ".", "append", "(", "x_ood_wid_per_sent", ")", "\n", "x_ood_mask", ".", "append", "(", "x_ood_mask_per_sent", ")", "\n", "\n", "", "return", "numpy", ".", "array", "(", "x_support_set_wid", ",", "dtype", "=", "'int'", ")", ",", "numpy", ".", "array", "(", "y_support_set", ",", "dtype", "=", "'int'", ")", ",", "numpy", ".", "array", "(", "x_support_set_mask", ",", "dtype", "=", "'int'", ")", ",", "numpy", ".", "array", "(", "x_target_wid", ",", "dtype", "=", "'int'", ")", ",", "numpy", ".", "array", "(", "y_target", ",", "dtype", "=", "'int'", ")", ",", "numpy", ".", "array", "(", "x_target_mask", ",", "dtype", "=", "'int'", ")", ",", "sampled_classes", ",", "numpy", ".", "array", "(", "x_ood_wid", ",", "dtype", "=", "'int'", ")", ",", "numpy", ".", "array", "(", "x_ood_mask", ",", "dtype", "=", "'int'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.run_training_epoch": [[79, 105], ["experiment.RunExperiment.get_train_batch", "experiment.RunExperiment.get_support_set_one_hot", "experiment.RunExperiment.get_one_hot", "experiment.RunExperiment.sess.run", "len", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_train_batch", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_support_set_one_hot", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_one_hot"], ["", "def", "run_training_epoch", "(", "self", ",", "train_workspace", ",", "all_ood_workspaces", ")", ":", "\n", "\n", "        ", "assert", "(", "len", "(", "train_workspace", ".", "target_sets", ")", "==", "1", ")", "\n", "batch_size", "=", "self", ".", "params", "[", "'batch_size'", "]", "\n", "x_support_set_wid", ",", "y_support_set", ",", "support_set_sents_mask", ",", "x_target_wid", ",", "y_target", ",", "target_sent_mask", ",", "selected_labels", ",", "x_neg_wid", ",", "neg_sent_mask", "=", "self", ".", "get_train_batch", "(", "train_workspace", ",", "batch_size", ",", "all_ood_workspaces", ")", "\n", "\n", "y_support_set_one_hot", "=", "self", ".", "get_support_set_one_hot", "(", "y_support_set", ",", "selected_labels", ")", "\n", "y_target_one_hot", "=", "self", ".", "get_one_hot", "(", "y_target", ",", "selected_labels", ")", "\n", "model", "=", "self", ".", "model", "\n", "_", ",", "loss", "=", "self", ".", "sess", ".", "run", "(", "\n", "[", "model", ".", "train_op", ",", "model", ".", "loss", "]", ",", "\n", "feed_dict", "=", "{", "model", ".", "input_support_set_sents", ":", "x_support_set_wid", ",", "\n", "model", ".", "support_set_sents_mask", ":", "support_set_sents_mask", ",", "\n", "model", ".", "support_set_labels", ":", "y_support_set_one_hot", ",", "\n", "model", ".", "input_target_sent", ":", "x_target_wid", ",", "\n", "model", ".", "target_label", ":", "y_target_one_hot", ",", "\n", "model", ".", "target_sent_mask", ":", "target_sent_mask", ",", "\n", "model", ".", "ss_encoded_sents_avg_test", ":", "numpy", ".", "array", "(", "[", "[", "[", "0", "]", "]", "]", ")", ",", "\n", "model", ".", "is_training", ":", "True", ",", "\n", "model", ".", "input_ood_sents", ":", "x_neg_wid", ",", "\n", "model", ".", "ood_sents_mask", ":", "neg_sent_mask", "\n", "}", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_supporting_set_embeddings": [[106, 128], ["test_workspace.get_flatten_supporting_set", "print", "len", "experiment.RunExperiment.get_one_hot", "experiment.RunExperiment.sess.run", "len", "range"], "methods", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.workspace.workspace.get_flatten_supporting_set", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_one_hot"], ["", "def", "get_supporting_set_embeddings", "(", "self", ",", "test_workspace", ")", ":", "\n", "        ", "all_ss_info", "=", "test_workspace", ".", "get_flatten_supporting_set", "(", ")", "\n", "\n", "txtbatch", "=", "[", "s", "[", "SENT_WORDID", "]", "for", "s", "in", "\n", "all_ss_info", "]", "\n", "maskbatch", "=", "[", "s", "[", "SENT_WORD_MASK", "]", "for", "s", "in", "\n", "all_ss_info", "]", "\n", "ybatch", "=", "[", "s", "[", "SENT_LABELID", "]", "for", "s", "in", "\n", "all_ss_info", "]", "\n", "\n", "print", "(", "'test_workspace.labels_in_train'", ",", "len", "(", "test_workspace", ".", "labels_in_train", ")", ")", "\n", "nClasses", "=", "len", "(", "test_workspace", ".", "labels_in_train", ")", "\n", "ybatch_one_shot", "=", "self", ".", "get_one_hot", "(", "ybatch", ",", "range", "(", "nClasses", ")", ")", "\n", "\n", "center_emb_batch", "=", "self", ".", "sess", ".", "run", "(", "\n", "self", ".", "model", ".", "encoded_prototype", ",", "\n", "feed_dict", "=", "{", "self", ".", "model", ".", "input_support_set_sents", ":", "[", "txtbatch", "]", ",", "\n", "self", ".", "model", ".", "support_set_sents_mask", ":", "[", "maskbatch", "]", ",", "\n", "self", ".", "model", ".", "support_set_labels", ":", "[", "ybatch_one_shot", "]", ",", "\n", "self", ".", "model", ".", "is_training", ":", "False", "\n", "}", ")", "\n", "return", "center_emb_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.run_testing_epoch": [[129, 168], ["len", "experiment.RunExperiment.get_supporting_set_embeddings", "experiment.RunExperiment.get_one_hot", "print", "zip", "range", "range", "print", "target_sentence[].split", "experiment.RunExperiment.sess.run", "numpy.argmax", "rets_train.append", "rets_dev.append", "rets_test.append"], "methods", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_supporting_set_embeddings", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_one_hot"], ["", "def", "run_testing_epoch", "(", "self", ",", "epoch", ",", "test_workspace", ")", ":", "\n", "        ", "nClasses", "=", "len", "(", "test_workspace", ".", "labels_in_train", ")", "\n", "avg_representations", "=", "self", ".", "get_supporting_set_embeddings", "(", "test_workspace", ")", "\n", "y_support_set_one_hot", "=", "self", ".", "get_one_hot", "(", "range", "(", "nClasses", ")", ",", "\n", "range", "(", "nClasses", ")", ")", "\n", "print", "(", "'avg_representations.shape'", ",", "avg_representations", ".", "shape", ")", "\n", "rets_train", "=", "[", "]", "\n", "rets_dev", "=", "[", "]", "\n", "rets_test", "=", "[", "]", "\n", "setidx", "=", "0", "\n", "for", "target_set", ",", "target_set_file", "in", "zip", "(", "test_workspace", ".", "target_sets", ",", "\n", "test_workspace", ".", "target_sets_files", ")", ":", "\n", "            ", "print", "(", "'Testing: '", ",", "target_set_file", ")", "\n", "for", "target_sentence", "in", "target_set", ":", "\n", "                ", "text", ",", "label", "=", "target_sentence", "[", "SENT_ORIGINAL_TXT", "]", ".", "split", "(", "'\\t'", ")", "\n", "model", "=", "self", ".", "model", "\n", "preds_intent", "=", "self", ".", "sess", ".", "run", "(", "\n", "model", ".", "test_preds_unnorm", ",", "\n", "feed_dict", "=", "{", "model", ".", "ss_encoded_sents_avg_test", ":", "avg_representations", ",", "\n", "model", ".", "support_set_labels", ":", "[", "y_support_set_one_hot", "]", ",", "\n", "model", ".", "input_target_sent_test", ":", "[", "target_sentence", "[", "SENT_WORDID", "]", "]", ",", "\n", "model", ".", "target_sent_mask_test", ":", "[", "target_sentence", "[", "SENT_WORD_MASK", "]", "]", ",", "\n", "model", ".", "is_training", ":", "False", "}", ")", "\n", "preds_intent", "=", "preds_intent", "[", "0", "]", "\n", "final_lb_intent_id", "=", "numpy", ".", "argmax", "(", "preds_intent", ")", "\n", "final_lb_intent", "=", "test_workspace", ".", "lblist", "[", "final_lb_intent_id", "]", "\n", "groundtruth_id", "=", "target_sentence", "[", "SENT_LABELID", "]", "\n", "groundtruth", "=", "test_workspace", ".", "lblist", "[", "groundtruth_id", "]", "\n", "conf", "=", "preds_intent", "[", "final_lb_intent_id", "]", "\n", "atuple", "=", "(", "final_lb_intent", ",", "groundtruth", ",", "conf", ")", "\n", "if", "setidx", "==", "0", ":", "\n", "                    ", "rets_train", ".", "append", "(", "atuple", ")", "\n", "", "elif", "setidx", "==", "1", ":", "\n", "                    ", "rets_dev", ".", "append", "(", "atuple", ")", "\n", "", "elif", "setidx", "==", "2", ":", "\n", "                    ", "rets_test", ".", "append", "(", "atuple", ")", "\n", "", "", "setidx", "+=", "1", "\n", "\n", "", "return", "rets_train", ",", "rets_dev", ",", "rets_test", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_support_set_one_hot": [[169, 182], ["dict", "numpy.zeros", "range", "len", "len", "range", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "get_support_set_one_hot", "(", "self", ",", "support_set", ",", "classe_list", ")", ":", "\n", "        ", "cls_id_map", "=", "dict", "(", ")", "\n", "for", "lid", "in", "classe_list", ":", "\n", "                    ", "cls_id_map", "[", "lid", "]", "=", "len", "(", "cls_id_map", ")", "\n", "\n", "", "support_set_one_hot", "=", "numpy", ".", "zeros", "(", "[", "len", "(", "support_set", ")", ",", "\n", "len", "(", "support_set", "[", "0", "]", ")", ",", "\n", "len", "(", "cls_id_map", ")", "]", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "support_set", ")", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "support_set", "[", "k", "]", ")", ")", ":", "\n", "                ", "support_set_one_hot", "[", "k", "]", "[", "j", "]", "[", "cls_id_map", "[", "support_set", "[", "k", "]", "[", "j", "]", "]", "]", "=", "1.0", "\n", "\n", "", "", "return", "support_set_one_hot", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.get_one_hot": [[183, 192], ["dict", "numpy.zeros", "range", "len", "len", "len", "len"], "methods", ["None"], ["", "def", "get_one_hot", "(", "self", ",", "y_target", ",", "classe_list", ")", ":", "\n", "        ", "cls_id_map", "=", "dict", "(", ")", "\n", "for", "lid", "in", "classe_list", ":", "\n", "                    ", "cls_id_map", "[", "lid", "]", "=", "len", "(", "cls_id_map", ")", "\n", "\n", "", "y_target_one_hot", "=", "numpy", ".", "zeros", "(", "[", "len", "(", "y_target", ")", ",", "len", "(", "cls_id_map", ")", "]", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "y_target", ")", ")", ":", "\n", "            ", "y_target_one_hot", "[", "k", "]", "[", "cls_id_map", "[", "y_target", "[", "k", "]", "]", "]", "=", "1.0", "\n", "", "return", "y_target_one_hot", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.all_parameters.str2bool": [[4, 11], ["Exception"], "function", ["None"], ["def", "str2bool", "(", "v", ")", ":", "\n", "    ", "if", "v", "==", "'True'", ":", "\n", "        ", "return", "True", "\n", "", "elif", "v", "==", "'False'", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'bad string for boolean'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.all_parameters.set_default_values": [[13, 70], ["dict"], "function", ["None"], ["", "", "def", "set_default_values", "(", ")", ":", "\n", "    ", "'''set default values for every possible parameters.'''", "\n", "params", "=", "dict", "(", ")", "\n", "\n", "params", "[", "'total_epoch'", "]", "=", "5000", "\n", "params", "[", "'single_workspace'", "]", "=", "False", "\n", "\n", "# data required", "\n", "params", "[", "'w2vfile'", "]", "=", "'/u/mingtan/data/few-shot-learning/word2vectors/simple.token.vectors'", "\n", "params", "[", "'mnet_training_dir'", "]", "=", "''", "\n", "params", "[", "'mnet_training_list'", "]", "=", "''", "\n", "params", "[", "'mnet_dev_dir'", "]", "=", "''", "\n", "params", "[", "'mnet_dev_list'", "]", "=", "''", "\n", "\n", "params", "[", "'testing_dir'", "]", "=", "''", "\n", "params", "[", "'testing_list'", "]", "=", "''", "\n", "\n", "params", "[", "'model_string'", "]", "=", "'dummy'", "\n", "params", "[", "'model_dir'", "]", "=", "'/dccstor/slad/mingtan/offtopic_paper/outputs/models'", "\n", "\n", "# parameters that determine the shape of the input", "\n", "params", "[", "'batch_size'", "]", "=", "10", "\n", "params", "[", "'max_length'", "]", "=", "40", "\n", "params", "[", "'emb_size'", "]", "=", "100", "\n", "params", "[", "'min_ss_size'", "]", "=", "200", "\n", "\n", "# parameters about the model", "\n", "params", "[", "'hidden_size'", "]", "=", "100", "\n", "\n", "# model tricks", "\n", "params", "[", "'softmax_factor'", "]", "=", "5.0", "\n", "params", "[", "'learning_rate'", "]", "=", "0.001", "\n", "params", "[", "'remove_target_from_support_set'", "]", "=", "True", "\n", "params", "[", "'dropout_keep_prob'", "]", "=", "1.0", "\n", "\n", "# loaded in main function", "\n", "params", "[", "'vocabulary'", "]", "=", "None", "\n", "params", "[", "\"wordvectors\"", "]", "=", "None", "\n", "\n", "params", "[", "'offtopic_label'", "]", "=", "'OUT_OF_DOMAIN_LABEL'", "\n", "\n", "params", "[", "'sampling_classes'", "]", "=", "0", "\n", "params", "[", "'topk_ss'", "]", "=", "0", "\n", "params", "[", "'layer_num'", "]", "=", "1", "\n", "\n", "params", "[", "'enable_batchnorm'", "]", "=", "True", "\n", "params", "[", "'mtl_num_tasks'", "]", "=", "0", "\n", "params", "[", "'filter_size'", "]", "=", "3", "\n", "params", "[", "'ood_threshold'", "]", "=", "0.6", "\n", "params", "[", "'ood_threshold_margin'", "]", "=", "0.2", "\n", "params", "[", "'ood_example_size'", "]", "=", "5", "\n", "params", "[", "'alpha_pos'", "]", "=", "1.0", "\n", "params", "[", "'alpha_neg'", "]", "=", "1.0", "\n", "params", "[", "'alpha_indomain'", "]", "=", "1.0", "\n", "params", "[", "'seed'", "]", "=", "3143", "\n", "\n", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.all_parameters.get_all_parameters": [[72, 118], ["all_parameters.set_default_values", "print", "config_parser.options", "int", "int", "int", "int", "float", "float", "int", "int", "int", "float", "int", "int", "int", "int", "float", "float", "int", "float", "float", "float", "int", "all_parameters.print_parameters", "config_parser.get", "print", "exit", "Exception", "all_parameters.str2bool"], "function", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.all_parameters.set_default_values", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.all_parameters.print_parameters", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.all_parameters.str2bool"], ["", "def", "get_all_parameters", "(", "config_parser", "=", "None", ",", "section", "=", "None", ",", "print_params", "=", "True", ")", ":", "\n", "    ", "'''read all parameters'''", "\n", "params", "=", "set_default_values", "(", ")", "\n", "if", "not", "section", "or", "not", "config_parser", ":", "\n", "        ", "print", "(", "'Use all default parameters.'", ")", "\n", "return", "params", "\n", "\n", "", "try", ":", "\n", "        ", "options", "=", "config_parser", ".", "options", "(", "section", ")", "\n", "for", "option", "in", "options", ":", "\n", "            ", "if", "option", "not", "in", "params", ":", "\n", "                ", "Exception", "(", "\"Bad or missing entry is configuration file\"", ")", "\n", "", "paramstr", "=", "config_parser", ".", "get", "(", "section", ",", "option", ")", "\n", "if", "paramstr", "==", "'True'", "or", "paramstr", "==", "'False'", ":", "\n", "                ", "params", "[", "option", "]", "=", "str2bool", "(", "paramstr", ")", "\n", "", "else", ":", "\n", "                ", "params", "[", "option", "]", "=", "paramstr", "\n", "\n", "", "", "params", "[", "'total_epoch'", "]", "=", "int", "(", "params", "[", "'total_epoch'", "]", ")", "\n", "params", "[", "'batch_size'", "]", "=", "int", "(", "params", "[", "'batch_size'", "]", ")", "\n", "params", "[", "'max_length'", "]", "=", "int", "(", "params", "[", "'max_length'", "]", ")", "\n", "params", "[", "'hidden_size'", "]", "=", "int", "(", "params", "[", "'hidden_size'", "]", ")", "\n", "params", "[", "'softmax_factor'", "]", "=", "float", "(", "params", "[", "'softmax_factor'", "]", ")", "\n", "params", "[", "'learning_rate'", "]", "=", "float", "(", "params", "[", "'learning_rate'", "]", ")", "\n", "params", "[", "'sampling_classes'", "]", "=", "int", "(", "params", "[", "'sampling_classes'", "]", ")", "\n", "params", "[", "'min_ss_size'", "]", "=", "int", "(", "params", "[", "'min_ss_size'", "]", ")", "\n", "params", "[", "'emb_size'", "]", "=", "int", "(", "params", "[", "'emb_size'", "]", ")", "\n", "params", "[", "'dropout_keep_prob'", "]", "=", "float", "(", "params", "[", "'dropout_keep_prob'", "]", ")", "\n", "params", "[", "'topk_ss'", "]", "=", "int", "(", "params", "[", "'topk_ss'", "]", ")", "\n", "params", "[", "'layer_num'", "]", "=", "int", "(", "params", "[", "'layer_num'", "]", ")", "\n", "params", "[", "'mtl_num_tasks'", "]", "=", "int", "(", "params", "[", "'mtl_num_tasks'", "]", ")", "\n", "params", "[", "'filter_size'", "]", "=", "int", "(", "params", "[", "'filter_size'", "]", ")", "\n", "params", "[", "'ood_threshold'", "]", "=", "float", "(", "params", "[", "'ood_threshold'", "]", ")", "\n", "params", "[", "'ood_threshold_margin'", "]", "=", "float", "(", "params", "[", "'ood_threshold_margin'", "]", ")", "\n", "params", "[", "'ood_example_size'", "]", "=", "int", "(", "params", "[", "'ood_example_size'", "]", ")", "\n", "params", "[", "'alpha_pos'", "]", "=", "float", "(", "params", "[", "'alpha_pos'", "]", ")", "\n", "params", "[", "'alpha_neg'", "]", "=", "float", "(", "params", "[", "'alpha_neg'", "]", ")", "\n", "params", "[", "'alpha_indomain'", "]", "=", "float", "(", "params", "[", "'alpha_indomain'", "]", ")", "\n", "params", "[", "'seed'", "]", "=", "int", "(", "params", "[", "'seed'", "]", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "        ", "print", "(", "e", ".", "message", ")", "\n", "exit", "(", "1", ")", "\n", "\n", "", "if", "print_params", ":", "\n", "        ", "print_parameters", "(", "params", ")", "\n", "", "return", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.all_parameters.print_parameters": [[120, 125], ["print", "print"], "function", ["None"], ["", "def", "print_parameters", "(", "params", ")", ":", "\n", "    ", "'''print parameters'''", "\n", "print", "(", "\"All parameters:\"", ")", "\n", "for", "p", "in", "params", ":", "\n", "        ", "print", "(", "\"\\t{}==>{}\"", ".", "format", "(", "p", ",", "params", "[", "p", "]", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.DistanceNetwork.__init__": [[6, 8], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.DistanceNetwork.__call__": [[9, 30], ["len", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.matmul", "input_sent.get_shape().as_list", "tensorflow.expand_dims", "tensorflow.transpose", "input_sent.get_shape"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "\n", "support_set", ",", "\n", "input_sent", ",", "\n", "name", ",", "\n", "dropout_keep_prob", "=", "1.0", ",", "\n", "is_training", "=", "None", ")", ":", "\n", "\n", "        ", "target_shape_order", "=", "len", "(", "input_sent", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", ")", "\n", "input_sent_ex", "=", "input_sent", "\n", "if", "target_shape_order", "==", "2", ":", "\n", "            ", "input_sent_ex", "=", "tf", ".", "expand_dims", "(", "input_sent", ",", "axis", "=", "1", ")", "\n", "\n", "", "normalize_support_set", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "support_set", ",", "axis", "=", "2", ")", "\n", "normalize_input_sent_ex", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "input_sent_ex", ",", "axis", "=", "2", ")", "\n", "\n", "cosine_similarity", "=", "tf", ".", "matmul", "(", "normalize_input_sent_ex", ",", "\n", "tf", ".", "transpose", "(", "normalize_support_set", ",", "\n", "[", "0", ",", "2", ",", "1", "]", ")", ")", "\n", "if", "target_shape_order", "==", "2", ":", "\n", "            ", "cosine_similarity", "=", "cosine_similarity", "[", ":", ",", "0", ",", ":", "]", "\n", "", "return", "cosine_similarity", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.Classify.__init__": [[33, 35], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.Classify.__call__": [[36, 41], ["tensorflow.name_scope", "tensorflow.nn.softmax"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "similarities", ",", "name", ",", "softmax_factor", "=", "None", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "'classification'", "+", "name", ")", ":", "\n", "            ", "similarities", "=", "softmax_factor", "*", "similarities", "\n", "softmax_similarities", "=", "tf", ".", "nn", ".", "softmax", "(", "similarities", ",", "axis", "=", "-", "1", ")", "\n", "", "return", "softmax_similarities", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.CNNEncoder.__init__": [[44, 46], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "params", "=", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.CNNEncoder.__call__": [[47, 83], ["tensorflow.expand_dims", "tensorflow.shape", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.variable_scope", "tensorflow.layers.conv2d", "tensorflow.tanh", "tensorflow.squeeze", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.reduce_sum", "print", "print", "tensorflow.contrib.layers.batch_norm", "tensorflow.reduce_sum", "tensorflow.cast", "tensorflow.cast"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sent_input", ",", "support_set", ",", "reuse", ",", "is_training", ",", "mask", ")", ":", "\n", "\n", "        ", "sent_input", "=", "tf", ".", "expand_dims", "(", "sent_input", ",", "axis", "=", "-", "1", ")", "\n", "tmp", "=", "tf", ".", "shape", "(", "sent_input", ")", "\n", "sent_input", "=", "tf", ".", "reshape", "(", "sent_input", ",", "[", "-", "1", ",", "self", ".", "params", "[", "'max_length'", "]", ",", "self", ".", "params", "[", "'emb_size'", "]", ",", "1", "]", ")", "\n", "sent_input", "=", "tf", ".", "transpose", "(", "sent_input", ",", "[", "0", ",", "1", ",", "3", ",", "2", "]", ")", "\n", "mask", "=", "tf", ".", "reshape", "(", "mask", ",", "[", "-", "1", ",", "tmp", "[", "-", "3", "]", "]", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'g'", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "g_conv1_encoder", "=", "tf", ".", "layers", ".", "conv2d", "(", "sent_input", ",", "\n", "self", ".", "params", "[", "'hidden_size'", "]", ",", "\n", "[", "self", ".", "params", "[", "'filter_size'", "]", ",", "1", "]", ",", "\n", "strides", "=", "(", "1", ",", "1", ")", ",", "\n", "padding", "=", "'SAME'", ",", "\n", "name", "=", "'conv1'", ",", "\n", "use_bias", "=", "False", ")", "\n", "g_conv1_encoder", "=", "tf", ".", "tanh", "(", "g_conv1_encoder", ")", "\n", "if", "self", ".", "params", "[", "'enable_batchnorm'", "]", "is", "True", ":", "\n", "                ", "print", "(", "'batch norm enabled.'", ")", "\n", "g_conv1_encoder", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "g_conv1_encoder", ",", "\n", "updates_collections", "=", "None", ",", "\n", "decay", "=", "0.99", ",", "\n", "scale", "=", "True", ",", "\n", "center", "=", "True", ",", "\n", "is_training", "=", "is_training", ")", "\n", "\n", "", "g_conv2_encoder", "=", "tf", ".", "squeeze", "(", "g_conv1_encoder", ",", "[", "2", "]", ")", "\n", "\n", "lengths", "=", "tf", ".", "expand_dims", "(", "tf", ".", "reduce_sum", "(", "mask", ",", "axis", "=", "1", ")", ",", "axis", "=", "1", ")", "\n", "mask", "=", "tf", ".", "expand_dims", "(", "mask", ",", "axis", "=", "2", ")", "\n", "g_conv2_encoder", "=", "g_conv2_encoder", "*", "tf", ".", "cast", "(", "mask", ",", "'float32'", ")", "\n", "g_conv_encoder", "=", "tf", ".", "reduce_sum", "(", "g_conv2_encoder", ",", "axis", "=", "1", ")", "\n", "g_conv_encoder", "=", "g_conv_encoder", "/", "tf", ".", "cast", "(", "lengths", ",", "'float32'", ")", "\n", "\n", "print", "(", "'g_conv_encoder'", ",", "g_conv_encoder", ")", "\n", "return", "g_conv_encoder", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.biLSTMEncoder.__init__": [[86, 88], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "        ", "self", ".", "params", "=", "params", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.biLSTMEncoder.__call__": [[89, 123], ["tensorflow.expand_dims", "tensorflow.shape", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.variable_scope", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.contrib.rnn.LSTMCell", "tensorflow.nn.bidirectional_dynamic_rnn", "tensorflow.concat", "tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.reduce_sum", "print", "print", "tensorflow.contrib.layers.batch_norm", "tensorflow.reduce_sum", "tensorflow.cast", "tensorflow.cast"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "sent_input", ",", "support_set", ",", "reuse", ",", "is_training", ",", "mask", ")", ":", "\n", "\n", "        ", "sent_input", "=", "tf", ".", "expand_dims", "(", "sent_input", ",", "axis", "=", "-", "1", ")", "\n", "tmp", "=", "tf", ".", "shape", "(", "sent_input", ")", "\n", "sent_input", "=", "tf", ".", "reshape", "(", "sent_input", ",", "\n", "[", "-", "1", ",", "self", ".", "params", "[", "'max_length'", "]", ",", "self", ".", "params", "[", "'emb_size'", "]", "]", ")", "\n", "\n", "mask", "=", "tf", ".", "reshape", "(", "mask", ",", "[", "-", "1", ",", "tmp", "[", "-", "3", "]", "]", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "'g'", ",", "reuse", "=", "reuse", ")", ":", "\n", "            ", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "LSTMCell", "(", "self", ".", "params", "[", "'hidden_size'", "]", "/", "2", ",", "name", "=", "'fw'", ")", "\n", "cell_bw", "=", "tf", ".", "contrib", ".", "rnn", ".", "LSTMCell", "(", "self", ".", "params", "[", "'hidden_size'", "]", "/", "2", ",", "name", "=", "'bw'", ")", "\n", "outputs", ",", "_", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "cell_fw", ",", "\n", "cell_bw", ",", "sent_input", ",", "\n", "dtype", "=", "'float32'", ")", "\n", "g_conv_encoder", "=", "tf", ".", "concat", "(", "[", "outputs", "[", "0", "]", ",", "outputs", "[", "1", "]", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "if", "self", ".", "params", "[", "'enable_batchnorm'", "]", "is", "True", ":", "\n", "                ", "print", "(", "'batch norm enabled.'", ")", "\n", "g_conv_encoder", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "g_conv_encoder", ",", "\n", "updates_collections", "=", "None", ",", "\n", "decay", "=", "0.99", ",", "\n", "scale", "=", "True", ",", "\n", "center", "=", "True", ",", "\n", "is_training", "=", "is_training", ")", "\n", "\n", "", "lengths", "=", "tf", ".", "expand_dims", "(", "tf", ".", "reduce_sum", "(", "mask", ",", "axis", "=", "1", ")", ",", "axis", "=", "1", ")", "\n", "mask", "=", "tf", ".", "expand_dims", "(", "mask", ",", "axis", "=", "2", ")", "\n", "g_conv_encoder", "=", "g_conv_encoder", "*", "tf", ".", "cast", "(", "mask", ",", "'float32'", ")", "\n", "g_conv_encoder", "=", "tf", ".", "reduce_sum", "(", "g_conv_encoder", ",", "axis", "=", "1", ")", "\n", "g_conv_encoder", "=", "g_conv_encoder", "/", "tf", ".", "cast", "(", "lengths", ",", "'float32'", ")", "\n", "\n", "print", "(", "'g_conv_encoder'", ",", "g_conv_encoder", ")", "\n", "return", "g_conv_encoder", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.MatchingNetwork.__init__": [[126, 186], ["model.DistanceNetwork", "model.Classify", "model.CNNEncoder", "tensorflow.get_variable", "tensorflow.placeholder", "tensorflow.nn.embedding_lookup", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.embedding_lookup", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.embedding_lookup", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.embedding_lookup", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.constant", "model.MatchingNetwork.params[].astype"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "params", ")", ":", "\n", "\n", "        ", "self", ".", "params", "=", "params", "\n", "self", ".", "dn", "=", "DistanceNetwork", "(", ")", "\n", "self", ".", "classify", "=", "Classify", "(", ")", "\n", "self", ".", "ss_g", "=", "CNNEncoder", "(", "params", ")", "\n", "# self.ss_g = biLSTMEncoder(params)", "\n", "self", ".", "W", "=", "tf", ".", "get_variable", "(", "\"W\"", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "constant", "(", "self", ".", "params", "[", "'wordvectors'", "]", ".", "astype", "(", "'float32'", ")", ")", ")", "\n", "\n", "sen_len", "=", "self", ".", "params", "[", "'max_length'", "]", "\n", "self", ".", "input_support_set_sents", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "\n", "[", "None", ",", "None", ",", "sen_len", "]", ",", "\n", "'support_set_sents'", ")", "\n", "self", ".", "support_set_sents", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "W", ",", "\n", "self", ".", "input_support_set_sents", ")", "\n", "self", ".", "support_set_labels", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "\n", "[", "None", ",", "None", ",", "None", "]", ",", "\n", "'support_set_labels'", ")", "\n", "self", ".", "support_set_sents_mask", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "\n", "[", "None", ",", "None", ",", "sen_len", "]", ",", "\n", "'support_set_sents_mask'", ")", "\n", "\n", "self", ".", "input_target_sent", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "\n", "[", "None", ",", "sen_len", "]", ",", "\n", "'target_sent'", ")", "\n", "self", ".", "target_sent", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "W", ",", "\n", "self", ".", "input_target_sent", ")", "\n", "self", ".", "target_label", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "\n", "[", "None", ",", "None", "]", ",", "'target_label_one_hot'", ")", "\n", "self", ".", "target_sent_mask", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "\n", "[", "None", ",", "sen_len", "]", ",", "\n", "'target_label'", ")", "\n", "\n", "self", ".", "input_target_sent_test", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "\n", "[", "None", ",", "sen_len", "]", ",", "\n", "'target_sent_test'", ")", "\n", "self", ".", "target_sent_test", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "W", ",", "\n", "self", ".", "input_target_sent_test", ")", "\n", "self", ".", "target_sent_mask_test", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "\n", "[", "None", ",", "sen_len", "]", ",", "\n", "'target_sent_mask_test'", ")", "\n", "\n", "self", ".", "ss_encoded_sents_avg_test", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "\n", "[", "None", ",", "None", ",", "None", "]", ",", "\n", "'support_set_emb_test'", ")", "\n", "\n", "self", ".", "input_ood_sents", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "\n", "[", "None", ",", "self", ".", "params", "[", "'ood_example_size'", "]", ",", "\n", "sen_len", "]", ",", "\n", "'input_ood_sents'", ")", "\n", "self", ".", "ood_sents", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "W", ",", "\n", "self", ".", "input_ood_sents", ")", "\n", "self", ".", "ood_sents_mask", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "\n", "[", "None", ",", "self", ".", "params", "[", "'ood_example_size'", "]", ",", "\n", "sen_len", "]", ",", "\n", "'ood_sents_mask'", ")", "\n", "\n", "self", ".", "is_training", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ",", "name", "=", "'training-flag'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.MatchingNetwork.get_prototype": [[187, 193], ["tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.expand_dims"], "methods", ["None"], ["", "def", "get_prototype", "(", "self", ",", "ss_presententations", ",", "ss_labels", ")", ":", "\n", "        ", "label_level_sum_embs", "=", "tf", ".", "matmul", "(", "ss_labels", ",", "ss_presententations", ",", "\n", "transpose_a", "=", "True", ")", "\n", "label_level_sum_cnt", "=", "tf", ".", "reduce_sum", "(", "ss_labels", ",", "axis", "=", "1", ")", "\n", "protos", "=", "label_level_sum_embs", "/", "tf", ".", "expand_dims", "(", "label_level_sum_cnt", ",", "axis", "=", "2", ")", "\n", "return", "protos", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.MatchingNetwork.build": [[194, 288], ["tensorflow.get_collection", "tensorflow.name_scope", "model.MatchingNetwork.ss_g", "tensorflow.shape", "tensorflow.reshape", "model.MatchingNetwork.ss_g", "model.MatchingNetwork.ss_g", "tensorflow.shape", "tensorflow.reshape", "model.MatchingNetwork.get_prototype", "model.MatchingNetwork.dn", "model.MatchingNetwork.classify", "tensorflow.reduce_sum", "tensorflow.maximum", "model.MatchingNetwork.dn", "tensorflow.reduce_max", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "model.MatchingNetwork.ss_g", "model.MatchingNetwork.dn", "model.MatchingNetwork.classify", "tensorflow.log", "tensorflow.maximum", "tensorflow.reduce_sum", "tensorflow.shape", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.MatchingNetwork.get_prototype"], ["", "def", "build", "(", "self", ")", ":", "\n", "        ", "with", "tf", ".", "name_scope", "(", "\"losses\"", ")", ":", "\n", "            ", "encoded_sents", "=", "self", ".", "ss_g", "(", "sent_input", "=", "self", ".", "support_set_sents", ",", "\n", "support_set", "=", "None", ",", "\n", "is_training", "=", "self", ".", "is_training", ",", "\n", "reuse", "=", "False", ",", "\n", "mask", "=", "self", ".", "support_set_sents_mask", ")", "\n", "\n", "shape_list_after_g", "=", "tf", ".", "shape", "(", "encoded_sents", ")", "\n", "# shape: B, SS, E", "\n", "encoded_sents", "=", "tf", ".", "reshape", "(", "encoded_sents", ",", "\n", "[", "-", "1", ",", "\n", "tf", ".", "shape", "(", "self", ".", "support_set_sents", ")", "[", "1", "]", ",", "\n", "shape_list_after_g", "[", "-", "1", "]", "]", ")", "\n", "\n", "target_encoded_sents", "=", "self", ".", "ss_g", "(", "sent_input", "=", "self", ".", "target_sent", ",", "\n", "support_set", "=", "None", ",", "\n", "is_training", "=", "self", ".", "is_training", ",", "\n", "reuse", "=", "True", ",", "\n", "mask", "=", "self", ".", "target_sent_mask", ")", "# shape: batch_size, emb", "\n", "\n", "ood_encoded_sents", "=", "self", ".", "ss_g", "(", "sent_input", "=", "self", ".", "ood_sents", ",", "\n", "support_set", "=", "None", ",", "\n", "is_training", "=", "self", ".", "is_training", ",", "\n", "reuse", "=", "True", ",", "\n", "mask", "=", "self", ".", "ood_sents_mask", ")", "\n", "ood_shape_list_after_g", "=", "tf", ".", "shape", "(", "ood_encoded_sents", ")", "\n", "# ood_encoded_sents(B, OOD, E)", "\n", "ood_encoded_sents", "=", "tf", ".", "reshape", "(", "ood_encoded_sents", ",", "\n", "[", "-", "1", ",", "tf", ".", "shape", "(", "self", ".", "ood_sents", ")", "[", "1", "]", ",", "\n", "ood_shape_list_after_g", "[", "-", "1", "]", "]", ")", "\n", "\n", "# encoded_prototype.shape(B, Y, E)", "\n", "encoded_prototype", "=", "self", ".", "get_prototype", "(", "encoded_sents", ",", "self", ".", "support_set_labels", ")", "\n", "\n", "# loss-1", "\n", "similarities_label_level", "=", "self", ".", "dn", "(", "support_set", "=", "encoded_prototype", ",", "\n", "input_sent", "=", "target_encoded_sents", ",", "\n", "name", "=", "\"distance_calculation\"", ")", "\n", "softmax_similarities_proto", "=", "self", ".", "classify", "(", "similarities_label_level", ",", "\n", "name", "=", "'classify'", ",", "\n", "softmax_factor", "=", "self", ".", "params", "[", "'softmax_factor'", "]", ")", "\n", "\n", "logloss_ontopic", "=", "-", "tf", ".", "log", "(", "tf", ".", "reduce_sum", "(", "self", ".", "target_label", "\n", "*", "softmax_similarities_proto", ",", "\n", "reduction_indices", "=", "[", "1", "]", ")", ")", "\n", "\n", "# loss-2", "\n", "similarities_label_level01", "=", "(", "similarities_label_level", "+", "1.0", ")", "/", "2.0", "\n", "tmp", "=", "tf", ".", "reduce_sum", "(", "self", ".", "target_label", "*", "similarities_label_level01", ",", "reduction_indices", "=", "[", "1", "]", ")", "\n", "loss_target_gt_distance", "=", "tf", ".", "maximum", "(", "0.0", ",", "self", ".", "params", "[", "'ood_threshold'", "]", "\n", "+", "self", ".", "params", "[", "'ood_threshold_margin'", "]", "\n", "-", "tmp", ")", "\n", "\n", "# loss-3", "\n", "# ood_similarities_label_level(B, OOD, Y)", "\n", "ood_similarities_label_level", "=", "self", ".", "dn", "(", "support_set", "=", "encoded_prototype", ",", "\n", "input_sent", "=", "ood_encoded_sents", ",", "\n", "name", "=", "\"ood_distance_calculation\"", ")", "\n", "ood_similarities_label_level01", "=", "(", "ood_similarities_label_level", "+", "1.0", ")", "/", "2.0", "\n", "ood_similarities_label_level_max01", "=", "tf", ".", "reduce_max", "(", "ood_similarities_label_level01", ",", "axis", "=", "2", ")", "\n", "ood_hinge_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "maximum", "(", "0.0", ",", "ood_similarities_label_level_max01", "\n", "-", "self", ".", "params", "[", "'ood_threshold'", "]", "\n", "+", "self", ".", "params", "[", "'ood_threshold_margin'", "]", ")", ",", "axis", "=", "-", "1", ")", "\n", "logloss_ontopic", "=", "tf", ".", "reduce_mean", "(", "logloss_ontopic", ")", "\n", "loss_target_gt_distance", "=", "tf", ".", "reduce_mean", "(", "loss_target_gt_distance", ")", "\n", "ood_hinge_loss", "=", "tf", ".", "reduce_mean", "(", "ood_hinge_loss", ")", "\n", "crossentropy_loss", "=", "self", ".", "params", "[", "'alpha_indomain'", "]", "*", "logloss_ontopic", "+", "self", ".", "params", "[", "'alpha_pos'", "]", "*", "loss_target_gt_distance", "+", "self", ".", "params", "[", "'alpha_neg'", "]", "*", "ood_hinge_loss", "\n", "\n", "target_encoded_sents_test", "=", "self", ".", "ss_g", "(", "sent_input", "=", "self", ".", "target_sent_test", ",", "\n", "support_set", "=", "None", ",", "\n", "is_training", "=", "self", ".", "is_training", ",", "\n", "reuse", "=", "True", ",", "\n", "mask", "=", "self", ".", "target_sent_mask_test", ")", "# shape: batch_size, emb", "\n", "\n", "similarities_avg_level_test", "=", "self", ".", "dn", "(", "support_set", "=", "self", ".", "ss_encoded_sents_avg_test", ",", "\n", "input_sent", "=", "target_encoded_sents_test", ",", "\n", "name", "=", "\"distance_calculation_test\"", ")", "\n", "\n", "softmax_similarities_proto_test", "=", "self", ".", "classify", "(", "similarities_avg_level_test", ",", "\n", "name", "=", "'classify'", ",", "\n", "softmax_factor", "=", "self", ".", "params", "[", "'softmax_factor'", "]", ")", "\n", "similarities_avg_level_test_01", "=", "(", "similarities_avg_level_test", "+", "1.0", ")", "/", "2.0", "\n", "\n", "", "self", ".", "variables", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "scope", "=", "'g'", ")", "\n", "return", "crossentropy_loss", ",", "softmax_similarities_proto_test", ",", "similarities_avg_level_test_01", ",", "encoded_prototype", ",", "logloss_ontopic", ",", "loss_target_gt_distance", ",", "ood_hinge_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.MatchingNetwork.get_train_op": [[289, 308], ["print", "tensorflow.train.AdamOptimizer", "tensorflow.get_collection", "tensorflow.get_default_graph().get_tensor_by_name", "tensorflow.get_default_graph().get_tensor_by_name", "tensorflow.add_to_collection", "tensorflow.add_to_collection", "tensorflow.control_dependencies", "tensorflow.global_variables", "tensorflow.train.AdamOptimizer.minimize", "print", "tensorflow.get_default_graph", "tensorflow.get_default_graph"], "methods", ["None"], ["", "def", "get_train_op", "(", "self", ",", "loss", ")", ":", "\n", "        ", "print", "(", "'current_learning_rate'", ",", "self", ".", "params", "[", "'learning_rate'", "]", ")", "\n", "\n", "c_opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "beta1", "=", "0.9", ",", "\n", "learning_rate", "=", "self", ".", "params", "[", "'learning_rate'", "]", ")", "\n", "\n", "if", "self", ".", "params", "[", "'enable_batchnorm'", "]", "is", "True", ":", "\n", "            ", "v1", "=", "tf", ".", "get_default_graph", "(", ")", ".", "get_tensor_by_name", "(", "\"g/BatchNorm/moving_mean:0\"", ")", "\n", "v2", "=", "tf", ".", "get_default_graph", "(", ")", ".", "get_tensor_by_name", "(", "\"g/BatchNorm/moving_variance:0\"", ")", "\n", "tf", ".", "add_to_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ",", "v1", ")", "\n", "tf", ".", "add_to_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ",", "v2", ")", "\n", "\n", "", "update_ops", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "UPDATE_OPS", ")", "\n", "with", "tf", ".", "control_dependencies", "(", "update_ops", ")", ":", "\n", "            ", "train_variables", "=", "self", ".", "variables", "+", "[", "self", ".", "W", "]", "\n", "for", "variable", "in", "tf", ".", "global_variables", "(", ")", ":", "\n", "                ", "print", "(", "\"tf.global_variables()-->\"", ",", "variable", ")", "\n", "", "c_error_opt_op", "=", "c_opt", ".", "minimize", "(", "loss", ")", "\n", "", "return", "c_error_opt_op", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.MatchingNetwork.init": [[309, 327], ["model.MatchingNetwork.build", "model.MatchingNetwork.get_train_op"], "methods", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.MatchingNetwork.build", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.model.MatchingNetwork.get_train_op"], ["", "def", "init", "(", "self", ")", ":", "\n", "        ", "loss", ",", "softmax_similarities_proto_test", ",", "similarities_avg_level_test_01", ",", "encoded_prototype", ",", "logloss_ontopic", ",", "loss_target_gt_distance", ",", "ood_hinge_loss", "=", "self", ".", "build", "(", ")", "\n", "\n", "train_op", "=", "self", ".", "get_train_op", "(", "loss", ")", "\n", "self", ".", "train_op", "=", "train_op", "\n", "self", ".", "loss", "=", "loss", "\n", "self", ".", "encoded_prototype", "=", "encoded_prototype", "\n", "self", ".", "test_preds", "=", "softmax_similarities_proto_test", "\n", "self", ".", "test_preds_unnorm", "=", "similarities_avg_level_test_01", "\n", "self", ".", "loss_ontopic", "=", "logloss_ontopic", "\n", "self", ".", "loss_target_gt_distance", "=", "loss_target_gt_distance", "\n", "self", ".", "loss_ood_hinge", "=", "ood_hinge_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.search_best_threshold": [[5, 51], ["len", "len", "print", "sorted", "dataset_best_thresholds.append", "dataset_best_values.append", "print", "math.fabs"], "function", ["None"], ["def", "search_best_threshold", "(", "params", ",", "valid_output_info_list", ")", ":", "\n", "    ", "dataset_best_thresholds", "=", "[", "]", "\n", "dataset_best_values", "=", "[", "]", "\n", "\n", "for", "valid_output_info", "in", "valid_output_info_list", ":", "\n", "        ", "bestT", "=", "0", "\n", "bestV", "=", "1", "\n", "best_frr", "=", "0", "\n", "best_far", "=", "1", "\n", "\n", "offsize", "=", "len", "(", "[", "conf", "for", "pred", ",", "gt", ",", "conf", "in", "valid_output_info", "\n", "if", "gt", "==", "params", "[", "'offtopic_label'", "]", "]", ")", "\n", "insize", "=", "len", "(", "[", "conf", "for", "pred", ",", "gt", ",", "conf", "in", "valid_output_info", "\n", "if", "gt", "!=", "params", "[", "'offtopic_label'", "]", "]", ")", "\n", "\n", "print", "(", "'offsize, insize'", ",", "offsize", ",", "insize", ")", "\n", "sorted_valid_output_info", "=", "sorted", "(", "valid_output_info", ",", "key", "=", "lambda", "x", ":", "x", "[", "2", "]", ")", "\n", "\n", "accepted_oo", "=", "offsize", "\n", "rejected_in", "=", "0.0", "\n", "threshold", "=", "0.0", "\n", "ind", "=", "0", "\n", "for", "pred", ",", "gt", ",", "conf", "in", "sorted_valid_output_info", "[", ":", "-", "1", "]", ":", "\n", "            ", "threshold", "=", "(", "sorted_valid_output_info", "[", "ind", "]", "[", "2", "]", "+", "\n", "sorted_valid_output_info", "[", "ind", "+", "1", "]", "[", "2", "]", ")", "/", "2.0", "\n", "if", "gt", "!=", "params", "[", "'offtopic_label'", "]", ":", "\n", "                ", "rejected_in", "+=", "1.0", "\n", "", "else", ":", "\n", "                ", "accepted_oo", "-=", "1.0", "\n", "\n", "", "frr", "=", "rejected_in", "/", "insize", "\n", "far", "=", "accepted_oo", "/", "offsize", "\n", "dist", "=", "math", ".", "fabs", "(", "frr", "-", "far", ")", "\n", "if", "dist", "<", "bestV", ":", "\n", "                ", "bestV", "=", "dist", "\n", "bestT", "=", "threshold", "\n", "best_frr", "=", "frr", "\n", "best_far", "=", "far", "\n", "", "ind", "+=", "1", "\n", "\n", "", "dataset_best_thresholds", ".", "append", "(", "bestT", ")", "\n", "dataset_best_values", ".", "append", "(", "bestV", ")", "\n", "print", "(", "'bestT, bestV, bestFAR, bestFRR'", ",", "\n", "bestT", ",", "bestV", ",", "best_far", ",", "best_frr", ")", "\n", "\n", "", "return", "dataset_best_thresholds", ",", "dataset_best_values", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.get_results": [[53, 90], ["len", "len", "len"], "function", ["None"], ["", "def", "get_results", "(", "params", ",", "output_info", ",", "threshold", ")", ":", "\n", "\n", "    ", "total_gt_ontopic_utt", "=", "len", "(", "[", "gt", "for", "pred", ",", "gt", ",", "conf", "in", "output_info", "\n", "if", "gt", "!=", "params", "[", "'offtopic_label'", "]", "]", ")", "\n", "total_gt_offtopic_utt", "=", "len", "(", "output_info", ")", "-", "total_gt_ontopic_utt", "\n", "\n", "accepted_oo", "=", "0.0", "\n", "rejected_in", "=", "0.0", "\n", "correct_domain_label", "=", "0.0", "\n", "correct_wo_thr", "=", "0.0", "\n", "correct_w_thr", "=", "0.0", "\n", "\n", "for", "pred", ",", "gt", ",", "conf", "in", "output_info", ":", "\n", "        ", "if", "conf", "<", "threshold", ":", "\n", "            ", "pred1", "=", "params", "[", "'offtopic_label'", "]", "\n", "", "else", ":", "\n", "            ", "pred1", "=", "pred", "\n", "\n", "", "if", "gt", "==", "params", "[", "'offtopic_label'", "]", "and", "pred1", "!=", "gt", ":", "\n", "            ", "accepted_oo", "+=", "1", "\n", "", "elif", "gt", "!=", "params", "[", "'offtopic_label'", "]", "and", "pred1", "==", "params", "[", "'offtopic_label'", "]", ":", "\n", "            ", "rejected_in", "+=", "1", "\n", "", "else", ":", "\n", "            ", "correct_domain_label", "+=", "1", "\n", "\n", "", "if", "gt", "!=", "params", "[", "'offtopic_label'", "]", "and", "pred", "==", "gt", ":", "\n", "            ", "correct_wo_thr", "+=", "1", "\n", "", "if", "gt", "!=", "params", "[", "'offtopic_label'", "]", "and", "pred1", "==", "gt", ":", "\n", "            ", "correct_w_thr", "+=", "1", "\n", "\n", "", "", "far", "=", "accepted_oo", "/", "total_gt_offtopic_utt", "\n", "frr", "=", "rejected_in", "/", "total_gt_ontopic_utt", "\n", "eer", "=", "1", "-", "correct_domain_label", "/", "len", "(", "output_info", ")", "\n", "ontopic_acc_ideal", "=", "correct_wo_thr", "/", "total_gt_ontopic_utt", "\n", "ontopic_acc", "=", "correct_w_thr", "/", "total_gt_ontopic_utt", "\n", "\n", "return", "eer", ",", "far", ",", "frr", ",", "ontopic_acc_ideal", ",", "ontopic_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.compute_values": [[92, 138], ["range", "utils.search_best_threshold", "range", "len", "len", "len", "len", "len", "len", "experiment.run_testing_epoch", "test_output_info_list.append", "len", "print", "utils.get_results", "print"], "function", ["home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.search_best_threshold", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.experiment.RunExperiment.run_testing_epoch", "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.get_results"], ["", "def", "compute_values", "(", "params", ",", "experiment", ",", "result_data", ",", "epoch", ")", ":", "\n", "\n", "    ", "t_macro_avg_eer", "=", "0.0", "\n", "t_macro_avg_far", "=", "0.0", "\n", "t_macro_avg_frr", "=", "0.0", "\n", "\n", "t_macro_avg_acc_ideal", "=", "0.0", "\n", "t_macro_avg_acc", "=", "0.0", "\n", "\n", "test_output_info_list", "=", "[", "]", "\n", "\n", "for", "workspace_idx", "in", "range", "(", "len", "(", "result_data", ")", ")", ":", "\n", "        ", "curr_dev_workspace", "=", "result_data", "[", "workspace_idx", "]", "\n", "_", ",", "_", ",", "test_output_info", "=", "experiment", ".", "run_testing_epoch", "(", "epoch", "=", "epoch", ",", "\n", "test_workspace", "=", "curr_dev_workspace", ")", "\n", "test_output_info_list", ".", "append", "(", "test_output_info", ")", "\n", "\n", "", "thesholds", ",", "_", "=", "search_best_threshold", "(", "params", ",", "test_output_info_list", ")", "\n", "\n", "for", "workspace_idx", "in", "range", "(", "len", "(", "result_data", ")", ")", ":", "\n", "        ", "curr_dev_workspace", "=", "result_data", "[", "workspace_idx", "]", "\n", "print", "(", "curr_dev_workspace", ".", "target_sets_files", "[", "2", "]", ")", "\n", "\n", "test_output_info", "=", "test_output_info_list", "[", "workspace_idx", "]", "\n", "test_eer", ",", "test_far", ",", "test_frr", ",", "test_ontopic_acc_ideal", ",", "test_ontopic_acc", "=", "get_results", "(", "params", ",", "test_output_info", ",", "\n", "thesholds", "[", "workspace_idx", "]", ")", "\n", "print", "(", "'test(eer, far, frr, ontopic_acc_ideal, ontopic_acc) %.3f, %.3f, %.3f, %.3f, %.3f'", "%", "\n", "(", "test_eer", ",", "test_far", ",", "test_frr", ",", "\n", "test_ontopic_acc_ideal", ",", "\n", "test_ontopic_acc", ")", ")", "\n", "\n", "t_macro_avg_eer", "+=", "test_eer", "\n", "t_macro_avg_far", "+=", "test_far", "\n", "t_macro_avg_frr", "+=", "test_frr", "\n", "t_macro_avg_acc_ideal", "+=", "test_ontopic_acc_ideal", "\n", "t_macro_avg_acc", "+=", "test_ontopic_acc", "\n", "\n", "", "t_macro_avg_eer", "/=", "len", "(", "result_data", ")", "\n", "t_macro_avg_far", "/=", "len", "(", "result_data", ")", "\n", "t_macro_avg_frr", "/=", "len", "(", "result_data", ")", "\n", "t_macro_avg_acc_ideal", "/=", "len", "(", "result_data", ")", "\n", "t_macro_avg_acc", "/=", "len", "(", "result_data", ")", "\n", "return", "t_macro_avg_eer", ",", "t_macro_avg_far", ",", "t_macro_avg_frr", ",", "t_macro_avg_acc_ideal", ",", "t_macro_avg_acc", ",", "test_output_info_list", "\n", "\n"]], "home.repos.pwc.inspect_result.SLAD-ml_few-shot-ood.src.utils.get_data": [[140, 151], ["open", "workspaces.append", "print", "sys.stdout.flush", "wid.strip().split", "workspace.workspace", "wid.strip"], "function", ["None"], ["", "def", "get_data", "(", "params", ",", "file_list", ",", "role", ")", ":", "\n", "    ", "workspaces", "=", "[", "]", "\n", "with", "open", "(", "file_list", ")", "as", "fi", ":", "\n", "        ", "i", "=", "0", "\n", "for", "wid", "in", "fi", ":", "\n", "            ", "wid", "=", "wid", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "[", "0", "]", "\n", "workspaces", ".", "append", "(", "workspace", "(", "wid", ",", "params", ",", "role", ")", ")", "\n", "print", "(", "'get_data:'", ",", "i", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "i", "+=", "1", "\n", "", "", "return", "workspaces", "\n", "", ""]]}