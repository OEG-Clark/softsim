{"home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner_wiki_auto.pad_sequence_": [[23, 28], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ",", "padding", "=", "'post'", ",", "truncating", "=", "'post'", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "padding", ",", "\n", "truncating", "=", "truncating", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner_wiki_auto.get_aucpr": [[30, 34], ["sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc"], "function", ["None"], ["", "def", "get_aucpr", "(", "y_out", ",", "y_true", ")", ":", "\n", "    ", "precision", ",", "recall", ",", "threshold", "=", "precision_recall_curve", "(", "y_out", ",", "y_true", ")", "\n", "aucpr", "=", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "aucpr", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner_wiki_auto.tuning": [[36, 44], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner_wiki_auto.tuning_1": [[46, 54], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning_1", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "0", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner_wiki_auto.evaluation": [[56, 83], ["range", "logging.info", "sklearn.metrics.roc_auc_score", "train_kge_fner_wiki_auto.get_aucpr", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "train_kge_fner_wiki_auto.tuning_1", "train_kge_fner_wiki_auto.tuning", "len", "len", "len", "len", "sklearn.metrics.classification_report"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning"], ["", "def", "evaluation", "(", "y_out", ",", "pred_out", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "if", "data_type", ":", "\n", "        ", "pred_1", "=", "tuning_1", "(", "pred_out", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "pred_1", "=", "tuning", "(", "pred_out", ")", "\n", "# for val in pred_out[0]:", "\n", "#     logging.info(\"val => {}\".format(val))", "\n", "\n", "", "acc", "=", "0", "\n", "assert", "len", "(", "pred_out", ")", "==", "len", "(", "y_out", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_1", ")", ")", ":", "\n", "        ", "if", "pred_1", "[", "i", "]", "==", "y_out", "[", "i", "]", ":", "\n", "            ", "acc", "+=", "1", "\n", "", "", "b", "=", "(", "acc", "/", "len", "(", "pred_1", ")", ")", "*", "100", "\n", "logging", ".", "info", "(", "\"The test accuracy: {}\"", ".", "format", "(", "b", ")", ")", "\n", "# print(pred_out, y_out)", "\n", "roc_score_test", "=", "roc_auc_score", "(", "y_out", ",", "pred_out", ")", "\n", "aucpr_test", "=", "get_aucpr", "(", "y_out", ",", "pred_out", ")", "\n", "f1_test", "=", "f1_score", "(", "y_out", ",", "pred_1", ")", "\n", "precision_test", "=", "precision_score", "(", "y_out", ",", "pred_1", ")", "\n", "recall_test", "=", "recall_score", "(", "y_out", ",", "pred_1", ")", "\n", "logging", ".", "info", "(", "\"This is the AUCPR score: {}\"", ".", "format", "(", "aucpr_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the roc_score: {}\"", ".", "format", "(", "roc_score_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the F1 score: {}\"", ".", "format", "(", "f1_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is precision: {}\"", ".", "format", "(", "precision_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is recall: {}\"", ".", "format", "(", "recall_test", ")", ")", "\n", "logging", ".", "info", "(", "\"Classification report: {}\"", ".", "format", "(", "classification_report", "(", "y_out", ",", "pred_1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner_wiki_auto.eval_data": [[85, 100], ["len", "range", "train_kge_fner_wiki_auto.evaluation", "model.get_embed", "model.predict_kge", "output_[].tolist"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.predict_kge"], ["", "def", "eval_data", "(", "model", ",", "head_vec", ",", "tail_vec", ",", "rel_vec", ",", "label_ids", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "N", "=", "len", "(", "head_vec", ")", "\n", "g1", "=", "1024", "\n", "output_dev_collector", "=", "[", "]", "\n", "for", "k1", "in", "(", "range", "(", "0", ",", "N", ",", "g1", ")", ")", ":", "\n", "        ", "if", "k1", "+", "g1", ">", "N", ":", "\n", "            ", "d1", "=", "N", "\n", "", "else", ":", "\n", "            ", "d1", "=", "k1", "+", "g1", "\n", "", "h", ",", "r", ",", "t", ",", "embed", "=", "model", ".", "get_embed", "(", "head_vec", "[", "k1", ":", "d1", "]", ",", "tail_vec", "[", "k1", ":", "d1", "]", ",", "rel_vec", "[", "k1", ":", "d1", "]", ")", "\n", "# embed = np.squeeze(embed)", "\n", "output_", "=", "model", ".", "predict_kge", "(", "embed", ")", "\n", "# print(output_[0].shape)", "\n", "output_dev_collector", "+=", "output_", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "evaluation", "(", "label_ids", ",", "output_dev_collector", ",", "data_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner_wiki_auto.pad_single": [[102, 106], ["max", "train_kge_fner_wiki_auto.pad_sequence_", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_"], ["", "def", "pad_single", "(", "sent_in", ")", ":", "\n", "    ", "max_sent", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "sent_in", "]", ")", "\n", "sent_in_pad", "=", "pad_sequence_", "(", "sent_in", ",", "max_sent", ")", "\n", "return", "sent_in_pad", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner_wiki_auto.valid_eval": [[108, 156], ["train_kge_fner_wiki_auto.pad_single", "train_kge_fner_wiki_auto.pad_single", "train_kge_fner_wiki_auto.pad_single", "range", "print", "numpy.array", "numpy.vstack", "numpy.squeeze", "numpy.array", "numpy.vstack", "print", "src.hook.acc_hook", "logging.info", "len", "Model.predict", "Model.error", "np.squeeze.append", "np.vstack.append", "total_loss.append", "sum", "src.hook.save_predictions", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.acc_hook", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.error", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.save_predictions"], ["", "def", "valid_eval", "(", "data_in", ",", "task", "=", "'FNER'", ",", "eval_type", "=", "None", ",", "final", "=", "False", ")", ":", "\n", "    ", "m1", "=", "data_in", "[", "'mention'", "]", "\n", "l1", "=", "data_in", "[", "'left_context'", "]", "\n", "r1", "=", "data_in", "[", "'right_context'", "]", "\n", "lab", "=", "data_in", "[", "'label'", "]", "\n", "lf_id", "=", "pad_single", "(", "l1", ")", "\n", "rt_id", "=", "pad_single", "(", "r1", ")", "\n", "m_", "=", "pad_single", "(", "m1", ")", "\n", "# m_, lf_id, rt_id = pad_method(m1, l1, r1)", "\n", "collector", "=", "[", "]", "\n", "true", "=", "[", "]", "\n", "eval_loss", "=", "[", "]", "\n", "iters", "=", "0", "\n", "p1", "=", "100", "\n", "total_loss", "=", "[", "]", "\n", "iters", "=", "0", "\n", "for", "k", "in", "range", "(", "0", ",", "len", "(", "m_", ")", ",", "p1", ")", ":", "\n", "        ", "s", "=", "Model", ".", "predict", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", "\n", "loss_val", "=", "Model", ".", "error", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "lab", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", "\n", "\n", "r", "=", "lab", "[", "k", ":", "k", "+", "p1", "]", "\n", "collector", ".", "append", "(", "s", ")", "\n", "true", ".", "append", "(", "r", ")", "\n", "total_loss", ".", "append", "(", "loss_val", ")", "\n", "iters", "+=", "1", "\n", "", "average_eval_loss", "=", "sum", "(", "total_loss", ")", "/", "iters", "\n", "print", "(", "task", "+", "\" Loss: \"", ",", "average_eval_loss", ")", "\n", "collector", "=", "np", ".", "array", "(", "collector", ")", "\n", "collector", "=", "np", ".", "vstack", "(", "collector", ")", "\n", "collector", "=", "np", ".", "squeeze", "(", "collector", ")", "\n", "true", "=", "np", ".", "array", "(", "true", ")", "\n", "true", "=", "np", ".", "vstack", "(", "true", ")", "\n", "print", "(", "collector", ".", "shape", ",", "true", ".", "shape", ")", "\n", "strict_f1", "=", "acc_hook", "(", "collector", ",", "true", ")", "\n", "logging", ".", "info", "(", "str", "(", "eval_type", ")", "+", "\" FNER loss: {}\"", ".", "format", "(", "average_eval_loss", ")", ")", "\n", "if", "final", ":", "\n", "        ", "fname", "=", "args", ".", "dataset", "+", "\"_\"", "+", "args", ".", "encoder", "+", "\"_\"", "+", "str", "(", "args", ".", "feature", ")", "+", "\"_\"", "+", "str", "(", "args", ".", "hier", ")", "+", "\"_\"", "+", "str", "(", "\n", "args", ".", "dataset_kge", ")", "+", "\".txt\"", "\n", "save_predictions", "(", "collector", ",", "true", ",", "dicts", "[", "\"id2label\"", "]", ",", "fname", ")", "\n", "", "return", "strict_f1", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_fner.pad_sequence_": [[23, 28], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ",", "padding", "=", "'post'", ",", "truncating", "=", "'post'", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "padding", ",", "\n", "truncating", "=", "truncating", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_fner.get_aucpr": [[30, 34], ["sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc"], "function", ["None"], ["", "def", "get_aucpr", "(", "y_out", ",", "y_true", ")", ":", "\n", "    ", "precision", ",", "recall", ",", "threshold", "=", "precision_recall_curve", "(", "y_out", ",", "y_true", ")", "\n", "aucpr", "=", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "aucpr", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_fner.tuning": [[36, 44], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_fner.tuning_1": [[46, 54], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning_1", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "0", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_fner.evaluation": [[56, 83], ["range", "logging.info", "sklearn.metrics.roc_auc_score", "test_kge_fner.get_aucpr", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "test_kge_fner.tuning_1", "test_kge_fner.tuning", "len", "len", "len", "len", "sklearn.metrics.classification_report"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning"], ["", "def", "evaluation", "(", "y_out", ",", "pred_out", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "if", "data_type", ":", "\n", "        ", "pred_1", "=", "tuning_1", "(", "pred_out", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "pred_1", "=", "tuning", "(", "pred_out", ")", "\n", "# for val in pred_out[0]:", "\n", "#     logging.info(\"val => {}\".format(val))", "\n", "\n", "", "acc", "=", "0", "\n", "assert", "len", "(", "pred_out", ")", "==", "len", "(", "y_out", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_1", ")", ")", ":", "\n", "        ", "if", "pred_1", "[", "i", "]", "==", "y_out", "[", "i", "]", ":", "\n", "            ", "acc", "+=", "1", "\n", "", "", "b", "=", "(", "acc", "/", "len", "(", "pred_1", ")", ")", "*", "100", "\n", "logging", ".", "info", "(", "\"The test accuracy: {}\"", ".", "format", "(", "b", ")", ")", "\n", "# print(pred_out, y_out)", "\n", "roc_score_test", "=", "roc_auc_score", "(", "y_out", ",", "pred_out", ")", "\n", "aucpr_test", "=", "get_aucpr", "(", "y_out", ",", "pred_out", ")", "\n", "f1_test", "=", "f1_score", "(", "y_out", ",", "pred_1", ")", "\n", "precision_test", "=", "precision_score", "(", "y_out", ",", "pred_1", ")", "\n", "recall_test", "=", "recall_score", "(", "y_out", ",", "pred_1", ")", "\n", "logging", ".", "info", "(", "\"This is the AUCPR score: {}\"", ".", "format", "(", "aucpr_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the roc_score: {}\"", ".", "format", "(", "roc_score_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the F1 score: {}\"", ".", "format", "(", "f1_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is precision: {}\"", ".", "format", "(", "precision_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is recall: {}\"", ".", "format", "(", "recall_test", ")", ")", "\n", "logging", ".", "info", "(", "\"Classification report: {}\"", ".", "format", "(", "classification_report", "(", "y_out", ",", "pred_1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_fner.eval_data": [[85, 100], ["len", "range", "test_kge_fner.evaluation", "model.get_embed", "model.predict_kge", "output_[].tolist"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.predict_kge"], ["", "def", "eval_data", "(", "model", ",", "head_vec", ",", "tail_vec", ",", "rel_vec", ",", "label_ids", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "N", "=", "len", "(", "head_vec", ")", "\n", "g1", "=", "1024", "\n", "output_dev_collector", "=", "[", "]", "\n", "for", "k1", "in", "(", "range", "(", "0", ",", "N", ",", "g1", ")", ")", ":", "\n", "        ", "if", "k1", "+", "g1", ">", "N", ":", "\n", "            ", "d1", "=", "N", "\n", "", "else", ":", "\n", "            ", "d1", "=", "k1", "+", "g1", "\n", "", "h", ",", "r", ",", "t", ",", "embed", "=", "model", ".", "get_embed", "(", "head_vec", "[", "k1", ":", "d1", "]", ",", "tail_vec", "[", "k1", ":", "d1", "]", ",", "rel_vec", "[", "k1", ":", "d1", "]", ")", "\n", "# embed = np.squeeze(embed)", "\n", "output_", "=", "model", ".", "predict_kge", "(", "embed", ")", "\n", "# print(output_[0].shape)", "\n", "output_dev_collector", "+=", "output_", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "evaluation", "(", "label_ids", ",", "output_dev_collector", ",", "data_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_fner.pad_single": [[102, 106], ["max", "test_kge_fner.pad_sequence_", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_"], ["", "def", "pad_single", "(", "sent_in", ")", ":", "\n", "    ", "max_sent", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "sent_in", "]", ")", "\n", "sent_in_pad", "=", "pad_sequence_", "(", "sent_in", ",", "max_sent", ")", "\n", "return", "sent_in_pad", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_fner.valid_eval": [[108, 152], ["data_in.next", "test_kge_fner.pad_single", "test_kge_fner.pad_single", "numpy.flip", "range", "print", "numpy.array", "numpy.vstack", "numpy.squeeze", "numpy.array", "numpy.vstack", "print", "src.hook.acc_hook", "logging.info", "len", "Model.predict", "Model.error", "np.squeeze.append", "np.vstack.append", "total_loss.append", "sum", "src.hook.save_predictions", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.next", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.acc_hook", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.error", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.save_predictions"], ["", "def", "valid_eval", "(", "data_in", ",", "task", ",", "eval_type", "=", "None", ",", "final", "=", "False", ")", ":", "\n", "    ", "if", "task", "==", "'FNER'", ":", "\n", "        ", "collector", "=", "[", "]", "\n", "true", "=", "[", "]", "\n", "iters", "=", "0", "\n", "total_loss", "=", "[", "]", "\n", "c_", ",", "m_", ",", "lab", ",", "f", ",", "d", ",", "s_in", ",", "m_id", ",", "l_id", ",", "r_id", "=", "data_in", ".", "next", "(", ")", "\n", "lf_id", "=", "pad_single", "(", "l_id", ")", "\n", "rt_id", "=", "pad_single", "(", "r_id", ")", "\n", "rt_id", "=", "np", ".", "flip", "(", "rt_id", ",", "axis", "=", "-", "1", ")", "\n", "p1", "=", "100", "\n", "for", "k", "in", "range", "(", "0", ",", "len", "(", "c_", ")", ",", "p1", ")", ":", "\n", "            ", "s", "=", "Model", ".", "predict", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "f", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "doc_vector", "=", "None", ")", "\n", "loss_val", "=", "Model", ".", "error", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "lab", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "f", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "doc_vector", "=", "None", ")", "\n", "\n", "r", "=", "lab", "[", "k", ":", "k", "+", "p1", "]", "\n", "collector", ".", "append", "(", "s", ")", "\n", "true", ".", "append", "(", "r", ")", "\n", "total_loss", ".", "append", "(", "loss_val", ")", "\n", "iters", "+=", "1", "\n", "", "average_eval_loss", "=", "sum", "(", "total_loss", ")", "/", "iters", "\n", "print", "(", "task", "+", "\" Loss: \"", ",", "average_eval_loss", ")", "\n", "collector", "=", "np", ".", "array", "(", "collector", ")", "\n", "collector", "=", "np", ".", "vstack", "(", "collector", ")", "\n", "collector", "=", "np", ".", "squeeze", "(", "collector", ")", "\n", "true", "=", "np", ".", "array", "(", "true", ")", "\n", "true", "=", "np", ".", "vstack", "(", "true", ")", "\n", "print", "(", "collector", ".", "shape", ",", "true", ".", "shape", ")", "\n", "# print(collector)", "\n", "# print(true)", "\n", "strict_f1", "=", "acc_hook", "(", "collector", ",", "true", ")", "\n", "logging", ".", "info", "(", "str", "(", "eval_type", ")", "+", "\" FNER loss: {}\"", ".", "format", "(", "average_eval_loss", ")", ")", "\n", "if", "final", ":", "\n", "            ", "fname", "=", "args", ".", "dataset", "+", "\"_\"", "+", "args", ".", "encoder", "+", "\"_\"", "+", "str", "(", "args", ".", "feature", ")", "+", "\"_\"", "+", "str", "(", "args", ".", "hier", ")", "+", "\"_\"", "+", "str", "(", "args", ".", "dataset_kge", ")", "+", "\".txt\"", "\n", "save_predictions", "(", "collector", ",", "true", ",", "dicts", "[", "\"id2label\"", "]", ",", "fname", ")", "\n", "", "return", "strict_f1", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner.pad_sequence_": [[23, 28], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ",", "padding", "=", "'post'", ",", "truncating", "=", "'post'", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "padding", ",", "\n", "truncating", "=", "truncating", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner.get_aucpr": [[30, 34], ["sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc"], "function", ["None"], ["", "def", "get_aucpr", "(", "y_out", ",", "y_true", ")", ":", "\n", "    ", "precision", ",", "recall", ",", "threshold", "=", "precision_recall_curve", "(", "y_out", ",", "y_true", ")", "\n", "aucpr", "=", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "aucpr", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner.tuning": [[36, 44], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner.tuning_1": [[46, 54], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning_1", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "0", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner.evaluation": [[56, 83], ["range", "logging.info", "sklearn.metrics.roc_auc_score", "train_kge_fner.get_aucpr", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "train_kge_fner.tuning_1", "train_kge_fner.tuning", "len", "len", "len", "len", "sklearn.metrics.classification_report"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning"], ["", "def", "evaluation", "(", "y_out", ",", "pred_out", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "if", "data_type", ":", "\n", "        ", "pred_1", "=", "tuning_1", "(", "pred_out", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "pred_1", "=", "tuning", "(", "pred_out", ")", "\n", "# for val in pred_out[0]:", "\n", "#     logging.info(\"val => {}\".format(val))", "\n", "\n", "", "acc", "=", "0", "\n", "assert", "len", "(", "pred_out", ")", "==", "len", "(", "y_out", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_1", ")", ")", ":", "\n", "        ", "if", "pred_1", "[", "i", "]", "==", "y_out", "[", "i", "]", ":", "\n", "            ", "acc", "+=", "1", "\n", "", "", "b", "=", "(", "acc", "/", "len", "(", "pred_1", ")", ")", "*", "100", "\n", "logging", ".", "info", "(", "\"The test accuracy: {}\"", ".", "format", "(", "b", ")", ")", "\n", "# print(pred_out, y_out)", "\n", "roc_score_test", "=", "roc_auc_score", "(", "y_out", ",", "pred_out", ")", "\n", "aucpr_test", "=", "get_aucpr", "(", "y_out", ",", "pred_out", ")", "\n", "f1_test", "=", "f1_score", "(", "y_out", ",", "pred_1", ")", "\n", "precision_test", "=", "precision_score", "(", "y_out", ",", "pred_1", ")", "\n", "recall_test", "=", "recall_score", "(", "y_out", ",", "pred_1", ")", "\n", "logging", ".", "info", "(", "\"This is the AUCPR score: {}\"", ".", "format", "(", "aucpr_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the roc_score: {}\"", ".", "format", "(", "roc_score_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the F1 score: {}\"", ".", "format", "(", "f1_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is precision: {}\"", ".", "format", "(", "precision_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is recall: {}\"", ".", "format", "(", "recall_test", ")", ")", "\n", "logging", ".", "info", "(", "\"Classification report: {}\"", ".", "format", "(", "classification_report", "(", "y_out", ",", "pred_1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner.eval_data": [[85, 100], ["len", "range", "train_kge_fner.evaluation", "model.get_embed", "model.predict_kge", "output_[].tolist"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.predict_kge"], ["", "def", "eval_data", "(", "model", ",", "head_vec", ",", "tail_vec", ",", "rel_vec", ",", "label_ids", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "N", "=", "len", "(", "head_vec", ")", "\n", "g1", "=", "1024", "\n", "output_dev_collector", "=", "[", "]", "\n", "for", "k1", "in", "(", "range", "(", "0", ",", "N", ",", "g1", ")", ")", ":", "\n", "        ", "if", "k1", "+", "g1", ">", "N", ":", "\n", "            ", "d1", "=", "N", "\n", "", "else", ":", "\n", "            ", "d1", "=", "k1", "+", "g1", "\n", "", "h", ",", "r", ",", "t", ",", "embed", "=", "model", ".", "get_embed", "(", "head_vec", "[", "k1", ":", "d1", "]", ",", "tail_vec", "[", "k1", ":", "d1", "]", ",", "rel_vec", "[", "k1", ":", "d1", "]", ")", "\n", "# embed = np.squeeze(embed)", "\n", "output_", "=", "model", ".", "predict_kge", "(", "embed", ")", "\n", "# print(output_[0].shape)", "\n", "output_dev_collector", "+=", "output_", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "evaluation", "(", "label_ids", ",", "output_dev_collector", ",", "data_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner.pad_single": [[102, 106], ["max", "train_kge_fner.pad_sequence_", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_"], ["", "def", "pad_single", "(", "sent_in", ")", ":", "\n", "    ", "max_sent", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "sent_in", "]", ")", "\n", "sent_in_pad", "=", "pad_sequence_", "(", "sent_in", ",", "max_sent", ")", "\n", "return", "sent_in_pad", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.train_kge_fner.valid_eval": [[108, 152], ["data_in.next", "train_kge_fner.pad_single", "train_kge_fner.pad_single", "numpy.flip", "range", "print", "numpy.array", "numpy.vstack", "numpy.squeeze", "numpy.array", "numpy.vstack", "print", "src.hook.acc_hook", "logging.info", "len", "Model.predict", "Model.error", "np.squeeze.append", "np.vstack.append", "total_loss.append", "sum", "src.hook.save_predictions", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.next", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.acc_hook", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.error", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.save_predictions"], ["", "def", "valid_eval", "(", "data_in", ",", "task", ",", "eval_type", "=", "None", ",", "final", "=", "False", ")", ":", "\n", "    ", "if", "task", "==", "'FNER'", ":", "\n", "        ", "collector", "=", "[", "]", "\n", "true", "=", "[", "]", "\n", "iters", "=", "0", "\n", "total_loss", "=", "[", "]", "\n", "c_", ",", "m_", ",", "lab", ",", "f", ",", "d", ",", "s_in", ",", "m_id", ",", "l_id", ",", "r_id", "=", "data_in", ".", "next", "(", ")", "\n", "lf_id", "=", "pad_single", "(", "l_id", ")", "\n", "rt_id", "=", "pad_single", "(", "r_id", ")", "\n", "rt_id", "=", "np", ".", "flip", "(", "rt_id", ",", "axis", "=", "-", "1", ")", "\n", "p1", "=", "100", "\n", "for", "k", "in", "range", "(", "0", ",", "len", "(", "c_", ")", ",", "p1", ")", ":", "\n", "            ", "s", "=", "Model", ".", "predict", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "f", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "doc_vector", "=", "None", ")", "\n", "loss_val", "=", "Model", ".", "error", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "lab", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "f", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "doc_vector", "=", "None", ")", "\n", "\n", "r", "=", "lab", "[", "k", ":", "k", "+", "p1", "]", "\n", "collector", ".", "append", "(", "s", ")", "\n", "true", ".", "append", "(", "r", ")", "\n", "total_loss", ".", "append", "(", "loss_val", ")", "\n", "iters", "+=", "1", "\n", "", "average_eval_loss", "=", "sum", "(", "total_loss", ")", "/", "iters", "\n", "print", "(", "task", "+", "\" Loss: \"", ",", "average_eval_loss", ")", "\n", "collector", "=", "np", ".", "array", "(", "collector", ")", "\n", "collector", "=", "np", ".", "vstack", "(", "collector", ")", "\n", "collector", "=", "np", ".", "squeeze", "(", "collector", ")", "\n", "true", "=", "np", ".", "array", "(", "true", ")", "\n", "true", "=", "np", ".", "vstack", "(", "true", ")", "\n", "print", "(", "collector", ".", "shape", ",", "true", ".", "shape", ")", "\n", "# print(collector)", "\n", "# print(true)", "\n", "strict_f1", "=", "acc_hook", "(", "collector", ",", "true", ")", "\n", "logging", ".", "info", "(", "str", "(", "eval_type", ")", "+", "\" FNER loss: {}\"", ".", "format", "(", "average_eval_loss", ")", ")", "\n", "if", "final", ":", "\n", "            ", "fname", "=", "args", ".", "dataset", "+", "\"_\"", "+", "args", ".", "encoder", "+", "\"_\"", "+", "str", "(", "args", ".", "feature", ")", "+", "\"_\"", "+", "str", "(", "args", ".", "hier", ")", "+", "\"_\"", "+", "str", "(", "args", ".", "dataset_kge", ")", "+", "\".txt\"", "\n", "save_predictions", "(", "collector", ",", "true", ",", "dicts", "[", "\"id2label\"", "]", ",", "fname", ")", "\n", "", "return", "strict_f1", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_wiki_auto.pad_sequence_": [[23, 28], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ",", "padding", "=", "'post'", ",", "truncating", "=", "'post'", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "padding", ",", "\n", "truncating", "=", "truncating", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_wiki_auto.get_aucpr": [[30, 34], ["sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc"], "function", ["None"], ["", "def", "get_aucpr", "(", "y_out", ",", "y_true", ")", ":", "\n", "    ", "precision", ",", "recall", ",", "threshold", "=", "precision_recall_curve", "(", "y_out", ",", "y_true", ")", "\n", "aucpr", "=", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "aucpr", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_wiki_auto.tuning": [[36, 44], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_wiki_auto.tuning_1": [[46, 54], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning_1", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "0", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_wiki_auto.evaluation": [[56, 83], ["range", "logging.info", "sklearn.metrics.roc_auc_score", "test_kge_wiki_auto.get_aucpr", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "test_kge_wiki_auto.tuning_1", "test_kge_wiki_auto.tuning", "len", "len", "len", "len", "sklearn.metrics.classification_report"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning"], ["", "def", "evaluation", "(", "y_out", ",", "pred_out", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "if", "data_type", ":", "\n", "        ", "pred_1", "=", "tuning_1", "(", "pred_out", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "pred_1", "=", "tuning", "(", "pred_out", ")", "\n", "# for val in pred_out[0]:", "\n", "#     logging.info(\"val => {}\".format(val))", "\n", "\n", "", "acc", "=", "0", "\n", "assert", "len", "(", "pred_out", ")", "==", "len", "(", "y_out", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_1", ")", ")", ":", "\n", "        ", "if", "pred_1", "[", "i", "]", "==", "y_out", "[", "i", "]", ":", "\n", "            ", "acc", "+=", "1", "\n", "", "", "b", "=", "(", "acc", "/", "len", "(", "pred_1", ")", ")", "*", "100", "\n", "logging", ".", "info", "(", "\"The test accuracy: {}\"", ".", "format", "(", "b", ")", ")", "\n", "# print(pred_out, y_out)", "\n", "roc_score_test", "=", "roc_auc_score", "(", "y_out", ",", "pred_out", ")", "\n", "aucpr_test", "=", "get_aucpr", "(", "y_out", ",", "pred_out", ")", "\n", "f1_test", "=", "f1_score", "(", "y_out", ",", "pred_1", ")", "\n", "precision_test", "=", "precision_score", "(", "y_out", ",", "pred_1", ")", "\n", "recall_test", "=", "recall_score", "(", "y_out", ",", "pred_1", ")", "\n", "logging", ".", "info", "(", "\"This is the AUCPR score: {}\"", ".", "format", "(", "aucpr_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the roc_score: {}\"", ".", "format", "(", "roc_score_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the F1 score: {}\"", ".", "format", "(", "f1_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is precision: {}\"", ".", "format", "(", "precision_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is recall: {}\"", ".", "format", "(", "recall_test", ")", ")", "\n", "logging", ".", "info", "(", "\"Classification report: {}\"", ".", "format", "(", "classification_report", "(", "y_out", ",", "pred_1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_wiki_auto.eval_data": [[85, 100], ["len", "range", "test_kge_wiki_auto.evaluation", "model.get_embed", "model.predict_kge", "output_[].tolist"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.predict_kge"], ["", "def", "eval_data", "(", "model", ",", "head_vec", ",", "tail_vec", ",", "rel_vec", ",", "label_ids", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "N", "=", "len", "(", "head_vec", ")", "\n", "g1", "=", "1024", "\n", "output_dev_collector", "=", "[", "]", "\n", "for", "k1", "in", "(", "range", "(", "0", ",", "N", ",", "g1", ")", ")", ":", "\n", "        ", "if", "k1", "+", "g1", ">", "N", ":", "\n", "            ", "d1", "=", "N", "\n", "", "else", ":", "\n", "            ", "d1", "=", "k1", "+", "g1", "\n", "", "h", ",", "r", ",", "t", ",", "embed", "=", "model", ".", "get_embed", "(", "head_vec", "[", "k1", ":", "d1", "]", ",", "tail_vec", "[", "k1", ":", "d1", "]", ",", "rel_vec", "[", "k1", ":", "d1", "]", ")", "\n", "# embed = np.squeeze(embed)", "\n", "output_", "=", "model", ".", "predict_kge", "(", "embed", ")", "\n", "# print(output_[0].shape)", "\n", "output_dev_collector", "+=", "output_", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "evaluation", "(", "label_ids", ",", "output_dev_collector", ",", "data_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_wiki_auto.pad_single": [[102, 106], ["max", "test_kge_wiki_auto.pad_sequence_", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_"], ["", "def", "pad_single", "(", "sent_in", ")", ":", "\n", "    ", "max_sent", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "sent_in", "]", ")", "\n", "sent_in_pad", "=", "pad_sequence_", "(", "sent_in", ",", "max_sent", ")", "\n", "return", "sent_in_pad", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_FNER.test_kge_wiki_auto.valid_eval": [[108, 156], ["test_kge_wiki_auto.pad_single", "test_kge_wiki_auto.pad_single", "test_kge_wiki_auto.pad_single", "range", "print", "numpy.array", "numpy.vstack", "numpy.squeeze", "numpy.array", "numpy.vstack", "print", "src.hook.acc_hook", "logging.info", "len", "Model.predict", "Model.error", "np.squeeze.append", "np.vstack.append", "total_loss.append", "sum", "src.hook.save_predictions", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.acc_hook", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.error", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.save_predictions"], ["", "def", "valid_eval", "(", "data_in", ",", "task", "=", "'FNER'", ",", "eval_type", "=", "None", ",", "final", "=", "False", ")", ":", "\n", "    ", "m1", "=", "data_in", "[", "'mention'", "]", "\n", "l1", "=", "data_in", "[", "'left_context'", "]", "\n", "r1", "=", "data_in", "[", "'right_context'", "]", "\n", "lab", "=", "data_in", "[", "'label'", "]", "\n", "lf_id", "=", "pad_single", "(", "l1", ")", "\n", "rt_id", "=", "pad_single", "(", "r1", ")", "\n", "m_", "=", "pad_single", "(", "m1", ")", "\n", "# m_, lf_id, rt_id = pad_method(m1, l1, r1)", "\n", "collector", "=", "[", "]", "\n", "true", "=", "[", "]", "\n", "eval_loss", "=", "[", "]", "\n", "iters", "=", "0", "\n", "p1", "=", "100", "\n", "total_loss", "=", "[", "]", "\n", "iters", "=", "0", "\n", "for", "k", "in", "range", "(", "0", ",", "len", "(", "m_", ")", ",", "p1", ")", ":", "\n", "        ", "s", "=", "Model", ".", "predict", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", "\n", "loss_val", "=", "Model", ".", "error", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "lab", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", "\n", "\n", "r", "=", "lab", "[", "k", ":", "k", "+", "p1", "]", "\n", "collector", ".", "append", "(", "s", ")", "\n", "true", ".", "append", "(", "r", ")", "\n", "total_loss", ".", "append", "(", "loss_val", ")", "\n", "iters", "+=", "1", "\n", "", "average_eval_loss", "=", "sum", "(", "total_loss", ")", "/", "iters", "\n", "print", "(", "task", "+", "\" Loss: \"", ",", "average_eval_loss", ")", "\n", "collector", "=", "np", ".", "array", "(", "collector", ")", "\n", "collector", "=", "np", ".", "vstack", "(", "collector", ")", "\n", "collector", "=", "np", ".", "squeeze", "(", "collector", ")", "\n", "true", "=", "np", ".", "array", "(", "true", ")", "\n", "true", "=", "np", ".", "vstack", "(", "true", ")", "\n", "print", "(", "collector", ".", "shape", ",", "true", ".", "shape", ")", "\n", "strict_f1", "=", "acc_hook", "(", "collector", ",", "true", ")", "\n", "logging", ".", "info", "(", "str", "(", "eval_type", ")", "+", "\" FNER loss: {}\"", ".", "format", "(", "average_eval_loss", ")", ")", "\n", "if", "final", ":", "\n", "        ", "fname", "=", "args", ".", "dataset", "+", "\"_\"", "+", "args", ".", "encoder", "+", "\"_\"", "+", "str", "(", "args", ".", "feature", ")", "+", "\"_\"", "+", "str", "(", "args", ".", "hier", ")", "+", "\"_\"", "+", "str", "(", "\n", "args", ".", "dataset_kge", ")", "+", "\".txt\"", "\n", "save_predictions", "(", "collector", ",", "true", ",", "dicts", "[", "\"id2label\"", "]", ",", "fname", ")", "\n", "", "return", "strict_f1", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.__init__": [[7, 21], ["int", "int", "numpy.zeros"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "storage", ",", "data", ",", "batch_size", ",", "context_length", ",", "id2vec", ",", "doc2vec", ",", "sentence", ")", ":", "\n", "        ", "self", ".", "context_length", "=", "context_length", "\n", "self", ".", "storage", "=", "storage", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "num_of_samples", "=", "int", "(", "data", ".", "shape", "[", "0", "]", ")", "\n", "self", ".", "dim", "=", "300", "# len(id2vec[0])", "\n", "self", ".", "num_of_labels", "=", "data", ".", "shape", "[", "1", "]", "-", "4", "-", "70", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "batch_num", "=", "0", "\n", "self", ".", "max_batch_num", "=", "int", "(", "self", ".", "num_of_samples", "/", "self", ".", "batch_size", ")", "\n", "self", ".", "id2vec", "=", "id2vec", "\n", "self", ".", "pad", "=", "np", ".", "zeros", "(", "self", ".", "dim", ")", "\n", "self", ".", "pad", "[", "0", "]", "=", "1.0", "\n", "self", ".", "doc_2_vec", "=", "doc2vec", "\n", "# self.sentence_in =np.asanyarray(sentence)", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.create_input_output": [[23, 65], ["numpy.zeros", "mention.tolist.tolist.tolist", "numpy.mean", "max", "range", "numpy.ones_like", "range", "max", "temp_1.append", "min", "temp_2.append", "range", "range"], "methods", ["None"], ["", "def", "create_input_output", "(", "self", ",", "row", ",", "doc_2_vec", ")", ":", "\n", "        ", "s_start", "=", "row", "[", "0", "]", "\n", "s_end", "=", "row", "[", "1", "]", "\n", "e_start", "=", "row", "[", "2", "]", "\n", "e_end", "=", "row", "[", "3", "]", "\n", "# print(e_end)", "\n", "labels", "=", "row", "[", "74", ":", "]", "\n", "# print(labels)", "\n", "features", "=", "row", "[", "4", ":", "74", "]", "\n", "# print(features)", "\n", "seq_context", "=", "np", ".", "zeros", "(", "(", "self", ".", "context_length", "*", "2", "+", "1", ",", "self", ".", "dim", ")", ")", "\n", "context_", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", "]", "\n", "mention", "=", "self", ".", "storage", "[", "e_start", ":", "e_end", "]", "\n", "mention", "=", "mention", ".", "tolist", "(", ")", "\n", "# print(\"mention: \", self.storage[e_start:e_end])", "\n", "temp", "=", "[", "self", ".", "id2vec", "[", "self", ".", "storage", "[", "i", "]", "]", "[", ":", "self", ".", "dim", "]", "for", "i", "in", "range", "(", "e_start", ",", "e_end", ")", "]", "\n", "mean_target", "=", "np", ".", "mean", "(", "temp", ",", "axis", "=", "0", ")", "\n", "temp_1", "=", "[", "]", "\n", "j", "=", "max", "(", "0", ",", "self", ".", "context_length", "-", "(", "e_start", "-", "s_start", ")", ")", "\n", "for", "i", "in", "range", "(", "max", "(", "s_start", ",", "e_start", "-", "self", ".", "context_length", ")", ",", "e_start", ")", ":", "\n", "            ", "temp_1", ".", "append", "(", "self", ".", "storage", "[", "i", "]", ")", "\n", "context_", "[", "j", "]", "=", "self", ".", "storage", "[", "i", "]", "\n", "# print(self.storage[i])", "\n", "seq_context", "[", "j", ",", ":", "]", "=", "self", ".", "id2vec", "[", "self", ".", "storage", "[", "i", "]", "]", "[", ":", "self", ".", "dim", "]", "\n", "j", "+=", "1", "\n", "", "seq_context", "[", "j", ",", ":", "]", "=", "np", ".", "ones_like", "(", "self", ".", "pad", ")", "\n", "context_", "[", "j", "]", "=", "0", "\n", "j", "+=", "1", "\n", "temp_2", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "e_end", ",", "min", "(", "e_end", "+", "self", ".", "context_length", ",", "s_end", ")", ")", ":", "\n", "            ", "temp_2", ".", "append", "(", "self", ".", "storage", "[", "i", "]", ")", "\n", "context_", "[", "j", "]", "=", "self", ".", "storage", "[", "i", "]", "\n", "seq_context", "[", "j", ",", ":", "]", "=", "self", ".", "id2vec", "[", "self", ".", "storage", "[", "i", "]", "]", "[", ":", "self", ".", "dim", "]", "\n", "j", "+=", "1", "\n", "# print(\"this is left context\", temp_1, \"this is right context\", temp_2)", "\n", "# print(temp_1, type(temp_1))", "\n", "# print(temp_2, type(temp_2))", "\n", "", "sentence", "=", "temp_1", "+", "mention", "+", "temp_2", "\n", "left_", "=", "context_", "[", ":", "self", ".", "context_length", "]", "\n", "right_", "=", "context_", "[", "self", ".", "context_length", "+", "1", ":", "]", "\n", "# print(sentence)", "\n", "return", "seq_context", ",", "mean_target", ",", "labels", ",", "features", ",", "doc_2_vec", ",", "sentence", ",", "mention", ",", "left_", ",", "right_", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.next": [[66, 82], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "batcher.Batcher.create_input_output", "range", "range", "range", "range"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.create_input_output"], ["", "def", "next", "(", "self", ")", ":", "\n", "        ", "X_context", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size", ",", "self", ".", "context_length", "*", "2", "+", "1", ",", "self", ".", "dim", ")", ")", "\n", "X_target_mean", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size", ",", "self", ".", "dim", ")", ")", "\n", "Y", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size", ",", "self", ".", "num_of_labels", ")", ")", "\n", "F", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size", ",", "70", ")", ",", "np", ".", "int32", ")", "\n", "doc_vec", "=", "np", ".", "zeros", "(", "(", "self", ".", "batch_size", ",", "50", ")", ",", "np", ".", "float64", ")", "\n", "sent_in", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "batch_size", ")", "]", "\n", "mention_id", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "batch_size", ")", "]", "\n", "left_id", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "batch_size", ")", "]", "\n", "right_id", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "batch_size", ")", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "batch_size", ")", ":", "\n", "            ", "X_context", "[", "i", ",", ":", ",", ":", "]", ",", "X_target_mean", "[", "i", ",", ":", "]", ",", "Y", "[", "i", ",", ":", "]", ",", "F", "[", "i", ",", ":", "]", ",", "doc_vec", "[", "i", ":", "]", ",", "sent_in", "[", "i", "]", ",", "mention_id", "[", "i", "]", ",", "left_id", "[", "i", "]", ",", "right_id", "[", "i", "]", "=", "self", ".", "create_input_output", "(", "\n", "self", ".", "data", "[", "self", ".", "batch_num", "*", "self", ".", "batch_size", "+", "i", ",", ":", "]", ",", "\n", "self", ".", "doc_2_vec", "[", "self", ".", "batch_num", "*", "self", ".", "batch_size", "+", "i", ",", ":", "]", ")", "\n", "", "self", ".", "batch_num", "=", "(", "self", ".", "batch_num", "+", "1", ")", "%", "self", ".", "max_batch_num", "\n", "return", "[", "X_context", ",", "X_target_mean", ",", "Y", ",", "F", ",", "doc_vec", ",", "sent_in", ",", "mention_id", ",", "left_id", ",", "right_id", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.shuffle": [[84, 89], ["numpy.random.permutation", "len", "len", "len"], "methods", ["None"], ["", "def", "shuffle", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "data", ")", "==", "len", "(", "self", ".", "doc_2_vec", ")", "\n", "p", "=", "np", ".", "random", ".", "permutation", "(", "len", "(", "self", ".", "data", ")", ")", "\n", "self", ".", "data", "=", "self", ".", "data", "[", "p", "]", "\n", "self", ".", "doc_2_vec", "=", "self", ".", "doc_2_vec", "[", "p", "]", "\n", "# self.sentence_in = self.sentence_in[p]", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model.NAM_Modified.__init__": [[10, 143], ["object.__init__", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.nn.dynamic_rnn", "print", "tensorflow.matmul", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.squeeze", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.trainable_variables", "tensorflow.reduce_sum", "model.NAM_Modified.session.run", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.stack", "tensorflow.concat", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.split", "print", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.concat", "print", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "model.NAM_Modified.optimizer.minimize", "tensorflow.train.AdamOptimizer", "model.NAM_Modified.optimizer.minimize", "tensorflow.split", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.weighted_cross_entropy_with_logits", "tensorflow.reduce_prod", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.split", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.trainable_variables", "tensorflow.split", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.split"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "NAM_Modified", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lstm_layer", "=", "kwargs", "[", "'lstm_layer'", "]", "\n", "self", ".", "balance", "=", "kwargs", "[", "'balance'", "]", "\n", "self", ".", "decay", "=", "kwargs", "[", "'decay'", "]", "\n", "self", ".", "starter_learning_rate", "=", "kwargs", "[", "'learning_rate'", "]", "or", "1e-4", "\n", "self", ".", "hidden_units_1", "=", "kwargs", "[", "'hidden_units_1'", "]", "\n", "self", ".", "hidden_units_2", "=", "kwargs", "[", "'hidden_units_2'", "]", "\n", "self", ".", "hidden_units_3", "=", "kwargs", "[", "'hidden_units_3'", "]", "\n", "self", ".", "hidden_units_4", "=", "kwargs", "[", "'hidden_units_4'", "]", "\n", "self", ".", "drop_out", "=", "kwargs", "[", "'dropout'", "]", "\n", "self", ".", "split", "=", "kwargs", "[", "'splits'", "]", "\n", "self", ".", "final", "=", "kwargs", "[", "'final'", "]", "or", "False", "\n", "self", ".", "averaging", "=", "kwargs", "[", "'averaging'", "]", "or", "False", "\n", "if", "self", ".", "final", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "2", "\n", "", "self", ".", "tail", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'y_true'", ")", "\n", "self", ".", "head", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'data_in'", ")", "\n", "self", ".", "rel", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'tail_in'", ")", "\n", "self", ".", "y_true_1", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float64", ",", "name", "=", "'y_true_values'", ")", "\n", "self", ".", "sequence_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float64", ",", "shape", "=", "(", "None", ",", "None", ",", "300", ")", ",", "name", "=", "\"sequence_in\"", ")", "\n", "self", ".", "embedding_mat", "=", "tf", ".", "get_variable", "(", "initializer", "=", "args", "[", "0", "]", ",", "name", "=", "\"embedding_matrix\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "embed_head", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "head", ")", "\n", "self", ".", "embed_tail", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "tail", ")", "\n", "self", ".", "embed_relation", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "rel", ")", "\n", "if", "self", ".", "averaging", ":", "\n", "            ", "self", ".", "embed_head", "=", "tf", ".", "reduce_mean", "(", "self", ".", "embed_head", ",", "axis", "=", "1", ")", "\n", "self", ".", "embed_tail", "=", "tf", ".", "reduce_mean", "(", "self", ".", "embed_tail", ",", "axis", "=", "1", ")", "\n", "self", ".", "embed_relation", "=", "tf", ".", "reduce_mean", "(", "self", ".", "embed_relation", ",", "axis", "=", "1", ")", "\n", "self", ".", "embed_total", "=", "tf", ".", "stack", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "embed_total", "=", "tf", ".", "concat", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", "]", ",", "axis", "=", "1", ")", "\n", "", "self", ".", "session_type", "=", "\"Initialize\"", "\n", "self", ".", "current_view", "=", "1", "\n", "\n", "self", ".", "lstms", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "drops", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "self", ".", "lstms", "]", "\n", "self", ".", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops", ")", "\n", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "self", ".", "cell", ",", "self", ".", "sequence_in", ",", "dtype", "=", "tf", ".", "float64", ")", "\n", "self", ".", "final_state_c", ",", "self", ".", "final_state_h", "=", "self", ".", "final_state_1", "[", "-", "1", "]", ".", "c", ",", "self", ".", "final_state_1", "[", "-", "1", "]", ".", "h", "\n", "print", "(", "self", ".", "final_state_c", ")", "\n", "self", ".", "weights", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"Wl1\"", ",", "shape", "=", "[", "self", ".", "Input_dimension", ",", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"Wl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", ",", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"Wl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", ",", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"Wl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", ",", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", "}", "\n", "self", ".", "biases", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"bl1\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"bl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"bl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"bl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", "}", "\n", "if", "self", ".", "averaging", ":", "\n", "            ", "self", ".", "head_", ",", "self", ".", "rel_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "num_or_size_splits", "=", "3", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "6", ":", "\n", "            ", "_", ",", "self", ".", "head_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "num_or_size_splits", "=", "6", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "9", ":", "\n", "            ", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "num_or_size_splits", "=", "9", ",", "\n", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "12", ":", "\n", "            ", "_", ",", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "12", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "11", ":", "\n", "            ", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "11", ",", "axis", "=", "1", ")", "\n", "", "if", "self", ".", "final", ":", "\n", "            ", "print", "(", "self", ".", "final", ")", "\n", "self", ".", "z0", "=", "self", ".", "final_state_c", "\n", "self", ".", "tail_", "=", "tf", ".", "squeeze", "(", "self", ".", "tail_", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "tail_", "=", "tf", ".", "squeeze", "(", "self", ".", "tail_", ")", "\n", "self", ".", "head_", "=", "tf", ".", "squeeze", "(", "self", ".", "head_", ")", "\n", "self", ".", "rel_", "=", "tf", ".", "squeeze", "(", "self", ".", "rel_", ")", "\n", "self", ".", "z0", "=", "tf", ".", "concat", "(", "[", "self", ".", "head_", ",", "self", ".", "rel_", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "self", ".", "z0", ".", "shape", ")", "\n", "", "self", ".", "l1", "=", "tf", ".", "matmul", "(", "self", ".", "z0", ",", "self", ".", "weights", "[", "'l1'", "]", "+", "self", ".", "biases", "[", "'l1'", "]", ")", "\n", "self", ".", "z1", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l1", ")", "\n", "self", ".", "z1", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "z1", ",", "0.1", ")", "\n", "self", ".", "l2", "=", "tf", ".", "matmul", "(", "self", ".", "z1", ",", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "self", ".", "biases", "[", "'l2'", "]", "\n", "self", ".", "z2", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l2", ")", "\n", "self", ".", "l3", "=", "tf", ".", "matmul", "(", "self", ".", "z2", ",", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "self", ".", "biases", "[", "'l3'", "]", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l3", ")", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "z3", ",", "0.2", ")", "\n", "if", "self", ".", "final", ":", "\n", "            ", "self", ".", "l4", "=", "tf", ".", "matmul", "(", "self", ".", "z3", ",", "self", ".", "weights", "[", "'l4'", "]", ")", "+", "self", ".", "biases", "[", "'l4'", "]", "\n", "self", ".", "output", "=", "self", ".", "l4", "\n", "", "else", ":", "\n", "            ", "self", ".", "m", "=", "tf", ".", "multiply", "(", "self", ".", "z3", ",", "self", ".", "tail_", ")", "\n", "self", ".", "dot", "=", "tf", ".", "reduce_sum", "(", "self", ".", "m", ",", "axis", "=", "1", ")", "\n", "self", ".", "output", "=", "self", ".", "dot", "\n", "", "self", ".", "output", "=", "tf", ".", "squeeze", "(", "self", ".", "output", ")", "\n", "self", ".", "output_2", "=", "tf", ".", "nn", ".", "sigmoid", "(", "self", ".", "output", ")", "\n", "self", ".", "beta", "=", "0.01", "\n", "if", "self", ".", "final", ":", "\n", "            ", "self", ".", "regularizer", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l1'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l4'", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "regularizer", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l1'", "]", ")", "\n", "", "self", ".", "regularizer", "=", "self", ".", "beta", "*", "self", ".", "regularizer", "\n", "self", ".", "cost", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "weighted_cross_entropy_with_logits", "(", "self", ".", "y_true_1", ",", "self", ".", "output", ",", "pos_weight", "=", "self", ".", "balance", ")", "+", "\n", "self", ".", "regularizer", ")", "\n", "if", "self", ".", "decay", ":", "\n", "            ", "self", ".", "global_step", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "learning_rate", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "starter_learning_rate", ",", "self", ".", "global_step", ",", "\n", "decay_steps", "=", "100000", ",", "\n", "decay_rate", "=", "0.5", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "train_op", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "cost", ",", "global_step", "=", "self", ".", "global_step", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "starter_learning_rate", ")", "\n", "self", ".", "train_op", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "cost", ",", "global_step", "=", "None", ")", "\n", "", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", "device_count", "=", "{", "'GPU'", ":", "1", "}", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "trainable_var", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "total_var_num", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_prod", "(", "v", ".", "shape", ")", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model.NAM_Modified.get_embed": [[144, 150], ["model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_embed", "(", "self", ",", "head_i", ",", "tail_i", ",", "rel_i", ")", ":", "\n", "        ", "feed", "=", "{", "\n", "self", ".", "head", ":", "head_i", ",", "self", ".", "tail", ":", "tail_i", ",", "self", ".", "rel", ":", "rel_i", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_tail", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_total", "]", ",", "\n", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model.NAM_Modified.debug": [[151, 156], ["model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "debug", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "head_", ",", "self", ".", "rel_", ",", "self", ".", "tail_", ",", "self", ".", "z0", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model.NAM_Modified.fit": [[157, 163], ["model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "sequence", ",", "y_out", ")", ":", "\n", "        ", "self", ".", "session_type", "=", "\"train\"", "\n", "feed", "=", "{", "self", ".", "y_true_1", ":", "y_out", ",", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "cost", ",", "self", ".", "train_op", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model.NAM_Modified.predict": [[164, 170], ["model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "self", ".", "session_type", "=", "\"test\"", "\n", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "output_2", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model.NAM_Modified.save": [[171, 175], ["model.NAM_Modified.saver.save", "model.NAM_Modified.session.close", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "save", "(", "self", ",", "location", ",", "model_name", ",", "experiment_number", ")", ":", "\n", "        ", "save_path", "=", "self", ".", "saver", ".", "save", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "\"_\"", "+", "experiment_number", "+", "\".ckpt\"", ")", "\n", "self", ".", "session", ".", "close", "(", ")", "\n", "logging", ".", "info", "(", "\"Model saved in path: %s\"", "%", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model.NAM_Modified.load": [[176, 179], ["model.NAM_Modified.saver.restore", "logging.info"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "location", ",", "model_name", ",", "exp_num", ")", ":", "\n", "        ", "self", ".", "saver", ".", "restore", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "'_'", "+", "exp_num", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model loaded from path: %s\"", "%", "location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model.NAM_Modified.get_train_var": [[180, 182], ["model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_train_var", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "trainable_var", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model.NAM_Modified.get_total_var_num": [[183, 185], ["model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_total_var_num", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "total_var_num", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model_bilstm.NAM_Modified.__init__": [[10, 153], ["object.__init__", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.nn.bidirectional_dynamic_rnn", "tensorflow.concat", "tensorflow.concat", "logging.info", "tensorflow.matmul", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.dropout", "print", "tensorflow.squeeze", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.trainable_variables", "tensorflow.reduce_sum", "model_bilstm.NAM_Modified.session.run", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.stack", "tensorflow.concat", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.split", "print", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.squeeze", "tensorflow.concat", "print", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "model_bilstm.NAM_Modified.optimizer.minimize", "tensorflow.train.AdamOptimizer", "model_bilstm.NAM_Modified.optimizer.minimize", "tensorflow.split", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.weighted_cross_entropy_with_logits", "tensorflow.reduce_prod", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.split", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.trainable_variables", "tensorflow.split", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.split"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "NAM_Modified", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lstm_layer", "=", "kwargs", "[", "'lstm_layer'", "]", "\n", "self", ".", "balance", "=", "kwargs", "[", "'balance'", "]", "\n", "self", ".", "decay", "=", "kwargs", "[", "'decay'", "]", "\n", "self", ".", "starter_learning_rate", "=", "kwargs", "[", "'learning_rate'", "]", "or", "1e-4", "\n", "self", ".", "hidden_units_1", "=", "kwargs", "[", "'hidden_units_1'", "]", "\n", "self", ".", "hidden_units_2", "=", "kwargs", "[", "'hidden_units_2'", "]", "\n", "self", ".", "hidden_units_3", "=", "kwargs", "[", "'hidden_units_3'", "]", "\n", "self", ".", "hidden_units_4", "=", "kwargs", "[", "'hidden_units_4'", "]", "\n", "self", ".", "drop_out", "=", "kwargs", "[", "'dropout'", "]", "\n", "self", ".", "split", "=", "kwargs", "[", "'splits'", "]", "\n", "self", ".", "final", "=", "kwargs", "[", "'final'", "]", "or", "False", "\n", "self", ".", "averaging", "=", "kwargs", "[", "'averaging'", "]", "or", "False", "\n", "if", "self", ".", "final", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "2", "\n", "", "else", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "4", "\n", "", "self", ".", "tail", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'y_true'", ")", "\n", "self", ".", "head", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'data_in'", ")", "\n", "self", ".", "rel", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'relation'", ")", "\n", "self", ".", "y_true_1", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float64", ",", "name", "=", "\"y_true_values\"", ")", "\n", "self", ".", "sequence_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float64", ",", "shape", "=", "(", "None", ",", "None", ",", "300", ")", ",", "name", "=", "\"sequence_in\"", ")", "\n", "self", ".", "embedding_mat", "=", "tf", ".", "get_variable", "(", "initializer", "=", "args", "[", "0", "]", ",", "name", "=", "\"embedding_matrix\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "embed_head", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "head", ")", "\n", "self", ".", "embed_tail", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "tail", ")", "\n", "self", ".", "embed_relation", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "rel", ")", "\n", "if", "self", ".", "averaging", ":", "\n", "            ", "self", ".", "embed_head", "=", "tf", ".", "reduce_mean", "(", "self", ".", "embed_head", ",", "axis", "=", "1", ")", "\n", "self", ".", "embed_tail", "=", "tf", ".", "reduce_mean", "(", "self", ".", "embed_tail", ",", "axis", "=", "1", ")", "\n", "self", ".", "embed_relation", "=", "tf", ".", "reduce_mean", "(", "self", ".", "embed_relation", ",", "axis", "=", "1", ")", "\n", "self", ".", "embed_total", "=", "tf", ".", "stack", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "embed_total", "=", "tf", ".", "concat", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", "]", ",", "axis", "=", "1", ")", "\n", "", "self", ".", "session_type", "=", "\"Initialize\"", "\n", "self", ".", "current_view", "=", "1", "\n", "self", ".", "lstm_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "lstm_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "drops_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "self", ".", "lstm_fw", "]", "\n", "self", ".", "drops_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "self", ".", "lstm_bw", "]", "\n", "self", ".", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_fw", ")", "\n", "self", ".", "cell_bw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_bw", ")", "\n", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "self", ".", "cell_fw", ",", "self", ".", "cell_bw", ",", "\n", "self", ".", "sequence_in", ",", "dtype", "=", "tf", ".", "float64", ")", "\n", "self", ".", "lstm_output_1", "=", "tf", ".", "concat", "(", "self", ".", "lstm_output_1", ",", "-", "1", ")", "\n", "self", ".", "final_state_fw", ",", "self", ".", "final_state_bw", "=", "self", ".", "final_state_1", "\n", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "=", "self", ".", "final_state_fw", "[", "-", "1", "]", ".", "c", ",", "self", ".", "final_state_bw", "[", "-", "1", "]", ".", "c", "\n", "self", ".", "final_state_c", "=", "tf", ".", "concat", "(", "[", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "]", ",", "axis", "=", "1", ")", "\n", "logging", ".", "info", "(", "\"state 1 & 2 : {}{}\"", ".", "format", "(", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", ")", ")", "\n", "self", ".", "weights", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"Wl1\"", ",", "shape", "=", "[", "self", ".", "Input_dimension", ",", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"Wl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", ",", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"Wl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", ",", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"Wl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", ",", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", "\n", "}", "\n", "self", ".", "biases", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"bl1\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"bl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"bl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"bl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", "\n", "}", "\n", "\n", "if", "self", ".", "averaging", ":", "\n", "            ", "self", ".", "head_", ",", "self", ".", "rel_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "num_or_size_splits", "=", "3", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "6", ":", "\n", "            ", "_", ",", "self", ".", "head_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "num_or_size_splits", "=", "6", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "9", ":", "\n", "            ", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "num_or_size_splits", "=", "9", ",", "\n", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "12", ":", "\n", "            ", "_", ",", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "12", ",", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "11", ":", "\n", "            ", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "11", ",", "axis", "=", "1", ")", "\n", "", "if", "self", ".", "final", ":", "\n", "            ", "print", "(", "self", ".", "final", ")", "\n", "self", ".", "z0", "=", "self", ".", "final_state_c", "\n", "self", ".", "tail_", "=", "tf", ".", "squeeze", "(", "self", ".", "tail_", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "tail_", "=", "tf", ".", "squeeze", "(", "self", ".", "tail_", ")", "\n", "self", ".", "head_", "=", "tf", ".", "squeeze", "(", "self", ".", "head_", ")", "\n", "self", ".", "rel_", "=", "tf", ".", "squeeze", "(", "self", ".", "rel_", ")", "\n", "self", ".", "z0", "=", "tf", ".", "concat", "(", "[", "self", ".", "head_", ",", "self", ".", "rel_", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "self", ".", "z0", ".", "shape", ")", "\n", "", "self", ".", "l1", "=", "tf", ".", "matmul", "(", "self", ".", "z0", ",", "self", ".", "weights", "[", "'l1'", "]", "+", "self", ".", "biases", "[", "'l1'", "]", ")", "\n", "self", ".", "z1", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l1", ")", "\n", "self", ".", "z1", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "z1", ",", "0.1", ")", "\n", "self", ".", "l2", "=", "tf", ".", "matmul", "(", "self", ".", "z1", ",", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "self", ".", "biases", "[", "'l2'", "]", "\n", "self", ".", "z2", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l2", ")", "\n", "self", ".", "l3", "=", "tf", ".", "matmul", "(", "self", ".", "z2", ",", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "self", ".", "biases", "[", "'l3'", "]", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l3", ")", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "z3", ",", "0.2", ")", "\n", "print", "(", "\"This is z3: \"", ",", "self", ".", "z3", ".", "shape", ")", "\n", "if", "self", ".", "final", ":", "\n", "            ", "self", ".", "l4", "=", "tf", ".", "matmul", "(", "self", ".", "z3", ",", "self", ".", "weights", "[", "'l4'", "]", ")", "+", "self", ".", "biases", "[", "'l4'", "]", "\n", "self", ".", "output", "=", "self", ".", "l4", "\n", "", "else", ":", "\n", "            ", "self", ".", "m", "=", "tf", ".", "multiply", "(", "self", ".", "z3", ",", "self", ".", "tail_", ")", "\n", "self", ".", "dot", "=", "tf", ".", "reduce_sum", "(", "self", ".", "m", ",", "axis", "=", "1", ")", "\n", "self", ".", "output", "=", "self", ".", "dot", "\n", "", "self", ".", "output", "=", "tf", ".", "squeeze", "(", "self", ".", "output", ")", "\n", "self", ".", "output_2", "=", "tf", ".", "nn", ".", "sigmoid", "(", "self", ".", "output", ")", "\n", "self", ".", "beta", "=", "0.01", "\n", "if", "self", ".", "final", ":", "\n", "            ", "self", ".", "regularizer", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l1'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l4'", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "regularizer", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l1'", "]", ")", "\n", "", "self", ".", "regularizer", "=", "self", ".", "beta", "*", "self", ".", "regularizer", "\n", "self", ".", "cost", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "weighted_cross_entropy_with_logits", "(", "self", ".", "y_true_1", ",", "self", ".", "output", ",", "pos_weight", "=", "self", ".", "balance", ")", "+", "\n", "self", ".", "regularizer", ")", "\n", "if", "self", ".", "decay", ":", "\n", "            ", "self", ".", "global_step", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "learning_rate", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "starter_learning_rate", ",", "self", ".", "global_step", ",", "\n", "decay_steps", "=", "100000", ",", "\n", "decay_rate", "=", "0.5", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "train_op", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "cost", ",", "global_step", "=", "self", ".", "global_step", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "starter_learning_rate", ")", "\n", "self", ".", "train_op", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "cost", ",", "global_step", "=", "None", ")", "\n", "", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", "device_count", "=", "{", "'GPU'", ":", "1", "}", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "trainable_var", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "total_var_num", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_prod", "(", "v", ".", "shape", ")", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model_bilstm.NAM_Modified.get_embed": [[154, 160], ["model_bilstm.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_embed", "(", "self", ",", "head_i", ",", "tail_i", ",", "rel_i", ")", ":", "\n", "        ", "feed", "=", "{", "\n", "self", ".", "head", ":", "head_i", ",", "self", ".", "tail", ":", "tail_i", ",", "self", ".", "rel", ":", "rel_i", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_tail", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_total", "]", ",", "\n", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model_bilstm.NAM_Modified.debug": [[161, 166], ["model_bilstm.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "debug", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "head_", ",", "self", ".", "rel_", ",", "self", ".", "tail_", ",", "self", ".", "z0", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model_bilstm.NAM_Modified.fit": [[167, 173], ["model_bilstm.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "sequence", ",", "y_out", ")", ":", "\n", "        ", "self", ".", "session_type", "=", "\"train\"", "\n", "feed", "=", "{", "self", ".", "y_true_1", ":", "y_out", ",", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "cost", ",", "self", ".", "train_op", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model_bilstm.NAM_Modified.predict": [[174, 180], ["model_bilstm.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "self", ".", "session_type", "=", "\"test\"", "\n", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "output_2", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model_bilstm.NAM_Modified.save": [[181, 185], ["model_bilstm.NAM_Modified.saver.save", "model_bilstm.NAM_Modified.session.close", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "save", "(", "self", ",", "location", ",", "model_name", ",", "experiment_number", ")", ":", "\n", "        ", "save_path", "=", "self", ".", "saver", ".", "save", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "\"_\"", "+", "experiment_number", "+", "\".ckpt\"", ")", "\n", "self", ".", "session", ".", "close", "(", ")", "\n", "logging", ".", "info", "(", "\"Model saved in path: %s\"", "%", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model_bilstm.NAM_Modified.load": [[186, 189], ["model_bilstm.NAM_Modified.saver.restore", "logging.info"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "location", ",", "model_name", ",", "exp_num", ")", ":", "\n", "        ", "self", ".", "saver", ".", "restore", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "'_'", "+", "exp_num", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model loaded from path: %s\"", "%", "location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model_bilstm.NAM_Modified.get_train_var": [[190, 192], ["model_bilstm.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_train_var", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "trainable_var", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.model_bilstm.NAM_Modified.get_total_var_num": [[193, 195], ["model_bilstm.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_total_var_num", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "total_var_num", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.utils.get_aucpr": [[6, 15], ["sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc"], "function", ["None"], ["def", "get_aucpr", "(", "y_out", ",", "y_true", ")", ":", "\n", "    ", "'''\n    :param y_out: predicted value\n    :param y_true: True values\n    :return: aucpr score\n    '''", "\n", "precision", ",", "recall", ",", "threshold", "=", "precision_recall_curve", "(", "y_out", ",", "y_true", ")", "\n", "aucpr", "=", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "aucpr", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.utils.tuning": [[17, 30], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning", "(", "prediction", ")", ":", "\n", "    ", "'''\n    The function thresholds the prediction made by the classifier\n    :param prediction: list with prediction values between 0 and 1\n    :return: list of prediction of score 0 or 1\n    '''", "\n", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.utils.tuning_1": [[32, 45], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning_1", "(", "prediction", ")", ":", "\n", "    ", "'''\n    The function thresholds the prediction made by the classifier\n    :param prediction: list with prediction values between 0 and 1\n    :return: list of prediction of score 0 or 1\n    '''", "\n", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "0", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.utils.evaluation": [[47, 80], ["range", "logging.info", "sklearn.metrics.roc_auc_score", "utils.get_aucpr", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "utils.tuning_1", "utils.tuning", "len", "len", "sklearn.metrics.classification_report"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning"], ["", "def", "evaluation", "(", "y_out", ",", "pred_out", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "'''\n    evaluation function calculate the performance of the classifier\n    :param y_out: predicted values\n    :param pred_out: true values\n    :param data_type: DataSet {\"fb13\", \"WN11\", \"WN18\", \"FB15k\", FB15\"}\n    :return: None - print  evaluation results\n    '''", "\n", "if", "data_type", ":", "\n", "        ", "pred_1", "=", "tuning_1", "(", "pred_out", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "pred_1", "=", "tuning", "(", "pred_out", ")", "\n", "# for val in pred_out[0]:", "\n", "#     logging.info(\"val => {}\".format(val))", "\n", "\n", "", "acc", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_1", ")", ")", ":", "\n", "        ", "if", "pred_1", "[", "i", "]", "==", "y_out", "[", "i", "]", ":", "\n", "            ", "acc", "+=", "1", "\n", "", "", "b", "=", "(", "acc", "/", "len", "(", "pred_1", ")", ")", "*", "100", "\n", "logging", ".", "info", "(", "\"The test accuracy: {}\"", ".", "format", "(", "b", ")", ")", "\n", "\n", "roc_score_test", "=", "roc_auc_score", "(", "y_out", ",", "pred_out", ")", "\n", "aucpr_test", "=", "get_aucpr", "(", "y_out", ",", "pred_out", ")", "\n", "f1_test", "=", "f1_score", "(", "y_out", ",", "pred_1", ")", "\n", "precision_test", "=", "precision_score", "(", "y_out", ",", "pred_1", ")", "\n", "recall_test", "=", "recall_score", "(", "y_out", ",", "pred_1", ")", "\n", "logging", ".", "info", "(", "\"This is the AUCPR score: {}\"", ".", "format", "(", "aucpr_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the roc_score: {}\"", ".", "format", "(", "roc_score_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the F1 score: {}\"", ".", "format", "(", "f1_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is precision: {}\"", ".", "format", "(", "precision_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is recall: {}\"", ".", "format", "(", "recall_test", ")", ")", "\n", "logging", ".", "info", "(", "\"Classification report: {}\"", ".", "format", "(", "classification_report", "(", "y_out", ",", "pred_1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.utils.get_ids": [[82, 97], ["head.split", "word_2_id.keys", "temp_list.append", "temp_list.append"], "function", ["None"], ["", "def", "get_ids", "(", "head", ",", "word_2_id", ")", ":", "\n", "    ", "\"\"\"\n    :param head:  entities\n    :param word_2_id: word to 2 dict\n    :return: list of ids to corresponding head entity\n    \"\"\"", "\n", "temp_list", "=", "[", "]", "\n", "en", "=", "head", ".", "split", "(", "\"_\"", ")", "\n", "for", "k", "in", "en", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n", "", "", "return", "temp_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.utils.eval_data": [[99, 113], ["len", "range", "utils.evaluation", "model.get_embed", "model.predict", "output_[].tolist"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict"], ["", "def", "eval_data", "(", "model", ",", "head_vec", ",", "tail_vec", ",", "rel_vec", ",", "label_ids", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "N", "=", "len", "(", "head_vec", ")", "\n", "g1", "=", "1024", "\n", "output_dev_collector", "=", "[", "]", "\n", "for", "k1", "in", "(", "range", "(", "0", ",", "N", ",", "g1", ")", ")", ":", "\n", "        ", "if", "k1", "+", "g1", ">", "N", ":", "\n", "            ", "d1", "=", "N", "\n", "", "else", ":", "\n", "            ", "d1", "=", "k1", "+", "g1", "\n", "\n", "", "head", ",", "tail", ",", "rel", ",", "embed", "=", "model", ".", "get_embed", "(", "head_vec", "[", "k1", ":", "d1", "]", ",", "tail_vec", "[", "k1", ":", "d1", "]", ",", "rel_vec", "[", "k1", ":", "d1", "]", ")", "\n", "output_", "=", "model", ".", "predict", "(", "embed", ")", "\n", "output_dev_collector", "+=", "output_", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "evaluation", "(", "label_ids", ",", "output_dev_collector", ",", "data_type", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.tokenize": [[18, 34], ["line.split.split.split", "word.lower.lower.lower", "word.lower.lower.split", "word.lower.lower.translate", "word.lower.translate.strip", "len", "str.maketrans", "token_list.append"], "methods", ["None"], ["self", ".", "pad", "=", "np", ".", "zeros", "(", "self", ".", "dim", ")", "\n", "self", ".", "pad", "[", "0", "]", "=", "1.0", "\n", "self", ".", "doc_2_vec", "=", "doc2vec", "\n", "# self.sentence_in =np.asanyarray(sentence)", "\n", "\n", "", "def", "create_input_output", "(", "self", ",", "row", ",", "doc_2_vec", ")", ":", "\n", "        ", "s_start", "=", "row", "[", "0", "]", "\n", "s_end", "=", "row", "[", "1", "]", "\n", "e_start", "=", "row", "[", "2", "]", "\n", "e_end", "=", "row", "[", "3", "]", "\n", "# print(e_end)", "\n", "labels", "=", "row", "[", "74", ":", "]", "\n", "# print(labels)", "\n", "features", "=", "row", "[", "4", ":", "74", "]", "\n", "# print(features)", "\n", "seq_context", "=", "np", ".", "zeros", "(", "(", "self", ".", "context_length", "*", "2", "+", "1", ",", "self", ".", "dim", ")", ")", "\n", "context_", "=", "[", "0", "for", "_", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", "]", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.create_output": [[35, 39], ["batcher.Batcher.tokenize"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.tokenize"], ["mention", "=", "self", ".", "storage", "[", "e_start", ":", "e_end", "]", "\n", "mention", "=", "mention", ".", "tolist", "(", ")", "\n", "# print(\"mention: \", self.storage[e_start:e_end])", "\n", "temp", "=", "[", "self", ".", "id2vec", "[", "self", ".", "storage", "[", "i", "]", "]", "[", ":", "self", ".", "dim", "]", "for", "i", "in", "range", "(", "e_start", ",", "e_end", ")", "]", "\n", "mean_target", "=", "np", ".", "mean", "(", "temp", ",", "axis", "=", "0", ")", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.f1": [[6, 10], ["float"], "function", ["None"], ["def", "f1", "(", "p", ",", "r", ")", ":", "\n", "    ", "if", "r", "==", "0.", ":", "\n", "        ", "return", "0.", "\n", "", "return", "2", "*", "p", "*", "r", "/", "float", "(", "p", "+", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.strict": [[12, 19], ["len", "hook.f1", "set", "set"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.f1"], ["", "def", "strict", "(", "true_and_prediction", ")", ":", "\n", "    ", "num_entities", "=", "len", "(", "true_and_prediction", ")", "\n", "correct_num", "=", "0.", "\n", "for", "true_labels", ",", "predicted_labels", "in", "true_and_prediction", ":", "\n", "        ", "correct_num", "+=", "set", "(", "true_labels", ")", "==", "set", "(", "predicted_labels", ")", "\n", "", "precision", "=", "recall", "=", "correct_num", "/", "num_entities", "\n", "return", "precision", ",", "recall", ",", "f1", "(", "precision", ",", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.loose_macro": [[21, 33], ["len", "len", "hook.f1", "len", "len", "float", "len", "float", "set().intersection", "len", "set().intersection", "len", "set", "set", "set", "set"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.f1"], ["", "def", "loose_macro", "(", "true_and_prediction", ")", ":", "\n", "    ", "num_entities", "=", "len", "(", "true_and_prediction", ")", "\n", "p", "=", "0.", "\n", "r", "=", "0.", "\n", "for", "true_labels", ",", "predicted_labels", "in", "true_and_prediction", ":", "\n", "        ", "if", "len", "(", "predicted_labels", ")", ">", "0", ":", "\n", "            ", "p", "+=", "len", "(", "set", "(", "predicted_labels", ")", ".", "intersection", "(", "set", "(", "true_labels", ")", ")", ")", "/", "float", "(", "len", "(", "predicted_labels", ")", ")", "\n", "", "if", "len", "(", "true_labels", ")", ":", "\n", "            ", "r", "+=", "len", "(", "set", "(", "predicted_labels", ")", ".", "intersection", "(", "set", "(", "true_labels", ")", ")", ")", "/", "float", "(", "len", "(", "true_labels", ")", ")", "\n", "", "", "precision", "=", "p", "/", "num_entities", "\n", "recall", "=", "r", "/", "num_entities", "\n", "return", "precision", ",", "recall", ",", "f1", "(", "precision", ",", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.loose_micro": [[35, 46], ["len", "len", "len", "hook.f1", "set().intersection", "set", "set"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.f1"], ["", "def", "loose_micro", "(", "true_and_prediction", ")", ":", "\n", "    ", "num_predicted_labels", "=", "0.", "\n", "num_true_labels", "=", "0.", "\n", "num_correct_labels", "=", "0.", "\n", "for", "true_labels", ",", "predicted_labels", "in", "true_and_prediction", ":", "\n", "        ", "num_predicted_labels", "+=", "len", "(", "predicted_labels", ")", "\n", "num_true_labels", "+=", "len", "(", "true_labels", ")", "\n", "num_correct_labels", "+=", "len", "(", "set", "(", "predicted_labels", ")", ".", "intersection", "(", "set", "(", "true_labels", ")", ")", ")", "\n", "", "precision", "=", "num_correct_labels", "/", "num_predicted_labels", "\n", "recall", "=", "num_correct_labels", "/", "num_true_labels", "\n", "return", "precision", ",", "recall", ",", "f1", "(", "precision", ",", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.get_true_and_prediction": [[48, 64], ["zip", "enumerate", "max", "predicted_tag.append", "enumerate", "true_and_prediction.append", "list", "enumerate", "list", "true_tag.append", "list", "predicted_tag.append"], "function", ["None"], ["", "def", "get_true_and_prediction", "(", "scores", ",", "y_data", ")", ":", "\n", "    ", "true_and_prediction", "=", "[", "]", "\n", "for", "score", ",", "true_label", "in", "zip", "(", "scores", ",", "y_data", ")", ":", "\n", "        ", "predicted_tag", "=", "[", "]", "\n", "true_tag", "=", "[", "]", "\n", "for", "label_id", ",", "label_score", "in", "enumerate", "(", "list", "(", "true_label", ")", ")", ":", "\n", "            ", "if", "label_score", ">", "0", ":", "\n", "                ", "true_tag", ".", "append", "(", "label_id", ")", "\n", "", "", "lid", ",", "ls", "=", "max", "(", "enumerate", "(", "list", "(", "score", ")", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ")", "\n", "predicted_tag", ".", "append", "(", "lid", ")", "\n", "for", "label_id", ",", "label_score", "in", "enumerate", "(", "list", "(", "score", ")", ")", ":", "\n", "            ", "if", "label_score", ">", "0.0", ":", "\n", "                ", "if", "label_id", "!=", "lid", ":", "\n", "                    ", "predicted_tag", ".", "append", "(", "label_id", ")", "\n", "", "", "", "true_and_prediction", ".", "append", "(", "(", "true_tag", ",", "predicted_tag", ")", ")", "\n", "", "return", "true_and_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.acc_hook": [[66, 76], ["hook.get_true_and_prediction", "logging.info", "logging.info", "logging.info", "hook.strict", "print", "print", "print", "hook.strict", "hook.loose_macro", "hook.loose_micro", "hook.strict", "hook.loose_macro", "hook.loose_micro"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.get_true_and_prediction", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.strict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.strict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.loose_macro", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.loose_micro", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.strict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.loose_macro", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.loose_micro"], ["", "def", "acc_hook", "(", "scores", ",", "y_data", ")", ":", "\n", "    ", "true_and_prediction", "=", "get_true_and_prediction", "(", "scores", ",", "y_data", ")", "\n", "logging", ".", "info", "(", "\"     strict (p,r,f1):{}\"", ".", "format", "(", "strict", "(", "true_and_prediction", ")", ")", ")", "\n", "logging", ".", "info", "(", "\"loose macro (p,r,f1): {}\"", ".", "format", "(", "loose_macro", "(", "true_and_prediction", ")", ")", ")", "\n", "logging", ".", "info", "(", "\"loose micro (p,r,f1): {}\"", ".", "format", "(", "loose_micro", "(", "true_and_prediction", ")", ")", ")", "\n", "a_", "=", "strict", "(", "true_and_prediction", ")", "\n", "print", "(", "\"     strict (p,r,f1):\"", ",", "strict", "(", "true_and_prediction", ")", ")", "\n", "print", "(", "\"loose macro (p,r,f1):\"", ",", "loose_macro", "(", "true_and_prediction", ")", ")", "\n", "print", "(", "\"loose micro (p,r,f1):\"", ",", "loose_micro", "(", "true_and_prediction", ")", ")", "\n", "return", "a_", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.save_predictions": [[78, 84], ["hook.get_true_and_prediction", "f.close", "open", "f.write"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.get_true_and_prediction", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "save_predictions", "(", "scores", ",", "y_data", ",", "id2label", ",", "fname", ")", ":", "\n", "    ", "true_and_prediction", "=", "get_true_and_prediction", "(", "scores", ",", "y_data", ")", "\n", "with", "open", "(", "fname", ",", "\"w\"", ")", "as", "f", ":", "\n", "        ", "for", "t", ",", "p", "in", "true_and_prediction", ":", "\n", "            ", "f", ".", "write", "(", "\"True values ===> \"", "+", "\"\\t\"", "+", "\" \"", ".", "join", "(", "[", "id2label", "[", "id", "]", "for", "id", "in", "t", "]", ")", "+", "\"\\t\"", "+", "\"Predicted values ==> \"", "+", "'\\t'", "+", "\" \"", ".", "join", "(", "[", "id2label", "[", "id", "]", "for", "id", "in", "p", "]", ")", "+", "\"\\n\"", ")", "\n", "", "", "f", ".", "close", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.f1": [[4, 8], ["float"], "function", ["None"], ["def", "f1", "(", "p", ",", "r", ")", ":", "\n", "    ", "if", "r", "==", "0.", ":", "\n", "        ", "return", "0.", "\n", "", "return", "2", "*", "p", "*", "r", "/", "float", "(", "p", "+", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.strict": [[10, 17], ["len", "evaluate.f1", "set", "set"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.f1"], ["", "def", "strict", "(", "true_and_prediction", ")", ":", "\n", "    ", "num_entities", "=", "len", "(", "true_and_prediction", ")", "\n", "correct_num", "=", "0.", "\n", "for", "true_labels", ",", "predicted_labels", "in", "true_and_prediction", ":", "\n", "        ", "correct_num", "+=", "set", "(", "true_labels", ")", "==", "set", "(", "predicted_labels", ")", "\n", "", "precision", "=", "recall", "=", "correct_num", "/", "num_entities", "\n", "return", "precision", ",", "recall", ",", "f1", "(", "precision", ",", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.loose_macro": [[19, 31], ["len", "len", "evaluate.f1", "len", "len", "float", "len", "float", "set().intersection", "len", "set().intersection", "len", "set", "set", "set", "set"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.f1"], ["", "def", "loose_macro", "(", "true_and_prediction", ")", ":", "\n", "    ", "num_entities", "=", "len", "(", "true_and_prediction", ")", "\n", "p", "=", "0.", "\n", "r", "=", "0.", "\n", "for", "true_labels", ",", "predicted_labels", "in", "true_and_prediction", ":", "\n", "        ", "if", "len", "(", "predicted_labels", ")", ">", "0", ":", "\n", "            ", "p", "+=", "len", "(", "set", "(", "predicted_labels", ")", ".", "intersection", "(", "set", "(", "true_labels", ")", ")", ")", "/", "float", "(", "len", "(", "predicted_labels", ")", ")", "\n", "", "if", "len", "(", "true_labels", ")", ":", "\n", "            ", "r", "+=", "len", "(", "set", "(", "predicted_labels", ")", ".", "intersection", "(", "set", "(", "true_labels", ")", ")", ")", "/", "float", "(", "len", "(", "true_labels", ")", ")", "\n", "", "", "precision", "=", "p", "/", "num_entities", "\n", "recall", "=", "r", "/", "num_entities", "\n", "return", "precision", ",", "recall", ",", "f1", "(", "precision", ",", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.loose_micro": [[33, 44], ["len", "len", "len", "evaluate.f1", "set().intersection", "set", "set"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.evaluate.f1"], ["", "def", "loose_micro", "(", "true_and_prediction", ")", ":", "\n", "    ", "num_predicted_labels", "=", "0.", "\n", "num_true_labels", "=", "0.", "\n", "num_correct_labels", "=", "0.", "\n", "for", "true_labels", ",", "predicted_labels", "in", "true_and_prediction", ":", "\n", "        ", "num_predicted_labels", "+=", "len", "(", "predicted_labels", ")", "\n", "num_true_labels", "+=", "len", "(", "true_labels", ")", "\n", "num_correct_labels", "+=", "len", "(", "set", "(", "predicted_labels", ")", ".", "intersection", "(", "set", "(", "true_labels", ")", ")", ")", "\n", "", "precision", "=", "num_correct_labels", "/", "num_predicted_labels", "\n", "recall", "=", "num_correct_labels", "/", "num_true_labels", "\n", "return", "precision", ",", "recall", ",", "f1", "(", "precision", ",", "recall", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.__init__": [[19, 290], ["object.__init__", "kwargs[].astype", "kwargs[].astype", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.dropout", "tensorflow.placeholder", "tensorflow.placeholder", "print", "print", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.summary.scalar", "tensorflow.summary.histogram", "tensorflow.summary.merge", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.Session", "tensorflow.trainable_variables", "tensorflow.reduce_sum", "nn_model_kge_fner.NAM_Modified.session.run", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "nn_model_kge_fner.NAM_Modified.LSTM_Layer", "tensorflow.concat", "print", "tensorflow.concat", "logging.info", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "nn_model_kge_fner.weight_variable", "nn_model_kge_fner.weight_variable", "nn_model_kge_fner.weight_variable", "tensorflow.matmul", "tensorflow.contrib.layers.batch_norm", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "nn_model_kge_fner.NAM_Modified.optimizer.minimize", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "nn_model_kge_fner.NAM_Modified.optimizer_fner.apply_gradients", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "nn_model_kge_fner.NAM_Modified.optimizer_kge.apply_gradients", "tensorflow.trainable_variables", "range", "tensorflow.split", "print", "print", "tensorflow.squeeze", "tensorflow.squeeze", "print", "tensorflow.squeeze", "print", "tensorflow.squeeze", "print", "tensorflow.concat", "print", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.nn.embedding_lookup", "print", "tensorflow.nn.embedding_lookup", "print", "nn_model_kge_fner.NAM_Modified.LSTM_Layer", "nn_model_kge_fner.NAM_Modified.LSTM_Layer", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "print", "tensorflow.placeholder", "nn_model_kge_fner.weight_variable", "tensorflow.nn.dropout", "tensorflow.concat", "print", "tensorflow.concat", "tensorflow.losses.hinge_loss", "zip", "zip", "tensorflow.reduce_prod", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.split", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.weighted_cross_entropy_with_logits", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "nn_model_kge_fner.NAM_Modified.attention_m", "print", "tensorflow.reduce_mean", "tensorflow.trainable_variables", "tensorflow.split", "tensorflow.nn.embedding_lookup"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.__init__", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.attention_m"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "NAM_Modified", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lstm_layer", "=", "kwargs", "[", "'lstm_layer'", "]", "\n", "self", ".", "balance", "=", "kwargs", "[", "'balance'", "]", "\n", "encoder", "=", "kwargs", "[", "'encoder'", "]", "\n", "type_", "=", "kwargs", "[", "'type'", "]", "\n", "self", ".", "feature", "=", "kwargs", "[", "'feature'", "]", "\n", "feature", "=", "self", ".", "feature", "\n", "assert", "(", "encoder", "in", "[", "'hier-attention'", ",", "'attentive_figet'", "]", ")", "\n", "assert", "(", "type_", "in", "[", "\"figer\"", ",", "\"gillick\"", ",", "\"BBN\"", ",", "\"wikiauto\"", "]", ")", "\n", "self", ".", "max_norm", "=", "-", "1.0", "\n", "self", ".", "type", "=", "type_", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "decay", "=", "True", "\n", "self", ".", "doc_vec", "=", "False", "\n", "self", ".", "att_dim", "=", "100", "# dim of attention module", "\n", "self", ".", "feature_dim", "=", "50", "# dim of feature representation", "\n", "self", ".", "feature_input_dim", "=", "70", "\n", "self", ".", "emb_dim", "=", "300", "\n", "self", ".", "context_length", "=", "10", "\n", "self", ".", "lstm_dim", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "\n", "self", ".", "feature_size", "=", "600000", "if", "type_", "==", "\"figer\"", "else", "100000", "\n", "self", ".", "coeff", "=", "0.1", "\n", "if", "encoder", "==", "\"averaging\"", ":", "\n", "            ", "self", ".", "rep_dim", "=", "self", ".", "emb_dim", "*", "3", "\n", "", "else", ":", "\n", "            ", "self", ".", "rep_dim", "=", "self", ".", "lstm_dim", "*", "2", "+", "self", ".", "emb_dim", "\n", "", "if", "feature", ":", "\n", "            ", "self", ".", "rep_dim", "+=", "self", ".", "feature_dim", "\n", "", "if", "self", ".", "doc_vec", ":", "\n", "            ", "self", ".", "rep_dim", "+=", "self", ".", "doc_dim", "\n", "", "if", "type_", "==", "'figer'", ":", "\n", "            ", "self", ".", "target_dim", "=", "113", "\n", "", "if", "type_", "==", "'gillick'", ":", "\n", "            ", "self", ".", "target_dim", "=", "89", "\n", "", "if", "type_", "==", "'BBN'", ":", "\n", "            ", "self", ".", "target_dim", "=", "47", "\n", "", "if", "type_", "==", "'wikiauto'", ":", "\n", "            ", "self", ".", "target_dim", "=", "74", "\n", "", "self", ".", "starter_learning_rate", "=", "kwargs", "[", "'learning_rate_kge'", "]", "or", "1e-4", "\n", "self", ".", "learning_rate_fner", "=", "kwargs", "[", "'learning_rate_fner'", "]", "\n", "self", ".", "hidden_units_1", "=", "kwargs", "[", "'hidden_units_1'", "]", "or", "1", "\n", "self", ".", "hidden_units_2", "=", "kwargs", "[", "'hidden_units_2'", "]", "or", "None", "\n", "self", ".", "hidden_units_3", "=", "kwargs", "[", "'hidden_units_3'", "]", "or", "None", "\n", "self", ".", "hidden_units_4", "=", "kwargs", "[", "'hidden_units_4'", "]", "or", "None", "\n", "self", ".", "drop_out", "=", "kwargs", "[", "'dropout'", "]", "\n", "self", ".", "split", "=", "kwargs", "[", "'split'", "]", "\n", "self", ".", "final", "=", "kwargs", "[", "'final'", "]", "\n", "self", ".", "embedding_matrix", "=", "kwargs", "[", "'embedding_matrix_kge'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "embedding_matrix_1", "=", "kwargs", "[", "'embedding_matrix_fner'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "learning_rate_joint", "=", "kwargs", "[", "'learning_rate_joint'", "]", "or", "1e-3", "\n", "self", ".", "task", "=", "kwargs", "[", "'task'", "]", "\n", "self", ".", "session_graph", "=", "kwargs", "[", "'session_graph'", "]", "\n", "self", ".", "joint_opt", "=", "kwargs", "[", "'joint_opt'", "]", "\n", "self", ".", "vocabulary_size", "=", "self", ".", "embedding_matrix", ".", "shape", "[", "0", "]", "\n", "if", "self", ".", "final", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "2", "\n", "", "else", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "4", "\n", "# with tf.device('/gpu:0'):", "\n", "", "self", ".", "embedding_mat", "=", "tf", ".", "get_variable", "(", "initializer", "=", "self", ".", "embedding_matrix", ",", "name", "=", "\"embedding_matrix_kge\"", ",", "\n", "trainable", "=", "True", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "embedding_mat_1", "=", "tf", ".", "get_variable", "(", "initializer", "=", "self", ".", "embedding_matrix_1", ",", "name", "=", "\"embedding_matrix_fner\"", ",", "\n", "trainable", "=", "False", ")", "\n", "\n", "# with tf.device('/gpu:0'):", "\n", "self", ".", "tail", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'y_true'", ")", "\n", "self", ".", "head", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'head_in'", ")", "\n", "self", ".", "rel", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'tail_in'", ")", "\n", "self", ".", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "self", ".", "mention_representation", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "emb_dim", "]", ")", "\n", "self", ".", "y_true_1", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "\"y_true_values\"", ")", "\n", "self", ".", "sequence_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "300", ")", ",", "name", "=", "\"sequence_in\"", ")", "\n", "self", ".", "embed_head", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "head", ")", "\n", "self", ".", "embed_tail", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "tail", ")", "\n", "self", ".", "embed_relation", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "rel", ")", "\n", "self", ".", "embed_total", "=", "tf", ".", "concat", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "target", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "target_dim", "]", ")", "\n", "self", ".", "sequence_sent", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'sentence_in'", ")", "\n", "self", ".", "sentence_in", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "None", ",", "self", ".", "emb_dim", "]", ")", "\n", "self", ".", "mention_representation_dropout", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "mention_representation", ",", "self", ".", "keep_prob", ")", "\n", "self", ".", "context", "=", "[", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "emb_dim", "]", ")", "for", "_", "in", "\n", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", "]", "\n", "self", ".", "left_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'left_context'", ")", "\n", "self", ".", "right_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'context_right'", ")", "\n", "\n", "print", "(", "self", ".", "embed_total", ".", "shape", ")", "\n", "print", "(", "self", ".", "embed_total", ".", "shape", ")", "\n", "self", ".", "current_view", "=", "1", "\n", "self", ".", "lstm_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "lstm_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "drops_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "\n", "self", ".", "lstm_fw", "]", "\n", "self", ".", "drops_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "\n", "self", ".", "lstm_bw", "]", "\n", "self", ".", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_fw", ")", "\n", "self", ".", "cell_bw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_bw", ")", "\n", "self", ".", "weights", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"Wl1\"", ",", "shape", "=", "[", "self", ".", "Input_dimension", ",", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"Wl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", ",", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"Wl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", ",", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"Wl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", ",", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "}", "\n", "self", ".", "biases", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"bl1\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"bl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"bl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"bl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "}", "\n", "if", "self", ".", "task", "==", "'KGE'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "=", "self", ".", "LSTM_Layer", "(", "self", ".", "sequence_in", ",", "time_major", "=", "False", ")", "\n", "self", ".", "lstm_output_1", "=", "tf", ".", "concat", "(", "self", ".", "lstm_output_1", ",", "2", ")", "\n", "print", "(", "self", ".", "lstm_output_1", ".", "shape", ")", "\n", "self", ".", "final_state_fw", ",", "self", ".", "final_state_bw", "=", "self", ".", "final_state_1", "\n", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "=", "self", ".", "final_state_fw", "[", "-", "1", "]", ".", "c", ",", "self", ".", "final_state_bw", "[", "-", "1", "]", ".", "c", "\n", "self", ".", "final_state_c", "=", "tf", ".", "concat", "(", "[", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "]", ",", "axis", "=", "1", ")", "\n", "logging", ".", "info", "(", "\"state 1 & 2 : {}{}\"", ".", "format", "(", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", ")", ")", "\n", "\n", "if", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "9", ":", "\n", "                ", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "9", ",", "\n", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "12", ":", "\n", "                ", "_", ",", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "12", ",", "\n", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "11", ":", "\n", "                ", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "11", ",", "axis", "=", "1", ")", "\n", "", "if", "self", ".", "final", ":", "\n", "                ", "print", "(", "self", ".", "final", ")", "\n", "self", ".", "z0", "=", "self", ".", "final_state_c", "\n", "print", "(", "\"This is tail_: \"", ",", "self", ".", "tail_", ".", "shape", ")", "\n", "self", ".", "tail_", "=", "tf", ".", "squeeze", "(", "self", ".", "tail_", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "tail_", "=", "tf", ".", "squeeze", "(", "self", ".", "tail_", ")", "\n", "print", "(", "self", ".", "tail_", ".", "shape", ")", "\n", "self", ".", "head_", "=", "tf", ".", "squeeze", "(", "self", ".", "head_", ")", "\n", "print", "(", "self", ".", "head_", ".", "shape", ")", "\n", "self", ".", "rel_", "=", "tf", ".", "squeeze", "(", "self", ".", "rel_", ")", "\n", "print", "(", "self", ".", "rel_", ")", "\n", "self", ".", "z0", "=", "tf", ".", "concat", "(", "[", "self", ".", "head_", ",", "self", ".", "rel_", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "self", ".", "z0", ".", "shape", ")", "\n", "", "self", ".", "l1", "=", "tf", ".", "matmul", "(", "self", ".", "z0", ",", "self", ".", "weights", "[", "'l1'", "]", ")", "+", "self", ".", "biases", "[", "'l1'", "]", "\n", "self", ".", "z1", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l1", ")", "\n", "self", ".", "l2", "=", "tf", ".", "matmul", "(", "self", ".", "z1", ",", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "self", ".", "biases", "[", "'l2'", "]", "\n", "self", ".", "z2", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l2", ")", "\n", "self", ".", "l3", "=", "tf", ".", "matmul", "(", "self", ".", "z2", ",", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "self", ".", "biases", "[", "'l3'", "]", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l3", ")", "\n", "self", ".", "m", "=", "tf", ".", "multiply", "(", "self", ".", "z3", ",", "self", ".", "tail_", ")", "\n", "self", ".", "dot", "=", "tf", ".", "reduce_sum", "(", "self", ".", "m", ",", "axis", "=", "1", ")", "\n", "self", ".", "output", "=", "self", ".", "dot", "\n", "self", ".", "output_2", "=", "tf", ".", "nn", ".", "sigmoid", "(", "self", ".", "output", ")", "\n", "self", ".", "beta", "=", "0.01", "\n", "self", ".", "regularizer", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l1'", "]", ")", "\n", "self", ".", "regularizer", "=", "self", ".", "beta", "*", "self", ".", "regularizer", "\n", "self", ".", "cost", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "weighted_cross_entropy_with_logits", "(", "self", ".", "y_true_1", ",", "self", ".", "output", ",", "pos_weight", "=", "self", ".", "balance", ")", "+", "\n", "self", ".", "regularizer", ")", "\n", "\n", "", "if", "self", ".", "task", "==", "'FNER'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "if", "self", ".", "encoder", "==", "'hier-attention'", ":", "\n", "                ", "self", ".", "left_context", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat_1", ",", "self", ".", "left_in", ")", "\n", "print", "(", "self", ".", "left_context", ")", "\n", "self", ".", "right_context", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat_1", ",", "self", ".", "right_in", ")", "\n", "print", "(", "self", ".", "right_context", ")", "\n", "self", ".", "out_context_left", ",", "self", ".", "final_left", "=", "self", ".", "LSTM_Layer", "(", "self", ".", "left_context", ",", "time_major", "=", "False", ")", "\n", "self", ".", "out_context_right", ",", "self", ".", "final_right", "=", "self", ".", "LSTM_Layer", "(", "self", ".", "right_context", ",", "time_major", "=", "False", ")", "\n", "self", ".", "out_context_left", "=", "tf", ".", "concat", "(", "self", ".", "out_context_left", ",", "2", ")", "\n", "self", ".", "out_context_right", "=", "tf", ".", "concat", "(", "self", ".", "out_context_right", ",", "2", ")", "\n", "self", ".", "total_context", "=", "tf", ".", "concat", "(", "[", "self", ".", "out_context_left", ",", "self", ".", "out_context_right", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "\"This is total context\"", ",", "self", ".", "total_context", ".", "shape", ")", "\n", "# self.total_context = tf.transpose(self.total_context, [1, 0, 2])", "\n", "# print(\"This is total context: \", self.total_context.shape)", "\n", "if", "self", ".", "encoder", "==", "'hier-attention'", ":", "\n", "                    ", "self", ".", "w_omega", "=", "tf", ".", "get_variable", "(", "\"w_omega\"", ",", "shape", "=", "[", "self", ".", "lstm_dim", "*", "2", ",", "self", ".", "att_dim", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "trainable", "=", "True", ")", "\n", "self", ".", "b_omega", "=", "tf", ".", "get_variable", "(", "\"b_omega\"", ",", "shape", "=", "[", "self", ".", "att_dim", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "trainable", "=", "True", ")", "\n", "self", ".", "u_omega", "=", "tf", ".", "get_variable", "(", "\"u_omega\"", ",", "shape", "=", "[", "self", ".", "att_dim", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "trainable", "=", "True", ")", "\n", "self", ".", "context_representation", ",", "self", ".", "att_1", "=", "self", ".", "attention_m", "(", "self", ".", "total_context", ")", "\n", "print", "(", "\"This is context rep: \"", ",", "self", ".", "context_representation", ".", "shape", ")", "\n", "", "", "if", "self", ".", "feature", ":", "\n", "                ", "self", ".", "features", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "self", ".", "feature_input_dim", "]", ")", "\n", "self", ".", "feature_embeddings", "=", "weight_variable", "(", "'feat_embds'", ",", "(", "self", ".", "feature_size", ",", "self", ".", "feature_dim", ")", ",", "True", ")", "\n", "self", ".", "feature_representation", "=", "tf", ".", "nn", ".", "dropout", "(", "\n", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "feature_embeddings", ",", "self", ".", "features", ")", ",", "1", ")", ",", "\n", "self", ".", "keep_prob", ")", "\n", "self", ".", "representation", "=", "tf", ".", "concat", "(", "[", "self", ".", "mention_representation_dropout", ",", "self", ".", "feature_representation", ",", "\n", "self", ".", "context_representation", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "self", ".", "representation", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "representation", "=", "tf", ".", "concat", "(", "\n", "[", "self", ".", "mention_representation_dropout", ",", "self", ".", "context_representation", "]", ",", "\n", "axis", "=", "1", ")", "\n", "", "self", ".", "V_1", "=", "weight_variable", "(", "'n_W1'", ",", "(", "self", ".", "rep_dim", ",", "1024", ")", ")", "\n", "self", ".", "V_2", "=", "weight_variable", "(", "'n_W2'", ",", "(", "1024", ",", "512", ")", ")", "\n", "self", ".", "V_3", "=", "weight_variable", "(", "'n_W3'", ",", "(", "512", ",", "self", ".", "target_dim", ")", ")", "\n", "self", ".", "y_1", "=", "tf", ".", "matmul", "(", "self", ".", "representation", ",", "self", ".", "V_1", ")", "\n", "self", ".", "y1", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "self", ".", "y_1", ",", "center", "=", "True", ",", "scale", "=", "True", ")", "\n", "self", ".", "y_1", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "y_1", ")", "\n", "self", ".", "y_2", "=", "tf", ".", "matmul", "(", "self", ".", "y_1", ",", "self", ".", "V_2", ")", "\n", "self", ".", "y_2", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "y_2", ")", "\n", "self", ".", "logit", "=", "tf", ".", "matmul", "(", "self", ".", "y_2", ",", "self", ".", "V_3", ")", "\n", "self", ".", "distribution", "=", "self", ".", "logit", "\n", "self", ".", "loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "losses", ".", "hinge_loss", "(", "logits", "=", "self", ".", "logit", ",", "labels", "=", "self", ".", "target", ")", ")", "\n", "\n", "", "if", "self", ".", "joint_opt", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "self", ".", "lambda_", "=", "1", "\n", "# if self.joint_optimizer:", "\n", "self", ".", "total_loss", "=", "self", ".", "cost", "+", "self", ".", "lambda_", "*", "self", ".", "loss", "\n", "self", ".", "global_step", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "learning_rate_1", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "learning_rate_joint", ",", "self", ".", "global_step", ",", "\n", "decay_steps", "=", "100000", ",", "\n", "decay_rate", "=", "0.5", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_joint", ")", "\n", "self", ".", "optim_total", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "total_loss", ",", "global_step", "=", "self", ".", "global_step", ")", "\n", "\n", "", "if", "self", ".", "task", "==", "'FNER'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "self", ".", "global_step_2", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "params_fner", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "gradients_fner", "=", "tf", ".", "gradients", "(", "self", ".", "loss", ",", "self", ".", "params_fner", ")", "\n", "self", ".", "clipped_gradients_fner", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "self", ".", "gradients_fner", ",", "self", ".", "max_norm", ")", "\n", "self", ".", "learning_rate_2", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "learning_rate_fner", ",", "self", ".", "global_step_2", ",", "\n", "decay_steps", "=", "4000", ",", "\n", "decay_rate", "=", "0.25", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer_fner", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_2", ")", "\n", "self", ".", "optim_fner", "=", "self", ".", "optimizer_fner", ".", "apply_gradients", "(", "zip", "(", "self", ".", "clipped_gradients_fner", ",", "self", ".", "params_fner", ")", ",", "\n", "global_step", "=", "self", ".", "global_step_2", ")", "\n", "", "if", "self", ".", "task", "==", "'KGE'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "self", ".", "global_step_1", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "params_kge", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "gradients_kge", "=", "tf", ".", "gradients", "(", "self", ".", "cost", ",", "self", ".", "params_kge", ")", "\n", "self", ".", "clipped_gradients_kge", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "self", ".", "gradients_kge", ",", "self", ".", "max_norm", ")", "\n", "self", ".", "learning_rate_3", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "starter_learning_rate", ",", "self", ".", "global_step_1", ",", "\n", "decay_steps", "=", "10000", ",", "\n", "decay_rate", "=", "0.05", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer_kge", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_3", ")", "\n", "self", ".", "train_op", "=", "self", ".", "optimizer_kge", ".", "apply_gradients", "(", "zip", "(", "self", ".", "clipped_gradients_kge", ",", "self", ".", "params_kge", ")", ",", "\n", "global_step", "=", "self", ".", "global_step_1", ")", "\n", "\n", "", "self", ".", "fner_loss_summary", "=", "tf", ".", "summary", ".", "scalar", "(", "\"FNER_loss\"", ",", "self", ".", "loss", ")", "\n", "self", ".", "attn_sent_fner", "=", "tf", ".", "summary", ".", "histogram", "(", "\"FNER_attn_histogram\"", ",", "self", ".", "att_1", ")", "\n", "self", ".", "summary_op_fner", "=", "tf", ".", "summary", ".", "merge", "(", "[", "self", ".", "attn_sent_fner", ",", "self", ".", "fner_loss_summary", "]", ")", "\n", "\n", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "tf", ".", "trainable_variables", "(", ")", ")", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", "device_count", "=", "{", "'GPU'", ":", "1", "}", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "summary_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "self", ".", "session_graph", "+", "\"summary_log\"", ",", "self", ".", "session", ".", "graph", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "trainable_var", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "total_var_num", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_prod", "(", "v", ".", "shape", ")", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.attention_m": [[291, 301], ["tensorflow.nn.tanh", "tensorflow.tensordot", "tensorflow.nn.softmax", "print", "tensorflow.reduce_sum", "tensorflow.expand_dims", "tensorflow.tensordot"], "methods", ["None"], ["", "def", "attention_m", "(", "self", ",", "inputs", ",", "sentence", "=", "False", ")", ":", "\n", "        ", "v_in", "=", "tf", ".", "nn", ".", "tanh", "(", "tf", ".", "tensordot", "(", "inputs", ",", "self", ".", "w_omega", ",", "axes", "=", "1", ")", "+", "self", ".", "b_omega", ")", "\n", "v_out", "=", "tf", ".", "tensordot", "(", "v_in", ",", "self", ".", "u_omega", ",", "axes", "=", "1", ",", "name", "=", "'vu'", ")", "\n", "attn", "=", "tf", ".", "nn", ".", "softmax", "(", "v_out", ",", "name", "=", "'alphas'", ")", "\n", "attn_weight", "=", "inputs", "*", "tf", ".", "expand_dims", "(", "attn", ",", "-", "1", ")", "\n", "print", "(", "\"This is attn_weight: \"", ",", "attn_weight", ".", "shape", ")", "\n", "if", "sentence", ":", "\n", "            ", "return", "attn_weight", ",", "attn", "\n", "", "cont_rep", "=", "tf", ".", "reduce_sum", "(", "attn_weight", ",", "axis", "=", "1", ")", "\n", "return", "cont_rep", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.LSTM_Layer": [[302, 308], ["tensorflow.nn.bidirectional_dynamic_rnn"], "methods", ["None"], ["", "def", "LSTM_Layer", "(", "self", ",", "input_", ",", "time_major", "=", "False", ")", ":", "\n", "        ", "output_", ",", "final_sequence_", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "self", ".", "cell_fw", ",", "self", ".", "cell_bw", ",", "\n", "input_", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "time_major", "=", "time_major", ")", "\n", "return", "output_", ",", "final_sequence_", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.get_embed": [[309, 315], ["nn_model_kge_fner.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_embed", "(", "self", ",", "head_i", ",", "tail_i", ",", "rel_i", ")", ":", "\n", "        ", "feed", "=", "{", "\n", "self", ".", "head", ":", "head_i", ",", "self", ".", "tail", ":", "tail_i", ",", "self", ".", "rel", ":", "rel_i", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", ",", "self", ".", "embed_total", "]", ",", "\n", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.fit": [[316, 322], ["nn_model_kge_fner.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "sequence", ",", "y_out", ")", ":", "\n", "        ", "self", ".", "task", "=", "'KGE'", "\n", "feed", "=", "{", "self", ".", "y_true_1", ":", "y_out", ",", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "cost", ",", "self", ".", "train_op", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.predict_kge": [[323, 329], ["nn_model_kge_fner.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "predict_kge", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "self", ".", "task", "=", "'KGE'", "\n", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "output_2", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.train_FNER": [[330, 346], ["nn_model_kge_fner.NAM_Modified.session.run", "range"], "methods", ["None"], ["", "def", "train_FNER", "(", "self", ",", "left_in", ",", "right_in", ",", "target_data", ",", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "None", ",", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", ":", "\n", "        ", "self", ".", "task", "=", "'FNER'", "\n", "feed", "=", "{", "self", ".", "target", ":", "target_data", ",", "\n", "self", ".", "keep_prob", ":", "[", "0.5", "]", ",", "\n", "self", ".", "left_in", ":", "left_in", ",", "\n", "self", ".", "right_in", ":", "right_in", "}", "\n", "if", "self", ".", "feature", "==", "True", "and", "feature_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "features", "]", "=", "feature_data", "\n", "", "if", "context_data", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", ":", "\n", "                ", "feed", "[", "self", ".", "context", "[", "i", "]", "]", "=", "context_data", "[", ":", ",", "i", ",", ":", "]", "\n", "", "", "if", "mention_representation_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "mention_representation", "]", "=", "mention_representation_data", "\n", "", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "loss", ",", "self", ".", "optim_fner", ",", "self", ".", "summary_op_fner", ",", "self", ".", "global_step_2", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.error": [[347, 365], ["nn_model_kge_fner.NAM_Modified.session.run", "range"], "methods", ["None"], ["", "def", "error", "(", "self", ",", "left_in", ",", "right_in", ",", "target_data", ",", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "None", ",", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", ":", "\n", "        ", "self", ".", "task", "=", "'FNER'", "\n", "feed", "=", "{", "self", ".", "target", ":", "target_data", ",", "\n", "self", ".", "keep_prob", ":", "[", "1.0", "]", ",", "\n", "self", ".", "left_in", ":", "left_in", ",", "\n", "self", ".", "right_in", ":", "right_in", "}", "\n", "if", "self", ".", "feature", "==", "True", "and", "feature_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "features", "]", "=", "feature_data", "\n", "", "if", "self", ".", "doc_vec", "==", "True", "and", "doc_vector", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "doc_sequence", "]", "=", "doc_vector", "\n", "", "if", "context_data", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", ":", "\n", "                ", "feed", "[", "self", ".", "context", "[", "i", "]", "]", "=", "context_data", "[", ":", ",", "i", ",", ":", "]", "\n", "", "", "if", "mention_representation_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "mention_representation", "]", "=", "mention_representation_data", "\n", "", "return", "self", ".", "session", ".", "run", "(", "self", ".", "loss", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.predict": [[366, 383], ["nn_model_kge_fner.NAM_Modified.session.run", "range"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "left_in", ",", "right_in", ",", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "None", ",", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", ":", "\n", "        ", "self", ".", "task", "=", "'FNER'", "\n", "feed", "=", "{", "self", ".", "keep_prob", ":", "[", "1.0", "]", ",", "\n", "self", ".", "left_in", ":", "left_in", ",", "\n", "self", ".", "right_in", ":", "right_in", "}", "\n", "if", "self", ".", "feature", "==", "True", "and", "feature_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "features", "]", "=", "feature_data", "\n", "", "if", "self", ".", "doc_vec", "==", "True", "and", "doc_vector", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "doc_sequence", "]", "=", "doc_vector", "\n", "", "if", "context_data", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", ":", "\n", "                ", "feed", "[", "self", ".", "context", "[", "i", "]", "]", "=", "context_data", "[", ":", ",", "i", ",", ":", "]", "\n", "", "", "if", "mention_representation_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "mention_representation", "]", "=", "mention_representation_data", "\n", "", "return", "self", ".", "session", ".", "run", "(", "self", ".", "distribution", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.get_type_embed": [[384, 386], ["nn_model_kge_fner.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_type_embed", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "V_3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.load": [[387, 390], ["nn_model_kge_fner.NAM_Modified.saver.restore", "logging.info"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "location", ",", "model_name", ",", "exp_num", ")", ":", "\n", "        ", "self", ".", "saver", ".", "restore", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "'_'", "+", "exp_num", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model loaded from path: %s\"", "%", "location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.get_train_var": [[391, 393], ["nn_model_kge_fner.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_train_var", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "trainable_var", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.get_total_var_num": [[394, 396], ["nn_model_kge_fner.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_total_var_num", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "total_var_num", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.save": [[397, 400], ["nn_model_kge_fner.NAM_Modified.saver.save", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save"], ["", "def", "save", "(", "self", ",", "location", ",", "model_name", ",", "experiment_number", ")", ":", "\n", "        ", "save_path", "=", "self", ".", "saver", ".", "save", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "\"_\"", "+", "experiment_number", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model saved in path: %s\"", "%", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.NAM_Modified.close": [[401, 404], ["nn_model_kge_fner.NAM_Modified.session.close", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "session", ".", "close", "(", ")", "\n", "logging", ".", "info", "(", "\"Model session closed\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_kge_fner.weight_variable": [[10, 16], ["numpy.random.uniform", "tensorflow.constant_initializer", "tensorflow.get_variable", "numpy.zeros"], "function", ["None"], ["def", "weight_variable", "(", "name", ",", "shape", ",", "pad", "=", "False", ")", ":", "\n", "    ", "initial", "=", "np", ".", "random", ".", "uniform", "(", "-", "0.01", ",", "0.01", ",", "size", "=", "shape", ")", "\n", "if", "pad", ":", "\n", "        ", "initial", "[", "0", "]", "=", "np", ".", "zeros", "(", "shape", "[", "1", "]", ")", "\n", "", "initial", "=", "tf", ".", "constant_initializer", "(", "initial", ")", "\n", "return", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "shape", "=", "shape", ",", "initializer", "=", "initial", ",", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.__init__": [[19, 292], ["object.__init__", "kwargs[].astype", "kwargs[].astype", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.embedding_lookup", "tensorflow.reduce_mean", "tensorflow.placeholder", "tensorflow.placeholder", "print", "print", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.summary.scalar", "tensorflow.summary.histogram", "tensorflow.summary.merge", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.Session", "tensorflow.trainable_variables", "tensorflow.reduce_sum", "nn_model_auto_kge.NAM_Modified.session.run", "tensorflow.nn.dropout", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "nn_model_auto_kge.NAM_Modified.LSTM_Layer", "tensorflow.concat", "print", "tensorflow.concat", "logging.info", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "nn_model_auto_kge.weight_variable", "nn_model_auto_kge.weight_variable", "nn_model_auto_kge.weight_variable", "tensorflow.matmul", "tensorflow.contrib.layers.batch_norm", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "nn_model_auto_kge.NAM_Modified.optimizer.minimize", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "nn_model_auto_kge.NAM_Modified.optimizer_fner.apply_gradients", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "nn_model_auto_kge.NAM_Modified.optimizer_kge.apply_gradients", "tensorflow.trainable_variables", "range", "tensorflow.split", "print", "print", "tensorflow.squeeze", "tensorflow.squeeze", "print", "tensorflow.squeeze", "print", "tensorflow.squeeze", "print", "tensorflow.concat", "print", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.nn.embedding_lookup", "print", "tensorflow.nn.embedding_lookup", "print", "nn_model_auto_kge.NAM_Modified.LSTM_Layer", "nn_model_auto_kge.NAM_Modified.LSTM_Layer", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "print", "tensorflow.placeholder", "nn_model_auto_kge.weight_variable", "tensorflow.nn.dropout", "tensorflow.concat", "print", "tensorflow.concat", "tensorflow.losses.hinge_loss", "zip", "zip", "tensorflow.reduce_prod", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.split", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.nn.weighted_cross_entropy_with_logits", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "nn_model_auto_kge.NAM_Modified.attention_m", "print", "tensorflow.reduce_mean", "tensorflow.trainable_variables", "tensorflow.split", "tensorflow.nn.embedding_lookup"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.__init__", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.attention_m"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "NAM_Modified", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lstm_layer", "=", "kwargs", "[", "'lstm_layer'", "]", "\n", "self", ".", "balance", "=", "kwargs", "[", "'balance'", "]", "\n", "encoder", "=", "kwargs", "[", "'encoder'", "]", "\n", "type_", "=", "kwargs", "[", "'type'", "]", "\n", "self", ".", "feature", "=", "kwargs", "[", "'feature'", "]", "\n", "feature", "=", "self", ".", "feature", "\n", "assert", "(", "encoder", "in", "[", "'hier-attention'", ",", "'attentive_figet'", "]", ")", "\n", "assert", "(", "type_", "in", "[", "\"figer\"", ",", "\"gillick\"", ",", "\"BBN\"", ",", "\"wikiauto\"", "]", ")", "\n", "self", ".", "max_norm", "=", "-", "1.0", "\n", "self", ".", "type", "=", "type_", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "decay", "=", "True", "\n", "self", ".", "doc_vec", "=", "False", "\n", "self", ".", "att_dim", "=", "100", "# dim of attention module", "\n", "self", ".", "feature_dim", "=", "50", "# dim of feature representation", "\n", "self", ".", "feature_input_dim", "=", "70", "\n", "self", ".", "emb_dim", "=", "300", "\n", "self", ".", "context_length", "=", "10", "\n", "self", ".", "lstm_dim", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "\n", "self", ".", "feature_size", "=", "600000", "if", "type_", "==", "\"figer\"", "else", "100000", "\n", "self", ".", "coeff", "=", "0.1", "\n", "if", "encoder", "==", "\"averaging\"", ":", "\n", "            ", "self", ".", "rep_dim", "=", "self", ".", "emb_dim", "*", "3", "\n", "", "else", ":", "\n", "            ", "self", ".", "rep_dim", "=", "self", ".", "lstm_dim", "*", "2", "+", "self", ".", "emb_dim", "\n", "", "if", "feature", ":", "\n", "            ", "self", ".", "rep_dim", "+=", "self", ".", "feature_dim", "\n", "", "if", "self", ".", "doc_vec", ":", "\n", "            ", "self", ".", "rep_dim", "+=", "self", ".", "doc_dim", "\n", "", "if", "type_", "==", "'figer'", ":", "\n", "            ", "self", ".", "target_dim", "=", "113", "\n", "", "if", "type_", "==", "'gillick'", ":", "\n", "            ", "self", ".", "target_dim", "=", "89", "\n", "", "if", "type_", "==", "'BBN'", ":", "\n", "            ", "self", ".", "target_dim", "=", "47", "\n", "", "if", "type_", "==", "'wikiauto'", ":", "\n", "            ", "self", ".", "target_dim", "=", "74", "\n", "", "self", ".", "starter_learning_rate", "=", "kwargs", "[", "'learning_rate_kge'", "]", "or", "1e-4", "\n", "self", ".", "learning_rate_fner", "=", "kwargs", "[", "'learning_rate_fner'", "]", "\n", "self", ".", "hidden_units_1", "=", "kwargs", "[", "'hidden_units_1'", "]", "or", "1", "\n", "self", ".", "hidden_units_2", "=", "kwargs", "[", "'hidden_units_2'", "]", "or", "None", "\n", "self", ".", "hidden_units_3", "=", "kwargs", "[", "'hidden_units_3'", "]", "or", "None", "\n", "self", ".", "hidden_units_4", "=", "kwargs", "[", "'hidden_units_4'", "]", "or", "None", "\n", "self", ".", "drop_out", "=", "kwargs", "[", "'dropout'", "]", "\n", "self", ".", "split", "=", "kwargs", "[", "'split'", "]", "\n", "self", ".", "final", "=", "kwargs", "[", "'final'", "]", "\n", "self", ".", "embedding_matrix", "=", "kwargs", "[", "'embedding_matrix_kge'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "embedding_matrix_1", "=", "kwargs", "[", "'embedding_matrix_fner'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "learning_rate_joint", "=", "kwargs", "[", "'learning_rate_joint'", "]", "or", "1e-3", "\n", "self", ".", "task", "=", "kwargs", "[", "'task'", "]", "\n", "self", ".", "session_graph", "=", "kwargs", "[", "'session_graph'", "]", "\n", "self", ".", "joint_opt", "=", "kwargs", "[", "'joint_opt'", "]", "\n", "self", ".", "vocabulary_size", "=", "self", ".", "embedding_matrix", ".", "shape", "[", "0", "]", "\n", "if", "self", ".", "final", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "2", "\n", "", "else", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "4", "\n", "# with tf.device('/gpu:0'):", "\n", "", "self", ".", "embedding_mat", "=", "tf", ".", "get_variable", "(", "initializer", "=", "self", ".", "embedding_matrix", ",", "name", "=", "\"embedding_matrix_kge\"", ",", "\n", "trainable", "=", "True", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "embedding_mat_1", "=", "tf", ".", "get_variable", "(", "initializer", "=", "self", ".", "embedding_matrix_1", ",", "name", "=", "\"embedding_matrix_fner\"", ",", "\n", "trainable", "=", "False", ")", "\n", "\n", "# with tf.device('/gpu:0'):", "\n", "self", ".", "tail", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'y_true'", ")", "\n", "self", ".", "head", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'head_in'", ")", "\n", "self", ".", "rel", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'tail_in'", ")", "\n", "self", ".", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "self", ".", "mention_representation", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ")", "\n", "self", ".", "y_true_1", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "\"y_true_values\"", ")", "\n", "self", ".", "sequence_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "300", ")", ",", "name", "=", "\"sequence_in\"", ")", "\n", "self", ".", "embed_head", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "head", ")", "\n", "self", ".", "embed_tail", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "tail", ")", "\n", "self", ".", "embed_relation", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "rel", ")", "\n", "self", ".", "embed_total", "=", "tf", ".", "concat", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "target", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "target_dim", "]", ")", "\n", "self", ".", "sequence_sent", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'sentence_in'", ")", "\n", "self", ".", "sentence_in", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "None", ",", "self", ".", "emb_dim", "]", ")", "\n", "self", ".", "mention_rep", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_matrix_1", ",", "self", ".", "mention_representation", ")", "\n", "self", ".", "mention_representation_dropout", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "mention_rep", ",", "\n", "self", ".", "keep_prob", ")", ",", "axis", "=", "1", ")", "\n", "self", ".", "context", "=", "[", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "emb_dim", "]", ")", "for", "_", "in", "\n", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", "]", "\n", "self", ".", "left_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'left_context'", ")", "\n", "self", ".", "right_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'context_right'", ")", "\n", "\n", "print", "(", "self", ".", "embed_total", ".", "shape", ")", "\n", "print", "(", "self", ".", "embed_total", ".", "shape", ")", "\n", "self", ".", "current_view", "=", "1", "\n", "self", ".", "lstm_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "lstm_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "drops_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "\n", "self", ".", "lstm_fw", "]", "\n", "self", ".", "drops_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "\n", "self", ".", "lstm_bw", "]", "\n", "self", ".", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_fw", ")", "\n", "self", ".", "cell_bw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_bw", ")", "\n", "self", ".", "weights", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"Wl1\"", ",", "shape", "=", "[", "self", ".", "Input_dimension", ",", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"Wl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", ",", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"Wl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", ",", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"Wl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", ",", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "}", "\n", "self", ".", "biases", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"bl1\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"bl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"bl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"bl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "}", "\n", "if", "self", ".", "task", "==", "'KGE'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "=", "self", ".", "LSTM_Layer", "(", "self", ".", "sequence_in", ",", "time_major", "=", "False", ")", "\n", "self", ".", "lstm_output_1", "=", "tf", ".", "concat", "(", "self", ".", "lstm_output_1", ",", "2", ")", "\n", "print", "(", "self", ".", "lstm_output_1", ".", "shape", ")", "\n", "self", ".", "final_state_fw", ",", "self", ".", "final_state_bw", "=", "self", ".", "final_state_1", "\n", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "=", "self", ".", "final_state_fw", "[", "-", "1", "]", ".", "c", ",", "self", ".", "final_state_bw", "[", "-", "1", "]", ".", "c", "\n", "self", ".", "final_state_c", "=", "tf", ".", "concat", "(", "[", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "]", ",", "axis", "=", "1", ")", "\n", "logging", ".", "info", "(", "\"state 1 & 2 : {}{}\"", ".", "format", "(", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", ")", ")", "\n", "\n", "if", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "9", ":", "\n", "                ", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "9", ",", "\n", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "12", ":", "\n", "                ", "_", ",", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "12", ",", "\n", "axis", "=", "1", ")", "\n", "", "elif", "self", ".", "current_view", "==", "1", "and", "self", ".", "split", "==", "11", ":", "\n", "                ", "_", ",", "_", ",", "self", ".", "head_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "self", ".", "rel_", ",", "_", ",", "_", ",", "self", ".", "tail_", "=", "tf", ".", "split", "(", "self", ".", "lstm_output_1", ",", "\n", "num_or_size_splits", "=", "11", ",", "axis", "=", "1", ")", "\n", "", "if", "self", ".", "final", ":", "\n", "                ", "print", "(", "self", ".", "final", ")", "\n", "self", ".", "z0", "=", "self", ".", "final_state_c", "\n", "print", "(", "\"This is tail_: \"", ",", "self", ".", "tail_", ".", "shape", ")", "\n", "self", ".", "tail_", "=", "tf", ".", "squeeze", "(", "self", ".", "tail_", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "tail_", "=", "tf", ".", "squeeze", "(", "self", ".", "tail_", ")", "\n", "print", "(", "self", ".", "tail_", ".", "shape", ")", "\n", "self", ".", "head_", "=", "tf", ".", "squeeze", "(", "self", ".", "head_", ")", "\n", "print", "(", "self", ".", "head_", ".", "shape", ")", "\n", "self", ".", "rel_", "=", "tf", ".", "squeeze", "(", "self", ".", "rel_", ")", "\n", "print", "(", "self", ".", "rel_", ")", "\n", "self", ".", "z0", "=", "tf", ".", "concat", "(", "[", "self", ".", "head_", ",", "self", ".", "rel_", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "self", ".", "z0", ".", "shape", ")", "\n", "", "self", ".", "l1", "=", "tf", ".", "matmul", "(", "self", ".", "z0", ",", "self", ".", "weights", "[", "'l1'", "]", ")", "+", "self", ".", "biases", "[", "'l1'", "]", "\n", "self", ".", "z1", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l1", ")", "\n", "self", ".", "l2", "=", "tf", ".", "matmul", "(", "self", ".", "z1", ",", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "self", ".", "biases", "[", "'l2'", "]", "\n", "self", ".", "z2", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l2", ")", "\n", "self", ".", "l3", "=", "tf", ".", "matmul", "(", "self", ".", "z2", ",", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "self", ".", "biases", "[", "'l3'", "]", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l3", ")", "\n", "self", ".", "m", "=", "tf", ".", "multiply", "(", "self", ".", "z3", ",", "self", ".", "tail_", ")", "\n", "self", ".", "dot", "=", "tf", ".", "reduce_sum", "(", "self", ".", "m", ",", "axis", "=", "1", ")", "\n", "self", ".", "output", "=", "self", ".", "dot", "\n", "self", ".", "output_2", "=", "tf", ".", "nn", ".", "sigmoid", "(", "self", ".", "output", ")", "\n", "self", ".", "beta", "=", "0.01", "\n", "self", ".", "regularizer", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l1'", "]", ")", "\n", "self", ".", "regularizer", "=", "self", ".", "beta", "*", "self", ".", "regularizer", "\n", "self", ".", "cost", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "weighted_cross_entropy_with_logits", "(", "self", ".", "y_true_1", ",", "self", ".", "output", ",", "pos_weight", "=", "self", ".", "balance", ")", "+", "\n", "self", ".", "regularizer", ")", "\n", "\n", "", "if", "self", ".", "task", "==", "'FNER'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "if", "self", ".", "encoder", "==", "'hier-attention'", ":", "\n", "                ", "self", ".", "left_context", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat_1", ",", "self", ".", "left_in", ")", "\n", "print", "(", "self", ".", "left_context", ")", "\n", "self", ".", "right_context", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat_1", ",", "self", ".", "right_in", ")", "\n", "print", "(", "self", ".", "right_context", ")", "\n", "self", ".", "out_context_left", ",", "self", ".", "final_left", "=", "self", ".", "LSTM_Layer", "(", "self", ".", "left_context", ",", "time_major", "=", "False", ")", "\n", "self", ".", "out_context_right", ",", "self", ".", "final_right", "=", "self", ".", "LSTM_Layer", "(", "self", ".", "right_context", ",", "time_major", "=", "False", ")", "\n", "self", ".", "out_context_left", "=", "tf", ".", "concat", "(", "self", ".", "out_context_left", ",", "2", ")", "\n", "self", ".", "out_context_right", "=", "tf", ".", "concat", "(", "self", ".", "out_context_right", ",", "2", ")", "\n", "self", ".", "total_context", "=", "tf", ".", "concat", "(", "[", "self", ".", "out_context_left", ",", "self", ".", "out_context_right", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "\"This is total context\"", ",", "self", ".", "total_context", ".", "shape", ")", "\n", "# self.total_context = tf.transpose(self.total_context, [1, 0, 2])", "\n", "# print(\"This is total context: \", self.total_context.shape)", "\n", "if", "self", ".", "encoder", "==", "'hier-attention'", ":", "\n", "                    ", "self", ".", "w_omega", "=", "tf", ".", "get_variable", "(", "\"w_omega\"", ",", "shape", "=", "[", "self", ".", "lstm_dim", "*", "2", ",", "self", ".", "att_dim", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "trainable", "=", "True", ")", "\n", "self", ".", "b_omega", "=", "tf", ".", "get_variable", "(", "\"b_omega\"", ",", "shape", "=", "[", "self", ".", "att_dim", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "trainable", "=", "True", ")", "\n", "self", ".", "u_omega", "=", "tf", ".", "get_variable", "(", "\"u_omega\"", ",", "shape", "=", "[", "self", ".", "att_dim", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "trainable", "=", "True", ")", "\n", "self", ".", "context_representation", ",", "self", ".", "att_1", "=", "self", ".", "attention_m", "(", "self", ".", "total_context", ")", "\n", "print", "(", "\"This is context rep: \"", ",", "self", ".", "context_representation", ".", "shape", ")", "\n", "", "", "if", "self", ".", "feature", ":", "\n", "                ", "self", ".", "features", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "self", ".", "feature_input_dim", "]", ")", "\n", "self", ".", "feature_embeddings", "=", "weight_variable", "(", "'feat_embds'", ",", "(", "self", ".", "feature_size", ",", "self", ".", "feature_dim", ")", ",", "True", ")", "\n", "self", ".", "feature_representation", "=", "tf", ".", "nn", ".", "dropout", "(", "\n", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "feature_embeddings", ",", "self", ".", "features", ")", ",", "1", ")", ",", "\n", "self", ".", "keep_prob", ")", "\n", "self", ".", "representation", "=", "tf", ".", "concat", "(", "[", "self", ".", "mention_representation_dropout", ",", "self", ".", "feature_representation", ",", "\n", "self", ".", "context_representation", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "self", ".", "representation", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "representation", "=", "tf", ".", "concat", "(", "\n", "[", "self", ".", "mention_representation_dropout", ",", "self", ".", "context_representation", "]", ",", "\n", "axis", "=", "1", ")", "\n", "", "self", ".", "V_1", "=", "weight_variable", "(", "'n_W1'", ",", "(", "self", ".", "rep_dim", ",", "1024", ")", ")", "\n", "self", ".", "V_2", "=", "weight_variable", "(", "'n_W2'", ",", "(", "1024", ",", "512", ")", ")", "\n", "self", ".", "V_3", "=", "weight_variable", "(", "'n_W3'", ",", "(", "512", ",", "self", ".", "target_dim", ")", ")", "\n", "self", ".", "y_1", "=", "tf", ".", "matmul", "(", "self", ".", "representation", ",", "self", ".", "V_1", ")", "\n", "self", ".", "y1", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "self", ".", "y_1", ",", "center", "=", "True", ",", "scale", "=", "True", ")", "\n", "self", ".", "y_1", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "y_1", ")", "\n", "self", ".", "y_2", "=", "tf", ".", "matmul", "(", "self", ".", "y_1", ",", "self", ".", "V_2", ")", "\n", "self", ".", "y_2", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "y_2", ")", "\n", "self", ".", "logit", "=", "tf", ".", "matmul", "(", "self", ".", "y_2", ",", "self", ".", "V_3", ")", "\n", "self", ".", "distribution", "=", "self", ".", "logit", "\n", "self", ".", "loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "losses", ".", "hinge_loss", "(", "logits", "=", "self", ".", "logit", ",", "labels", "=", "self", ".", "target", ")", ")", "\n", "\n", "", "if", "self", ".", "joint_opt", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "self", ".", "lambda_", "=", "1", "\n", "# if self.joint_optimizer:", "\n", "self", ".", "total_loss", "=", "self", ".", "cost", "+", "self", ".", "lambda_", "*", "self", ".", "loss", "\n", "self", ".", "global_step", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "learning_rate_1", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "learning_rate_joint", ",", "self", ".", "global_step", ",", "\n", "decay_steps", "=", "100000", ",", "\n", "decay_rate", "=", "0.5", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_joint", ")", "\n", "self", ".", "optim_total", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "total_loss", ",", "global_step", "=", "self", ".", "global_step", ")", "\n", "\n", "", "if", "self", ".", "task", "==", "'FNER'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "self", ".", "global_step_2", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "params_fner", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "gradients_fner", "=", "tf", ".", "gradients", "(", "self", ".", "loss", ",", "self", ".", "params_fner", ")", "\n", "self", ".", "clipped_gradients_fner", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "self", ".", "gradients_fner", ",", "self", ".", "max_norm", ")", "\n", "self", ".", "learning_rate_2", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "learning_rate_fner", ",", "self", ".", "global_step_2", ",", "\n", "decay_steps", "=", "4000", ",", "\n", "decay_rate", "=", "0.25", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer_fner", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_2", ")", "\n", "self", ".", "optim_fner", "=", "self", ".", "optimizer_fner", ".", "apply_gradients", "(", "zip", "(", "self", ".", "clipped_gradients_fner", ",", "self", ".", "params_fner", ")", ",", "\n", "global_step", "=", "self", ".", "global_step_2", ")", "\n", "", "if", "self", ".", "task", "==", "'KGE'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "# with tf.device('/gpu:0'):", "\n", "            ", "self", ".", "global_step_1", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "params_kge", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "gradients_kge", "=", "tf", ".", "gradients", "(", "self", ".", "cost", ",", "self", ".", "params_kge", ")", "\n", "self", ".", "clipped_gradients_kge", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "self", ".", "gradients_kge", ",", "self", ".", "max_norm", ")", "\n", "self", ".", "learning_rate_3", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "starter_learning_rate", ",", "self", ".", "global_step_1", ",", "\n", "decay_steps", "=", "10000", ",", "\n", "decay_rate", "=", "0.05", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer_kge", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_3", ")", "\n", "self", ".", "train_op", "=", "self", ".", "optimizer_kge", ".", "apply_gradients", "(", "zip", "(", "self", ".", "clipped_gradients_kge", ",", "self", ".", "params_kge", ")", ",", "\n", "global_step", "=", "self", ".", "global_step_1", ")", "\n", "\n", "", "self", ".", "fner_loss_summary", "=", "tf", ".", "summary", ".", "scalar", "(", "\"FNER_loss\"", ",", "self", ".", "loss", ")", "\n", "self", ".", "attn_sent_fner", "=", "tf", ".", "summary", ".", "histogram", "(", "\"FNER_attn_histogram\"", ",", "self", ".", "att_1", ")", "\n", "self", ".", "summary_op_fner", "=", "tf", ".", "summary", ".", "merge", "(", "[", "self", ".", "attn_sent_fner", ",", "self", ".", "fner_loss_summary", "]", ")", "\n", "\n", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "tf", ".", "trainable_variables", "(", ")", ")", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", "device_count", "=", "{", "'GPU'", ":", "1", "}", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "summary_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "self", ".", "session_graph", "+", "\"summary_log\"", ",", "self", ".", "session", ".", "graph", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "trainable_var", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "total_var_num", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_prod", "(", "v", ".", "shape", ")", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.attention_m": [[293, 303], ["tensorflow.nn.tanh", "tensorflow.tensordot", "tensorflow.nn.softmax", "print", "tensorflow.reduce_sum", "tensorflow.expand_dims", "tensorflow.tensordot"], "methods", ["None"], ["", "def", "attention_m", "(", "self", ",", "inputs", ",", "sentence", "=", "False", ")", ":", "\n", "        ", "v_in", "=", "tf", ".", "nn", ".", "tanh", "(", "tf", ".", "tensordot", "(", "inputs", ",", "self", ".", "w_omega", ",", "axes", "=", "1", ")", "+", "self", ".", "b_omega", ")", "\n", "v_out", "=", "tf", ".", "tensordot", "(", "v_in", ",", "self", ".", "u_omega", ",", "axes", "=", "1", ",", "name", "=", "'vu'", ")", "\n", "attn", "=", "tf", ".", "nn", ".", "softmax", "(", "v_out", ",", "name", "=", "'alphas'", ")", "\n", "attn_weight", "=", "inputs", "*", "tf", ".", "expand_dims", "(", "attn", ",", "-", "1", ")", "\n", "print", "(", "\"This is attn_weight: \"", ",", "attn_weight", ".", "shape", ")", "\n", "if", "sentence", ":", "\n", "            ", "return", "attn_weight", ",", "attn", "\n", "", "cont_rep", "=", "tf", ".", "reduce_sum", "(", "attn_weight", ",", "axis", "=", "1", ")", "\n", "return", "cont_rep", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.LSTM_Layer": [[304, 310], ["tensorflow.nn.bidirectional_dynamic_rnn"], "methods", ["None"], ["", "def", "LSTM_Layer", "(", "self", ",", "input_", ",", "time_major", "=", "False", ")", ":", "\n", "        ", "output_", ",", "final_sequence_", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "self", ".", "cell_fw", ",", "self", ".", "cell_bw", ",", "\n", "input_", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "time_major", "=", "time_major", ")", "\n", "return", "output_", ",", "final_sequence_", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.get_embed": [[311, 317], ["nn_model_auto_kge.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_embed", "(", "self", ",", "head_i", ",", "tail_i", ",", "rel_i", ")", ":", "\n", "        ", "feed", "=", "{", "\n", "self", ".", "head", ":", "head_i", ",", "self", ".", "tail", ":", "tail_i", ",", "self", ".", "rel", ":", "rel_i", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", ",", "self", ".", "embed_total", "]", ",", "\n", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.fit": [[318, 324], ["nn_model_auto_kge.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "sequence", ",", "y_out", ")", ":", "\n", "        ", "self", ".", "task", "=", "'KGE'", "\n", "feed", "=", "{", "self", ".", "y_true_1", ":", "y_out", ",", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "cost", ",", "self", ".", "train_op", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.predict_kge": [[325, 331], ["nn_model_auto_kge.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "predict_kge", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "self", ".", "task", "=", "'KGE'", "\n", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "output_2", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.train_FNER": [[332, 348], ["nn_model_auto_kge.NAM_Modified.session.run", "range"], "methods", ["None"], ["", "def", "train_FNER", "(", "self", ",", "left_in", ",", "right_in", ",", "target_data", ",", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "None", ",", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", ":", "\n", "        ", "self", ".", "task", "=", "'FNER'", "\n", "feed", "=", "{", "self", ".", "target", ":", "target_data", ",", "\n", "self", ".", "keep_prob", ":", "[", "0.5", "]", ",", "\n", "self", ".", "left_in", ":", "left_in", ",", "\n", "self", ".", "right_in", ":", "right_in", "}", "\n", "if", "self", ".", "feature", "==", "True", "and", "feature_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "features", "]", "=", "feature_data", "\n", "", "if", "context_data", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", ":", "\n", "                ", "feed", "[", "self", ".", "context", "[", "i", "]", "]", "=", "context_data", "[", ":", ",", "i", ",", ":", "]", "\n", "", "", "if", "mention_representation_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "mention_representation", "]", "=", "mention_representation_data", "\n", "", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "loss", ",", "self", ".", "optim_fner", ",", "self", ".", "summary_op_fner", ",", "self", ".", "global_step_2", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.error": [[349, 367], ["nn_model_auto_kge.NAM_Modified.session.run", "range"], "methods", ["None"], ["", "def", "error", "(", "self", ",", "left_in", ",", "right_in", ",", "target_data", ",", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "None", ",", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", ":", "\n", "        ", "self", ".", "task", "=", "'FNER'", "\n", "feed", "=", "{", "self", ".", "target", ":", "target_data", ",", "\n", "self", ".", "keep_prob", ":", "[", "1.0", "]", ",", "\n", "self", ".", "left_in", ":", "left_in", ",", "\n", "self", ".", "right_in", ":", "right_in", "}", "\n", "if", "self", ".", "feature", "==", "True", "and", "feature_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "features", "]", "=", "feature_data", "\n", "", "if", "self", ".", "doc_vec", "==", "True", "and", "doc_vector", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "doc_sequence", "]", "=", "doc_vector", "\n", "", "if", "context_data", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", ":", "\n", "                ", "feed", "[", "self", ".", "context", "[", "i", "]", "]", "=", "context_data", "[", ":", ",", "i", ",", ":", "]", "\n", "", "", "if", "mention_representation_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "mention_representation", "]", "=", "mention_representation_data", "\n", "", "return", "self", ".", "session", ".", "run", "(", "self", ".", "loss", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.predict": [[368, 385], ["nn_model_auto_kge.NAM_Modified.session.run", "range"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "left_in", ",", "right_in", ",", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "None", ",", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", ":", "\n", "        ", "self", ".", "task", "=", "'FNER'", "\n", "feed", "=", "{", "self", ".", "keep_prob", ":", "[", "1.0", "]", ",", "\n", "self", ".", "left_in", ":", "left_in", ",", "\n", "self", ".", "right_in", ":", "right_in", "}", "\n", "if", "self", ".", "feature", "==", "True", "and", "feature_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "features", "]", "=", "feature_data", "\n", "", "if", "self", ".", "doc_vec", "==", "True", "and", "doc_vector", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "doc_sequence", "]", "=", "doc_vector", "\n", "", "if", "context_data", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", ":", "\n", "                ", "feed", "[", "self", ".", "context", "[", "i", "]", "]", "=", "context_data", "[", ":", ",", "i", ",", ":", "]", "\n", "", "", "if", "mention_representation_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "mention_representation", "]", "=", "mention_representation_data", "\n", "", "return", "self", ".", "session", ".", "run", "(", "self", ".", "distribution", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.get_type_embed": [[386, 388], ["nn_model_auto_kge.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_type_embed", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "V_3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.load": [[389, 392], ["nn_model_auto_kge.NAM_Modified.saver.restore", "logging.info"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "location", ",", "model_name", ",", "exp_num", ")", ":", "\n", "        ", "self", ".", "saver", ".", "restore", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "'_'", "+", "exp_num", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model loaded from path: %s\"", "%", "location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.get_train_var": [[393, 395], ["nn_model_auto_kge.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_train_var", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "trainable_var", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.get_total_var_num": [[396, 398], ["nn_model_auto_kge.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_total_var_num", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "total_var_num", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.save": [[399, 402], ["nn_model_auto_kge.NAM_Modified.saver.save", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save"], ["", "def", "save", "(", "self", ",", "location", ",", "model_name", ",", "experiment_number", ")", ":", "\n", "        ", "save_path", "=", "self", ".", "saver", ".", "save", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "\"_\"", "+", "experiment_number", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model saved in path: %s\"", "%", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.NAM_Modified.close": [[403, 406], ["nn_model_auto_kge.NAM_Modified.session.close", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "session", ".", "close", "(", ")", "\n", "logging", ".", "info", "(", "\"Model session closed\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_auto_kge.weight_variable": [[10, 16], ["numpy.random.uniform", "tensorflow.constant_initializer", "tensorflow.get_variable", "numpy.zeros"], "function", ["None"], ["def", "weight_variable", "(", "name", ",", "shape", ",", "pad", "=", "False", ")", ":", "\n", "    ", "initial", "=", "np", ".", "random", ".", "uniform", "(", "-", "0.01", ",", "0.01", ",", "size", "=", "shape", ")", "\n", "if", "pad", ":", "\n", "        ", "initial", "[", "0", "]", "=", "np", ".", "zeros", "(", "shape", "[", "1", "]", ")", "\n", "", "initial", "=", "tf", ".", "constant_initializer", "(", "initial", ")", "\n", "return", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "shape", "=", "shape", ",", "initializer", "=", "initial", ",", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.__init__": [[10, 200], ["object.__init__", "kwargs[].astype", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.reduce_sum", "joint_model.NAM_Modified.session.run", "tensorflow.device", "tensorflow.get_variable", "tensorflow.device", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.concat", "tensorflow.placeholder", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.trainable_variables", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.device", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.squeeze", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.device", "tensorflow.device", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.softmax", "print", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.device", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "joint_model.NAM_Modified.optimizer_kge.apply_gradients", "tensorflow.device", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "joint_model.NAM_Modified.optimizer_lm.apply_gradients", "tensorflow.reduce_prod", "joint_model.NAM_Modified.LSTM_Layer", "tensorflow.concat", "tensorflow.concat", "logging.info", "joint_model.NAM_Modified.f_LSTM_Layer", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.nn.embedding_lookup", "tensorflow.reduce_sum", "joint_model.NAM_Modified.LSTM_Layer", "tensorflow.nn.embedding_lookup", "tensorflow.reduce_sum", "joint_model.NAM_Modified.f_LSTM_Layer", "tensorflow.matmul", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "zip", "zip", "tensorflow.trainable_variables", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.nn.l2_loss", "tensorflow.nn.weighted_cross_entropy_with_logits", "tensorflow.sign", "tensorflow.sign", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.sequence_mask", "tensorflow.sequence_mask", "tensorflow.shape", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.__init__", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.f_LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.f_LSTM_Layer"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "NAM_Modified", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lstm_layer", "=", "kwargs", "[", "'lstm_layer'", "]", "\n", "self", ".", "lstm_dim", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "\n", "self", ".", "balance", "=", "kwargs", "[", "'balance'", "]", "\n", "self", ".", "layer_type", "=", "kwargs", "[", "'layer_type'", "]", "\n", "self", ".", "decay", "=", "True", "\n", "self", ".", "starter_learning_rate", "=", "kwargs", "[", "'learning_rate_kge'", "]", "or", "1e-4", "\n", "self", ".", "learning_rate_lm", "=", "kwargs", "[", "'learning_rate_lm'", "]", "or", "1e-3", "\n", "self", ".", "hidden_units_1", "=", "kwargs", "[", "'hidden_units_1'", "]", "or", "1", "\n", "self", ".", "hidden_units_2", "=", "kwargs", "[", "'hidden_units_2'", "]", "or", "None", "\n", "self", ".", "hidden_units_3", "=", "kwargs", "[", "'hidden_units_3'", "]", "or", "None", "\n", "self", ".", "hidden_units_4", "=", "kwargs", "[", "'hidden_units_4'", "]", "or", "None", "\n", "self", ".", "drop_out", "=", "kwargs", "[", "'dropout'", "]", "\n", "self", ".", "final", "=", "kwargs", "[", "'final'", "]", "\n", "self", ".", "embedding_matrix", "=", "kwargs", "[", "'embedding_matrix'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "task", "=", "kwargs", "[", "'task'", "]", "\n", "self", ".", "vocabulary_size", "=", "self", ".", "embedding_matrix", ".", "shape", "[", "0", "]", "\n", "# self.embedding_matrix =", "\n", "self", ".", "max_norm", "=", "5.0", "\n", "if", "self", ".", "final", "and", "self", ".", "layer_type", "==", "'BiLSTM'", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "2", "\n", "", "elif", "self", ".", "layer_type", "==", "'BiLSTM'", "and", "not", "self", ".", "final", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "4", "\n", "", "else", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "\n", "", "with", "tf", ".", "device", "(", "'/cpu:0'", ")", ":", "\n", "            ", "self", ".", "embedding_mat", "=", "tf", ".", "get_variable", "(", "initializer", "=", "self", ".", "embedding_matrix", ",", "name", "=", "\"embedding_matrix\"", ",", "\n", "trainable", "=", "True", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "self", ".", "tail", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'y_true'", ")", "\n", "self", ".", "head", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'head_in'", ")", "\n", "self", ".", "rel", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "name", "=", "'tail_in'", ")", "\n", "self", ".", "y_true_1", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "name", "=", "\"y_true_values\"", ")", "\n", "self", ".", "sequence_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "(", "None", ",", "None", ",", "300", ")", ",", "name", "=", "\"sequence_in\"", ")", "\n", "self", ".", "embed_head", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "head", ")", "\n", "self", ".", "embed_tail", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "tail", ")", "\n", "self", ".", "embed_relation", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "rel", ")", "\n", "self", ".", "embed_total", "=", "tf", ".", "concat", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "sequence_sent", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'sentence_in'", ")", "\n", "self", ".", "task", "=", "\"INIT\"", "\n", "self", ".", "current_view", "=", "1", "\n", "self", ".", "lstm_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "lstm_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "drops_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "\n", "self", ".", "lstm_fw", "]", "\n", "self", ".", "drops_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "\n", "self", ".", "lstm_bw", "]", "\n", "self", ".", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_fw", ")", "\n", "self", ".", "cell_bw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_bw", ")", "\n", "self", ".", "weights", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"Wl1\"", ",", "shape", "=", "[", "self", ".", "Input_dimension", ",", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"Wl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", ",", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"Wl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", ",", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"Wl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", ",", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "}", "\n", "self", ".", "biases", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"bl1\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"bl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"bl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"bl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "}", "\n", "", "if", "self", ".", "task", "==", "'KGE'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "            ", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "                ", "if", "self", ".", "layer_type", "==", "'BiLSTM'", ":", "\n", "                    ", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "=", "self", ".", "LSTM_Layer", "(", "self", ".", "sequence_in", ",", "time_major", "=", "False", ")", "\n", "self", ".", "lstm_output_1", "=", "tf", ".", "concat", "(", "self", ".", "lstm_output_1", ",", "2", ")", "\n", "self", ".", "final_state_fw", ",", "self", ".", "final_state_bw", "=", "self", ".", "final_state_1", "\n", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "=", "self", ".", "final_state_fw", "[", "-", "1", "]", ".", "c", ",", "self", ".", "final_state_bw", "[", "-", "1", "]", ".", "c", "\n", "self", ".", "final_state_c", "=", "tf", ".", "concat", "(", "[", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "]", ",", "axis", "=", "1", ")", "\n", "logging", ".", "info", "(", "\"state 1 & 2 : {}{}\"", ".", "format", "(", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", ")", ")", "\n", "", "if", "self", ".", "layer_type", "==", "'LSTM'", ":", "\n", "                    ", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "=", "self", ".", "f_LSTM_Layer", "(", "self", ".", "sequence_in", ",", "time_major", "=", "False", ")", "\n", "self", ".", "final_state_c", ",", "self", ".", "final_state_h", "=", "self", ".", "final_state_1", "[", "-", "1", "]", ".", "c", ",", "self", ".", "final_state_1", "[", "-", "1", "]", ".", "h", "\n", "", "self", ".", "z0", "=", "self", ".", "final_state_c", "\n", "self", ".", "l1", "=", "tf", ".", "matmul", "(", "self", ".", "z0", ",", "self", ".", "weights", "[", "'l1'", "]", ")", "+", "self", ".", "biases", "[", "'l1'", "]", "\n", "self", ".", "z1", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l1", ")", "\n", "# self.z1 = tf.nn.dropout(self.z1, 0.1)", "\n", "self", ".", "l2", "=", "tf", ".", "matmul", "(", "self", ".", "z1", ",", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "self", ".", "biases", "[", "'l2'", "]", "\n", "self", ".", "z2", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l2", ")", "\n", "self", ".", "l3", "=", "tf", ".", "matmul", "(", "self", ".", "z2", ",", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "self", ".", "biases", "[", "'l3'", "]", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l3", ")", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "z3", ",", "0.2", ")", "\n", "self", ".", "l4", "=", "tf", ".", "matmul", "(", "self", ".", "z3", ",", "self", ".", "weights", "[", "'l4'", "]", ")", "+", "self", ".", "biases", "[", "'l4'", "]", "\n", "self", ".", "output", "=", "self", ".", "l4", "\n", "self", ".", "output", "=", "tf", ".", "squeeze", "(", "self", ".", "output", ")", "\n", "self", ".", "output_2", "=", "tf", ".", "nn", ".", "sigmoid", "(", "self", ".", "output", ")", "\n", "self", ".", "beta", "=", "0.01", "\n", "self", ".", "regularizer", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l1'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l4'", "]", ")", "\n", "self", ".", "regularizer", "=", "self", ".", "beta", "*", "self", ".", "regularizer", "\n", "self", ".", "cost", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "weighted_cross_entropy_with_logits", "(", "self", ".", "y_true_1", ",", "self", ".", "output", ",", "pos_weight", "=", "self", ".", "balance", ")", "+", "\n", "self", ".", "regularizer", ")", "\n", "\n", "", "", "if", "self", ".", "task", "==", "'LM'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "            ", "with", "tf", ".", "device", "(", "'/gpu:1'", ")", ":", "\n", "                ", "if", "self", ".", "layer_type", "==", "'BiLSTM'", ":", "\n", "                    ", "self", ".", "sentence_out", "=", "self", ".", "sequence_sent", "[", ":", ",", "1", ":", "-", "1", "]", "\n", "self", ".", "sentence_embed", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "sequence_sent", ")", "\n", "self", ".", "seq_len", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "sign", "(", "self", ".", "sequence_sent", ")", ",", "1", ")", "\n", "self", ".", "birnn_outputs", ",", "self", ".", "final_sentence", "=", "self", ".", "LSTM_Layer", "(", "input_", "=", "self", ".", "sentence_embed", ",", "\n", "time_major", "=", "False", ",", "\n", "sequence_length", "=", "self", ".", "seq_len", ")", "\n", "self", ".", "fw_outputs", "=", "self", ".", "birnn_outputs", "[", "0", "]", "[", ":", ",", ":", "-", "2", ",", ":", "]", "\n", "self", ".", "bw_outputs", "=", "self", ".", "birnn_outputs", "[", "1", "]", "[", ":", ",", "2", ":", ",", ":", "]", "\n", "self", ".", "final_output", "=", "self", ".", "fw_outputs", "[", ":", ",", "-", "1", ",", ":", "]", "\n", "", "if", "self", ".", "layer_type", "==", "'LSTM'", ":", "\n", "                    ", "self", ".", "sentence_in", "=", "self", ".", "sequence_sent", "[", ":", ",", ":", "-", "1", "]", "\n", "self", ".", "sentence_out", "=", "self", ".", "sequence_sent", "[", ":", ",", "1", ":", "]", "\n", "self", ".", "sentence_embed", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "sentence_in", ")", "\n", "self", ".", "seq_len", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "sign", "(", "self", ".", "sentence_in", ")", ",", "1", ")", "\n", "self", ".", "rnn_outputs", ",", "self", ".", "final_sentence", "=", "self", ".", "f_LSTM_Layer", "(", "input_", "=", "self", ".", "sentence_embed", ",", "time_major", "=", "False", ",", "sequence_length", "=", "self", ".", "seq_len", ")", "\n", "self", ".", "fw_outputs", "=", "self", ".", "rnn_outputs", "\n", "self", ".", "final_output", "=", "self", ".", "fw_outputs", "[", ":", ",", "-", "1", ",", ":", "]", "\n", "", "", "with", "tf", ".", "device", "(", "'/gpu:2'", ")", ":", "\n", "                ", "self", ".", "a", "=", "self", ".", "lstm_dim", "\n", "self", ".", "weights", "=", "tf", ".", "get_variable", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "(", "self", ".", "a", ",", "self", ".", "vocabulary_size", ")", ",", "\n", "name", "=", "\"softmax_weights\"", ")", "\n", "self", ".", "bias", "=", "tf", ".", "get_variable", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "self", ".", "vocabulary_size", ",", "name", "=", "'softmax_bias'", ")", "\n", "self", ".", "logits", "=", "tf", ".", "matmul", "(", "self", ".", "fw_outputs", ",", "self", ".", "weights", ")", "+", "self", ".", "bias", "\n", "self", ".", "next_output", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "matmul", "(", "self", ".", "final_output", ",", "self", ".", "weights", ")", "+", "self", ".", "bias", ")", "\n", "print", "(", "self", ".", "next_output", ".", "shape", ")", "\n", "\n", "self", ".", "pred_logits", "=", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "logits", ")", "\n", "if", "self", ".", "layer_type", "==", "'BiLSTM'", ":", "\n", "                    ", "self", ".", "loss", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "sequence_loss", "(", "logits", "=", "self", ".", "logits", ",", "\n", "targets", "=", "self", ".", "sentence_out", ",", "\n", "weights", "=", "tf", ".", "sequence_mask", "(", "\n", "self", ".", "seq_len", "-", "2", ",", "\n", "tf", ".", "shape", "(", "self", ".", "sequence_sent", ")", "[", "\n", "1", "]", "-", "2", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "average_across_timesteps", "=", "False", ",", "\n", "average_across_batch", "=", "False", ")", "\n", "", "if", "self", ".", "layer_type", "==", "'LSTM'", ":", "\n", "                    ", "self", ".", "loss", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "sequence_loss", "(", "logits", "=", "self", ".", "logits", ",", "\n", "targets", "=", "self", ".", "sentence_out", ",", "\n", "weights", "=", "tf", ".", "sequence_mask", "(", "\n", "self", ".", "seq_len", ",", "\n", "tf", ".", "shape", "(", "self", ".", "sequence_sent", ")", "[", "\n", "1", "]", "-", "1", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "average_across_timesteps", "=", "False", ",", "\n", "average_across_batch", "=", "False", ")", "\n", "", "self", ".", "output_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_mean", "(", "self", ".", "loss", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "self", ".", "prediction_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "reduce_sum", "(", "self", ".", "loss", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "if", "self", ".", "task", "==", "'KGE'", "or", "self", ".", "task", "==", "'INIT'", ":", "\n", "            ", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "                ", "self", ".", "global_step_2", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "params_kge", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "gradients_kge", "=", "tf", ".", "gradients", "(", "self", ".", "cost", ",", "self", ".", "params_kge", ")", "\n", "self", ".", "clipped_gradients_kge", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "self", ".", "gradients_kge", ",", "self", ".", "max_norm", ")", "\n", "self", ".", "learning_rate_2", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "starter_learning_rate", ",", "self", ".", "global_step_2", ",", "\n", "decay_steps", "=", "100000", ",", "\n", "decay_rate", "=", "0.05", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer_kge", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_2", ")", "\n", "self", ".", "train_op", "=", "self", ".", "optimizer_kge", ".", "apply_gradients", "(", "zip", "(", "self", ".", "clipped_gradients_kge", ",", "self", ".", "params_kge", ")", ",", "\n", "global_step", "=", "self", ".", "global_step_2", ")", "\n", "", "", "if", "self", ".", "task", "==", "'LM'", "or", "self", ".", "task", "==", "\"INIT\"", ":", "\n", "            ", "with", "tf", ".", "device", "(", "'/gpu:1'", ")", ":", "\n", "                ", "self", ".", "global_step_3", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "params_lm", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "gradients_lm", "=", "tf", ".", "gradients", "(", "self", ".", "output_loss", ",", "self", ".", "params_lm", ")", "\n", "self", ".", "clipped_gradients_lm", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "self", ".", "gradients_lm", ",", "self", ".", "max_norm", ")", "\n", "self", ".", "learning_rate_3", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "learning_rate_lm", ",", "self", ".", "global_step_3", ",", "\n", "decay_steps", "=", "100000", ",", "\n", "decay_rate", "=", "0.5", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer_lm", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_3", ")", "\n", "self", ".", "optim_lm", "=", "self", ".", "optimizer_lm", ".", "apply_gradients", "(", "zip", "(", "self", ".", "clipped_gradients_lm", ",", "self", ".", "params_lm", ")", ",", "\n", "global_step", "=", "self", ".", "global_step_3", ")", "\n", "\n", "", "", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "tf", ".", "trainable_variables", "(", ")", ")", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ",", "log_device_placement", "=", "True", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "total_var_num", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_prod", "(", "v", ".", "shape", ")", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.get_embed": [[201, 207], ["joint_model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_embed", "(", "self", ",", "head_i", ",", "tail_i", ",", "rel_i", ")", ":", "\n", "        ", "feed", "=", "{", "\n", "self", ".", "head", ":", "head_i", ",", "self", ".", "tail", ":", "tail_i", ",", "self", ".", "rel", ":", "rel_i", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", ",", "self", ".", "embed_total", "]", ",", "\n", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.LSTM_Layer": [[208, 214], ["tensorflow.nn.bidirectional_dynamic_rnn"], "methods", ["None"], ["", "def", "LSTM_Layer", "(", "self", ",", "input_", ",", "time_major", "=", "False", ",", "sequence_length", "=", "None", ")", ":", "\n", "        ", "lstm_out", ",", "final_out", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "self", ".", "cell_fw", ",", "self", ".", "cell_bw", ",", "\n", "input_", ",", "time_major", "=", "time_major", ",", "\n", "sequence_length", "=", "sequence_length", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "lstm_out", ",", "final_out", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.f_LSTM_Layer": [[215, 222], ["tensorflow.nn.dynamic_rnn"], "methods", ["None"], ["", "def", "f_LSTM_Layer", "(", "self", ",", "input_", ",", "time_major", "=", "False", ",", "sequence_length", "=", "None", ")", ":", "\n", "        ", "output_", ",", "final_sequence_", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "self", ".", "cell_fw", ",", "\n", "input_", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "sequence_length", "=", "sequence_length", ",", "\n", "time_major", "=", "time_major", ")", "\n", "return", "output_", ",", "final_sequence_", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.train_lang": [[224, 229], ["joint_model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "train_lang", "(", "self", ",", "sequence_in", ")", ":", "\n", "        ", "self", ".", "task", "=", "'LM'", "\n", "feed", "=", "{", "self", ".", "sequence_sent", ":", "sequence_in", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "output_loss", ",", "self", ".", "optim_lm", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.predict_lang": [[230, 234], ["joint_model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "predict_lang", "(", "self", ",", "sequence_in", ")", ":", "\n", "        ", "self", ".", "task", "=", "'LM'", "\n", "feed", "=", "{", "self", ".", "sequence_sent", ":", "sequence_in", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "prediction_loss", ",", "self", ".", "pred_logits", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.generate_lang": [[235, 238], ["joint_model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "generate_lang", "(", "self", ",", "sequence_in", ")", ":", "\n", "        ", "feed", "=", "{", "self", ".", "sequence_sent", ":", "sequence_in", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "next_output", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.debug": [[239, 245], ["joint_model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "debug", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "self", ".", "task", "=", "'KGE'", "\n", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.fit": [[246, 252], ["joint_model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "sequence", ",", "y_out", ")", ":", "\n", "        ", "self", ".", "task", "=", "'KGE'", "\n", "feed", "=", "{", "self", ".", "y_true_1", ":", "y_out", ",", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "cost", ",", "self", ".", "train_op", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.predict": [[253, 259], ["joint_model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "self", ".", "task", "=", "'KGE'", "\n", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "output_2", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.get_total_var_num": [[263, 265], ["joint_model.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_total_var_num", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "total_var_num", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.save": [[266, 269], ["joint_model.NAM_Modified.saver.save", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save"], ["", "def", "save", "(", "self", ",", "location", ",", "model_name", ",", "experiment_number", ")", ":", "\n", "        ", "save_path", "=", "self", ".", "saver", ".", "save", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "\"_\"", "+", "experiment_number", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model saved in path: %s\"", "%", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.close": [[270, 273], ["joint_model.NAM_Modified.session.close", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "session", ".", "close", "(", ")", "\n", "logging", ".", "info", "(", "\"Model session closed\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.joint_model.NAM_Modified.load": [[274, 277], ["joint_model.NAM_Modified.saver.restore", "logging.info"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "location", ",", "model_name", ",", "exp_num", ")", ":", "\n", "        ", "self", ".", "saver", ".", "restore", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "'_'", "+", "exp_num", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model loaded from path: %s\"", "%", "location", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.__init__": [[9, 103], ["kwargs[].astype", "tensorflow.placeholder", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.trainable_variables", "tensorflow.reduce_sum", "lm_model_1.Language_Model.session.run", "tensorflow.device", "tensorflow.get_variable", "tensorflow.device", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.device", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.device", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "lm_model_1.Language_Model.optimizer_lm.apply_gradients", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.nn.embedding_lookup", "tensorflow.reduce_sum", "lm_model_1.Language_Model.LSTM_Layer", "tensorflow.nn.embedding_lookup", "tensorflow.reduce_sum", "lm_model_1.Language_Model.f_LSTM_Layer", "tensorflow.matmul", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "zip", "tensorflow.reduce_prod", "tensorflow.sign", "tensorflow.sign", "tensorflow.matmul", "tensorflow.trainable_variables", "tensorflow.sequence_mask", "tensorflow.sequence_mask", "tensorflow.shape", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.f_LSTM_Layer"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "embedding_matrix", "=", "kwargs", "[", "'embedding_matrix'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "lstm_layer", "=", "kwargs", "[", "'lstm_layer'", "]", "\n", "self", ".", "dropout", "=", "kwargs", "[", "'dropout'", "]", "\n", "self", ".", "learning_rate", "=", "kwargs", "[", "'learning_rate'", "]", "\n", "self", ".", "lstm_dim", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "\n", "self", ".", "max_norm", "=", "5.0", "\n", "self", ".", "layer_type", "=", "kwargs", "[", "'layer_type'", "]", "\n", "self", ".", "vocabulary_size", "=", "self", ".", "embedding_matrix", ".", "shape", "[", "0", "]", "\n", "self", ".", "a", "=", "self", ".", "lstm_dim", "\n", "self", ".", "sequence_sent", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'sentence_con'", ")", "\n", "with", "tf", ".", "device", "(", "'/cpu:0'", ")", ":", "\n", "            ", "self", ".", "embedding_mat", "=", "tf", ".", "get_variable", "(", "dtype", "=", "tf", ".", "float32", ",", "initializer", "=", "self", ".", "embedding_matrix", ",", "\n", "name", "=", "'embedding_matrix'", ",", "trainable", "=", "False", ")", "\n", "", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "self", ".", "lstm_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "lstm_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "drops_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "input_keep_prob", "=", "1.0", ",", "output_keep_prob", "=", "self", ".", "dropout", ")", "for", "\n", "lstm", "in", "self", ".", "lstm_fw", "]", "\n", "self", ".", "drops_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "input_keep_prob", "=", "1.0", ",", "output_keep_prob", "=", "self", ".", "dropout", ")", "for", "\n", "lstm", "in", "self", ".", "lstm_bw", "]", "\n", "self", ".", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_fw", ")", "\n", "self", ".", "cell_bw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_bw", ")", "\n", "if", "self", ".", "layer_type", "==", "'BiLSTM'", ":", "\n", "                ", "self", ".", "sentence_out", "=", "self", ".", "sequence_sent", "[", ":", ",", "1", ":", "-", "1", "]", "\n", "self", ".", "sentence_embed", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "sequence_sent", ")", "\n", "self", ".", "seq_len", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "sign", "(", "self", ".", "sequence_sent", ")", ",", "1", ")", "\n", "self", ".", "birnn_outputs", ",", "self", ".", "final_sentence", "=", "self", ".", "LSTM_Layer", "(", "input_", "=", "self", ".", "sentence_embed", ",", "\n", "time_major", "=", "False", ",", "\n", "sequence_len", "=", "self", ".", "seq_len", ")", "\n", "self", ".", "fw_outputs", "=", "self", ".", "birnn_outputs", "[", "0", "]", "[", ":", ",", ":", "-", "2", ",", ":", "]", "\n", "self", ".", "bw_outputs", "=", "self", ".", "birnn_outputs", "[", "1", "]", "[", ":", ",", "2", ":", ",", ":", "]", "\n", "self", ".", "fw_outputs", "=", "self", ".", "birnn_outputs", "[", "0", "]", "[", ":", ",", ":", "-", "2", ",", ":", "]", "\n", "self", ".", "final_output", "=", "self", ".", "fw_outputs", "[", ":", ",", "-", "1", ",", ":", "]", "\n", "", "if", "self", ".", "layer_type", "==", "'LSTM'", ":", "\n", "                ", "self", ".", "sentence_in", "=", "self", ".", "sequence_sent", "[", ":", ",", ":", "-", "1", "]", "\n", "self", ".", "sentence_out", "=", "self", ".", "sequence_sent", "[", ":", ",", "1", ":", "]", "\n", "self", ".", "sentence_embed", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "sentence_in", ")", "\n", "self", ".", "seq_len", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "sign", "(", "self", ".", "sentence_in", ")", ",", "1", ")", "\n", "self", ".", "rnn_outputs", ",", "self", ".", "final_sentence", "=", "self", ".", "f_LSTM_Layer", "(", "input_", "=", "self", ".", "sentence_embed", ",", "time_major", "=", "False", ",", "\n", "sequence_length", "=", "self", ".", "seq_len", ")", "\n", "self", ".", "fw_outputs", "=", "self", ".", "rnn_outputs", "\n", "self", ".", "final_output", "=", "self", ".", "fw_outputs", "[", ":", ",", "-", "1", ",", ":", "]", "\n", "\n", "", "", "with", "tf", ".", "device", "(", "'/gpu:1'", ")", ":", "\n", "            ", "self", ".", "weights", "=", "tf", ".", "get_variable", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "(", "self", ".", "a", ",", "self", ".", "vocabulary_size", ")", ",", "\n", "name", "=", "\"softmax_weights\"", ")", "\n", "self", ".", "bias", "=", "tf", ".", "get_variable", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "self", ".", "vocabulary_size", ",", "name", "=", "'softmax_bias'", ")", "\n", "self", ".", "logits", "=", "tf", ".", "matmul", "(", "self", ".", "fw_outputs", ",", "self", ".", "weights", ")", "+", "self", ".", "bias", "\n", "self", ".", "next_output", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "matmul", "(", "self", ".", "final_output", ",", "self", ".", "weights", ")", "+", "self", ".", "bias", ")", "\n", "\n", "self", ".", "pred_logits", "=", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "logits", ")", "\n", "if", "self", ".", "layer_type", "==", "'BiLSTM'", ":", "\n", "                ", "self", ".", "loss", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "sequence_loss", "(", "logits", "=", "self", ".", "logits", ",", "\n", "targets", "=", "self", ".", "sentence_out", ",", "\n", "weights", "=", "tf", ".", "sequence_mask", "(", "\n", "self", ".", "seq_len", "-", "2", ",", "\n", "tf", ".", "shape", "(", "self", ".", "sequence_sent", ")", "[", "\n", "1", "]", "-", "2", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "average_across_timesteps", "=", "False", ",", "\n", "average_across_batch", "=", "False", ")", "\n", "", "if", "self", ".", "layer_type", "==", "'LSTM'", ":", "\n", "                ", "self", ".", "loss", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "sequence_loss", "(", "logits", "=", "self", ".", "logits", ",", "\n", "targets", "=", "self", ".", "sentence_out", ",", "\n", "weights", "=", "tf", ".", "sequence_mask", "(", "\n", "self", ".", "seq_len", ",", "\n", "tf", ".", "shape", "(", "self", ".", "sequence_sent", ")", "[", "\n", "1", "]", "-", "1", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "average_across_timesteps", "=", "False", ",", "\n", "average_across_batch", "=", "False", ")", "\n", "", "self", ".", "output_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_mean", "(", "self", ".", "loss", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "self", ".", "prediction_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "reduce_sum", "(", "self", ".", "loss", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "with", "tf", ".", "device", "(", "'/gpu:2'", ")", ":", "\n", "            ", "self", ".", "global_step_3", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "params_lm", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "gradients_lm", "=", "tf", ".", "gradients", "(", "self", ".", "output_loss", ",", "self", ".", "params_lm", ")", "\n", "self", ".", "clipped_gradients_lm", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "self", ".", "gradients_lm", ",", "self", ".", "max_norm", ")", "\n", "self", ".", "learning_rate_3", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "learning_rate", ",", "self", ".", "global_step_3", ",", "\n", "decay_steps", "=", "100000", ",", "\n", "decay_rate", "=", "0.98", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer_lm", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_3", ")", "\n", "self", ".", "optim", "=", "self", ".", "optimizer_lm", ".", "apply_gradients", "(", "zip", "(", "self", ".", "clipped_gradients_lm", ",", "self", ".", "params_lm", ")", ",", "\n", "global_step", "=", "self", ".", "global_step_3", ")", "\n", "", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ",", "log_device_placement", "=", "True", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "trainable_var", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "total_var_num", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_prod", "(", "v", ".", "shape", ")", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.LSTM_Layer": [[104, 111], ["tensorflow.nn.bidirectional_dynamic_rnn"], "methods", ["None"], ["", "def", "LSTM_Layer", "(", "self", ",", "input_", ",", "sequence_len", ",", "time_major", "=", "False", ")", ":", "\n", "        ", "output_", ",", "final_sequence_", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "self", ".", "cell_fw", ",", "self", ".", "cell_bw", ",", "\n", "input_", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "sequence_length", "=", "sequence_len", ",", "\n", "time_major", "=", "time_major", ")", "\n", "return", "output_", ",", "final_sequence_", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.f_LSTM_Layer": [[112, 119], ["tensorflow.nn.dynamic_rnn"], "methods", ["None"], ["", "def", "f_LSTM_Layer", "(", "self", ",", "input_", ",", "time_major", "=", "False", ",", "sequence_length", "=", "None", ")", ":", "\n", "        ", "output_", ",", "final_sequence_", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "self", ".", "cell_fw", ",", "\n", "input_", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "sequence_length", "=", "sequence_length", ",", "\n", "time_major", "=", "time_major", ")", "\n", "return", "output_", ",", "final_sequence_", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.train_lang": [[120, 124], ["lm_model_1.Language_Model.session.run"], "methods", ["None"], ["", "def", "train_lang", "(", "self", ",", "sequence_in", ")", ":", "\n", "        ", "feed", "=", "{", "self", ".", "sequence_sent", ":", "sequence_in", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "output_loss", ",", "self", ".", "optim", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.predict_lang": [[125, 128], ["lm_model_1.Language_Model.session.run"], "methods", ["None"], ["", "def", "predict_lang", "(", "self", ",", "sequence_in", ")", ":", "\n", "        ", "feed", "=", "{", "self", ".", "sequence_sent", ":", "sequence_in", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "prediction_loss", ",", "self", ".", "pred_logits", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.generate_lang": [[129, 132], ["lm_model_1.Language_Model.session.run"], "methods", ["None"], ["", "def", "generate_lang", "(", "self", ",", "sequence_in", ")", ":", "\n", "        ", "feed", "=", "{", "self", ".", "sequence_sent", ":", "sequence_in", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "next_output", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.load": [[133, 136], ["lm_model_1.Language_Model.saver.restore", "logging.info"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "location", ",", "model_name", ",", "exp_num", ")", ":", "\n", "        ", "self", ".", "saver", ".", "restore", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "'_'", "+", "exp_num", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model loaded from path: %s\"", "%", "location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.get_train_var": [[137, 139], ["lm_model_1.Language_Model.session.run"], "methods", ["None"], ["", "def", "get_train_var", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "trainable_var", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.get_total_var_num": [[140, 142], ["lm_model_1.Language_Model.session.run"], "methods", ["None"], ["", "def", "get_total_var_num", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "total_var_num", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_1.Language_Model.save": [[143, 146], ["lm_model_1.Language_Model.saver.save", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save"], ["", "def", "save", "(", "self", ",", "location", ",", "model_name", ",", "experiment_number", ")", ":", "\n", "        ", "save_path", "=", "self", ".", "saver", ".", "save", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "\"_\"", "+", "experiment_number", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model saved in path: %s\"", "%", "save_path", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.__init__": [[11, 79], ["kwargs[].astype", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.trainable_variables", "tensorflow.reduce_sum", "lm_model_lstm.Language_Model.session.run", "tensorflow.device", "tensorflow.get_variable", "tensorflow.device", "tensorflow.placeholder", "tensorflow.nn.embedding_lookup", "tensorflow.reduce_sum", "tensorflow.contrib.rnn.MultiRNNCell", "lm_model_lstm.Language_Model.LSTM_Layer", "tensorflow.device", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.nn.softmax", "tensorflow.nn.softmax", "tensorflow.contrib.seq2seq.sequence_loss", "tensorflow.reduce_mean", "tensorflow.reduce_sum", "tensorflow.device", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "lm_model_lstm.Language_Model.optimizer_lm.apply_gradients", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.sign", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "zip", "tensorflow.reduce_prod", "tensorflow.matmul", "tensorflow.sequence_mask", "tensorflow.trainable_variables", "tensorflow.shape"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "embedding_matrix", "=", "kwargs", "[", "'embedding_matrix'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "lstm_layer", "=", "kwargs", "[", "'lstm_layer'", "]", "\n", "self", ".", "dropout", "=", "kwargs", "[", "'dropout'", "]", "\n", "self", ".", "learning_rate", "=", "kwargs", "[", "'learning_rate'", "]", "\n", "self", ".", "lstm_dim", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "\n", "self", ".", "max_norm", "=", "5.0", "\n", "self", ".", "vocabulary_size", "=", "self", ".", "embedding_matrix", ".", "shape", "[", "0", "]", "\n", "self", ".", "a", "=", "self", ".", "lstm_dim", "\n", "with", "tf", ".", "device", "(", "'/cpu:0'", ")", ":", "\n", "            ", "self", ".", "embedding_mat", "=", "tf", ".", "get_variable", "(", "dtype", "=", "tf", ".", "float32", ",", "initializer", "=", "self", ".", "embedding_matrix", ",", "\n", "name", "=", "'embedding_matrix'", ",", "trainable", "=", "False", ")", "\n", "# self.embedding_mat = tf.get_variable(dtype=tf.float32, shape=(self.vocabulary_size, 100),", "\n", "#                                         name='embedding_matrix', trainable=False)", "\n", "\n", "", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "self", ".", "sentence_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'sentence_con'", ")", "\n", "self", ".", "sent_input", "=", "self", ".", "sentence_in", "[", ":", ",", ":", "-", "1", "]", "\n", "self", ".", "sentence_out", "=", "self", ".", "sentence_in", "[", ":", ",", "1", ":", "]", "\n", "self", ".", "sentence_embed", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "sent_input", ")", "\n", "self", ".", "lstm_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "seq_len", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "sign", "(", "self", ".", "sent_input", ")", ",", "1", ")", "\n", "self", ".", "drops_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "input_keep_prob", "=", "1.0", ",", "output_keep_prob", "=", "self", ".", "dropout", ")", "for", "\n", "lstm", "in", "self", ".", "lstm_fw", "]", "\n", "self", ".", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_fw", ")", "\n", "self", ".", "rnn_outputs", ",", "self", ".", "final_sentence", "=", "self", ".", "LSTM_Layer", "(", "input_", "=", "self", ".", "sentence_embed", ",", "\n", "sequence_len", "=", "self", ".", "seq_len", ",", "\n", "time_major", "=", "False", ")", "\n", "self", ".", "final_output", "=", "self", ".", "rnn_outputs", "[", ":", ",", "-", "1", ",", ":", "]", "\n", "", "with", "tf", ".", "device", "(", "'/gpu:1'", ")", ":", "\n", "            ", "self", ".", "weights", "=", "tf", ".", "get_variable", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "(", "self", ".", "a", ",", "self", ".", "vocabulary_size", ")", ",", "\n", "name", "=", "\"softmax_weights\"", ",", "trainable", "=", "True", ")", "\n", "self", ".", "bias", "=", "tf", ".", "get_variable", "(", "dtype", "=", "tf", ".", "float32", ",", "shape", "=", "self", ".", "vocabulary_size", ",", "name", "=", "'softmax_bias'", ",", "trainable", "=", "True", ")", "\n", "self", ".", "logits", "=", "tf", ".", "matmul", "(", "self", ".", "rnn_outputs", ",", "self", ".", "weights", ")", "+", "self", ".", "bias", "\n", "self", ".", "next_output", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "matmul", "(", "self", ".", "final_output", ",", "self", ".", "weights", ")", "+", "self", ".", "bias", ")", "\n", "\n", "self", ".", "pred_logits", "=", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "logits", ")", "\n", "self", ".", "loss", "=", "tf", ".", "contrib", ".", "seq2seq", ".", "sequence_loss", "(", "logits", "=", "self", ".", "logits", ",", "\n", "targets", "=", "self", ".", "sentence_out", ",", "\n", "weights", "=", "tf", ".", "sequence_mask", "(", "\n", "self", ".", "seq_len", ",", "\n", "tf", ".", "shape", "(", "self", ".", "sentence_in", ")", "[", "\n", "1", "]", "-", "1", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", ",", "\n", "average_across_timesteps", "=", "False", ",", "\n", "average_across_batch", "=", "False", ")", "\n", "self", ".", "output_loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "reduce_sum", "(", "self", ".", "loss", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "self", ".", "prediction_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "reduce_sum", "(", "self", ".", "loss", ",", "axis", "=", "1", ")", ",", "axis", "=", "0", ")", "\n", "", "with", "tf", ".", "device", "(", "'/gpu:0'", ")", ":", "\n", "            ", "self", ".", "global_step_3", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "params_lm", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "gradients_lm", "=", "tf", ".", "gradients", "(", "self", ".", "output_loss", ",", "self", ".", "params_lm", ")", "\n", "self", ".", "clipped_gradients_lm", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "self", ".", "gradients_lm", ",", "self", ".", "max_norm", ")", "\n", "self", ".", "learning_rate_3", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "learning_rate", ",", "self", ".", "global_step_3", ",", "\n", "decay_steps", "=", "100000", ",", "\n", "decay_rate", "=", "0.98", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer_lm", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_3", ")", "\n", "self", ".", "optim", "=", "self", ".", "optimizer_lm", ".", "apply_gradients", "(", "zip", "(", "self", ".", "clipped_gradients_lm", ",", "self", ".", "params_lm", ")", ",", "\n", "global_step", "=", "self", ".", "global_step_3", ")", "\n", "# self.optim = tf.train.AdamOptimizer(self.learning_rate).minimize(self.output_loss)", "\n", "", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", "allow_soft_placement", "=", "True", ",", "log_device_placement", "=", "True", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "trainable_var", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "total_var_num", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_prod", "(", "v", ".", "shape", ")", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.LSTM_Layer": [[80, 87], ["tensorflow.nn.dynamic_rnn"], "methods", ["None"], ["", "def", "LSTM_Layer", "(", "self", ",", "input_", ",", "sequence_len", ",", "time_major", "=", "False", ")", ":", "\n", "        ", "output_", ",", "final_sequence_", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "self", ".", "cell_fw", ",", "\n", "input_", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "sequence_length", "=", "sequence_len", ",", "\n", "time_major", "=", "time_major", ")", "\n", "return", "output_", ",", "final_sequence_", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.train_lang": [[88, 92], ["lm_model_lstm.Language_Model.session.run"], "methods", ["None"], ["", "def", "train_lang", "(", "self", ",", "sequence_in", ")", ":", "\n", "        ", "feed", "=", "{", "self", ".", "sentence_in", ":", "sequence_in", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "output_loss", ",", "self", ".", "optim", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.predict_lang": [[93, 96], ["lm_model_lstm.Language_Model.session.run"], "methods", ["None"], ["", "def", "predict_lang", "(", "self", ",", "sequence_in", ")", ":", "\n", "        ", "feed", "=", "{", "self", ".", "sentence_in", ":", "sequence_in", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "prediction_loss", ",", "self", ".", "pred_logits", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.generate_lang": [[97, 100], ["lm_model_lstm.Language_Model.session.run"], "methods", ["None"], ["", "def", "generate_lang", "(", "self", ",", "sequence_in", ")", ":", "\n", "        ", "feed", "=", "{", "self", ".", "sentence_in", ":", "sequence_in", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "next_output", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.load": [[101, 104], ["lm_model_lstm.Language_Model.saver.restore", "logging.info"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "location", ",", "model_name", ",", "exp_num", ")", ":", "\n", "        ", "self", ".", "saver", ".", "restore", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "'_'", "+", "exp_num", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model loaded from path: %s\"", "%", "location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.get_train_var": [[105, 107], ["lm_model_lstm.Language_Model.session.run"], "methods", ["None"], ["", "def", "get_train_var", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "trainable_var", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.get_total_var_num": [[108, 110], ["lm_model_lstm.Language_Model.session.run"], "methods", ["None"], ["", "def", "get_total_var_num", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "total_var_num", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.save": [[111, 114], ["lm_model_lstm.Language_Model.saver.save", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save"], ["", "def", "save", "(", "self", ",", "location", ",", "model_name", ",", "experiment_number", ")", ":", "\n", "        ", "save_path", "=", "self", ".", "saver", ".", "save", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "\"_\"", "+", "experiment_number", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model saved in path: %s\"", "%", "save_path", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.__init__": [[10, 133], ["object.__init__", "print", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.relu", "tensorflow.nn.dropout", "tensorflow.squeeze", "tensorflow.nn.sigmoid", "tensorflow.reduce_mean", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.trainable_variables", "tensorflow.reduce_sum", "kge_model_1.NAM_Modified.session.run", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.stack", "tensorflow.concat", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.nn.bidirectional_dynamic_rnn", "tensorflow.concat", "tensorflow.concat", "logging.info", "tensorflow.nn.dynamic_rnn", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.nn.l2_loss", "tensorflow.Variable", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "kge_model_1.NAM_Modified.optimizer.minimize", "tensorflow.train.AdamOptimizer", "kge_model_1.NAM_Modified.optimizer.minimize", "tensorflow.nn.l2_loss", "tensorflow.nn.weighted_cross_entropy_with_logits", "tensorflow.reduce_prod", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.nn.l2_loss", "tensorflow.nn.l2_loss", "tensorflow.trainable_variables"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "NAM_Modified", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "embedding_matrix", "=", "kwargs", "[", "'embedding_matrix'", "]", "\n", "self", ".", "lstm_layer", "=", "kwargs", "[", "'lstm_layer'", "]", "\n", "self", ".", "balance", "=", "kwargs", "[", "'balance'", "]", "\n", "self", ".", "drop_out", "=", "kwargs", "[", "'dropout'", "]", "\n", "self", ".", "layer_type", "=", "kwargs", "[", "'layer_type'", "]", "\n", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "2", "\n", "self", ".", "starter_learning_rate", "=", "kwargs", "[", "'learning_rate_kge'", "]", "\n", "self", ".", "hidden_units_1", "=", "kwargs", "[", "'hidden_units_1'", "]", "\n", "self", ".", "hidden_units_2", "=", "kwargs", "[", "'hidden_units_2'", "]", "\n", "self", ".", "hidden_units_3", "=", "kwargs", "[", "'hidden_units_3'", "]", "\n", "self", ".", "hidden_units_4", "=", "kwargs", "[", "'hidden_units_4'", "]", "\n", "self", ".", "final", "=", "kwargs", "[", "'final'", "]", "\n", "self", ".", "average", "=", "False", "\n", "self", ".", "decay", "=", "True", "\n", "print", "(", "self", ".", "final", ")", "\n", "if", "self", ".", "layer_type", "==", "'BiLSTM'", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "*", "2", "\n", "", "if", "self", ".", "layer_type", "==", "'LSTM'", ":", "\n", "            ", "self", ".", "Input_dimension", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "\n", "", "self", ".", "tail", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'y_true'", ")", "\n", "self", ".", "head", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'data_in'", ")", "\n", "self", ".", "rel", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int64", ",", "name", "=", "'tail_in'", ")", "\n", "self", ".", "y_true_1", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float64", ",", "name", "=", "\"y_true_values\"", ")", "\n", "self", ".", "sequence_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "float64", ",", "shape", "=", "(", "None", ",", "None", ",", "300", ")", ",", "name", "=", "\"sequence_in\"", ")", "\n", "self", ".", "embedding_mat", "=", "tf", ".", "get_variable", "(", "initializer", "=", "self", ".", "embedding_matrix", ",", "name", "=", "\"embedding_matrix\"", ",", "trainable", "=", "False", ")", "\n", "self", ".", "embed_head", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "head", ")", "\n", "if", "self", ".", "average", ":", "\n", "            ", "self", ".", "embed_head", "=", "tf", ".", "reduce_mean", "(", "self", ".", "embed_head", ",", "axis", "=", "1", ")", "\n", "", "self", ".", "embed_tail", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "tail", ")", "\n", "if", "self", ".", "average", ":", "\n", "            ", "self", ".", "embed_tail", "=", "tf", ".", "reduce_mean", "(", "self", ".", "embed_tail", ",", "axis", "=", "1", ")", "\n", "", "self", ".", "embed_relation", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "rel", ")", "\n", "if", "self", ".", "average", ":", "\n", "            ", "self", ".", "embed_relation", "=", "tf", ".", "reduce_mean", "(", "self", ".", "embed_relation", ",", "axis", "=", "1", ")", "\n", "", "if", "self", ".", "average", ":", "\n", "            ", "self", ".", "embed_total", "=", "tf", ".", "stack", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "embed_total", "=", "tf", ".", "concat", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_tail", "]", ",", "axis", "=", "1", ")", "\n", "", "self", ".", "session_type", "=", "\"Initialize\"", "\n", "self", ".", "current_view", "=", "1", "\n", "\n", "# with tf.variable_scope('LSTM'):", "\n", "self", ".", "lstm_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "lstm_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "drops_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "self", ".", "lstm_fw", "]", "\n", "self", ".", "drops_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "output_keep_prob", "=", "self", ".", "drop_out", ")", "for", "lstm", "in", "self", ".", "lstm_bw", "]", "\n", "self", ".", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_fw", ")", "\n", "self", ".", "cell_bw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_bw", ")", "\n", "if", "self", ".", "layer_type", "==", "'BiLSTM'", ":", "\n", "            ", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "self", ".", "cell_fw", ",", "self", ".", "cell_bw", ",", "\n", "self", ".", "sequence_in", ",", "dtype", "=", "tf", ".", "float64", ")", "\n", "self", ".", "lstm_output_1", "=", "tf", ".", "concat", "(", "self", ".", "lstm_output_1", ",", "-", "1", ")", "\n", "self", ".", "final_state_fw", ",", "self", ".", "final_state_bw", "=", "self", ".", "final_state_1", "\n", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "=", "self", ".", "final_state_fw", "[", "-", "1", "]", ".", "c", ",", "self", ".", "final_state_bw", "[", "-", "1", "]", ".", "c", "\n", "self", ".", "final_state_c", "=", "tf", ".", "concat", "(", "[", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", "]", ",", "axis", "=", "1", ")", "\n", "logging", ".", "info", "(", "\"state 1 & 2 : {}{}\"", ".", "format", "(", "self", ".", "final_state_c_fw", ",", "self", ".", "final_state_c_bw", ")", ")", "\n", "", "if", "self", ".", "layer_type", "==", "'LSTM'", ":", "\n", "            ", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "=", "tf", ".", "nn", ".", "dynamic_rnn", "(", "self", ".", "cell_fw", ",", "self", ".", "sequence_in", ",", "dtype", "=", "tf", ".", "float64", ")", "\n", "self", ".", "final_state_c", ",", "self", ".", "final_state_h", "=", "self", ".", "final_state_1", "[", "-", "1", "]", ".", "c", ",", "self", ".", "final_state_1", "[", "-", "1", "]", ".", "h", "\n", "", "self", ".", "weights", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"Wl1\"", ",", "shape", "=", "[", "self", ".", "Input_dimension", ",", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"Wl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", ",", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"Wl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", ",", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"Wl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", ",", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "}", "\n", "self", ".", "biases", "=", "{", "\n", "'l1'", ":", "tf", ".", "get_variable", "(", "\"bl1\"", ",", "shape", "=", "[", "self", ".", "hidden_units_1", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l2'", ":", "tf", ".", "get_variable", "(", "\"bl2\"", ",", "shape", "=", "[", "self", ".", "hidden_units_2", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l3'", ":", "tf", ".", "get_variable", "(", "\"bl3\"", ",", "shape", "=", "[", "self", ".", "hidden_units_3", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "'l4'", ":", "tf", ".", "get_variable", "(", "\"bl4\"", ",", "shape", "=", "[", "self", ".", "hidden_units_4", "]", ",", "dtype", "=", "tf", ".", "float64", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ",", "trainable", "=", "True", ")", ",", "\n", "\n", "}", "\n", "\n", "self", ".", "z0", "=", "self", ".", "final_state_c", "\n", "self", ".", "l1", "=", "tf", ".", "matmul", "(", "self", ".", "z0", ",", "self", ".", "weights", "[", "'l1'", "]", ")", "+", "self", ".", "biases", "[", "'l1'", "]", "\n", "self", ".", "z1", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l1", ")", "\n", "# self.z1 = tf.nn.dropout(self.z1, 0.1)", "\n", "self", ".", "l2", "=", "tf", ".", "matmul", "(", "self", ".", "z1", ",", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "self", ".", "biases", "[", "'l2'", "]", "\n", "self", ".", "z2", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l2", ")", "\n", "self", ".", "l3", "=", "tf", ".", "matmul", "(", "self", ".", "z2", ",", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "self", ".", "biases", "[", "'l3'", "]", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "l3", ")", "\n", "self", ".", "z3", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "z3", ",", "0.2", ")", "\n", "self", ".", "l4", "=", "tf", ".", "matmul", "(", "self", ".", "z3", ",", "self", ".", "weights", "[", "'l4'", "]", ")", "+", "self", ".", "biases", "[", "'l4'", "]", "\n", "self", ".", "output", "=", "self", ".", "l4", "\n", "self", ".", "output", "=", "tf", ".", "squeeze", "(", "self", ".", "output", ")", "\n", "self", ".", "output_2", "=", "tf", ".", "nn", ".", "sigmoid", "(", "self", ".", "output", ")", "\n", "self", ".", "beta", "=", "0.01", "\n", "self", ".", "regularizer", "=", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l3'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l2'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l1'", "]", ")", "+", "tf", ".", "nn", ".", "l2_loss", "(", "self", ".", "weights", "[", "'l4'", "]", ")", "\n", "self", ".", "regularizer", "=", "self", ".", "beta", "*", "self", ".", "regularizer", "\n", "self", ".", "cost", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "weighted_cross_entropy_with_logits", "(", "self", ".", "y_true_1", ",", "self", ".", "output", ",", "pos_weight", "=", "self", ".", "balance", ")", "+", "\n", "self", ".", "regularizer", ")", "\n", "if", "self", ".", "decay", ":", "\n", "            ", "self", ".", "global_step", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "learning_rate", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "starter_learning_rate", ",", "self", ".", "global_step", ",", "\n", "decay_steps", "=", "100000", ",", "\n", "decay_rate", "=", "0.5", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate", ")", "\n", "self", ".", "train_op", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "cost", ",", "global_step", "=", "self", ".", "global_step", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "starter_learning_rate", ")", "\n", "self", ".", "train_op", "=", "self", ".", "optimizer", ".", "minimize", "(", "self", ".", "cost", ",", "global_step", "=", "None", ")", "\n", "", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", "device_count", "=", "{", "'GPU'", ":", "1", "}", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "trainable_var", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "total_var_num", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_prod", "(", "v", ".", "shape", ")", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed": [[134, 140], ["kge_model_1.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_embed", "(", "self", ",", "head_i", ",", "tail_i", ",", "rel_i", ")", ":", "\n", "        ", "feed", "=", "{", "\n", "self", ".", "head", ":", "head_i", ",", "self", ".", "tail", ":", "tail_i", ",", "self", ".", "rel", ":", "rel_i", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "embed_head", ",", "self", ".", "embed_tail", ",", "self", ".", "embed_relation", ",", "self", ".", "embed_total", "]", ",", "\n", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.debug": [[141, 146], ["kge_model_1.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "debug", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "lstm_output_1", ",", "self", ".", "final_state_1", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.fit": [[147, 153], ["kge_model_1.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "fit", "(", "self", ",", "sequence", ",", "y_out", ")", ":", "\n", "        ", "self", ".", "session_type", "=", "\"train\"", "\n", "feed", "=", "{", "self", ".", "y_true_1", ":", "y_out", ",", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "cost", ",", "self", ".", "train_op", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.predict": [[154, 160], ["kge_model_1.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "sequence", ")", ":", "\n", "        ", "self", ".", "session_type", "=", "\"test\"", "\n", "feed", "=", "{", "\n", "self", ".", "sequence_in", ":", "sequence", "\n", "}", "\n", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "output_2", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.save": [[161, 165], ["kge_model_1.NAM_Modified.saver.save", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save"], ["", "def", "save", "(", "self", ",", "location", ",", "model_name", ",", "experiment_number", ")", ":", "\n", "        ", "save_path", "=", "self", ".", "saver", ".", "save", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "\"_\"", "+", "experiment_number", "+", "\".ckpt\"", ")", "\n", "\n", "logging", ".", "info", "(", "\"Model saved in path: %s\"", "%", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.load": [[166, 169], ["kge_model_1.NAM_Modified.saver.restore", "logging.info"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "location", ",", "model_name", ",", "exp_num", ")", ":", "\n", "        ", "self", ".", "saver", ".", "restore", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "'_'", "+", "exp_num", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model loaded from path: %s\"", "%", "location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_train_var": [[170, 172], ["kge_model_1.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_train_var", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "trainable_var", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_total_var_num": [[173, 175], ["kge_model_1.NAM_Modified.session.run"], "methods", ["None"], ["", "def", "get_total_var_num", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "total_var_num", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.close": [[176, 178], ["kge_model_1.NAM_Modified.session.close"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "session", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.__init__": [[48, 187], ["tensorflow.contrib.layers.xavier_initializer", "nn_model_fner.Model.embedding_matrix.astype", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.contrib.rnn.MultiRNNCell", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.dropout", "nn_model_fner.weight_variable", "nn_model_fner.weight_variable", "nn_model_fner.weight_variable", "tensorflow.matmul", "tensorflow.contrib.layers.batch_norm", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.nn.relu", "tensorflow.matmul", "tensorflow.reduce_mean", "tensorflow.Variable", "tensorflow.trainable_variables", "tensorflow.gradients", "tensorflow.clip_by_global_norm", "tensorflow.train.exponential_decay", "tensorflow.train.AdamOptimizer", "nn_model_fner.Model.optimizer_fner.apply_gradients", "tensorflow.summary.scalar", "tensorflow.summary.histogram", "tensorflow.summary.merge", "tensorflow.train.Saver", "tensorflow.ConfigProto", "tensorflow.global_variables_initializer", "tensorflow.Session", "tensorflow.summary.FileWriter", "tensorflow.Session", "tensorflow.trainable_variables", "tensorflow.reduce_sum", "nn_model_fner.Model.session.run", "tensorflow.placeholder", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.BasicLSTMCell", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.contrib.rnn.DropoutWrapper", "tensorflow.nn.embedding_lookup", "print", "tensorflow.nn.embedding_lookup", "print", "nn_model_fner.Model.LSTM_Layer", "nn_model_fner.Model.LSTM_Layer", "tensorflow.concat", "tensorflow.concat", "tensorflow.concat", "print", "tensorflow.placeholder", "nn_model_fner.weight_variable", "tensorflow.nn.dropout", "tensorflow.concat", "print", "tensorflow.concat", "tensorflow.losses.hinge_loss", "zip", "tensorflow.trainable_variables", "range", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "nn_model_fner.Model.attention_m", "print", "tensorflow.reduce_mean", "tensorflow.reduce_prod", "tensorflow.nn.embedding_lookup", "tensorflow.trainable_variables"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.attention_m"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "encoder", "=", "kwargs", "[", "'encoder'", "]", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", "\n", "hier", "=", "kwargs", "[", "'hier'", "]", "\n", "feature", "=", "kwargs", "[", "'feature'", "]", "\n", "type_", "=", "kwargs", "[", "'type'", "]", "\n", "self", ".", "max_norm", "=", "-", "1.0", "\n", "assert", "(", "encoder", "in", "[", "'hier-attention'", ",", "'attentive_figet'", "]", ")", "\n", "assert", "(", "type_", "in", "[", "\"figer\"", ",", "\"gillick\"", ",", "\"BBN\"", "]", ")", "\n", "self", ".", "type", "=", "type", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "hier", "=", "hier", "\n", "self", ".", "feature", "=", "feature", "\n", "self", ".", "task", "=", "'INIT'", "\n", "self", ".", "current_view", "=", "1", "\n", "self", ".", "doc_vec", "=", "kwargs", "[", "'doc_vec'", "]", "\n", "# Hyperparameters", "\n", "self", ".", "context_length", "=", "10", "\n", "self", ".", "emb_dim", "=", "300", "\n", "self", ".", "target_dim", "=", "113", "if", "type_", "==", "\"figer\"", "else", "89", "\n", "self", ".", "feature_size", "=", "600000", "if", "type_", "==", "\"figer\"", "else", "100000", "\n", "self", ".", "learning_rate_fner", "=", "kwargs", "[", "'learning_rate_fner'", "]", "\n", "self", ".", "lstm_layer", "=", "kwargs", "[", "'lstm_layer'", "]", "\n", "self", ".", "session_graph", "=", "kwargs", "[", "'session_graph'", "]", "\n", "self", ".", "lstm_dim", "=", "self", ".", "lstm_layer", "[", "-", "1", "]", "\n", "self", ".", "att_dim", "=", "300", "# dim of attention module", "\n", "self", ".", "feature_dim", "=", "50", "# dim of feature representation", "\n", "self", ".", "feature_input_dim", "=", "70", "\n", "self", ".", "coeff", "=", "0.1", "\n", "if", "encoder", "==", "\"averaging\"", ":", "\n", "            ", "self", ".", "rep_dim", "=", "self", ".", "emb_dim", "*", "3", "\n", "", "else", ":", "\n", "# self.rep_dim = self.lstm_dim * 2 + self.emb_dim", "\n", "            ", "self", ".", "rep_dim", "=", "self", ".", "lstm_dim", "*", "2", "+", "self", ".", "emb_dim", "\n", "", "if", "feature", ":", "\n", "            ", "self", ".", "rep_dim", "+=", "self", ".", "feature_dim", "\n", "", "if", "self", ".", "doc_vec", ":", "\n", "            ", "self", ".", "rep_dim", "+=", "self", ".", "doc_dim", "\n", "", "self", ".", "doc_weight", "=", "70", "\n", "# self.lstm_layer = kwargs['lstm_layer']", "\n", "self", ".", "Input_dimension", "=", "self", ".", "lstm_dim", "*", "2", "\n", "self", ".", "drop_out", "=", "kwargs", "[", "'dropout'", "]", "\n", "self", ".", "embedding_matrix", "=", "kwargs", "[", "'embedding_matrix'", "]", "\n", "self", ".", "embedding_matrix", "=", "self", ".", "embedding_matrix", ".", "astype", "(", "np", ".", "float32", ")", "\n", "# Place Holders", "\n", "self", ".", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "self", ".", "mention_representation", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "emb_dim", "]", ")", "\n", "# self.context = [tf.placeholder(tf.float32, [None, self.emb_dim]) for _ in range(self.context_length * 2 + 1)]", "\n", "self", ".", "context", "=", "[", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "emb_dim", "]", ")", "for", "_", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", "]", "\n", "self", ".", "left_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'left_context'", ")", "\n", "self", ".", "right_in", "=", "tf", ".", "placeholder", "(", "dtype", "=", "tf", ".", "int32", ",", "shape", "=", "(", "None", ",", "None", ")", ",", "name", "=", "'context_right'", ")", "\n", "self", ".", "embedding_mat", "=", "tf", ".", "get_variable", "(", "initializer", "=", "self", ".", "embedding_matrix", ",", "name", "=", "\"embedding_matrix\"", ",", "\n", "trainable", "=", "False", ")", "\n", "\n", "self", ".", "lstm_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "lstm_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "size", ")", "for", "size", "in", "self", ".", "lstm_layer", "]", "\n", "self", ".", "drops_fw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "input_keep_prob", "=", "1.0", ",", "output_keep_prob", "=", "self", ".", "keep_prob", ")", "for", "\n", "lstm", "in", "self", ".", "lstm_fw", "]", "\n", "self", ".", "drops_bw", "=", "[", "tf", ".", "contrib", ".", "rnn", ".", "DropoutWrapper", "(", "lstm", ",", "input_keep_prob", "=", "1.0", ",", "output_keep_prob", "=", "self", ".", "keep_prob", ")", "for", "\n", "lstm", "in", "self", ".", "lstm_bw", "]", "\n", "self", ".", "cell_fw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_fw", ")", "\n", "self", ".", "cell_bw", "=", "tf", ".", "contrib", ".", "rnn", ".", "MultiRNNCell", "(", "self", ".", "drops_bw", ")", "\n", "self", ".", "target", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "self", ".", "target_dim", "]", ")", "\n", "self", ".", "sentence_in", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "None", ",", "self", ".", "emb_dim", "]", ")", "\n", "self", ".", "mention_representation_dropout", "=", "tf", ".", "nn", ".", "dropout", "(", "self", ".", "mention_representation", ",", "self", ".", "keep_prob", ")", "\n", "\n", "if", "self", ".", "encoder", "==", "'hier-attention'", ":", "\n", "            ", "self", ".", "left_context", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "left_in", ")", "\n", "print", "(", "self", ".", "left_context", ")", "\n", "self", ".", "right_context", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "embedding_mat", ",", "self", ".", "right_in", ")", "\n", "print", "(", "self", ".", "right_context", ")", "\n", "self", ".", "out_context_left", ",", "self", ".", "final_left", "=", "self", ".", "LSTM_Layer", "(", "self", ".", "left_context", ",", "time_major", "=", "False", ")", "\n", "self", ".", "out_context_right", ",", "self", ".", "final_right", "=", "self", ".", "LSTM_Layer", "(", "self", ".", "right_context", ",", "time_major", "=", "False", ")", "\n", "self", ".", "out_context_left", "=", "tf", ".", "concat", "(", "self", ".", "out_context_left", ",", "2", ")", "\n", "self", ".", "out_context_right", "=", "tf", ".", "concat", "(", "self", ".", "out_context_right", ",", "2", ")", "\n", "self", ".", "total_context", "=", "tf", ".", "concat", "(", "[", "self", ".", "out_context_left", ",", "self", ".", "out_context_right", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "\"This is total context\"", ",", "self", ".", "total_context", ".", "shape", ")", "\n", "# self.total_context = tf.transpose(self.total_context, [1, 0, 2])", "\n", "# print(\"This is total context: \", self.total_context.shape)", "\n", "if", "self", ".", "encoder", "==", "'hier-attention'", ":", "\n", "                ", "self", ".", "w_omega", "=", "tf", ".", "get_variable", "(", "\"w_omega\"", ",", "shape", "=", "[", "self", ".", "lstm_dim", "*", "2", ",", "self", ".", "att_dim", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "trainable", "=", "True", ")", "\n", "self", ".", "b_omega", "=", "tf", ".", "get_variable", "(", "\"b_omega\"", ",", "shape", "=", "[", "self", ".", "att_dim", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ")", "\n", "self", ".", "u_omega", "=", "tf", ".", "get_variable", "(", "\"u_omega\"", ",", "shape", "=", "[", "self", ".", "att_dim", "]", ",", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ")", "\n", "self", ".", "context_representation", ",", "self", ".", "att_1", "=", "self", ".", "attention_m", "(", "self", ".", "total_context", ")", "\n", "print", "(", "\"This is context rep: \"", ",", "self", ".", "context_representation", ".", "shape", ")", "\n", "", "", "if", "feature", ":", "\n", "            ", "self", ".", "features", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "self", ".", "feature_input_dim", "]", ")", "\n", "self", ".", "feature_embeddings", "=", "weight_variable", "(", "'feat_embds'", ",", "(", "self", ".", "feature_size", ",", "self", ".", "feature_dim", ")", ",", "True", ")", "\n", "self", ".", "feature_representation", "=", "tf", ".", "nn", ".", "dropout", "(", "\n", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "feature_embeddings", ",", "self", ".", "features", ")", ",", "1", ")", ",", "self", ".", "keep_prob", ")", "\n", "self", ".", "representation", "=", "tf", ".", "concat", "(", "[", "self", ".", "mention_representation_dropout", ",", "self", ".", "feature_representation", ",", "\n", "self", ".", "context_representation", "]", ",", "axis", "=", "1", ")", "\n", "print", "(", "self", ".", "representation", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "representation", "=", "tf", ".", "concat", "(", "\n", "[", "self", ".", "mention_representation_dropout", ",", "self", ".", "context_representation", "]", ",", "\n", "axis", "=", "1", ")", "\n", "", "self", ".", "V_1", "=", "weight_variable", "(", "'n_W1'", ",", "(", "self", ".", "rep_dim", ",", "1024", ")", ")", "\n", "self", ".", "V_2", "=", "weight_variable", "(", "'n_W2'", ",", "(", "1024", ",", "512", ")", ")", "\n", "self", ".", "V_3", "=", "weight_variable", "(", "'n_W3'", ",", "(", "512", ",", "self", ".", "target_dim", ")", ")", "\n", "self", ".", "y_1", "=", "tf", ".", "matmul", "(", "self", ".", "representation", ",", "self", ".", "V_1", ")", "\n", "self", ".", "y1", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "self", ".", "y_1", ",", "center", "=", "True", ",", "scale", "=", "True", ")", "\n", "self", ".", "y_1", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "y_1", ")", "\n", "self", ".", "y_2", "=", "tf", ".", "matmul", "(", "self", ".", "y_1", ",", "self", ".", "V_2", ")", "\n", "self", ".", "y_2", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "y_2", ")", "\n", "self", ".", "logit", "=", "tf", ".", "matmul", "(", "self", ".", "y_2", ",", "self", ".", "V_3", ")", "\n", "self", ".", "distribution", "=", "self", ".", "logit", "\n", "# self.loss = tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(logits=self.logit,", "\n", "#                                                                    labels=self.target))", "\n", "self", ".", "loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "losses", ".", "hinge_loss", "(", "logits", "=", "self", ".", "logit", ",", "labels", "=", "self", ".", "target", ")", ")", "\n", "\n", "self", ".", "global_step_2", "=", "tf", ".", "Variable", "(", "0", ",", "trainable", "=", "False", ")", "\n", "self", ".", "params_fner", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "gradients_fner", "=", "tf", ".", "gradients", "(", "self", ".", "loss", ",", "self", ".", "params_fner", ")", "\n", "\n", "self", ".", "clipped_gradients_fner", ",", "_", "=", "tf", ".", "clip_by_global_norm", "(", "self", ".", "gradients_fner", ",", "self", ".", "max_norm", ")", "\n", "self", ".", "learning_rate_2", "=", "tf", ".", "train", ".", "exponential_decay", "(", "self", ".", "learning_rate_fner", ",", "self", ".", "global_step_2", ",", "\n", "decay_steps", "=", "1000", ",", "\n", "decay_rate", "=", "0.25", ",", "staircase", "=", "True", ")", "\n", "self", ".", "optimizer_fner", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "learning_rate_fner", ")", "\n", "self", ".", "optim_fner", "=", "self", ".", "optimizer_fner", ".", "apply_gradients", "(", "zip", "(", "self", ".", "clipped_gradients_fner", ",", "self", ".", "params_fner", ")", ",", "\n", "global_step", "=", "self", ".", "global_step_2", ")", "\n", "\n", "# if self.task == 'FNER' or self.task == 'INIT':", "\n", "self", ".", "fner_loss_summary", "=", "tf", ".", "summary", ".", "scalar", "(", "\"FNER_loss\"", ",", "self", ".", "loss", ")", "\n", "self", ".", "attn_sent_fner", "=", "tf", ".", "summary", ".", "histogram", "(", "\"FNER_attn_histogram\"", ",", "self", ".", "att_1", ")", "\n", "self", ".", "summary_op_fner", "=", "tf", ".", "summary", ".", "merge", "(", "[", "self", ".", "attn_sent_fner", ",", "self", ".", "fner_loss_summary", "]", ")", "\n", "\n", "self", ".", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "tf", ".", "trainable_variables", "(", ")", ")", "\n", "self", ".", "config", "=", "tf", ".", "ConfigProto", "(", "device_count", "=", "{", "'GPU'", ":", "1", "}", ")", "\n", "self", ".", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "summary_writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "self", ".", "session_graph", "+", "\"summary_log\"", ",", "self", ".", "session", ".", "graph", ")", "\n", "self", ".", "session", "=", "tf", ".", "Session", "(", "config", "=", "self", ".", "config", ")", "\n", "self", ".", "trainable_var", "=", "tf", ".", "trainable_variables", "(", ")", "\n", "self", ".", "total_var_num", "=", "tf", ".", "reduce_sum", "(", "[", "tf", ".", "reduce_prod", "(", "v", ".", "shape", ")", "for", "v", "in", "tf", ".", "trainable_variables", "(", ")", "]", ")", "\n", "self", ".", "session", ".", "run", "(", "self", ".", "init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.attention_m": [[188, 198], ["tensorflow.nn.tanh", "tensorflow.tensordot", "tensorflow.nn.softmax", "print", "tensorflow.reduce_sum", "tensorflow.expand_dims", "tensorflow.tensordot"], "methods", ["None"], ["", "def", "attention_m", "(", "self", ",", "inputs", ",", "sentence", "=", "False", ")", ":", "\n", "        ", "v_in", "=", "tf", ".", "nn", ".", "tanh", "(", "tf", ".", "tensordot", "(", "inputs", ",", "self", ".", "w_omega", ",", "axes", "=", "1", ")", "+", "self", ".", "b_omega", ")", "\n", "v_out", "=", "tf", ".", "tensordot", "(", "v_in", ",", "self", ".", "u_omega", ",", "axes", "=", "1", ",", "name", "=", "'vu'", ")", "\n", "attn", "=", "tf", ".", "nn", ".", "softmax", "(", "v_out", ",", "name", "=", "'alphas'", ")", "\n", "attn_weight", "=", "inputs", "*", "tf", ".", "expand_dims", "(", "attn", ",", "-", "1", ")", "\n", "print", "(", "\"This is attn_weight: \"", ",", "attn_weight", ".", "shape", ")", "\n", "if", "sentence", ":", "\n", "            ", "return", "attn_weight", ",", "attn", "\n", "", "cont_rep", "=", "tf", ".", "reduce_sum", "(", "attn_weight", ",", "axis", "=", "1", ")", "\n", "return", "cont_rep", ",", "attn", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.LSTM_Layer": [[199, 205], ["tensorflow.nn.bidirectional_dynamic_rnn"], "methods", ["None"], ["", "def", "LSTM_Layer", "(", "self", ",", "input_", ",", "time_major", "=", "False", ")", ":", "\n", "        ", "output_", ",", "final_sequence_", "=", "tf", ".", "nn", ".", "bidirectional_dynamic_rnn", "(", "self", ".", "cell_fw", ",", "self", ".", "cell_bw", ",", "\n", "input_", ",", "\n", "dtype", "=", "tf", ".", "float32", ",", "\n", "time_major", "=", "time_major", ")", "\n", "return", "output_", ",", "final_sequence_", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.train_FNER": [[206, 224], ["nn_model_fner.Model.session.run", "range"], "methods", ["None"], ["", "def", "train_FNER", "(", "self", ",", "left_in", ",", "right_in", ",", "target_data", ",", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "None", ",", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", ":", "\n", "        ", "self", ".", "task", "=", "'FNER'", "\n", "feed", "=", "{", "self", ".", "target", ":", "target_data", ",", "\n", "self", ".", "keep_prob", ":", "[", "0.5", "]", ",", "\n", "self", ".", "left_in", ":", "left_in", ",", "\n", "self", ".", "right_in", ":", "right_in", "}", "\n", "if", "self", ".", "feature", "==", "True", "and", "feature_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "features", "]", "=", "feature_data", "\n", "", "if", "self", ".", "doc_vec", "==", "True", "and", "doc_vector", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "doc_sequence", "]", "=", "doc_vector", "\n", "", "if", "context_data", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", ":", "\n", "                ", "feed", "[", "self", ".", "context", "[", "i", "]", "]", "=", "context_data", "[", ":", ",", "i", ",", ":", "]", "\n", "", "", "if", "mention_representation_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "mention_representation", "]", "=", "mention_representation_data", "\n", "", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "loss", ",", "self", ".", "optim_fner", ",", "self", ".", "summary_op_fner", ",", "self", ".", "global_step_2", "]", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.error": [[225, 243], ["nn_model_fner.Model.session.run", "range"], "methods", ["None"], ["", "def", "error", "(", "self", ",", "left_in", ",", "right_in", ",", "target_data", ",", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "None", ",", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", ":", "\n", "        ", "self", ".", "task", "=", "'FNER'", "\n", "feed", "=", "{", "self", ".", "target", ":", "target_data", ",", "\n", "self", ".", "keep_prob", ":", "[", "1.0", "]", ",", "\n", "self", ".", "left_in", ":", "left_in", ",", "\n", "self", ".", "right_in", ":", "right_in", "}", "\n", "if", "self", ".", "feature", "==", "True", "and", "feature_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "features", "]", "=", "feature_data", "\n", "", "if", "self", ".", "doc_vec", "==", "True", "and", "doc_vector", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "doc_sequence", "]", "=", "doc_vector", "\n", "", "if", "context_data", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", ":", "\n", "                ", "feed", "[", "self", ".", "context", "[", "i", "]", "]", "=", "context_data", "[", ":", ",", "i", ",", ":", "]", "\n", "", "", "if", "mention_representation_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "mention_representation", "]", "=", "mention_representation_data", "\n", "", "return", "self", ".", "session", ".", "run", "(", "self", ".", "loss", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict": [[244, 261], ["nn_model_fner.Model.session.run", "range"], "methods", ["None"], ["", "def", "predict", "(", "self", ",", "left_in", ",", "right_in", ",", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "None", ",", "feature_data", "=", "None", ",", "\n", "doc_vector", "=", "None", ")", ":", "\n", "        ", "self", ".", "task", "=", "'FNER'", "\n", "feed", "=", "{", "self", ".", "keep_prob", ":", "[", "1.0", "]", ",", "\n", "self", ".", "left_in", ":", "left_in", ",", "\n", "self", ".", "right_in", ":", "right_in", "}", "\n", "if", "self", ".", "feature", "==", "True", "and", "feature_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "features", "]", "=", "feature_data", "\n", "", "if", "self", ".", "doc_vec", "==", "True", "and", "doc_vector", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "doc_sequence", "]", "=", "doc_vector", "\n", "", "if", "context_data", "is", "not", "None", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "context_length", "*", "2", "+", "1", ")", ":", "\n", "                ", "feed", "[", "self", ".", "context", "[", "i", "]", "]", "=", "context_data", "[", ":", ",", "i", ",", ":", "]", "\n", "", "", "if", "mention_representation_data", "is", "not", "None", ":", "\n", "            ", "feed", "[", "self", ".", "mention_representation", "]", "=", "mention_representation_data", "\n", "", "return", "self", ".", "session", ".", "run", "(", "self", ".", "distribution", ",", "feed_dict", "=", "feed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.get_type_embed": [[262, 264], ["nn_model_fner.Model.session.run"], "methods", ["None"], ["", "def", "get_type_embed", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "V_3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load": [[266, 269], ["nn_model_fner.Model.saver.restore", "logging.info"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "location", ",", "model_name", ",", "exp_num", ")", ":", "\n", "        ", "self", ".", "saver", ".", "restore", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "'_'", "+", "exp_num", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model loaded from path: %s\"", "%", "location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.get_train_var": [[270, 272], ["nn_model_fner.Model.session.run"], "methods", ["None"], ["", "def", "get_train_var", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "trainable_var", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.get_total_var_num": [[273, 275], ["nn_model_fner.Model.session.run"], "methods", ["None"], ["", "def", "get_total_var_num", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "session", ".", "run", "(", "[", "self", ".", "total_var_num", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save": [[276, 279], ["nn_model_fner.Model.saver.save", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.save"], ["", "def", "save", "(", "self", ",", "location", ",", "model_name", ",", "experiment_number", ")", ":", "\n", "        ", "save_path", "=", "self", ".", "saver", ".", "save", "(", "self", ".", "session", ",", "location", "+", "model_name", "+", "\"_\"", "+", "experiment_number", "+", "\".ckpt\"", ")", "\n", "logging", ".", "info", "(", "\"Model saved in path: %s\"", "%", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close": [[280, 283], ["nn_model_fner.Model.session.close", "logging.info"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "session", ".", "close", "(", ")", "\n", "logging", ".", "info", "(", "\"Model session closed\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.create_prior": [[14, 37], ["numpy.zeros", "open", "open", "line.strip().split", "len", "line.strip().split", "enumerate", "numpy.array", "label.split", "line.strip", "line.strip", "range", "code.append", "code.append", "len", "int"], "function", ["None"], ["def", "create_prior", "(", "label2id_file", ")", ":", "\n", "    ", "nodes", "=", "[", "]", "\n", "num_label", "=", "0", "\n", "with", "open", "(", "label2id_file", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "num_label", "+=", "1", "\n", "(", "id", ",", "label", ",", "freq", ")", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "nodes", "+=", "[", "label", "]", "\n", "\n", "", "", "prior", "=", "np", ".", "zeros", "(", "(", "num_label", ",", "len", "(", "nodes", ")", ")", ")", "\n", "with", "open", "(", "label2id_file", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "(", "id", ",", "label", ",", "freq", ")", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "temp_", "=", "label", ".", "split", "(", "\"/\"", ")", "[", "1", ":", "]", "\n", "temp", "=", "[", "\"/\"", "+", "\"/\"", ".", "join", "(", "temp_", "[", ":", "q", "+", "1", "]", ")", "for", "q", "in", "range", "(", "len", "(", "temp_", ")", ")", "]", "\n", "code", "=", "[", "]", "\n", "for", "i", ",", "node", "in", "enumerate", "(", "nodes", ")", ":", "\n", "                ", "if", "node", "in", "temp", ":", "\n", "                    ", "code", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "code", ".", "append", "(", "0", ")", "\n", "", "", "prior", "[", "int", "(", "id", ")", ",", ":", "]", "=", "np", ".", "array", "(", "code", ")", "\n", "", "", "return", "prior", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.weight_variable": [[39, 45], ["numpy.random.uniform", "tensorflow.constant_initializer", "tensorflow.get_variable", "numpy.zeros"], "function", ["None"], ["", "def", "weight_variable", "(", "name", ",", "shape", ",", "pad", "=", "False", ")", ":", "\n", "    ", "initial", "=", "np", ".", "random", ".", "uniform", "(", "-", "0.01", ",", "0.01", ",", "size", "=", "shape", ")", "\n", "if", "pad", ":", "\n", "        ", "initial", "[", "0", "]", "=", "np", ".", "zeros", "(", "shape", "[", "1", "]", ")", "\n", "", "initial", "=", "tf", ".", "constant_initializer", "(", "initial", ")", "\n", "return", "tf", ".", "get_variable", "(", "name", "=", "name", ",", "shape", "=", "shape", ",", "initializer", "=", "initial", ",", "dtype", "=", "tf", ".", "float32", ",", "trainable", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dicts.load_X2id": [[9, 22], ["open", "line.strip().split", "print", "int", "line.strip", "int", "int"], "function", ["None"], ["def", "load_X2id", "(", "file_path", ")", ":", "\n", "    ", "X2id", "=", "{", "}", "\n", "id2X", "=", "{", "}", "\n", "with", "open", "(", "file_path", ")", "as", "f", ":", "\n", "        ", "place_holder", "=", "[", "'PAD'", ",", "'<EOS>'", ",", "'<BOS>'", ",", "'UNK'", "]", "\n", "for", "line", "in", "f", ":", "\n", "            ", "temp", "=", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "int", "(", "temp", "[", "-", "1", "]", ")", ">", "1", "or", "temp", "[", "1", "]", "in", "place_holder", ":", "\n", "                ", "id", ",", "X", "=", "temp", "[", "0", "]", ",", "temp", "[", "1", "]", "\n", "print", "(", "id", ",", "X", ")", "\n", "X2id", "[", "X", "]", "=", "int", "(", "id", ")", "\n", "id2X", "[", "int", "(", "id", ")", "]", "=", "X", "\n", "", "", "", "return", "X2id", ",", "id2X", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dicts.load_word2vec": [[24, 34], ["open", "line.split", "numpy.array", "float"], "function", ["None"], ["", "def", "load_word2vec", "(", "file_path", ")", ":", "\n", "    ", "word2vec", "=", "{", "}", "\n", "with", "open", "(", "file_path", ")", "as", "lines", ":", "\n", "        ", "for", "line", "in", "lines", ":", "\n", "            ", "split", "=", "line", ".", "split", "(", "\" \"", ")", "\n", "word", "=", "split", "[", "0", "]", "\n", "vector_strings", "=", "split", "[", "1", ":", "]", "\n", "vector", "=", "[", "float", "(", "num", ")", "for", "num", "in", "vector_strings", "]", "\n", "word2vec", "[", "word", "]", "=", "np", ".", "array", "(", "vector", ")", "\n", "", "", "return", "word2vec", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dicts.create_id2vec": [[36, 50], ["len", "len", "print", "numpy.zeros", "word2id.items", "word2id.keys", "len", "print", "print"], "function", ["None"], ["", "def", "create_id2vec", "(", "word2id", ",", "word2vec", ")", ":", "\n", "    ", "unk_vec", "=", "word2vec", "[", "\"unk\"", "]", "\n", "dim_of_vector", "=", "len", "(", "unk_vec", ")", "\n", "num_of_tokens", "=", "len", "(", "word2id", ".", "keys", "(", ")", ")", "\n", "print", "(", "len", "(", "word2id", ")", ")", "\n", "id2vec", "=", "np", ".", "zeros", "(", "(", "num_of_tokens", "+", "1", ",", "dim_of_vector", ")", ")", "\n", "for", "word", ",", "t_id", "in", "word2id", ".", "items", "(", ")", ":", "\n", "        ", "if", "word", "==", "'PAD'", ":", "\n", "            ", "print", "(", "True", ")", "\n", "continue", "\n", "", "else", ":", "\n", "            ", "print", "(", "word", ",", "t_id", ")", "\n", "id2vec", "[", "t_id", ",", ":", "]", "=", "word2vec", "[", "word", "]", "if", "word", "in", "word2vec", "else", "unk_vec", "\n", "", "", "return", "id2vec", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dicts.main": [[52, 68], ["print", "create_dicts.load_X2id", "print", "create_dicts.load_X2id", "print", "create_dicts.load_X2id", "print", "create_dicts.load_word2vec", "print", "create_dicts.create_id2vec", "print", "print", "sklearn.externals.joblib.dump"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dicts.load_X2id", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dicts.load_X2id", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dicts.load_X2id", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.load_word2vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.create_id2vec"], ["", "def", "main", "(", ")", ":", "\n", "    ", "print", "(", "\"word2id...\"", ")", "\n", "word2id", ",", "id2word", "=", "load_X2id", "(", "sys", ".", "argv", "[", "1", "]", ")", "\n", "print", "(", "\"feature2id...\"", ")", "\n", "feature2id", ",", "id2feature", "=", "load_X2id", "(", "sys", ".", "argv", "[", "2", "]", ")", "\n", "print", "(", "\"label2id...\"", ")", "\n", "label2id", ",", "id2label", "=", "load_X2id", "(", "sys", ".", "argv", "[", "3", "]", ")", "\n", "print", "(", "\"word2vec...\"", ")", "\n", "word2vec", "=", "load_word2vec", "(", "sys", ".", "argv", "[", "4", "]", ")", "\n", "print", "(", "\"id2vec...\"", ")", "\n", "id2vec", "=", "create_id2vec", "(", "word2id", ",", "word2vec", ")", "\n", "print", "(", "\"done!\"", ")", "\n", "dicts", "=", "{", "\"id2vec\"", ":", "id2vec", ",", "\"word2id\"", ":", "word2id", ",", "\"id2word\"", ":", "id2word", ",", "\"label2id\"", ":", "label2id", ",", "\"id2label\"", ":", "id2label", ",", "\n", "\"feature2id\"", ":", "feature2id", ",", "\"id2feature\"", ":", "id2feature", "}", "\n", "print", "(", "\"dicts save...\"", ")", "\n", "joblib", ".", "dump", "(", "dicts", ",", "sys", ".", "argv", "[", "5", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset_new.create_dataset": [[9, 52], ["len", "sum", "numpy.zeros", "numpy.array", "label2id.values", "open", "numpy.array", "line.strip().split", "gensim.utils.simple_preprocess", "np.array.append", "len", "sentence_words.append", "sentence_in.append", "numpy.array", "open", "len", "labels.split", "words.split", "features.split", "Doc_2_vec_model.infer_vector", "int", "int", "print", "line.split", "line.strip", "range", "len"], "function", ["None"], ["def", "create_dataset", "(", "corpus_path", ",", "label2id", ",", "word2id", ",", "feature2id", ",", "Doc_2_vec_model", ")", ":", "\n", "    ", "num_of_labels", "=", "len", "(", "label2id", ".", "values", "(", ")", ")", "\n", "num_of_samples", "=", "sum", "(", "1", "for", "line", "in", "open", "(", "corpus_path", ")", ")", "\n", "storage", "=", "[", "]", "\n", "data", "=", "np", ".", "zeros", "(", "(", "num_of_samples", ",", "4", "+", "70", "+", "num_of_labels", ")", ",", "\"int32\"", ")", "\n", "s_start_pointer", "=", "0", "\n", "num", "=", "0", "\n", "doc_2_vector", "=", "[", "]", "\n", "sentence_in", "=", "[", "]", "\n", "sentence_words", "=", "[", "]", "\n", "with", "open", "(", "corpus_path", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "if", "len", "(", "line", ".", "split", "(", "\"\\t\"", ")", ")", "!=", "5", ":", "\n", "                ", "continue", "\n", "", "(", "start", ",", "end", ",", "words", ",", "labels", ",", "features", ")", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "tokens", "=", "gensim", ".", "utils", ".", "simple_preprocess", "(", "line", ")", "\n", "labels", ",", "words", ",", "features", "=", "labels", ".", "split", "(", ")", ",", "words", ".", "split", "(", ")", ",", "features", ".", "split", "(", ")", "\n", "word_list", "=", "[", "\"<BOS>\"", "]", "+", "words", "+", "[", "\"<EOS>\"", "]", "\n", "doc_2_vector", ".", "append", "(", "Doc_2_vec_model", ".", "infer_vector", "(", "tokens", ")", ")", "\n", "length", "=", "len", "(", "words", ")", "\n", "start", ",", "end", "=", "int", "(", "start", ")", ",", "int", "(", "end", ")", "\n", "labels_code", "=", "[", "0", "for", "i", "in", "range", "(", "num_of_labels", ")", "]", "\n", "for", "label", "in", "labels", ":", "\n", "                ", "if", "label", "in", "label2id", ":", "\n", "                    ", "labels_code", "[", "label2id", "[", "label", "]", "]", "=", "1", "\n", "", "", "words_code", "=", "[", "word2id", "[", "word", "]", "if", "word", "in", "word2id", "else", "word2id", "[", "\"UNK\"", "]", "for", "word", "in", "words", "]", "\n", "sentence_words", ".", "append", "(", "word_list", ")", "\n", "word_id_list", "=", "[", "word2id", "[", "word", "]", "if", "word", "in", "word2id", "else", "word2id", "[", "\"UNK\"", "]", "for", "word", "in", "word_list", "]", "\n", "sentence_in", ".", "append", "(", "word_id_list", ")", "\n", "features_code", "=", "[", "feature2id", "[", "feature", "]", "if", "feature", "in", "feature2id", "else", "feature2id", "[", "\"UNK\"", "]", "for", "feature", "in", "features", "]", "\n", "storage", "+=", "words_code", "\n", "data", "[", "num", ",", "0", "]", "=", "s_start_pointer", "# s_start", "\n", "data", "[", "num", ",", "1", "]", "=", "s_start_pointer", "+", "length", "# s_end", "\n", "data", "[", "num", ",", "2", "]", "=", "s_start_pointer", "+", "start", "# e_start", "\n", "data", "[", "num", ",", "3", "]", "=", "s_start_pointer", "+", "end", "# e_end", "\n", "data", "[", "num", ",", "4", ":", "4", "+", "len", "(", "features_code", ")", "]", "=", "np", ".", "array", "(", "features_code", ")", "\n", "data", "[", "num", ",", "74", ":", "]", "=", "labels_code", "\n", "s_start_pointer", "+=", "length", "\n", "num", "+=", "1", "\n", "if", "num", "%", "100000", "==", "0", ":", "\n", "                ", "print", "(", "num", ")", "\n", "", "", "", "doc_2_vector", "=", "np", ".", "array", "(", "doc_2_vector", ")", "\n", "return", "np", ".", "array", "(", "storage", ",", "\"int32\"", ")", ",", "data", ",", "doc_2_vector", ",", "sentence_in", ",", "sentence_words", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset_new.main": [[54, 66], ["sklearn.externals.joblib.load", "gensim.models.doc2vec.Doc2Vec.load", "create_dataset_new.create_dataset", "sklearn.externals.joblib.dump"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset_new.create_dataset"], ["", "def", "main", "(", ")", ":", "\n", "    ", "dicts", "=", "joblib", ".", "load", "(", "sys", ".", "argv", "[", "1", "]", ")", "\n", "\n", "label2id", "=", "dicts", "[", "\"label2id\"", "]", "\n", "word2id", "=", "dicts", "[", "\"word2id\"", "]", "\n", "feature2id", "=", "dicts", "[", "\"feature2id\"", "]", "\n", "Doc_2_vec_model", "=", "gensim", ".", "models", ".", "doc2vec", ".", "Doc2Vec", ".", "load", "(", "sys", ".", "argv", "[", "4", "]", ")", "\n", "storage", ",", "data", ",", "doc_2_vec", ",", "sentences", ",", "sentence_w", "=", "create_dataset", "(", "sys", ".", "argv", "[", "2", "]", ",", "label2id", ",", "word2id", ",", "feature2id", ",", "\n", "Doc_2_vec_model", ")", "\n", "dataset", "=", "{", "\"storage\"", ":", "storage", ",", "\"data\"", ":", "data", ",", "\"Doc2Vec\"", ":", "doc_2_vec", ",", "\"sentence_in\"", ":", "sentences", ",", "\n", "\"sentence_words\"", ":", "sentence_w", "}", "\n", "joblib", ".", "dump", "(", "dataset", ",", "sys", ".", "argv", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_X2id.main": [[6, 44], ["create_X2id.main._local"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "word2freq", "=", "{", "}", "\n", "feature2freq", "=", "{", "}", "\n", "label2freq", "=", "{", "}", "\n", "with", "open", "(", "sys", ".", "argv", "[", "1", "]", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "temp", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "labels", ",", "features", ",", "words", "=", "temp", "[", "3", "]", ",", "temp", "[", "4", "]", ",", "temp", "[", "2", "]", "\n", "for", "label", "in", "labels", ".", "split", "(", ")", ":", "\n", "                ", "if", "label", "not", "in", "label2freq", ":", "\n", "                    ", "label2freq", "[", "label", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "label2freq", "[", "label", "]", "+=", "1", "\n", "", "", "for", "word", "in", "words", ".", "split", "(", ")", ":", "\n", "                ", "if", "word", "not", "in", "word2freq", ":", "\n", "                    ", "word2freq", "[", "word", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "word2freq", "[", "word", "]", "+=", "1", "\n", "# print(word2freq[word])", "\n", "", "", "for", "feature", "in", "features", ".", "split", "(", ")", ":", "\n", "                ", "if", "feature", "not", "in", "feature2freq", ":", "\n", "                    ", "feature2freq", "[", "feature", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "feature2freq", "[", "feature", "]", "+=", "1", "\n", "\n", "", "", "", "", "def", "_local", "(", "file_path", ",", "X2freq", ",", "start_idx", "=", "0", ",", "word2id", "=", "False", ")", ":", "\n", "        ", "with", "open", "(", "file_path", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "if", "word2id", ":", "\n", "                ", "f", ".", "write", "(", "str", "(", "0", ")", "+", "\"\\t\"", "+", "\"PAD\"", "+", "\"\\t\"", "+", "str", "(", "1", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "str", "(", "1", ")", "+", "\"\\t\"", "+", "\"<BOS>\"", "+", "\"\\t\"", "+", "str", "(", "1", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "str", "(", "2", ")", "+", "\"\\t\"", "+", "\"<EOS>\"", "+", "\"\\t\"", "+", "str", "(", "1", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "str", "(", "3", ")", "+", "\"\\t\"", "+", "\"UNK\"", "+", "\"\\t\"", "+", "str", "(", "1", ")", "+", "\"\\n\"", ")", "\n", "", "for", "i", ",", "(", "X", ",", "freq", ")", "in", "enumerate", "(", "sorted", "(", "X2freq", ".", "items", "(", ")", ",", "key", "=", "lambda", "t", ":", "-", "t", "[", "1", "]", ")", ",", "start_idx", ")", ":", "\n", "                ", "f", ".", "write", "(", "str", "(", "i", ")", "+", "\"\\t\"", "+", "X", "+", "\"\\t\"", "+", "str", "(", "freq", ")", "+", "\"\\n\"", ")", "\n", "\n", "", "", "", "_local", "(", "sys", ".", "argv", "[", "2", "]", ",", "word2freq", ",", "start_idx", "=", "4", ",", "word2id", "=", "True", ")", "\n", "_local", "(", "sys", ".", "argv", "[", "3", "]", ",", "feature2freq", ",", "start_idx", "=", "1", ",", "word2id", "=", "False", ")", "\n", "_local", "(", "sys", ".", "argv", "[", "4", "]", ",", "label2freq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.createX2id_auto.main": [[6, 46], ["createX2id_auto.main._local"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "word2freq", "=", "{", "}", "\n", "feature2freq", "=", "{", "}", "\n", "label2freq", "=", "{", "}", "\n", "with", "open", "(", "sys", ".", "argv", "[", "1", "]", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "temp", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "\"\\t\"", ")", "\n", "labels", ",", "features", ",", "words", "=", "temp", "[", "3", "]", ",", "temp", "[", "4", "]", ",", "temp", "[", "2", "]", "\n", "for", "label", "in", "labels", ".", "split", "(", ")", ":", "\n", "                ", "if", "label", "not", "in", "label2freq", ":", "\n", "                    ", "label2freq", "[", "label", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "label2freq", "[", "label", "]", "+=", "1", "\n", "", "", "for", "word", "in", "words", ".", "split", "(", ")", ":", "\n", "                ", "if", "word", "not", "in", "word2freq", ":", "\n", "                    ", "word2freq", "[", "word", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "word2freq", "[", "word", "]", "+=", "1", "\n", "# print(word2freq[word])", "\n", "", "", "for", "feature", "in", "features", ".", "split", "(", ")", ":", "\n", "                ", "if", "feature", "not", "in", "feature2freq", ":", "\n", "                    ", "feature2freq", "[", "feature", "]", "=", "1", "\n", "", "else", ":", "\n", "                    ", "feature2freq", "[", "feature", "]", "+=", "1", "\n", "\n", "", "", "", "", "def", "_local", "(", "file_path", ",", "X2freq", ",", "start_idx", "=", "0", ",", "word2id", "=", "False", ")", ":", "\n", "        ", "with", "open", "(", "file_path", ",", "\"w\"", ")", "as", "f", ":", "\n", "            ", "if", "word2id", ":", "\n", "                ", "f", ".", "write", "(", "str", "(", "0", ")", "+", "\"\\t\"", "+", "\"PAD\"", "+", "\"\\t\"", "+", "str", "(", "1", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "str", "(", "1", ")", "+", "\"\\t\"", "+", "\"<BOS>\"", "+", "\"\\t\"", "+", "str", "(", "1", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "str", "(", "2", ")", "+", "\"\\t\"", "+", "\"<EOS>\"", "+", "\"\\t\"", "+", "str", "(", "1", ")", "+", "\"\\n\"", ")", "\n", "f", ".", "write", "(", "str", "(", "3", ")", "+", "\"\\t\"", "+", "\"UNK\"", "+", "\"\\t\"", "+", "str", "(", "1", ")", "+", "\"\\n\"", ")", "\n", "", "for", "i", ",", "(", "X", ",", "freq", ")", "in", "enumerate", "(", "sorted", "(", "X2freq", ".", "items", "(", ")", ",", "key", "=", "lambda", "t", ":", "-", "t", "[", "1", "]", ")", ",", "start_idx", ")", ":", "\n", "                ", "f", ".", "write", "(", "str", "(", "i", ")", "+", "\"\\t\"", "+", "X", "+", "\"\\t\"", "+", "str", "(", "freq", ")", "+", "\"\\n\"", ")", "\n", "\n", "\n", "\n", "", "", "", "_local", "(", "sys", ".", "argv", "[", "2", "]", ",", "word2freq", ",", "start_idx", "=", "4", ",", "word2id", "=", "True", ")", "\n", "_local", "(", "sys", ".", "argv", "[", "3", "]", ",", "feature2freq", ",", "start_idx", "=", "1", ")", "\n", "_local", "(", "sys", ".", "argv", "[", "4", "]", ",", "label2freq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.__init__": [[13, 29], ["numpy.zeros", "len", "numpy.zeros", "create_dataset.Dataset.dict[].keys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "dict", "=", "kwargs", "[", "'dict'", "]", "\n", "self", ".", "data", "=", "kwargs", "[", "'line'", "]", "\n", "self", ".", "features_size", "=", "70", "\n", "self", ".", "context_length", "=", "10", "\n", "self", ".", "features_vec", "=", "np", ".", "zeros", "(", "(", "self", ".", "features_size", ",", ")", ")", "\n", "self", ".", "left_context", "=", "[", "]", "\n", "self", ".", "right_context", "=", "[", "]", "\n", "self", ".", "sentence", "=", "[", "]", "\n", "self", ".", "context", "=", "[", "]", "\n", "self", ".", "mention", "=", "[", "]", "\n", "self", ".", "label", "=", "[", "]", "\n", "self", ".", "doc_2_vec", "=", "kwargs", "[", "'Doc2Vec'", "]", "\n", "self", ".", "type_length", "=", "len", "(", "self", ".", "dict", "[", "'label2id'", "]", ".", "keys", "(", ")", ")", "\n", "self", ".", "types", "=", "self", ".", "dict", "[", "'label2id'", "]", "\n", "self", ".", "doc_vec", "=", "np", ".", "zeros", "(", "(", "50", ",", ")", ")", "\n", "# self.word2id = self.dict['word2id']", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.call_line": [[31, 47], ["create_dataset.Dataset.data.strip().split", "int", "int", "gensim.utils.simple_preprocess", "create_dataset.Dataset.doc_2_vec.infer_vector", "create_dataset.Dataset.get_left", "create_dataset.Dataset.get_right", "create_dataset.Dataset.get_context", "create_dataset.Dataset.convert_to_id", "create_dataset.Dataset.type_idx", "create_dataset.Dataset.get_mention", "create_dataset.Dataset.get_feature_ids", "labels.split", "sentence.split", "features.split", "create_dataset.Dataset.data.strip", "len"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_left", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_right", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_context", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.convert_to_id", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.type_idx", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_mention", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_feature_ids"], ["", "def", "call_line", "(", "self", ")", ":", "\n", "        ", "start", ",", "end", ",", "sentence", ",", "labels", ",", "features", "=", "self", ".", "data", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "start", "=", "int", "(", "start", ")", "\n", "end", "=", "int", "(", "end", ")", "\n", "labels", ",", "words", ",", "features", "=", "labels", ".", "split", "(", ")", ",", "sentence", ".", "split", "(", ")", ",", "features", ".", "split", "(", ")", "\n", "tokens", "=", "gensim", ".", "utils", ".", "simple_preprocess", "(", "sentence", ")", "\n", "self", ".", "doc_vec", "=", "self", ".", "doc_2_vec", ".", "infer_vector", "(", "tokens", ")", "\n", "self", ".", "left_context", "=", "self", ".", "get_left", "(", "words", ",", "start", ",", "end", ")", "\n", "self", ".", "right_context", "=", "self", ".", "get_right", "(", "words", ",", "start", ",", "end", ")", "\n", "self", ".", "context", "=", "self", ".", "get_context", "(", "words", ",", "start", ",", "end", ")", "\n", "sent_words", "=", "[", "'<BOS>'", "]", "+", "words", "+", "[", "'<EOS>'", "]", "\n", "# print(sent_words)", "\n", "self", ".", "sentence", "=", "self", ".", "convert_to_id", "(", "sent_words", ")", "\n", "self", ".", "label", "=", "self", ".", "type_idx", "(", "labels", ")", "\n", "self", ".", "mention", "=", "self", ".", "get_mention", "(", "words", ",", "start", ",", "end", ")", "\n", "self", ".", "features_vec", "[", ":", "len", "(", "features", ")", "]", "=", "self", ".", "get_feature_ids", "(", "features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_context": [[48, 53], ["create_dataset.Dataset.convert_to_id", "min", "max", "len"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.convert_to_id"], ["", "def", "get_context", "(", "self", ",", "line", ",", "start", ",", "end", ")", ":", "\n", "        ", "context", "=", "(", "line", "[", "max", "(", "0", ",", "start", "-", "self", ".", "context_length", ")", ":", "start", "]", "+", "\n", "[", "\"PAD\"", "]", "+", "\n", "line", "[", "end", ":", "min", "(", "len", "(", "line", ")", ",", "end", "+", "self", ".", "context_length", ")", "]", ")", "\n", "return", "self", ".", "convert_to_id", "(", "context", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_left": [[54, 59], ["create_dataset.Dataset.convert_to_id", "max"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.convert_to_id"], ["", "def", "get_left", "(", "self", ",", "line", ",", "start", ",", "end", ")", ":", "\n", "        ", "\"\"\"Debug\"\"\"", "\n", "\"\"\"debugging done adding the mention in left context \"\"\"", "\n", "left_context", "=", "line", "[", "max", "(", "0", ",", "start", "-", "self", ".", "context_length", ")", ":", "end", "+", "1", "]", "\n", "return", "self", ".", "convert_to_id", "(", "left_context", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_right": [[60, 65], ["create_dataset.Dataset.convert_to_id", "min", "len"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.convert_to_id"], ["", "def", "get_right", "(", "self", ",", "line", ",", "start", ",", "end", ")", ":", "\n", "        ", "\"\"\"Debug\"\"\"", "\n", "\"\"\" Adding mention in the right context to see if I am able to see some change\"\"\"", "\n", "right_context", "=", "line", "[", "start", ":", "min", "(", "len", "(", "line", ")", ",", "end", "+", "self", ".", "context_length", ")", "]", "\n", "return", "self", ".", "convert_to_id", "(", "right_context", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.convert_to_id": [[66, 69], ["None"], "methods", ["None"], ["", "def", "convert_to_id", "(", "self", ",", "token", ")", ":", "\n", "        ", "token_id", "=", "[", "self", ".", "dict", "[", "'word2id'", "]", "[", "x", "]", "for", "x", "in", "token", "]", "\n", "return", "token_id", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_mention": [[70, 73], ["create_dataset.Dataset.convert_to_id"], "methods", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.convert_to_id"], ["", "def", "get_mention", "(", "self", ",", "line", ",", "start", ",", "end", ")", ":", "\n", "        ", "mention", "=", "line", "[", "start", ":", "end", "]", "\n", "return", "self", ".", "convert_to_id", "(", "mention", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.get_feature_ids": [[74, 81], ["numpy.array", "len"], "methods", ["None"], ["", "def", "get_feature_ids", "(", "self", ",", "feature_in", ")", ":", "\n", "# print(len(feature_in))", "\n", "# print(feature_in)", "\n", "        ", "token_id", "=", "[", "self", ".", "dict", "[", "'feature2id'", "]", "[", "x", "]", "for", "x", "in", "feature_in", "]", "\n", "if", "len", "(", "token_id", ")", ">", "self", ".", "features_size", ":", "\n", "            ", "token_id", "=", "token_id", "[", ":", "self", ".", "features_size", "]", "\n", "", "return", "np", ".", "array", "(", "token_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.type_idx": [[82, 89], ["numpy.zeros", "type_.strip.strip.strip"], "methods", ["None"], ["", "def", "type_idx", "(", "self", ",", "label", ")", ":", "\n", "        ", "type_vec", "=", "np", ".", "zeros", "(", "(", "self", ".", "type_length", ",", ")", ")", "\n", "for", "type_", "in", "label", ":", "\n", "            ", "type_", "=", "type_", ".", "strip", "(", ")", "\n", "type_idx", "=", "self", ".", "types", "[", "type_", "]", "\n", "type_vec", "[", "type_idx", "]", "=", "1", "\n", "", "return", "type_vec", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.gather": [[92, 103], ["open", "train_file.readlines.readlines", "create_dataset.Dataset", "create_dataset.Dataset.call_line", "train_in.append"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess_new.create_dataset.Dataset.call_line"], ["", "", "def", "gather", "(", "**", "kwargs", ")", ":", "\n", "    ", "train_file", "=", "open", "(", "kwargs", "[", "'file_path'", "]", ",", "\"r\"", ")", "\n", "dict_data", "=", "kwargs", "[", "'dict'", "]", "\n", "doc2vec", "=", "kwargs", "[", "'doc_path'", "]", "\n", "train_file", "=", "train_file", ".", "readlines", "(", ")", "\n", "train_in", "=", "[", "]", "\n", "for", "line", "in", "train_file", ":", "\n", "        ", "data_", "=", "Dataset", "(", "line", "=", "line", ",", "Doc2Vec", "=", "doc2vec", ",", "dict", "=", "dict_data", ")", "\n", "data_", ".", "call_line", "(", ")", "\n", "train_in", ".", "append", "(", "data_", ")", "\n", "", "return", "train_in", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.preprocessing.get_train_entities": [[16, 68], ["data_in.columns.tolist", "range", "collections.Counter", "print", "print", "print", "list", "len", "list", "collections.Counter.keys", "data_in[].tolist", "data_in[].tolist", "set", "ent_in.split.split", "print", "entity.split.strip", "entity.split.split", "print", "print", "print", "ent.split.split"], "function", ["None"], ["def", "get_train_entities", "(", "data_in", ",", "json_file", ",", "data_set", "=", "\"FB15K-237\"", ")", ":", "\n", "    ", "\"\"\"\n    :param data_set: type of dataset\n    :param data_in:file read line by\n    :return: token list\n    \"\"\"", "\n", "token_list", "=", "[", "]", "\n", "count", "=", "0", "\n", "key_add", "=", "[", "]", "\n", "column_name", "=", "data_in", ".", "columns", ".", "tolist", "(", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "column_name", ")", ")", ":", "\n", "        ", "if", "column_name", "[", "k", "]", "==", "'Head'", "or", "column_name", "[", "k", "]", "==", "'tail'", ":", "\n", "            ", "temp", "=", "data_in", "[", "column_name", "[", "k", "]", "]", ".", "tolist", "(", ")", "\n", "for", "entity", "in", "temp", ":", "\n", "# if json_file[entity]:", "\n", "#     ent_in = json_file[entity][0]", "\n", "# else:", "\n", "#     key_add +=[entity]", "\n", "#     ent_in = 'unk'", "\n", "#     count +=1", "\n", "                ", "try", ":", "\n", "                    ", "print", "(", "entity", ")", "\n", "print", "(", "json_file", "[", "entity", "]", ")", "\n", "ent_in", "=", "json_file", "[", "entity", "]", "[", "'label'", "]", "\n", "", "except", "KeyError", ":", "\n", "                    ", "key_add", "+=", "[", "entity", "]", "\n", "ent_in", "=", "'unk'", "\n", "count", "+=", "1", "\n", "", "ent_in", "=", "ent_in", ".", "split", "(", ")", "\n", "print", "(", "ent_in", ")", "\n", "token_list", "+=", "[", "ent", "for", "ent", "in", "ent_in", "if", "ent", "!=", "''", "]", "\n", "", "", "else", ":", "\n", "            ", "temp", "=", "data_in", "[", "column_name", "[", "k", "]", "]", ".", "tolist", "(", ")", "\n", "for", "entity", "in", "temp", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", ")", "\n", "entity", "=", "entity", ".", "split", "(", "'/'", ")", "\n", "\n", "for", "ent", "in", "entity", "[", "1", ":", "]", ":", "\n", "                    ", "if", "'_'", "in", "ent", ":", "\n", "                        ", "ent", "=", "ent", ".", "split", "(", "'_'", ")", "\n", "token_list", "+=", "[", "e", "for", "e", "in", "ent", "[", "1", ":", "]", "if", "e", "!=", "' '", "]", "\n", "", "else", ":", "\n", "                        ", "token_list", "+=", "[", "ent", "]", "\n", "", "", "print", "(", "entity", "[", "1", ":", "]", ")", "\n", "\n", "", "", "", "list_1", "=", "Counter", "(", "token_list", ")", "\n", "print", "(", "count", ")", "\n", "print", "(", "list_1", "[", "'unk'", "]", ")", "\n", "\n", "print", "(", "list", "(", "set", "(", "key_add", ")", ")", ")", "\n", "token_list", "=", "list", "(", "list_1", ".", "keys", "(", ")", ")", "\n", "return", "token_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.preprocessing.word_2_id": [[70, 85], ["collections.defaultdict", "collections.defaultdict"], "function", ["None"], ["", "def", "word_2_id", "(", "token_list", ")", ":", "\n", "    ", "\"\"\"\n    :param token_list: list of words\n    :return: id_to_word and word_to_id list\n    \"\"\"", "\n", "word2ID", "=", "defaultdict", "(", ")", "\n", "ID2word", "=", "defaultdict", "(", ")", "\n", "i", "=", "1", "\n", "for", "ent", "in", "token_list", ":", "\n", "        ", "word2ID", "[", "ent", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "ent", "\n", "i", "+=", "1", "\n", "", "word2ID", "[", "'unk'", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "'unk'", "\n", "return", "word2ID", ",", "ID2word", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.preprocessing.build_embedding_dict": [[87, 110], ["collections.defaultdict", "numpy.zeros", "word_to_id.items", "Model.wv.vocab.keys", "Model.wv.get_vector", "len", "collections.defaultdict.keys", "numpy.random.normal", "word_to_id.keys"], "function", ["None"], ["", "def", "build_embedding_dict", "(", "Model", ",", "size", ",", "word_to_id", ")", ":", "\n", "    ", "\"\"\"\n\n    :param Model: Glove word2vec model\n    :param size: embedding vector dimension size\n    :param threshold: number of occurence\n    :param word_to_id: word to id dictionary\n    :return: embedding matrix, out of vocabulary words\n    \"\"\"", "\n", "# unk_count = np.random.normal(0, 1, (size,))", "\n", "OOV_count", "=", "defaultdict", "(", ")", "\n", "embedding_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "word_to_id", ".", "keys", "(", ")", ")", "+", "1", ",", "size", ")", ")", "\n", "for", "key", ",", "value", "in", "word_to_id", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", "in", "Model", ".", "wv", ".", "vocab", ".", "keys", "(", ")", ":", "\n", "            ", "embedding_matrix", "[", "key", "]", "=", "Model", ".", "wv", ".", "get_vector", "(", "value", ")", "\n", "", "else", ":", "\n", "            ", "if", "value", "in", "OOV_count", ".", "keys", "(", ")", ":", "\n", "                ", "embedding_matrix", "[", "key", "]", "=", "OOV_count", "[", "value", "]", "\n", "", "else", ":", "\n", "                ", "embedding_matrix", "[", "key", "]", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "300", ",", ")", ")", "\n", "OOV_count", "[", "value", "]", "=", "embedding_matrix", "[", "key", "]", "\n", "# OOV_count.append(value)", "\n", "", "", "", "return", "embedding_matrix", ",", "OOV_count", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.preprocessing.get_rel_dict": [[112, 146], ["data_in[].tolist", "data_in[].tolist", "data_in[].tolist", "collections.defaultdict", "collections.defaultdict", "enumerate", "rel_head[].append", "rel_tail[].append"], "function", ["None"], ["", "def", "get_rel_dict", "(", "data_in", ",", "json_in", ")", ":", "\n", "    ", "\"\"\"\n    :param data_in: triplets in\n    :return: dictionary of relations mapped to entities\n    \"\"\"", "\n", "head_list", "=", "data_in", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "data_in", "[", "'tail'", "]", ".", "tolist", "(", ")", "\n", "rel_list", "=", "data_in", "[", "'relation'", "]", ".", "tolist", "(", ")", "\n", "\n", "rel_head", "=", "defaultdict", "(", "list", ")", "\n", "rel_tail", "=", "defaultdict", "(", "list", ")", "\n", "for", "index", ",", "entity", "in", "enumerate", "(", "rel_list", ")", ":", "\n", "# if json_in[head_list[index]]:", "\n", "#     head_entity = json_in[head_list[index]][0]", "\n", "# else:", "\n", "#     head_entity = 'unk'", "\n", "# if json_in[tail_list[index]]:", "\n", "#     tail_entity = json_in[tail_list[index]][0]", "\n", "# else:", "\n", "#     tail_entity = 'unk'", "\n", "        ", "try", ":", "\n", "            ", "head_entity", "=", "json_in", "[", "head_list", "[", "index", "]", "]", "[", "'label'", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "head_entity", "=", "'unk'", "\n", "", "try", ":", "\n", "            ", "tail_entity", "=", "json_in", "[", "tail_list", "[", "index", "]", "]", "[", "'label'", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "tail_entity", "=", "'unk'", "\n", "\n", "", "if", "head_entity", "not", "in", "rel_head", "[", "entity", "]", ":", "\n", "            ", "rel_head", "[", "entity", "]", ".", "append", "(", "head_entity", ")", "\n", "", "if", "tail_entity", "not", "in", "rel_tail", "[", "entity", "]", ":", "\n", "            ", "rel_tail", "[", "entity", "]", ".", "append", "(", "tail_entity", ")", "\n", "", "", "return", "rel_head", ",", "rel_tail", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.preprocessing.build_test_dev_vec": [[148, 204], ["collections.defaultdict", "range", "len", "ent.split.split", "print", "temp_list.append", "entity.split.strip", "entity.split.split", "temp_list.append", "ent.split.strip", "print", "word_to_id.keys", "temp.append", "temp.append", "ent.split.split", "temp.append", "temp.append"], "function", ["None"], ["", "def", "build_test_dev_vec", "(", "data_list", ",", "word_to_id", ",", "entity2text", ")", ":", "\n", "    ", "\"\"\"\n    :param json_in: json_file entity to text\n    :param data_list: data frame of relation, head and tail\n    :param word_to_id: word to id dictionary\n    :return: test data build with negative example and positive examples with id values\n    \"\"\"", "\n", "# columns = data_list.columns.tolist()", "\n", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", "\n", "build_dict", "=", "defaultdict", "(", "list", ")", "\n", "a", "=", "0", "\n", "for", "k", "in", "range", "(", "len", "(", "columns", ")", ")", ":", "\n", "        ", "temp_list", "=", "[", "]", "\n", "if", "columns", "[", "k", "]", "==", "\"Head\"", "or", "columns", "[", "k", "]", "==", "\"tail\"", ":", "\n", "            ", "for", "entity", "in", "data_list", "[", "columns", "[", "k", "]", "]", ":", "\n", "# if entity2text[entity]:", "\n", "#     ent = entity2text[entity][0]", "\n", "# else:", "\n", "#     ent = 'unk'", "\n", "                ", "try", ":", "\n", "                    ", "ent", "=", "entity2text", "[", "entity", "]", "[", "'label'", "]", "\n", "ent", "=", "ent", ".", "strip", "(", ")", "\n", "", "except", "KeyError", ":", "\n", "                    ", "ent", "=", "'unk'", "\n", "", "ent", "=", "ent", ".", "split", "(", ")", "\n", "ent", "=", "[", "i", "for", "i", "in", "ent", "if", "i", "!=", "''", "]", "\n", "temp", "=", "[", "]", "\n", "for", "y", "in", "ent", ":", "\n", "                    ", "if", "y", "in", "word_to_id", ".", "keys", "(", ")", ":", "\n", "                        ", "temp", ".", "append", "(", "word_to_id", "[", "y", "]", ")", "\n", "", "else", ":", "\n", "                        ", "a", "+=", "1", "\n", "temp", ".", "append", "(", "word_to_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "ent", ")", "\n", "temp_list", ".", "append", "(", "temp", ")", "\n", "", "", "if", "columns", "[", "k", "]", "==", "'relation'", ":", "\n", "            ", "for", "entity", "in", "data_list", "[", "columns", "[", "k", "]", "]", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", ")", "\n", "entity", "=", "entity", ".", "split", "(", "'/'", ")", "\n", "temp", "=", "[", "]", "\n", "for", "ent", "in", "entity", "[", "1", ":", "]", ":", "\n", "                    ", "if", "'_'", "in", "ent", ":", "\n", "                        ", "ent", "=", "ent", ".", "split", "(", "'_'", ")", "\n", "for", "e", "in", "ent", ":", "\n", "                            ", "if", "e", "!=", "''", "and", "e", "in", "word_to_id", ":", "\n", "                                ", "temp", ".", "append", "(", "word_to_id", "[", "e", "]", ")", "\n", "", "else", ":", "\n", "                                ", "temp", ".", "append", "(", "word_to_id", "[", "'unk'", "]", ")", "\n", "", "", "", "else", ":", "\n", "\n", "                        ", "temp", "+=", "[", "word_to_id", "[", "ent", "]", "]", "\n", "", "print", "(", "ent", ")", "\n", "", "temp_list", ".", "append", "(", "temp", ")", "\n", "\n", "", "", "build_dict", "[", "columns", "[", "k", "]", "]", "=", "temp_list", "\n", "", "return", "build_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.preprocessing.main": [[206, 300], ["print", "print", "pandas.read_csv", "print", "preprocessing.get_train_entities", "print", "pandas.read_csv", "pandas.read_csv", "gensim.test.utils.datapath", "gensim.test.utils.get_tmpfile", "gensim.scripts.glove2word2vec.glove2word2vec", "gensim.models.KeyedVectors.load_word2vec_format", "preprocessing.word_2_id", "preprocessing.build_embedding_dict", "sklearn.externals.joblib.dump", "preprocessing.get_rel_dict", "preprocessing.get_rel_dict", "preprocessing.get_rel_dict", "preprocessing.build_test_dev_vec", "preprocessing.build_test_dev_vec", "preprocessing.build_test_dev_vec", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "type", "open", "json.load", "pd.read_csv.head", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.get_train_entities", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.word_2_id", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_embedding_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load"], ["", "def", "main", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "# store_location = \"/home/rpatel12/ferraro_user/NAM_Modified_data/data_sets/WN_11/\"", "\n", "# import pandas as pd", "\n", "\n", "# DATA_LOCATION = \"/home/rpatel12/ferraro_user/WN11_1/\"", "\n", "    ", "print", "(", "args", ")", "\n", "print", "(", "type", "(", "args", ")", ")", "\n", "DATA_LOCATION", "=", "args", "[", "0", "]", "\n", "# model_location = \"/home/rpatel12/ferraro_user/glove_data/\"", "\n", "model_location", "=", "args", "[", "1", "]", "\n", "store_location", "=", "DATA_LOCATION", "\n", "data_set_type", "=", "args", "[", "2", "]", "\n", "json_data", "=", "args", "[", "3", "]", "\n", "with", "open", "(", "DATA_LOCATION", "+", "json_data", ",", "encoding", "=", "'latin-1'", ")", "as", "file_json", ":", "\n", "        ", "json_data", "=", "json", ".", "load", "(", "file_json", ")", "\n", "# json_data = joblib.load(DATA_LOCATION + json_data)", "\n", "", "data_list", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"train.txt\"", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ",", "encoding", "=", "'latin-1'", ")", "\n", "print", "(", "data_list", ".", "head", "(", ")", ")", "\n", "token_list", "=", "get_train_entities", "(", "data_list", ",", "json_data", ",", "data_set", "=", "data_set_type", ")", "\n", "print", "(", "len", "(", "token_list", ")", ")", "\n", "data_dev", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"valid.txt\"", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ",", "encoding", "=", "'latin-1'", ")", "\n", "data_test", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"test.txt\"", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ",", "encoding", "=", "'latin-1'", ")", "\n", "\n", "glove_file", "=", "datapath", "(", "model_location", "+", "\"glove.840B.300d.txt\"", ")", "\n", "tmp_file", "=", "get_tmpfile", "(", "model_location", "+", "\"test_word2vec.txt\"", ")", "\n", "#", "\n", "_", "=", "glove2word2vec", "(", "glove_file", ",", "tmp_file", ")", "\n", "model", "=", "KeyedVectors", ".", "load_word2vec_format", "(", "tmp_file", ")", "\n", "\n", "# converting word id and id to word", "\n", "word_2_id_dict", ",", "id_2_word_dict", "=", "word_2_id", "(", "token_list", ")", "\n", "#", "\n", "# # building the embedding matrix", "\n", "embedding_matrix", ",", "OOV_word", "=", "build_embedding_dict", "(", "model", ",", "300", ",", "id_2_word_dict", ")", "\n", "joblib", ".", "dump", "(", "OOV_word", ",", "DATA_LOCATION", "+", "'OOV_list.pkl'", ")", "\n", "# build relation to head and relation to tail dictionaries", "\n", "relation_2_head", ",", "relation_2_tail", "=", "get_rel_dict", "(", "data_list", ",", "json_data", ")", "\n", "rel_2_head_dev", ",", "rel_2_tail_dev", "=", "get_rel_dict", "(", "data_dev", ",", "json_data", ")", "\n", "rel_2_head_test", ",", "rel_2_tail_test", "=", "get_rel_dict", "(", "data_test", ",", "json_data", ")", "\n", "train_vec_dict", "=", "build_test_dev_vec", "(", "data_list", ",", "word_2_id_dict", ",", "json_data", ")", "\n", "dev_vec_dict", "=", "build_test_dev_vec", "(", "data_dev", ",", "word_2_id_dict", ",", "json_data", ")", "\n", "test_vec_dict", "=", "build_test_dev_vec", "(", "data_test", ",", "word_2_id_dict", ",", "json_data", ")", "\n", "#", "\n", "# # saving embedding matrix", "\n", "output", "=", "open", "(", "store_location", "+", "\"embedding_matrix.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "embedding_matrix", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "#", "\n", "# # saving train data", "\n", "output", "=", "open", "(", "store_location", "+", "\"train_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "train_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving dev data", "\n", "output", "=", "open", "(", "store_location", "+", "\"dev_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "dev_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "#", "\n", "# # saving test data", "\n", "output", "=", "open", "(", "store_location", "+", "\"test_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "test_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "#", "\n", "# # saving word to id dict", "\n", "output", "=", "open", "(", "store_location", "+", "\"word_2_id.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "word_2_id_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving id to work dict", "\n", "output", "=", "open", "(", "store_location", "+", "\"id_2_word.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "id_2_word_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to tail", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_tail.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "relation_2_tail", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to head", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_head.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "relation_2_head", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_tail_dev.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "rel_2_tail_dev", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to head", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_head_dev.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "rel_2_head_dev", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "#", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_tail_test.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "rel_2_tail_test", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to head", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_head_test.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "rel_2_head_test", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.data_collector.get_ids": [[19, 47], ["print", "print", "entity.split", "entity.split", "ent.split", "print", "word_2_id.keys", "temp_list.append", "temp_list.append", "ent.split", "print", "entity.strip"], "function", ["None"], ["def", "get_ids", "(", "entity", ",", "word_2_id", ",", "json_in", ",", "column_name", "=", "\"relation\"", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "# if dataset == \"WN11\":", "\n", "#     head = head.strip(\"__\")", "\n", "if", "column_name", "==", "'relation'", ":", "\n", "        ", "x", "=", "entity", ".", "split", "(", "\"/\"", ")", "[", "1", ":", "]", "\n", "ent", "=", "x", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "\n", "try", ":", "\n", "            ", "ent", "=", "json_in", "[", "entity", ".", "strip", "(", ")", "]", "[", "'label'", "]", "\n", "x", "=", "ent", ".", "split", "(", ")", "\n", "print", "(", "\"We are getting id: == > \"", ",", "entity", ",", "ent", ",", "x", ")", "\n", "", "except", "KeyError", ":", "\n", "            ", "ent", "=", "'unk'", "\n", "x", "=", "ent", ".", "split", "(", ")", "\n", "print", "(", "\"We are getting id: == > \"", ",", "entity", ",", "ent", ",", "x", ")", "\n", "\n", "", "", "x", "=", "[", "i", "for", "i", "in", "x", "if", "i", "!=", "''", "]", "\n", "for", "k", "in", "x", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "\"We are got id: == > \"", ",", "temp_list", ",", "entity", ",", "ent", ",", "x", ")", "\n", "return", "temp_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.data_collector.get_ids_1": [[48, 61], ["print", "entity.split", "print", "word_2_id.keys", "temp_list.append", "temp_list.append"], "function", ["None"], ["", "def", "get_ids_1", "(", "entity", ",", "word_2_id", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "\n", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "x", "=", "[", "i", "for", "i", "in", "x", "if", "i", "!=", "''", "]", "\n", "for", "k", "in", "x", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "\"We are got id: == > \"", ",", "temp_list", ",", "entity", ",", "x", ")", "\n", "return", "temp_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.data_collector.build_vector": [[63, 76], ["pandas.DataFrame"], "function", ["None"], ["", "def", "build_vector", "(", "head_list", ",", "tail_list", ",", "relation_list", ",", "y_true", ",", "interchange", "=", "False", ")", ":", "\n", "    ", "df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", ",", "\"score\"", "]", ")", "\n", "if", "interchange", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "tail_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "head_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "else", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "head_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "tail_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K-237.data_collector.main": [[78, 168], ["int", "int", "int", "pandas.read_csv", "load_data[].tolist", "load_data[].tolist", "load_data[].tolist", "pickle.load", "pickle.load", "range", "print", "data_collector.build_vector", "build_vector.to_pickle", "open", "json.load", "open", "open", "range", "len", "len", "data_collector.get_ids", "print", "data_collector.get_ids", "print", "tail_in.append", "range", "data_collector.get_ids", "random.sample", "data_collector.get_ids", "random.randint", "list", "list.remove", "random.shuffle", "random.sample", "tail_in.append", "len", "pickle.load.keys", "len", "data_collector.get_ids_1", "y_true.append", "itertools.repeat", "itertools.repeat", "itertools.repeat", "itertools.repeat", "len", "list_rel.remove", "random.sample", "print", "y_true.append", "y_true.append"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.build_vector", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.shuffle", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.data_collector.get_ids_1"], ["", "def", "main", "(", ")", ":", "\n", "    ", "DATA_LOCATION", "=", "sys", ".", "argv", "[", "1", "]", "\n", "STORE_LOCATION", "=", "DATA_LOCATION", "\n", "data_location", "=", "DATA_LOCATION", "\n", "\n", "# change = sys.argv[2]", "\n", "file_name", "=", "sys", ".", "argv", "[", "2", "]", "\n", "lower", "=", "int", "(", "sys", ".", "argv", "[", "3", "]", ")", "\n", "upper", "=", "int", "(", "sys", ".", "argv", "[", "4", "]", ")", "\n", "epoch", "=", "int", "(", "sys", ".", "argv", "[", "5", "]", ")", "\n", "relation_file", "=", "sys", ".", "argv", "[", "6", "]", "\n", "input_file", "=", "sys", ".", "argv", "[", "7", "]", "\n", "type_", "=", "sys", ".", "argv", "[", "8", "]", "\n", "json_file", "=", "sys", ".", "argv", "[", "9", "]", "\n", "with", "open", "(", "DATA_LOCATION", "+", "json_file", ")", "as", "file", ":", "\n", "        ", "json_data", "=", "json", ".", "load", "(", "file", ")", "\n", "", "load_data", "=", "pd", ".", "read_csv", "(", "data_location", "+", "input_file", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ")", "\n", "head_list", "=", "load_data", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "relation_list", "=", "load_data", "[", "\"relation\"", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "load_data", "[", "\"tail\"", "]", ".", "tolist", "(", ")", "\n", "# if change == \"False\":", "\n", "relation_dict", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "relation_file", ",", "\"rb\"", ")", ")", "\n", "# else:", "\n", "#     relation_dict = pickle.load(open(DATA_LOCATION + relation_file, \"rb\"))", "\n", "word_2_id", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "\"word_2_id.pkl\"", ",", "\"rb\"", ")", ")", "\n", "g", "=", "512", "\n", "head_vec_1", "=", "[", "]", "\n", "tail_vec_1", "=", "[", "]", "\n", "relation_vec", "=", "[", "]", "\n", "y_output", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "epoch", ")", ":", "\n", "        ", "for", "k", "in", "(", "range", "(", "len", "(", "head_list", ")", ")", ")", ":", "\n", "            ", "head_en", "=", "get_ids", "(", "head_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"Head\"", ",", ")", "\n", "print", "(", "\"Head\"", ")", "\n", "tail_en", "=", "get_ids", "(", "tail_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"tail\"", ")", "\n", "print", "(", "\"Tail\"", ")", "\n", "relation1", "=", "relation_list", "[", "k", "]", "\n", "# print(head_list[k], relation1, tail_list[k])", "\n", "if", "relation1", "==", "\"gender\"", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "j", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "'relation'", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "2", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "2", ")", "]", "\n", "negative_sample", "=", "random", ".", "sample", "(", "relation_dict", "[", "relation1", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "'relation'", ")", "\n", "k1", "=", "random", ".", "randint", "(", "lower", ",", "upper", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "k1", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "k1", ")", "]", "\n", "# negative_sample = random.sample(tail_list, k1-1)", "\n", "key_list", "=", "list", "(", "relation_dict", ".", "keys", "(", ")", ")", "\n", "key_list", ".", "remove", "(", "relation1", ")", "\n", "random", ".", "shuffle", "(", "key_list", ")", "\n", "rel_sample", "=", "random", ".", "sample", "(", "key_list", ",", "len", "(", "key_list", ")", ")", "\n", "negative_sample", "=", "[", "]", "\n", "val", "=", "0", "\n", "a", "=", "0", "\n", "while", "a", "<", "k1", "-", "1", "and", "val", "<", "len", "(", "key_list", ")", ":", "\n", "                    ", "list_rel", "=", "relation_dict", "[", "key_list", "[", "val", "]", "]", "\n", "if", "'unk'", "in", "list_rel", ":", "\n", "                        ", "list_rel", ".", "remove", "(", "'unk'", ")", "\n", "", "if", "list_rel", ":", "\n", "                        ", "negative_sample", "+=", "random", ".", "sample", "(", "list_rel", ",", "1", ")", "\n", "print", "(", "head_list", "[", "k", "]", ",", "relation1", ",", "tail_list", "[", "k", "]", ",", "val", ",", "negative_sample", "[", "-", "1", "]", ")", "\n", "a", "+=", "1", "\n", "", "if", "a", "==", "k1", "-", "1", ":", "\n", "                        ", "break", "\n", "", "val", "+=", "1", "\n", "\n", "\n", "", "", "tail_in", "=", "[", "]", "\n", "for", "t", "in", "negative_sample", ":", "\n", "                ", "tail_in", ".", "append", "(", "get_ids_1", "(", "t", ",", "word_2_id", ")", ")", "\n", "", "tail_in", ".", "append", "(", "tail_en", ")", "\n", "head_vec_1", "+=", "head_", "\n", "tail_vec_1", "+=", "tail_in", "\n", "relation_vec", "+=", "relation", "\n", "y_true", "=", "[", "]", "\n", "for", "u", "in", "range", "(", "len", "(", "head_", ")", ")", ":", "\n", "                ", "if", "tail_in", "[", "u", "]", "==", "tail_en", ":", "\n", "                    ", "y_true", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "if", "type_", "==", "\"train\"", ":", "\n", "                        ", "y_true", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                        ", "y_true", ".", "append", "(", "-", "1", ")", "\n", "", "", "", "y_output", "+=", "y_true", "\n", "", "", "print", "(", "len", "(", "head_list", ")", ")", "\n", "# print(change)", "\n", "sampled_data", "=", "build_vector", "(", "head_vec_1", ",", "tail_vec_1", ",", "relation_vec", ",", "y_output", ",", "False", ")", "\n", "sampled_data", ".", "to_pickle", "(", "STORE_LOCATION", "+", "file_name", ",", "protocol", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.fb13_7.preprocessing_file_1.get_train_entities": [[21, 39], ["data_in.columns.tolist", "range", "collections.Counter", "list", "len", "collections.Counter.keys", "entity.strip.split", "entity.strip.strip"], "function", ["None"], ["def", "get_train_entities", "(", "data_in", ",", "dataset", "=", "\"WN11\"", ")", ":", "\n", "    ", "\"\"\"\n    :param data_set: type of dataset\n    :param data_in:file read line by\n    :return: token list\n    \"\"\"", "\n", "token_list", "=", "[", "]", "\n", "column_name", "=", "data_in", ".", "columns", ".", "tolist", "(", ")", "\n", "for", "k", "in", "range", "(", "1", ",", "len", "(", "column_name", ")", ")", ":", "\n", "        ", "temp", "=", "data_in", "[", "column_name", "[", "k", "]", "]", "\n", "for", "entity", "in", "temp", ":", "\n", "            ", "if", "data_set", "==", "\"WN11\"", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", "\"__\"", ")", "\n", "", "x", "=", "entity", ".", "split", "(", "\"_\"", ")", "\n", "token_list", "+=", "x", "\n", "", "", "list_1", "=", "Counter", "(", "token_list", ")", "\n", "token_list", "=", "list", "(", "list_1", ".", "keys", "(", ")", ")", "\n", "return", "token_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.fb13_7.preprocessing_file_1.word_2_id": [[41, 56], ["collections.defaultdict", "collections.defaultdict"], "function", ["None"], ["", "def", "word_2_id", "(", "token_list", ")", ":", "\n", "    ", "\"\"\"\n    :param token_list: list of words\n    :return: id_to_word and word_to_id list\n    \"\"\"", "\n", "word2ID", "=", "defaultdict", "(", ")", "\n", "ID2word", "=", "defaultdict", "(", ")", "\n", "i", "=", "1", "\n", "for", "ent", "in", "token_list", ":", "\n", "        ", "word2ID", "[", "ent", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "ent", "\n", "i", "+=", "1", "\n", "", "word2ID", "[", "'unk'", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "'unk'", "\n", "return", "word2ID", ",", "ID2word", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.fb13_7.preprocessing_file_1.build_embedding_dict": [[58, 77], ["numpy.zeros", "word_to_id.items", "Model.wv.vocab.keys", "Model.wv.get_vector", "Model.wv.get_vector", "OOV_count.append", "len", "word_to_id.keys"], "function", ["None"], ["", "def", "build_embedding_dict", "(", "Model", ",", "size", ",", "word_to_id", ")", ":", "\n", "    ", "\"\"\"\n\n    :param Model: Glove word2vec model\n    :param size: embedding vector dimension size\n    :param threshold: number of occurence\n    :param word_to_id: word to id dictionary\n    :return: embedding matrix, out of vocabulary words\n    \"\"\"", "\n", "# unk_count = np.random.normal(0, 1, (size,))", "\n", "OOV_count", "=", "[", "]", "\n", "embedding_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "word_to_id", ".", "keys", "(", ")", ")", "+", "1", ",", "size", ")", ")", "\n", "for", "key", ",", "value", "in", "word_to_id", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", "in", "Model", ".", "wv", ".", "vocab", ".", "keys", "(", ")", ":", "\n", "            ", "embedding_matrix", "[", "key", "]", "=", "Model", ".", "wv", ".", "get_vector", "(", "value", ")", "\n", "", "else", ":", "\n", "            ", "embedding_matrix", "[", "key", "]", "=", "Model", ".", "wv", ".", "get_vector", "(", "\"unk\"", ")", "\n", "OOV_count", ".", "append", "(", "value", ")", "\n", "", "", "return", "embedding_matrix", ",", "OOV_count", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.fb13_7.preprocessing_file_1.get_rel_dict": [[79, 96], ["collections.defaultdict", "collections.defaultdict", "enumerate", "print", "print", "rel_head[].append", "rel_tail[].append"], "function", ["None"], ["", "def", "get_rel_dict", "(", "head_list", ",", "tail_list", ",", "rel_list", ")", ":", "\n", "    ", "\"\"\"\n    :param head_list: entity list with head, tail, relations\n    :param tail_list: tail list\n    :param rel_list : relations list\n    :return: dictionary of relations mapped to entities\n    \"\"\"", "\n", "rel_head", "=", "defaultdict", "(", "list", ")", "\n", "rel_tail", "=", "defaultdict", "(", "list", ")", "\n", "for", "index", ",", "entity", "in", "enumerate", "(", "rel_list", ")", ":", "\n", "        ", "print", "(", "index", ",", "entity", ")", "\n", "print", "(", "head_list", "[", "index", "]", ",", "tail_list", "[", "index", "]", ")", "\n", "if", "head_list", "[", "index", "]", "not", "in", "rel_head", "[", "entity", "]", ":", "\n", "            ", "rel_head", "[", "entity", "]", ".", "append", "(", "head_list", "[", "index", "]", ")", "\n", "", "if", "tail_list", "[", "index", "]", "not", "in", "rel_tail", "[", "entity", "]", ":", "\n", "            ", "rel_tail", "[", "entity", "]", ".", "append", "(", "tail_list", "[", "index", "]", ")", "\n", "", "", "return", "rel_head", ",", "rel_tail", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.fb13_7.preprocessing_file_1.build_test_dev_vec": [[98, 128], ["collections.defaultdict", "range", "print", "len", "entity.strip.split", "temp_list.append", "data_list[].tolist", "entity.strip.strip", "word_to_id.keys", "temp.append", "temp.append"], "function", ["None"], ["", "def", "build_test_dev_vec", "(", "data_list", ",", "word_to_id", ",", "train", "=", "False", ",", "dataset", "=", "\"WN11\"", ")", ":", "\n", "    ", "\"\"\"\n    :param data_list: data frame of relation, head and tail\n    :param word_to_id: word to id dictionary\n    :return: test data build with negative example and positive examples with id values\n    \"\"\"", "\n", "# columns = data_list.columns.tolist()", "\n", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", "\n", "build_dict", "=", "defaultdict", "(", "list", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "columns", ")", ")", ":", "\n", "        ", "temp_list", "=", "[", "]", "\n", "a", "=", "0", "\n", "for", "entity", "in", "data_list", "[", "columns", "[", "k", "]", "]", ":", "\n", "            ", "if", "dataset", "==", "\"WN11\"", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", "'__'", ")", "\n", "", "temp", "=", "[", "]", "\n", "ent", "=", "entity", ".", "split", "(", "\"_\"", ")", "\n", "for", "y", "in", "ent", ":", "\n", "                ", "if", "y", "in", "word_to_id", ".", "keys", "(", ")", ":", "\n", "                    ", "temp", ".", "append", "(", "word_to_id", "[", "y", "]", ")", "\n", "", "else", ":", "\n", "                    ", "a", "+=", "1", "\n", "temp", ".", "append", "(", "word_to_id", "[", "'unk'", "]", ")", "\n", "# print(temp, ent, train)", "\n", "", "", "temp_list", ".", "append", "(", "temp", ")", "\n", "", "build_dict", "[", "columns", "[", "k", "]", "]", "=", "temp_list", "\n", "if", "not", "train", ":", "\n", "            ", "build_dict", "[", "'score'", "]", "=", "data_list", "[", "'score'", "]", ".", "tolist", "(", ")", "\n", "", "", "print", "(", "a", ")", "\n", "return", "build_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.fb13_7.preprocessing_file_1.main": [[130, 206], ["print", "print", "pandas.read_csv", "print", "preprocessing_file_1.get_train_entities", "print", "pandas.read_csv", "pandas.read_csv", "gensim.test.utils.datapath", "gensim.test.utils.get_tmpfile", "gensim.scripts.glove2word2vec.glove2word2vec", "gensim.models.KeyedVectors.load_word2vec_format", "preprocessing_file_1.word_2_id", "preprocessing_file_1.build_embedding_dict", "print", "data_list[].tolist", "data_list[].tolist", "data_list[].tolist", "preprocessing_file_1.get_rel_dict", "preprocessing_file_1.build_test_dev_vec", "preprocessing_file_1.build_test_dev_vec", "preprocessing_file_1.build_test_dev_vec", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "type", "pd.read_csv.head", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.get_train_entities", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.word_2_id", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_embedding_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "main", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "# store_location = \"/home/rpatel12/ferraro_user/NAM_Modified_data/data_sets/WN_11/\"", "\n", "# import pandas as pd", "\n", "\n", "# DATA_LOCATION = \"/home/rpatel12/ferraro_user/WN11_1/\"", "\n", "    ", "print", "(", "args", ")", "\n", "print", "(", "type", "(", "args", ")", ")", "\n", "DATA_LOCATION", "=", "args", "[", "0", "]", "\n", "# model_location = \"/home/rpatel12/ferraro_user/glove_data/\"", "\n", "model_location", "=", "args", "[", "1", "]", "\n", "store_location", "=", "DATA_LOCATION", "\n", "data_set_type", "=", "args", "[", "2", "]", "\n", "data_list", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"data_list_train.csv\"", ")", "\n", "print", "(", "data_list", ".", "head", "(", ")", ")", "\n", "token_list", "=", "get_train_entities", "(", "data_list", ",", "dataset", "=", "data_set_type", ")", "\n", "print", "(", "len", "(", "token_list", ")", ")", "\n", "data_dev", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"data_list_dev.csv\"", ")", "\n", "data_test", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"data_list_test.csv\"", ")", "\n", "\n", "glove_file", "=", "datapath", "(", "model_location", "+", "\"glove.840B.300d.txt\"", ")", "\n", "tmp_file", "=", "get_tmpfile", "(", "model_location", "+", "\"test_word2vec.txt\"", ")", "\n", "#", "\n", "_", "=", "glove2word2vec", "(", "glove_file", ",", "tmp_file", ")", "\n", "model", "=", "KeyedVectors", ".", "load_word2vec_format", "(", "tmp_file", ")", "\n", "\n", "# converting word id and id to word", "\n", "word_2_id_dict", ",", "id_2_word_dict", "=", "word_2_id", "(", "token_list", ")", "\n", "\n", "# building the embedding matrix", "\n", "embedding_matrix", ",", "OOV_word", "=", "build_embedding_dict", "(", "model", ",", "300", ",", "id_2_word_dict", ")", "\n", "print", "(", "OOV_word", ")", "\n", "# build relation to head and relation to tail dictionaries", "\n", "head", "=", "data_list", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "tail", "=", "data_list", "[", "'tail'", "]", ".", "tolist", "(", ")", "\n", "rel", "=", "data_list", "[", "'relation'", "]", ".", "tolist", "(", ")", "\n", "\n", "relation_2_head", ",", "relation_2_tail", "=", "get_rel_dict", "(", "head", ",", "tail", ",", "rel", ")", "\n", "train_vec_dict", "=", "build_test_dev_vec", "(", "data_list", ",", "word_2_id_dict", ",", "train", "=", "True", ",", "dataset", "=", "data_set_type", ")", "\n", "dev_vec_dict", "=", "build_test_dev_vec", "(", "data_dev", ",", "word_2_id_dict", ",", "dataset", "=", "data_set_type", ")", "\n", "test_vec_dict", "=", "build_test_dev_vec", "(", "data_test", ",", "word_2_id_dict", ",", "dataset", "=", "data_set_type", ")", "\n", "\n", "# saving embedding matrix", "\n", "output", "=", "open", "(", "store_location", "+", "\"embedding_matrix.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "embedding_matrix", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n", "# saving train data", "\n", "output", "=", "open", "(", "store_location", "+", "\"train_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "train_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving dev data", "\n", "output", "=", "open", "(", "store_location", "+", "\"dev_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "dev_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n", "# saving test data", "\n", "output", "=", "open", "(", "store_location", "+", "\"test_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "test_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n", "# saving word to id dict", "\n", "output", "=", "open", "(", "store_location", "+", "\"word_2_id.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "word_2_id_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving id to work dict", "\n", "output", "=", "open", "(", "store_location", "+", "\"id_2_word.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "id_2_word_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to tail", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_tail.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "relation_2_tail", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to head", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_head.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "relation_2_head", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.fb13_7.data_collector.get_ids": [[19, 30], ["head.strip.split", "head.strip.strip", "word_2_id.keys", "temp_list.append", "temp_list.append"], "function", ["None"], ["def", "get_ids", "(", "entity", ",", "word_2_id", ",", "json_in", ",", "column_name", "=", "\"relation\"", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "# if dataset == \"WN11\":", "\n", "#     head = head.strip(\"__\")", "\n", "if", "column_name", "==", "'relation'", ":", "\n", "        ", "x", "=", "entity", ".", "split", "(", "\"/\"", ")", "[", "1", ":", "]", "\n", "ent", "=", "x", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "\n", "try", ":", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.fb13_7.data_collector.build_vector": [[32, 45], ["pandas.DataFrame"], "function", ["None"], ["x", "=", "ent", ".", "split", "(", ")", "\n", "print", "(", "\"We are getting id: == > \"", ",", "entity", ",", "ent", ",", "x", ")", "\n", "", "except", "KeyError", ":", "\n", "            ", "ent", "=", "'unk'", "\n", "x", "=", "ent", ".", "split", "(", ")", "\n", "print", "(", "\"We are getting id: == > \"", ",", "entity", ",", "ent", ",", "x", ")", "\n", "\n", "", "", "x", "=", "[", "i", "for", "i", "in", "x", "if", "i", "!=", "''", "]", "\n", "for", "k", "in", "x", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "\"We are got id: == > \"", ",", "temp_list", ",", "entity", ",", "ent", ",", "x", ")", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.fb13_7.data_collector.main": [[47, 119], ["pandas.read_csv", "int", "int", "int", "load_data[].tolist", "load_data[].tolist", "load_data[].tolist", "pickle.load", "range", "print", "print", "data_collector.build_vector", "build_vector.to_pickle", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pickle.load", "pickle.load", "open", "range", "len", "open", "open", "len", "data_collector.get_ids", "data_collector.get_ids", "tail_in.append", "range", "data_collector.get_ids", "random.sample", "data_collector.get_ids", "random.randint", "list", "list.remove", "random.sample", "tail_in.append", "len", "pickle.load.keys", "random.sample", "print", "data_collector.get_ids", "y_true.append", "y_true.append", "itertools.repeat", "itertools.repeat", "itertools.repeat", "itertools.repeat"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.build_vector", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids"], ["\n", "", "def", "get_ids_1", "(", "entity", ",", "word_2_id", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "\n", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "x", "=", "[", "i", "for", "i", "in", "x", "if", "i", "!=", "''", "]", "\n", "for", "k", "in", "x", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "\"We are got id: == > \"", ",", "temp_list", ",", "entity", ",", "x", ")", "\n", "return", "temp_list", "\n", "\n", "\n", "", "def", "build_vector", "(", "head_list", ",", "tail_list", ",", "relation_list", ",", "y_true", ",", "interchange", "=", "False", ")", ":", "\n", "    ", "df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", ",", "\"score\"", "]", ")", "\n", "if", "interchange", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "tail_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "head_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "else", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "head_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "tail_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "return", "df", "\n", "\n", "\n", "", "def", "main", "(", ")", ":", "\n", "    ", "DATA_LOCATION", "=", "sys", ".", "argv", "[", "1", "]", "\n", "STORE_LOCATION", "=", "DATA_LOCATION", "\n", "data_location", "=", "DATA_LOCATION", "\n", "\n", "# change = sys.argv[2]", "\n", "file_name", "=", "sys", ".", "argv", "[", "2", "]", "\n", "lower", "=", "int", "(", "sys", ".", "argv", "[", "3", "]", ")", "\n", "upper", "=", "int", "(", "sys", ".", "argv", "[", "4", "]", ")", "\n", "epoch", "=", "int", "(", "sys", ".", "argv", "[", "5", "]", ")", "\n", "relation_file", "=", "sys", ".", "argv", "[", "6", "]", "\n", "input_file", "=", "sys", ".", "argv", "[", "7", "]", "\n", "type_", "=", "sys", ".", "argv", "[", "8", "]", "\n", "json_file", "=", "sys", ".", "argv", "[", "9", "]", "\n", "with", "open", "(", "DATA_LOCATION", "+", "json_file", ")", "as", "file", ":", "\n", "        ", "json_data", "=", "json", ".", "load", "(", "file", ")", "\n", "", "load_data", "=", "pd", ".", "read_csv", "(", "data_location", "+", "input_file", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ")", "\n", "head_list", "=", "load_data", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "relation_list", "=", "load_data", "[", "\"relation\"", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "load_data", "[", "\"tail\"", "]", ".", "tolist", "(", ")", "\n", "# if change == \"False\":", "\n", "relation_dict", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "relation_file", ",", "\"rb\"", ")", ")", "\n", "# else:", "\n", "#     relation_dict = pickle.load(open(DATA_LOCATION + relation_file, \"rb\"))", "\n", "word_2_id", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "\"word_2_id.pkl\"", ",", "\"rb\"", ")", ")", "\n", "g", "=", "512", "\n", "head_vec_1", "=", "[", "]", "\n", "tail_vec_1", "=", "[", "]", "\n", "relation_vec", "=", "[", "]", "\n", "y_output", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "epoch", ")", ":", "\n", "        ", "for", "k", "in", "(", "range", "(", "len", "(", "head_list", ")", ")", ")", ":", "\n", "            ", "head_en", "=", "get_ids", "(", "head_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"Head\"", ",", ")", "\n", "print", "(", "\"Head\"", ")", "\n", "tail_en", "=", "get_ids", "(", "tail_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"tail\"", ")", "\n", "print", "(", "\"Tail\"", ")", "\n", "relation1", "=", "relation_list", "[", "k", "]", "\n", "# print(head_list[k], relation1, tail_list[k])", "\n", "if", "relation1", "==", "\"gender\"", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "j", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "'relation'", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "2", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "2", ")", "]", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.preprocessing.get_train_entities": [[16, 68], ["data_in.columns.tolist", "range", "collections.Counter", "print", "print", "print", "list", "len", "list", "collections.Counter.keys", "data_in[].tolist", "data_in[].tolist", "set", "ent_in.split.split", "print", "entity.split.strip", "entity.split.split", "print", "print", "print", "ent.split.split"], "function", ["None"], ["def", "get_train_entities", "(", "data_in", ",", "json_file", ",", "data_set", "=", "\"FB15K-237\"", ")", ":", "\n", "    ", "\"\"\"\n    :param data_set: type of dataset\n    :param data_in:file read line by\n    :return: token list\n    \"\"\"", "\n", "token_list", "=", "[", "]", "\n", "count", "=", "0", "\n", "key_add", "=", "[", "]", "\n", "column_name", "=", "data_in", ".", "columns", ".", "tolist", "(", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "column_name", ")", ")", ":", "\n", "        ", "if", "column_name", "[", "k", "]", "==", "'Head'", "or", "column_name", "[", "k", "]", "==", "'tail'", ":", "\n", "            ", "temp", "=", "data_in", "[", "column_name", "[", "k", "]", "]", ".", "tolist", "(", ")", "\n", "for", "entity", "in", "temp", ":", "\n", "# if json_file[entity]:", "\n", "#     ent_in = json_file[entity][0]", "\n", "# else:", "\n", "#     key_add +=[entity]", "\n", "#     ent_in = 'unk'", "\n", "#     count +=1", "\n", "                ", "try", ":", "\n", "                    ", "print", "(", "entity", ")", "\n", "print", "(", "json_file", "[", "entity", "]", ")", "\n", "ent_in", "=", "json_file", "[", "entity", "]", "[", "'label'", "]", "\n", "", "except", "KeyError", ":", "\n", "                    ", "key_add", "+=", "[", "entity", "]", "\n", "ent_in", "=", "'unk'", "\n", "count", "+=", "1", "\n", "", "ent_in", "=", "ent_in", ".", "split", "(", ")", "\n", "print", "(", "ent_in", ")", "\n", "token_list", "+=", "[", "ent", "for", "ent", "in", "ent_in", "if", "ent", "!=", "''", "]", "\n", "", "", "else", ":", "\n", "            ", "temp", "=", "data_in", "[", "column_name", "[", "k", "]", "]", ".", "tolist", "(", ")", "\n", "for", "entity", "in", "temp", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", ")", "\n", "entity", "=", "entity", ".", "split", "(", "'/'", ")", "\n", "\n", "for", "ent", "in", "entity", "[", "1", ":", "]", ":", "\n", "                    ", "if", "'_'", "in", "ent", ":", "\n", "                        ", "ent", "=", "ent", ".", "split", "(", "'_'", ")", "\n", "token_list", "+=", "[", "e", "for", "e", "in", "ent", "[", "1", ":", "]", "if", "e", "!=", "' '", "]", "\n", "", "else", ":", "\n", "                        ", "token_list", "+=", "[", "ent", "]", "\n", "", "", "print", "(", "entity", "[", "1", ":", "]", ")", "\n", "\n", "", "", "", "list_1", "=", "Counter", "(", "token_list", ")", "\n", "print", "(", "count", ")", "\n", "print", "(", "list_1", "[", "'unk'", "]", ")", "\n", "\n", "print", "(", "list", "(", "set", "(", "key_add", ")", ")", ")", "\n", "token_list", "=", "list", "(", "list_1", ".", "keys", "(", ")", ")", "\n", "return", "token_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.preprocessing.word_2_id": [[70, 85], ["collections.defaultdict", "collections.defaultdict"], "function", ["None"], ["", "def", "word_2_id", "(", "token_list", ")", ":", "\n", "    ", "\"\"\"\n    :param token_list: list of words\n    :return: id_to_word and word_to_id list\n    \"\"\"", "\n", "word2ID", "=", "defaultdict", "(", ")", "\n", "ID2word", "=", "defaultdict", "(", ")", "\n", "i", "=", "1", "\n", "for", "ent", "in", "token_list", ":", "\n", "        ", "word2ID", "[", "ent", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "ent", "\n", "i", "+=", "1", "\n", "", "word2ID", "[", "'unk'", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "'unk'", "\n", "return", "word2ID", ",", "ID2word", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.preprocessing.build_embedding_dict": [[87, 110], ["collections.defaultdict", "numpy.zeros", "word_to_id.items", "Model.wv.vocab.keys", "Model.wv.get_vector", "len", "collections.defaultdict.keys", "numpy.random.normal", "word_to_id.keys"], "function", ["None"], ["", "def", "build_embedding_dict", "(", "Model", ",", "size", ",", "word_to_id", ")", ":", "\n", "    ", "\"\"\"\n\n    :param Model: Glove word2vec model\n    :param size: embedding vector dimension size\n    :param threshold: number of occurence\n    :param word_to_id: word to id dictionary\n    :return: embedding matrix, out of vocabulary words\n    \"\"\"", "\n", "# unk_count = np.random.normal(0, 1, (size,))", "\n", "OOV_count", "=", "defaultdict", "(", ")", "\n", "embedding_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "word_to_id", ".", "keys", "(", ")", ")", "+", "1", ",", "size", ")", ")", "\n", "for", "key", ",", "value", "in", "word_to_id", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", "in", "Model", ".", "wv", ".", "vocab", ".", "keys", "(", ")", ":", "\n", "            ", "embedding_matrix", "[", "key", "]", "=", "Model", ".", "wv", ".", "get_vector", "(", "value", ")", "\n", "", "else", ":", "\n", "            ", "if", "value", "in", "OOV_count", ".", "keys", "(", ")", ":", "\n", "                ", "embedding_matrix", "[", "key", "]", "=", "OOV_count", "[", "value", "]", "\n", "", "else", ":", "\n", "                ", "embedding_matrix", "[", "key", "]", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "300", ",", ")", ")", "\n", "OOV_count", "[", "value", "]", "=", "embedding_matrix", "[", "key", "]", "\n", "# OOV_count.append(value)", "\n", "", "", "", "return", "embedding_matrix", ",", "OOV_count", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.preprocessing.get_rel_dict": [[112, 146], ["data_in[].tolist", "data_in[].tolist", "data_in[].tolist", "collections.defaultdict", "collections.defaultdict", "enumerate", "rel_head[].append", "rel_tail[].append"], "function", ["None"], ["", "def", "get_rel_dict", "(", "data_in", ",", "json_in", ")", ":", "\n", "    ", "\"\"\"\n    :param data_in: triplets in\n    :return: dictionary of relations mapped to entities\n    \"\"\"", "\n", "head_list", "=", "data_in", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "data_in", "[", "'tail'", "]", ".", "tolist", "(", ")", "\n", "rel_list", "=", "data_in", "[", "'relation'", "]", ".", "tolist", "(", ")", "\n", "\n", "rel_head", "=", "defaultdict", "(", "list", ")", "\n", "rel_tail", "=", "defaultdict", "(", "list", ")", "\n", "for", "index", ",", "entity", "in", "enumerate", "(", "rel_list", ")", ":", "\n", "# if json_in[head_list[index]]:", "\n", "#     head_entity = json_in[head_list[index]][0]", "\n", "# else:", "\n", "#     head_entity = 'unk'", "\n", "# if json_in[tail_list[index]]:", "\n", "#     tail_entity = json_in[tail_list[index]][0]", "\n", "# else:", "\n", "#     tail_entity = 'unk'", "\n", "        ", "try", ":", "\n", "            ", "head_entity", "=", "json_in", "[", "head_list", "[", "index", "]", "]", "[", "'label'", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "head_entity", "=", "'unk'", "\n", "", "try", ":", "\n", "            ", "tail_entity", "=", "json_in", "[", "tail_list", "[", "index", "]", "]", "[", "'label'", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "tail_entity", "=", "'unk'", "\n", "\n", "", "if", "head_entity", "not", "in", "rel_head", "[", "entity", "]", ":", "\n", "            ", "rel_head", "[", "entity", "]", ".", "append", "(", "head_entity", ")", "\n", "", "if", "tail_entity", "not", "in", "rel_tail", "[", "entity", "]", ":", "\n", "            ", "rel_tail", "[", "entity", "]", ".", "append", "(", "tail_entity", ")", "\n", "", "", "return", "rel_head", ",", "rel_tail", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.preprocessing.build_test_dev_vec": [[148, 204], ["collections.defaultdict", "range", "len", "ent.split.split", "print", "temp_list.append", "entity.split.strip", "entity.split.split", "temp_list.append", "ent.split.strip", "print", "word_to_id.keys", "temp.append", "temp.append", "ent.split.split", "temp.append", "temp.append"], "function", ["None"], ["", "def", "build_test_dev_vec", "(", "data_list", ",", "word_to_id", ",", "entity2text", ")", ":", "\n", "    ", "\"\"\"\n    :param json_in: json_file entity to text\n    :param data_list: data frame of relation, head and tail\n    :param word_to_id: word to id dictionary\n    :return: test data build with negative example and positive examples with id values\n    \"\"\"", "\n", "# columns = data_list.columns.tolist()", "\n", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", "\n", "build_dict", "=", "defaultdict", "(", "list", ")", "\n", "a", "=", "0", "\n", "for", "k", "in", "range", "(", "len", "(", "columns", ")", ")", ":", "\n", "        ", "temp_list", "=", "[", "]", "\n", "if", "columns", "[", "k", "]", "==", "\"Head\"", "or", "columns", "[", "k", "]", "==", "\"tail\"", ":", "\n", "            ", "for", "entity", "in", "data_list", "[", "columns", "[", "k", "]", "]", ":", "\n", "# if entity2text[entity]:", "\n", "#     ent = entity2text[entity][0]", "\n", "# else:", "\n", "#     ent = 'unk'", "\n", "                ", "try", ":", "\n", "                    ", "ent", "=", "entity2text", "[", "entity", "]", "[", "'label'", "]", "\n", "ent", "=", "ent", ".", "strip", "(", ")", "\n", "", "except", "KeyError", ":", "\n", "                    ", "ent", "=", "'unk'", "\n", "", "ent", "=", "ent", ".", "split", "(", ")", "\n", "ent", "=", "[", "i", "for", "i", "in", "ent", "if", "i", "!=", "''", "]", "\n", "temp", "=", "[", "]", "\n", "for", "y", "in", "ent", ":", "\n", "                    ", "if", "y", "in", "word_to_id", ".", "keys", "(", ")", ":", "\n", "                        ", "temp", ".", "append", "(", "word_to_id", "[", "y", "]", ")", "\n", "", "else", ":", "\n", "                        ", "a", "+=", "1", "\n", "temp", ".", "append", "(", "word_to_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "ent", ")", "\n", "temp_list", ".", "append", "(", "temp", ")", "\n", "", "", "if", "columns", "[", "k", "]", "==", "'relation'", ":", "\n", "            ", "for", "entity", "in", "data_list", "[", "columns", "[", "k", "]", "]", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", ")", "\n", "entity", "=", "entity", ".", "split", "(", "'/'", ")", "\n", "temp", "=", "[", "]", "\n", "for", "ent", "in", "entity", "[", "1", ":", "]", ":", "\n", "                    ", "if", "'_'", "in", "ent", ":", "\n", "                        ", "ent", "=", "ent", ".", "split", "(", "'_'", ")", "\n", "for", "e", "in", "ent", ":", "\n", "                            ", "if", "e", "!=", "''", "and", "e", "in", "word_to_id", ":", "\n", "                                ", "temp", ".", "append", "(", "word_to_id", "[", "e", "]", ")", "\n", "", "else", ":", "\n", "                                ", "temp", ".", "append", "(", "word_to_id", "[", "'unk'", "]", ")", "\n", "", "", "", "else", ":", "\n", "\n", "                        ", "temp", "+=", "[", "word_to_id", "[", "ent", "]", "]", "\n", "", "print", "(", "ent", ")", "\n", "", "temp_list", ".", "append", "(", "temp", ")", "\n", "\n", "", "", "build_dict", "[", "columns", "[", "k", "]", "]", "=", "temp_list", "\n", "", "return", "build_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.preprocessing.main": [[206, 300], ["print", "print", "pandas.read_csv", "print", "preprocessing.get_train_entities", "print", "pandas.read_csv", "pandas.read_csv", "gensim.test.utils.datapath", "gensim.test.utils.get_tmpfile", "gensim.scripts.glove2word2vec.glove2word2vec", "gensim.models.KeyedVectors.load_word2vec_format", "preprocessing.word_2_id", "preprocessing.build_embedding_dict", "sklearn.externals.joblib.dump", "preprocessing.get_rel_dict", "preprocessing.get_rel_dict", "preprocessing.get_rel_dict", "preprocessing.build_test_dev_vec", "preprocessing.build_test_dev_vec", "preprocessing.build_test_dev_vec", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "type", "open", "json.load", "pd.read_csv.head", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.get_train_entities", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.word_2_id", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_embedding_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load"], ["", "def", "main", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "# store_location = \"/home/rpatel12/ferraro_user/NAM_Modified_data/data_sets/WN_11/\"", "\n", "# import pandas as pd", "\n", "\n", "# DATA_LOCATION = \"/home/rpatel12/ferraro_user/WN11_1/\"", "\n", "    ", "print", "(", "args", ")", "\n", "print", "(", "type", "(", "args", ")", ")", "\n", "DATA_LOCATION", "=", "args", "[", "0", "]", "\n", "# model_location = \"/home/rpatel12/ferraro_user/glove_data/\"", "\n", "model_location", "=", "args", "[", "1", "]", "\n", "store_location", "=", "DATA_LOCATION", "\n", "data_set_type", "=", "args", "[", "2", "]", "\n", "json_data", "=", "args", "[", "3", "]", "\n", "with", "open", "(", "DATA_LOCATION", "+", "json_data", ",", "encoding", "=", "'latin-1'", ")", "as", "file_json", ":", "\n", "        ", "json_data", "=", "json", ".", "load", "(", "file_json", ")", "\n", "# json_data = joblib.load(DATA_LOCATION + json_data)", "\n", "", "data_list", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"train.txt\"", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ",", "encoding", "=", "'latin-1'", ")", "\n", "print", "(", "data_list", ".", "head", "(", ")", ")", "\n", "token_list", "=", "get_train_entities", "(", "data_list", ",", "json_data", ",", "data_set", "=", "data_set_type", ")", "\n", "print", "(", "len", "(", "token_list", ")", ")", "\n", "data_dev", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"valid.txt\"", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ",", "encoding", "=", "'latin-1'", ")", "\n", "data_test", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"test.txt\"", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ",", "encoding", "=", "'latin-1'", ")", "\n", "\n", "glove_file", "=", "datapath", "(", "model_location", "+", "\"glove.840B.300d.txt\"", ")", "\n", "tmp_file", "=", "get_tmpfile", "(", "model_location", "+", "\"test_word2vec.txt\"", ")", "\n", "#", "\n", "_", "=", "glove2word2vec", "(", "glove_file", ",", "tmp_file", ")", "\n", "model", "=", "KeyedVectors", ".", "load_word2vec_format", "(", "tmp_file", ")", "\n", "\n", "# converting word id and id to word", "\n", "word_2_id_dict", ",", "id_2_word_dict", "=", "word_2_id", "(", "token_list", ")", "\n", "#", "\n", "# # building the embedding matrix", "\n", "embedding_matrix", ",", "OOV_word", "=", "build_embedding_dict", "(", "model", ",", "300", ",", "id_2_word_dict", ")", "\n", "joblib", ".", "dump", "(", "OOV_word", ",", "DATA_LOCATION", "+", "'OOV_list.pkl'", ")", "\n", "# build relation to head and relation to tail dictionaries", "\n", "relation_2_head", ",", "relation_2_tail", "=", "get_rel_dict", "(", "data_list", ",", "json_data", ")", "\n", "rel_2_head_dev", ",", "rel_2_tail_dev", "=", "get_rel_dict", "(", "data_dev", ",", "json_data", ")", "\n", "rel_2_head_test", ",", "rel_2_tail_test", "=", "get_rel_dict", "(", "data_test", ",", "json_data", ")", "\n", "train_vec_dict", "=", "build_test_dev_vec", "(", "data_list", ",", "word_2_id_dict", ",", "json_data", ")", "\n", "dev_vec_dict", "=", "build_test_dev_vec", "(", "data_dev", ",", "word_2_id_dict", ",", "json_data", ")", "\n", "test_vec_dict", "=", "build_test_dev_vec", "(", "data_test", ",", "word_2_id_dict", ",", "json_data", ")", "\n", "#", "\n", "# # saving embedding matrix", "\n", "output", "=", "open", "(", "store_location", "+", "\"embedding_matrix.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "embedding_matrix", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "#", "\n", "# # saving train data", "\n", "output", "=", "open", "(", "store_location", "+", "\"train_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "train_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving dev data", "\n", "output", "=", "open", "(", "store_location", "+", "\"dev_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "dev_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "#", "\n", "# # saving test data", "\n", "output", "=", "open", "(", "store_location", "+", "\"test_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "test_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "#", "\n", "# # saving word to id dict", "\n", "output", "=", "open", "(", "store_location", "+", "\"word_2_id.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "word_2_id_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving id to work dict", "\n", "output", "=", "open", "(", "store_location", "+", "\"id_2_word.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "id_2_word_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to tail", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_tail.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "relation_2_tail", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to head", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_head.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "relation_2_head", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_tail_dev.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "rel_2_tail_dev", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to head", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_head_dev.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "rel_2_head_dev", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "#", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_tail_test.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "rel_2_tail_test", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to head", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_head_test.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "rel_2_head_test", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.data_collector.get_ids": [[19, 47], ["print", "print", "entity.split", "entity.split", "ent.split", "print", "word_2_id.keys", "temp_list.append", "temp_list.append", "ent.split", "print", "entity.strip"], "function", ["None"], ["def", "get_ids", "(", "entity", ",", "word_2_id", ",", "json_in", ",", "column_name", "=", "\"relation\"", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "# if dataset == \"WN11\":", "\n", "#     head = head.strip(\"__\")", "\n", "if", "column_name", "==", "'relation'", ":", "\n", "        ", "x", "=", "entity", ".", "split", "(", "\"/\"", ")", "[", "1", ":", "]", "\n", "ent", "=", "x", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "\n", "try", ":", "\n", "            ", "ent", "=", "json_in", "[", "entity", ".", "strip", "(", ")", "]", "[", "'label'", "]", "\n", "x", "=", "ent", ".", "split", "(", ")", "\n", "print", "(", "\"We are getting id: == > \"", ",", "entity", ",", "ent", ",", "x", ")", "\n", "", "except", "KeyError", ":", "\n", "            ", "ent", "=", "'unk'", "\n", "x", "=", "ent", ".", "split", "(", ")", "\n", "print", "(", "\"We are getting id: == > \"", ",", "entity", ",", "ent", ",", "x", ")", "\n", "\n", "", "", "x", "=", "[", "i", "for", "i", "in", "x", "if", "i", "!=", "''", "]", "\n", "for", "k", "in", "x", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "\"We are got id: == > \"", ",", "temp_list", ",", "entity", ",", "ent", ",", "x", ")", "\n", "return", "temp_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.data_collector.get_ids_1": [[48, 61], ["print", "entity.split", "print", "word_2_id.keys", "temp_list.append", "temp_list.append"], "function", ["None"], ["", "def", "get_ids_1", "(", "entity", ",", "word_2_id", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "\n", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "x", "=", "[", "i", "for", "i", "in", "x", "if", "i", "!=", "''", "]", "\n", "for", "k", "in", "x", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "\"We are got id: == > \"", ",", "temp_list", ",", "entity", ",", "x", ")", "\n", "return", "temp_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.data_collector.build_vector": [[63, 76], ["pandas.DataFrame"], "function", ["None"], ["", "def", "build_vector", "(", "head_list", ",", "tail_list", ",", "relation_list", ",", "y_true", ",", "interchange", "=", "False", ")", ":", "\n", "    ", "df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", ",", "\"score\"", "]", ")", "\n", "if", "interchange", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "tail_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "head_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "else", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "head_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "tail_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.data_collector.main": [[78, 168], ["int", "int", "int", "pandas.read_csv", "load_data[].tolist", "load_data[].tolist", "load_data[].tolist", "pickle.load", "pickle.load", "range", "print", "data_collector.build_vector", "build_vector.to_pickle", "open", "json.load", "open", "open", "range", "len", "len", "data_collector.get_ids", "print", "data_collector.get_ids", "print", "tail_in.append", "range", "data_collector.get_ids", "random.sample", "data_collector.get_ids", "random.randint", "list", "list.remove", "random.shuffle", "random.sample", "tail_in.append", "len", "pickle.load.keys", "len", "data_collector.get_ids_1", "y_true.append", "itertools.repeat", "itertools.repeat", "itertools.repeat", "itertools.repeat", "len", "list_rel.remove", "random.sample", "print", "y_true.append", "y_true.append"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.build_vector", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.shuffle", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FB15K.data_collector.get_ids_1"], ["", "def", "main", "(", ")", ":", "\n", "    ", "DATA_LOCATION", "=", "sys", ".", "argv", "[", "1", "]", "\n", "STORE_LOCATION", "=", "DATA_LOCATION", "\n", "data_location", "=", "DATA_LOCATION", "\n", "\n", "# change = sys.argv[2]", "\n", "file_name", "=", "sys", ".", "argv", "[", "2", "]", "\n", "lower", "=", "int", "(", "sys", ".", "argv", "[", "3", "]", ")", "\n", "upper", "=", "int", "(", "sys", ".", "argv", "[", "4", "]", ")", "\n", "epoch", "=", "int", "(", "sys", ".", "argv", "[", "5", "]", ")", "\n", "relation_file", "=", "sys", ".", "argv", "[", "6", "]", "\n", "input_file", "=", "sys", ".", "argv", "[", "7", "]", "\n", "type_", "=", "sys", ".", "argv", "[", "8", "]", "\n", "json_file", "=", "sys", ".", "argv", "[", "9", "]", "\n", "with", "open", "(", "DATA_LOCATION", "+", "json_file", ")", "as", "file", ":", "\n", "        ", "json_data", "=", "json", ".", "load", "(", "file", ")", "\n", "", "load_data", "=", "pd", ".", "read_csv", "(", "data_location", "+", "input_file", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ")", "\n", "head_list", "=", "load_data", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "relation_list", "=", "load_data", "[", "\"relation\"", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "load_data", "[", "\"tail\"", "]", ".", "tolist", "(", ")", "\n", "# if change == \"False\":", "\n", "relation_dict", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "relation_file", ",", "\"rb\"", ")", ")", "\n", "# else:", "\n", "#     relation_dict = pickle.load(open(DATA_LOCATION + relation_file, \"rb\"))", "\n", "word_2_id", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "\"word_2_id.pkl\"", ",", "\"rb\"", ")", ")", "\n", "g", "=", "512", "\n", "head_vec_1", "=", "[", "]", "\n", "tail_vec_1", "=", "[", "]", "\n", "relation_vec", "=", "[", "]", "\n", "y_output", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "epoch", ")", ":", "\n", "        ", "for", "k", "in", "(", "range", "(", "len", "(", "head_list", ")", ")", ")", ":", "\n", "            ", "head_en", "=", "get_ids", "(", "head_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"Head\"", ",", ")", "\n", "print", "(", "\"Head\"", ")", "\n", "tail_en", "=", "get_ids", "(", "tail_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"tail\"", ")", "\n", "print", "(", "\"Tail\"", ")", "\n", "relation1", "=", "relation_list", "[", "k", "]", "\n", "# print(head_list[k], relation1, tail_list[k])", "\n", "if", "relation1", "==", "\"gender\"", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "j", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "'relation'", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "2", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "2", ")", "]", "\n", "negative_sample", "=", "random", ".", "sample", "(", "relation_dict", "[", "relation1", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "'relation'", ")", "\n", "k1", "=", "random", ".", "randint", "(", "lower", ",", "upper", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "k1", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "k1", ")", "]", "\n", "# negative_sample = random.sample(tail_list, k1-1)", "\n", "key_list", "=", "list", "(", "relation_dict", ".", "keys", "(", ")", ")", "\n", "key_list", ".", "remove", "(", "relation1", ")", "\n", "random", ".", "shuffle", "(", "key_list", ")", "\n", "rel_sample", "=", "random", ".", "sample", "(", "key_list", ",", "len", "(", "key_list", ")", ")", "\n", "negative_sample", "=", "[", "]", "\n", "val", "=", "0", "\n", "a", "=", "0", "\n", "while", "a", "<", "k1", "-", "1", "and", "val", "<", "len", "(", "key_list", ")", ":", "\n", "                    ", "list_rel", "=", "relation_dict", "[", "key_list", "[", "val", "]", "]", "\n", "if", "'unk'", "in", "list_rel", ":", "\n", "                        ", "list_rel", ".", "remove", "(", "'unk'", ")", "\n", "", "if", "list_rel", ":", "\n", "                        ", "negative_sample", "+=", "random", ".", "sample", "(", "list_rel", ",", "1", ")", "\n", "print", "(", "head_list", "[", "k", "]", ",", "relation1", ",", "tail_list", "[", "k", "]", ",", "val", ",", "negative_sample", "[", "-", "1", "]", ")", "\n", "a", "+=", "1", "\n", "", "if", "a", "==", "k1", "-", "1", ":", "\n", "                        ", "break", "\n", "", "val", "+=", "1", "\n", "\n", "\n", "", "", "tail_in", "=", "[", "]", "\n", "for", "t", "in", "negative_sample", ":", "\n", "                ", "tail_in", ".", "append", "(", "get_ids_1", "(", "t", ",", "word_2_id", ")", ")", "\n", "", "tail_in", ".", "append", "(", "tail_en", ")", "\n", "head_vec_1", "+=", "head_", "\n", "tail_vec_1", "+=", "tail_in", "\n", "relation_vec", "+=", "relation", "\n", "y_true", "=", "[", "]", "\n", "for", "u", "in", "range", "(", "len", "(", "head_", ")", ")", ":", "\n", "                ", "if", "tail_in", "[", "u", "]", "==", "tail_en", ":", "\n", "                    ", "y_true", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "if", "type_", "==", "\"train\"", ":", "\n", "                        ", "y_true", ".", "append", "(", "0", ")", "\n", "", "else", ":", "\n", "                        ", "y_true", ".", "append", "(", "-", "1", ")", "\n", "", "", "", "y_output", "+=", "y_true", "\n", "", "", "print", "(", "len", "(", "head_list", ")", ")", "\n", "# print(change)", "\n", "sampled_data", "=", "build_vector", "(", "head_vec_1", ",", "tail_vec_1", ",", "relation_vec", ",", "y_output", ",", "False", ")", "\n", "sampled_data", ".", "to_pickle", "(", "STORE_LOCATION", "+", "file_name", ",", "protocol", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN_11.preprocessing_file_1.get_train_entities": [[21, 39], ["data_in.columns.tolist", "range", "collections.Counter", "list", "len", "collections.Counter.keys", "entity.strip.split", "entity.strip.strip"], "function", ["None"], ["def", "get_train_entities", "(", "data_in", ",", "dataset", "=", "\"WN11\"", ")", ":", "\n", "    ", "\"\"\"\n    :param data_set: type of dataset\n    :param data_in:file read line by\n    :return: token list\n    \"\"\"", "\n", "token_list", "=", "[", "]", "\n", "column_name", "=", "data_in", ".", "columns", ".", "tolist", "(", ")", "\n", "for", "k", "in", "range", "(", "1", ",", "len", "(", "column_name", ")", ")", ":", "\n", "        ", "temp", "=", "data_in", "[", "column_name", "[", "k", "]", "]", "\n", "for", "entity", "in", "temp", ":", "\n", "            ", "if", "data_set", "==", "\"WN11\"", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", "\"__\"", ")", "\n", "", "x", "=", "entity", ".", "split", "(", "\"_\"", ")", "\n", "token_list", "+=", "x", "\n", "", "", "list_1", "=", "Counter", "(", "token_list", ")", "\n", "token_list", "=", "list", "(", "list_1", ".", "keys", "(", ")", ")", "\n", "return", "token_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN_11.preprocessing_file_1.word_2_id": [[41, 56], ["collections.defaultdict", "collections.defaultdict"], "function", ["None"], ["", "def", "word_2_id", "(", "token_list", ")", ":", "\n", "    ", "\"\"\"\n    :param token_list: list of words\n    :return: id_to_word and word_to_id list\n    \"\"\"", "\n", "word2ID", "=", "defaultdict", "(", ")", "\n", "ID2word", "=", "defaultdict", "(", ")", "\n", "i", "=", "1", "\n", "for", "ent", "in", "token_list", ":", "\n", "        ", "word2ID", "[", "ent", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "ent", "\n", "i", "+=", "1", "\n", "", "word2ID", "[", "'unk'", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "'unk'", "\n", "return", "word2ID", ",", "ID2word", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN_11.preprocessing_file_1.build_embedding_dict": [[58, 77], ["numpy.zeros", "word_to_id.items", "Model.wv.vocab.keys", "Model.wv.get_vector", "Model.wv.get_vector", "OOV_count.append", "len", "word_to_id.keys"], "function", ["None"], ["", "def", "build_embedding_dict", "(", "Model", ",", "size", ",", "word_to_id", ")", ":", "\n", "    ", "\"\"\"\n\n    :param Model: Glove word2vec model\n    :param size: embedding vector dimension size\n    :param threshold: number of occurence\n    :param word_to_id: word to id dictionary\n    :return: embedding matrix, out of vocabulary words\n    \"\"\"", "\n", "# unk_count = np.random.normal(0, 1, (size,))", "\n", "OOV_count", "=", "[", "]", "\n", "embedding_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "word_to_id", ".", "keys", "(", ")", ")", "+", "1", ",", "size", ")", ")", "\n", "for", "key", ",", "value", "in", "word_to_id", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", "in", "Model", ".", "wv", ".", "vocab", ".", "keys", "(", ")", ":", "\n", "            ", "embedding_matrix", "[", "key", "]", "=", "Model", ".", "wv", ".", "get_vector", "(", "value", ")", "\n", "", "else", ":", "\n", "            ", "embedding_matrix", "[", "key", "]", "=", "Model", ".", "wv", ".", "get_vector", "(", "\"unk\"", ")", "\n", "OOV_count", ".", "append", "(", "value", ")", "\n", "", "", "return", "embedding_matrix", ",", "OOV_count", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN_11.preprocessing_file_1.get_rel_dict": [[79, 96], ["collections.defaultdict", "collections.defaultdict", "enumerate", "print", "print", "rel_head[].append", "rel_tail[].append"], "function", ["None"], ["", "def", "get_rel_dict", "(", "head_list", ",", "tail_list", ",", "rel_list", ")", ":", "\n", "    ", "\"\"\"\n    :param head_list: entity list with head, tail, relations\n    :param tail_list: tail list\n    :param rel_list : relations list\n    :return: dictionary of relations mapped to entities\n    \"\"\"", "\n", "rel_head", "=", "defaultdict", "(", "list", ")", "\n", "rel_tail", "=", "defaultdict", "(", "list", ")", "\n", "for", "index", ",", "entity", "in", "enumerate", "(", "rel_list", ")", ":", "\n", "        ", "print", "(", "index", ",", "entity", ")", "\n", "print", "(", "head_list", "[", "index", "]", ",", "tail_list", "[", "index", "]", ")", "\n", "if", "head_list", "[", "index", "]", "not", "in", "rel_head", "[", "entity", "]", ":", "\n", "            ", "rel_head", "[", "entity", "]", ".", "append", "(", "head_list", "[", "index", "]", ")", "\n", "", "if", "tail_list", "[", "index", "]", "not", "in", "rel_tail", "[", "entity", "]", ":", "\n", "            ", "rel_tail", "[", "entity", "]", ".", "append", "(", "tail_list", "[", "index", "]", ")", "\n", "", "", "return", "rel_head", ",", "rel_tail", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN_11.preprocessing_file_1.build_test_dev_vec": [[98, 128], ["collections.defaultdict", "range", "print", "len", "entity.strip.split", "temp_list.append", "data_list[].tolist", "entity.strip.strip", "word_to_id.keys", "temp.append", "temp.append"], "function", ["None"], ["", "def", "build_test_dev_vec", "(", "data_list", ",", "word_to_id", ",", "train", "=", "False", ",", "dataset", "=", "\"WN11\"", ")", ":", "\n", "    ", "\"\"\"\n    :param data_list: data frame of relation, head and tail\n    :param word_to_id: word to id dictionary\n    :return: test data build with negative example and positive examples with id values\n    \"\"\"", "\n", "# columns = data_list.columns.tolist()", "\n", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", "\n", "build_dict", "=", "defaultdict", "(", "list", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "columns", ")", ")", ":", "\n", "        ", "temp_list", "=", "[", "]", "\n", "a", "=", "0", "\n", "for", "entity", "in", "data_list", "[", "columns", "[", "k", "]", "]", ":", "\n", "            ", "if", "dataset", "==", "\"WN11\"", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", "'__'", ")", "\n", "", "temp", "=", "[", "]", "\n", "ent", "=", "entity", ".", "split", "(", "\"_\"", ")", "\n", "for", "y", "in", "ent", ":", "\n", "                ", "if", "y", "in", "word_to_id", ".", "keys", "(", ")", ":", "\n", "                    ", "temp", ".", "append", "(", "word_to_id", "[", "y", "]", ")", "\n", "", "else", ":", "\n", "                    ", "a", "+=", "1", "\n", "temp", ".", "append", "(", "word_to_id", "[", "'unk'", "]", ")", "\n", "# print(temp, ent, train)", "\n", "", "", "temp_list", ".", "append", "(", "temp", ")", "\n", "", "build_dict", "[", "columns", "[", "k", "]", "]", "=", "temp_list", "\n", "if", "not", "train", ":", "\n", "            ", "build_dict", "[", "'score'", "]", "=", "data_list", "[", "'score'", "]", ".", "tolist", "(", ")", "\n", "", "", "print", "(", "a", ")", "\n", "return", "build_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN_11.preprocessing_file_1.main": [[130, 206], ["print", "print", "pandas.read_csv", "print", "preprocessing_file_1.get_train_entities", "print", "pandas.read_csv", "pandas.read_csv", "gensim.test.utils.datapath", "gensim.test.utils.get_tmpfile", "gensim.scripts.glove2word2vec.glove2word2vec", "gensim.models.KeyedVectors.load_word2vec_format", "preprocessing_file_1.word_2_id", "preprocessing_file_1.build_embedding_dict", "print", "data_list[].tolist", "data_list[].tolist", "data_list[].tolist", "preprocessing_file_1.get_rel_dict", "preprocessing_file_1.build_test_dev_vec", "preprocessing_file_1.build_test_dev_vec", "preprocessing_file_1.build_test_dev_vec", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "type", "pd.read_csv.head", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.get_train_entities", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.word_2_id", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_embedding_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["", "def", "main", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "# store_location = \"/home/rpatel12/ferraro_user/NAM_Modified_data/data_sets/WN_11/\"", "\n", "# import pandas as pd", "\n", "\n", "# DATA_LOCATION = \"/home/rpatel12/ferraro_user/WN11_1/\"", "\n", "    ", "print", "(", "args", ")", "\n", "print", "(", "type", "(", "args", ")", ")", "\n", "DATA_LOCATION", "=", "args", "[", "0", "]", "\n", "# model_location = \"/home/rpatel12/ferraro_user/glove_data/\"", "\n", "model_location", "=", "args", "[", "1", "]", "\n", "store_location", "=", "DATA_LOCATION", "\n", "data_set_type", "=", "args", "[", "2", "]", "\n", "data_list", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"data_list_train.csv\"", ")", "\n", "print", "(", "data_list", ".", "head", "(", ")", ")", "\n", "token_list", "=", "get_train_entities", "(", "data_list", ",", "dataset", "=", "data_set_type", ")", "\n", "print", "(", "len", "(", "token_list", ")", ")", "\n", "data_dev", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"data_list_dev.csv\"", ")", "\n", "data_test", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"data_list_test.csv\"", ")", "\n", "\n", "glove_file", "=", "datapath", "(", "model_location", "+", "\"glove.840B.300d.txt\"", ")", "\n", "tmp_file", "=", "get_tmpfile", "(", "model_location", "+", "\"test_word2vec.txt\"", ")", "\n", "#", "\n", "_", "=", "glove2word2vec", "(", "glove_file", ",", "tmp_file", ")", "\n", "model", "=", "KeyedVectors", ".", "load_word2vec_format", "(", "tmp_file", ")", "\n", "\n", "# converting word id and id to word", "\n", "word_2_id_dict", ",", "id_2_word_dict", "=", "word_2_id", "(", "token_list", ")", "\n", "\n", "# building the embedding matrix", "\n", "embedding_matrix", ",", "OOV_word", "=", "build_embedding_dict", "(", "model", ",", "300", ",", "id_2_word_dict", ")", "\n", "print", "(", "OOV_word", ")", "\n", "# build relation to head and relation to tail dictionaries", "\n", "head", "=", "data_list", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "tail", "=", "data_list", "[", "'tail'", "]", ".", "tolist", "(", ")", "\n", "rel", "=", "data_list", "[", "'relation'", "]", ".", "tolist", "(", ")", "\n", "\n", "relation_2_head", ",", "relation_2_tail", "=", "get_rel_dict", "(", "head", ",", "tail", ",", "rel", ")", "\n", "train_vec_dict", "=", "build_test_dev_vec", "(", "data_list", ",", "word_2_id_dict", ",", "train", "=", "True", ",", "dataset", "=", "data_set_type", ")", "\n", "dev_vec_dict", "=", "build_test_dev_vec", "(", "data_dev", ",", "word_2_id_dict", ",", "dataset", "=", "data_set_type", ")", "\n", "test_vec_dict", "=", "build_test_dev_vec", "(", "data_test", ",", "word_2_id_dict", ",", "dataset", "=", "data_set_type", ")", "\n", "\n", "# saving embedding matrix", "\n", "output", "=", "open", "(", "store_location", "+", "\"embedding_matrix.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "embedding_matrix", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n", "# saving train data", "\n", "output", "=", "open", "(", "store_location", "+", "\"train_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "train_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving dev data", "\n", "output", "=", "open", "(", "store_location", "+", "\"dev_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "dev_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n", "# saving test data", "\n", "output", "=", "open", "(", "store_location", "+", "\"test_vec_dict.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "test_vec_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n", "# saving word to id dict", "\n", "output", "=", "open", "(", "store_location", "+", "\"word_2_id.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "word_2_id_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving id to work dict", "\n", "output", "=", "open", "(", "store_location", "+", "\"id_2_word.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "id_2_word_dict", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to tail", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_tail.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "relation_2_tail", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "# saving rel to head", "\n", "output", "=", "open", "(", "store_location", "+", "\"relation_2_head.pkl\"", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "relation_2_head", ",", "output", ",", "protocol", "=", "2", ")", "\n", "output", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN_11.data_collector.get_ids": [[19, 30], ["head.strip.split", "head.strip.strip", "word_2_id.keys", "temp_list.append", "temp_list.append"], "function", ["None"], ["def", "get_ids", "(", "entity", ",", "word_2_id", ",", "json_in", ",", "column_name", "=", "\"relation\"", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "# if dataset == \"WN11\":", "\n", "#     head = head.strip(\"__\")", "\n", "if", "column_name", "==", "'relation'", ":", "\n", "        ", "x", "=", "entity", ".", "split", "(", "\"/\"", ")", "[", "1", ":", "]", "\n", "ent", "=", "x", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "\n", "try", ":", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN_11.data_collector.build_vector": [[32, 45], ["pandas.DataFrame"], "function", ["None"], ["x", "=", "ent", ".", "split", "(", ")", "\n", "print", "(", "\"We are getting id: == > \"", ",", "entity", ",", "ent", ",", "x", ")", "\n", "", "except", "KeyError", ":", "\n", "            ", "ent", "=", "'unk'", "\n", "x", "=", "ent", ".", "split", "(", ")", "\n", "print", "(", "\"We are getting id: == > \"", ",", "entity", ",", "ent", ",", "x", ")", "\n", "\n", "", "", "x", "=", "[", "i", "for", "i", "in", "x", "if", "i", "!=", "''", "]", "\n", "for", "k", "in", "x", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "\"We are got id: == > \"", ",", "temp_list", ",", "entity", ",", "ent", ",", "x", ")", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN_11.data_collector.main": [[47, 119], ["pandas.read_csv", "int", "int", "int", "load_data[].tolist", "load_data[].tolist", "load_data[].tolist", "pickle.load", "range", "print", "print", "data_collector.build_vector", "build_vector.to_pickle", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pickle.load", "pickle.load", "open", "range", "len", "open", "open", "len", "data_collector.get_ids", "data_collector.get_ids", "tail_in.append", "range", "data_collector.get_ids", "random.sample", "data_collector.get_ids", "random.randint", "list", "list.remove", "random.sample", "tail_in.append", "len", "pickle.load.keys", "random.sample", "print", "data_collector.get_ids", "y_true.append", "y_true.append", "itertools.repeat", "itertools.repeat", "itertools.repeat", "itertools.repeat"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.build_vector", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids"], ["\n", "", "def", "get_ids_1", "(", "entity", ",", "word_2_id", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "\n", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "x", "=", "[", "i", "for", "i", "in", "x", "if", "i", "!=", "''", "]", "\n", "for", "k", "in", "x", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "\"We are got id: == > \"", ",", "temp_list", ",", "entity", ",", "x", ")", "\n", "return", "temp_list", "\n", "\n", "\n", "", "def", "build_vector", "(", "head_list", ",", "tail_list", ",", "relation_list", ",", "y_true", ",", "interchange", "=", "False", ")", ":", "\n", "    ", "df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", ",", "\"score\"", "]", ")", "\n", "if", "interchange", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "tail_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "head_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "else", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "head_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "tail_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "return", "df", "\n", "\n", "\n", "", "def", "main", "(", ")", ":", "\n", "    ", "DATA_LOCATION", "=", "sys", ".", "argv", "[", "1", "]", "\n", "STORE_LOCATION", "=", "DATA_LOCATION", "\n", "data_location", "=", "DATA_LOCATION", "\n", "\n", "# change = sys.argv[2]", "\n", "file_name", "=", "sys", ".", "argv", "[", "2", "]", "\n", "lower", "=", "int", "(", "sys", ".", "argv", "[", "3", "]", ")", "\n", "upper", "=", "int", "(", "sys", ".", "argv", "[", "4", "]", ")", "\n", "epoch", "=", "int", "(", "sys", ".", "argv", "[", "5", "]", ")", "\n", "relation_file", "=", "sys", ".", "argv", "[", "6", "]", "\n", "input_file", "=", "sys", ".", "argv", "[", "7", "]", "\n", "type_", "=", "sys", ".", "argv", "[", "8", "]", "\n", "json_file", "=", "sys", ".", "argv", "[", "9", "]", "\n", "with", "open", "(", "DATA_LOCATION", "+", "json_file", ")", "as", "file", ":", "\n", "        ", "json_data", "=", "json", ".", "load", "(", "file", ")", "\n", "", "load_data", "=", "pd", ".", "read_csv", "(", "data_location", "+", "input_file", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ")", "\n", "head_list", "=", "load_data", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "relation_list", "=", "load_data", "[", "\"relation\"", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "load_data", "[", "\"tail\"", "]", ".", "tolist", "(", ")", "\n", "# if change == \"False\":", "\n", "relation_dict", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "relation_file", ",", "\"rb\"", ")", ")", "\n", "# else:", "\n", "#     relation_dict = pickle.load(open(DATA_LOCATION + relation_file, \"rb\"))", "\n", "word_2_id", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "\"word_2_id.pkl\"", ",", "\"rb\"", ")", ")", "\n", "g", "=", "512", "\n", "head_vec_1", "=", "[", "]", "\n", "tail_vec_1", "=", "[", "]", "\n", "relation_vec", "=", "[", "]", "\n", "y_output", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "epoch", ")", ":", "\n", "        ", "for", "k", "in", "(", "range", "(", "len", "(", "head_list", ")", ")", ")", ":", "\n", "            ", "head_en", "=", "get_ids", "(", "head_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"Head\"", ",", ")", "\n", "print", "(", "\"Head\"", ")", "\n", "tail_en", "=", "get_ids", "(", "tail_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"tail\"", ")", "\n", "print", "(", "\"Tail\"", ")", "\n", "relation1", "=", "relation_list", "[", "k", "]", "\n", "# print(head_list[k], relation1, tail_list[k])", "\n", "if", "relation1", "==", "\"gender\"", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "j", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "'relation'", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "2", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "2", ")", "]", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.get_train_entities": [[16, 46], ["data_in.columns.tolist", "range", "collections.Counter", "list", "print", "len", "collections.Counter.keys", "entity.strip.strip", "entity.strip.split", "entity.strip.split", "val.split"], "function", ["None"], ["def", "get_train_entities", "(", "data_in", ",", "json_file", ",", "data_set", "=", "\"FB15K-237\"", ")", ":", "\n", "    ", "\"\"\"\n    :param data_set: type of dataset\n    :param data_in:file read line by\n    :return: token list\n    \"\"\"", "\n", "token_list", "=", "[", "]", "\n", "count", "=", "0", "\n", "key_add", "=", "[", "]", "\n", "column_name", "=", "data_in", ".", "columns", ".", "tolist", "(", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "column_name", ")", ")", ":", "\n", "        ", "if", "column_name", "[", "k", "]", "==", "'Head'", "or", "column_name", "[", "k", "]", "==", "'tail'", ":", "\n", "            ", "temp", "=", "data_in", "[", "column_name", "[", "k", "]", "]", ".", "tolist", "(", ")", "\n", "for", "entity", "in", "temp", ":", "\n", "# if json_file[entity]:", "\n", "#     ent_in = json_file[entity][0]", "\n", "# else:", "\n", "#     key_add +=[entity]", "\n", "#     ent_in = 'unk'", "\n", "#     count +=1", "\n", "                ", "try", ":", "\n", "                    ", "print", "(", "entity", ")", "\n", "print", "(", "json_file", "[", "entity", "]", ")", "\n", "ent_in", "=", "json_file", "[", "entity", "]", "[", "'label'", "]", "\n", "", "except", "KeyError", ":", "\n", "                    ", "key_add", "+=", "[", "entity", "]", "\n", "ent_in", "=", "'unk'", "\n", "count", "+=", "1", "\n", "", "ent_in", "=", "ent_in", ".", "split", "(", ")", "\n", "print", "(", "ent_in", ")", "\n", "token_list", "+=", "[", "ent", "for", "ent", "in", "ent_in", "if", "ent", "!=", "''", "]", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.word_2_id": [[48, 63], ["collections.defaultdict", "collections.defaultdict"], "function", ["None"], ["            ", "temp", "=", "data_in", "[", "column_name", "[", "k", "]", "]", ".", "tolist", "(", ")", "\n", "for", "entity", "in", "temp", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", ")", "\n", "entity", "=", "entity", ".", "split", "(", "'/'", ")", "\n", "\n", "for", "ent", "in", "entity", "[", "1", ":", "]", ":", "\n", "                    ", "if", "'_'", "in", "ent", ":", "\n", "                        ", "ent", "=", "ent", ".", "split", "(", "'_'", ")", "\n", "token_list", "+=", "[", "e", "for", "e", "in", "ent", "[", "1", ":", "]", "if", "e", "!=", "' '", "]", "\n", "", "else", ":", "\n", "                        ", "token_list", "+=", "[", "ent", "]", "\n", "", "", "print", "(", "entity", "[", "1", ":", "]", ")", "\n", "\n", "", "", "", "list_1", "=", "Counter", "(", "token_list", ")", "\n", "print", "(", "count", ")", "\n", "print", "(", "list_1", "[", "'unk'", "]", ")", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_embedding_dict": [[65, 84], ["numpy.zeros", "word_to_id.items", "Model.wv.vocab.keys", "Model.wv.get_vector", "Model.wv.get_vector", "OOV_count.append", "len", "word_to_id.keys"], "function", ["None"], ["print", "(", "list", "(", "set", "(", "key_add", ")", ")", ")", "\n", "token_list", "=", "list", "(", "list_1", ".", "keys", "(", ")", ")", "\n", "return", "token_list", "\n", "\n", "\n", "", "def", "word_2_id", "(", "token_list", ")", ":", "\n", "    ", "\"\"\"\n    :param token_list: list of words\n    :return: id_to_word and word_to_id list\n    \"\"\"", "\n", "word2ID", "=", "defaultdict", "(", ")", "\n", "ID2word", "=", "defaultdict", "(", ")", "\n", "i", "=", "1", "\n", "for", "ent", "in", "token_list", ":", "\n", "        ", "word2ID", "[", "ent", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "ent", "\n", "i", "+=", "1", "\n", "", "word2ID", "[", "'unk'", "]", "=", "i", "\n", "ID2word", "[", "i", "]", "=", "'unk'", "\n", "return", "word2ID", ",", "ID2word", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.get_rel_dict": [[86, 107], ["data_in[].tolist", "data_in[].tolist", "data_in[].tolist", "collections.defaultdict", "collections.defaultdict", "enumerate", "rel_head[].append", "rel_tail[].append"], "function", ["None"], ["\n", "", "def", "build_embedding_dict", "(", "Model", ",", "size", ",", "word_to_id", ")", ":", "\n", "    ", "\"\"\"\n\n    :param Model: Glove word2vec model\n    :param size: embedding vector dimension size\n    :param threshold: number of occurence\n    :param word_to_id: word to id dictionary\n    :return: embedding matrix, out of vocabulary words\n    \"\"\"", "\n", "# unk_count = np.random.normal(0, 1, (size,))", "\n", "OOV_count", "=", "defaultdict", "(", ")", "\n", "embedding_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "word_to_id", ".", "keys", "(", ")", ")", "+", "1", ",", "size", ")", ")", "\n", "for", "key", ",", "value", "in", "word_to_id", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", "in", "Model", ".", "wv", ".", "vocab", ".", "keys", "(", ")", ":", "\n", "            ", "embedding_matrix", "[", "key", "]", "=", "Model", ".", "wv", ".", "get_vector", "(", "value", ")", "\n", "", "else", ":", "\n", "            ", "if", "value", "in", "OOV_count", ".", "keys", "(", ")", ":", "\n", "                ", "embedding_matrix", "[", "key", "]", "=", "OOV_count", "[", "value", "]", "\n", "", "else", ":", "\n", "                ", "embedding_matrix", "[", "key", "]", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "(", "300", ",", ")", ")", "\n", "OOV_count", "[", "value", "]", "=", "embedding_matrix", "[", "key", "]", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec": [[109, 140], ["collections.defaultdict", "range", "print", "len", "temp_list.append", "entity.strip.strip", "entity.strip.split", "entity.strip.split", "word_to_id.keys", "temp.append", "temp.append"], "function", ["None"], ["", "", "", "return", "embedding_matrix", ",", "OOV_count", "\n", "\n", "\n", "", "def", "get_rel_dict", "(", "data_in", ",", "json_in", ")", ":", "\n", "    ", "\"\"\"\n    :param data_in: triplets in\n    :return: dictionary of relations mapped to entities\n    \"\"\"", "\n", "head_list", "=", "data_in", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "data_in", "[", "'tail'", "]", ".", "tolist", "(", ")", "\n", "rel_list", "=", "data_in", "[", "'relation'", "]", ".", "tolist", "(", ")", "\n", "\n", "rel_head", "=", "defaultdict", "(", "list", ")", "\n", "rel_tail", "=", "defaultdict", "(", "list", ")", "\n", "for", "index", ",", "entity", "in", "enumerate", "(", "rel_list", ")", ":", "\n", "# if json_in[head_list[index]]:", "\n", "#     head_entity = json_in[head_list[index]][0]", "\n", "# else:", "\n", "#     head_entity = 'unk'", "\n", "# if json_in[tail_list[index]]:", "\n", "#     tail_entity = json_in[tail_list[index]][0]", "\n", "# else:", "\n", "#     tail_entity = 'unk'", "\n", "        ", "try", ":", "\n", "            ", "head_entity", "=", "json_in", "[", "head_list", "[", "index", "]", "]", "[", "'label'", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "head_entity", "=", "'unk'", "\n", "", "try", ":", "\n", "            ", "tail_entity", "=", "json_in", "[", "tail_list", "[", "index", "]", "]", "[", "'label'", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "tail_entity", "=", "'unk'", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.main": [[142, 234], ["print", "print", "pandas.read_csv", "print", "preprocessing.get_train_entities", "print", "pandas.read_csv", "pandas.read_csv", "gensim.test.utils.datapath", "gensim.test.utils.get_tmpfile", "gensim.scripts.glove2word2vec.glove2word2vec", "gensim.models.KeyedVectors.load_word2vec_format", "preprocessing.word_2_id", "preprocessing.build_embedding_dict", "print", "print", "preprocessing.get_rel_dict", "preprocessing.get_rel_dict", "preprocessing.get_rel_dict", "preprocessing.build_test_dev_vec", "preprocessing.build_test_dev_vec", "preprocessing.build_test_dev_vec", "open", "pickle.dump", "pickle.dump", "open.close", "sklearn.externals.joblib.dump", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "open", "pickle.dump", "pickle.dump", "open.close", "type", "pd.read_csv.head", "len", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.get_train_entities", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.word_2_id", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_embedding_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.preprocessing.build_test_dev_vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["            ", "rel_head", "[", "entity", "]", ".", "append", "(", "head_entity", ")", "\n", "", "if", "tail_entity", "not", "in", "rel_tail", "[", "entity", "]", ":", "\n", "            ", "rel_tail", "[", "entity", "]", ".", "append", "(", "tail_entity", ")", "\n", "", "", "return", "rel_head", ",", "rel_tail", "\n", "\n", "\n", "", "def", "build_test_dev_vec", "(", "data_list", ",", "word_to_id", ",", "entity2text", ")", ":", "\n", "    ", "\"\"\"\n    :param json_in: json_file entity to text\n    :param data_list: data frame of relation, head and tail\n    :param word_to_id: word to id dictionary\n    :return: test data build with negative example and positive examples with id values\n    \"\"\"", "\n", "# columns = data_list.columns.tolist()", "\n", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", "\n", "build_dict", "=", "defaultdict", "(", "list", ")", "\n", "a", "=", "0", "\n", "for", "k", "in", "range", "(", "len", "(", "columns", ")", ")", ":", "\n", "        ", "temp_list", "=", "[", "]", "\n", "if", "columns", "[", "k", "]", "==", "\"Head\"", "or", "columns", "[", "k", "]", "==", "\"tail\"", ":", "\n", "            ", "for", "entity", "in", "data_list", "[", "columns", "[", "k", "]", "]", ":", "\n", "# if entity2text[entity]:", "\n", "#     ent = entity2text[entity][0]", "\n", "# else:", "\n", "#     ent = 'unk'", "\n", "                ", "try", ":", "\n", "                    ", "ent", "=", "entity2text", "[", "entity", "]", "[", "'label'", "]", "\n", "ent", "=", "ent", ".", "strip", "(", ")", "\n", "", "except", "KeyError", ":", "\n", "                    ", "ent", "=", "'unk'", "\n", "", "ent", "=", "ent", ".", "split", "(", ")", "\n", "ent", "=", "[", "i", "for", "i", "in", "ent", "if", "i", "!=", "''", "]", "\n", "temp", "=", "[", "]", "\n", "for", "y", "in", "ent", ":", "\n", "                    ", "if", "y", "in", "word_to_id", ".", "keys", "(", ")", ":", "\n", "                        ", "temp", ".", "append", "(", "word_to_id", "[", "y", "]", ")", "\n", "", "else", ":", "\n", "                        ", "a", "+=", "1", "\n", "temp", ".", "append", "(", "word_to_id", "[", "'unk'", "]", ")", "\n", "", "", "print", "(", "ent", ")", "\n", "temp_list", ".", "append", "(", "temp", ")", "\n", "", "", "if", "columns", "[", "k", "]", "==", "'relation'", ":", "\n", "            ", "for", "entity", "in", "data_list", "[", "columns", "[", "k", "]", "]", ":", "\n", "                ", "entity", "=", "entity", ".", "strip", "(", ")", "\n", "entity", "=", "entity", ".", "split", "(", "'/'", ")", "\n", "temp", "=", "[", "]", "\n", "for", "ent", "in", "entity", "[", "1", ":", "]", ":", "\n", "                    ", "if", "'_'", "in", "ent", ":", "\n", "                        ", "ent", "=", "ent", ".", "split", "(", "'_'", ")", "\n", "for", "e", "in", "ent", ":", "\n", "                            ", "if", "e", "!=", "''", "and", "e", "in", "word_to_id", ":", "\n", "                                ", "temp", ".", "append", "(", "word_to_id", "[", "e", "]", ")", "\n", "", "else", ":", "\n", "                                ", "temp", ".", "append", "(", "word_to_id", "[", "'unk'", "]", ")", "\n", "", "", "", "else", ":", "\n", "\n", "                        ", "temp", "+=", "[", "word_to_id", "[", "ent", "]", "]", "\n", "", "print", "(", "ent", ")", "\n", "", "temp_list", ".", "append", "(", "temp", ")", "\n", "\n", "", "", "build_dict", "[", "columns", "[", "k", "]", "]", "=", "temp_list", "\n", "", "return", "build_dict", "\n", "\n", "\n", "", "def", "main", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "# store_location = \"/home/rpatel12/ferraro_user/NAM_Modified_data/data_sets/WN_11/\"", "\n", "# import pandas as pd", "\n", "\n", "# DATA_LOCATION = \"/home/rpatel12/ferraro_user/WN11_1/\"", "\n", "    ", "print", "(", "args", ")", "\n", "print", "(", "type", "(", "args", ")", ")", "\n", "DATA_LOCATION", "=", "args", "[", "0", "]", "\n", "# model_location = \"/home/rpatel12/ferraro_user/glove_data/\"", "\n", "model_location", "=", "args", "[", "1", "]", "\n", "store_location", "=", "DATA_LOCATION", "\n", "data_set_type", "=", "args", "[", "2", "]", "\n", "json_data", "=", "args", "[", "3", "]", "\n", "with", "open", "(", "DATA_LOCATION", "+", "json_data", ",", "encoding", "=", "'latin-1'", ")", "as", "file_json", ":", "\n", "        ", "json_data", "=", "json", ".", "load", "(", "file_json", ")", "\n", "# json_data = joblib.load(DATA_LOCATION + json_data)", "\n", "", "data_list", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"train.txt\"", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ",", "encoding", "=", "'latin-1'", ")", "\n", "print", "(", "data_list", ".", "head", "(", ")", ")", "\n", "token_list", "=", "get_train_entities", "(", "data_list", ",", "json_data", ",", "data_set", "=", "data_set_type", ")", "\n", "print", "(", "len", "(", "token_list", ")", ")", "\n", "data_dev", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"valid.txt\"", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ",", "encoding", "=", "'latin-1'", ")", "\n", "data_test", "=", "pd", ".", "read_csv", "(", "DATA_LOCATION", "+", "\"test.txt\"", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ",", "encoding", "=", "'latin-1'", ")", "\n", "\n", "glove_file", "=", "datapath", "(", "model_location", "+", "\"glove.840B.300d.txt\"", ")", "\n", "tmp_file", "=", "get_tmpfile", "(", "model_location", "+", "\"test_word2vec.txt\"", ")", "\n", "#", "\n", "_", "=", "glove2word2vec", "(", "glove_file", ",", "tmp_file", ")", "\n", "model", "=", "KeyedVectors", ".", "load_word2vec_format", "(", "tmp_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.data_collector.get_ids": [[20, 31], ["head.split.split", "val.split.split", "word_2_id.keys", "id_list.append", "id_list.append"], "function", ["None"], ["    ", "temp_list", "=", "[", "]", "\n", "# if dataset == \"WN11\":", "\n", "#     head = head.strip(\"__\")", "\n", "if", "column_name", "==", "'relation'", ":", "\n", "        ", "x", "=", "entity", ".", "split", "(", "\"/\"", ")", "[", "1", ":", "]", "\n", "ent", "=", "x", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "\n", "try", ":", "\n", "            ", "ent", "=", "json_in", "[", "entity", ".", "strip", "(", ")", "]", "[", "'label'", "]", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.data_collector.build_vector": [[45, 58], ["pandas.DataFrame"], "function", ["None"], ["", "", "print", "(", "\"We are got id: == > \"", ",", "temp_list", ",", "entity", ",", "ent", ",", "x", ")", "\n", "return", "temp_list", "\n", "\n", "", "def", "get_ids_1", "(", "entity", ",", "word_2_id", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "\n", "print", "(", "\"This is entity: \"", ",", "entity", ")", "\n", "x", "=", "entity", ".", "split", "(", ")", "\n", "x", "=", "[", "i", "for", "i", "in", "x", "if", "i", "!=", "''", "]", "\n", "for", "k", "in", "x", ":", "\n", "        ", "if", "k", "in", "word_2_id", ".", "keys", "(", ")", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "k", "]", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word_2_id", "[", "'unk'", "]", ")", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.WN18RR.data_collector.main": [[60, 132], ["int", "int", "int", "load_data[].tolist", "load_data[].tolist", "load_data[].tolist", "pickle.load", "range", "print", "print", "data_collector.build_vector", "build_vector.to_pickle", "pandas.read_csv", "pandas.read_csv", "pandas.read_csv", "pickle.load", "pickle.load", "open", "range", "len", "open", "open", "len", "data_collector.get_ids", "data_collector.get_ids", "tail_in.append", "range", "data_collector.get_ids", "random.sample", "data_collector.get_ids", "random.randint", "list", "list.remove", "random.sample", "tail_in.append", "len", "pickle.load.keys", "random.sample", "print", "data_collector.get_ids", "y_true.append", "y_true.append", "itertools.repeat", "itertools.repeat", "itertools.repeat", "itertools.repeat"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.build_vector", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids"], ["return", "temp_list", "\n", "\n", "\n", "", "def", "build_vector", "(", "head_list", ",", "tail_list", ",", "relation_list", ",", "y_true", ",", "interchange", "=", "False", ")", ":", "\n", "    ", "df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", ",", "\"score\"", "]", ")", "\n", "if", "interchange", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "tail_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "head_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "else", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "head_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "tail_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "return", "df", "\n", "\n", "\n", "", "def", "main", "(", ")", ":", "\n", "    ", "DATA_LOCATION", "=", "sys", ".", "argv", "[", "1", "]", "\n", "STORE_LOCATION", "=", "DATA_LOCATION", "\n", "data_location", "=", "DATA_LOCATION", "\n", "\n", "# change = sys.argv[2]", "\n", "file_name", "=", "sys", ".", "argv", "[", "2", "]", "\n", "lower", "=", "int", "(", "sys", ".", "argv", "[", "3", "]", ")", "\n", "upper", "=", "int", "(", "sys", ".", "argv", "[", "4", "]", ")", "\n", "epoch", "=", "int", "(", "sys", ".", "argv", "[", "5", "]", ")", "\n", "relation_file", "=", "sys", ".", "argv", "[", "6", "]", "\n", "input_file", "=", "sys", ".", "argv", "[", "7", "]", "\n", "type_", "=", "sys", ".", "argv", "[", "8", "]", "\n", "json_file", "=", "sys", ".", "argv", "[", "9", "]", "\n", "with", "open", "(", "DATA_LOCATION", "+", "json_file", ")", "as", "file", ":", "\n", "        ", "json_data", "=", "json", ".", "load", "(", "file", ")", "\n", "", "load_data", "=", "pd", ".", "read_csv", "(", "data_location", "+", "input_file", ",", "sep", "=", "'\\t'", ",", "names", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", ")", "\n", "head_list", "=", "load_data", "[", "\"Head\"", "]", ".", "tolist", "(", ")", "\n", "relation_list", "=", "load_data", "[", "\"relation\"", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "load_data", "[", "\"tail\"", "]", ".", "tolist", "(", ")", "\n", "# if change == \"False\":", "\n", "relation_dict", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "relation_file", ",", "\"rb\"", ")", ")", "\n", "# else:", "\n", "#     relation_dict = pickle.load(open(DATA_LOCATION + relation_file, \"rb\"))", "\n", "word_2_id", "=", "pickle", ".", "load", "(", "open", "(", "DATA_LOCATION", "+", "\"word_2_id.pkl\"", ",", "\"rb\"", ")", ")", "\n", "g", "=", "512", "\n", "head_vec_1", "=", "[", "]", "\n", "tail_vec_1", "=", "[", "]", "\n", "relation_vec", "=", "[", "]", "\n", "y_output", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "epoch", ")", ":", "\n", "        ", "for", "k", "in", "(", "range", "(", "len", "(", "head_list", ")", ")", ")", ":", "\n", "            ", "head_en", "=", "get_ids", "(", "head_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"Head\"", ",", ")", "\n", "print", "(", "\"Head\"", ")", "\n", "tail_en", "=", "get_ids", "(", "tail_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "\"tail\"", ")", "\n", "print", "(", "\"Tail\"", ")", "\n", "relation1", "=", "relation_list", "[", "k", "]", "\n", "# print(head_list[k], relation1, tail_list[k])", "\n", "if", "relation1", "==", "\"gender\"", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "j", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "'relation'", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "2", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "2", ")", "]", "\n", "negative_sample", "=", "random", ".", "sample", "(", "relation_dict", "[", "relation1", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "k", "]", ",", "word_2_id", ",", "json_data", ",", "column_name", "=", "'relation'", ")", "\n", "k1", "=", "random", ".", "randint", "(", "lower", ",", "upper", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "k1", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "k1", ")", "]", "\n", "# negative_sample = random.sample(tail_list, k1-1)", "\n", "key_list", "=", "list", "(", "relation_dict", ".", "keys", "(", ")", ")", "\n", "key_list", ".", "remove", "(", "relation1", ")", "\n", "random", ".", "shuffle", "(", "key_list", ")", "\n", "rel_sample", "=", "random", ".", "sample", "(", "key_list", ",", "len", "(", "key_list", ")", ")", "\n", "negative_sample", "=", "[", "]", "\n", "val", "=", "0", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_lm.pad_sequence_": [[19, 24], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "'post'", ",", "\n", "truncating", "=", "'post'", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_lm.eval_lm": [[26, 48], ["len", "logging.info", "logging.info", "range", "logging.info", "logging.info", "logging.info", "logging.info", "numpy.exp", "logging.info", "logging.info", "logging.info", "logging.info", "data_set.next", "sum", "max", "train_lm.pad_sequence_", "Model.predict_lang", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.next", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.predict_lang"], ["", "def", "eval_lm", "(", "data_set", ",", "set_type", "=", "'Dev'", ")", ":", "\n", "    ", "total_loss_", ",", "iters", "=", "0", ",", "0", "\n", "word_count", "=", "0", "\n", "M_", "=", "len", "(", "data_set", ".", "data", ")", "\n", "logging", ".", "info", "(", "\"Dev sentence number: {}\"", ".", "format", "(", "M_", ")", ")", "\n", "for", "_", "in", "range", "(", "0", ",", "M_", ",", "1", ")", ":", "\n", "        ", "sent_in", "=", "data_set", ".", "next", "(", ")", "\n", "a_", "=", "[", "len", "(", "x", ")", "-", "2", "for", "x", "in", "sent_in", "]", "\n", "word_count", "+=", "(", "sum", "(", "a_", ")", ")", "\n", "max_sent_", "=", "max", "(", "a_", ")", "\n", "if", "max_sent_", ">", "2", ":", "\n", "            ", "sent_pad_", "=", "pad_sequence_", "(", "sent_in", ",", "max_length", "=", "max_sent_", ")", "\n", "loss_dev", ",", "score_dev", "=", "Model", ".", "predict_lang", "(", "sent_pad_", ")", "\n", "total_loss_", "+=", "loss_dev", "\n", "iters", "+=", "1", "\n", "", "", "avg_dev_loss", "=", "total_loss_", "/", "iters", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validation loss LM : {}\"", ".", "format", "(", "avg_dev_loss", ")", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" word count: {}\"", ".", "format", "(", "word_count", ")", ")", "\n", "perplexity_dev", "=", "np", ".", "exp", "(", "total_loss_", "/", "word_count", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validatoin results: ==== \"", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validation perplexity: {}\"", ".", "format", "(", "perplexity_dev", ")", ")", "\n", "return", "perplexity_dev", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.test_kge_lm.pad_sequence_": [[20, 25], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ",", "padding", "=", "'post'", ",", "truncating", "=", "'post'", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "padding", ",", "\n", "truncating", "=", "truncating", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.test_kge_lm.get_aucpr": [[27, 31], ["sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc"], "function", ["None"], ["", "def", "get_aucpr", "(", "y_out", ",", "y_true", ")", ":", "\n", "    ", "precision", ",", "recall", ",", "threshold", "=", "precision_recall_curve", "(", "y_out", ",", "y_true", ")", "\n", "aucpr", "=", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "aucpr", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.test_kge_lm.tuning": [[33, 41], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.test_kge_lm.tuning_1": [[43, 51], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning_1", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "0", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.test_kge_lm.evaluation": [[53, 76], ["range", "logging.info", "sklearn.metrics.roc_auc_score", "test_kge_lm.get_aucpr", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "test_kge_lm.tuning_1", "test_kge_lm.tuning", "len", "len", "len", "len", "sklearn.metrics.classification_report"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning"], ["", "def", "evaluation", "(", "y_out", ",", "pred_out", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "if", "data_type", ":", "\n", "        ", "pred_1", "=", "tuning_1", "(", "pred_out", ")", "\n", "", "else", ":", "\n", "        ", "pred_1", "=", "tuning", "(", "pred_out", ")", "\n", "", "acc", "=", "0", "\n", "assert", "len", "(", "pred_out", ")", "==", "len", "(", "y_out", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_1", ")", ")", ":", "\n", "        ", "if", "pred_1", "[", "i", "]", "==", "y_out", "[", "i", "]", ":", "\n", "            ", "acc", "+=", "1", "\n", "", "", "b", "=", "(", "acc", "/", "len", "(", "pred_1", ")", ")", "*", "100", "\n", "logging", ".", "info", "(", "\"The test accuracy: {}\"", ".", "format", "(", "b", ")", ")", "\n", "roc_score_test", "=", "roc_auc_score", "(", "y_out", ",", "pred_out", ")", "\n", "aucpr_test", "=", "get_aucpr", "(", "y_out", ",", "pred_out", ")", "\n", "f1_test", "=", "f1_score", "(", "y_out", ",", "pred_1", ")", "\n", "precision_test", "=", "precision_score", "(", "y_out", ",", "pred_1", ")", "\n", "recall_test", "=", "recall_score", "(", "y_out", ",", "pred_1", ")", "\n", "logging", ".", "info", "(", "\"This is the AUCPR score: {}\"", ".", "format", "(", "aucpr_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the roc_score: {}\"", ".", "format", "(", "roc_score_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the F1 score: {}\"", ".", "format", "(", "f1_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is precision: {}\"", ".", "format", "(", "precision_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is recall: {}\"", ".", "format", "(", "recall_test", ")", ")", "\n", "logging", ".", "info", "(", "\"Classification report: {}\"", ".", "format", "(", "classification_report", "(", "y_out", ",", "pred_1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.test_kge_lm.eval_data": [[78, 91], ["len", "range", "test_kge_lm.evaluation", "model.get_embed", "model.predict", "output_[].tolist"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict"], ["", "def", "eval_data", "(", "model", ",", "head_vec", ",", "tail_vec", ",", "rel_vec", ",", "label_ids", ",", "data_type", "=", "True", ")", ":", "\n", "    ", "N", "=", "len", "(", "head_vec", ")", "\n", "g1", "=", "1024", "\n", "output_dev_collector", "=", "[", "]", "\n", "for", "k1", "in", "(", "range", "(", "0", ",", "N", ",", "g1", ")", ")", ":", "\n", "        ", "if", "k1", "+", "g1", ">", "N", ":", "\n", "            ", "d1", "=", "N", "\n", "", "else", ":", "\n", "            ", "d1", "=", "k1", "+", "g1", "\n", "", "h", ",", "r", ",", "t", ",", "embed", "=", "model", ".", "get_embed", "(", "head_vec", "[", "k1", ":", "d1", "]", ",", "tail_vec", "[", "k1", ":", "d1", "]", ",", "rel_vec", "[", "k1", ":", "d1", "]", ")", "\n", "output_", "=", "model", ".", "predict", "(", "embed", ")", "\n", "output_dev_collector", "+=", "output_", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "evaluation", "(", "label_ids", ",", "output_dev_collector", ",", "data_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.test_kge_lm.eval_lm": [[93, 115], ["len", "print", "logging.info", "range", "logging.info", "logging.info", "numpy.exp", "logging.info", "logging.info", "data_set.next", "sum", "max", "test_kge_lm.pad_sequence_", "Model.predict_lang", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.next", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.predict_lang"], ["", "def", "eval_lm", "(", "data_set", ",", "set_type", "=", "'Dev'", ",", "dict_in", "=", "None", ")", ":", "\n", "    ", "total_loss_", ",", "iters", "=", "0", ",", "0", "\n", "word_count", "=", "0", "\n", "M_", "=", "len", "(", "data_set", ".", "data", ")", "\n", "print", "(", "M_", ")", "\n", "logging", ".", "info", "(", "\"Dev sentence number: {}\"", ".", "format", "(", "M_", ")", ")", "\n", "for", "_", "in", "range", "(", "0", ",", "M_", ",", "1", ")", ":", "\n", "        ", "sent_in", "=", "data_set", ".", "next", "(", ")", "\n", "a_", "=", "[", "len", "(", "x", ")", "-", "2", "for", "x", "in", "sent_in", "]", "\n", "word_count", "+=", "(", "sum", "(", "a_", ")", ")", "\n", "max_sent_", "=", "max", "(", "a_", ")", "\n", "if", "max_sent_", ">", "2", ":", "\n", "            ", "sent_pad_", "=", "pad_sequence_", "(", "sent_in", ",", "max_length", "=", "max_sent_", ")", "\n", "loss_dev", ",", "score_dev", "=", "Model", ".", "predict_lang", "(", "sent_pad_", ")", "\n", "total_loss_", "+=", "loss_dev", "\n", "iters", "+=", "1", "\n", "", "", "avg_dev_loss", "=", "total_loss_", "/", "iters", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validation loss LM : {}\"", ".", "format", "(", "avg_dev_loss", ")", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" word count: {}\"", ".", "format", "(", "word_count", ")", ")", "\n", "perplexity_dev", "=", "np", ".", "exp", "(", "total_loss_", "/", "word_count", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validatoin results: ==== \"", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validation perplexity: {}\"", ".", "format", "(", "perplexity_dev", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge.pad_sequence_": [[20, 25], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ",", "padding", "=", "'post'", ",", "truncating", "=", "'post'", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "padding", ",", "\n", "truncating", "=", "truncating", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge.get_aucpr": [[27, 31], ["sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc"], "function", ["None"], ["", "def", "get_aucpr", "(", "y_out", ",", "y_true", ")", ":", "\n", "    ", "precision", ",", "recall", ",", "threshold", "=", "precision_recall_curve", "(", "y_out", ",", "y_true", ")", "\n", "aucpr", "=", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "aucpr", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge.tuning": [[33, 41], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge.tuning_1": [[43, 51], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning_1", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "0", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge.evaluation": [[53, 80], ["range", "logging.info", "sklearn.metrics.roc_auc_score", "train_kge.get_aucpr", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "train_kge.tuning_1", "train_kge.tuning", "len", "len", "len", "len", "sklearn.metrics.classification_report"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning"], ["", "def", "evaluation", "(", "y_out", ",", "pred_out", ",", "data_type", "=", "True", ")", ":", "\n", "    ", "if", "data_type", ":", "\n", "        ", "pred_1", "=", "tuning_1", "(", "pred_out", ")", "\n", "", "else", ":", "\n", "        ", "pred_1", "=", "tuning", "(", "pred_out", ")", "\n", "# for val in pred_out[0]:", "\n", "#     logging.info(\"val => {}\".format(val))", "\n", "\n", "", "acc", "=", "0", "\n", "assert", "len", "(", "pred_out", ")", "==", "len", "(", "y_out", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_1", ")", ")", ":", "\n", "        ", "if", "pred_1", "[", "i", "]", "==", "y_out", "[", "i", "]", ":", "\n", "            ", "acc", "+=", "1", "\n", "", "", "b", "=", "(", "acc", "/", "len", "(", "pred_1", ")", ")", "*", "100", "\n", "logging", ".", "info", "(", "\"The test accuracy: {}\"", ".", "format", "(", "b", ")", ")", "\n", "roc_score_test", "=", "roc_auc_score", "(", "y_out", ",", "pred_out", ")", "\n", "aucpr_test", "=", "get_aucpr", "(", "y_out", ",", "pred_out", ")", "\n", "f1_test", "=", "f1_score", "(", "y_out", ",", "pred_1", ")", "\n", "precision_test", "=", "precision_score", "(", "y_out", ",", "pred_1", ")", "\n", "recall_test", "=", "recall_score", "(", "y_out", ",", "pred_1", ")", "\n", "logging", ".", "info", "(", "\"This is the AUCPR score: {}\"", ".", "format", "(", "aucpr_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the roc_score: {}\"", ".", "format", "(", "roc_score_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the F1 score: {}\"", ".", "format", "(", "f1_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is precision: {}\"", ".", "format", "(", "precision_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is recall: {}\"", ".", "format", "(", "recall_test", ")", ")", "\n", "logging", ".", "info", "(", "\"Classification report: {}\"", ".", "format", "(", "classification_report", "(", "y_out", ",", "pred_1", ")", ")", ")", "\n", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge.eval_data": [[82, 96], ["len", "range", "train_kge.evaluation", "model.get_embed", "model.predict", "output_[].tolist"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict"], ["", "def", "eval_data", "(", "model", ",", "head_vec", ",", "tail_vec", ",", "rel_vec", ",", "label_ids", ",", "data_type", "=", "True", ")", ":", "\n", "    ", "N", "=", "len", "(", "head_vec", ")", "\n", "g1", "=", "1024", "\n", "output_dev_collector", "=", "[", "]", "\n", "for", "k1", "in", "(", "range", "(", "0", ",", "N", ",", "g1", ")", ")", ":", "\n", "        ", "if", "k1", "+", "g1", ">", "N", ":", "\n", "            ", "d1", "=", "N", "\n", "", "else", ":", "\n", "            ", "d1", "=", "k1", "+", "g1", "\n", "", "h", ",", "r", ",", "t", ",", "embed", "=", "model", ".", "get_embed", "(", "head_vec", "[", "k1", ":", "d1", "]", ",", "tail_vec", "[", "k1", ":", "d1", "]", ",", "rel_vec", "[", "k1", ":", "d1", "]", ")", "\n", "output_", "=", "model", ".", "predict", "(", "embed", ")", "\n", "output_dev_collector", "+=", "output_", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "acc", "=", "evaluation", "(", "label_ids", ",", "output_dev_collector", ",", "data_type", ")", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge_lm.pad_sequence_": [[20, 25], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ",", "padding", "=", "'post'", ",", "truncating", "=", "'post'", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "padding", ",", "\n", "truncating", "=", "truncating", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge_lm.get_aucpr": [[27, 31], ["sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc"], "function", ["None"], ["", "def", "get_aucpr", "(", "y_out", ",", "y_true", ")", ":", "\n", "    ", "precision", ",", "recall", ",", "threshold", "=", "precision_recall_curve", "(", "y_out", ",", "y_true", ")", "\n", "aucpr", "=", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "aucpr", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge_lm.tuning": [[33, 41], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge_lm.tuning_1": [[43, 51], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning_1", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.5", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "0", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge_lm.evaluation": [[53, 80], ["range", "logging.info", "sklearn.metrics.roc_auc_score", "train_kge_lm.get_aucpr", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "train_kge_lm.tuning_1", "train_kge_lm.tuning", "len", "len", "len", "len", "sklearn.metrics.classification_report"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning"], ["", "def", "evaluation", "(", "y_out", ",", "pred_out", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "if", "data_type", ":", "\n", "        ", "pred_1", "=", "tuning_1", "(", "pred_out", ")", "\n", "", "else", ":", "\n", "        ", "pred_1", "=", "tuning", "(", "pred_out", ")", "\n", "# for val in pred_out[0]:", "\n", "#     logging.info(\"val => {}\".format(val))", "\n", "\n", "", "acc", "=", "0", "\n", "assert", "len", "(", "pred_out", ")", "==", "len", "(", "y_out", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_1", ")", ")", ":", "\n", "        ", "if", "pred_1", "[", "i", "]", "==", "y_out", "[", "i", "]", ":", "\n", "            ", "acc", "+=", "1", "\n", "", "", "b", "=", "(", "acc", "/", "len", "(", "pred_1", ")", ")", "*", "100", "\n", "logging", ".", "info", "(", "\"The test accuracy: {}\"", ".", "format", "(", "b", ")", ")", "\n", "roc_score_test", "=", "roc_auc_score", "(", "y_out", ",", "pred_out", ")", "\n", "aucpr_test", "=", "get_aucpr", "(", "y_out", ",", "pred_out", ")", "\n", "f1_test", "=", "f1_score", "(", "y_out", ",", "pred_1", ")", "\n", "precision_test", "=", "precision_score", "(", "y_out", ",", "pred_1", ")", "\n", "recall_test", "=", "recall_score", "(", "y_out", ",", "pred_1", ")", "\n", "logging", ".", "info", "(", "\"This is the AUCPR score: {}\"", ".", "format", "(", "aucpr_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the roc_score: {}\"", ".", "format", "(", "roc_score_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the F1 score: {}\"", ".", "format", "(", "f1_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is precision: {}\"", ".", "format", "(", "precision_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is recall: {}\"", ".", "format", "(", "recall_test", ")", ")", "\n", "logging", ".", "info", "(", "\"Classification report: {}\"", ".", "format", "(", "classification_report", "(", "y_out", ",", "pred_1", ")", ")", ")", "\n", "return", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge_lm.eval_data": [[82, 98], ["len", "range", "train_kge_lm.evaluation", "model.get_embed", "model.predict", "output_[].tolist"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict"], ["", "def", "eval_data", "(", "model", ",", "head_vec", ",", "tail_vec", ",", "rel_vec", ",", "label_ids", ",", "data_type", "=", "True", ")", ":", "\n", "    ", "N", "=", "len", "(", "head_vec", ")", "\n", "g1", "=", "1024", "\n", "output_dev_collector", "=", "[", "]", "\n", "for", "k1", "in", "(", "range", "(", "0", ",", "N", ",", "g1", ")", ")", ":", "\n", "        ", "if", "k1", "+", "g1", ">", "N", ":", "\n", "            ", "d1", "=", "N", "\n", "", "else", ":", "\n", "            ", "d1", "=", "k1", "+", "g1", "\n", "", "h", ",", "r", ",", "t", ",", "embed", "=", "model", ".", "get_embed", "(", "head_vec", "[", "k1", ":", "d1", "]", ",", "tail_vec", "[", "k1", ":", "d1", "]", ",", "rel_vec", "[", "k1", ":", "d1", "]", ")", "\n", "# embed = np.squeeze(embed)", "\n", "output_", "=", "model", ".", "predict", "(", "embed", ")", "\n", "# print(output_[0].shape)", "\n", "output_dev_collector", "+=", "output_", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "acc", "=", "evaluation", "(", "label_ids", ",", "output_dev_collector", ",", "data_type", ")", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.train_kge_lm.eval_lm": [[100, 123], ["len", "logging.info", "range", "logging.info", "logging.info", "numpy.exp", "numpy.exp", "logging.info", "logging.info", "logging.info", "data_set.next", "max", "len", "sum", "Model.predict_lang"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.next", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.predict_lang"], ["", "def", "eval_lm", "(", "data_set", ",", "set_type", "=", "'Dev'", ",", "dict_in", "=", "None", ")", ":", "\n", "    ", "total_loss_", ",", "iters", "=", "0", ",", "0", "\n", "word_count", "=", "0", "\n", "M_", "=", "len", "(", "data_set", ".", "data", ")", "\n", "logging", ".", "info", "(", "\"Dev sentence number: {}\"", ".", "format", "(", "M_", ")", ")", "\n", "for", "_", "in", "range", "(", "0", ",", "M_", ",", "1", ")", ":", "\n", "        ", "sent_in", "=", "data_set", ".", "next", "(", ")", "\n", "a_", "=", "[", "len", "(", "x", ")", "for", "x", "in", "sent_in", "]", "\n", "word_count", "+=", "(", "sum", "(", "a_", ")", ")", "-", "2", "\n", "max_sent_", "=", "max", "(", "a_", ")", "\n", "if", "max_sent_", ">", "2", ":", "\n", "            ", "loss_dev", ",", "score_dev", "=", "Model", ".", "predict_lang", "(", "sent_in", ")", "\n", "total_loss_", "+=", "loss_dev", "\n", "iters", "+=", "1", "\n", "", "", "avg_dev_loss", "=", "total_loss_", "/", "iters", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validation loss LM : {}\"", ".", "format", "(", "avg_dev_loss", ")", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" word count: {}\"", ".", "format", "(", "word_count", ")", ")", "\n", "perplexity_dev", "=", "np", ".", "exp", "(", "total_loss_", "/", "word_count", ")", "\n", "secondary_ppl", "=", "np", ".", "exp", "(", "total_loss_", "/", "iters", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validatoin results: ==== \"", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validation perplexity: {}\"", ".", "format", "(", "perplexity_dev", ")", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" second ppl: {}\"", ".", "format", "(", "secondary_ppl", ")", ")", "\n", "return", "perplexity_dev", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.test_lm.pad_sequence_": [[19, 24], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "'post'", ",", "\n", "truncating", "=", "'post'", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.KGE_LM.test_lm.eval_lm": [[26, 48], ["len", "logging.info", "logging.info", "range", "logging.info", "logging.info", "logging.info", "logging.info", "numpy.exp", "logging.info", "logging.info", "logging.info", "logging.info", "data_set.next", "max", "len", "sum", "test_lm.pad_sequence_", "Model.predict_lang"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.next", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.lm_model_lstm.Language_Model.predict_lang"], ["", "def", "eval_lm", "(", "data_set", ",", "set_type", "=", "'Dev'", ",", "dict_in", "=", "None", ")", ":", "\n", "    ", "total_loss_", ",", "iters", "=", "0", ",", "0", "\n", "word_count", "=", "0", "\n", "M_", "=", "len", "(", "data_set", ".", "data", ")", "\n", "logging", ".", "info", "(", "\"Dev sentence number: {}\"", ".", "format", "(", "M_", ")", ")", "\n", "for", "_", "in", "range", "(", "0", ",", "M_", ",", "1", ")", ":", "\n", "        ", "sent_in", "=", "data_set", ".", "next", "(", ")", "\n", "a_", "=", "[", "len", "(", "x", ")", "for", "x", "in", "sent_in", "]", "\n", "word_count", "+=", "(", "(", "sum", "(", "a_", ")", ")", "-", "2", ")", "\n", "max_sent_", "=", "max", "(", "a_", ")", "\n", "if", "max_sent_", ">", "2", ":", "\n", "            ", "sent_pad_", "=", "pad_sequence_", "(", "sent_in", ",", "max_length", "=", "max_sent_", ")", "\n", "loss_dev", ",", "score_dev", "=", "Model", ".", "predict_lang", "(", "sent_pad_", ")", "\n", "total_loss_", "+=", "loss_dev", "\n", "iters", "+=", "1", "\n", "", "", "avg_dev_loss", "=", "total_loss_", "/", "iters", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validation loss LM : {}\"", ".", "format", "(", "avg_dev_loss", ")", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" word count: {}\"", ".", "format", "(", "word_count", ")", ")", "\n", "perplexity_dev", "=", "np", ".", "exp", "(", "total_loss_", "/", "word_count", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validatoin results: ==== \"", ")", "\n", "logging", ".", "info", "(", "set_type", "+", "\" validation perplexity: {}\"", ".", "format", "(", "perplexity_dev", ")", ")", "\n", "return", "perplexity_dev", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.build_dataset_random.build": [[8, 13], ["gzip.open", "file_zip.close", "file_zip.write"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.close"], ["def", "build", "(", "filename", ",", "list_file", ")", ":", "\n", "    ", "with", "gzip", ".", "open", "(", "filename", ",", "\"wt\"", ")", "as", "file_zip", ":", "\n", "        ", "for", "line", "in", "list_file", ":", "\n", "            ", "file_zip", ".", "write", "(", "line", ")", "\n", "", "file_zip", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.get_tokens": [[12, 23], ["val.split.lower", "val.split.lower", "val.split.split", "token_list.append", "token_list.append", "val.split.translate", "word.translate", "str.maketrans", "str.maketrans"], "function", ["None"], ["def", "get_tokens", "(", "val", ")", ":", "\n", "    ", "val", "=", "val", ".", "lower", "(", ")", "\n", "token_list", "=", "[", "]", "\n", "if", "\"_\"", "in", "val", ":", "\n", "        ", "val", "=", "val", ".", "lower", "(", ")", "\n", "val", "=", "val", ".", "split", "(", "'_'", ")", "\n", "for", "word", "in", "val", ":", "\n", "            ", "token_list", ".", "append", "(", "word", ".", "translate", "(", "str", ".", "maketrans", "(", "''", ",", "''", ",", "string", ".", "punctuation", ")", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "token_list", ".", "append", "(", "val", ".", "translate", "(", "str", ".", "maketrans", "(", "''", ",", "''", ",", "string", ".", "punctuation", ")", ")", ")", "\n", "", "return", "token_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.get_ids": [[25, 28], ["kge_lm_collector.get_tokens", "dict_out.keys"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_tokens"], ["", "def", "get_ids", "(", "word", ",", "dict_out", ")", ":", "\n", "    ", "tokens", "=", "get_tokens", "(", "word", ")", "\n", "return", "[", "dict_out", "[", "x", "]", "if", "x", "in", "dict_out", ".", "keys", "(", ")", "else", "dict_out", "[", "'unk'", "]", "for", "x", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.get_neg_samples": [[30, 85], ["range", "print", "kge_lm_collector.build_vector", "data_in[].tolist", "data_in[].tolist", "data_in[].tolist", "range", "len", "len", "kge_lm_collector.get_ids", "kge_lm_collector.get_ids", "print", "tail_in.append", "range", "kge_lm_collector.get_ids", "random.sample", "kge_lm_collector.get_ids", "random.randint", "list", "random.sample", "tail_in.append", "len", "relation_dict.keys", "list", "list.remove", "random.sample", "kge_lm_collector.get_ids", "y_true.append", "y_true.append", "itertools.repeat", "itertools.repeat", "itertools.repeat", "itertools.repeat", "relation_dict.keys", "print"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.build_vector", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids"], ["", "def", "get_neg_samples", "(", "data_in", ",", "epoch", ",", "word_2_id", ",", "relation_dict", ",", "lower", ",", "upper", ")", ":", "\n", "    ", "head_list", ",", "tail_list", ",", "relation_list", "=", "data_in", "[", "'Head'", "]", ".", "tolist", "(", ")", ",", "data_in", "[", "'tail'", "]", ".", "tolist", "(", ")", ",", "data_in", "[", "'relation'", "]", ".", "tolist", "(", ")", "\n", "head_vec_1", "=", "[", "]", "\n", "tail_vec_1", "=", "[", "]", "\n", "relation_vec", "=", "[", "]", "\n", "y_output", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "epoch", ")", ":", "\n", "        ", "for", "k", "in", "(", "range", "(", "len", "(", "head_list", ")", ")", ")", ":", "\n", "            ", "head_en", "=", "get_ids", "(", "head_list", "[", "k", "]", ",", "word_2_id", ")", "\n", "tail_en", "=", "get_ids", "(", "tail_list", "[", "k", "]", ",", "word_2_id", ")", "\n", "relation1", "=", "relation_list", "[", "k", "]", "\n", "print", "(", "relation1", ")", "\n", "# print(head_list[k], relation1, tail_list[k])", "\n", "if", "relation1", "==", "\"gender\"", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "k", "]", ",", "word_2_id", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "2", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "2", ")", "]", "\n", "negative_sample", "=", "random", ".", "sample", "(", "relation_dict", "[", "relation1", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "k", "]", ",", "word_2_id", ")", "\n", "k1", "=", "random", ".", "randint", "(", "lower", ",", "upper", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "k1", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "k1", ")", "]", "\n", "# negative_sample = random.sample(tail_list, k1-1)", "\n", "key_list", "=", "list", "(", "relation_dict", ".", "keys", "(", ")", ")", "\n", "try", ":", "\n", "                    ", "key_list", "=", "list", "(", "relation_dict", ".", "keys", "(", ")", ")", "\n", "key_list", ".", "remove", "(", "relation1", ")", "\n", "", "except", "ValueError", ":", "\n", "                    ", "print", "(", "relation1", ")", "\n", "", "rel_sample", "=", "random", ".", "sample", "(", "key_list", ",", "k1", "-", "1", ")", "\n", "negative_sample", "=", "[", "]", "\n", "for", "val", "in", "rel_sample", ":", "\n", "                    ", "negative_sample", "+=", "random", ".", "sample", "(", "relation_dict", "[", "val", "]", ",", "1", ")", "\n", "# print(head_list[k], relation1, tail_list[k], val, negative_sample[-1])", "\n", "", "", "tail_in", "=", "[", "]", "\n", "for", "t", "in", "negative_sample", ":", "\n", "                ", "tail_in", ".", "append", "(", "get_ids", "(", "t", ",", "word_2_id", ")", ")", "\n", "", "tail_in", ".", "append", "(", "tail_en", ")", "\n", "head_vec_1", "+=", "head_", "\n", "tail_vec_1", "+=", "tail_in", "\n", "relation_vec", "+=", "relation", "\n", "y_true", "=", "[", "]", "\n", "for", "u", "in", "range", "(", "len", "(", "head_", ")", ")", ":", "\n", "                ", "if", "tail_in", "[", "u", "]", "==", "tail_en", ":", "\n", "                    ", "y_true", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "y_true", ".", "append", "(", "0", ")", "\n", "", "", "y_output", "+=", "y_true", "\n", "", "", "print", "(", "len", "(", "head_list", ")", ")", "\n", "# print(change)", "\n", "sampled_data", "=", "build_vector", "(", "head_vec_1", ",", "tail_vec_1", ",", "relation_vec", ",", "y_output", ",", "False", ")", "\n", "return", "sampled_data", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.get_rel_dict": [[87, 102], ["collections.defaultdict", "collections.defaultdict", "enumerate", "rel_head[].append", "rel_tail[].append"], "function", ["None"], ["", "def", "get_rel_dict", "(", "head_list", ",", "tail_list", ",", "rel_list", ")", ":", "\n", "    ", "\"\"\"\n    :param head_list: entity list with head, tail, relations\n    :param tail_list: tail list\n    :param rel_list : relations list\n    :return: dictionary of relations mapped to entities\n    \"\"\"", "\n", "rel_head", "=", "defaultdict", "(", "list", ")", "\n", "rel_tail", "=", "defaultdict", "(", "list", ")", "\n", "for", "index", ",", "entity", "in", "enumerate", "(", "rel_list", ")", ":", "\n", "        ", "if", "head_list", "[", "index", "]", "not", "in", "rel_head", "[", "entity", "]", ":", "\n", "            ", "rel_head", "[", "entity", "]", ".", "append", "(", "head_list", "[", "index", "]", ")", "\n", "", "if", "tail_list", "[", "index", "]", "not", "in", "rel_tail", "[", "entity", "]", ":", "\n", "            ", "rel_tail", "[", "entity", "]", ".", "append", "(", "tail_list", "[", "index", "]", ")", "\n", "", "", "return", "rel_head", ",", "rel_tail", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.build_vector": [[104, 117], ["pandas.DataFrame"], "function", ["None"], ["", "def", "build_vector", "(", "head_list", ",", "tail_list", ",", "relation_list", ",", "y_true", ",", "interchange", "=", "False", ")", ":", "\n", "    ", "df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", ",", "\"score\"", "]", ")", "\n", "if", "interchange", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "tail_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "head_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "else", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "head_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "tail_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.get_tokens_train": [[119, 133], ["val.split.lower", "val.split.lower", "val.split.split", "token_list.append", "token_list.append", "val.split.translate", "word.translate", "str.maketrans", "str.maketrans"], "function", ["None"], ["", "def", "get_tokens_train", "(", "data", ")", ":", "\n", "    ", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", "\n", "token_list", "=", "[", "]", "\n", "for", "col", "in", "columns", ":", "\n", "        ", "for", "val", "in", "data", "[", "col", "]", ":", "\n", "            ", "val", "=", "val", ".", "lower", "(", ")", "\n", "if", "\"_\"", "in", "val", ":", "\n", "                ", "val", "=", "val", ".", "lower", "(", ")", "\n", "val", "=", "val", ".", "split", "(", "'_'", ")", "\n", "for", "word", "in", "val", ":", "\n", "                    ", "token_list", ".", "append", "(", "word", ".", "translate", "(", "str", ".", "maketrans", "(", "''", ",", "''", ",", "string", ".", "punctuation", ")", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "token_list", ".", "append", "(", "val", ".", "translate", "(", "str", ".", "maketrans", "(", "''", ",", "''", ",", "string", ".", "punctuation", ")", ")", ")", "\n", "", "", "", "return", "token_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.load_word2vec": [[135, 145], ["open", "line.split", "numpy.array", "float"], "function", ["None"], ["", "def", "load_word2vec", "(", "file_path", ")", ":", "\n", "    ", "word2vec", "=", "{", "}", "\n", "with", "open", "(", "file_path", ")", "as", "lines", ":", "\n", "        ", "for", "line", "in", "lines", ":", "\n", "            ", "split", "=", "line", ".", "split", "(", "\" \"", ")", "\n", "word", "=", "split", "[", "0", "]", "\n", "vector_strings", "=", "split", "[", "1", ":", "]", "\n", "vector", "=", "[", "float", "(", "num", ")", "for", "num", "in", "vector_strings", "]", "\n", "word2vec", "[", "word", "]", "=", "np", ".", "array", "(", "vector", ")", "\n", "", "", "return", "word2vec", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.create_id2vec": [[147, 156], ["len", "max", "numpy.zeros", "id2word.items", "list", "id2word.keys"], "function", ["None"], ["", "def", "create_id2vec", "(", "id2word", ",", "word2vec", ")", ":", "\n", "    ", "unk_vec", "=", "word2vec", "[", "\"unk\"", "]", "\n", "dim_of_vector", "=", "len", "(", "unk_vec", ")", "\n", "num_of_tokens", "=", "max", "(", "list", "(", "id2word", ".", "keys", "(", ")", ")", ")", "\n", "id2vec", "=", "np", ".", "zeros", "(", "(", "num_of_tokens", "+", "1", ",", "dim_of_vector", ")", ",", "dtype", "=", "np", ".", "float16", ")", "\n", "for", "id", ",", "word", "in", "id2word", ".", "items", "(", ")", ":", "\n", "        ", "if", "word", "!=", "'PAD'", ":", "\n", "            ", "id2vec", "[", "id", ",", ":", "]", "=", "word2vec", "[", "word", "]", "if", "word", "in", "word2vec", "else", "unk_vec", "\n", "", "", "return", "id2vec", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.CreatXid": [[158, 175], ["token_dict.items"], "function", ["None"], ["", "def", "CreatXid", "(", "token_dict", ",", "limit", ")", ":", "\n", "    ", "word2id", ",", "id2word", "=", "{", "}", ",", "{", "}", "\n", "word2id", "[", "'PAD'", "]", "=", "0", "\n", "id2word", "[", "0", "]", "=", "'PAD'", "\n", "word2id", "[", "'<BOS>'", "]", "=", "1", "\n", "word2id", "[", "'<EOS>'", "]", "=", "2", "\n", "id2word", "[", "1", "]", "=", "'<BOS>'", "\n", "id2word", "[", "2", "]", "=", "'<EOS>'", "\n", "word2id", "[", "'unk'", "]", "=", "3", "\n", "id2word", "[", "3", "]", "=", "'unk'", "\n", "i", "=", "4", "\n", "for", "key", ",", "value", "in", "token_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ">", "limit", ":", "\n", "            ", "word2id", "[", "key", "]", "=", "i", "\n", "id2word", "[", "i", "]", "=", "key", "\n", "i", "+=", "1", "\n", "", "", "return", "word2id", ",", "id2word", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_lm_collector.main": [[177, 197], ["sklearn.externals.joblib.load", "int", "int", "pandas.read_csv", "train_data[].tolist", "train_data[].tolist", "train_data[].tolist", "kge_lm_collector.get_rel_dict", "print", "pandas.read_csv", "pandas.read_csv", "kge_lm_collector.get_neg_samples", "kge_lm_collector.get_neg_samples", "kge_lm_collector.get_neg_samples", "get_neg_samples.to_pickle", "get_neg_samples.to_pickle", "get_neg_samples.to_pickle", "rel_head.keys", "rel_tail.keys"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.load", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_neg_samples", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_neg_samples", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_neg_samples"], ["", "def", "main", "(", ")", ":", "\n", "    ", "PATH", "=", "sys", ".", "argv", "[", "1", "]", "\n", "data_dict", "=", "joblib", ".", "load", "(", "sys", ".", "argv", "[", "2", "]", ")", "\n", "lower", "=", "int", "(", "sys", ".", "argv", "[", "3", "]", ")", "\n", "upper", "=", "int", "(", "sys", ".", "argv", "[", "4", "]", ")", "\n", "train_data", "=", "pd", ".", "read_csv", "(", "PATH", "+", "\"train_kge.csv\"", ")", "\n", "head_list", "=", "train_data", "[", "'Head'", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "train_data", "[", "'tail'", "]", ".", "tolist", "(", ")", "\n", "rel_list", "=", "train_data", "[", "'relation'", "]", ".", "tolist", "(", ")", "\n", "rel_head", ",", "rel_tail", "=", "get_rel_dict", "(", "head_list", ",", "tail_list", ",", "rel_list", ")", "\n", "print", "(", "rel_head", ".", "keys", "(", ")", ",", "rel_tail", ".", "keys", "(", ")", ")", "\n", "word2id_", "=", "data_dict", "[", "'word2id'", "]", "\n", "dev_data", "=", "pd", ".", "read_csv", "(", "PATH", "+", "\"dev_kge.csv\"", ")", "\n", "test_data", "=", "pd", ".", "read_csv", "(", "PATH", "+", "\"test_kge.csv\"", ")", "\n", "sample_data", "=", "get_neg_samples", "(", "train_data", ",", "1", ",", "word2id_", ",", "rel_tail", ",", "lower", ",", "upper", ")", "\n", "dev_out", "=", "get_neg_samples", "(", "dev_data", ",", "1", ",", "word2id_", ",", "rel_tail", ",", "2", ",", "2", ")", "\n", "test_out", "=", "get_neg_samples", "(", "test_data", ",", "1", ",", "word2id_", ",", "rel_tail", ",", "2", ",", "2", ")", "\n", "sample_data", ".", "to_pickle", "(", "'data/random_dataset/Sample_data_lm_24_1.pkl'", ")", "\n", "dev_out", ".", "to_pickle", "(", "'data/random_dataset/dev_vec_lm_dict_1.pkl'", ")", "\n", "test_out", ".", "to_pickle", "(", "'data/random_dataset/test_vec_lm_dict_1.pkl'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.prepare_dataset.CreateXid": [[9, 26], ["dict_in.items"], "function", ["None"], ["def", "CreateXid", "(", "dict_in", ",", "limit", ")", ":", "\n", "    ", "word2id", ",", "id2word", "=", "{", "}", ",", "{", "}", "\n", "word2id", "[", "\"PAD\"", "]", "=", "0", "\n", "id2word", "[", "0", "]", "=", "\"PAD\"", "\n", "word2id", "[", "\"<BOS>\"", "]", "=", "1", "\n", "id2word", "[", "1", "]", "=", "\"<BOS>\"", "\n", "word2id", "[", "\"<EOS>\"", "]", "=", "2", "\n", "id2word", "[", "2", "]", "=", "\"<EOS>\"", "\n", "word2id", "[", "\"unk\"", "]", "=", "3", "\n", "id2word", "[", "3", "]", "=", "\"unk\"", "\n", "i", "=", "4", "\n", "for", "key", ",", "value", "in", "dict_in", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ">", "limit", ":", "\n", "            ", "word2id", "[", "key", "]", "=", "i", "\n", "id2word", "[", "i", "]", "=", "key", "\n", "i", "+=", "1", "\n", "", "", "return", "word2id", ",", "id2word", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.prepare_dataset.load_word2vec": [[28, 38], ["open", "line.split", "numpy.array", "float"], "function", ["None"], ["", "def", "load_word2vec", "(", "file_path", ")", ":", "\n", "    ", "word2vec", "=", "{", "}", "\n", "with", "open", "(", "file_path", ")", "as", "lines", ":", "\n", "        ", "for", "line", "in", "lines", ":", "\n", "            ", "split", "=", "line", ".", "split", "(", "\" \"", ")", "\n", "word", "=", "split", "[", "0", "]", "\n", "vector_strings", "=", "split", "[", "1", ":", "]", "\n", "vector", "=", "[", "float", "(", "num", ")", "for", "num", "in", "vector_strings", "]", "\n", "word2vec", "[", "word", "]", "=", "np", ".", "array", "(", "vector", ")", "\n", "", "", "return", "word2vec", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.prepare_dataset.create_id2vec": [[40, 49], ["len", "max", "numpy.zeros", "id2word.items", "list", "id2word.keys"], "function", ["None"], ["", "def", "create_id2vec", "(", "id2word", ",", "word2vec", ")", ":", "\n", "    ", "unk_vec", "=", "word2vec", "[", "\"unk\"", "]", "\n", "dim_of_vector", "=", "len", "(", "unk_vec", ")", "\n", "num_of_tokens", "=", "max", "(", "list", "(", "id2word", ".", "keys", "(", ")", ")", ")", "\n", "id2vec", "=", "np", ".", "zeros", "(", "(", "num_of_tokens", "+", "1", ",", "dim_of_vector", ")", ",", "dtype", "=", "np", ".", "float16", ")", "\n", "for", "id", ",", "word", "in", "id2word", ".", "items", "(", ")", ":", "\n", "        ", "if", "word", "!=", "'PAD'", ":", "\n", "            ", "id2vec", "[", "id", ",", ":", "]", "=", "word2vec", "[", "word", "]", "if", "word", "in", "word2vec", "else", "unk_vec", "\n", "", "", "return", "id2vec", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.prepare_dataset.collect_tokens": [[51, 62], ["gzip.open", "line.split", "word.split", "token_list.append", "word.translate", "str.maketrans"], "function", ["None"], ["", "def", "collect_tokens", "(", "filename", ")", ":", "\n", "    ", "token_list", "=", "[", "]", "\n", "with", "gzip", ".", "open", "(", "filename", ",", "'rt'", ")", "as", "file", ":", "\n", "        ", "for", "line", "in", "file", ":", "\n", "            ", "a", "=", "line", ".", "split", "(", ")", "\n", "for", "word", "in", "a", ":", "\n", "                ", "if", "\"_\"", "in", "word", ":", "\n", "                    ", "token_list", "+=", "word", ".", "split", "(", "\"_\"", ")", "\n", "", "else", ":", "\n", "                    ", "token_list", ".", "append", "(", "word", ".", "translate", "(", "str", ".", "maketrans", "(", "''", ",", "''", ",", "string", ".", "punctuation", ")", ")", ")", "\n", "", "", "", "", "return", "token_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_tokens": [[11, 22], ["val.split.lower", "val.split.lower", "val.split.split", "token_list.append", "token_list.append", "val.split.translate", "word.translate", "str.maketrans", "str.maketrans"], "function", ["None"], ["def", "get_tokens", "(", "val", ")", ":", "\n", "    ", "val", "=", "val", ".", "lower", "(", ")", "\n", "token_list", "=", "[", "]", "\n", "if", "\"_\"", "in", "val", ":", "\n", "        ", "val", "=", "val", ".", "lower", "(", ")", "\n", "val", "=", "val", ".", "split", "(", "'_'", ")", "\n", "for", "word", "in", "val", ":", "\n", "            ", "token_list", ".", "append", "(", "word", ".", "translate", "(", "str", ".", "maketrans", "(", "''", ",", "''", ",", "string", ".", "punctuation", ")", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "token_list", ".", "append", "(", "val", ".", "translate", "(", "str", ".", "maketrans", "(", "''", ",", "''", ",", "string", ".", "punctuation", ")", ")", ")", "\n", "", "return", "token_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids": [[24, 27], ["kge_data_collection.get_tokens", "dict_out.keys"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_tokens"], ["", "def", "get_ids", "(", "word", ",", "dict_out", ")", ":", "\n", "    ", "tokens", "=", "get_tokens", "(", "word", ")", "\n", "return", "[", "dict_out", "[", "x", "]", "if", "x", "in", "dict_out", ".", "keys", "(", ")", "else", "dict_out", "[", "'unk'", "]", "for", "x", "in", "tokens", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_neg_samples": [[29, 84], ["range", "print", "kge_data_collection.build_vector", "data_in[].tolist", "data_in[].tolist", "data_in[].tolist", "range", "len", "len", "kge_data_collection.get_ids", "kge_data_collection.get_ids", "print", "tail_in.append", "range", "kge_data_collection.get_ids", "random.sample", "kge_data_collection.get_ids", "random.randint", "list", "random.sample", "tail_in.append", "len", "relation_dict.keys", "list", "list.remove", "random.sample", "kge_data_collection.get_ids", "y_true.append", "y_true.append", "itertools.repeat", "itertools.repeat", "itertools.repeat", "itertools.repeat", "relation_dict.keys", "print"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.build_vector", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_ids"], ["", "def", "get_neg_samples", "(", "data_in", ",", "epoch", ",", "word_2_id", ",", "relation_dict", ",", "lower", ",", "upper", ")", ":", "\n", "    ", "head_list", ",", "tail_list", ",", "relation_list", "=", "data_in", "[", "'Head'", "]", ".", "tolist", "(", ")", ",", "data_in", "[", "'tail'", "]", ".", "tolist", "(", ")", ",", "data_in", "[", "'relation'", "]", ".", "tolist", "(", ")", "\n", "head_vec_1", "=", "[", "]", "\n", "tail_vec_1", "=", "[", "]", "\n", "relation_vec", "=", "[", "]", "\n", "y_output", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "epoch", ")", ":", "\n", "        ", "for", "k", "in", "(", "range", "(", "len", "(", "head_list", ")", ")", ")", ":", "\n", "            ", "head_en", "=", "get_ids", "(", "head_list", "[", "k", "]", ",", "word_2_id", ")", "\n", "tail_en", "=", "get_ids", "(", "tail_list", "[", "k", "]", ",", "word_2_id", ")", "\n", "relation1", "=", "relation_list", "[", "k", "]", "\n", "print", "(", "relation1", ")", "\n", "# print(head_list[k], relation1, tail_list[k])", "\n", "if", "relation1", "==", "\"gender\"", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "k", "]", ",", "word_2_id", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "2", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "2", ")", "]", "\n", "negative_sample", "=", "random", ".", "sample", "(", "relation_dict", "[", "relation1", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "                ", "relation_en", "=", "get_ids", "(", "relation_list", "[", "k", "]", ",", "word_2_id", ")", "\n", "k1", "=", "random", ".", "randint", "(", "lower", ",", "upper", ")", "\n", "head_", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "head_en", ",", "times", "=", "k1", ")", "]", "\n", "relation", "=", "[", "q", "for", "q", "in", "itertools", ".", "repeat", "(", "relation_en", ",", "times", "=", "k1", ")", "]", "\n", "# negative_sample = random.sample(tail_list, k1-1)", "\n", "key_list", "=", "list", "(", "relation_dict", ".", "keys", "(", ")", ")", "\n", "try", ":", "\n", "                    ", "key_list", "=", "list", "(", "relation_dict", ".", "keys", "(", ")", ")", "\n", "key_list", ".", "remove", "(", "relation1", ")", "\n", "", "except", "ValueError", ":", "\n", "                    ", "print", "(", "relation1", ")", "\n", "", "rel_sample", "=", "random", ".", "sample", "(", "key_list", ",", "k1", "-", "1", ")", "\n", "negative_sample", "=", "[", "]", "\n", "for", "val", "in", "rel_sample", ":", "\n", "                    ", "negative_sample", "+=", "random", ".", "sample", "(", "relation_dict", "[", "val", "]", ",", "1", ")", "\n", "# print(head_list[k], relation1, tail_list[k], val, negative_sample[-1])", "\n", "", "", "tail_in", "=", "[", "]", "\n", "for", "t", "in", "negative_sample", ":", "\n", "                ", "tail_in", ".", "append", "(", "get_ids", "(", "t", ",", "word_2_id", ")", ")", "\n", "", "tail_in", ".", "append", "(", "tail_en", ")", "\n", "head_vec_1", "+=", "head_", "\n", "tail_vec_1", "+=", "tail_in", "\n", "relation_vec", "+=", "relation", "\n", "y_true", "=", "[", "]", "\n", "for", "u", "in", "range", "(", "len", "(", "head_", ")", ")", ":", "\n", "                ", "if", "tail_in", "[", "u", "]", "==", "tail_en", ":", "\n", "                    ", "y_true", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "                    ", "y_true", ".", "append", "(", "0", ")", "\n", "", "", "y_output", "+=", "y_true", "\n", "", "", "print", "(", "len", "(", "head_list", ")", ")", "\n", "# print(change)", "\n", "sampled_data", "=", "build_vector", "(", "head_vec_1", ",", "tail_vec_1", ",", "relation_vec", ",", "y_output", ",", "False", ")", "\n", "return", "sampled_data", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict": [[86, 101], ["collections.defaultdict", "collections.defaultdict", "enumerate", "rel_head[].append", "rel_tail[].append"], "function", ["None"], ["", "def", "get_rel_dict", "(", "head_list", ",", "tail_list", ",", "rel_list", ")", ":", "\n", "    ", "\"\"\"\n    :param head_list: entity list with head, tail, relations\n    :param tail_list: tail list\n    :param rel_list : relations list\n    :return: dictionary of relations mapped to entities\n    \"\"\"", "\n", "rel_head", "=", "defaultdict", "(", "list", ")", "\n", "rel_tail", "=", "defaultdict", "(", "list", ")", "\n", "for", "index", ",", "entity", "in", "enumerate", "(", "rel_list", ")", ":", "\n", "        ", "if", "head_list", "[", "index", "]", "not", "in", "rel_head", "[", "entity", "]", ":", "\n", "            ", "rel_head", "[", "entity", "]", ".", "append", "(", "head_list", "[", "index", "]", ")", "\n", "", "if", "tail_list", "[", "index", "]", "not", "in", "rel_tail", "[", "entity", "]", ":", "\n", "            ", "rel_tail", "[", "entity", "]", ".", "append", "(", "tail_list", "[", "index", "]", ")", "\n", "", "", "return", "rel_head", ",", "rel_tail", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.build_vector": [[103, 116], ["pandas.DataFrame"], "function", ["None"], ["", "def", "build_vector", "(", "head_list", ",", "tail_list", ",", "relation_list", ",", "y_true", ",", "interchange", "=", "False", ")", ":", "\n", "    ", "df", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", ",", "\"score\"", "]", ")", "\n", "if", "interchange", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "tail_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "head_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "else", ":", "\n", "        ", "df", "[", "\"Head\"", "]", "=", "head_list", "\n", "df", "[", "\"relation\"", "]", "=", "relation_list", "\n", "df", "[", "\"tail\"", "]", "=", "tail_list", "\n", "df", "[", "\"score\"", "]", "=", "y_true", "\n", "", "return", "df", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_tokens_train": [[118, 132], ["val.split.lower", "val.split.lower", "val.split.split", "token_list.append", "token_list.append", "val.split.translate", "word.translate", "str.maketrans", "str.maketrans"], "function", ["None"], ["", "def", "get_tokens_train", "(", "data", ")", ":", "\n", "    ", "columns", "=", "[", "\"Head\"", ",", "\"relation\"", ",", "\"tail\"", "]", "\n", "token_list", "=", "[", "]", "\n", "for", "col", "in", "columns", ":", "\n", "        ", "for", "val", "in", "data", "[", "col", "]", ":", "\n", "            ", "val", "=", "val", ".", "lower", "(", ")", "\n", "if", "\"_\"", "in", "val", ":", "\n", "                ", "val", "=", "val", ".", "lower", "(", ")", "\n", "val", "=", "val", ".", "split", "(", "'_'", ")", "\n", "for", "word", "in", "val", ":", "\n", "                    ", "token_list", ".", "append", "(", "word", ".", "translate", "(", "str", ".", "maketrans", "(", "''", ",", "''", ",", "string", ".", "punctuation", ")", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "token_list", ".", "append", "(", "val", ".", "translate", "(", "str", ".", "maketrans", "(", "''", ",", "''", ",", "string", ".", "punctuation", ")", ")", ")", "\n", "", "", "", "return", "token_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.load_word2vec": [[134, 144], ["open", "line.split", "numpy.array", "float"], "function", ["None"], ["", "def", "load_word2vec", "(", "file_path", ")", ":", "\n", "    ", "word2vec", "=", "{", "}", "\n", "with", "open", "(", "file_path", ")", "as", "lines", ":", "\n", "        ", "for", "line", "in", "lines", ":", "\n", "            ", "split", "=", "line", ".", "split", "(", "\" \"", ")", "\n", "word", "=", "split", "[", "0", "]", "\n", "vector_strings", "=", "split", "[", "1", ":", "]", "\n", "vector", "=", "[", "float", "(", "num", ")", "for", "num", "in", "vector_strings", "]", "\n", "word2vec", "[", "word", "]", "=", "np", ".", "array", "(", "vector", ")", "\n", "", "", "return", "word2vec", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.create_id2vec": [[146, 155], ["len", "max", "numpy.zeros", "id2word.items", "list", "id2word.keys"], "function", ["None"], ["", "def", "create_id2vec", "(", "id2word", ",", "word2vec", ")", ":", "\n", "    ", "unk_vec", "=", "word2vec", "[", "\"unk\"", "]", "\n", "dim_of_vector", "=", "len", "(", "unk_vec", ")", "\n", "num_of_tokens", "=", "max", "(", "list", "(", "id2word", ".", "keys", "(", ")", ")", ")", "\n", "id2vec", "=", "np", ".", "zeros", "(", "(", "num_of_tokens", "+", "1", ",", "dim_of_vector", ")", ",", "dtype", "=", "np", ".", "float16", ")", "\n", "for", "id", ",", "word", "in", "id2word", ".", "items", "(", ")", ":", "\n", "        ", "if", "word", "!=", "'PAD'", ":", "\n", "            ", "id2vec", "[", "id", ",", ":", "]", "=", "word2vec", "[", "word", "]", "if", "word", "in", "word2vec", "else", "unk_vec", "\n", "", "", "return", "id2vec", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.CreatXid": [[157, 174], ["token_dict.items"], "function", ["None"], ["", "def", "CreatXid", "(", "token_dict", ",", "limit", ")", ":", "\n", "    ", "word2id", ",", "id2word", "=", "{", "}", ",", "{", "}", "\n", "word2id", "[", "'PAD'", "]", "=", "0", "\n", "id2word", "[", "0", "]", "=", "'PAD'", "\n", "word2id", "[", "'<BOS>'", "]", "=", "1", "\n", "word2id", "[", "'<EOS>'", "]", "=", "2", "\n", "id2word", "[", "1", "]", "=", "'<BOS>'", "\n", "id2word", "[", "2", "]", "=", "'<EOS>'", "\n", "word2id", "[", "'unk'", "]", "=", "3", "\n", "id2word", "[", "3", "]", "=", "'unk'", "\n", "i", "=", "4", "\n", "for", "key", ",", "value", "in", "token_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "value", ">", "limit", ":", "\n", "            ", "word2id", "[", "key", "]", "=", "i", "\n", "id2word", "[", "i", "]", "=", "key", "\n", "i", "+=", "1", "\n", "", "", "return", "word2id", ",", "id2word", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.main": [[176, 207], ["int", "int", "int", "pandas.read_csv", "train_data[].tolist", "train_data[].tolist", "train_data[].tolist", "pandas.read_csv", "pandas.read_csv", "kge_data_collection.get_tokens_train", "print", "print", "collections.Counter", "print", "kge_data_collection.get_rel_dict", "print", "kge_data_collection.CreatXid", "kge_data_collection.load_word2vec", "kge_data_collection.create_id2vec", "print", "kge_data_collection.get_neg_samples", "kge_data_collection.get_neg_samples", "kge_data_collection.get_neg_samples", "get_neg_samples.to_pickle", "get_neg_samples.to_pickle", "get_neg_samples.to_pickle", "sklearn.externals.joblib.dump", "len", "len", "rel_head.keys", "rel_tail.keys"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_tokens_train", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_rel_dict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.CreatXid", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.load_word2vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.create_id2vec", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_neg_samples", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_neg_samples", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.kge_data_collection.get_neg_samples"], ["", "def", "main", "(", ")", ":", "\n", "    ", "PATH", "=", "sys", ".", "argv", "[", "1", "]", "\n", "limit", "=", "int", "(", "sys", ".", "argv", "[", "2", "]", ")", "\n", "glove_path", "=", "sys", ".", "argv", "[", "3", "]", "\n", "lower", "=", "int", "(", "sys", ".", "argv", "[", "4", "]", ")", "\n", "upper", "=", "int", "(", "sys", ".", "argv", "[", "5", "]", ")", "\n", "train_data", "=", "pd", ".", "read_csv", "(", "PATH", "+", "\"train_kge.csv\"", ")", "\n", "head_list", "=", "train_data", "[", "'Head'", "]", ".", "tolist", "(", ")", "\n", "tail_list", "=", "train_data", "[", "'tail'", "]", ".", "tolist", "(", ")", "\n", "rel_list", "=", "train_data", "[", "'relation'", "]", ".", "tolist", "(", ")", "\n", "dev_data", "=", "pd", ".", "read_csv", "(", "PATH", "+", "\"dev_kge.csv\"", ")", "\n", "test_data", "=", "pd", ".", "read_csv", "(", "PATH", "+", "\"test_kge.csv\"", ")", "\n", "token_list", "=", "get_tokens_train", "(", "train_data", ")", "\n", "print", "(", "len", "(", "token_list", ")", ")", "\n", "print", "(", "token_list", "[", ":", "100", "]", ")", "\n", "token_counter", "=", "Counter", "(", "token_list", ")", "\n", "print", "(", "len", "(", "token_counter", ")", ")", "\n", "rel_head", ",", "rel_tail", "=", "get_rel_dict", "(", "head_list", ",", "tail_list", ",", "rel_list", ")", "\n", "print", "(", "rel_head", ".", "keys", "(", ")", ",", "rel_tail", ".", "keys", "(", ")", ")", "\n", "word2id_", ",", "id2word_", "=", "CreatXid", "(", "token_counter", ",", "limit", ")", "\n", "word2vec_", "=", "load_word2vec", "(", "glove_path", ")", "\n", "id2vec", "=", "create_id2vec", "(", "id2word_", ",", "word2vec_", ")", "\n", "print", "(", "id2vec", ".", "shape", ")", "\n", "sample_data", "=", "get_neg_samples", "(", "train_data", ",", "1", ",", "word2id_", ",", "rel_tail", ",", "lower", ",", "upper", ")", "\n", "dev_out", "=", "get_neg_samples", "(", "dev_data", ",", "1", ",", "word2id_", ",", "rel_tail", ",", "2", ",", "2", ")", "\n", "test_out", "=", "get_neg_samples", "(", "test_data", ",", "1", ",", "word2id_", ",", "rel_tail", ",", "2", ",", "2", ")", "\n", "sample_data", ".", "to_pickle", "(", "'data/random_dataset/Sample_data_head_24.pkl'", ")", "\n", "dev_out", ".", "to_pickle", "(", "'data/random_dataset/dev_vec_dict.pkl'", ")", "\n", "test_out", ".", "to_pickle", "(", "'data/random_dataset/test_vec_dict.pkl'", ")", "\n", "data_dict", "=", "{", "'id2vec'", ":", "id2vec", ",", "'word2id'", ":", "word2id_", ",", "'id2word'", ":", "id2word_", "}", "\n", "joblib", ".", "dump", "(", "data_dict", ",", "'kge_dict.pkl'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.preprocess.get_summary.get_text": [[7, 17], ["print", "word.startswith", "word.split", "temp_list.append", "temp_list.append", "a[].strip"], "function", ["None"], ["def", "get_text", "(", "line", ")", ":", "\n", "    ", "temp_list", "=", "[", "]", "\n", "for", "word", "in", "line", ":", "\n", "        ", "if", "word", ".", "startswith", "(", "\"@\"", ")", ":", "\n", "            ", "a", "=", "word", ".", "split", "(", "'/'", ")", "\n", "temp_list", ".", "append", "(", "a", "[", "0", "]", ".", "strip", "(", "'@'", ")", ")", "\n", "", "else", ":", "\n", "            ", "temp_list", ".", "append", "(", "word", ")", "\n", "", "", "print", "(", "temp_list", ")", "\n", "return", "temp_list", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.test_fner_attn.pad_sequence_": [[23, 28], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["def", "pad_sequence_", "(", "sequence", ",", "max_length", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "'post'", ",", "\n", "truncating", "=", "'post'", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.test_fner_attn.pad_single": [[30, 34], ["max", "test_fner_attn.pad_sequence_", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_"], ["", "def", "pad_single", "(", "sent_in", ")", ":", "\n", "    ", "max_sent", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "sent_in", "]", ")", "\n", "sent_in_pad", "=", "pad_sequence_", "(", "sent_in", ",", "max_sent", ")", "\n", "return", "sent_in_pad", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.test_fner_attn.valid_eval": [[36, 86], ["data_in.next", "test_fner_attn.pad_single", "test_fner_attn.pad_single", "numpy.flip", "range", "print", "numpy.array", "numpy.vstack", "numpy.squeeze", "numpy.array", "numpy.vstack", "print", "print", "print", "src.hook.acc_hook", "logging.info", "len", "src.model.nn_model_fner.Model.predict", "src.model.nn_model_fner.Model.error", "np.squeeze.append", "np.vstack.append", "total_loss.append", "sum", "src.hook.save_predictions", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.next", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.acc_hook", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.error", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.save_predictions"], ["", "def", "valid_eval", "(", "data_in", ",", "task", ",", "eval_type", "=", "None", ",", "final", "=", "False", ")", ":", "\n", "# m1 = data_in['mention']", "\n", "#     # l1 = data_in['left_context']", "\n", "#     # r1 = data_in['right_context']", "\n", "#     # la1 = data_in['label']", "\n", "#     # m1, l1, r1 = pad_method(m1, l1, r1)", "\n", "\n", "    ", "if", "task", "==", "'FNER'", ":", "\n", "        ", "collector", "=", "[", "]", "\n", "true", "=", "[", "]", "\n", "iters", "=", "0", "\n", "total_loss", "=", "[", "]", "\n", "c_", ",", "m_", ",", "lab", ",", "f", ",", "d", ",", "s_in", ",", "m_id", ",", "l_id", ",", "r_id", "=", "data_in", ".", "next", "(", ")", "\n", "lf_id", "=", "pad_single", "(", "l_id", ")", "\n", "rt_id", "=", "pad_single", "(", "r_id", ")", "\n", "rt_id", "=", "np", ".", "flip", "(", "rt_id", ",", "axis", "=", "-", "1", ")", "\n", "p1", "=", "100", "\n", "for", "k", "in", "range", "(", "0", ",", "len", "(", "c_", ")", ",", "p1", ")", ":", "\n", "            ", "s", "=", "Model", ".", "predict", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "f", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "doc_vector", "=", "None", ")", "\n", "loss_val", "=", "Model", ".", "error", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "lab", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "f", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "doc_vector", "=", "None", ")", "\n", "\n", "r", "=", "lab", "[", "k", ":", "k", "+", "p1", "]", "\n", "collector", ".", "append", "(", "s", ")", "\n", "true", ".", "append", "(", "r", ")", "\n", "total_loss", ".", "append", "(", "loss_val", ")", "\n", "iters", "+=", "1", "\n", "", "average_eval_loss", "=", "sum", "(", "total_loss", ")", "/", "iters", "\n", "print", "(", "task", "+", "\" Loss: \"", ",", "average_eval_loss", ")", "\n", "collector", "=", "np", ".", "array", "(", "collector", ")", "\n", "collector", "=", "np", ".", "vstack", "(", "collector", ")", "\n", "collector", "=", "np", ".", "squeeze", "(", "collector", ")", "\n", "true", "=", "np", ".", "array", "(", "true", ")", "\n", "true", "=", "np", ".", "vstack", "(", "true", ")", "\n", "print", "(", "collector", ".", "shape", ",", "true", ".", "shape", ")", "\n", "print", "(", "collector", ")", "\n", "print", "(", "true", ")", "\n", "strict_f1", "=", "acc_hook", "(", "collector", ",", "true", ")", "\n", "logging", ".", "info", "(", "str", "(", "eval_type", ")", "+", "\" FNER loss: {}\"", ".", "format", "(", "average_eval_loss", ")", ")", "\n", "if", "final", ":", "\n", "            ", "fname", "=", "args", ".", "dataset", "+", "\"_\"", "+", "args", ".", "encoder", "+", "\"_\"", "+", "str", "(", "args", ".", "feature", ")", "+", "\"_\"", "+", "str", "(", "args", ".", "hier", ")", "+", "\".txt\"", "\n", "save_predictions", "(", "collector", ",", "true", ",", "dicts", "[", "\"id2label\"", "]", ",", "fname", ")", "\n", "", "return", "strict_f1", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr": [[23, 27], ["sklearn.metrics.precision_recall_curve", "sklearn.metrics.auc"], "function", ["None"], ["def", "get_aucpr", "(", "y_out", ",", "y_true", ")", ":", "\n", "    ", "precision", ",", "recall", ",", "threshold", "=", "precision_recall_curve", "(", "y_out", ",", "y_true", ")", "\n", "aucpr", "=", "auc", "(", "recall", ",", "precision", ")", "\n", "return", "aucpr", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning": [[29, 37], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.0", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "-", "1", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1": [[39, 47], ["range", "len", "tune_prediction.append", "tune_prediction.append"], "function", ["None"], ["", "def", "tuning_1", "(", "prediction", ")", ":", "\n", "    ", "tune_prediction", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "prediction", ")", ")", ":", "\n", "        ", "if", "prediction", "[", "i", "]", ">=", "0.0", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "1", ")", "\n", "", "else", ":", "\n", "            ", "tune_prediction", ".", "append", "(", "0", ")", "\n", "", "", "return", "tune_prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation": [[49, 76], ["range", "logging.info", "sklearn.metrics.roc_auc_score", "train_fner_attn.get_aucpr", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "logging.info", "train_fner_attn.tuning_1", "train_fner_attn.tuning", "len", "len", "len", "len", "sklearn.metrics.classification_report"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.get_aucpr", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning_1", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.tuning"], ["", "def", "evaluation", "(", "y_out", ",", "pred_out", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "if", "data_type", ":", "\n", "        ", "pred_1", "=", "tuning_1", "(", "pred_out", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "        ", "pred_1", "=", "tuning", "(", "pred_out", ")", "\n", "# for val in pred_out[0]:", "\n", "#     logging.info(\"val => {}\".format(val))", "\n", "\n", "", "acc", "=", "0", "\n", "assert", "len", "(", "pred_out", ")", "==", "len", "(", "y_out", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "pred_1", ")", ")", ":", "\n", "        ", "if", "pred_1", "[", "i", "]", "==", "y_out", "[", "i", "]", ":", "\n", "            ", "acc", "+=", "1", "\n", "", "", "b", "=", "(", "acc", "/", "len", "(", "pred_1", ")", ")", "*", "100", "\n", "logging", ".", "info", "(", "\"The test accuracy: {}\"", ".", "format", "(", "b", ")", ")", "\n", "# print(pred_out, y_out)", "\n", "roc_score_test", "=", "roc_auc_score", "(", "y_out", ",", "pred_out", ")", "\n", "aucpr_test", "=", "get_aucpr", "(", "y_out", ",", "pred_out", ")", "\n", "f1_test", "=", "f1_score", "(", "y_out", ",", "pred_1", ")", "\n", "precision_test", "=", "precision_score", "(", "y_out", ",", "pred_1", ")", "\n", "recall_test", "=", "recall_score", "(", "y_out", ",", "pred_1", ")", "\n", "logging", ".", "info", "(", "\"This is the AUCPR score: {}\"", ".", "format", "(", "aucpr_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the roc_score: {}\"", ".", "format", "(", "roc_score_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is the F1 score: {}\"", ".", "format", "(", "f1_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is precision: {}\"", ".", "format", "(", "precision_test", ")", ")", "\n", "logging", ".", "info", "(", "\"This is recall: {}\"", ".", "format", "(", "recall_test", ")", ")", "\n", "logging", ".", "info", "(", "\"Classification report: {}\"", ".", "format", "(", "classification_report", "(", "y_out", ",", "pred_1", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.eval_data": [[78, 93], ["len", "range", "train_fner_attn.evaluation", "model.get_embed", "model.predict", "output_[].tolist"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.evaluation", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.kge_model_1.NAM_Modified.get_embed", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict"], ["", "def", "eval_data", "(", "model", ",", "head_vec", ",", "tail_vec", ",", "rel_vec", ",", "label_ids", ",", "data_type", "=", "False", ")", ":", "\n", "    ", "N", "=", "len", "(", "head_vec", ")", "\n", "g1", "=", "1024", "\n", "output_dev_collector", "=", "[", "]", "\n", "for", "k1", "in", "(", "range", "(", "0", ",", "N", ",", "g1", ")", ")", ":", "\n", "        ", "if", "k1", "+", "g1", ">", "N", ":", "\n", "            ", "d1", "=", "N", "\n", "", "else", ":", "\n", "            ", "d1", "=", "k1", "+", "g1", "\n", "", "h", ",", "r", ",", "t", ",", "embed", "=", "model", ".", "get_embed", "(", "head_vec", "[", "k1", ":", "d1", "]", ",", "tail_vec", "[", "k1", ":", "d1", "]", ",", "rel_vec", "[", "k1", ":", "d1", "]", ")", "\n", "# embed = np.squeeze(embed)", "\n", "output_", "=", "model", ".", "predict", "(", "embed", ")", "\n", "# print(output_[0].shape)", "\n", "output_dev_collector", "+=", "output_", "[", "0", "]", ".", "tolist", "(", ")", "\n", "", "evaluation", "(", "label_ids", ",", "output_dev_collector", ",", "data_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_": [[95, 100], ["tensorflow.python.keras.preprocessing.sequence.pad_sequences"], "function", ["None"], ["", "def", "pad_sequence_", "(", "sequence", ",", "max_length", ")", ":", "\n", "    ", "sequence", "=", "pad_sequences", "(", "sequence", ",", "maxlen", "=", "max_length", ",", "dtype", "=", "'int64'", ",", "padding", "=", "'post'", ",", "\n", "truncating", "=", "'post'", ",", "\n", "value", "=", "0", ")", "\n", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single": [[102, 106], ["max", "train_fner_attn.pad_sequence_", "len"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_sequence_"], ["", "def", "pad_single", "(", "sent_in", ")", ":", "\n", "    ", "max_sent", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "sent_in", "]", ")", "\n", "sent_in_pad", "=", "pad_sequence_", "(", "sent_in", ",", "max_sent", ")", "\n", "return", "sent_in_pad", "\n", "\n"]], "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.valid_eval": [[108, 158], ["data_in.next", "train_fner_attn.pad_single", "train_fner_attn.pad_single", "numpy.flip", "range", "print", "numpy.array", "numpy.vstack", "numpy.squeeze", "numpy.array", "numpy.vstack", "print", "print", "print", "src.hook.acc_hook", "logging.info", "len", "src.model.nn_model_fner.Model.predict", "src.model.nn_model_fner.Model.error", "np.squeeze.append", "np.vstack.append", "total_loss.append", "sum", "src.hook.save_predictions", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.batcher.Batcher.next", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.FNETR.train_fner_attn.pad_single", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.acc_hook", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.predict", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.model.nn_model_fner.Model.error", "home.repos.pwc.inspect_result.rajathpatel23_joint-kge-fnet-lm.src.hook.save_predictions"], ["", "def", "valid_eval", "(", "data_in", ",", "task", ",", "eval_type", "=", "None", ",", "final", "=", "False", ")", ":", "\n", "# m1 = data_in['mention']", "\n", "#     # l1 = data_in['left_context']", "\n", "#     # r1 = data_in['right_context']", "\n", "#     # la1 = data_in['label']", "\n", "#     # m1, l1, r1 = pad_method(m1, l1, r1)", "\n", "\n", "    ", "if", "task", "==", "'FNER'", ":", "\n", "        ", "collector", "=", "[", "]", "\n", "true", "=", "[", "]", "\n", "iters", "=", "0", "\n", "total_loss", "=", "[", "]", "\n", "c_", ",", "m_", ",", "lab", ",", "f", ",", "d", ",", "s_in", ",", "m_id", ",", "l_id", ",", "r_id", "=", "data_in", ".", "next", "(", ")", "\n", "lf_id", "=", "pad_single", "(", "l_id", ")", "\n", "rt_id", "=", "pad_single", "(", "r_id", ")", "\n", "rt_id", "=", "np", ".", "flip", "(", "rt_id", ",", "axis", "=", "-", "1", ")", "\n", "p1", "=", "100", "\n", "for", "k", "in", "range", "(", "0", ",", "len", "(", "c_", ")", ",", "p1", ")", ":", "\n", "            ", "s", "=", "Model", ".", "predict", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "f", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "doc_vector", "=", "None", ")", "\n", "loss_val", "=", "Model", ".", "error", "(", "lf_id", "[", "k", ":", "k", "+", "p1", "]", ",", "rt_id", "[", "k", ":", "k", "+", "p1", "]", ",", "lab", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "context_data", "=", "None", ",", "\n", "mention_representation_data", "=", "m_", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "feature_data", "=", "f", "[", "k", ":", "k", "+", "p1", "]", ",", "\n", "doc_vector", "=", "None", ")", "\n", "\n", "r", "=", "lab", "[", "k", ":", "k", "+", "p1", "]", "\n", "collector", ".", "append", "(", "s", ")", "\n", "true", ".", "append", "(", "r", ")", "\n", "total_loss", ".", "append", "(", "loss_val", ")", "\n", "iters", "+=", "1", "\n", "", "average_eval_loss", "=", "sum", "(", "total_loss", ")", "/", "iters", "\n", "print", "(", "task", "+", "\" Loss: \"", ",", "average_eval_loss", ")", "\n", "collector", "=", "np", ".", "array", "(", "collector", ")", "\n", "collector", "=", "np", ".", "vstack", "(", "collector", ")", "\n", "collector", "=", "np", ".", "squeeze", "(", "collector", ")", "\n", "true", "=", "np", ".", "array", "(", "true", ")", "\n", "true", "=", "np", ".", "vstack", "(", "true", ")", "\n", "print", "(", "collector", ".", "shape", ",", "true", ".", "shape", ")", "\n", "print", "(", "collector", ")", "\n", "print", "(", "true", ")", "\n", "strict_f1", "=", "acc_hook", "(", "collector", ",", "true", ")", "\n", "logging", ".", "info", "(", "str", "(", "eval_type", ")", "+", "\" FNER loss: {}\"", ".", "format", "(", "average_eval_loss", ")", ")", "\n", "if", "final", ":", "\n", "            ", "fname", "=", "args", ".", "dataset", "+", "\"_\"", "+", "args", ".", "encoder", "+", "\"_\"", "+", "str", "(", "args", ".", "feature", ")", "+", "\"_\"", "+", "str", "(", "args", ".", "hier", ")", "+", "\".txt\"", "\n", "save_predictions", "(", "collector", ",", "true", ",", "dicts", "[", "\"id2label\"", "]", ",", "fname", ")", "\n", "", "return", "strict_f1", "\n", "\n"]]}