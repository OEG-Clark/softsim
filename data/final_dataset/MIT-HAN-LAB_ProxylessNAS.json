{"home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.MBInvertedConvLayer.__init__": [[161, 173], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "_id", ",", "\n", "filter_num", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "expand_ratio", "=", "6", ")", ":", "\n", "        ", "self", ".", "id", "=", "_id", "\n", "self", ".", "filter_num", "=", "filter_num", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "expand_ratio", "=", "expand_ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.MBInvertedConvLayer.build": [[174, 213], ["int", "tensorflow.variable_scope", "_input.get_shape", "round", "tensorflow.variable_scope", "tf_layers.depthwise_conv2d", "tf_layers.batch_norm", "tf_layers.activation", "tensorflow.variable_scope", "tf_layers.conv2d", "tf_layers.batch_norm", "tensorflow.variable_scope", "tf_layers.conv2d", "tf_layers.batch_norm", "tf_layers.activation"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.depthwise_conv2d", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.batch_norm", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.activation", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.conv2d", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.batch_norm", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.conv2d", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.batch_norm", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.activation"], ["", "def", "build", "(", "self", ",", "_input", ",", "net", ",", "init", "=", "None", ")", ":", "\n", "        ", "output", "=", "_input", "\n", "in_features", "=", "int", "(", "_input", ".", "get_shape", "(", ")", "[", "3", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "self", ".", "id", ")", ":", "\n", "            ", "if", "self", ".", "expand_ratio", ">", "1", ":", "\n", "                ", "feature_dim", "=", "round", "(", "in_features", "*", "self", ".", "expand_ratio", ")", "\n", "with", "tf", ".", "variable_scope", "(", "'inverted_bottleneck'", ")", ":", "\n", "                    ", "output", "=", "conv2d", "(", "\n", "output", ",", "feature_dim", ",", "1", ",", "1", ",", "param_initializer", "=", "init", ")", "\n", "output", "=", "batch_norm", "(", "\n", "output", ",", "\n", "net", ".", "is_training", ",", "\n", "epsilon", "=", "net", ".", "bn_eps", ",", "\n", "decay", "=", "net", ".", "bn_decay", ",", "\n", "param_initializer", "=", "init", ")", "\n", "output", "=", "activation", "(", "output", ",", "'relu6'", ")", "\n", "", "", "with", "tf", ".", "variable_scope", "(", "'depth_conv'", ")", ":", "\n", "                ", "output", "=", "depthwise_conv2d", "(", "\n", "output", ",", "\n", "self", ".", "kernel_size", ",", "\n", "self", ".", "stride", ",", "\n", "param_initializer", "=", "init", ")", "\n", "output", "=", "batch_norm", "(", "\n", "output", ",", "\n", "net", ".", "is_training", ",", "\n", "epsilon", "=", "net", ".", "bn_eps", ",", "\n", "decay", "=", "net", ".", "bn_decay", ",", "\n", "param_initializer", "=", "init", ")", "\n", "output", "=", "activation", "(", "output", ",", "'relu6'", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "'point_linear'", ")", ":", "\n", "                ", "output", "=", "conv2d", "(", "output", ",", "self", ".", "filter_num", ",", "1", ",", "\n", "1", ",", "param_initializer", "=", "init", ")", "\n", "output", "=", "batch_norm", "(", "\n", "output", ",", "\n", "net", ".", "is_training", ",", "\n", "epsilon", "=", "net", ".", "bn_eps", ",", "\n", "decay", "=", "net", ".", "bn_decay", ",", "\n", "param_initializer", "=", "init", ")", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.ConvLayer.__init__": [[216, 221], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "_id", ",", "filter_num", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ":", "\n", "        ", "self", ".", "id", "=", "_id", "\n", "self", ".", "filter_num", "=", "filter_num", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.ConvLayer.build": [[222, 239], ["tensorflow.variable_scope", "tf_layers.conv2d", "tf_layers.batch_norm", "tf_layers.activation"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.conv2d", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.batch_norm", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.activation"], ["", "def", "build", "(", "self", ",", "_input", ",", "net", ",", "init", "=", "None", ")", ":", "\n", "        ", "output", "=", "_input", "\n", "with", "tf", ".", "variable_scope", "(", "self", ".", "id", ")", ":", "\n", "            ", "output", "=", "conv2d", "(", "\n", "output", ",", "\n", "self", ".", "filter_num", ",", "\n", "self", ".", "kernel_size", ",", "\n", "self", ".", "stride", ",", "\n", "param_initializer", "=", "init", ")", "\n", "output", "=", "batch_norm", "(", "\n", "output", ",", "\n", "net", ".", "is_training", ",", "\n", "epsilon", "=", "net", ".", "bn_eps", ",", "\n", "decay", "=", "net", ".", "bn_decay", ",", "\n", "param_initializer", "=", "init", ")", "\n", "output", "=", "activation", "(", "output", ",", "'relu6'", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.LinearLayer.__init__": [[242, 246], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "_id", ",", "n_units", ",", "drop_rate", "=", "0", ")", ":", "\n", "        ", "self", ".", "id", "=", "_id", "\n", "self", ".", "n_units", "=", "n_units", "\n", "self", ".", "drop_rate", "=", "drop_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.LinearLayer.build": [[247, 258], ["tensorflow.variable_scope", "tf_layers.fc_layer", "tf_layers.dropout"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.fc_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.dropout"], ["", "def", "build", "(", "self", ",", "_input", ",", "net", ",", "init", "=", "None", ")", ":", "\n", "        ", "output", "=", "_input", "\n", "with", "tf", ".", "variable_scope", "(", "self", ".", "id", ")", ":", "\n", "            ", "if", "self", ".", "drop_rate", ">", "0", ":", "\n", "                ", "output", "=", "dropout", "(", "output", ",", "1", "-", "self", ".", "drop_rate", ",", "net", ".", "is_training", ")", "\n", "", "output", "=", "fc_layer", "(", "\n", "output", ",", "\n", "self", ".", "n_units", ",", "\n", "use_bias", "=", "True", ",", "\n", "param_initializer", "=", "init", ")", "\n", "", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.conv2d": [[6, 39], ["int", "tensorflow.variable_scope", "param_initializer.get", "tensorflow.get_variable", "tensorflow.nn.conv2d", "_input.get_shape", "tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.constant", "tensorflow.pad", "tensorflow.get_variable_scope"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.conv2d"], ["def", "conv2d", "(", "\n", "_input", ",", "\n", "out_features", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "'SAME'", ",", "\n", "param_initializer", "=", "None", ")", ":", "\n", "    ", "in_features", "=", "int", "(", "_input", ".", "get_shape", "(", ")", "[", "3", "]", ")", "\n", "\n", "if", "not", "param_initializer", ":", "\n", "        ", "param_initializer", "=", "{", "}", "\n", "", "output", "=", "_input", "\n", "with", "tf", ".", "variable_scope", "(", "'conv'", ")", ":", "\n", "        ", "init_key", "=", "'%s/weight'", "%", "tf", ".", "get_variable_scope", "(", ")", ".", "name", "\n", "initializer", "=", "param_initializer", ".", "get", "(", "\n", "init_key", ",", "tf", ".", "contrib", ".", "layers", ".", "variance_scaling_initializer", "(", ")", ")", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "'weight'", ",", "\n", "shape", "=", "[", "\n", "kernel_size", ",", "\n", "kernel_size", ",", "\n", "in_features", ",", "\n", "out_features", "]", ",", "\n", "initializer", "=", "initializer", ")", "\n", "if", "padding", "==", "'SAME'", ":", "\n", "            ", "pad", "=", "kernel_size", "//", "2", "\n", "paddings", "=", "tf", ".", "constant", "(", "[", "[", "0", ",", "0", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "output", "=", "tf", ".", "pad", "(", "output", ",", "paddings", ",", "'CONSTANT'", ")", "\n", "\n", "", "output", "=", "tf", ".", "nn", ".", "conv2d", "(", "\n", "output", ",", "weight", ",", "[", "\n", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "'VALID'", ",", "data_format", "=", "'NHWC'", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.depthwise_conv2d": [[41, 69], ["int", "tensorflow.variable_scope", "param_initializer.get", "tensorflow.get_variable", "tensorflow.nn.depthwise_conv2d", "_input.get_shape", "tensorflow.contrib.layers.variance_scaling_initializer", "tensorflow.constant", "tensorflow.pad", "tensorflow.get_variable_scope"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.depthwise_conv2d"], ["", "def", "depthwise_conv2d", "(", "\n", "_input", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "'SAME'", ",", "\n", "param_initializer", "=", "None", ")", ":", "\n", "    ", "in_features", "=", "int", "(", "_input", ".", "get_shape", "(", ")", "[", "3", "]", ")", "\n", "\n", "if", "not", "param_initializer", ":", "\n", "        ", "param_initializer", "=", "{", "}", "\n", "", "output", "=", "_input", "\n", "with", "tf", ".", "variable_scope", "(", "'conv'", ")", ":", "\n", "        ", "init_key", "=", "'%s/weight'", "%", "tf", ".", "get_variable_scope", "(", ")", ".", "name", "\n", "initializer", "=", "param_initializer", ".", "get", "(", "\n", "init_key", ",", "tf", ".", "contrib", ".", "layers", ".", "variance_scaling_initializer", "(", ")", ")", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "'weight'", ",", "shape", "=", "[", "kernel_size", ",", "kernel_size", ",", "in_features", ",", "1", "]", ",", "\n", "initializer", "=", "initializer", "\n", ")", "\n", "if", "padding", "==", "'SAME'", ":", "\n", "            ", "pad", "=", "kernel_size", "//", "2", "\n", "paddings", "=", "tf", ".", "constant", "(", "[", "[", "0", ",", "0", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "pad", ",", "pad", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "output", "=", "tf", ".", "pad", "(", "output", ",", "paddings", ",", "'CONSTANT'", ")", "\n", "\n", "", "output", "=", "tf", ".", "nn", ".", "depthwise_conv2d", "(", "\n", "output", ",", "weight", ",", "[", "\n", "1", ",", "stride", ",", "stride", ",", "1", "]", ",", "'VALID'", ",", "data_format", "=", "'NHWC'", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.avg_pool": [[71, 78], ["tensorflow.contrib.layers.avg_pool2d"], "function", ["None"], ["", "def", "avg_pool", "(", "_input", ",", "k", "=", "2", ",", "s", "=", "2", ")", ":", "\n", "    ", "padding", "=", "'VALID'", "\n", "output", "=", "avg_pool2d", "(", "\n", "_input", ",", "kernel_size", "=", "[", "\n", "k", ",", "k", "]", ",", "stride", "=", "[", "\n", "s", ",", "s", "]", ",", "padding", "=", "padding", ",", "data_format", "=", "'NHWC'", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.fc_layer": [[80, 104], ["int", "tensorflow.variable_scope", "param_initializer.get", "tensorflow.get_variable", "tensorflow.matmul", "_input.get_shape", "tensorflow.contrib.layers.xavier_initializer", "param_initializer.get", "tensorflow.get_variable", "tensorflow.get_variable_scope", "tensorflow.constant_initializer", "tensorflow.get_variable_scope"], "function", ["None"], ["", "def", "fc_layer", "(", "_input", ",", "out_units", ",", "use_bias", "=", "False", ",", "param_initializer", "=", "None", ")", ":", "\n", "    ", "features_total", "=", "int", "(", "_input", ".", "get_shape", "(", ")", "[", "-", "1", "]", ")", "\n", "if", "not", "param_initializer", ":", "\n", "        ", "param_initializer", "=", "{", "}", "\n", "", "with", "tf", ".", "variable_scope", "(", "'linear'", ")", ":", "\n", "        ", "init_key", "=", "'%s/weight'", "%", "tf", ".", "get_variable_scope", "(", ")", ".", "name", "\n", "initializer", "=", "param_initializer", ".", "get", "(", "\n", "init_key", ",", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "'weight'", ",", "shape", "=", "[", "features_total", ",", "out_units", "]", ",", "\n", "initializer", "=", "initializer", "\n", ")", "\n", "output", "=", "tf", ".", "matmul", "(", "_input", ",", "weight", ")", "\n", "if", "use_bias", ":", "\n", "            ", "init_key", "=", "'%s/bias'", "%", "tf", ".", "get_variable_scope", "(", ")", ".", "name", "\n", "initializer", "=", "param_initializer", ".", "get", "(", "\n", "init_key", ",", "tf", ".", "constant_initializer", "(", "\n", "[", "0.0", "]", "*", "out_units", ")", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "'bias'", ",", "shape", "=", "[", "out_units", "]", ",", "\n", "initializer", "=", "initializer", "\n", ")", "\n", "output", "=", "output", "+", "bias", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.batch_norm": [[106, 131], ["tensorflow.variable_scope", "tensorflow.contrib.layers.batch_norm", "tensorflow.get_variable_scope"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.batch_norm"], ["", "def", "batch_norm", "(", "\n", "_input", ",", "\n", "is_training", ",", "\n", "epsilon", "=", "1e-3", ",", "\n", "decay", "=", "0.9", ",", "\n", "param_initializer", "=", "None", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "'bn'", ")", ":", "\n", "        ", "scope", "=", "tf", ".", "get_variable_scope", "(", ")", ".", "name", "\n", "bn_init", "=", "{", "\n", "'beta'", ":", "param_initializer", "[", "'%s/bias'", "%", "scope", "]", ",", "\n", "'gamma'", ":", "param_initializer", "[", "'%s/weight'", "%", "scope", "]", ",", "\n", "'moving_mean'", ":", "param_initializer", "[", "'%s/running_mean'", "%", "scope", "]", ",", "\n", "'moving_variance'", ":", "param_initializer", "[", "'%s/running_var'", "%", "scope", "]", ",", "\n", "}", "\n", "output", "=", "tf", ".", "contrib", ".", "layers", ".", "batch_norm", "(", "\n", "_input", ",", "\n", "scale", "=", "True", ",", "\n", "is_training", "=", "is_training", ",", "\n", "param_initializers", "=", "bn_init", ",", "\n", "updates_collections", "=", "None", ",", "\n", "epsilon", "=", "epsilon", ",", "\n", "decay", "=", "decay", ",", "\n", "data_format", "=", "'NHWC'", ",", "\n", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.activation": [[133, 138], ["tensorflow.nn.relu6", "ValueError"], "function", ["None"], ["", "def", "activation", "(", "_input", ",", "activation", "=", "'relu6'", ")", ":", "\n", "    ", "if", "activation", "==", "'relu6'", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "relu6", "(", "_input", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Do not support %s'", "%", "activation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.flatten": [[140, 146], ["_input.shape.as_list", "len", "tensorflow.reshape", "numpy.prod"], "function", ["None"], ["", "", "def", "flatten", "(", "_input", ")", ":", "\n", "    ", "input_shape", "=", "_input", ".", "shape", ".", "as_list", "(", ")", "\n", "if", "len", "(", "input_shape", ")", "!=", "2", ":", "\n", "        ", "return", "tf", ".", "reshape", "(", "_input", ",", "[", "-", "1", ",", "np", ".", "prod", "(", "input_shape", "[", "1", ":", "]", ")", "]", ")", "\n", "", "else", ":", "\n", "        ", "return", "_input", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.dropout": [[148, 158], ["tensorflow.cond", "tensorflow.nn.dropout"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.dropout"], ["", "", "def", "dropout", "(", "_input", ",", "keep_prob", ",", "is_training", ")", ":", "\n", "    ", "if", "keep_prob", "<", "1", ":", "\n", "        ", "output", "=", "tf", ".", "cond", "(", "\n", "is_training", ",", "\n", "lambda", ":", "tf", ".", "nn", ".", "dropout", "(", "_input", ",", "keep_prob", ")", ",", "\n", "lambda", ":", "_input", "\n", ")", "\n", "", "else", ":", "\n", "        ", "output", "=", "_input", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.MobileInvertedResidualBlock.__init__": [[6, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "_id", ",", "mobile_inverted_conv", ",", "has_residual", ")", ":", "\n", "        ", "self", ".", "id", "=", "_id", "\n", "self", ".", "mobile_inverted_conv", "=", "mobile_inverted_conv", "\n", "self", ".", "has_residual", "=", "has_residual", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.MobileInvertedResidualBlock.build": [[11, 18], ["tf.variable_scope", "tf_modules.MobileInvertedResidualBlock.mobile_inverted_conv.build"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.build"], ["", "def", "build", "(", "self", ",", "_input", ",", "net", ",", "init", "=", "None", ")", ":", "\n", "        ", "output", "=", "_input", "\n", "with", "tf", ".", "variable_scope", "(", "self", ".", "id", ")", ":", "\n", "            ", "output", "=", "self", ".", "mobile_inverted_conv", ".", "build", "(", "output", ",", "net", ",", "init", ")", "\n", "if", "self", ".", "has_residual", ":", "\n", "                ", "output", "=", "output", "+", "_input", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.__init__": [[22, 48], ["tf.Graph", "tf_modules.ProxylessNASNets._initialize_session", "tf_modules.ProxylessNASNets.graph.as_default", "tf_modules.ProxylessNASNets._define_inputs", "tf_modules.ProxylessNASNets.build", "tf.reduce_mean", "tf.equal", "tf.reduce_mean", "tf.global_variables_initializer", "tf.nn.softmax_cross_entropy_with_logits", "tf.argmax", "tf.argmax", "tf.cast"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets._initialize_session", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets._define_inputs", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.build"], ["    ", "def", "__init__", "(", "self", ",", "net_config", ",", "net_weights", "=", "None", ")", ":", "\n", "        ", "self", ".", "graph", "=", "tf", ".", "Graph", "(", ")", "\n", "\n", "self", ".", "net_config", "=", "net_config", "\n", "self", ".", "n_classes", "=", "1000", "\n", "\n", "with", "self", ".", "graph", ".", "as_default", "(", ")", ":", "\n", "            ", "self", ".", "_define_inputs", "(", ")", "\n", "logits", "=", "self", ".", "build", "(", "init", "=", "net_weights", ")", "\n", "\n", "prediction", "=", "logits", "\n", "# losses", "\n", "cross_entropy", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits", "(", "\n", "logits", "=", "logits", ",", "labels", "=", "self", ".", "labels", ")", ")", "\n", "self", ".", "cross_entropy", "=", "cross_entropy", "\n", "\n", "correct_prediction", "=", "tf", ".", "equal", "(", "\n", "tf", ".", "argmax", "(", "prediction", ",", "1", ")", ",", "\n", "tf", ".", "argmax", "(", "self", ".", "labels", ",", "1", ")", "\n", ")", "\n", "self", ".", "accuracy", "=", "tf", ".", "reduce_mean", "(", "\n", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "self", ".", "global_variables_initializer", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "", "self", ".", "_initialize_session", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.bn_eps": [[49, 52], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "bn_eps", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "net_config", "[", "'bn'", "]", "[", "'eps'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.bn_decay": [[53, 56], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "bn_decay", "(", "self", ")", ":", "\n", "        ", "return", "1", "-", "self", ".", "net_config", "[", "'bn'", "]", "[", "'momentum'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets._initialize_session": [[57, 64], ["tf.ConfigProto", "tf.Session", "tf_modules.ProxylessNASNets.sess.run"], "methods", ["None"], ["", "def", "_initialize_session", "(", "self", ")", ":", "\n", "        ", "\"\"\" Initialize session, variables \"\"\"", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "# allow_soft_placement=True, log_device_placement=False", "\n", "# restrict model GPU memory utilization to min required", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "sess", "=", "tf", ".", "Session", "(", "graph", "=", "self", ".", "graph", ",", "config", "=", "config", ")", "\n", "self", ".", "sess", ".", "run", "(", "self", ".", "global_variables_initializer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets._define_inputs": [[65, 81], ["tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder"], "methods", ["None"], ["", "def", "_define_inputs", "(", "self", ")", ":", "\n", "        ", "shape", "=", "[", "None", ",", "224", ",", "224", ",", "3", "]", "\n", "self", ".", "images", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "\n", "shape", "=", "shape", ",", "\n", "name", "=", "'input_images'", ")", "\n", "self", ".", "labels", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "None", ",", "self", ".", "n_classes", "]", ",", "\n", "name", "=", "'labels'", ")", "\n", "self", ".", "learning_rate", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "float32", ",", "\n", "shape", "=", "[", "]", ",", "\n", "name", "=", "'learning_rate'", ")", "\n", "self", ".", "is_training", "=", "tf", ".", "placeholder", "(", "\n", "tf", ".", "bool", ",", "shape", "=", "[", "]", ",", "name", "=", "'is_training'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.labels_to_one_hot": [[82, 87], ["np.zeros", "np.ones", "range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "labels_to_one_hot", "(", "n_classes", ",", "labels", ")", ":", "\n", "        ", "new_labels", "=", "np", ".", "zeros", "(", "(", "labels", ".", "shape", "[", "0", "]", ",", "n_classes", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "new_labels", "[", "range", "(", "labels", ".", "shape", "[", "0", "]", ")", ",", "labels", "]", "=", "np", ".", "ones", "(", "labels", ".", "shape", ")", "\n", "return", "new_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.build": [[88, 137], ["ConvLayer", "ConvLayer.build", "enumerate", "ConvLayer", "ConvLayer.build", "avg_pool", "flatten", "LinearLayer", "LinearLayer.build", "MBInvertedConvLayer", "tf_modules.MobileInvertedResidualBlock", "tf_modules.MobileInvertedResidualBlock.build", "tf.constant_initializer"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.build", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.build", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.avg_pool", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.flatten", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.build", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_modules.ProxylessNASNets.build"], ["", "def", "build", "(", "self", ",", "init", "=", "None", ")", ":", "\n", "        ", "output", "=", "self", ".", "images", "\n", "if", "init", "is", "not", "None", ":", "\n", "            ", "for", "key", "in", "init", ":", "\n", "                ", "init", "[", "key", "]", "=", "tf", ".", "constant_initializer", "(", "init", "[", "key", "]", ")", "\n", "\n", "# first conv", "\n", "", "", "first_conv", "=", "ConvLayer", "(", "\n", "'first_conv'", ",", "\n", "self", ".", "net_config", "[", "'first_conv'", "]", "[", "'out_channels'", "]", ",", "\n", "3", ",", "\n", "2", ")", "\n", "output", "=", "first_conv", ".", "build", "(", "output", ",", "self", ",", "init", ")", "\n", "\n", "for", "i", ",", "block_config", "in", "enumerate", "(", "self", ".", "net_config", "[", "'blocks'", "]", ")", ":", "\n", "            ", "if", "block_config", "[", "'mobile_inverted_conv'", "]", "[", "'name'", "]", "==", "'ZeroLayer'", ":", "\n", "                ", "continue", "\n", "", "mobile_inverted_conv", "=", "MBInvertedConvLayer", "(", "\n", "'mobile_inverted_conv'", ",", "\n", "block_config", "[", "'mobile_inverted_conv'", "]", "[", "'out_channels'", "]", ",", "\n", "block_config", "[", "'mobile_inverted_conv'", "]", "[", "'kernel_size'", "]", ",", "\n", "block_config", "[", "'mobile_inverted_conv'", "]", "[", "'stride'", "]", ",", "\n", "block_config", "[", "'mobile_inverted_conv'", "]", "[", "'expand_ratio'", "]", ",", "\n", ")", "\n", "if", "block_config", "[", "'shortcut'", "]", "is", "None", "or", "block_config", "[", "'shortcut'", "]", "[", "'name'", "]", "==", "'ZeroLayer'", ":", "\n", "                ", "has_residual", "=", "False", "\n", "", "else", ":", "\n", "                ", "has_residual", "=", "True", "\n", "", "block", "=", "MobileInvertedResidualBlock", "(", "\n", "'blocks/%d'", "%", "\n", "i", ",", "mobile_inverted_conv", ",", "has_residual", ")", "\n", "output", "=", "block", ".", "build", "(", "output", ",", "self", ",", "init", ")", "\n", "\n", "# feature mix layer", "\n", "", "feature_mix_layer", "=", "ConvLayer", "(", "\n", "'feature_mix_layer'", ",", "\n", "self", ".", "net_config", "[", "'feature_mix_layer'", "]", "[", "'out_channels'", "]", ",", "\n", "1", ",", "\n", "1", ")", "\n", "output", "=", "feature_mix_layer", ".", "build", "(", "output", ",", "self", ",", "init", ")", "\n", "\n", "output", "=", "avg_pool", "(", "output", ",", "7", ",", "7", ")", "\n", "output", "=", "flatten", "(", "output", ")", "\n", "classifier", "=", "LinearLayer", "(", "\n", "'classifier'", ",", "\n", "self", ".", "n_classes", ",", "\n", "self", ".", "net_config", "[", "'classifier'", "]", "[", "'dropout_rate'", "]", ")", "\n", "output", "=", "classifier", ".", "build", "(", "output", ",", "self", ",", "init", ")", "\n", "return", "output", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_model_zoo.proxyless_base": [[9, 23], ["proxyless_nas.utils.download_url", "json.load", "tf_modules.ProxylessNASNets", "open", "proxyless_nas.utils.download_url", "pickle.load", "open"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.download_url", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.download_url"], ["def", "proxyless_base", "(", "pretrained", "=", "True", ",", "net_config", "=", "None", ",", "net_weight", "=", "None", ")", ":", "\n", "    ", "assert", "net_config", "is", "not", "None", ",", "\"Please input a network config\"", "\n", "net_config_path", "=", "download_url", "(", "net_config", ")", "\n", "net_config_json", "=", "json", ".", "load", "(", "open", "(", "net_config_path", ",", "'r'", ")", ")", "\n", "\n", "if", "pretrained", ":", "\n", "        ", "assert", "net_weight", "is", "not", "None", ",", "\"Please specify network weights\"", "\n", "init_path", "=", "download_url", "(", "net_weight", ")", "\n", "init", "=", "pickle", ".", "load", "(", "open", "(", "init_path", ",", "'rb'", ")", ")", "\n", "", "else", ":", "\n", "        ", "init", "=", "None", "\n", "", "net", "=", "ProxylessNASNets", "(", "net_config_json", ",", "init", ")", "\n", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchConfig.__init__": [[10, 22], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "arch_init_type", ",", "arch_init_ratio", ",", "arch_opt_type", ",", "arch_lr", ",", "\n", "arch_opt_param", ",", "arch_weight_decay", ",", "target_hardware", ",", "ref_value", ")", ":", "\n", "        ", "\"\"\" architecture parameters initialization & optimizer \"\"\"", "\n", "self", ".", "arch_init_type", "=", "arch_init_type", "\n", "self", ".", "arch_init_ratio", "=", "arch_init_ratio", "\n", "\n", "self", ".", "opt_type", "=", "arch_opt_type", "\n", "self", ".", "lr", "=", "arch_lr", "\n", "self", ".", "opt_param", "=", "{", "}", "if", "arch_opt_param", "is", "None", "else", "arch_opt_param", "\n", "self", ".", "weight_decay", "=", "arch_weight_decay", "\n", "self", ".", "target_hardware", "=", "target_hardware", "\n", "self", ".", "ref_value", "=", "ref_value", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchConfig.config": [[23, 32], ["type", "key.startswith"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "\n", "'type'", ":", "type", "(", "self", ")", ",", "\n", "}", "\n", "for", "key", "in", "self", ".", "__dict__", ":", "\n", "            ", "if", "not", "key", ".", "startswith", "(", "'_'", ")", ":", "\n", "                ", "config", "[", "key", "]", "=", "self", ".", "__dict__", "[", "key", "]", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchConfig.get_update_schedule": [[33, 35], ["None"], "methods", ["None"], ["", "def", "get_update_schedule", "(", "self", ",", "nBatch", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchConfig.build_optimizer": [[36, 48], ["torch.optim.Adam"], "methods", ["None"], ["", "def", "build_optimizer", "(", "self", ",", "params", ")", ":", "\n", "        ", "\"\"\"\n\n        :param params: architecture parameters\n        :return: arch_optimizer\n        \"\"\"", "\n", "if", "self", ".", "opt_type", "==", "'adam'", ":", "\n", "            ", "return", "torch", ".", "optim", ".", "Adam", "(", "\n", "params", ",", "self", ".", "lr", ",", "weight_decay", "=", "self", ".", "weight_decay", ",", "**", "self", ".", "opt_param", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.GradientArchSearchConfig.__init__": [[52, 70], ["nas_manager.ArchSearchConfig.__init__", "print", "kwargs.keys"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "arch_init_type", "=", "'normal'", ",", "arch_init_ratio", "=", "1e-3", ",", "arch_opt_type", "=", "'adam'", ",", "arch_lr", "=", "1e-3", ",", "\n", "arch_opt_param", "=", "None", ",", "arch_weight_decay", "=", "0", ",", "target_hardware", "=", "None", ",", "ref_value", "=", "None", ",", "\n", "grad_update_arch_param_every", "=", "1", ",", "grad_update_steps", "=", "1", ",", "grad_binary_mode", "=", "'full'", ",", "grad_data_batch", "=", "None", ",", "\n", "grad_reg_loss_type", "=", "None", ",", "grad_reg_loss_params", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "GradientArchSearchConfig", ",", "self", ")", ".", "__init__", "(", "\n", "arch_init_type", ",", "arch_init_ratio", ",", "arch_opt_type", ",", "arch_lr", ",", "arch_opt_param", ",", "arch_weight_decay", ",", "\n", "target_hardware", ",", "ref_value", ",", "\n", ")", "\n", "\n", "self", ".", "update_arch_param_every", "=", "grad_update_arch_param_every", "\n", "self", ".", "update_steps", "=", "grad_update_steps", "\n", "self", ".", "binary_mode", "=", "grad_binary_mode", "\n", "self", ".", "data_batch", "=", "grad_data_batch", "\n", "\n", "self", ".", "reg_loss_type", "=", "grad_reg_loss_type", "\n", "self", ".", "reg_loss_params", "=", "{", "}", "if", "grad_reg_loss_params", "is", "None", "else", "grad_reg_loss_params", "\n", "\n", "print", "(", "kwargs", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.GradientArchSearchConfig.get_update_schedule": [[71, 77], ["range"], "methods", ["None"], ["", "def", "get_update_schedule", "(", "self", ",", "nBatch", ")", ":", "\n", "        ", "schedule", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "nBatch", ")", ":", "\n", "            ", "if", "(", "i", "+", "1", ")", "%", "self", ".", "update_arch_param_every", "==", "0", ":", "\n", "                ", "schedule", "[", "i", "]", "=", "self", ".", "update_steps", "\n", "", "", "return", "schedule", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.GradientArchSearchConfig.add_regularization_loss": [[78, 96], ["nas_manager.GradientArchSearchConfig.reg_loss_params.get", "nas_manager.GradientArchSearchConfig.reg_loss_params.get", "nas_manager.GradientArchSearchConfig.reg_loss_params.get", "torch.log", "math.log", "ValueError"], "methods", ["None"], ["", "def", "add_regularization_loss", "(", "self", ",", "ce_loss", ",", "expected_value", ")", ":", "\n", "        ", "if", "expected_value", "is", "None", ":", "\n", "            ", "return", "ce_loss", "\n", "\n", "", "if", "self", ".", "reg_loss_type", "==", "'mul#log'", ":", "\n", "            ", "alpha", "=", "self", ".", "reg_loss_params", ".", "get", "(", "'alpha'", ",", "1", ")", "\n", "beta", "=", "self", ".", "reg_loss_params", ".", "get", "(", "'beta'", ",", "0.6", ")", "\n", "# noinspection PyUnresolvedReferences", "\n", "reg_loss", "=", "(", "torch", ".", "log", "(", "expected_value", ")", "/", "math", ".", "log", "(", "self", ".", "ref_value", ")", ")", "**", "beta", "\n", "return", "alpha", "*", "ce_loss", "*", "reg_loss", "\n", "", "elif", "self", ".", "reg_loss_type", "==", "'add#linear'", ":", "\n", "            ", "reg_lambda", "=", "self", ".", "reg_loss_params", ".", "get", "(", "'lambda'", ",", "2e-1", ")", "\n", "reg_loss", "=", "reg_lambda", "*", "(", "expected_value", "-", "self", ".", "ref_value", ")", "/", "self", ".", "ref_value", "\n", "return", "ce_loss", "+", "reg_loss", "\n", "", "elif", "self", ".", "reg_loss_type", "is", "None", ":", "\n", "            ", "return", "ce_loss", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Do not support: %s'", "%", "self", ".", "reg_loss_type", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.RLArchSearchConfig.__init__": [[100, 117], ["nas_manager.ArchSearchConfig.__init__", "print", "kwargs.keys"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "arch_init_type", "=", "'normal'", ",", "arch_init_ratio", "=", "1e-3", ",", "arch_opt_type", "=", "'adam'", ",", "arch_lr", "=", "1e-3", ",", "\n", "arch_opt_param", "=", "None", ",", "arch_weight_decay", "=", "0", ",", "target_hardware", "=", "None", ",", "ref_value", "=", "None", ",", "\n", "rl_batch_size", "=", "10", ",", "rl_update_per_epoch", "=", "False", ",", "rl_update_steps_per_epoch", "=", "300", ",", "\n", "rl_baseline_decay_weight", "=", "0.99", ",", "rl_tradeoff_ratio", "=", "0.1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "RLArchSearchConfig", ",", "self", ")", ".", "__init__", "(", "\n", "arch_init_type", ",", "arch_init_ratio", ",", "arch_opt_type", ",", "arch_lr", ",", "arch_opt_param", ",", "arch_weight_decay", ",", "\n", "target_hardware", ",", "ref_value", ",", "\n", ")", "\n", "\n", "self", ".", "batch_size", "=", "rl_batch_size", "\n", "self", ".", "update_per_epoch", "=", "rl_update_per_epoch", "\n", "self", ".", "update_steps_per_epoch", "=", "rl_update_steps_per_epoch", "\n", "self", ".", "baseline_decay_weight", "=", "rl_baseline_decay_weight", "\n", "self", ".", "tradeoff_ratio", "=", "rl_tradeoff_ratio", "\n", "\n", "self", ".", "_baseline", "=", "None", "\n", "print", "(", "kwargs", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.RLArchSearchConfig.get_update_schedule": [[118, 129], ["get_split_list", "range", "len"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_split_list"], ["", "def", "get_update_schedule", "(", "self", ",", "nBatch", ")", ":", "\n", "        ", "schedule", "=", "{", "}", "\n", "if", "self", ".", "update_per_epoch", ":", "\n", "            ", "schedule", "[", "nBatch", "-", "1", "]", "=", "self", ".", "update_steps_per_epoch", "\n", "", "else", ":", "\n", "            ", "rl_seg_list", "=", "get_split_list", "(", "nBatch", ",", "self", ".", "update_steps_per_epoch", ")", "\n", "for", "j", "in", "range", "(", "1", ",", "len", "(", "rl_seg_list", ")", ")", ":", "\n", "                ", "rl_seg_list", "[", "j", "]", "+=", "rl_seg_list", "[", "j", "-", "1", "]", "\n", "", "for", "j", "in", "rl_seg_list", ":", "\n", "                ", "schedule", "[", "j", "-", "1", "]", "=", "1", "\n", "", "", "return", "schedule", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.RLArchSearchConfig.calculate_reward": [[130, 136], ["None"], "methods", ["None"], ["", "def", "calculate_reward", "(", "self", ",", "net_info", ")", ":", "\n", "        ", "acc", "=", "net_info", "[", "'acc'", "]", "/", "100", "\n", "if", "self", ".", "target_hardware", "is", "None", ":", "\n", "            ", "return", "acc", "\n", "", "else", ":", "\n", "            ", "return", "acc", "*", "(", "(", "self", ".", "ref_value", "/", "net_info", "[", "self", ".", "target_hardware", "]", ")", "**", "self", ".", "tradeoff_ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.RLArchSearchConfig.baseline": [[141, 144], ["None"], "methods", ["None"], ["", "@", "baseline", ".", "setter", "\n", "def", "baseline", "(", "self", ",", "value", ")", ":", "\n", "        ", "self", ".", "_baseline", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.__init__": [[148, 164], ["run_manager.RunManager", "nas_manager.ArchSearchRunManager.net.init_arch_params", "nas_manager.ArchSearchRunManager.arch_search_config.build_optimizer", "nas_manager.ArchSearchRunManager.net.architecture_parameters"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.init_arch_params", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.build_optimizer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.architecture_parameters"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "super_net", ",", "run_config", ":", "RunConfig", ",", "arch_search_config", ":", "ArchSearchConfig", ")", ":", "\n", "# init weight parameters & build weight_optimizer", "\n", "        ", "self", ".", "run_manager", "=", "RunManager", "(", "path", ",", "super_net", ",", "run_config", ",", "True", ")", "\n", "\n", "self", ".", "arch_search_config", "=", "arch_search_config", "\n", "\n", "# init architecture parameters", "\n", "self", ".", "net", ".", "init_arch_params", "(", "\n", "self", ".", "arch_search_config", ".", "arch_init_type", ",", "self", ".", "arch_search_config", ".", "arch_init_ratio", ",", "\n", ")", "\n", "\n", "# build architecture optimizer", "\n", "self", ".", "arch_optimizer", "=", "self", ".", "arch_search_config", ".", "build_optimizer", "(", "self", ".", "net", ".", "architecture_parameters", "(", ")", ")", "\n", "\n", "self", ".", "warmup", "=", "True", "\n", "self", ".", "warmup_epoch", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.net": [[165, 168], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "net", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "run_manager", ".", "net", ".", "module", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.write_log": [[169, 175], ["open", "fout.write", "fout.flush", "print", "os.path.join"], "methods", ["None"], ["", "def", "write_log", "(", "self", ",", "log_str", ",", "prefix", ",", "should_print", "=", "True", ",", "end", "=", "'\\n'", ")", ":", "\n", "        ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "run_manager", ".", "logs_path", ",", "'%s.log'", "%", "prefix", ")", ",", "'a'", ")", "as", "fout", ":", "\n", "            ", "fout", ".", "write", "(", "log_str", "+", "end", ")", "\n", "fout", ".", "flush", "(", ")", "\n", "", "if", "should_print", ":", "\n", "            ", "print", "(", "log_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.load_model": [[176, 218], ["os.path.join", "torch.cuda.is_available", "nas_manager.ArchSearchRunManager.net.state_dict", "nas_manager.ArchSearchRunManager.update", "nas_manager.ArchSearchRunManager.net.load_state_dict", "int", "torch.manual_seed", "torch.cuda.manual_seed_all", "np.random.seed", "os.path.exists", "print", "torch.load", "torch.load", "print", "time.time", "nas_manager.ArchSearchRunManager.run_manager.optimizer.load_state_dict", "nas_manager.ArchSearchRunManager.arch_optimizer.load_state_dict", "open", "fin.readline", "os.path.exists", "open", "fout.write"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update"], ["", "", "def", "load_model", "(", "self", ",", "model_fname", "=", "None", ")", ":", "\n", "        ", "latest_fname", "=", "os", ".", "path", ".", "join", "(", "self", ".", "run_manager", ".", "save_path", ",", "'latest.txt'", ")", "\n", "if", "model_fname", "is", "None", "and", "os", ".", "path", ".", "exists", "(", "latest_fname", ")", ":", "\n", "            ", "with", "open", "(", "latest_fname", ",", "'r'", ")", "as", "fin", ":", "\n", "                ", "model_fname", "=", "fin", ".", "readline", "(", ")", "\n", "if", "model_fname", "[", "-", "1", "]", "==", "'\\n'", ":", "\n", "                    ", "model_fname", "=", "model_fname", "[", ":", "-", "1", "]", "\n", "\n", "", "", "", "if", "model_fname", "is", "None", "or", "not", "os", ".", "path", ".", "exists", "(", "model_fname", ")", ":", "\n", "            ", "model_fname", "=", "'%s/checkpoint.pth.tar'", "%", "self", ".", "run_manager", ".", "save_path", "\n", "with", "open", "(", "latest_fname", ",", "'w'", ")", "as", "fout", ":", "\n", "                ", "fout", ".", "write", "(", "model_fname", "+", "'\\n'", ")", "\n", "", "", "if", "self", ".", "run_manager", ".", "out_log", ":", "\n", "            ", "print", "(", "\"=> loading checkpoint '{}'\"", ".", "format", "(", "model_fname", ")", ")", "\n", "\n", "", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "model_fname", ")", "\n", "", "else", ":", "\n", "            ", "checkpoint", "=", "torch", ".", "load", "(", "model_fname", ",", "map_location", "=", "'cpu'", ")", "\n", "\n", "", "model_dict", "=", "self", ".", "net", ".", "state_dict", "(", ")", "\n", "model_dict", ".", "update", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "self", ".", "net", ".", "load_state_dict", "(", "model_dict", ")", "\n", "if", "self", ".", "run_manager", ".", "out_log", ":", "\n", "            ", "print", "(", "\"=> loaded checkpoint '{}'\"", ".", "format", "(", "model_fname", ")", ")", "\n", "\n", "# set new manual seed", "\n", "", "new_manual_seed", "=", "int", "(", "time", ".", "time", "(", ")", ")", "\n", "torch", ".", "manual_seed", "(", "new_manual_seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "new_manual_seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "new_manual_seed", ")", "\n", "\n", "if", "'epoch'", "in", "checkpoint", ":", "\n", "            ", "self", ".", "run_manager", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "+", "1", "\n", "", "if", "'weight_optimizer'", "in", "checkpoint", ":", "\n", "            ", "self", ".", "run_manager", ".", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'weight_optimizer'", "]", ")", "\n", "", "if", "'arch_optimizer'", "in", "checkpoint", ":", "\n", "            ", "self", ".", "arch_optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'arch_optimizer'", "]", ")", "\n", "", "if", "'warmup'", "in", "checkpoint", ":", "\n", "            ", "self", ".", "warmup", "=", "checkpoint", "[", "'warmup'", "]", "\n", "", "if", "self", ".", "warmup", "and", "'warmup_epoch'", "in", "checkpoint", ":", "\n", "            ", "self", ".", "warmup_epoch", "=", "checkpoint", "[", "'warmup_epoch'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.validate": [[221, 244], ["nas_manager.ArchSearchRunManager.net.set_chosen_op_active", "nas_manager.ArchSearchRunManager.net.unused_modules_off", "nas_manager.ArchSearchRunManager.run_manager.validate", "nas_manager.ArchSearchRunManager.run_manager.net_flops", "nas_manager.ArchSearchRunManager.net.unused_modules_back", "nas_manager.ArchSearchRunManager.run_manager.net_latency"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.set_chosen_op_active", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_off", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.validate", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.net_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_back", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.net_latency"], ["def", "validate", "(", "self", ")", ":", "\n", "# get performances of current chosen network on validation set", "\n", "        ", "self", ".", "run_manager", ".", "run_config", ".", "valid_loader", ".", "batch_sampler", ".", "batch_size", "=", "self", ".", "run_manager", ".", "run_config", ".", "test_batch_size", "\n", "self", ".", "run_manager", ".", "run_config", ".", "valid_loader", ".", "batch_sampler", ".", "drop_last", "=", "False", "\n", "\n", "# set chosen op active", "\n", "self", ".", "net", ".", "set_chosen_op_active", "(", ")", "\n", "# remove unused modules", "\n", "self", ".", "net", ".", "unused_modules_off", "(", ")", "\n", "# test on validation set under train mode", "\n", "valid_res", "=", "self", ".", "run_manager", ".", "validate", "(", "is_test", "=", "False", ",", "use_train_mode", "=", "True", ",", "return_top5", "=", "True", ")", "\n", "# flops of chosen network", "\n", "flops", "=", "self", ".", "run_manager", ".", "net_flops", "(", ")", "\n", "# measure latencies of chosen op", "\n", "if", "self", ".", "arch_search_config", ".", "target_hardware", "in", "[", "None", ",", "'flops'", "]", ":", "\n", "            ", "latency", "=", "0", "\n", "", "else", ":", "\n", "            ", "latency", ",", "_", "=", "self", ".", "run_manager", ".", "net_latency", "(", "\n", "l_type", "=", "self", ".", "arch_search_config", ".", "target_hardware", ",", "fast", "=", "False", "\n", ")", "\n", "# unused modules back", "\n", "", "self", ".", "net", ".", "unused_modules_back", "(", ")", "\n", "return", "valid_res", ",", "flops", ",", "latency", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.warm_up": [[245, 327], ["len", "range", "print", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "nas_manager.ArchSearchRunManager.run_manager.net.train", "time.time", "enumerate", "nas_manager.ArchSearchRunManager.validate", "nas_manager.ArchSearchRunManager.run_manager.write_log", "nas_manager.ArchSearchRunManager.net.state_dict", "list", "nas_manager.ArchSearchRunManager.run_manager.save_model", "AverageMeter.update", "nas_manager.ArchSearchRunManager.net.reset_binary_gates", "nas_manager.ArchSearchRunManager.net.unused_modules_off", "nas_manager.ArchSearchRunManager.run_manager.net", "accuracy", "AverageMeter.update", "AverageMeter.update", "AverageMeter.update", "nas_manager.ArchSearchRunManager.run_manager.net.zero_grad", "nas_manager.ArchSearchRunManager.backward", "nas_manager.ArchSearchRunManager.run_manager.optimizer.step", "nas_manager.ArchSearchRunManager.net.unused_modules_back", "AverageMeter.update", "time.time", "nas_manager.ArchSearchRunManager.keys", "images.to", "labels.to", "cross_entropy_with_label_smoothing", "nas_manager.ArchSearchRunManager.run_manager.criterion", "images.size", "images.size", "images.size", "nas_manager.ArchSearchRunManager.run_manager.write_log", "nas_manager.ArchSearchRunManager.pop", "time.time", "math.cos", "time.time"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.train", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.validate", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.save_model", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.reset_binary_gates", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_off", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.net", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.accuracy", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.ArchGradientFunction.backward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_back", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.cross_entropy_with_label_smoothing", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log"], ["", "def", "warm_up", "(", "self", ",", "warmup_epochs", "=", "25", ")", ":", "\n", "        ", "lr_max", "=", "0.05", "\n", "data_loader", "=", "self", ".", "run_manager", ".", "run_config", ".", "train_loader", "\n", "nBatch", "=", "len", "(", "data_loader", ")", "\n", "T_total", "=", "warmup_epochs", "*", "nBatch", "\n", "\n", "for", "epoch", "in", "range", "(", "self", ".", "warmup_epoch", ",", "warmup_epochs", ")", ":", "\n", "            ", "print", "(", "'\\n'", ",", "'-'", "*", "30", ",", "'Warmup epoch: %d'", "%", "(", "epoch", "+", "1", ")", ",", "'-'", "*", "30", ",", "'\\n'", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "# switch to train mode", "\n", "self", ".", "run_manager", ".", "net", ".", "train", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "# lr", "\n", "T_cur", "=", "epoch", "*", "nBatch", "+", "i", "\n", "warmup_lr", "=", "0.5", "*", "lr_max", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "T_cur", "/", "T_total", ")", ")", "\n", "for", "param_group", "in", "self", ".", "run_manager", ".", "optimizer", ".", "param_groups", ":", "\n", "                    ", "param_group", "[", "'lr'", "]", "=", "warmup_lr", "\n", "", "images", ",", "labels", "=", "images", ".", "to", "(", "self", ".", "run_manager", ".", "device", ")", ",", "labels", ".", "to", "(", "self", ".", "run_manager", ".", "device", ")", "\n", "# compute output", "\n", "self", ".", "net", ".", "reset_binary_gates", "(", ")", "# random sample binary gates", "\n", "self", ".", "net", ".", "unused_modules_off", "(", ")", "# remove unused module for speedup", "\n", "output", "=", "self", ".", "run_manager", ".", "net", "(", "images", ")", "# forward (DataParallel)", "\n", "# loss", "\n", "if", "self", ".", "run_manager", ".", "run_config", ".", "label_smoothing", ">", "0", ":", "\n", "                    ", "loss", "=", "cross_entropy_with_label_smoothing", "(", "\n", "output", ",", "labels", ",", "self", ".", "run_manager", ".", "run_config", ".", "label_smoothing", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "loss", "=", "self", ".", "run_manager", ".", "criterion", "(", "output", ",", "labels", ")", "\n", "# measure accuracy and record loss", "\n", "", "acc1", ",", "acc5", "=", "accuracy", "(", "output", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "# compute gradient and do SGD step", "\n", "self", ".", "run_manager", ".", "net", ".", "zero_grad", "(", ")", "# zero grads of weight_param, arch_param & binary_param", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "run_manager", ".", "optimizer", ".", "step", "(", ")", "# update weight parameters", "\n", "# unused modules back", "\n", "self", ".", "net", ".", "unused_modules_back", "(", ")", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "self", ".", "run_manager", ".", "run_config", ".", "print_frequency", "==", "0", "or", "i", "+", "1", "==", "nBatch", ":", "\n", "                    ", "batch_log", "=", "'Warmup Train [{0}][{1}/{2}]\\t'", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "'Data {data_time.val:.3f} ({data_time.avg:.3f})\\t'", "'Loss {losses.val:.4f} ({losses.avg:.4f})\\t'", "'Top-1 acc {top1.val:.3f} ({top1.avg:.3f})\\t'", "'Top-5 acc {top5.val:.3f} ({top5.avg:.3f})\\tlr {lr:.5f}'", ".", "format", "(", "epoch", "+", "1", ",", "i", ",", "nBatch", "-", "1", ",", "batch_time", "=", "batch_time", ",", "data_time", "=", "data_time", ",", "\n", "losses", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ",", "lr", "=", "warmup_lr", ")", "\n", "self", ".", "run_manager", ".", "write_log", "(", "batch_log", ",", "'train'", ")", "\n", "", "", "valid_res", ",", "flops", ",", "latency", "=", "self", ".", "validate", "(", ")", "\n", "val_log", "=", "'Warmup Valid [{0}/{1}]\\tloss {2:.3f}\\ttop-1 acc {3:.3f}\\ttop-5 acc {4:.3f}\\t'", "'Train top-1 {top1.avg:.3f}\\ttop-5 {top5.avg:.3f}\\tflops: {5:.1f}M'", ".", "format", "(", "epoch", "+", "1", ",", "warmup_epochs", ",", "*", "valid_res", ",", "flops", "/", "1e6", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", "\n", "if", "self", ".", "arch_search_config", ".", "target_hardware", "not", "in", "[", "None", ",", "'flops'", "]", ":", "\n", "                ", "val_log", "+=", "'\\t'", "+", "self", ".", "arch_search_config", ".", "target_hardware", "+", "': %.3fms'", "%", "latency", "\n", "", "self", ".", "run_manager", ".", "write_log", "(", "val_log", ",", "'valid'", ")", "\n", "self", ".", "warmup", "=", "epoch", "+", "1", "<", "warmup_epochs", "\n", "\n", "state_dict", "=", "self", ".", "net", ".", "state_dict", "(", ")", "\n", "# rm architecture parameters & binary gates", "\n", "for", "key", "in", "list", "(", "state_dict", ".", "keys", "(", ")", ")", ":", "\n", "                ", "if", "'AP_path_alpha'", "in", "key", "or", "'AP_path_wb'", "in", "key", ":", "\n", "                    ", "state_dict", ".", "pop", "(", "key", ")", "\n", "", "", "checkpoint", "=", "{", "\n", "'state_dict'", ":", "state_dict", ",", "\n", "'warmup'", ":", "self", ".", "warmup", ",", "\n", "}", "\n", "if", "self", ".", "warmup", ":", "\n", "                ", "checkpoint", "[", "'warmup_epoch'", "]", "=", "epoch", ",", "\n", "", "self", ".", "run_manager", ".", "save_model", "(", "checkpoint", ",", "model_name", "=", "'warmup.pth.tar'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.train": [[328, 466], ["len", "len", "len", "len", "print", "nas_manager.ArchSearchRunManager.arch_search_config.get_update_schedule", "range", "nas_manager.ArchSearchRunManager.net.cpu().convert_to_normal_net", "print", "os.makedirs", "json.dump", "json.dump", "torch.save", "list", "list", "list", "print", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "nas_manager.ArchSearchRunManager.run_manager.net.train", "time.time", "enumerate", "nas_manager.ArchSearchRunManager.write_log", "enumerate", "nas_manager.ArchSearchRunManager.write_log", "nas_manager.ArchSearchRunManager.run_manager.save_model", "os.path.join", "open", "open", "os.path.join", "nas_manager.ArchSearchRunManager.net.architecture_parameters", "nas_manager.ArchSearchRunManager.net.binary_gates", "nas_manager.ArchSearchRunManager.net.weight_parameters", "AverageMeter.update", "nas_manager.ArchSearchRunManager.run_manager.run_config.adjust_learning_rate", "nas_manager.ArchSearchRunManager.net.entropy", "AverageMeter.update", "AverageMeter.update", "time.time", "nas_manager.ArchSearchRunManager.write_log", "nas_manager.ArchSearchRunManager.validate", "max", "nas_manager.ArchSearchRunManager.run_manager.write_log", "nas_manager.ArchSearchRunManager.net.cpu", "os.path.join", "os.path.join", "nas_manager.ArchSearchRunManager.state_dict", "nas_manager.ArchSearchRunManager.net.reset_binary_gates", "nas_manager.ArchSearchRunManager.net.unused_modules_off", "nas_manager.ArchSearchRunManager.run_manager.net", "accuracy", "AverageMeter.update", "AverageMeter.update", "AverageMeter.update", "nas_manager.ArchSearchRunManager.run_manager.net.zero_grad", "nas_manager.ArchSearchRunManager.backward", "nas_manager.ArchSearchRunManager.run_manager.optimizer.step", "nas_manager.ArchSearchRunManager.net.unused_modules_back", "range", "nas_manager.ArchSearchRunManager.run_manager.write_log", "nas_manager.ArchSearchRunManager.run_manager.optimizer.state_dict", "nas_manager.ArchSearchRunManager.arch_optimizer.state_dict", "nas_manager.ArchSearchRunManager.net.state_dict", "count_parameters", "time.time", "nas_manager.ArchSearchRunManager.data.item", "images.to", "labels.to", "cross_entropy_with_label_smoothing", "nas_manager.ArchSearchRunManager.run_manager.criterion", "images.size", "images.size", "images.size", "nas_manager.ArchSearchRunManager.get", "time.time", "isinstance", "time.time", "nas_manager.ArchSearchRunManager.rl_update_step", "nas_manager.ArchSearchRunManager.write_log", "isinstance", "time.time", "nas_manager.ArchSearchRunManager.gradient_step", "nas_manager.ArchSearchRunManager.write_log", "ValueError", "time.time", "sum", "len", "type"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.RLArchSearchConfig.get_update_schedule", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.convert_to_normal_net", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.train", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.save_model", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.architecture_parameters", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.binary_gates", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.weight_parameters", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.adjust_learning_rate", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.entropy", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.validate", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.reset_binary_gates", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_off", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.net", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.accuracy", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.ArchGradientFunction.backward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_back", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_parameters", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.cross_entropy_with_label_smoothing", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.rl_update_step", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.gradient_step", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log"], ["", "", "def", "train", "(", "self", ",", "fix_net_weights", "=", "False", ")", ":", "\n", "        ", "data_loader", "=", "self", ".", "run_manager", ".", "run_config", ".", "train_loader", "\n", "nBatch", "=", "len", "(", "data_loader", ")", "\n", "if", "fix_net_weights", ":", "\n", "            ", "data_loader", "=", "[", "(", "0", ",", "0", ")", "]", "*", "nBatch", "\n", "\n", "", "arch_param_num", "=", "len", "(", "list", "(", "self", ".", "net", ".", "architecture_parameters", "(", ")", ")", ")", "\n", "binary_gates_num", "=", "len", "(", "list", "(", "self", ".", "net", ".", "binary_gates", "(", ")", ")", ")", "\n", "weight_param_num", "=", "len", "(", "list", "(", "self", ".", "net", ".", "weight_parameters", "(", ")", ")", ")", "\n", "print", "(", "\n", "'#arch_params: %d\\t#binary_gates: %d\\t#weight_params: %d'", "%", "\n", "(", "arch_param_num", ",", "binary_gates_num", ",", "weight_param_num", ")", "\n", ")", "\n", "\n", "update_schedule", "=", "self", ".", "arch_search_config", ".", "get_update_schedule", "(", "nBatch", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "self", ".", "run_manager", ".", "start_epoch", ",", "self", ".", "run_manager", ".", "run_config", ".", "n_epochs", ")", ":", "\n", "            ", "print", "(", "'\\n'", ",", "'-'", "*", "30", ",", "'Train epoch: %d'", "%", "(", "epoch", "+", "1", ")", ",", "'-'", "*", "30", ",", "'\\n'", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "entropy", "=", "AverageMeter", "(", ")", "\n", "# switch to train mode", "\n", "self", ".", "run_manager", ".", "net", ".", "train", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "# lr", "\n", "lr", "=", "self", ".", "run_manager", ".", "run_config", ".", "adjust_learning_rate", "(", "\n", "self", ".", "run_manager", ".", "optimizer", ",", "epoch", ",", "batch", "=", "i", ",", "nBatch", "=", "nBatch", "\n", ")", "\n", "# network entropy", "\n", "net_entropy", "=", "self", ".", "net", ".", "entropy", "(", ")", "\n", "entropy", ".", "update", "(", "net_entropy", ".", "data", ".", "item", "(", ")", "/", "arch_param_num", ",", "1", ")", "\n", "# train weight parameters if not fix_net_weights", "\n", "if", "not", "fix_net_weights", ":", "\n", "                    ", "images", ",", "labels", "=", "images", ".", "to", "(", "self", ".", "run_manager", ".", "device", ")", ",", "labels", ".", "to", "(", "self", ".", "run_manager", ".", "device", ")", "\n", "# compute output", "\n", "self", ".", "net", ".", "reset_binary_gates", "(", ")", "# random sample binary gates", "\n", "self", ".", "net", ".", "unused_modules_off", "(", ")", "# remove unused module for speedup", "\n", "output", "=", "self", ".", "run_manager", ".", "net", "(", "images", ")", "# forward (DataParallel)", "\n", "# loss", "\n", "if", "self", ".", "run_manager", ".", "run_config", ".", "label_smoothing", ">", "0", ":", "\n", "                        ", "loss", "=", "cross_entropy_with_label_smoothing", "(", "\n", "output", ",", "labels", ",", "self", ".", "run_manager", ".", "run_config", ".", "label_smoothing", "\n", ")", "\n", "", "else", ":", "\n", "                        ", "loss", "=", "self", ".", "run_manager", ".", "criterion", "(", "output", ",", "labels", ")", "\n", "# measure accuracy and record loss", "\n", "", "acc1", ",", "acc5", "=", "accuracy", "(", "output", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "# compute gradient and do SGD step", "\n", "self", ".", "run_manager", ".", "net", ".", "zero_grad", "(", ")", "# zero grads of weight_param, arch_param & binary_param", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "run_manager", ".", "optimizer", ".", "step", "(", ")", "# update weight parameters", "\n", "# unused modules back", "\n", "self", ".", "net", ".", "unused_modules_back", "(", ")", "\n", "# skip architecture parameter updates in the first epoch", "\n", "", "if", "epoch", ">", "0", ":", "\n", "# update architecture parameters according to update_schedule", "\n", "                    ", "for", "j", "in", "range", "(", "update_schedule", ".", "get", "(", "i", ",", "0", ")", ")", ":", "\n", "                        ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "if", "isinstance", "(", "self", ".", "arch_search_config", ",", "RLArchSearchConfig", ")", ":", "\n", "                            ", "reward_list", ",", "net_info_list", "=", "self", ".", "rl_update_step", "(", "fast", "=", "True", ")", "\n", "used_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "log_str", "=", "'REINFORCE [%d-%d]\\tTime %.4f\\tMean Reward %.4f\\t%s'", "%", "(", "\n", "epoch", "+", "1", ",", "i", ",", "used_time", ",", "sum", "(", "reward_list", ")", "/", "len", "(", "reward_list", ")", ",", "net_info_list", "\n", ")", "\n", "self", ".", "write_log", "(", "log_str", ",", "prefix", "=", "'rl'", ",", "should_print", "=", "False", ")", "\n", "", "elif", "isinstance", "(", "self", ".", "arch_search_config", ",", "GradientArchSearchConfig", ")", ":", "\n", "                            ", "arch_loss", ",", "exp_value", "=", "self", ".", "gradient_step", "(", ")", "\n", "used_time", "=", "time", ".", "time", "(", ")", "-", "start_time", "\n", "log_str", "=", "'Architecture [%d-%d]\\t Time %.4f\\t Loss %.4f\\t %s %s'", "%", "(", "epoch", "+", "1", ",", "i", ",", "used_time", ",", "arch_loss", ",", "\n", "self", ".", "arch_search_config", ".", "target_hardware", ",", "exp_value", ")", "\n", "self", ".", "write_log", "(", "log_str", ",", "prefix", "=", "'gradient'", ",", "should_print", "=", "False", ")", "\n", "", "else", ":", "\n", "                            ", "raise", "ValueError", "(", "'do not support: %s'", "%", "type", "(", "self", ".", "arch_search_config", ")", ")", "\n", "# measure elapsed time", "\n", "", "", "", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "# training log", "\n", "if", "i", "%", "self", ".", "run_manager", ".", "run_config", ".", "print_frequency", "==", "0", "or", "i", "+", "1", "==", "nBatch", ":", "\n", "                    ", "batch_log", "=", "'Train [{0}][{1}/{2}]\\t'", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "'Data Time {data_time.val:.3f} ({data_time.avg:.3f})\\t'", "'Loss {losses.val:.4f} ({losses.avg:.4f})\\t'", "'Entropy {entropy.val:.5f} ({entropy.avg:.5f})\\t'", "'Top-1 acc {top1.val:.3f} ({top1.avg:.3f})\\t'", "'Top-5 acc {top5.val:.3f} ({top5.avg:.3f})\\tlr {lr:.5f}'", ".", "format", "(", "epoch", "+", "1", ",", "i", ",", "nBatch", "-", "1", ",", "batch_time", "=", "batch_time", ",", "data_time", "=", "data_time", ",", "\n", "losses", "=", "losses", ",", "entropy", "=", "entropy", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ",", "lr", "=", "lr", ")", "\n", "self", ".", "run_manager", ".", "write_log", "(", "batch_log", ",", "'train'", ")", "\n", "\n", "# print current network architecture", "\n", "", "", "self", ".", "write_log", "(", "'-'", "*", "30", "+", "'Current Architecture [%d]'", "%", "(", "epoch", "+", "1", ")", "+", "'-'", "*", "30", ",", "prefix", "=", "'arch'", ")", "\n", "for", "idx", ",", "block", "in", "enumerate", "(", "self", ".", "net", ".", "blocks", ")", ":", "\n", "                ", "self", ".", "write_log", "(", "'%d. %s'", "%", "(", "idx", ",", "block", ".", "module_str", ")", ",", "prefix", "=", "'arch'", ")", "\n", "", "self", ".", "write_log", "(", "'-'", "*", "60", ",", "prefix", "=", "'arch'", ")", "\n", "\n", "# validate", "\n", "if", "(", "epoch", "+", "1", ")", "%", "self", ".", "run_manager", ".", "run_config", ".", "validation_frequency", "==", "0", ":", "\n", "                ", "(", "val_loss", ",", "val_top1", ",", "val_top5", ")", ",", "flops", ",", "latency", "=", "self", ".", "validate", "(", ")", "\n", "self", ".", "run_manager", ".", "best_acc", "=", "max", "(", "self", ".", "run_manager", ".", "best_acc", ",", "val_top1", ")", "\n", "val_log", "=", "'Valid [{0}/{1}]\\tloss {2:.3f}\\ttop-1 acc {3:.3f} ({4:.3f})\\ttop-5 acc {5:.3f}\\t'", "'Train top-1 {top1.avg:.3f}\\ttop-5 {top5.avg:.3f}\\t'", "'Entropy {entropy.val:.5f}\\t'", "'Latency-{6}: {7:.3f}ms\\tFlops: {8:.2f}M'", ".", "format", "(", "epoch", "+", "1", ",", "self", ".", "run_manager", ".", "run_config", ".", "n_epochs", ",", "val_loss", ",", "val_top1", ",", "\n", "self", ".", "run_manager", ".", "best_acc", ",", "val_top5", ",", "self", ".", "arch_search_config", ".", "target_hardware", ",", "\n", "latency", ",", "flops", "/", "1e6", ",", "entropy", "=", "entropy", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", "\n", "self", ".", "run_manager", ".", "write_log", "(", "val_log", ",", "'valid'", ")", "\n", "# save model", "\n", "", "self", ".", "run_manager", ".", "save_model", "(", "{", "\n", "'warmup'", ":", "False", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'weight_optimizer'", ":", "self", ".", "run_manager", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'arch_optimizer'", ":", "self", ".", "arch_optimizer", ".", "state_dict", "(", ")", ",", "\n", "'state_dict'", ":", "self", ".", "net", ".", "state_dict", "(", ")", "\n", "}", ")", "\n", "\n", "# convert to normal network according to architecture parameters", "\n", "", "normal_net", "=", "self", ".", "net", ".", "cpu", "(", ")", ".", "convert_to_normal_net", "(", ")", "\n", "print", "(", "'Total training params: %.2fM'", "%", "(", "count_parameters", "(", "normal_net", ")", "/", "1e6", ")", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "self", ".", "run_manager", ".", "path", ",", "'learned_net'", ")", ",", "exist_ok", "=", "True", ")", "\n", "json", ".", "dump", "(", "normal_net", ".", "config", ",", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "run_manager", ".", "path", ",", "'learned_net/net.config'", ")", ",", "'w'", ")", ",", "indent", "=", "4", ")", "\n", "json", ".", "dump", "(", "\n", "self", ".", "run_manager", ".", "run_config", ".", "config", ",", "\n", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "run_manager", ".", "path", ",", "'learned_net/run.config'", ")", ",", "'w'", ")", ",", "indent", "=", "4", ",", "\n", ")", "\n", "torch", ".", "save", "(", "\n", "{", "'state_dict'", ":", "normal_net", ".", "state_dict", "(", ")", ",", "'dataset'", ":", "self", ".", "run_manager", ".", "run_config", ".", "dataset", "}", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "run_manager", ".", "path", ",", "'learned_net/init'", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.rl_update_step": [[468, 536], ["isinstance", "nas_manager.ArchSearchRunManager.run_manager.net.train", "range", "enumerate", "nas_manager.ArchSearchRunManager.arch_optimizer.step", "images.to", "labels.to", "nas_manager.ArchSearchRunManager.net.reset_binary_gates", "nas_manager.ArchSearchRunManager.net.unused_modules_off", "net_info_buffer.append", "nas_manager.ArchSearchRunManager.arch_search_config.calculate_reward", "loss_term.backward", "grad_buffer.append", "reward_buffer.append", "nas_manager.ArchSearchRunManager.net.unused_modules_back", "sum", "m.AP_path_alpha.grad.data.zero_", "range", "torch.no_grad", "nas_manager.ArchSearchRunManager.run_manager.net", "accuracy", "acc1[].item", "grad_list.append", "nas_manager.ArchSearchRunManager.run_manager.net_flops", "nas_manager.ArchSearchRunManager.run_manager.net_latency", "m.AP_path_alpha.grad.data.zero_", "m.AP_path_alpha.grad.data.clone"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.train", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.reset_binary_gates", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_off", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.RLArchSearchConfig.calculate_reward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.ArchGradientFunction.backward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_back", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.net", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.accuracy", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.net_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.net_latency"], ["", "def", "rl_update_step", "(", "self", ",", "fast", "=", "True", ")", ":", "\n", "        ", "assert", "isinstance", "(", "self", ".", "arch_search_config", ",", "RLArchSearchConfig", ")", "\n", "# prepare data", "\n", "self", ".", "run_manager", ".", "run_config", ".", "valid_loader", ".", "batch_sampler", ".", "batch_size", "=", "self", ".", "run_manager", ".", "run_config", ".", "test_batch_size", "\n", "self", ".", "run_manager", ".", "run_config", ".", "valid_loader", ".", "batch_sampler", ".", "drop_last", "=", "True", "\n", "# switch to train mode", "\n", "self", ".", "run_manager", ".", "net", ".", "train", "(", ")", "\n", "# sample a batch of data from validation set", "\n", "images", ",", "labels", "=", "self", ".", "run_manager", ".", "run_config", ".", "valid_next_batch", "\n", "images", ",", "labels", "=", "images", ".", "to", "(", "self", ".", "run_manager", ".", "device", ")", ",", "labels", ".", "to", "(", "self", ".", "run_manager", ".", "device", ")", "\n", "# sample nets and get their validation accuracy, latency, etc", "\n", "grad_buffer", "=", "[", "]", "\n", "reward_buffer", "=", "[", "]", "\n", "net_info_buffer", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "arch_search_config", ".", "batch_size", ")", ":", "\n", "            ", "self", ".", "net", ".", "reset_binary_gates", "(", ")", "# random sample binary gates", "\n", "self", ".", "net", ".", "unused_modules_off", "(", ")", "# remove unused module for speedup", "\n", "# validate the sampled network", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "output", "=", "self", ".", "run_manager", ".", "net", "(", "images", ")", "\n", "acc1", ",", "acc5", "=", "accuracy", "(", "output", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "", "net_info", "=", "{", "'acc'", ":", "acc1", "[", "0", "]", ".", "item", "(", ")", "}", "\n", "# get additional net info for calculating the reward", "\n", "if", "self", ".", "arch_search_config", ".", "target_hardware", "is", "None", ":", "\n", "                ", "pass", "\n", "", "elif", "self", ".", "arch_search_config", ".", "target_hardware", "==", "'flops'", ":", "\n", "                ", "net_info", "[", "'flops'", "]", "=", "self", ".", "run_manager", ".", "net_flops", "(", ")", "\n", "", "else", ":", "\n", "                ", "net_info", "[", "self", ".", "arch_search_config", ".", "target_hardware", "]", ",", "_", "=", "self", ".", "run_manager", ".", "net_latency", "(", "\n", "l_type", "=", "self", ".", "arch_search_config", ".", "target_hardware", ",", "fast", "=", "fast", "\n", ")", "\n", "", "net_info_buffer", ".", "append", "(", "net_info", ")", "\n", "# calculate reward according to net_info", "\n", "reward", "=", "self", ".", "arch_search_config", ".", "calculate_reward", "(", "net_info", ")", "\n", "# loss term", "\n", "obj_term", "=", "0", "\n", "for", "m", "in", "self", ".", "net", ".", "redundant_modules", ":", "\n", "                ", "if", "m", ".", "AP_path_alpha", ".", "grad", "is", "not", "None", ":", "\n", "                    ", "m", ".", "AP_path_alpha", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "", "obj_term", "=", "obj_term", "+", "m", ".", "log_prob", "\n", "", "loss_term", "=", "-", "obj_term", "\n", "# backward", "\n", "loss_term", ".", "backward", "(", ")", "\n", "# take out gradient dict", "\n", "grad_list", "=", "[", "]", "\n", "for", "m", "in", "self", ".", "net", ".", "redundant_modules", ":", "\n", "                ", "grad_list", ".", "append", "(", "m", ".", "AP_path_alpha", ".", "grad", ".", "data", ".", "clone", "(", ")", ")", "\n", "", "grad_buffer", ".", "append", "(", "grad_list", ")", "\n", "reward_buffer", ".", "append", "(", "reward", ")", "\n", "# unused modules back", "\n", "self", ".", "net", ".", "unused_modules_back", "(", ")", "\n", "# update baseline function", "\n", "", "avg_reward", "=", "sum", "(", "reward_buffer", ")", "/", "self", ".", "arch_search_config", ".", "batch_size", "\n", "if", "self", ".", "arch_search_config", ".", "baseline", "is", "None", ":", "\n", "            ", "self", ".", "arch_search_config", ".", "baseline", "=", "avg_reward", "\n", "", "else", ":", "\n", "            ", "self", ".", "arch_search_config", ".", "baseline", "+=", "self", ".", "arch_search_config", ".", "baseline_decay_weight", "*", "(", "avg_reward", "-", "self", ".", "arch_search_config", ".", "baseline", ")", "\n", "# assign gradients", "\n", "", "for", "idx", ",", "m", "in", "enumerate", "(", "self", ".", "net", ".", "redundant_modules", ")", ":", "\n", "            ", "m", ".", "AP_path_alpha", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "for", "j", "in", "range", "(", "self", ".", "arch_search_config", ".", "batch_size", ")", ":", "\n", "                ", "m", ".", "AP_path_alpha", ".", "grad", ".", "data", "+=", "(", "reward_buffer", "[", "j", "]", "-", "self", ".", "arch_search_config", ".", "baseline", ")", "*", "grad_buffer", "[", "j", "]", "[", "idx", "]", "\n", "", "m", ".", "AP_path_alpha", ".", "grad", ".", "data", "/=", "self", ".", "arch_search_config", ".", "batch_size", "\n", "# apply gradients", "\n", "", "self", ".", "arch_optimizer", ".", "step", "(", ")", "\n", "\n", "return", "reward_buffer", ",", "net_info_buffer", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.gradient_step": [[537, 589], ["isinstance", "nas_manager.ArchSearchRunManager.run_manager.net.train", "time.time", "time.time", "nas_manager.ArchSearchRunManager.net.reset_binary_gates", "nas_manager.ArchSearchRunManager.net.unused_modules_off", "nas_manager.ArchSearchRunManager.run_manager.net", "time.time", "nas_manager.ArchSearchRunManager.run_manager.criterion", "nas_manager.ArchSearchRunManager.arch_search_config.add_regularization_loss", "nas_manager.ArchSearchRunManager.run_manager.net.zero_grad", "nas_manager.ArchSearchRunManager.backward", "nas_manager.ArchSearchRunManager.net.set_arch_param_grad", "nas_manager.ArchSearchRunManager.arch_optimizer.step", "nas_manager.ArchSearchRunManager.net.unused_modules_back", "time.time", "nas_manager.ArchSearchRunManager.write_log", "images.to", "labels.to", "nas_manager.ArchSearchRunManager.net.rescale_updated_arch_param", "nas_manager.ArchSearchRunManager.data.item", "nas_manager.ArchSearchRunManager.net.expected_latency", "nas_manager.ArchSearchRunManager.item", "torch.zeros", "nas_manager.ArchSearchRunManager.net.expected_flops", "list"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.train", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.reset_binary_gates", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_off", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.net", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.GradientArchSearchConfig.add_regularization_loss", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.ArchGradientFunction.backward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.set_arch_param_grad", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_back", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.rescale_updated_arch_param", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.expected_latency", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.expected_flops"], ["", "def", "gradient_step", "(", "self", ")", ":", "\n", "        ", "assert", "isinstance", "(", "self", ".", "arch_search_config", ",", "GradientArchSearchConfig", ")", "\n", "if", "self", ".", "arch_search_config", ".", "data_batch", "is", "None", ":", "\n", "            ", "self", ".", "run_manager", ".", "run_config", ".", "valid_loader", ".", "batch_sampler", ".", "batch_size", "=", "self", ".", "run_manager", ".", "run_config", ".", "train_batch_size", "\n", "", "else", ":", "\n", "            ", "self", ".", "run_manager", ".", "run_config", ".", "valid_loader", ".", "batch_sampler", ".", "batch_size", "=", "self", ".", "arch_search_config", ".", "data_batch", "\n", "", "self", ".", "run_manager", ".", "run_config", ".", "valid_loader", ".", "batch_sampler", ".", "drop_last", "=", "True", "\n", "# switch to train mode", "\n", "self", ".", "run_manager", ".", "net", ".", "train", "(", ")", "\n", "# Mix edge mode", "\n", "MixedEdge", ".", "MODE", "=", "self", ".", "arch_search_config", ".", "binary_mode", "\n", "time1", "=", "time", ".", "time", "(", ")", "# time", "\n", "# sample a batch of data from validation set", "\n", "images", ",", "labels", "=", "self", ".", "run_manager", ".", "run_config", ".", "valid_next_batch", "\n", "images", ",", "labels", "=", "images", ".", "to", "(", "self", ".", "run_manager", ".", "device", ")", ",", "labels", ".", "to", "(", "self", ".", "run_manager", ".", "device", ")", "\n", "time2", "=", "time", ".", "time", "(", ")", "# time", "\n", "# compute output", "\n", "self", ".", "net", ".", "reset_binary_gates", "(", ")", "# random sample binary gates", "\n", "self", ".", "net", ".", "unused_modules_off", "(", ")", "# remove unused module for speedup", "\n", "output", "=", "self", ".", "run_manager", ".", "net", "(", "images", ")", "\n", "time3", "=", "time", ".", "time", "(", ")", "# time", "\n", "# loss", "\n", "ce_loss", "=", "self", ".", "run_manager", ".", "criterion", "(", "output", ",", "labels", ")", "\n", "if", "self", ".", "arch_search_config", ".", "target_hardware", "is", "None", ":", "\n", "            ", "expected_value", "=", "None", "\n", "", "elif", "self", ".", "arch_search_config", ".", "target_hardware", "==", "'mobile'", ":", "\n", "            ", "expected_value", "=", "self", ".", "net", ".", "expected_latency", "(", "self", ".", "run_manager", ".", "latency_estimator", ")", "\n", "", "elif", "self", ".", "arch_search_config", ".", "target_hardware", "==", "'flops'", ":", "\n", "            ", "data_shape", "=", "[", "1", "]", "+", "list", "(", "self", ".", "run_manager", ".", "run_config", ".", "data_provider", ".", "data_shape", ")", "\n", "input_var", "=", "torch", ".", "zeros", "(", "data_shape", ",", "device", "=", "self", ".", "run_manager", ".", "device", ")", "\n", "expected_value", "=", "self", ".", "net", ".", "expected_flops", "(", "input_var", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "loss", "=", "self", ".", "arch_search_config", ".", "add_regularization_loss", "(", "ce_loss", ",", "expected_value", ")", "\n", "# compute gradient and do SGD step", "\n", "self", ".", "run_manager", ".", "net", ".", "zero_grad", "(", ")", "# zero grads of weight_param, arch_param & binary_param", "\n", "loss", ".", "backward", "(", ")", "\n", "# set architecture parameter gradients", "\n", "self", ".", "net", ".", "set_arch_param_grad", "(", ")", "\n", "self", ".", "arch_optimizer", ".", "step", "(", ")", "\n", "if", "MixedEdge", ".", "MODE", "==", "'two'", ":", "\n", "            ", "self", ".", "net", ".", "rescale_updated_arch_param", "(", ")", "\n", "# back to normal mode", "\n", "", "self", ".", "net", ".", "unused_modules_back", "(", ")", "\n", "MixedEdge", ".", "MODE", "=", "None", "\n", "time4", "=", "time", ".", "time", "(", ")", "# time", "\n", "self", ".", "write_log", "(", "\n", "'(%.4f, %.4f, %.4f)'", "%", "(", "time2", "-", "time1", ",", "time3", "-", "time2", ",", "time4", "-", "time3", ")", ",", "'gradient'", ",", "\n", "should_print", "=", "False", ",", "end", "=", "'\\t'", "\n", ")", "\n", "return", "loss", ".", "data", ".", "item", "(", ")", ",", "expected_value", ".", "item", "(", ")", "if", "expected_value", "is", "not", "None", "else", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.__init__": [[22, 49], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_epochs", ",", "init_lr", ",", "lr_schedule_type", ",", "lr_schedule_param", ",", "\n", "dataset", ",", "train_batch_size", ",", "test_batch_size", ",", "valid_size", ",", "\n", "opt_type", ",", "opt_param", ",", "weight_decay", ",", "label_smoothing", ",", "no_decay_keys", ",", "\n", "model_init", ",", "init_div_groups", ",", "validation_frequency", ",", "print_frequency", ")", ":", "\n", "        ", "self", ".", "n_epochs", "=", "n_epochs", "\n", "self", ".", "init_lr", "=", "init_lr", "\n", "self", ".", "lr_schedule_type", "=", "lr_schedule_type", "\n", "self", ".", "lr_schedule_param", "=", "lr_schedule_param", "\n", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "train_batch_size", "=", "train_batch_size", "\n", "self", ".", "test_batch_size", "=", "test_batch_size", "\n", "self", ".", "valid_size", "=", "valid_size", "\n", "\n", "self", ".", "opt_type", "=", "opt_type", "\n", "self", ".", "opt_param", "=", "opt_param", "\n", "self", ".", "weight_decay", "=", "weight_decay", "\n", "self", ".", "label_smoothing", "=", "label_smoothing", "\n", "self", ".", "no_decay_keys", "=", "no_decay_keys", "\n", "\n", "self", ".", "model_init", "=", "model_init", "\n", "self", ".", "init_div_groups", "=", "init_div_groups", "\n", "self", ".", "validation_frequency", "=", "validation_frequency", "\n", "self", ".", "print_frequency", "=", "print_frequency", "\n", "\n", "self", ".", "_data_provider", "=", "None", "\n", "self", ".", "_train_iter", ",", "self", ".", "_valid_iter", ",", "self", ".", "_test_iter", "=", "None", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.config": [[50, 57], ["key.startswith"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "config", "=", "{", "}", "\n", "for", "key", "in", "self", ".", "__dict__", ":", "\n", "            ", "if", "not", "key", ".", "startswith", "(", "'_'", ")", ":", "\n", "                ", "config", "[", "key", "]", "=", "self", ".", "__dict__", "[", "key", "]", "\n", "", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.copy": [[58, 60], ["run_manager.RunConfig"], "methods", ["None"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "return", "RunConfig", "(", "**", "self", ".", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig._calc_learning_rate": [[63, 71], ["ValueError", "math.cos"], "methods", ["None"], ["def", "_calc_learning_rate", "(", "self", ",", "epoch", ",", "batch", "=", "0", ",", "nBatch", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "lr_schedule_type", "==", "'cosine'", ":", "\n", "            ", "T_total", "=", "self", ".", "n_epochs", "*", "nBatch", "\n", "T_cur", "=", "epoch", "*", "nBatch", "+", "batch", "\n", "lr", "=", "0.5", "*", "self", ".", "init_lr", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "T_cur", "/", "T_total", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'do not support: %s'", "%", "self", ".", "lr_schedule_type", ")", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.adjust_learning_rate": [[72, 78], ["run_manager.RunConfig._calc_learning_rate"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig._calc_learning_rate"], ["", "def", "adjust_learning_rate", "(", "self", ",", "optimizer", ",", "epoch", ",", "batch", "=", "0", ",", "nBatch", "=", "None", ")", ":", "\n", "        ", "\"\"\" adjust learning of a given optimizer and return the new learning rate \"\"\"", "\n", "new_lr", "=", "self", ".", "_calc_learning_rate", "(", "epoch", ",", "batch", ",", "nBatch", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "new_lr", "\n", "", "return", "new_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.data_config": [[81, 84], ["None"], "methods", ["None"], ["@", "property", "\n", "def", "data_config", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.data_provider": [[95, 98], ["None"], "methods", ["None"], ["", "@", "data_provider", ".", "setter", "\n", "def", "data_provider", "(", "self", ",", "val", ")", ":", "\n", "        ", "self", ".", "_data_provider", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.train_loader": [[99, 102], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "train_loader", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "data_provider", ".", "train", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.valid_loader": [[103, 106], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "valid_loader", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "data_provider", ".", "valid", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.test_loader": [[107, 110], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "test_loader", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "data_provider", ".", "test", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.train_next_batch": [[111, 121], ["iter", "next", "iter", "next"], "methods", ["None"], ["", "@", "property", "\n", "def", "train_next_batch", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_train_iter", "is", "None", ":", "\n", "            ", "self", ".", "_train_iter", "=", "iter", "(", "self", ".", "train_loader", ")", "\n", "", "try", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "_train_iter", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "self", ".", "_train_iter", "=", "iter", "(", "self", ".", "train_loader", ")", "\n", "data", "=", "next", "(", "self", ".", "_train_iter", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.valid_next_batch": [[122, 132], ["iter", "next", "iter", "next"], "methods", ["None"], ["", "@", "property", "\n", "def", "valid_next_batch", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_valid_iter", "is", "None", ":", "\n", "            ", "self", ".", "_valid_iter", "=", "iter", "(", "self", ".", "valid_loader", ")", "\n", "", "try", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "_valid_iter", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "self", ".", "_valid_iter", "=", "iter", "(", "self", ".", "valid_loader", ")", "\n", "data", "=", "next", "(", "self", ".", "_valid_iter", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.test_next_batch": [[133, 143], ["iter", "next", "iter", "next"], "methods", ["None"], ["", "@", "property", "\n", "def", "test_next_batch", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_test_iter", "is", "None", ":", "\n", "            ", "self", ".", "_test_iter", "=", "iter", "(", "self", ".", "test_loader", ")", "\n", "", "try", ":", "\n", "            ", "data", "=", "next", "(", "self", ".", "_test_iter", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "self", ".", "_test_iter", "=", "iter", "(", "self", ".", "test_loader", ")", "\n", "data", "=", "next", "(", "self", ".", "_test_iter", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.build_optimizer": [[146, 161], ["opt_param.get", "opt_param.get", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD"], "methods", ["None"], ["def", "build_optimizer", "(", "self", ",", "net_params", ")", ":", "\n", "        ", "if", "self", ".", "opt_type", "==", "'sgd'", ":", "\n", "            ", "opt_param", "=", "{", "}", "if", "self", ".", "opt_param", "is", "None", "else", "self", ".", "opt_param", "\n", "momentum", ",", "nesterov", "=", "opt_param", ".", "get", "(", "'momentum'", ",", "0.9", ")", ",", "opt_param", ".", "get", "(", "'nesterov'", ",", "True", ")", "\n", "if", "self", ".", "no_decay_keys", ":", "\n", "                ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "[", "\n", "{", "'params'", ":", "net_params", "[", "0", "]", ",", "'weight_decay'", ":", "self", ".", "weight_decay", "}", ",", "\n", "{", "'params'", ":", "net_params", "[", "1", "]", ",", "'weight_decay'", ":", "0", "}", ",", "\n", "]", ",", "lr", "=", "self", ".", "init_lr", ",", "momentum", "=", "momentum", ",", "nesterov", "=", "nesterov", ")", "\n", "", "else", ":", "\n", "                ", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "net_params", ",", "self", ".", "init_lr", ",", "momentum", "=", "momentum", ",", "nesterov", "=", "nesterov", ",", "\n", "weight_decay", "=", "self", ".", "weight_decay", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.__init__": [[165, 204], ["run_manager.RunManager.net.init_model", "copy.deepcopy().cpu", "LatencyEstimator", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "run_manager.RunManager.print_net_info", "nn.CrossEntropyLoss", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "run_manager.RunManager.net.to", "run_manager.RunManager.run_config.no_decay_keys.split", "run_manager.RunManager.run_config.build_optimizer", "run_manager.RunManager.run_config.build_optimizer", "copy.deepcopy", "run_manager.RunManager.net.module.weight_parameters", "run_manager.RunManager.net.module.get_parameters", "run_manager.RunManager.net.module.get_parameters"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.init_model", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.print_net_info", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.build_optimizer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunConfig.build_optimizer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.weight_parameters", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.get_parameters", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.get_parameters"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "net", ",", "run_config", ":", "RunConfig", ",", "out_log", "=", "True", ",", "measure_latency", "=", "None", ")", ":", "\n", "        ", "self", ".", "path", "=", "path", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "run_config", "=", "run_config", "\n", "self", ".", "out_log", "=", "out_log", "\n", "\n", "self", ".", "_logs_path", ",", "self", ".", "_save_path", "=", "None", ",", "None", "\n", "self", ".", "best_acc", "=", "0", "\n", "self", ".", "start_epoch", "=", "0", "\n", "\n", "# initialize model (default)", "\n", "self", ".", "net", ".", "init_model", "(", "run_config", ".", "model_init", ",", "run_config", ".", "init_div_groups", ")", "\n", "\n", "# a copy of net on cpu for latency estimation & mobile latency model", "\n", "self", ".", "net_on_cpu_for_latency", "=", "copy", ".", "deepcopy", "(", "self", ".", "net", ")", ".", "cpu", "(", ")", "\n", "self", ".", "latency_estimator", "=", "LatencyEstimator", "(", ")", "\n", "\n", "# move network to GPU if available", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "self", ".", "device", "=", "torch", ".", "device", "(", "'cuda:0'", ")", "\n", "self", ".", "net", "=", "torch", ".", "nn", ".", "DataParallel", "(", "self", ".", "net", ")", "\n", "self", ".", "net", ".", "to", "(", "self", ".", "device", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "# self.device = torch.device('cpu')", "\n", "\n", "# net info", "\n", "", "self", ".", "print_net_info", "(", "measure_latency", ")", "\n", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "if", "self", ".", "run_config", ".", "no_decay_keys", ":", "\n", "            ", "keys", "=", "self", ".", "run_config", ".", "no_decay_keys", ".", "split", "(", "'#'", ")", "\n", "self", ".", "optimizer", "=", "self", ".", "run_config", ".", "build_optimizer", "(", "[", "\n", "self", ".", "net", ".", "module", ".", "get_parameters", "(", "keys", ",", "mode", "=", "'exclude'", ")", ",", "# parameters with weight decay", "\n", "self", ".", "net", ".", "module", ".", "get_parameters", "(", "keys", ",", "mode", "=", "'include'", ")", ",", "# parameters without weight decay", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "optimizer", "=", "self", ".", "run_config", ".", "build_optimizer", "(", "self", ".", "net", ".", "module", ".", "weight_parameters", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.save_path": [[207, 214], ["os.path.join", "os.makedirs"], "methods", ["None"], ["@", "property", "\n", "def", "save_path", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_save_path", "is", "None", ":", "\n", "            ", "save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'checkpoint'", ")", "\n", "os", ".", "makedirs", "(", "save_path", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "_save_path", "=", "save_path", "\n", "", "return", "self", ".", "_save_path", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.logs_path": [[215, 222], ["os.path.join", "os.makedirs"], "methods", ["None"], ["", "@", "property", "\n", "def", "logs_path", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_logs_path", "is", "None", ":", "\n", "            ", "logs_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'logs'", ")", "\n", "os", ".", "makedirs", "(", "logs_path", ",", "exist_ok", "=", "True", ")", "\n", "self", ".", "_logs_path", "=", "logs_path", "\n", "", "return", "self", ".", "_logs_path", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.net_flops": [[226, 237], ["isinstance", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "list", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "net.get_flops"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops"], ["def", "net_flops", "(", "self", ")", ":", "\n", "        ", "data_shape", "=", "[", "1", "]", "+", "list", "(", "self", ".", "run_config", ".", "data_provider", ".", "data_shape", ")", "\n", "\n", "if", "isinstance", "(", "self", ".", "net", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "net", "=", "self", ".", "net", ".", "module", "\n", "", "else", ":", "\n", "            ", "net", "=", "self", ".", "net", "\n", "", "input_var", "=", "torch", ".", "zeros", "(", "data_shape", ",", "device", "=", "self", ".", "device", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "flop", ",", "_", "=", "net", ".", "get_flops", "(", "input_var", ")", "\n", "", "return", "flop", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.net_latency": [[239, 332], ["net.eval", "net.train", "list", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "int", "isinstance", "run_manager.RunManager.latency_estimator.predict", "run_manager.RunManager.latency_estimator.predict", "run_manager.RunManager.latency_estimator.predict", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "time.time", "net", "sum", "isinstance", "isinstance", "mb_conv.is_zero_layer", "run_manager.RunManager.latency_estimator.predict", "print", "run_manager.RunManager.net_on_cpu_for_latency.set_active_via_net", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "measured_latency[].append", "measured_latency[].append", "shortcut.is_zero_layer", "print", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "time.time", "type"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.train", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.net", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.set_active_via_net", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer"], ["", "def", "net_latency", "(", "self", ",", "l_type", "=", "'gpu4'", ",", "fast", "=", "True", ",", "given_net", "=", "None", ")", ":", "\n", "        ", "if", "'gpu'", "in", "l_type", ":", "\n", "            ", "l_type", ",", "batch_size", "=", "l_type", "[", ":", "3", "]", ",", "int", "(", "l_type", "[", "3", ":", "]", ")", "\n", "", "else", ":", "\n", "            ", "batch_size", "=", "1", "\n", "\n", "", "data_shape", "=", "[", "batch_size", "]", "+", "list", "(", "self", ".", "run_config", ".", "data_provider", ".", "data_shape", ")", "\n", "\n", "if", "given_net", "is", "not", "None", ":", "\n", "            ", "net", "=", "given_net", "\n", "", "else", ":", "\n", "            ", "net", "=", "self", ".", "net", ".", "module", "\n", "\n", "", "if", "l_type", "==", "'mobile'", ":", "\n", "            ", "predicted_latency", "=", "0", "\n", "try", ":", "\n", "                ", "assert", "isinstance", "(", "net", ",", "ProxylessNASNets", ")", "\n", "# first conv", "\n", "predicted_latency", "+=", "self", ".", "latency_estimator", ".", "predict", "(", "\n", "'Conv'", ",", "[", "224", ",", "224", ",", "3", "]", ",", "[", "112", ",", "112", ",", "net", ".", "first_conv", ".", "out_channels", "]", "\n", ")", "\n", "# feature mix layer", "\n", "predicted_latency", "+=", "self", ".", "latency_estimator", ".", "predict", "(", "\n", "'Conv_1'", ",", "[", "7", ",", "7", ",", "net", ".", "feature_mix_layer", ".", "in_channels", "]", ",", "[", "7", ",", "7", ",", "net", ".", "feature_mix_layer", ".", "out_channels", "]", "\n", ")", "\n", "# classifier", "\n", "predicted_latency", "+=", "self", ".", "latency_estimator", ".", "predict", "(", "\n", "'Logits'", ",", "[", "7", ",", "7", ",", "net", ".", "classifier", ".", "in_features", "]", ",", "[", "net", ".", "classifier", ".", "out_features", "]", "# 1000", "\n", ")", "\n", "# blocks", "\n", "fsize", "=", "112", "\n", "for", "block", "in", "net", ".", "blocks", ":", "\n", "                    ", "mb_conv", "=", "block", ".", "mobile_inverted_conv", "\n", "shortcut", "=", "block", ".", "shortcut", "\n", "if", "isinstance", "(", "mb_conv", ",", "MixedEdge", ")", ":", "\n", "                        ", "mb_conv", "=", "mb_conv", ".", "active_op", "\n", "", "if", "isinstance", "(", "shortcut", ",", "MixedEdge", ")", ":", "\n", "                        ", "shortcut", "=", "shortcut", ".", "active_op", "\n", "\n", "", "if", "mb_conv", ".", "is_zero_layer", "(", ")", ":", "\n", "                        ", "continue", "\n", "", "if", "shortcut", "is", "None", "or", "shortcut", ".", "is_zero_layer", "(", ")", ":", "\n", "                        ", "idskip", "=", "0", "\n", "", "else", ":", "\n", "                        ", "idskip", "=", "1", "\n", "", "out_fz", "=", "fsize", "//", "mb_conv", ".", "stride", "\n", "block_latency", "=", "self", ".", "latency_estimator", ".", "predict", "(", "\n", "'expanded_conv'", ",", "[", "fsize", ",", "fsize", ",", "mb_conv", ".", "in_channels", "]", ",", "[", "out_fz", ",", "out_fz", ",", "mb_conv", ".", "out_channels", "]", ",", "\n", "expand", "=", "mb_conv", ".", "expand_ratio", ",", "kernel", "=", "mb_conv", ".", "kernel_size", ",", "stride", "=", "mb_conv", ".", "stride", ",", "idskip", "=", "idskip", "\n", ")", "\n", "predicted_latency", "+=", "block_latency", "\n", "fsize", "=", "out_fz", "\n", "", "", "except", "Exception", ":", "\n", "                ", "predicted_latency", "=", "200", "\n", "print", "(", "'fail to predict the mobile latency'", ")", "\n", "", "return", "predicted_latency", ",", "None", "\n", "", "elif", "l_type", "==", "'cpu'", ":", "\n", "            ", "if", "fast", ":", "\n", "                ", "n_warmup", "=", "1", "\n", "n_sample", "=", "2", "\n", "", "else", ":", "\n", "                ", "n_warmup", "=", "10", "\n", "n_sample", "=", "100", "\n", "", "try", ":", "\n", "                ", "self", ".", "net_on_cpu_for_latency", ".", "set_active_via_net", "(", "net", ")", "\n", "", "except", "AttributeError", ":", "\n", "                ", "print", "(", "type", "(", "self", ".", "net_on_cpu_for_latency", ")", ",", "' do not `support set_active_via_net()`'", ")", "\n", "", "net", "=", "self", ".", "net_on_cpu_for_latency", "\n", "images", "=", "torch", ".", "zeros", "(", "data_shape", ",", "device", "=", "torch", ".", "device", "(", "'cpu'", ")", ")", "\n", "", "elif", "l_type", "==", "'gpu'", ":", "\n", "            ", "if", "fast", ":", "\n", "                ", "n_warmup", "=", "5", "\n", "n_sample", "=", "10", "\n", "", "else", ":", "\n", "                ", "n_warmup", "=", "50", "\n", "n_sample", "=", "100", "\n", "", "images", "=", "torch", ".", "zeros", "(", "data_shape", ",", "device", "=", "self", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "", "measured_latency", "=", "{", "'warmup'", ":", "[", "]", ",", "'sample'", ":", "[", "]", "}", "\n", "net", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "n_warmup", "+", "n_sample", ")", ":", "\n", "                ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "net", "(", "images", ")", "\n", "used_time", "=", "(", "time", ".", "time", "(", ")", "-", "start_time", ")", "*", "1e3", "# ms", "\n", "if", "i", ">=", "n_warmup", ":", "\n", "                    ", "measured_latency", "[", "'sample'", "]", ".", "append", "(", "used_time", ")", "\n", "", "else", ":", "\n", "                    ", "measured_latency", "[", "'warmup'", "]", ".", "append", "(", "used_time", ")", "\n", "", "", "", "net", ".", "train", "(", ")", "\n", "return", "sum", "(", "measured_latency", "[", "'sample'", "]", ")", "/", "n_sample", ",", "measured_latency", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.print_net_info": [[333, 367], ["isinstance", "run_manager.RunManager.net_flops", "print", "count_parameters", "count_parameters", "print", "print", "measure_latency.split", "run_manager.RunManager.net_latency", "open", "fout.write", "print", "json.dumps"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.net_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_parameters", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_parameters", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.net_latency"], ["", "def", "print_net_info", "(", "self", ",", "measure_latency", "=", "None", ")", ":", "\n", "# network architecture", "\n", "        ", "if", "self", ".", "out_log", ":", "\n", "            ", "print", "(", "self", ".", "net", ")", "\n", "\n", "# parameters", "\n", "", "if", "isinstance", "(", "self", ".", "net", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "total_params", "=", "count_parameters", "(", "self", ".", "net", ".", "module", ")", "\n", "", "else", ":", "\n", "            ", "total_params", "=", "count_parameters", "(", "self", ".", "net", ")", "\n", "", "if", "self", ".", "out_log", ":", "\n", "            ", "print", "(", "'Total training params: %.2fM'", "%", "(", "total_params", "/", "1e6", ")", ")", "\n", "", "net_info", "=", "{", "\n", "'param'", ":", "'%.2fM'", "%", "(", "total_params", "/", "1e6", ")", ",", "\n", "}", "\n", "\n", "# flops", "\n", "flops", "=", "self", ".", "net_flops", "(", ")", "\n", "if", "self", ".", "out_log", ":", "\n", "            ", "print", "(", "'Total FLOPs: %.1fM'", "%", "(", "flops", "/", "1e6", ")", ")", "\n", "", "net_info", "[", "'flops'", "]", "=", "'%.1fM'", "%", "(", "flops", "/", "1e6", ")", "\n", "\n", "# latency", "\n", "latency_types", "=", "[", "]", "if", "measure_latency", "is", "None", "else", "measure_latency", ".", "split", "(", "'#'", ")", "\n", "for", "l_type", "in", "latency_types", ":", "\n", "            ", "latency", ",", "measured_latency", "=", "self", ".", "net_latency", "(", "l_type", ",", "fast", "=", "False", ",", "given_net", "=", "None", ")", "\n", "if", "self", ".", "out_log", ":", "\n", "                ", "print", "(", "'Estimated %s latency: %.3fms'", "%", "(", "l_type", ",", "latency", ")", ")", "\n", "", "net_info", "[", "'%s latency'", "%", "l_type", "]", "=", "{", "\n", "'val'", ":", "latency", ",", "\n", "'hist'", ":", "measured_latency", "\n", "}", "\n", "", "with", "open", "(", "'%s/net_info.txt'", "%", "self", ".", "logs_path", ",", "'w'", ")", "as", "fout", ":", "\n", "            ", "fout", ".", "write", "(", "json", ".", "dumps", "(", "net_info", ",", "indent", "=", "4", ")", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.save_model": [[370, 387], ["os.path.join", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "open", "fout.write", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "run_manager.RunManager.net.module.state_dict"], "methods", ["None"], ["def", "save_model", "(", "self", ",", "checkpoint", "=", "None", ",", "is_best", "=", "False", ",", "model_name", "=", "None", ")", ":", "\n", "        ", "if", "checkpoint", "is", "None", ":", "\n", "            ", "checkpoint", "=", "{", "'state_dict'", ":", "self", ".", "net", ".", "module", ".", "state_dict", "(", ")", "}", "\n", "\n", "", "if", "model_name", "is", "None", ":", "\n", "            ", "model_name", "=", "'checkpoint.pth.tar'", "\n", "\n", "", "checkpoint", "[", "'dataset'", "]", "=", "self", ".", "run_config", ".", "dataset", "# add `dataset` info to the checkpoint", "\n", "latest_fname", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_path", ",", "'latest.txt'", ")", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_path", ",", "model_name", ")", "\n", "with", "open", "(", "latest_fname", ",", "'w'", ")", "as", "fout", ":", "\n", "            ", "fout", ".", "write", "(", "model_path", "+", "'\\n'", ")", "\n", "", "torch", ".", "save", "(", "checkpoint", ",", "model_path", ")", "\n", "\n", "if", "is_best", ":", "\n", "            ", "best_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_path", ",", "'model_best.pth.tar'", ")", "\n", "torch", ".", "save", "(", "{", "'state_dict'", ":", "checkpoint", "[", "'state_dict'", "]", "}", ",", "best_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.load_model": [[388, 428], ["os.path.join", "os.path.exists", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "run_manager.RunManager.net.module.load_state_dict", "int", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "numpy.random.seed", "open", "fin.readline", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "time.time", "run_manager.RunManager.optimizer.load_state_dict", "print", "os.path.exists", "open", "fout.write", "print"], "methods", ["None"], ["", "", "def", "load_model", "(", "self", ",", "model_fname", "=", "None", ")", ":", "\n", "        ", "latest_fname", "=", "os", ".", "path", ".", "join", "(", "self", ".", "save_path", ",", "'latest.txt'", ")", "\n", "if", "model_fname", "is", "None", "and", "os", ".", "path", ".", "exists", "(", "latest_fname", ")", ":", "\n", "            ", "with", "open", "(", "latest_fname", ",", "'r'", ")", "as", "fin", ":", "\n", "                ", "model_fname", "=", "fin", ".", "readline", "(", ")", "\n", "if", "model_fname", "[", "-", "1", "]", "==", "'\\n'", ":", "\n", "                    ", "model_fname", "=", "model_fname", "[", ":", "-", "1", "]", "\n", "# noinspection PyBroadException", "\n", "", "", "", "try", ":", "\n", "            ", "if", "model_fname", "is", "None", "or", "not", "os", ".", "path", ".", "exists", "(", "model_fname", ")", ":", "\n", "                ", "model_fname", "=", "'%s/checkpoint.pth.tar'", "%", "self", ".", "save_path", "\n", "with", "open", "(", "latest_fname", ",", "'w'", ")", "as", "fout", ":", "\n", "                    ", "fout", ".", "write", "(", "model_fname", "+", "'\\n'", ")", "\n", "", "", "if", "self", ".", "out_log", ":", "\n", "                ", "print", "(", "\"=> loading checkpoint '{}'\"", ".", "format", "(", "model_fname", ")", ")", "\n", "\n", "", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "checkpoint", "=", "torch", ".", "load", "(", "model_fname", ")", "\n", "", "else", ":", "\n", "                ", "checkpoint", "=", "torch", ".", "load", "(", "model_fname", ",", "map_location", "=", "'cpu'", ")", "\n", "\n", "", "self", ".", "net", ".", "module", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "# set new manual seed", "\n", "new_manual_seed", "=", "int", "(", "time", ".", "time", "(", ")", ")", "\n", "torch", ".", "manual_seed", "(", "new_manual_seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "new_manual_seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "new_manual_seed", ")", "\n", "\n", "if", "'epoch'", "in", "checkpoint", ":", "\n", "                ", "self", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "+", "1", "\n", "", "if", "'best_acc'", "in", "checkpoint", ":", "\n", "                ", "self", ".", "best_acc", "=", "checkpoint", "[", "'best_acc'", "]", "\n", "", "if", "'optimizer'", "in", "checkpoint", ":", "\n", "                ", "self", ".", "optimizer", ".", "load_state_dict", "(", "checkpoint", "[", "'optimizer'", "]", ")", "\n", "\n", "", "if", "self", ".", "out_log", ":", "\n", "                ", "print", "(", "\"=> loaded checkpoint '{}'\"", ".", "format", "(", "model_fname", ")", ")", "\n", "", "", "except", "Exception", ":", "\n", "            ", "if", "self", ".", "out_log", ":", "\n", "                ", "print", "(", "'fail to load checkpoint from %s'", "%", "self", ".", "save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.save_config": [[429, 441], ["os.makedirs", "os.path.join", "json.dump", "os.path.join", "json.dump", "open", "print", "open", "print"], "methods", ["None"], ["", "", "", "def", "save_config", "(", "self", ",", "print_info", "=", "True", ")", ":", "\n", "        ", "\"\"\" dump run_config and net_config to the model_folder \"\"\"", "\n", "os", ".", "makedirs", "(", "self", ".", "path", ",", "exist_ok", "=", "True", ")", "\n", "net_save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'net.config'", ")", "\n", "json", ".", "dump", "(", "self", ".", "net", ".", "module", ".", "config", ",", "open", "(", "net_save_path", ",", "'w'", ")", ",", "indent", "=", "4", ")", "\n", "if", "print_info", ":", "\n", "            ", "print", "(", "'Network configs dump to %s'", "%", "net_save_path", ")", "\n", "\n", "", "run_save_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'run.config'", ")", "\n", "json", ".", "dump", "(", "self", ".", "run_config", ".", "config", ",", "open", "(", "run_save_path", ",", "'w'", ")", ",", "indent", "=", "4", ")", "\n", "if", "print_info", ":", "\n", "            ", "print", "(", "'Run configs dump to %s'", "%", "run_save_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log": [[444, 458], ["print", "open", "fout.write", "fout.flush", "open", "fout.write", "fout.flush", "os.path.join", "os.path.join", "fout.write"], "methods", ["None"], ["def", "write_log", "(", "self", ",", "log_str", ",", "prefix", ",", "should_print", "=", "True", ")", ":", "\n", "        ", "\"\"\" prefix: valid, train, test \"\"\"", "\n", "if", "prefix", "in", "[", "'valid'", ",", "'test'", "]", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "logs_path", ",", "'valid_console.txt'", ")", ",", "'a'", ")", "as", "fout", ":", "\n", "                ", "fout", ".", "write", "(", "log_str", "+", "'\\n'", ")", "\n", "fout", ".", "flush", "(", ")", "\n", "", "", "if", "prefix", "in", "[", "'valid'", ",", "'test'", ",", "'train'", "]", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "logs_path", ",", "'train_console.txt'", ")", ",", "'a'", ")", "as", "fout", ":", "\n", "                ", "if", "prefix", "in", "[", "'valid'", ",", "'test'", "]", ":", "\n", "                    ", "fout", ".", "write", "(", "'='", "*", "10", ")", "\n", "", "fout", ".", "write", "(", "log_str", "+", "'\\n'", ")", "\n", "fout", ".", "flush", "(", ")", "\n", "", "", "if", "should_print", ":", "\n", "            ", "print", "(", "log_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.validate": [[459, 511], ["AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "time.time", "net.train", "net.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "net", "run_manager.RunManager.criterion", "accuracy", "AverageMeter.update", "AverageMeter.update", "AverageMeter.update", "AverageMeter.update", "time.time", "images.to", "labels.to", "images.size", "images.size", "images.size", "print", "time.time", "len", "len"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.train", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.net", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.accuracy", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update"], ["", "", "def", "validate", "(", "self", ",", "is_test", "=", "True", ",", "net", "=", "None", ",", "use_train_mode", "=", "False", ",", "return_top5", "=", "False", ")", ":", "\n", "        ", "if", "is_test", ":", "\n", "            ", "data_loader", "=", "self", ".", "run_config", ".", "test_loader", "\n", "", "else", ":", "\n", "            ", "data_loader", "=", "self", ".", "run_config", ".", "valid_loader", "\n", "\n", "", "if", "net", "is", "None", ":", "\n", "            ", "net", "=", "self", ".", "net", "\n", "\n", "", "if", "use_train_mode", ":", "\n", "            ", "net", ".", "train", "(", ")", "\n", "", "else", ":", "\n", "            ", "net", ".", "eval", "(", ")", "\n", "", "batch_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "# noinspection PyUnresolvedReferences", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "                ", "images", ",", "labels", "=", "images", ".", "to", "(", "self", ".", "device", ")", ",", "labels", ".", "to", "(", "self", ".", "device", ")", "\n", "# compute output", "\n", "output", "=", "net", "(", "images", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "output", ",", "labels", ")", "\n", "# measure accuracy and record loss", "\n", "acc1", ",", "acc5", "=", "accuracy", "(", "output", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "self", ".", "run_config", ".", "print_frequency", "==", "0", "or", "i", "+", "1", "==", "len", "(", "data_loader", ")", ":", "\n", "                    ", "if", "is_test", ":", "\n", "                        ", "prefix", "=", "'Test'", "\n", "", "else", ":", "\n", "                        ", "prefix", "=", "'Valid'", "\n", "", "test_log", "=", "prefix", "+", "': [{0}/{1}]\\t'", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "'Loss {loss.val:.4f} ({loss.avg:.4f})\\t'", "'Top-1 acc {top1.val:.3f} ({top1.avg:.3f})'", ".", "format", "(", "i", ",", "len", "(", "data_loader", ")", "-", "1", ",", "batch_time", "=", "batch_time", ",", "loss", "=", "losses", ",", "top1", "=", "top1", ")", "\n", "if", "return_top5", ":", "\n", "                        ", "test_log", "+=", "'\\tTop-5 acc {top5.val:.3f} ({top5.avg:.3f})'", ".", "format", "(", "top5", "=", "top5", ")", "\n", "", "print", "(", "test_log", ")", "\n", "", "", "", "if", "return_top5", ":", "\n", "            ", "return", "losses", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "", "else", ":", "\n", "            ", "return", "losses", ".", "avg", ",", "top1", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.train_one_epoch": [[512, 554], ["AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "AverageMeter", "run_manager.RunManager.net.train", "time.time", "enumerate", "AverageMeter.update", "adjust_lr_func", "run_manager.RunManager.net", "accuracy", "AverageMeter.update", "AverageMeter.update", "AverageMeter.update", "run_manager.RunManager.net.zero_grad", "run_manager.RunManager.backward", "run_manager.RunManager.optimizer.step", "AverageMeter.update", "time.time", "images.to", "labels.to", "cross_entropy_with_label_smoothing", "run_manager.RunManager.criterion", "images.size", "images.size", "images.size", "run_manager.RunManager.train.train_log_func", "run_manager.RunManager.write_log", "time.time", "time.time", "len"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.train", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.nas_manager.ArchSearchRunManager.net", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.accuracy", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.ArchGradientFunction.backward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.cross_entropy_with_label_smoothing", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log"], ["", "", "def", "train_one_epoch", "(", "self", ",", "adjust_lr_func", ",", "train_log_func", ")", ":", "\n", "        ", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "\n", "# switch to train mode", "\n", "self", ".", "net", ".", "train", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", ",", "(", "images", ",", "labels", ")", "in", "enumerate", "(", "self", ".", "run_config", ".", "train_loader", ")", ":", "\n", "            ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "new_lr", "=", "adjust_lr_func", "(", "i", ")", "\n", "images", ",", "labels", "=", "images", ".", "to", "(", "self", ".", "device", ")", ",", "labels", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "# compute output", "\n", "output", "=", "self", ".", "net", "(", "images", ")", "\n", "if", "self", ".", "run_config", ".", "label_smoothing", ">", "0", ":", "\n", "                ", "loss", "=", "cross_entropy_with_label_smoothing", "(", "output", ",", "labels", ",", "self", ".", "run_config", ".", "label_smoothing", ")", "\n", "", "else", ":", "\n", "                ", "loss", "=", "self", ".", "criterion", "(", "output", ",", "labels", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "", "acc1", ",", "acc5", "=", "accuracy", "(", "output", ",", "labels", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "acc1", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "acc5", "[", "0", "]", ",", "images", ".", "size", "(", "0", ")", ")", "\n", "\n", "# compute gradient and do SGD step", "\n", "self", ".", "net", ".", "zero_grad", "(", ")", "# or self.optimizer.zero_grad()", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "self", ".", "run_config", ".", "print_frequency", "==", "0", "or", "i", "+", "1", "==", "len", "(", "self", ".", "run_config", ".", "train_loader", ")", ":", "\n", "                ", "batch_log", "=", "train_log_func", "(", "i", ",", "batch_time", ",", "data_time", ",", "losses", ",", "top1", ",", "top5", ",", "new_lr", ")", "\n", "self", ".", "write_log", "(", "batch_log", ",", "'train'", ")", "\n", "", "", "return", "top1", ",", "top5", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.train": [[555, 607], ["len", "range", "print", "time.time", "run_manager.RunManager.train_one_epoch", "int", "print", "run_manager.RunManager.save_model", "time.time", "run_manager.RunManager.validate", "max", "run_manager.RunManager.write_log", "run_manager.RunManager.run_config.adjust_learning_rate", "run_manager.RunManager.train.train_log_func"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.train_one_epoch", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.save_model", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.validate", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.search.run_manager.RunManager.write_log", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.adjust_learning_rate"], ["", "def", "train", "(", "self", ",", "print_top5", "=", "False", ")", ":", "\n", "        ", "nBatch", "=", "len", "(", "self", ".", "run_config", ".", "train_loader", ")", "\n", "\n", "def", "train_log_func", "(", "epoch_", ",", "i", ",", "batch_time", ",", "data_time", ",", "losses", ",", "top1", ",", "top5", ",", "lr", ")", ":", "\n", "            ", "batch_log", "=", "'Train [{0}][{1}/{2}]\\t'", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "'Data {data_time.val:.3f} ({data_time.avg:.3f})\\t'", "'Loss {losses.val:.4f} ({losses.avg:.4f})\\t'", "'Top-1 acc {top1.val:.3f} ({top1.avg:.3f})'", ".", "format", "(", "epoch_", "+", "1", ",", "i", ",", "nBatch", "-", "1", ",", "\n", "batch_time", "=", "batch_time", ",", "data_time", "=", "data_time", ",", "losses", "=", "losses", ",", "top1", "=", "top1", ")", "\n", "if", "print_top5", ":", "\n", "                ", "batch_log", "+=", "'\\tTop-5 acc {top5.val:.3f} ({top5.avg:.3f})'", ".", "format", "(", "top5", "=", "top5", ")", "\n", "", "batch_log", "+=", "'\\tlr {lr:.5f}'", ".", "format", "(", "lr", "=", "lr", ")", "\n", "return", "batch_log", "\n", "\n", "", "for", "epoch", "in", "range", "(", "self", ".", "start_epoch", ",", "self", ".", "run_config", ".", "n_epochs", ")", ":", "\n", "            ", "print", "(", "'\\n'", ",", "'-'", "*", "30", ",", "'Train epoch: %d'", "%", "(", "epoch", "+", "1", ")", ",", "'-'", "*", "30", ",", "'\\n'", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "train_top1", ",", "train_top5", "=", "self", ".", "train_one_epoch", "(", "\n", "lambda", "i", ":", "self", ".", "run_config", ".", "adjust_learning_rate", "(", "self", ".", "optimizer", ",", "epoch", ",", "i", ",", "nBatch", ")", ",", "\n", "lambda", "i", ",", "batch_time", ",", "data_time", ",", "losses", ",", "top1", ",", "top5", ",", "new_lr", ":", "\n", "train_log_func", "(", "epoch", ",", "i", ",", "batch_time", ",", "data_time", ",", "losses", ",", "top1", ",", "top5", ",", "new_lr", ")", ",", "\n", ")", "\n", "time_per_epoch", "=", "time", ".", "time", "(", ")", "-", "end", "\n", "seconds_left", "=", "int", "(", "(", "self", ".", "run_config", ".", "n_epochs", "-", "epoch", "-", "1", ")", "*", "time_per_epoch", ")", "\n", "print", "(", "'Time per epoch: %s, Est. complete in: %s'", "%", "(", "\n", "str", "(", "timedelta", "(", "seconds", "=", "time_per_epoch", ")", ")", ",", "\n", "str", "(", "timedelta", "(", "seconds", "=", "seconds_left", ")", ")", ")", ")", "\n", "\n", "if", "(", "epoch", "+", "1", ")", "%", "self", ".", "run_config", ".", "validation_frequency", "==", "0", ":", "\n", "                ", "val_loss", ",", "val_acc", ",", "val_acc5", "=", "self", ".", "validate", "(", "is_test", "=", "False", ",", "return_top5", "=", "True", ")", "\n", "is_best", "=", "val_acc", ">", "self", ".", "best_acc", "\n", "self", ".", "best_acc", "=", "max", "(", "self", ".", "best_acc", ",", "val_acc", ")", "\n", "val_log", "=", "'Valid [{0}/{1}]\\tloss {2:.3f}\\ttop-1 acc {3:.3f} ({4:.3f})'", ".", "format", "(", "epoch", "+", "1", ",", "self", ".", "run_config", ".", "n_epochs", ",", "val_loss", ",", "val_acc", ",", "self", ".", "best_acc", ")", "\n", "if", "print_top5", ":", "\n", "                    ", "val_log", "+=", "'\\ttop-5 acc {0:.3f}\\tTrain top-1 {top1.avg:.3f}\\ttop-5 {top5.avg:.3f}'", ".", "format", "(", "val_acc5", ",", "top1", "=", "train_top1", ",", "top5", "=", "train_top5", ")", "\n", "", "else", ":", "\n", "                    ", "val_log", "+=", "'\\tTrain top-1 {top1.avg:.3f}'", ".", "format", "(", "top1", "=", "train_top1", ")", "\n", "", "self", ".", "write_log", "(", "val_log", ",", "'valid'", ")", "\n", "", "else", ":", "\n", "                ", "is_best", "=", "False", "\n", "\n", "", "self", ".", "save_model", "(", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'best_acc'", ":", "self", ".", "best_acc", ",", "\n", "'optimizer'", ":", "self", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'state_dict'", ":", "self", ".", "net", ".", "module", ".", "state_dict", "(", ")", ",", "\n", "}", ",", "is_best", "=", "is_best", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyModule.forward": [[12, 14], ["None"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyModule.module_str": [[15, 18], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyModule.config": [[19, 22], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyModule.build_from_config": [[23, 26], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyModule.get_flops": [[27, 29], ["None"], "methods", ["None"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.forward": [[33, 35], ["None"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.module_str": [[36, 39], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.config": [[40, 43], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.build_from_config": [[44, 47], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.get_flops": [[48, 50], ["None"], "methods", ["None"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.set_bn_param": [[51, 57], ["my_modules.MyNetwork.modules", "isinstance", "isinstance"], "methods", ["None"], ["", "def", "set_bn_param", "(", "self", ",", "momentum", ",", "eps", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "m", ".", "momentum", "=", "momentum", "\n", "m", ".", "eps", "=", "eps", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.get_bn_param": [[58, 66], ["my_modules.MyNetwork.modules", "isinstance", "isinstance"], "methods", ["None"], ["", "def", "get_bn_param", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "return", "{", "\n", "'momentum'", ":", "m", ".", "momentum", ",", "\n", "'eps'", ":", "m", ".", "eps", ",", "\n", "}", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.init_model": [[67, 93], ["my_modules.MyNetwork.modules", "isinstance", "isinstance", "m.weight.data.normal_", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "math.sqrt", "m.weight.data.normal_", "m.weight.data.uniform_", "isinstance", "math.sqrt", "math.sqrt", "m.bias.data.zero_", "m.weight.data.fill_", "m.bias.data.zero_", "m.weight.size"], "methods", ["None"], ["", "def", "init_model", "(", "self", ",", "model_init", ",", "init_div_groups", "=", "False", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "if", "model_init", "==", "'he_fout'", ":", "\n", "                    ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "if", "init_div_groups", ":", "\n", "                        ", "n", "/=", "m", ".", "groups", "\n", "", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "model_init", "==", "'he_fin'", ":", "\n", "                    ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "in_channels", "\n", "if", "init_div_groups", ":", "\n", "                        ", "n", "/=", "m", ".", "groups", "\n", "", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "NotImplementedError", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "m", ".", "weight", ".", "size", "(", "1", ")", ")", "\n", "m", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.get_parameters": [[94, 118], ["my_modules.MyNetwork.named_parameters", "my_modules.MyNetwork.named_parameters", "my_modules.MyNetwork.named_parameters", "ValueError"], "methods", ["None"], ["", "", "", "def", "get_parameters", "(", "self", ",", "keys", "=", "None", ",", "mode", "=", "'include'", ")", ":", "\n", "        ", "if", "keys", "is", "None", ":", "\n", "            ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "                ", "yield", "param", "\n", "", "", "elif", "mode", "==", "'include'", ":", "\n", "            ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "                ", "flag", "=", "False", "\n", "for", "key", "in", "keys", ":", "\n", "                    ", "if", "key", "in", "name", ":", "\n", "                        ", "flag", "=", "True", "\n", "break", "\n", "", "", "if", "flag", ":", "\n", "                    ", "yield", "param", "\n", "", "", "", "elif", "mode", "==", "'exclude'", ":", "\n", "            ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "                ", "flag", "=", "True", "\n", "for", "key", "in", "keys", ":", "\n", "                    ", "if", "key", "in", "name", ":", "\n", "                        ", "flag", "=", "False", "\n", "break", "\n", "", "", "if", "flag", ":", "\n", "                    ", "yield", "param", "\n", "", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'do not support: %s'", "%", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.weight_parameters": [[119, 121], ["my_modules.MyNetwork.get_parameters"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.my_modules.MyNetwork.get_parameters"], ["", "", "def", "weight_parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_parameters", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.AverageMeter.__init__": [[81, 86], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.AverageMeter.reset": [[87, 92], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.AverageMeter.update": [[93, 98], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.ShuffleLayer.__init__": [[101, 104], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "groups", ")", ":", "\n", "        ", "super", "(", "ShuffleLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.ShuffleLayer.forward": [[105, 115], ["x.view.view.size", "x.view.view.view", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "x.view.view.view", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batchsize", ",", "num_channels", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "channels_per_group", "=", "num_channels", "//", "self", ".", "groups", "\n", "# reshape", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "self", ".", "groups", ",", "channels_per_group", ",", "height", ",", "width", ")", "\n", "# noinspection PyUnresolvedReferences", "\n", "x", "=", "torch", ".", "transpose", "(", "x", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "# flatten", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "-", "1", ",", "height", ",", "width", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.build_activation": [[9, 22], ["torch.ReLU", "torch.ReLU6", "torch.Tanh", "torch.Sigmoid", "ValueError"], "function", ["None"], ["def", "build_activation", "(", "act_func", ",", "inplace", "=", "True", ")", ":", "\n", "    ", "if", "act_func", "==", "'relu'", ":", "\n", "        ", "return", "nn", ".", "ReLU", "(", "inplace", "=", "inplace", ")", "\n", "", "elif", "act_func", "==", "'relu6'", ":", "\n", "        ", "return", "nn", ".", "ReLU6", "(", "inplace", "=", "inplace", ")", "\n", "", "elif", "act_func", "==", "'tanh'", ":", "\n", "        ", "return", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "act_func", "==", "'sigmoid'", ":", "\n", "        ", "return", "nn", ".", "Sigmoid", "(", ")", "\n", "", "elif", "act_func", "is", "None", ":", "\n", "        ", "return", "None", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'do not support: %s'", "%", "act_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.cross_entropy_with_label_smoothing": [[25, 35], ["torch.LogSoftmax", "pred.size", "torch.unsqueeze", "torch.unsqueeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like.scatter_", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "nn.LogSoftmax."], "function", ["None"], ["", "", "def", "cross_entropy_with_label_smoothing", "(", "pred", ",", "target", ",", "label_smoothing", "=", "0.1", ")", ":", "\n", "    ", "logsoftmax", "=", "nn", ".", "LogSoftmax", "(", ")", "\n", "n_classes", "=", "pred", ".", "size", "(", "1", ")", "\n", "# convert to one-hot", "\n", "target", "=", "torch", ".", "unsqueeze", "(", "target", ",", "1", ")", "\n", "soft_target", "=", "torch", ".", "zeros_like", "(", "pred", ")", "\n", "soft_target", ".", "scatter_", "(", "1", ",", "target", ",", "1", ")", "\n", "# label smoothing", "\n", "soft_target", "=", "soft_target", "*", "(", "1", "-", "label_smoothing", ")", "+", "label_smoothing", "/", "n_classes", "\n", "return", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "-", "soft_target", "*", "logsoftmax", "(", "pred", ")", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.count_parameters": [[37, 40], ["sum", "p.numel", "model.parameters"], "function", ["None"], ["", "def", "count_parameters", "(", "model", ")", ":", "\n", "    ", "total_params", "=", "sum", "(", "p", ".", "numel", "(", ")", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "return", "total_params", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.count_conv_flop": [[42, 48], ["int", "int", "x.size", "x.size"], "function", ["None"], ["", "def", "count_conv_flop", "(", "layer", ",", "x", ")", ":", "\n", "    ", "out_h", "=", "int", "(", "x", ".", "size", "(", ")", "[", "2", "]", "/", "layer", ".", "stride", "[", "0", "]", ")", "\n", "out_w", "=", "int", "(", "x", ".", "size", "(", ")", "[", "3", "]", "/", "layer", ".", "stride", "[", "1", "]", ")", "\n", "delta_ops", "=", "layer", ".", "in_channels", "*", "layer", ".", "out_channels", "*", "layer", ".", "kernel_size", "[", "0", "]", "*", "layer", ".", "kernel_size", "[", "1", "]", "*", "out_h", "*", "out_w", "/", "layer", ".", "groups", "\n", "return", "delta_ops", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.detach_variable": [[50, 57], ["isinstance", "tuple", "inputs.detach", "pytorch_utils.detach_variable"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.detach_variable"], ["", "def", "detach_variable", "(", "inputs", ")", ":", "\n", "    ", "if", "isinstance", "(", "inputs", ",", "tuple", ")", ":", "\n", "        ", "return", "tuple", "(", "[", "detach_variable", "(", "x", ")", "for", "x", "in", "inputs", "]", ")", "\n", "", "else", ":", "\n", "        ", "x", "=", "inputs", ".", "detach", "(", ")", "\n", "x", ".", "requires_grad", "=", "inputs", ".", "requires_grad", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.accuracy": [[59, 73], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\" Computes the precision@k for the specified values of k \"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.make_divisible": [[10, 28], ["max", "int"], "function", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.get_same_padding": [[30, 39], ["isinstance", "isinstance", "__init__.get_same_padding", "__init__.get_same_padding", "len"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.get_split_list": [[41, 46], ["range"], "function", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.list_sum": [[48, 53], ["len", "__init__.list_sum"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.list_sum"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.delta_ij": [[55, 60], ["None"], "function", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.__init__": [[30, 35], ["latency_estimator.download_url", "open", "yaml.load"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.download_url"], ["    ", "def", "__init__", "(", "self", ",", "url", "=", "'https://file.lzhu.me/projects/proxylessNAS/LatencyTools/mobile_trim.yaml'", ")", ":", "\n", "        ", "fname", "=", "download_url", "(", "url", ",", "overwrite", "=", "True", ")", "\n", "\n", "with", "open", "(", "fname", ",", "'r'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "lut", "=", "yaml", ".", "load", "(", "fp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.repr_shape": [[36, 44], ["isinstance", "isinstance", "str"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "repr_shape", "(", "shape", ")", ":", "\n", "        ", "if", "isinstance", "(", "shape", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "            ", "return", "'x'", ".", "join", "(", "str", "(", "_", ")", "for", "_", "in", "shape", ")", "\n", "", "elif", "isinstance", "(", "shape", ",", "str", ")", ":", "\n", "            ", "return", "shape", "\n", "", "else", ":", "\n", "            ", "return", "TypeError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict": [[45, 67], ["latency_estimator.LatencyEstimator.repr_shape", "latency_estimator.LatencyEstimator.repr_shape"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.repr_shape", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.repr_shape"], ["", "", "def", "predict", "(", "self", ",", "ltype", ":", "str", ",", "_input", ",", "output", ",", "expand", "=", "None", ",", "kernel", "=", "None", ",", "stride", "=", "None", ",", "idskip", "=", "None", ",", ")", ":", "\n", "        ", "\"\"\"\n        :param ltype:\n            Layer type must be one of the followings\n                1. `Conv`: The initial 3x3 conv with stride 2.\n                2. `Conv_1`: The upsample 1x1 conv that increases num_filters by 4 times.\n                3. `Logits`: All operations after `Conv_1`.\n                4. `expanded_conv`: MobileInvertedResidual\n        :param _input: input shape (h, w, #channels)\n        :param output: output shape (h, w, #channels)\n        :param expand: expansion ratio\n        :param kernel: kernel size\n        :param stride:\n        :param idskip: indicate whether has the residual connection\n        \"\"\"", "\n", "infos", "=", "[", "ltype", ",", "'input:%s'", "%", "self", ".", "repr_shape", "(", "_input", ")", ",", "'output:%s'", "%", "self", ".", "repr_shape", "(", "output", ")", ",", "]", "\n", "\n", "if", "ltype", "in", "(", "'expanded_conv'", ",", ")", ":", "\n", "            ", "assert", "None", "not", "in", "(", "expand", ",", "kernel", ",", "stride", ",", "idskip", ")", "\n", "infos", "+=", "[", "'expand:%d'", "%", "expand", ",", "'kernel:%d'", "%", "kernel", ",", "'stride:%d'", "%", "stride", ",", "'idskip:%d'", "%", "idskip", "]", "\n", "", "key", "=", "'-'", ".", "join", "(", "infos", ")", "\n", "return", "self", ".", "lut", "[", "key", "]", "[", "'mean'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.download_url": [[14, 27], ["os.path.dirname", "os.path.expanduser", "os.path.join", "os.path.join", "url.split", "os.path.exists", "os.makedirs", "url.split", "sys.stderr.write", "urlretrieve", "os.path.exists"], "function", ["None"], ["", "def", "download_url", "(", "url", ",", "model_dir", "=", "'~/.torch/proxyless_nas'", ",", "overwrite", "=", "False", ")", ":", "\n", "    ", "target_dir", "=", "url", ".", "split", "(", "'//'", ")", "[", "-", "1", "]", "\n", "target_dir", "=", "os", ".", "path", ".", "dirname", "(", "target_dir", ")", "\n", "model_dir", "=", "os", ".", "path", ".", "expanduser", "(", "model_dir", ")", "\n", "model_dir", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "target_dir", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "model_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_dir", ")", "\n", "", "filename", "=", "url", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "cached_file", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "filename", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "cached_file", ")", "or", "overwrite", ":", "\n", "        ", "sys", ".", "stderr", ".", "write", "(", "'Downloading: \"{}\" to {}\\n'", ".", "format", "(", "url", ",", "cached_file", ")", ")", "\n", "urlretrieve", "(", "url", ",", "cached_file", ")", "\n", "", "return", "cached_file", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.cross_entropy_for_onehot": [[6, 8], ["torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.log_softmax"], "function", ["None"], ["def", "cross_entropy_for_onehot", "(", "pred", ",", "target", ")", ":", "\n", "    ", "return", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "-", "target", "*", "F", ".", "log_softmax", "(", "pred", ",", "dim", "=", "-", "1", ")", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.flip_along_batch": [[20, 23], ["torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange", "torch.arange", "torch.arange", "input.size"], "function", ["None"], ["", "def", "flip_along_batch", "(", "input", ",", "step", "=", "-", "1", ")", ":", "\n", "    ", "inv_idx", "=", "torch", ".", "arange", "(", "input", ".", "size", "(", "0", ")", "-", "1", ",", "-", "1", ",", "step", ")", ".", "long", "(", ")", "\n", "return", "input", "[", "inv_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.label_smoothing": [[25, 39], ["pred.size", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like.scatter_"], "function", ["None"], ["", "def", "label_smoothing", "(", "pred", ",", "target", ",", "eta", "=", "0.1", ")", ":", "\n", "    ", "'''\n    Refer from https://arxiv.org/pdf/1512.00567.pdf\n    :param target: N,\n    :param n_classes: int\n    :param eta: float\n    :return:\n        N x C onehot smoothed vector\n    '''", "\n", "n_classes", "=", "pred", ".", "size", "(", "1", ")", "\n", "target", "=", "torch", ".", "unsqueeze", "(", "target", ",", "1", ")", "\n", "onehot_target", "=", "torch", ".", "zeros_like", "(", "pred", ")", "\n", "onehot_target", ".", "scatter_", "(", "1", ",", "target", ",", "1", ")", "\n", "return", "onehot_target", "*", "(", "1", "-", "eta", ")", "+", "eta", "/", "n_classes", "*", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.cross_encropy_with_label_smoothing": [[41, 44], ["bags_of_tricks.label_smoothing", "bags_of_tricks.cross_entropy_for_onehot"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.label_smoothing", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.cross_entropy_for_onehot"], ["", "def", "cross_encropy_with_label_smoothing", "(", "pred", ",", "target", ",", "eta", "=", "0.1", ")", ":", "\n", "    ", "onehot_target", "=", "label_smoothing", "(", "pred", ",", "target", ",", "eta", "=", "eta", ")", "\n", "return", "cross_entropy_for_onehot", "(", "pred", ",", "onehot_target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.mixup_data": [[47, 50], ["None"], "function", ["None"], ["", "def", "mixup_data", "(", "inputs", ",", "lam", "=", "1", ")", ":", "\n", "    ", "flipped_inputs", "=", "inputs", "[", ":", ":", "-", "1", "]", "# flip over batch dimensions", "\n", "return", "lam", "*", "inputs", "+", "(", "1", "-", "lam", ")", "*", "flipped_inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.mixup_label": [[52, 56], ["bags_of_tricks.label_smoothing"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.label_smoothing"], ["", "def", "mixup_label", "(", "pred", ",", "target", ",", "lam", "=", "1", ",", "eta", "=", "0.1", ")", ":", "\n", "    ", "onehot_target", "=", "label_smoothing", "(", "pred", ",", "target", ",", "eta", "=", "eta", ")", "\n", "flipped_target", "=", "onehot_target", "[", ":", ":", "-", "1", "]", "# flip over batch dimensions", "\n", "return", "lam", "*", "onehot_target", "+", "(", "1", "-", "lam", ")", "*", "flipped_target", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.cross_encropy_with_mixup": [[58, 61], ["bags_of_tricks.mixup_label", "bags_of_tricks.cross_entropy_for_onehot"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.mixup_label", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.bags_of_tricks.cross_entropy_for_onehot"], ["", "def", "cross_encropy_with_mixup", "(", "pred", ",", "target", ",", "lam", "=", "1", ",", "eta", "=", "0.0", ")", ":", "\n", "    ", "mixup_target", "=", "mixup_label", "(", "pred", ",", "target", ",", "lam", "=", "lam", ",", "eta", "=", "eta", ")", "\n", "return", "cross_entropy_for_onehot", "(", "pred", ",", "mixup_target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.gradient_compression.FP16Compressor.compress": [[10, 18], ["tensor.type"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "compress", "(", "tensor", ")", ":", "\n", "        ", "\"\"\"Downcasts the tensor to 16-bit.\"\"\"", "\n", "tensor_compressed", "=", "tensor", "\n", "if", "tensor", ".", "dtype", ".", "is_floating_point", ":", "\n", "# Only allow compression from other floating point types", "\n", "            ", "tensor_compressed", "=", "tensor", ".", "type", "(", "torch", ".", "float16", ")", "\n", "", "return", "tensor_compressed", ",", "tensor", ".", "dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.gradient_compression.FP16Compressor.decompress": [[19, 27], ["tensor.type"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "decompress", "(", "tensor", ",", "ctx", ")", ":", "\n", "        ", "\"\"\"Upcasts the tensor to the initialization dtype.\"\"\"", "\n", "tensor_decompressed", "=", "tensor", "\n", "dtype", "=", "ctx", "\n", "if", "dtype", ".", "is_floating_point", ":", "\n", "            ", "tensor_decompressed", "=", "tensor", ".", "type", "(", "dtype", ")", "\n", "", "return", "tensor_decompressed", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.__init__": [[53, 65], ["MyModule.__init__", "nn.ModuleList", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "candidate_ops", ")", ":", "\n", "        ", "super", "(", "MixedEdge", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "candidate_ops", "=", "nn", ".", "ModuleList", "(", "candidate_ops", ")", "\n", "self", ".", "AP_path_alpha", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "n_choices", ")", ")", "# architecture parameters", "\n", "self", ".", "AP_path_wb", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "self", ".", "n_choices", ")", ")", "# binary gates", "\n", "\n", "self", ".", "active_index", "=", "[", "0", "]", "\n", "self", ".", "inactive_index", "=", "None", "\n", "\n", "self", ".", "log_prob", "=", "None", "\n", "self", ".", "current_prob_over_ops", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.n_choices": [[66, 69], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "n_choices", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "candidate_ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.probs_over_ops": [[70, 74], ["torch.softmax"], "methods", ["None"], ["", "@", "property", "\n", "def", "probs_over_ops", "(", "self", ")", ":", "\n", "        ", "probs", "=", "F", ".", "softmax", "(", "self", ".", "AP_path_alpha", ",", "dim", "=", "0", ")", "# softmax to probability", "\n", "return", "probs", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.chosen_index": [[75, 80], ["mix_op.MixedEdge.probs_over_ops.data.cpu().numpy", "int", "numpy.argmax", "mix_op.MixedEdge.probs_over_ops.data.cpu"], "methods", ["None"], ["", "@", "property", "\n", "def", "chosen_index", "(", "self", ")", ":", "\n", "        ", "probs", "=", "self", ".", "probs_over_ops", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "index", "=", "int", "(", "np", ".", "argmax", "(", "probs", ")", ")", "\n", "return", "index", ",", "probs", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.chosen_op": [[81, 85], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "chosen_op", "(", "self", ")", ":", "\n", "        ", "index", ",", "_", "=", "self", ".", "chosen_index", "\n", "return", "self", ".", "candidate_ops", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.random_op": [[86, 90], ["numpy.random.choice", "range"], "methods", ["None"], ["", "@", "property", "\n", "def", "random_op", "(", "self", ")", ":", "\n", "        ", "index", "=", "np", ".", "random", ".", "choice", "(", "[", "_i", "for", "_i", "in", "range", "(", "self", ".", "n_choices", ")", "]", ",", "1", ")", "[", "0", "]", "\n", "return", "self", ".", "candidate_ops", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.entropy": [[91, 96], ["torch.log", "torch.sum", "torch.mul"], "methods", ["None"], ["", "def", "entropy", "(", "self", ",", "eps", "=", "1e-8", ")", ":", "\n", "        ", "probs", "=", "self", ".", "probs_over_ops", "\n", "log_probs", "=", "torch", ".", "log", "(", "probs", "+", "eps", ")", "\n", "entropy", "=", "-", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "probs", ",", "log_probs", ")", ")", "\n", "return", "entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.is_zero_layer": [[97, 99], ["mix_op.MixedEdge.active_op.is_zero_layer"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer"], ["", "def", "is_zero_layer", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "active_op", ".", "is_zero_layer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.active_op": [[100, 104], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "active_op", "(", "self", ")", ":", "\n", "        ", "\"\"\" assume only one path is active \"\"\"", "\n", "return", "self", ".", "candidate_ops", "[", "self", ".", "active_index", "[", "0", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.set_chosen_op_active": [[105, 110], ["range", "range"], "methods", ["None"], ["", "def", "set_chosen_op_active", "(", "self", ")", ":", "\n", "        ", "chosen_idx", ",", "_", "=", "self", ".", "chosen_index", "\n", "self", ".", "active_index", "=", "[", "chosen_idx", "]", "\n", "self", ".", "inactive_index", "=", "[", "_i", "for", "_i", "in", "range", "(", "0", ",", "chosen_idx", ")", "]", "+", "[", "_i", "for", "_i", "in", "range", "(", "chosen_idx", "+", "1", ",", "self", ".", "n_choices", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.forward": [[113, 148], ["ArchGradientFunction.apply", "mix_op.MixedEdge.active_op", "mix_op.MixedEdge.forward.run_function"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.active_op"], ["def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "MixedEdge", ".", "MODE", "==", "'full'", "or", "MixedEdge", ".", "MODE", "==", "'two'", ":", "\n", "            ", "output", "=", "0", "\n", "for", "_i", "in", "self", ".", "active_index", ":", "\n", "                ", "oi", "=", "self", ".", "candidate_ops", "[", "_i", "]", "(", "x", ")", "\n", "output", "=", "output", "+", "self", ".", "AP_path_wb", "[", "_i", "]", "*", "oi", "\n", "", "for", "_i", "in", "self", ".", "inactive_index", ":", "\n", "                ", "oi", "=", "self", ".", "candidate_ops", "[", "_i", "]", "(", "x", ")", "\n", "output", "=", "output", "+", "self", ".", "AP_path_wb", "[", "_i", "]", "*", "oi", ".", "detach", "(", ")", "\n", "", "", "elif", "MixedEdge", ".", "MODE", "==", "'full_v2'", ":", "\n", "            ", "def", "run_function", "(", "candidate_ops", ",", "active_id", ")", ":", "\n", "                ", "def", "forward", "(", "_x", ")", ":", "\n", "                    ", "return", "candidate_ops", "[", "active_id", "]", "(", "_x", ")", "\n", "", "return", "forward", "\n", "\n", "", "def", "backward_function", "(", "candidate_ops", ",", "active_id", ",", "binary_gates", ")", ":", "\n", "                ", "def", "backward", "(", "_x", ",", "_output", ",", "grad_output", ")", ":", "\n", "                    ", "binary_grads", "=", "torch", ".", "zeros_like", "(", "binary_gates", ".", "data", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                        ", "for", "k", "in", "range", "(", "len", "(", "candidate_ops", ")", ")", ":", "\n", "                            ", "if", "k", "!=", "active_id", ":", "\n", "                                ", "out_k", "=", "candidate_ops", "[", "k", "]", "(", "_x", ".", "data", ")", "\n", "", "else", ":", "\n", "                                ", "out_k", "=", "_output", ".", "data", "\n", "", "grad_k", "=", "torch", ".", "sum", "(", "out_k", "*", "grad_output", ")", "\n", "binary_grads", "[", "k", "]", "=", "grad_k", "\n", "", "", "return", "binary_grads", "\n", "", "return", "backward", "\n", "", "output", "=", "ArchGradientFunction", ".", "apply", "(", "\n", "x", ",", "self", ".", "AP_path_wb", ",", "run_function", "(", "self", ".", "candidate_ops", ",", "self", ".", "active_index", "[", "0", "]", ")", ",", "\n", "backward_function", "(", "self", ".", "candidate_ops", ",", "self", ".", "active_index", "[", "0", "]", ",", "self", ".", "AP_path_wb", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "output", "=", "self", ".", "active_op", "(", "x", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.module_str": [[149, 153], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "chosen_index", ",", "probs", "=", "self", ".", "chosen_index", "\n", "return", "'Mix(%s, %.3f)'", "%", "(", "self", ".", "candidate_ops", "[", "chosen_index", "]", ".", "module_str", ",", "probs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.config": [[154, 157], ["ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'not needed'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.build_from_config": [[158, 161], ["ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'not needed'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.get_flops": [[162, 169], ["mix_op.MixedEdge.candidate_ops[].get_flops", "mix_op.MixedEdge.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\" Only active paths taken into consideration when calculating FLOPs \"\"\"", "\n", "flops", "=", "0", "\n", "for", "i", "in", "self", ".", "active_index", ":", "\n", "            ", "delta_flop", ",", "_", "=", "self", ".", "candidate_ops", "[", "i", "]", ".", "get_flops", "(", "x", ")", "\n", "flops", "+=", "delta_flop", "\n", "", "return", "flops", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.binarize": [[172, 209], ["mix_op.MixedEdge.AP_path_wb.data.zero_", "range", "torch.multinomial", "torch.softmax", "torch.zeros_like", "enumerate", "sample_op[].item", "sample_op[].item", "[].item", "torch.log", "mix_op.MixedEdge.candidate_ops[].named_parameters", "torch.stack", "torch.multinomial", "torch.multinomial", "range", "range"], "methods", ["None"], ["def", "binarize", "(", "self", ")", ":", "\n", "        ", "\"\"\" prepare: active_index, inactive_index, AP_path_wb, log_prob (optional), current_prob_over_ops (optional) \"\"\"", "\n", "self", ".", "log_prob", "=", "None", "\n", "# reset binary gates", "\n", "self", ".", "AP_path_wb", ".", "data", ".", "zero_", "(", ")", "\n", "# binarize according to probs", "\n", "probs", "=", "self", ".", "probs_over_ops", "\n", "if", "MixedEdge", ".", "MODE", "==", "'two'", ":", "\n", "# sample two ops according to `probs`", "\n", "            ", "sample_op", "=", "torch", ".", "multinomial", "(", "probs", ".", "data", ",", "2", ",", "replacement", "=", "False", ")", "\n", "probs_slice", "=", "F", ".", "softmax", "(", "torch", ".", "stack", "(", "[", "\n", "self", ".", "AP_path_alpha", "[", "idx", "]", "for", "idx", "in", "sample_op", "\n", "]", ")", ",", "dim", "=", "0", ")", "\n", "self", ".", "current_prob_over_ops", "=", "torch", ".", "zeros_like", "(", "probs", ")", "\n", "for", "i", ",", "idx", "in", "enumerate", "(", "sample_op", ")", ":", "\n", "                ", "self", ".", "current_prob_over_ops", "[", "idx", "]", "=", "probs_slice", "[", "i", "]", "\n", "# chose one to be active and the other to be inactive according to probs_slice", "\n", "", "c", "=", "torch", ".", "multinomial", "(", "probs_slice", ".", "data", ",", "1", ")", "[", "0", "]", "# 0 or 1", "\n", "active_op", "=", "sample_op", "[", "c", "]", ".", "item", "(", ")", "\n", "inactive_op", "=", "sample_op", "[", "1", "-", "c", "]", ".", "item", "(", ")", "\n", "self", ".", "active_index", "=", "[", "active_op", "]", "\n", "self", ".", "inactive_index", "=", "[", "inactive_op", "]", "\n", "# set binary gate", "\n", "self", ".", "AP_path_wb", ".", "data", "[", "active_op", "]", "=", "1.0", "\n", "", "else", ":", "\n", "            ", "sample", "=", "torch", ".", "multinomial", "(", "probs", ".", "data", ",", "1", ")", "[", "0", "]", ".", "item", "(", ")", "\n", "self", ".", "active_index", "=", "[", "sample", "]", "\n", "self", ".", "inactive_index", "=", "[", "_i", "for", "_i", "in", "range", "(", "0", ",", "sample", ")", "]", "+", "[", "_i", "for", "_i", "in", "range", "(", "sample", "+", "1", ",", "self", ".", "n_choices", ")", "]", "\n", "self", ".", "log_prob", "=", "torch", ".", "log", "(", "probs", "[", "sample", "]", ")", "\n", "self", ".", "current_prob_over_ops", "=", "probs", "\n", "# set binary gate", "\n", "self", ".", "AP_path_wb", ".", "data", "[", "sample", "]", "=", "1.0", "\n", "# avoid over-regularization", "\n", "", "for", "_i", "in", "range", "(", "self", ".", "n_choices", ")", ":", "\n", "            ", "for", "name", ",", "param", "in", "self", ".", "candidate_ops", "[", "_i", "]", ".", "named_parameters", "(", ")", ":", "\n", "                ", "param", ".", "grad", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.set_arch_param_grad": [[210, 238], ["mix_op.MixedEdge.active_op.is_zero_layer", "torch.zeros_like", "range", "enumerate", "enumerate", "range", "torch.softmax", "range", "range", "torch.stack", "mix_op.MixedEdge.AP_path_alpha.data[].item", "mix_op.MixedEdge.AP_path_alpha.data[].item", "delta_ij", "delta_ij"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.delta_ij", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.delta_ij"], ["", "", "", "def", "set_arch_param_grad", "(", "self", ")", ":", "\n", "        ", "binary_grads", "=", "self", ".", "AP_path_wb", ".", "grad", ".", "data", "\n", "if", "self", ".", "active_op", ".", "is_zero_layer", "(", ")", ":", "\n", "            ", "self", ".", "AP_path_alpha", ".", "grad", "=", "None", "\n", "return", "\n", "", "if", "self", ".", "AP_path_alpha", ".", "grad", "is", "None", ":", "\n", "            ", "self", ".", "AP_path_alpha", ".", "grad", "=", "torch", ".", "zeros_like", "(", "self", ".", "AP_path_alpha", ".", "data", ")", "\n", "", "if", "MixedEdge", ".", "MODE", "==", "'two'", ":", "\n", "            ", "involved_idx", "=", "self", ".", "active_index", "+", "self", ".", "inactive_index", "\n", "probs_slice", "=", "F", ".", "softmax", "(", "torch", ".", "stack", "(", "[", "\n", "self", ".", "AP_path_alpha", "[", "idx", "]", "for", "idx", "in", "involved_idx", "\n", "]", ")", ",", "dim", "=", "0", ")", ".", "data", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "2", ")", ":", "\n", "                    ", "origin_i", "=", "involved_idx", "[", "i", "]", "\n", "origin_j", "=", "involved_idx", "[", "j", "]", "\n", "self", ".", "AP_path_alpha", ".", "grad", ".", "data", "[", "origin_i", "]", "+=", "binary_grads", "[", "origin_j", "]", "*", "probs_slice", "[", "j", "]", "*", "(", "delta_ij", "(", "i", ",", "j", ")", "-", "probs_slice", "[", "i", "]", ")", "\n", "", "", "for", "_i", ",", "idx", "in", "enumerate", "(", "self", ".", "active_index", ")", ":", "\n", "                ", "self", ".", "active_index", "[", "_i", "]", "=", "(", "idx", ",", "self", ".", "AP_path_alpha", ".", "data", "[", "idx", "]", ".", "item", "(", ")", ")", "\n", "", "for", "_i", ",", "idx", "in", "enumerate", "(", "self", ".", "inactive_index", ")", ":", "\n", "                ", "self", ".", "inactive_index", "[", "_i", "]", "=", "(", "idx", ",", "self", ".", "AP_path_alpha", ".", "data", "[", "idx", "]", ".", "item", "(", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "probs", "=", "self", ".", "probs_over_ops", ".", "data", "\n", "for", "i", "in", "range", "(", "self", ".", "n_choices", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "self", ".", "n_choices", ")", ":", "\n", "                    ", "self", ".", "AP_path_alpha", ".", "grad", ".", "data", "[", "i", "]", "+=", "binary_grads", "[", "j", "]", "*", "probs", "[", "j", "]", "*", "(", "delta_ij", "(", "i", ",", "j", ")", "-", "probs", "[", "i", "]", ")", "\n", "", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.rescale_updated_arch_param": [[239, 253], ["math.log", "isinstance", "mix_op.MixedEdge.active_op.is_zero_layer", "sum", "sum", "math.exp", "math.exp"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer"], ["", "def", "rescale_updated_arch_param", "(", "self", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "self", ".", "active_index", "[", "0", "]", ",", "tuple", ")", ":", "\n", "            ", "assert", "self", ".", "active_op", ".", "is_zero_layer", "(", ")", "\n", "return", "\n", "", "involved_idx", "=", "[", "idx", "for", "idx", ",", "_", "in", "(", "self", ".", "active_index", "+", "self", ".", "inactive_index", ")", "]", "\n", "old_alphas", "=", "[", "alpha", "for", "_", ",", "alpha", "in", "(", "self", ".", "active_index", "+", "self", ".", "inactive_index", ")", "]", "\n", "new_alphas", "=", "[", "self", ".", "AP_path_alpha", ".", "data", "[", "idx", "]", "for", "idx", "in", "involved_idx", "]", "\n", "\n", "offset", "=", "math", ".", "log", "(", "\n", "sum", "(", "[", "math", ".", "exp", "(", "alpha", ")", "for", "alpha", "in", "new_alphas", "]", ")", "/", "sum", "(", "[", "math", ".", "exp", "(", "alpha", ")", "for", "alpha", "in", "old_alphas", "]", ")", "\n", ")", "\n", "\n", "for", "idx", "in", "involved_idx", ":", "\n", "            ", "self", ".", "AP_path_alpha", ".", "data", "[", "idx", "]", "-=", "offset", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.ArchGradientFunction.forward": [[257, 267], ["detach_variable", "ctx.save_for_backward", "torch.enable_grad", "run_func"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.detach_variable"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ",", "binary_gates", ",", "run_func", ",", "backward_func", ")", ":", "\n", "        ", "ctx", ".", "run_func", "=", "run_func", "\n", "ctx", ".", "backward_func", "=", "backward_func", "\n", "\n", "detached_x", "=", "detach_variable", "(", "x", ")", "\n", "with", "torch", ".", "enable_grad", "(", ")", ":", "\n", "            ", "output", "=", "run_func", "(", "detached_x", ")", "\n", "", "ctx", ".", "save_for_backward", "(", "detached_x", ",", "output", ")", "\n", "return", "output", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.ArchGradientFunction.backward": [[268, 277], ["torch.autograd.grad", "ctx.backward_func"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "detached_x", ",", "output", "=", "ctx", ".", "saved_tensors", "\n", "\n", "grad_x", "=", "torch", ".", "autograd", ".", "grad", "(", "output", ",", "detached_x", ",", "grad_output", ",", "only_inputs", "=", "True", ")", "\n", "# compute gradients w.r.t. binary_gates", "\n", "binary_grads", "=", "ctx", ".", "backward_func", "(", "detached_x", ".", "data", ",", "output", ".", "data", ",", "grad_output", ".", "data", ")", "\n", "\n", "return", "grad_x", "[", "0", "]", ",", "binary_grads", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.build_candidate_ops": [[13, 47], ["name2ops.update", "ValueError", "IdentityLayer", "ZeroLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer", "MBInvertedConvLayer"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update"], ["def", "build_candidate_ops", "(", "candidate_ops", ",", "in_channels", ",", "out_channels", ",", "stride", ",", "ops_order", ")", ":", "\n", "    ", "if", "candidate_ops", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "'please specify a candidate set'", ")", "\n", "\n", "", "name2ops", "=", "{", "\n", "'Identity'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "IdentityLayer", "(", "in_C", ",", "out_C", ",", "ops_order", "=", "ops_order", ")", ",", "\n", "'Zero'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "ZeroLayer", "(", "stride", "=", "S", ")", ",", "\n", "}", "\n", "# add MBConv layers", "\n", "name2ops", ".", "update", "(", "{", "\n", "'3x3_MBConv1'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "3", ",", "S", ",", "1", ")", ",", "\n", "'3x3_MBConv2'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "3", ",", "S", ",", "2", ")", ",", "\n", "'3x3_MBConv3'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "3", ",", "S", ",", "3", ")", ",", "\n", "'3x3_MBConv4'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "3", ",", "S", ",", "4", ")", ",", "\n", "'3x3_MBConv5'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "3", ",", "S", ",", "5", ")", ",", "\n", "'3x3_MBConv6'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "3", ",", "S", ",", "6", ")", ",", "\n", "#######################################################################################", "\n", "'5x5_MBConv1'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "5", ",", "S", ",", "1", ")", ",", "\n", "'5x5_MBConv2'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "5", ",", "S", ",", "2", ")", ",", "\n", "'5x5_MBConv3'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "5", ",", "S", ",", "3", ")", ",", "\n", "'5x5_MBConv4'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "5", ",", "S", ",", "4", ")", ",", "\n", "'5x5_MBConv5'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "5", ",", "S", ",", "5", ")", ",", "\n", "'5x5_MBConv6'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "5", ",", "S", ",", "6", ")", ",", "\n", "#######################################################################################", "\n", "'7x7_MBConv1'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "7", ",", "S", ",", "1", ")", ",", "\n", "'7x7_MBConv2'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "7", ",", "S", ",", "2", ")", ",", "\n", "'7x7_MBConv3'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "7", ",", "S", ",", "3", ")", ",", "\n", "'7x7_MBConv4'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "7", ",", "S", ",", "4", ")", ",", "\n", "'7x7_MBConv5'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "7", ",", "S", ",", "5", ")", ",", "\n", "'7x7_MBConv6'", ":", "lambda", "in_C", ",", "out_C", ",", "S", ":", "MBInvertedConvLayer", "(", "in_C", ",", "out_C", ",", "7", ",", "S", ",", "6", ")", ",", "\n", "}", ")", "\n", "\n", "return", "[", "\n", "name2ops", "[", "name", "]", "(", "in_channels", ",", "out_channels", ",", "stride", ")", "for", "name", "in", "candidate_ops", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.__init__": [[30, 72], ["MyModule.__init__", "build_activation", "layers.My2DLayer.weight_op", "nn.Dropout2d", "nn.BatchNorm2d", "nn.BatchNorm2d", "layers.My2DLayer.add_module", "layers.My2DLayer.add_module", "layers.My2DLayer.add_module"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.build_activation", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.IdentityLayer.weight_op"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "use_bn", "=", "True", ",", "act_func", "=", "'relu'", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "super", "(", "My2DLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "act_func", "=", "act_func", "\n", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "self", ".", "ops_order", "=", "ops_order", "\n", "\n", "\"\"\" modules \"\"\"", "\n", "modules", "=", "{", "}", "\n", "# batch norm", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "if", "self", ".", "bn_before_weight", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "", "else", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "", "", "else", ":", "\n", "            ", "modules", "[", "'bn'", "]", "=", "None", "\n", "# activation", "\n", "", "modules", "[", "'act'", "]", "=", "build_activation", "(", "self", ".", "act_func", ",", "self", ".", "ops_list", "[", "0", "]", "!=", "'act'", ")", "\n", "# dropout", "\n", "if", "self", ".", "dropout_rate", ">", "0", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "nn", ".", "Dropout2d", "(", "self", ".", "dropout_rate", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "None", "\n", "# weight", "\n", "", "modules", "[", "'weight'", "]", "=", "self", ".", "weight_op", "(", ")", "\n", "\n", "# add modules", "\n", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "modules", "[", "op", "]", "is", "None", ":", "\n", "                ", "continue", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "if", "modules", "[", "'dropout'", "]", "is", "not", "None", ":", "\n", "                    ", "self", ".", "add_module", "(", "'dropout'", ",", "modules", "[", "'dropout'", "]", ")", "\n", "", "for", "key", "in", "modules", "[", "'weight'", "]", ":", "\n", "                    ", "self", ".", "add_module", "(", "key", ",", "modules", "[", "'weight'", "]", "[", "key", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "add_module", "(", "op", ",", "modules", "[", "op", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.ops_list": [[73, 76], ["layers.My2DLayer.ops_order.split"], "methods", ["None"], ["", "", "", "@", "property", "\n", "def", "ops_list", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "ops_order", ".", "split", "(", "'_'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.bn_before_weight": [[77, 85], ["ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "bn_before_weight", "(", "self", ")", ":", "\n", "        ", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "op", "==", "'bn'", ":", "\n", "                ", "return", "True", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "return", "False", "\n", "", "", "raise", "ValueError", "(", "'Invalid ops_order: %s'", "%", "self", ".", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.weight_op": [[86, 88], ["None"], "methods", ["None"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.forward": [[91, 95], ["layers.My2DLayer._modules.values", "module"], "methods", ["None"], ["def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.module_str": [[96, 99], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.config": [[100, 109], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'in_channels'", ":", "self", ".", "in_channels", ",", "\n", "'out_channels'", ":", "self", ".", "out_channels", ",", "\n", "'use_bn'", ":", "self", ".", "use_bn", ",", "\n", "'act_func'", ":", "self", ".", "act_func", ",", "\n", "'dropout_rate'", ":", "self", ".", "dropout_rate", ",", "\n", "'ops_order'", ":", "self", ".", "ops_order", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.build_from_config": [[111, 114], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.get_flops": [[115, 117], ["None"], "methods", ["None"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.My2DLayer.is_zero_layer": [[118, 121], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "is_zero_layer", "(", ")", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ConvLayer.__init__": [[125, 136], ["layers.My2DLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "has_shuffle", "=", "False", ",", "\n", "use_bn", "=", "True", ",", "act_func", "=", "'relu'", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "has_shuffle", "=", "has_shuffle", "\n", "\n", "super", "(", "ConvLayer", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ConvLayer.weight_op": [[137, 154], ["get_same_padding", "isinstance", "collections.OrderedDict", "nn.Conv2d", "ShuffleLayer"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "padding", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "if", "isinstance", "(", "padding", ",", "int", ")", ":", "\n", "            ", "padding", "*=", "self", ".", "dilation", "\n", "", "else", ":", "\n", "            ", "padding", "[", "0", "]", "*=", "self", ".", "dilation", "\n", "padding", "[", "1", "]", "*=", "self", ".", "dilation", "\n", "\n", "", "weight_dict", "=", "OrderedDict", "(", ")", "\n", "weight_dict", "[", "'conv'", "]", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "out_channels", ",", "kernel_size", "=", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "self", ".", "dilation", ",", "groups", "=", "self", ".", "groups", ",", "bias", "=", "self", ".", "bias", "\n", ")", "\n", "if", "self", ".", "has_shuffle", "and", "self", ".", "groups", ">", "1", ":", "\n", "            ", "weight_dict", "[", "'shuffle'", "]", "=", "ShuffleLayer", "(", "self", ".", "groups", ")", "\n", "\n", "", "return", "weight_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ConvLayer.module_str": [[155, 171], ["isinstance"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", ":", "\n", "            ", "kernel_size", "=", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "kernel_size", "=", "self", ".", "kernel_size", "\n", "", "if", "self", ".", "groups", "==", "1", ":", "\n", "            ", "if", "self", ".", "dilation", ">", "1", ":", "\n", "                ", "return", "'%dx%d_DilatedConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "return", "'%dx%d_Conv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "dilation", ">", "1", ":", "\n", "                ", "return", "'%dx%d_DilatedGroupConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "return", "'%dx%d_GroupConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ConvLayer.config": [[172, 183], ["None"], "methods", ["None"], ["", "", "", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "ConvLayer", ".", "__name__", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "'dilation'", ":", "self", ".", "dilation", ",", "\n", "'groups'", ":", "self", ".", "groups", ",", "\n", "'bias'", ":", "self", ".", "bias", ",", "\n", "'has_shuffle'", ":", "self", ".", "has_shuffle", ",", "\n", "**", "super", "(", "ConvLayer", ",", "self", ")", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ConvLayer.build_from_config": [[185, 188], ["layers.ConvLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "ConvLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ConvLayer.get_flops": [[189, 191], ["count_conv_flop", "layers.ConvLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "count_conv_flop", "(", "self", ".", "conv", ",", "x", ")", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.DepthConvLayer.__init__": [[195, 207], ["layers.My2DLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "has_shuffle", "=", "False", ",", "\n", "use_bn", "=", "True", ",", "act_func", "=", "'relu'", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "has_shuffle", "=", "has_shuffle", "\n", "\n", "super", "(", "DepthConvLayer", ",", "self", ")", ".", "__init__", "(", "\n", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.DepthConvLayer.weight_op": [[209, 228], ["get_same_padding", "isinstance", "collections.OrderedDict", "nn.Conv2d", "nn.Conv2d", "ShuffleLayer"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "padding", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "if", "isinstance", "(", "padding", ",", "int", ")", ":", "\n", "            ", "padding", "*=", "self", ".", "dilation", "\n", "", "else", ":", "\n", "            ", "padding", "[", "0", "]", "*=", "self", ".", "dilation", "\n", "padding", "[", "1", "]", "*=", "self", ".", "dilation", "\n", "\n", "", "weight_dict", "=", "OrderedDict", "(", ")", "\n", "weight_dict", "[", "'depth_conv'", "]", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "in_channels", ",", "kernel_size", "=", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "self", ".", "dilation", ",", "groups", "=", "self", ".", "in_channels", ",", "bias", "=", "False", "\n", ")", "\n", "weight_dict", "[", "'point_conv'", "]", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "out_channels", ",", "kernel_size", "=", "1", ",", "groups", "=", "self", ".", "groups", ",", "bias", "=", "self", ".", "bias", "\n", ")", "\n", "if", "self", ".", "has_shuffle", "and", "self", ".", "groups", ">", "1", ":", "\n", "            ", "weight_dict", "[", "'shuffle'", "]", "=", "ShuffleLayer", "(", "self", ".", "groups", ")", "\n", "", "return", "weight_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.DepthConvLayer.module_str": [[229, 239], ["isinstance"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", ":", "\n", "            ", "kernel_size", "=", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "kernel_size", "=", "self", ".", "kernel_size", "\n", "", "if", "self", ".", "dilation", ">", "1", ":", "\n", "            ", "return", "'%dx%d_DilatedDepthConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "'%dx%d_DepthConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.DepthConvLayer.config": [[240, 251], ["None"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "DepthConvLayer", ".", "__name__", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "'dilation'", ":", "self", ".", "dilation", ",", "\n", "'groups'", ":", "self", ".", "groups", ",", "\n", "'bias'", ":", "self", ".", "bias", ",", "\n", "'has_shuffle'", ":", "self", ".", "has_shuffle", ",", "\n", "**", "super", "(", "DepthConvLayer", ",", "self", ")", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.DepthConvLayer.build_from_config": [[253, 256], ["layers.DepthConvLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "DepthConvLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.DepthConvLayer.get_flops": [[257, 263], ["count_conv_flop", "layers.DepthConvLayer.depth_conv", "count_conv_flop", "layers.DepthConvLayer.point_conv", "layers.DepthConvLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "depth_flop", "=", "count_conv_flop", "(", "self", ".", "depth_conv", ",", "x", ")", "\n", "x", "=", "self", ".", "depth_conv", "(", "x", ")", "\n", "point_flop", "=", "count_conv_flop", "(", "self", ".", "point_conv", ",", "x", ")", "\n", "x", "=", "self", ".", "point_conv", "(", "x", ")", "\n", "return", "depth_flop", "+", "point_flop", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.PoolingLayer.__init__": [[267, 275], ["layers.My2DLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "pool_type", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "use_bn", "=", "False", ",", "act_func", "=", "None", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "self", ".", "pool_type", "=", "pool_type", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "super", "(", "PoolingLayer", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.PoolingLayer.weight_op": [[276, 293], ["collections.OrderedDict", "get_same_padding", "nn.AvgPool2d", "nn.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "stride", "==", "1", ":", "\n", "# same padding if `stride == 1`", "\n", "            ", "padding", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "padding", "=", "0", "\n", "\n", "", "weight_dict", "=", "OrderedDict", "(", ")", "\n", "if", "self", ".", "pool_type", "==", "'avg'", ":", "\n", "            ", "weight_dict", "[", "'pool'", "]", "=", "nn", ".", "AvgPool2d", "(", "\n", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "count_include_pad", "=", "False", "\n", ")", "\n", "", "elif", "self", ".", "pool_type", "==", "'max'", ":", "\n", "            ", "weight_dict", "[", "'pool'", "]", "=", "nn", ".", "MaxPool2d", "(", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "weight_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.PoolingLayer.module_str": [[294, 301], ["isinstance", "layers.PoolingLayer.pool_type.upper"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", ":", "\n", "            ", "kernel_size", "=", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "kernel_size", "=", "self", ".", "kernel_size", "\n", "", "return", "'%dx%d_%sPool'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ",", "self", ".", "pool_type", ".", "upper", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.PoolingLayer.config": [[302, 310], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "PoolingLayer", ".", "__name__", ",", "\n", "'pool_type'", ":", "self", ".", "pool_type", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "**", "super", "(", "PoolingLayer", ",", "self", ")", ".", "config", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.PoolingLayer.build_from_config": [[312, 315], ["layers.PoolingLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "PoolingLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.PoolingLayer.get_flops": [[316, 318], ["layers.PoolingLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "0", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.IdentityLayer.__init__": [[322, 325], ["layers.My2DLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "use_bn", "=", "False", ",", "act_func", "=", "None", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "super", "(", "IdentityLayer", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.IdentityLayer.weight_op": [[326, 328], ["None"], "methods", ["None"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.IdentityLayer.module_str": [[329, 332], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'Identity'", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.IdentityLayer.config": [[333, 338], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "IdentityLayer", ".", "__name__", ",", "\n", "**", "super", "(", "IdentityLayer", ",", "self", ")", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.IdentityLayer.build_from_config": [[340, 343], ["layers.IdentityLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "IdentityLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.IdentityLayer.get_flops": [[344, 346], ["layers.IdentityLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "0", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.LinearLayer.__init__": [[350, 394], ["MyModule.__init__", "build_activation", "nn.Dropout", "nn.Linear", "nn.BatchNorm1d", "nn.BatchNorm1d", "layers.LinearLayer.add_module", "layers.LinearLayer.add_module", "layers.LinearLayer.add_module"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.pytorch_utils.build_activation"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ",", "\n", "use_bn", "=", "False", ",", "act_func", "=", "None", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "super", "(", "LinearLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "bias", "=", "bias", "\n", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "act_func", "=", "act_func", "\n", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "self", ".", "ops_order", "=", "ops_order", "\n", "\n", "\"\"\" modules \"\"\"", "\n", "modules", "=", "{", "}", "\n", "# batch norm", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "if", "self", ".", "bn_before_weight", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm1d", "(", "in_features", ")", "\n", "", "else", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm1d", "(", "out_features", ")", "\n", "", "", "else", ":", "\n", "            ", "modules", "[", "'bn'", "]", "=", "None", "\n", "# activation", "\n", "", "modules", "[", "'act'", "]", "=", "build_activation", "(", "self", ".", "act_func", ",", "self", ".", "ops_list", "[", "0", "]", "!=", "'act'", ")", "\n", "# dropout", "\n", "if", "self", ".", "dropout_rate", ">", "0", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "nn", ".", "Dropout", "(", "self", ".", "dropout_rate", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "None", "\n", "# linear", "\n", "", "modules", "[", "'weight'", "]", "=", "{", "'linear'", ":", "nn", ".", "Linear", "(", "self", ".", "in_features", ",", "self", ".", "out_features", ",", "self", ".", "bias", ")", "}", "\n", "\n", "# add modules", "\n", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "modules", "[", "op", "]", "is", "None", ":", "\n", "                ", "continue", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "if", "modules", "[", "'dropout'", "]", "is", "not", "None", ":", "\n", "                    ", "self", ".", "add_module", "(", "'dropout'", ",", "modules", "[", "'dropout'", "]", ")", "\n", "", "for", "key", "in", "modules", "[", "'weight'", "]", ":", "\n", "                    ", "self", ".", "add_module", "(", "key", ",", "modules", "[", "'weight'", "]", "[", "key", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "add_module", "(", "op", ",", "modules", "[", "op", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.LinearLayer.ops_list": [[395, 398], ["layers.LinearLayer.ops_order.split"], "methods", ["None"], ["", "", "", "@", "property", "\n", "def", "ops_list", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "ops_order", ".", "split", "(", "'_'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.LinearLayer.bn_before_weight": [[399, 407], ["ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "bn_before_weight", "(", "self", ")", ":", "\n", "        ", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "op", "==", "'bn'", ":", "\n", "                ", "return", "True", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "return", "False", "\n", "", "", "raise", "ValueError", "(", "'Invalid ops_order: %s'", "%", "self", ".", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.LinearLayer.forward": [[408, 412], ["layers.LinearLayer._modules.values", "module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.LinearLayer.module_str": [[413, 416], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'%dx%d_Linear'", "%", "(", "self", ".", "in_features", ",", "self", ".", "out_features", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.LinearLayer.config": [[417, 428], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "LinearLayer", ".", "__name__", ",", "\n", "'in_features'", ":", "self", ".", "in_features", ",", "\n", "'out_features'", ":", "self", ".", "out_features", ",", "\n", "'bias'", ":", "self", ".", "bias", ",", "\n", "'use_bn'", ":", "self", ".", "use_bn", ",", "\n", "'act_func'", ":", "self", ".", "act_func", ",", "\n", "'dropout_rate'", ":", "self", ".", "dropout_rate", ",", "\n", "'ops_order'", ":", "self", ".", "ops_order", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.LinearLayer.build_from_config": [[430, 433], ["layers.LinearLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "LinearLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.LinearLayer.get_flops": [[434, 436], ["layers.LinearLayer.linear.weight.numel", "layers.LinearLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "linear", ".", "weight", ".", "numel", "(", ")", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.LinearLayer.is_zero_layer": [[437, 440], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "is_zero_layer", "(", ")", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.MBInvertedConvLayer.__init__": [[444, 480], ["MyModule.__init__", "get_same_padding", "nn.Sequential", "nn.Sequential", "round", "nn.Sequential", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "nn.Conv2d", "nn.BatchNorm2d", "nn.ReLU6", "nn.Conv2d", "nn.BatchNorm2d", "nn.Conv2d", "nn.BatchNorm2d", "nn.ReLU6"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "expand_ratio", "=", "6", ",", "mid_channels", "=", "None", ")", ":", "\n", "        ", "super", "(", "MBInvertedConvLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "expand_ratio", "=", "expand_ratio", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "\n", "if", "self", ".", "mid_channels", "is", "None", ":", "\n", "            ", "feature_dim", "=", "round", "(", "self", ".", "in_channels", "*", "self", ".", "expand_ratio", ")", "\n", "", "else", ":", "\n", "            ", "feature_dim", "=", "self", ".", "mid_channels", "\n", "\n", "", "if", "self", ".", "expand_ratio", "==", "1", ":", "\n", "            ", "self", ".", "inverted_bottleneck", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "inverted_bottleneck", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "self", ".", "in_channels", ",", "feature_dim", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "feature_dim", ")", ")", ",", "\n", "(", "'act'", ",", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "", "pad", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "self", ".", "depth_conv", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "feature_dim", ",", "feature_dim", ",", "kernel_size", ",", "stride", ",", "pad", ",", "groups", "=", "feature_dim", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "feature_dim", ")", ")", ",", "\n", "(", "'act'", ",", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "self", ".", "point_linear", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "feature_dim", ",", "out_channels", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", ",", "\n", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.MBInvertedConvLayer.forward": [[482, 488], ["layers.MBInvertedConvLayer.depth_conv", "layers.MBInvertedConvLayer.point_linear", "layers.MBInvertedConvLayer.inverted_bottleneck"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "inverted_bottleneck", ":", "\n", "            ", "x", "=", "self", ".", "inverted_bottleneck", "(", "x", ")", "\n", "", "x", "=", "self", ".", "depth_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "point_linear", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.MBInvertedConvLayer.module_str": [[489, 492], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'%dx%d_MBConv%d'", "%", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ",", "self", ".", "expand_ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.MBInvertedConvLayer.config": [[493, 503], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "MBInvertedConvLayer", ".", "__name__", ",", "\n", "'in_channels'", ":", "self", ".", "in_channels", ",", "\n", "'out_channels'", ":", "self", ".", "out_channels", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "'expand_ratio'", ":", "self", ".", "expand_ratio", ",", "\n", "'mid_channels'", ":", "self", ".", "mid_channels", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.MBInvertedConvLayer.build_from_config": [[505, 508], ["layers.MBInvertedConvLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "MBInvertedConvLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.MBInvertedConvLayer.get_flops": [[509, 523], ["count_conv_flop", "layers.MBInvertedConvLayer.depth_conv", "count_conv_flop", "layers.MBInvertedConvLayer.point_linear", "count_conv_flop", "layers.MBInvertedConvLayer.inverted_bottleneck"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "inverted_bottleneck", ":", "\n", "            ", "flop1", "=", "count_conv_flop", "(", "self", ".", "inverted_bottleneck", ".", "conv", ",", "x", ")", "\n", "x", "=", "self", ".", "inverted_bottleneck", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "flop1", "=", "0", "\n", "\n", "", "flop2", "=", "count_conv_flop", "(", "self", ".", "depth_conv", ".", "conv", ",", "x", ")", "\n", "x", "=", "self", ".", "depth_conv", "(", "x", ")", "\n", "\n", "flop3", "=", "count_conv_flop", "(", "self", ".", "point_linear", ".", "conv", ",", "x", ")", "\n", "x", "=", "self", ".", "point_linear", "(", "x", ")", "\n", "\n", "return", "flop1", "+", "flop2", "+", "flop3", ",", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.MBInvertedConvLayer.is_zero_layer": [[524, 527], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "is_zero_layer", "(", ")", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ZeroLayer.__init__": [[531, 534], ["MyModule.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "        ", "super", "(", "ZeroLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ZeroLayer.forward": [[535, 543], ["x.size", "torch.zeros", "x.get_device", "torch.device"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "h", "//=", "self", ".", "stride", "\n", "w", "//=", "self", ".", "stride", "\n", "device", "=", "x", ".", "get_device", "(", ")", "if", "x", ".", "is_cuda", "else", "torch", ".", "device", "(", "'cpu'", ")", "\n", "# noinspection PyUnresolvedReferences", "\n", "padding", "=", "torch", ".", "zeros", "(", "n", ",", "c", ",", "h", ",", "w", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "return", "padding", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ZeroLayer.module_str": [[544, 547], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'Zero'", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ZeroLayer.config": [[548, 553], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "ZeroLayer", ".", "__name__", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ZeroLayer.build_from_config": [[555, 558], ["layers.ZeroLayer"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "ZeroLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ZeroLayer.get_flops": [[559, 561], ["layers.ZeroLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "0", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.ZeroLayer.is_zero_layer": [[562, 565], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "is_zero_layer", "(", ")", ":", "\n", "        ", "return", "True", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.layers.set_layer_from_config": [[9, 26], ["layer_config.pop", "layer.build_from_config"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config"], ["def", "set_layer_from_config", "(", "layer_config", ")", ":", "\n", "    ", "if", "layer_config", "is", "None", ":", "\n", "        ", "return", "None", "\n", "\n", "", "name2layer", "=", "{", "\n", "ConvLayer", ".", "__name__", ":", "ConvLayer", ",", "\n", "DepthConvLayer", ".", "__name__", ":", "DepthConvLayer", ",", "\n", "PoolingLayer", ".", "__name__", ":", "PoolingLayer", ",", "\n", "IdentityLayer", ".", "__name__", ":", "IdentityLayer", ",", "\n", "LinearLayer", ".", "__name__", ":", "LinearLayer", ",", "\n", "MBInvertedConvLayer", ".", "__name__", ":", "MBInvertedConvLayer", ",", "\n", "ZeroLayer", ".", "__name__", ":", "ZeroLayer", ",", "\n", "}", "\n", "\n", "layer_name", "=", "layer_config", ".", "pop", "(", "'name'", ")", "\n", "layer", "=", "name2layer", "[", "layer_name", "]", "\n", "return", "layer", ".", "build_from_config", "(", "layer_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.models.__init__.ImagenetRunConfig.__init__": [[18, 35], ["run_manager.RunConfig.__init__", "print", "kwargs.keys"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.models.__init__.ImagenetRunConfig.data_config": [[36, 45], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.models.__init__.get_net_by_name": [[9, 14], ["ValueError"], "function", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.MobileInvertedResidualBlock.__init__": [[25, 30], ["MyModule.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mobile_inverted_conv", ",", "shortcut", ")", ":", "\n", "        ", "super", "(", "MobileInvertedResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mobile_inverted_conv", "=", "mobile_inverted_conv", "\n", "self", ".", "shortcut", "=", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.MobileInvertedResidualBlock.forward": [[31, 41], ["proxyless_nets.MobileInvertedResidualBlock.mobile_inverted_conv.is_zero_layer", "proxyless_nets.MobileInvertedResidualBlock.shortcut.is_zero_layer", "proxyless_nets.MobileInvertedResidualBlock.mobile_inverted_conv", "proxyless_nets.MobileInvertedResidualBlock.mobile_inverted_conv", "proxyless_nets.MobileInvertedResidualBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "mobile_inverted_conv", ".", "is_zero_layer", "(", ")", ":", "\n", "            ", "res", "=", "x", "\n", "", "elif", "self", ".", "shortcut", "is", "None", "or", "self", ".", "shortcut", ".", "is_zero_layer", "(", ")", ":", "\n", "            ", "res", "=", "self", ".", "mobile_inverted_conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "conv_x", "=", "self", ".", "mobile_inverted_conv", "(", "x", ")", "\n", "skip_x", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "res", "=", "skip_x", "+", "conv_x", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.MobileInvertedResidualBlock.module_str": [[42, 46], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'(%s, %s)'", "%", "(", "\n", "self", ".", "mobile_inverted_conv", ".", "module_str", ",", "self", ".", "shortcut", ".", "module_str", "if", "self", ".", "shortcut", "is", "not", "None", "else", "None", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.MobileInvertedResidualBlock.config": [[48, 54], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "MobileInvertedResidualBlock", ".", "__name__", ",", "\n", "'mobile_inverted_conv'", ":", "self", ".", "mobile_inverted_conv", ".", "config", ",", "\n", "'shortcut'", ":", "self", ".", "shortcut", ".", "config", "if", "self", ".", "shortcut", "is", "not", "None", "else", "None", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.MobileInvertedResidualBlock.build_from_config": [[56, 61], ["set_layer_from_config", "set_layer_from_config", "proxyless_nets.MobileInvertedResidualBlock"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "mobile_inverted_conv", "=", "set_layer_from_config", "(", "config", "[", "'mobile_inverted_conv'", "]", ")", "\n", "shortcut", "=", "set_layer_from_config", "(", "config", "[", "'shortcut'", "]", ")", "\n", "return", "MobileInvertedResidualBlock", "(", "mobile_inverted_conv", ",", "shortcut", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.MobileInvertedResidualBlock.get_flops": [[62, 70], ["proxyless_nets.MobileInvertedResidualBlock.mobile_inverted_conv.get_flops", "proxyless_nets.MobileInvertedResidualBlock.shortcut.get_flops", "proxyless_nets.MobileInvertedResidualBlock.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "flops1", ",", "conv_x", "=", "self", ".", "mobile_inverted_conv", ".", "get_flops", "(", "x", ")", "\n", "if", "self", ".", "shortcut", ":", "\n", "            ", "flops2", ",", "_", "=", "self", ".", "shortcut", ".", "get_flops", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "flops2", "=", "0", "\n", "\n", "", "return", "flops1", "+", "flops2", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.ProxylessNASNets.__init__": [[74, 82], ["MyNetwork.__init__", "nn.ModuleList", "nn.AdaptiveAvgPool2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "first_conv", ",", "blocks", ",", "feature_mix_layer", ",", "classifier", ")", ":", "\n", "        ", "super", "(", "ProxylessNASNets", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "first_conv", "=", "first_conv", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "blocks", ")", "\n", "self", ".", "feature_mix_layer", "=", "feature_mix_layer", "\n", "self", ".", "global_avg_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "classifier", "=", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.ProxylessNASNets.forward": [[83, 92], ["proxyless_nets.ProxylessNASNets.first_conv", "proxyless_nets.ProxylessNASNets.feature_mix_layer", "proxyless_nets.ProxylessNASNets.global_avg_pooling", "block.view", "proxyless_nets.ProxylessNASNets.classifier", "block", "block.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "first_conv", "(", "x", ")", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "", "x", "=", "self", ".", "feature_mix_layer", "(", "x", ")", "\n", "x", "=", "self", ".", "global_avg_pooling", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# flatten", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.ProxylessNASNets.module_str": [[93, 99], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "_str", "=", "''", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "_str", "+=", "block", ".", "unit_str", "+", "'\\n'", "\n", "", "return", "_str", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.ProxylessNASNets.config": [[100, 111], ["proxyless_nets.ProxylessNASNets.get_bn_param"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.get_bn_param"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "ProxylessNASNets", ".", "__name__", ",", "\n", "'bn'", ":", "self", ".", "get_bn_param", "(", ")", ",", "\n", "'first_conv'", ":", "self", ".", "first_conv", ".", "config", ",", "\n", "'blocks'", ":", "[", "\n", "block", ".", "config", "for", "block", "in", "self", ".", "blocks", "\n", "]", ",", "\n", "'feature_mix_layer'", ":", "self", ".", "feature_mix_layer", ".", "config", ",", "\n", "'classifier'", ":", "self", ".", "classifier", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.ProxylessNASNets.build_from_config": [[113, 129], ["set_layer_from_config", "set_layer_from_config", "set_layer_from_config", "proxyless_nets.ProxylessNASNets", "blocks.append", "ProxylessNASNets.set_bn_param", "ProxylessNASNets.set_bn_param", "proxyless_nets.MobileInvertedResidualBlock.build_from_config"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.set_bn_param", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.set_bn_param", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "first_conv", "=", "set_layer_from_config", "(", "config", "[", "'first_conv'", "]", ")", "\n", "feature_mix_layer", "=", "set_layer_from_config", "(", "config", "[", "'feature_mix_layer'", "]", ")", "\n", "classifier", "=", "set_layer_from_config", "(", "config", "[", "'classifier'", "]", ")", "\n", "blocks", "=", "[", "]", "\n", "for", "block_config", "in", "config", "[", "'blocks'", "]", ":", "\n", "            ", "blocks", ".", "append", "(", "MobileInvertedResidualBlock", ".", "build_from_config", "(", "block_config", ")", ")", "\n", "\n", "", "net", "=", "ProxylessNASNets", "(", "first_conv", ",", "blocks", ",", "feature_mix_layer", ",", "classifier", ")", "\n", "if", "'bn'", "in", "config", ":", "\n", "            ", "net", ".", "set_bn_param", "(", "**", "config", "[", "'bn'", "]", ")", "\n", "", "else", ":", "\n", "            ", "net", ".", "set_bn_param", "(", "momentum", "=", "0.1", ",", "eps", "=", "1e-3", ")", "\n", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.ProxylessNASNets.get_flops": [[130, 146], ["proxyless_nets.ProxylessNASNets.first_conv.get_flops", "proxyless_nets.ProxylessNASNets.feature_mix_layer.get_flops", "proxyless_nets.ProxylessNASNets.global_avg_pooling", "x.view.view.view", "proxyless_nets.ProxylessNASNets.classifier.get_flops", "block.get_flops", "x.view.view.size"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "flop", ",", "x", "=", "self", ".", "first_conv", ".", "get_flops", "(", "x", ")", "\n", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "delta_flop", ",", "x", "=", "block", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "\n", "", "delta_flop", ",", "x", "=", "self", ".", "feature_mix_layer", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "\n", "x", "=", "self", ".", "global_avg_pooling", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# flatten", "\n", "\n", "delta_flop", ",", "x", "=", "self", ".", "classifier", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "return", "flop", ",", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.normal_nets.proxyless_nets.proxyless_base": [[9, 21], ["download_url", "json.load", "proxyless_nets.ProxylessNASNets.build_from_config", "ProxylessNASNets.build_from_config.set_bn_param", "open"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.download_url", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.set_bn_param"], ["def", "proxyless_base", "(", "net_config", "=", "None", ",", "n_classes", "=", "1000", ",", "bn_param", "=", "(", "0.1", ",", "1e-3", ")", ",", "dropout_rate", "=", "0", ")", ":", "\n", "    ", "assert", "net_config", "is", "not", "None", ",", "'Please input a network config'", "\n", "net_config_path", "=", "download_url", "(", "net_config", ")", "\n", "net_config_json", "=", "json", ".", "load", "(", "open", "(", "net_config_path", ",", "'r'", ")", ")", "\n", "\n", "net_config_json", "[", "'classifier'", "]", "[", "'out_features'", "]", "=", "n_classes", "\n", "net_config_json", "[", "'classifier'", "]", "[", "'dropout_rate'", "]", "=", "dropout_rate", "\n", "\n", "net", "=", "ProxylessNASNets", ".", "build_from_config", "(", "net_config_json", ")", "\n", "net", ".", "set_bn_param", "(", "momentum", "=", "bn_param", "[", "0", "]", ",", "eps", "=", "bn_param", "[", "1", "]", ")", "\n", "\n", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.__init__": [[15, 76], ["make_divisible", "make_divisible", "range", "ConvLayer", "MixedEdge", "MobileInvertedResidualBlock", "zip", "ConvLayer", "LinearLayer", "ProxylessNASNets.__init__", "super_proxyless.SuperProxylessNASNets.set_bn_param", "len", "make_divisible", "range", "make_divisible", "build_candidate_ops", "MixedEdge", "MobileInvertedResidualBlock", "blocks.append", "IdentityLayer", "build_candidate_ops"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.make_divisible", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.make_divisible", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.set_bn_param", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.make_divisible", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.__init__.make_divisible", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.build_candidate_ops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.build_candidate_ops"], ["    ", "def", "__init__", "(", "self", ",", "width_stages", ",", "n_cell_stages", ",", "conv_candidates", ",", "stride_stages", ",", "\n", "n_classes", "=", "1000", ",", "width_mult", "=", "1", ",", "bn_param", "=", "(", "0.1", ",", "1e-3", ")", ",", "dropout_rate", "=", "0", ")", ":", "\n", "        ", "self", ".", "_redundant_modules", "=", "None", "\n", "self", ".", "_unused_modules", "=", "None", "\n", "\n", "input_channel", "=", "make_divisible", "(", "32", "*", "width_mult", ",", "8", ")", "\n", "first_cell_width", "=", "make_divisible", "(", "16", "*", "width_mult", ",", "8", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "width_stages", ")", ")", ":", "\n", "            ", "width_stages", "[", "i", "]", "=", "make_divisible", "(", "width_stages", "[", "i", "]", "*", "width_mult", ",", "8", ")", "\n", "\n", "# first conv layer", "\n", "", "first_conv", "=", "ConvLayer", "(", "\n", "3", ",", "input_channel", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "use_bn", "=", "True", ",", "act_func", "=", "'relu6'", ",", "ops_order", "=", "'weight_bn_act'", "\n", ")", "\n", "\n", "# first block", "\n", "first_block_conv", "=", "MixedEdge", "(", "candidate_ops", "=", "build_candidate_ops", "(", "\n", "[", "'3x3_MBConv1'", "]", ",", "\n", "input_channel", ",", "first_cell_width", ",", "1", ",", "'weight_bn_act'", ",", "\n", ")", ",", ")", "\n", "if", "first_block_conv", ".", "n_choices", "==", "1", ":", "\n", "            ", "first_block_conv", "=", "first_block_conv", ".", "candidate_ops", "[", "0", "]", "\n", "", "first_block", "=", "MobileInvertedResidualBlock", "(", "first_block_conv", ",", "None", ")", "\n", "input_channel", "=", "first_cell_width", "\n", "\n", "# blocks", "\n", "blocks", "=", "[", "first_block", "]", "\n", "for", "width", ",", "n_cell", ",", "s", "in", "zip", "(", "width_stages", ",", "n_cell_stages", ",", "stride_stages", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "n_cell", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "stride", "=", "s", "\n", "", "else", ":", "\n", "                    ", "stride", "=", "1", "\n", "# conv", "\n", "", "if", "stride", "==", "1", "and", "input_channel", "==", "width", ":", "\n", "                    ", "modified_conv_candidates", "=", "conv_candidates", "+", "[", "'Zero'", "]", "\n", "", "else", ":", "\n", "                    ", "modified_conv_candidates", "=", "conv_candidates", "\n", "", "conv_op", "=", "MixedEdge", "(", "candidate_ops", "=", "build_candidate_ops", "(", "\n", "modified_conv_candidates", ",", "input_channel", ",", "width", ",", "stride", ",", "'weight_bn_act'", ",", "\n", ")", ",", ")", "\n", "# shortcut", "\n", "if", "stride", "==", "1", "and", "input_channel", "==", "width", ":", "\n", "                    ", "shortcut", "=", "IdentityLayer", "(", "input_channel", ",", "input_channel", ")", "\n", "", "else", ":", "\n", "                    ", "shortcut", "=", "None", "\n", "", "inverted_residual_block", "=", "MobileInvertedResidualBlock", "(", "conv_op", ",", "shortcut", ")", "\n", "blocks", ".", "append", "(", "inverted_residual_block", ")", "\n", "input_channel", "=", "width", "\n", "\n", "# feature mix layer", "\n", "", "", "last_channel", "=", "make_divisible", "(", "1280", "*", "width_mult", ",", "8", ")", "if", "width_mult", ">", "1.0", "else", "1280", "\n", "feature_mix_layer", "=", "ConvLayer", "(", "\n", "input_channel", ",", "last_channel", ",", "kernel_size", "=", "1", ",", "use_bn", "=", "True", ",", "act_func", "=", "'relu6'", ",", "ops_order", "=", "'weight_bn_act'", ",", "\n", ")", "\n", "\n", "classifier", "=", "LinearLayer", "(", "last_channel", ",", "n_classes", ",", "dropout_rate", "=", "dropout_rate", ")", "\n", "super", "(", "SuperProxylessNASNets", ",", "self", ")", ".", "__init__", "(", "first_conv", ",", "blocks", ",", "feature_mix_layer", ",", "classifier", ")", "\n", "\n", "# set bn param", "\n", "self", ".", "set_bn_param", "(", "momentum", "=", "bn_param", "[", "0", "]", ",", "eps", "=", "bn_param", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.config": [[77, 80], ["ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'not needed'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.build_from_config": [[81, 84], ["ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'not needed'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.architecture_parameters": [[87, 91], ["super_proxyless.SuperProxylessNASNets.named_parameters"], "methods", ["None"], ["def", "architecture_parameters", "(", "self", ")", ":", "\n", "        ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "'AP_path_alpha'", "in", "name", ":", "\n", "                ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.binary_gates": [[92, 96], ["super_proxyless.SuperProxylessNASNets.named_parameters"], "methods", ["None"], ["", "", "", "def", "binary_gates", "(", "self", ")", ":", "\n", "        ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "'AP_path_wb'", "in", "name", ":", "\n", "                ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.weight_parameters": [[97, 101], ["super_proxyless.SuperProxylessNASNets.named_parameters"], "methods", ["None"], ["", "", "", "def", "weight_parameters", "(", "self", ")", ":", "\n", "        ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "'AP_path_alpha'", "not", "in", "name", "and", "'AP_path_wb'", "not", "in", "name", ":", "\n", "                ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.redundant_modules": [[104, 113], ["super_proxyless.SuperProxylessNASNets.modules", "m.__str__().startswith", "module_list.append", "m.__str__"], "methods", ["None"], ["@", "property", "\n", "def", "redundant_modules", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_redundant_modules", "is", "None", ":", "\n", "            ", "module_list", "=", "[", "]", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "m", ".", "__str__", "(", ")", ".", "startswith", "(", "'MixedEdge'", ")", ":", "\n", "                    ", "module_list", ".", "append", "(", "m", ")", "\n", "", "", "self", ".", "_redundant_modules", "=", "module_list", "\n", "", "return", "self", ".", "_redundant_modules", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.entropy": [[114, 120], ["m.entropy"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.entropy"], ["", "def", "entropy", "(", "self", ",", "eps", "=", "1e-8", ")", ":", "\n", "        ", "entropy", "=", "0", "\n", "for", "m", "in", "self", ".", "redundant_modules", ":", "\n", "            ", "module_entropy", "=", "m", ".", "entropy", "(", "eps", "=", "eps", ")", "\n", "entropy", "=", "module_entropy", "+", "entropy", "\n", "", "return", "entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.init_arch_params": [[121, 129], ["super_proxyless.SuperProxylessNASNets.architecture_parameters", "param.data.normal_", "param.data.uniform_"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.architecture_parameters"], ["", "def", "init_arch_params", "(", "self", ",", "init_type", "=", "'normal'", ",", "init_ratio", "=", "1e-3", ")", ":", "\n", "        ", "for", "param", "in", "self", ".", "architecture_parameters", "(", ")", ":", "\n", "            ", "if", "init_type", "==", "'normal'", ":", "\n", "                ", "param", ".", "data", ".", "normal_", "(", "0", ",", "init_ratio", ")", "\n", "", "elif", "init_type", "==", "'uniform'", ":", "\n", "                ", "param", ".", "data", ".", "uniform_", "(", "-", "init_ratio", ",", "init_ratio", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.reset_binary_gates": [[130, 136], ["m.binarize", "print", "type"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.MixedEdge.binarize"], ["", "", "", "def", "reset_binary_gates", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "redundant_modules", ":", "\n", "            ", "try", ":", "\n", "                ", "m", ".", "binarize", "(", ")", "\n", "", "except", "AttributeError", ":", "\n", "                ", "print", "(", "type", "(", "m", ")", ",", "' do not support binarize'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.set_arch_param_grad": [[137, 143], ["m.set_arch_param_grad", "print", "type"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.set_arch_param_grad"], ["", "", "", "def", "set_arch_param_grad", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "redundant_modules", ":", "\n", "            ", "try", ":", "\n", "                ", "m", ".", "set_arch_param_grad", "(", ")", "\n", "", "except", "AttributeError", ":", "\n", "                ", "print", "(", "type", "(", "m", ")", ",", "' do not support `set_arch_param_grad()`'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.rescale_updated_arch_param": [[144, 150], ["m.rescale_updated_arch_param", "print", "type"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.rescale_updated_arch_param"], ["", "", "", "def", "rescale_updated_arch_param", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "redundant_modules", ":", "\n", "            ", "try", ":", "\n", "                ", "m", ".", "rescale_updated_arch_param", "(", ")", "\n", "", "except", "AttributeError", ":", "\n", "                ", "print", "(", "type", "(", "m", ")", ",", "' do not support `rescale_updated_arch_param()`'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_off": [[153, 166], ["range", "super_proxyless.SuperProxylessNASNets._unused_modules.append"], "methods", ["None"], ["def", "unused_modules_off", "(", "self", ")", ":", "\n", "        ", "self", ".", "_unused_modules", "=", "[", "]", "\n", "for", "m", "in", "self", ".", "redundant_modules", ":", "\n", "            ", "unused", "=", "{", "}", "\n", "if", "MixedEdge", ".", "MODE", "in", "[", "'full'", ",", "'two'", ",", "'full_v2'", "]", ":", "\n", "                ", "involved_index", "=", "m", ".", "active_index", "+", "m", ".", "inactive_index", "\n", "", "else", ":", "\n", "                ", "involved_index", "=", "m", ".", "active_index", "\n", "", "for", "i", "in", "range", "(", "m", ".", "n_choices", ")", ":", "\n", "                ", "if", "i", "not", "in", "involved_index", ":", "\n", "                    ", "unused", "[", "i", "]", "=", "m", ".", "candidate_ops", "[", "i", "]", "\n", "m", ".", "candidate_ops", "[", "i", "]", "=", "None", "\n", "", "", "self", ".", "_unused_modules", ".", "append", "(", "unused", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.unused_modules_back": [[167, 174], ["zip"], "methods", ["None"], ["", "", "def", "unused_modules_back", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_unused_modules", "is", "None", ":", "\n", "            ", "return", "\n", "", "for", "m", ",", "unused", "in", "zip", "(", "self", ".", "redundant_modules", ",", "self", ".", "_unused_modules", ")", ":", "\n", "            ", "for", "i", "in", "unused", ":", "\n", "                ", "m", ".", "candidate_ops", "[", "i", "]", "=", "unused", "[", "i", "]", "\n", "", "", "self", ".", "_unused_modules", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.set_chosen_op_active": [[175, 181], ["m.set_chosen_op_active", "print", "type"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.set_chosen_op_active"], ["", "def", "set_chosen_op_active", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "redundant_modules", ":", "\n", "            ", "try", ":", "\n", "                ", "m", ".", "set_chosen_op_active", "(", ")", "\n", "", "except", "AttributeError", ":", "\n", "                ", "print", "(", "type", "(", "m", ")", ",", "' do not support `set_chosen_op_active()`'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.set_active_via_net": [[182, 187], ["isinstance", "zip", "copy.deepcopy", "copy.deepcopy"], "methods", ["None"], ["", "", "", "def", "set_active_via_net", "(", "self", ",", "net", ")", ":", "\n", "        ", "assert", "isinstance", "(", "net", ",", "SuperProxylessNASNets", ")", "\n", "for", "self_m", ",", "net_m", "in", "zip", "(", "self", ".", "redundant_modules", ",", "net", ".", "redundant_modules", ")", ":", "\n", "            ", "self_m", ".", "active_index", "=", "copy", ".", "deepcopy", "(", "net_m", ".", "active_index", ")", "\n", "self_m", ".", "inactive_index", "=", "copy", ".", "deepcopy", "(", "net_m", ".", "inactive_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.expected_latency": [[188, 234], ["latency_model.predict", "latency_model.predict", "latency_model.predict", "enumerate", "shortcut.is_zero_layer", "isinstance", "latency_model.predict", "mb_conv.is_zero_layer", "latency_model.predict", "op.is_zero_layer"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.utils.latency_estimator.LatencyEstimator.predict", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer"], ["", "", "def", "expected_latency", "(", "self", ",", "latency_model", ":", "LatencyEstimator", ")", ":", "\n", "        ", "expected_latency", "=", "0", "\n", "# first conv", "\n", "expected_latency", "+=", "latency_model", ".", "predict", "(", "'Conv'", ",", "[", "224", ",", "224", ",", "3", "]", ",", "[", "112", ",", "112", ",", "self", ".", "first_conv", ".", "out_channels", "]", ")", "\n", "# feature mix layer", "\n", "expected_latency", "+=", "latency_model", ".", "predict", "(", "\n", "'Conv_1'", ",", "[", "7", ",", "7", ",", "self", ".", "feature_mix_layer", ".", "in_channels", "]", ",", "[", "7", ",", "7", ",", "self", ".", "feature_mix_layer", ".", "out_channels", "]", "\n", ")", "\n", "# classifier", "\n", "expected_latency", "+=", "latency_model", ".", "predict", "(", "\n", "'Logits'", ",", "[", "7", ",", "7", ",", "self", ".", "classifier", ".", "in_features", "]", ",", "[", "self", ".", "classifier", ".", "out_features", "]", "# 1000", "\n", ")", "\n", "# blocks", "\n", "fsize", "=", "112", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "shortcut", "=", "block", ".", "shortcut", "\n", "if", "shortcut", "is", "None", "or", "shortcut", ".", "is_zero_layer", "(", ")", ":", "\n", "                ", "idskip", "=", "0", "\n", "", "else", ":", "\n", "                ", "idskip", "=", "1", "\n", "\n", "", "mb_conv", "=", "block", ".", "mobile_inverted_conv", "\n", "if", "not", "isinstance", "(", "mb_conv", ",", "MixedEdge", ")", ":", "\n", "                ", "if", "not", "mb_conv", ".", "is_zero_layer", "(", ")", ":", "\n", "                    ", "out_fz", "=", "fsize", "//", "mb_conv", ".", "stride", "\n", "op_latency", "=", "latency_model", ".", "predict", "(", "\n", "'expanded_conv'", ",", "[", "fsize", ",", "fsize", ",", "mb_conv", ".", "in_channels", "]", ",", "[", "out_fz", ",", "out_fz", ",", "mb_conv", ".", "out_channels", "]", ",", "\n", "expand", "=", "mb_conv", ".", "expand_ratio", ",", "kernel", "=", "mb_conv", ".", "kernel_size", ",", "stride", "=", "mb_conv", ".", "stride", ",", "idskip", "=", "idskip", "\n", ")", "\n", "expected_latency", "=", "expected_latency", "+", "op_latency", "\n", "fsize", "=", "out_fz", "\n", "", "continue", "\n", "\n", "", "probs_over_ops", "=", "mb_conv", ".", "current_prob_over_ops", "\n", "out_fsize", "=", "fsize", "\n", "for", "i", ",", "op", "in", "enumerate", "(", "mb_conv", ".", "candidate_ops", ")", ":", "\n", "                ", "if", "op", "is", "None", "or", "op", ".", "is_zero_layer", "(", ")", ":", "\n", "                    ", "continue", "\n", "", "out_fsize", "=", "fsize", "//", "op", ".", "stride", "\n", "op_latency", "=", "latency_model", ".", "predict", "(", "\n", "'expanded_conv'", ",", "[", "fsize", ",", "fsize", ",", "op", ".", "in_channels", "]", ",", "[", "out_fsize", ",", "out_fsize", ",", "op", ".", "out_channels", "]", ",", "\n", "expand", "=", "op", ".", "expand_ratio", ",", "kernel", "=", "op", ".", "kernel_size", ",", "stride", "=", "op", ".", "stride", ",", "idskip", "=", "idskip", "\n", ")", "\n", "expected_latency", "=", "expected_latency", "+", "op_latency", "*", "probs_over_ops", "[", "i", "]", "\n", "", "fsize", "=", "out_fsize", "\n", "", "return", "expected_latency", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.expected_flops": [[235, 270], ["super_proxyless.SuperProxylessNASNets.first_conv.get_flops", "super_proxyless.SuperProxylessNASNets.feature_mix_layer.get_flops", "super_proxyless.SuperProxylessNASNets.global_avg_pooling", "block.view", "super_proxyless.SuperProxylessNASNets.classifier.get_flops", "enumerate", "block", "block.size", "isinstance", "block.get_flops", "block.shortcut.get_flops", "op.get_flops", "op.is_zero_layer"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer"], ["", "def", "expected_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "expected_flops", "=", "0", "\n", "# first conv", "\n", "flop", ",", "x", "=", "self", ".", "first_conv", ".", "get_flops", "(", "x", ")", "\n", "expected_flops", "+=", "flop", "\n", "# blocks", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "mb_conv", "=", "block", ".", "mobile_inverted_conv", "\n", "if", "not", "isinstance", "(", "mb_conv", ",", "MixedEdge", ")", ":", "\n", "                ", "delta_flop", ",", "x", "=", "block", ".", "get_flops", "(", "x", ")", "\n", "expected_flops", "=", "expected_flops", "+", "delta_flop", "\n", "continue", "\n", "\n", "", "if", "block", ".", "shortcut", "is", "None", ":", "\n", "                ", "shortcut_flop", "=", "0", "\n", "", "else", ":", "\n", "                ", "shortcut_flop", ",", "_", "=", "block", ".", "shortcut", ".", "get_flops", "(", "x", ")", "\n", "", "expected_flops", "=", "expected_flops", "+", "shortcut_flop", "\n", "\n", "probs_over_ops", "=", "mb_conv", ".", "current_prob_over_ops", "\n", "for", "i", ",", "op", "in", "enumerate", "(", "mb_conv", ".", "candidate_ops", ")", ":", "\n", "                ", "if", "op", "is", "None", "or", "op", ".", "is_zero_layer", "(", ")", ":", "\n", "                    ", "continue", "\n", "", "op_flops", ",", "_", "=", "op", ".", "get_flops", "(", "x", ")", "\n", "expected_flops", "=", "expected_flops", "+", "op_flops", "*", "probs_over_ops", "[", "i", "]", "\n", "", "x", "=", "block", "(", "x", ")", "\n", "# feature mix layer", "\n", "", "delta_flop", ",", "x", "=", "self", ".", "feature_mix_layer", ".", "get_flops", "(", "x", ")", "\n", "expected_flops", "=", "expected_flops", "+", "delta_flop", "\n", "# classifier", "\n", "x", "=", "self", ".", "global_avg_pooling", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# flatten", "\n", "delta_flop", ",", "x", "=", "self", ".", "classifier", ".", "get_flops", "(", "x", ")", "\n", "expected_flops", "=", "expected_flops", "+", "delta_flop", "\n", "return", "expected_flops", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.super_nets.super_proxyless.SuperProxylessNASNets.convert_to_normal_net": [[271, 285], ["queue.Queue.Queue", "queue.Queue.Queue.put", "ProxylessNASNets", "queue.Queue.Queue.empty", "queue.Queue.Queue.get", "list", "child.__str__().startswith", "queue.Queue.Queue.put", "child.__str__"], "methods", ["None"], ["", "def", "convert_to_normal_net", "(", "self", ")", ":", "\n", "        ", "queue", "=", "Queue", "(", ")", "\n", "queue", ".", "put", "(", "self", ")", "\n", "while", "not", "queue", ".", "empty", "(", ")", ":", "\n", "            ", "module", "=", "queue", ".", "get", "(", ")", "\n", "for", "m", "in", "module", ".", "_modules", ":", "\n", "                ", "child", "=", "module", ".", "_modules", "[", "m", "]", "\n", "if", "child", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "if", "child", ".", "__str__", "(", ")", ".", "startswith", "(", "'MixedEdge'", ")", ":", "\n", "                    ", "module", ".", "_modules", "[", "m", "]", "=", "child", ".", "chosen_op", "\n", "", "else", ":", "\n", "                    ", "queue", ".", "put", "(", "child", ")", "\n", "", "", "", "return", "ProxylessNASNets", "(", "self", ".", "first_conv", ",", "list", "(", "self", ".", "blocks", ")", ",", "self", ".", "feature_mix_layer", ",", "self", ".", "classifier", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.base_provider.DataProvider.name": [[13, 17], ["None"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "name", "(", ")", ":", "\n", "        ", "\"\"\" Return name of the dataset \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.base_provider.DataProvider.data_shape": [[18, 22], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "data_shape", "(", "self", ")", ":", "\n", "        ", "\"\"\" Return shape as python list of one data entry \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.base_provider.DataProvider.n_classes": [[23, 27], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "n_classes", "(", "self", ")", ":", "\n", "        ", "\"\"\" Return `int` of num classes \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.base_provider.DataProvider.save_path": [[28, 32], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "save_path", "(", "self", ")", ":", "\n", "        ", "\"\"\" local path to save the data \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.base_provider.DataProvider.data_url": [[33, 37], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "data_url", "(", "self", ")", ":", "\n", "        ", "\"\"\" link to download the data \"\"\"", "\n", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.base_provider.DataProvider.random_sample_valid_set": [[38, 64], ["len", "torch.Generator", "torch.Generator.manual_seed", "torch.randperm().tolist", "get_split_list", "isinstance", "torch.randperm", "int", "isinstance", "valid_indexes.append", "train_indexes.append", "numpy.argmax", "isinstance"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_split_list"], ["", "@", "staticmethod", "\n", "def", "random_sample_valid_set", "(", "train_labels", ",", "valid_size", ",", "n_classes", ")", ":", "\n", "        ", "train_size", "=", "len", "(", "train_labels", ")", "\n", "assert", "train_size", ">", "valid_size", "\n", "\n", "g", "=", "torch", ".", "Generator", "(", ")", "\n", "g", ".", "manual_seed", "(", "DataProvider", ".", "VALID_SEED", ")", "# set random seed before sampling validation set", "\n", "rand_indexes", "=", "torch", ".", "randperm", "(", "train_size", ",", "generator", "=", "g", ")", ".", "tolist", "(", ")", "\n", "\n", "train_indexes", ",", "valid_indexes", "=", "[", "]", ",", "[", "]", "\n", "per_class_remain", "=", "get_split_list", "(", "valid_size", ",", "n_classes", ")", "\n", "\n", "for", "idx", "in", "rand_indexes", ":", "\n", "            ", "label", "=", "train_labels", "[", "idx", "]", "\n", "if", "isinstance", "(", "label", ",", "float", ")", ":", "\n", "                ", "label", "=", "int", "(", "label", ")", "\n", "", "elif", "isinstance", "(", "label", ",", "np", ".", "ndarray", ")", ":", "\n", "                ", "label", "=", "np", ".", "argmax", "(", "label", ")", "\n", "", "else", ":", "\n", "                ", "assert", "isinstance", "(", "label", ",", "int", ")", "\n", "", "if", "per_class_remain", "[", "label", "]", ">", "0", ":", "\n", "                ", "valid_indexes", ".", "append", "(", "idx", ")", "\n", "per_class_remain", "[", "label", "]", "-=", "1", "\n", "", "else", ":", "\n", "                ", "train_indexes", ".", "append", "(", "idx", ")", "\n", "", "", "return", "train_indexes", ",", "valid_indexes", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.__init__": [[14, 65], ["imagenet.ImagenetDataProvider.build_train_transform", "torchvision.ImageFolder", "torchvision.ImageFolder", "torch.utils.data.DataLoader", "isinstance", "imagenet.ImagenetDataProvider.random_sample_valid_set", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torchvision.ImageFolder", "torchvision.ImageFolder", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.ImageFolder", "torchvision.ImageFolder", "int", "isinstance", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "len", "torchvision.Resize", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.Resize", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.build_train_transform", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.base_provider.DataProvider.random_sample_valid_set"], ["    ", "def", "__init__", "(", "self", ",", "save_path", "=", "None", ",", "train_batch_size", "=", "256", ",", "test_batch_size", "=", "512", ",", "valid_size", "=", "None", ",", "\n", "n_worker", "=", "32", ",", "resize_scale", "=", "0.08", ",", "distort_color", "=", "None", ")", ":", "\n", "\n", "        ", "self", ".", "_save_path", "=", "save_path", "\n", "train_transforms", "=", "self", ".", "build_train_transform", "(", "distort_color", ",", "resize_scale", ")", "\n", "train_dataset", "=", "datasets", ".", "ImageFolder", "(", "self", ".", "train_path", ",", "train_transforms", ")", "\n", "\n", "if", "valid_size", "is", "not", "None", ":", "\n", "            ", "if", "isinstance", "(", "valid_size", ",", "float", ")", ":", "\n", "                ", "valid_size", "=", "int", "(", "valid_size", "*", "len", "(", "train_dataset", ")", ")", "\n", "", "else", ":", "\n", "                ", "assert", "isinstance", "(", "valid_size", ",", "int", ")", ",", "'invalid valid_size: %s'", "%", "valid_size", "\n", "", "train_indexes", ",", "valid_indexes", "=", "self", ".", "random_sample_valid_set", "(", "\n", "[", "cls", "for", "_", ",", "cls", "in", "train_dataset", ".", "samples", "]", ",", "valid_size", ",", "self", ".", "n_classes", ",", "\n", ")", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "train_indexes", ")", "\n", "valid_sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "valid_indexes", ")", "\n", "\n", "valid_dataset", "=", "datasets", ".", "ImageFolder", "(", "self", ".", "train_path", ",", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "self", ".", "resize_value", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "self", ".", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "self", ".", "normalize", ",", "\n", "]", ")", ")", "\n", "\n", "self", ".", "train", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "train_batch_size", ",", "sampler", "=", "train_sampler", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "\n", ")", "\n", "self", ".", "valid", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "valid_dataset", ",", "batch_size", "=", "test_batch_size", ",", "sampler", "=", "valid_sampler", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "train", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "batch_size", "=", "train_batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "\n", ")", "\n", "self", ".", "valid", "=", "None", "\n", "\n", "", "self", ".", "test", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "self", ".", "valid_path", ",", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "self", ".", "resize_value", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "self", ".", "image_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "self", ".", "normalize", ",", "\n", "]", ")", ")", ",", "batch_size", "=", "test_batch_size", ",", "shuffle", "=", "False", ",", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "\n", ")", "\n", "\n", "if", "self", ".", "valid", "is", "None", ":", "\n", "            ", "self", ".", "valid", "=", "self", ".", "test", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.name": [[66, 69], ["None"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "name", "(", ")", ":", "\n", "        ", "return", "'imagenet'", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.data_shape": [[70, 73], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "data_shape", "(", "self", ")", ":", "\n", "        ", "return", "3", ",", "self", ".", "image_size", ",", "self", ".", "image_size", "# C, H, W", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.n_classes": [[74, 77], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "n_classes", "(", "self", ")", ":", "\n", "        ", "return", "1000", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.save_path": [[78, 83], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "save_path", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_save_path", "is", "None", ":", "\n", "            ", "self", ".", "_save_path", "=", "'/dataset/imagenet'", "\n", "", "return", "self", ".", "_save_path", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.data_url": [[84, 87], ["ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "data_url", "(", "self", ")", ":", "\n", "        ", "raise", "ValueError", "(", "'unable to download ImageNet'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.train_path": [[88, 91], ["os.path.join"], "methods", ["None"], ["", "@", "property", "\n", "def", "train_path", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "save_path", ",", "'train'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.valid_path": [[92, 95], ["os.path.join"], "methods", ["None"], ["", "@", "property", "\n", "def", "valid_path", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "self", ".", "_save_path", ",", "'val'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.normalize": [[96, 99], ["torchvision.Normalize", "torchvision.Normalize"], "methods", ["None"], ["", "@", "property", "\n", "def", "normalize", "(", "self", ")", ":", "\n", "        ", "return", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.build_train_transform": [[100, 124], ["print", "torchvision.ColorJitter", "torchvision.ColorJitter", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.Compose", "torchvision.ColorJitter", "torchvision.ColorJitter", "torchvision.RandomResizedCrop", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.ToTensor", "torchvision.RandomResizedCrop", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.ToTensor"], "methods", ["None"], ["", "def", "build_train_transform", "(", "self", ",", "distort_color", ",", "resize_scale", ")", ":", "\n", "        ", "print", "(", "'Color jitter: %s'", "%", "distort_color", ")", "\n", "if", "distort_color", "==", "'strong'", ":", "\n", "            ", "color_transform", "=", "transforms", ".", "ColorJitter", "(", "brightness", "=", "0.4", ",", "contrast", "=", "0.4", ",", "saturation", "=", "0.4", ",", "hue", "=", "0.1", ")", "\n", "", "elif", "distort_color", "==", "'normal'", ":", "\n", "            ", "color_transform", "=", "transforms", ".", "ColorJitter", "(", "brightness", "=", "32.", "/", "255.", ",", "saturation", "=", "0.5", ")", "\n", "", "else", ":", "\n", "            ", "color_transform", "=", "None", "\n", "", "if", "color_transform", "is", "None", ":", "\n", "            ", "train_transforms", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "self", ".", "image_size", ",", "scale", "=", "(", "resize_scale", ",", "1.0", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "self", ".", "normalize", ",", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "train_transforms", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "self", ".", "image_size", ",", "scale", "=", "(", "resize_scale", ",", "1.0", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "color_transform", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "self", ".", "normalize", ",", "\n", "]", ")", "\n", "", "return", "train_transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.resize_value": [[125, 128], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "resize_value", "(", "self", ")", ":", "\n", "        ", "return", "256", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.data_providers.imagenet.ImagenetDataProvider.image_size": [[129, 132], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "image_size", "(", "self", ")", ":", "\n", "        ", "return", "224", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.Metric.__init__": [[313, 317], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "sum", "=", "torch", ".", "tensor", "(", "0.", ")", "\n", "self", ".", "n", "=", "torch", ".", "tensor", "(", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.Metric.update": [[318, 321], ["horovod.allreduce", "val.detach().cpu", "val.detach"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ")", ":", "\n", "        ", "self", ".", "sum", "+=", "hvd", ".", "allreduce", "(", "val", ".", "detach", "(", ")", ".", "cpu", "(", ")", ",", "name", "=", "self", ".", "name", ")", "\n", "self", ".", "n", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.Metric.avg": [[322, 325], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "avg", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "sum", "/", "self", ".", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.train": [[200, 230], ["model.train", "train_sampler.set_epoch", "main.Metric", "main.Metric", "tqdm.tqdm", "enumerate", "log_writer.add_scalar", "log_writer.add_scalar", "main.adjust_learning_rate", "optimizer.zero_grad", "model", "criterion", "criterion.backward", "optimizer.step", "main.Metric.update", "main.Metric.update", "t.set_postfix", "t.update", "len", "main.accuracy", "data.cuda", "target.cuda", "main.Metric.avg", "main.Metric.avg"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.train", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.adjust_learning_rate", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.modules.mix_op.ArchGradientFunction.backward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.accuracy", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.Metric.avg", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.Metric.avg"], ["def", "train", "(", "epoch", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "train_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "train_loss", "=", "Metric", "(", "'train_loss'", ")", "\n", "train_accuracy", "=", "Metric", "(", "'train_accuracy'", ")", "\n", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "train_loader", ")", ",", "\n", "desc", "=", "'Train Epoch     #{}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "\n", "disable", "=", "not", "verbose", ")", "as", "t", ":", "\n", "        ", "for", "batch_idx", ",", "(", "data", ",", "target", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "lr_cur", "=", "adjust_learning_rate", "(", "epoch", ",", "batch_idx", ",", "type", "=", "args", ".", "lr_scheduler", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "                ", "data", ",", "target", "=", "data", ".", "cuda", "(", ")", ",", "target", ".", "cuda", "(", ")", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "data", ")", "\n", "loss", "=", "criterion", "(", "output", ",", "target", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "train_loss", ".", "update", "(", "loss", ")", "\n", "train_accuracy", ".", "update", "(", "accuracy", "(", "output", ",", "target", ")", ")", "\n", "t", ".", "set_postfix", "(", "{", "'loss'", ":", "train_loss", ".", "avg", ".", "item", "(", ")", ",", "\n", "'accuracy'", ":", "100.", "*", "train_accuracy", ".", "avg", ".", "item", "(", ")", ",", "\n", "'lr'", ":", "lr_cur", "}", ")", "\n", "t", ".", "update", "(", "1", ")", "\n", "\n", "", "", "if", "log_writer", ":", "\n", "        ", "log_writer", ".", "add_scalar", "(", "'train/loss'", ",", "train_loss", ".", "avg", ",", "epoch", ")", "\n", "log_writer", ".", "add_scalar", "(", "'train/accuracy'", ",", "train_accuracy", ".", "avg", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.validate": [[232, 261], ["model.eval", "main.Metric", "main.Metric", "tqdm.tqdm", "log_writer.add_scalar", "log_writer.add_scalar", "max", "log_writer.add_scalar", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "len", "model", "main.Metric.update", "main.Metric.update", "t.set_postfix", "t.update", "criterion", "main.accuracy", "data.cuda", "target.cuda", "main.Metric.avg", "main.Metric.avg"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.accuracy", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.Metric.avg", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.Metric.avg"], ["", "", "def", "validate", "(", "epoch", ",", ")", ":", "\n", "    ", "global", "best_val_acc", "\n", "model", ".", "eval", "(", ")", "\n", "val_loss", "=", "Metric", "(", "'val_loss'", ")", "\n", "val_accuracy", "=", "Metric", "(", "'val_accuracy'", ")", "\n", "\n", "with", "tqdm", "(", "total", "=", "len", "(", "val_loader", ")", ",", "\n", "desc", "=", "'Validate Epoch  #{}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "\n", "disable", "=", "not", "verbose", ")", "as", "t", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "data", ",", "target", "in", "val_loader", ":", "\n", "                ", "if", "args", ".", "cuda", ":", "\n", "                    ", "data", ",", "target", "=", "data", ".", "cuda", "(", ")", ",", "target", ".", "cuda", "(", ")", "\n", "", "output", "=", "model", "(", "data", ")", "\n", "\n", "val_loss", ".", "update", "(", "criterion", "(", "output", ",", "target", ")", ")", "\n", "val_accuracy", ".", "update", "(", "accuracy", "(", "output", ",", "target", ")", ")", "\n", "t", ".", "set_postfix", "(", "{", "'loss'", ":", "val_loss", ".", "avg", ".", "item", "(", ")", ",", "\n", "'accuracy'", ":", "100.", "*", "val_accuracy", ".", "avg", ".", "item", "(", ")", "}", ")", "\n", "t", ".", "update", "(", "1", ")", "\n", "\n", "", "", "", "if", "log_writer", ":", "\n", "        ", "log_writer", ".", "add_scalar", "(", "'val/loss'", ",", "val_loss", ".", "avg", ",", "epoch", ")", "\n", "log_writer", ".", "add_scalar", "(", "'val/accuracy'", ",", "val_accuracy", ".", "avg", ",", "epoch", ")", "\n", "best_val_acc", "=", "max", "(", "best_val_acc", ",", "val_accuracy", ".", "avg", ")", "\n", "log_writer", ".", "add_scalar", "(", "'val/best_acc'", ",", "best_val_acc", ",", "epoch", ")", "\n", "\n", "\n", "", "return", "val_accuracy", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.adjust_learning_rate": [[267, 292], ["float", "len", "horovod.size", "horovod.size", "float", "horovod.size", "float", "len", "math.cos", "horovod.size", "len"], "function", ["None"], ["def", "adjust_learning_rate", "(", "epoch", ",", "batch_idx", ",", "type", "=", "\"cosine\"", ")", ":", "\n", "    ", "if", "epoch", "<", "args", ".", "warmup_epochs", ":", "\n", "        ", "epoch", "+=", "float", "(", "batch_idx", "+", "1", ")", "/", "len", "(", "train_loader", ")", "\n", "lr_adj", "=", "1.", "/", "hvd", ".", "size", "(", ")", "*", "(", "epoch", "*", "(", "hvd", ".", "size", "(", ")", "-", "1", ")", "/", "args", ".", "warmup_epochs", "+", "1", ")", "\n", "", "elif", "type", "==", "\"linear\"", ":", "\n", "        ", "if", "epoch", "<", "30", ":", "\n", "            ", "lr_adj", "=", "1.", "\n", "", "elif", "epoch", "<", "60", ":", "\n", "            ", "lr_adj", "=", "1e-1", "\n", "", "elif", "epoch", "<", "90", ":", "\n", "            ", "lr_adj", "=", "1e-2", "\n", "", "else", ":", "\n", "            ", "lr_adj", "=", "1e-3", "\n", "", "", "elif", "type", "==", "\"cosine\"", ":", "\n", "# self.init_lr * 0.5 * (1 + math.cos(math.pi * T_cur / T_total))", "\n", "        ", "run_epochs", "=", "epoch", "-", "args", ".", "warmup_epochs", "\n", "total_epochs", "=", "args", ".", "epochs", "-", "args", ".", "warmup_epochs", "\n", "T_cur", "=", "float", "(", "run_epochs", "*", "len", "(", "train_loader", ")", ")", "+", "batch_idx", "\n", "T_total", "=", "float", "(", "total_epochs", "*", "len", "(", "train_loader", ")", ")", "\n", "\n", "lr_adj", "=", "0.5", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "T_cur", "/", "T_total", ")", ")", "\n", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "args", ".", "base_lr", "*", "hvd", ".", "size", "(", ")", "*", "lr_adj", "\n", "", "return", "args", ".", "base_lr", "*", "hvd", ".", "size", "(", ")", "*", "lr_adj", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.accuracy": [[294, 298], ["pred.eq().cpu().float().mean", "output.max", "pred.eq().cpu().float", "pred.eq().cpu", "pred.eq", "target.view_as"], "function", ["None"], ["", "def", "accuracy", "(", "output", ",", "target", ")", ":", "\n", "# get the index of the max log-probability", "\n", "    ", "pred", "=", "output", ".", "max", "(", "1", ",", "keepdim", "=", "True", ")", "[", "1", "]", "\n", "return", "pred", ".", "eq", "(", "target", ".", "view_as", "(", "pred", ")", ")", ".", "cpu", "(", ")", ".", "float", "(", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.training.main.save_checkpoint": [[300, 309], ["horovod.rank", "os.remove", "os.remove", "args.checkpoint_format.format", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "args.checkpoint_format.format", "model.state_dict", "optimizer.state_dict"], "function", ["None"], ["", "def", "save_checkpoint", "(", "epoch", ")", ":", "\n", "    ", "if", "hvd", ".", "rank", "(", ")", "==", "0", ":", "\n", "        ", "os", ".", "remove", "(", "args", ".", "checkpoint_format", ".", "format", "(", "epoch", "=", "epoch", ")", ")", "\n", "filepath", "=", "args", ".", "checkpoint_format", ".", "format", "(", "epoch", "=", "epoch", "+", "1", ")", "\n", "state", "=", "{", "\n", "'model'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optimizer'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "}", "\n", "torch", ".", "save", "(", "state", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.InvertedResidual.__init__": [[25, 56], ["torch.Module.__init__", "round", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.Conv2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.Conv2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", ",", "expand_ratio", ")", ":", "\n", "        ", "super", "(", "InvertedResidual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "assert", "stride", "in", "[", "1", ",", "2", "]", "\n", "\n", "hidden_dim", "=", "round", "(", "inp", "*", "expand_ratio", ")", "\n", "self", ".", "use_res_connect", "=", "self", ".", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "\n", "if", "expand_ratio", "==", "1", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "hidden_dim", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.InvertedResidual.forward": [[58, 63], ["mobilenetv2.InvertedResidual.conv", "mobilenetv2.InvertedResidual.conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "use_res_connect", ":", "\n", "            ", "return", "x", "+", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.MobileNetV2.__init__": [[66, 108], ["torch.Module.__init__", "int", "mobilenetv2.MobileNetV2.features.append", "torch.Sequential", "torch.Sequential", "mobilenetv2.MobileNetV2._initialize_weights", "int", "mobilenetv2.conv_bn", "int", "range", "mobilenetv2.conv_1x1_bn", "torch.Dropout", "torch.Linear", "mobilenetv2.MobileNetV2.features.append", "mobilenetv2.MobileNetV2.features.append", "block", "block"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.MobileNetV2._initialize_weights", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.conv_bn", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.conv_1x1_bn"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ",", "input_size", "=", "224", ",", "width_mult", "=", "1.", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "block", "=", "InvertedResidual", "\n", "input_channel", "=", "32", "\n", "last_channel", "=", "1280", "\n", "interverted_residual_setting", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "2", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "\n", "# building first layer", "\n", "assert", "input_size", "%", "32", "==", "0", "\n", "input_channel", "=", "int", "(", "input_channel", "*", "width_mult", ")", "\n", "self", ".", "last_channel", "=", "int", "(", "last_channel", "*", "width_mult", ")", "if", "width_mult", ">", "1.0", "else", "last_channel", "\n", "self", ".", "features", "=", "[", "conv_bn", "(", "3", ",", "input_channel", ",", "2", ")", "]", "\n", "# building inverted residual blocks", "\n", "for", "t", ",", "c", ",", "n", ",", "s", "in", "interverted_residual_setting", ":", "\n", "            ", "output_channel", "=", "int", "(", "c", "*", "width_mult", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "self", ".", "features", ".", "append", "(", "block", "(", "input_channel", ",", "output_channel", ",", "s", ",", "expand_ratio", "=", "t", ")", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "features", ".", "append", "(", "block", "(", "input_channel", ",", "output_channel", ",", "1", ",", "expand_ratio", "=", "t", ")", ")", "\n", "", "input_channel", "=", "output_channel", "\n", "# building last several layers", "\n", "", "", "self", ".", "features", ".", "append", "(", "conv_1x1_bn", "(", "input_channel", ",", "self", ".", "last_channel", ")", ")", "\n", "# make it nn.Sequential", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "self", ".", "features", ")", "\n", "\n", "# building classifier", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "Linear", "(", "self", ".", "last_channel", ",", "num_classes", ")", ",", "\n", ")", "\n", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.MobileNetV2.forward": [[109, 114], ["mobilenetv2.MobileNetV2.features", "mobilenetv2.MobileNetV2.mean().mean", "mobilenetv2.MobileNetV2.classifier", "mobilenetv2.MobileNetV2.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "mean", "(", "3", ")", ".", "mean", "(", "2", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.MobileNetV2._initialize_weights": [[115, 129], ["mobilenetv2.MobileNetV2.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.bias.data.zero_", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.size", "m.weight.data.normal_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "n", "=", "m", ".", "weight", ".", "size", "(", "1", ")", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.conv_bn": [[8, 13], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["def", "conv_bn", "(", "inp", ",", "oup", ",", "stride", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "3", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.conv_1x1_bn": [[16, 21], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["", "def", "conv_1x1_bn", "(", "inp", ",", "oup", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.mobilenetv2_10": [[135, 139], ["functools.partial", "functools.partial."], "function", ["None"], ["def", "mobilenetv2_10", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "net", "=", "functools", ".", "partial", "(", "MobileNetV2", ",", "width_mult", "=", "1.0", ")", "\n", "model", "=", "net", "(", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.mobilenetv2_05": [[141, 145], ["functools.partial", "functools.partial."], "function", ["None"], ["", "def", "mobilenetv2_05", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "net", "=", "functools", ".", "partial", "(", "MobileNetV2", ",", "width_mult", "=", "0.5", ")", "\n", "model", "=", "net", "(", "**", "kwargs", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.mobilenetv2.mobilenetv2_14": [[147, 151], ["functools.partial", "functools.partial."], "function", ["None"], ["", "def", "mobilenetv2_14", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "net", "=", "functools", ".", "partial", "(", "MobileNetV2", ",", "width_mult", "=", "1.4", ")", "\n", "model", "=", "net", "(", "**", "kwargs", ")", "\n", "return", "model", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.BasicBlock.__init__": [[29, 38], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.conv3x3", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.BasicBlock.forward": [[39, 56], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.Bottleneck.__init__": [[61, 73], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.Bottleneck.forward": [[74, 95], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.ResNet.__init__": [[99, 121], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "resnet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ",", "stride", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.ResNet._make_layer": [[122, 138], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.ResNet.forward": [[139, 155], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "resnet.ResNet.view", "resnet.ResNet.fc", "resnet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.conv3x3": [[20, 24], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.resnet18": [[157, 167], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.load_url"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.resnet34": [[169, 179], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.load_url"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.resnet50": [[181, 191], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.load_url"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.resnet101": [[193, 203], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.load_url"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.net224x224.resnet.resnet152": [[205, 215], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.load_url"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.__init__": [[21, 48], ["utils.BasicUnit.__init__", "nn.ModuleList", "nn.ModuleList", "nn.ModuleList", "len", "len", "branch_bns.append", "nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "edges", ",", "child_nodes", ",", "in_channels", ",", "out_channels", ",", "\n", "split_type", "=", "'copy'", ",", "merge_type", "=", "'add'", ",", "has_branch_bn", "=", "False", ",", "path_drop_rate", "=", "0", ")", ":", "\n", "        ", "super", "(", "TreeNode", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "self", ".", "split_type", "=", "split_type", "\n", "self", ".", "merge_type", "=", "merge_type", "\n", "\n", "self", ".", "has_branch_bn", "=", "has_branch_bn", "\n", "\n", "self", ".", "path_drop_rate", "=", "path_drop_rate", "\n", "\n", "assert", "len", "(", "edges", ")", "==", "len", "(", "child_nodes", ")", "\n", "\n", "\"\"\" add modules \"\"\"", "\n", "self", ".", "edges", "=", "nn", ".", "ModuleList", "(", "edges", ")", "\n", "self", ".", "child_nodes", "=", "nn", ".", "ModuleList", "(", "child_nodes", ")", "\n", "\n", "# branch batch norm (skip node bn)", "\n", "if", "self", ".", "has_branch_bn", ":", "\n", "            ", "branch_bns", "=", "[", "]", "\n", "for", "out_dim", "in", "self", ".", "out_dim_list", ":", "\n", "                ", "branch_bns", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_dim", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "branch_bns", "=", "[", "None", "]", "*", "self", ".", "child_num", "\n", "", "self", ".", "branch_bns", "=", "nn", ".", "ModuleList", "(", "branch_bns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.child_num": [[49, 52], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "child_num", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "edges", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.in_dim_list": [[53, 63], ["utils.get_split_list"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_split_list"], ["", "@", "property", "\n", "def", "in_dim_list", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "split_type", "==", "'copy'", ":", "\n", "            ", "in_dim_list", "=", "[", "self", ".", "in_channels", "]", "*", "self", ".", "child_num", "\n", "", "elif", "self", ".", "split_type", "==", "'split'", ":", "\n", "            ", "in_dim_list", "=", "get_split_list", "(", "self", ".", "in_channels", ",", "self", ".", "child_num", ")", "\n", "", "else", ":", "\n", "            ", "assert", "self", ".", "child_num", "==", "1", "\n", "in_dim_list", "=", "[", "self", ".", "in_channels", "]", "\n", "", "return", "in_dim_list", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.out_dim_list": [[64, 74], ["utils.get_split_list"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_split_list"], ["", "@", "property", "\n", "def", "out_dim_list", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "merge_type", "==", "'add'", ":", "\n", "            ", "out_dim_list", "=", "[", "self", ".", "out_channels", "]", "*", "self", ".", "child_num", "\n", "", "elif", "self", ".", "merge_type", "==", "'concat'", ":", "\n", "            ", "out_dim_list", "=", "get_split_list", "(", "self", ".", "out_channels", ",", "self", ".", "child_num", ")", "\n", "", "else", ":", "\n", "            ", "assert", "self", ".", "child_num", "==", "1", "\n", "out_dim_list", "=", "[", "self", ".", "out_channels", "]", "\n", "", "return", "out_dim_list", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.get_node": [[75, 80], ["None"], "methods", ["None"], ["", "def", "get_node", "(", "self", ",", "path2node", ")", ":", "\n", "        ", "node", "=", "self", "\n", "for", "step", "in", "path2node", ":", "\n", "            ", "node", "=", "node", ".", "child_nodes", "[", "step", "]", "\n", "", "return", "node", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.allocation_scheme": [[81, 93], ["x[].contiguous", "child_inputs.append"], "methods", ["None"], ["", "def", "allocation_scheme", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "split_type", "==", "'copy'", ":", "\n", "            ", "child_inputs", "=", "[", "x", "]", "*", "self", ".", "child_num", "\n", "", "elif", "self", ".", "split_type", "==", "'split'", ":", "\n", "            ", "child_inputs", ",", "_pt", "=", "[", "]", ",", "0", "\n", "for", "seg_size", "in", "self", ".", "in_dim_list", ":", "\n", "                ", "seg_x", "=", "x", "[", ":", ",", "_pt", ":", "_pt", "+", "seg_size", ",", ":", ",", ":", "]", ".", "contiguous", "(", ")", "# split in the channel dimension", "\n", "child_inputs", ".", "append", "(", "seg_x", ")", "\n", "_pt", "+=", "seg_size", "\n", "", "", "else", ":", "\n", "            ", "child_inputs", "=", "[", "x", "]", "\n", "", "return", "child_inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.merge_scheme": [[94, 103], ["torch.cat", "utils.list_sum", "len"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.list_sum"], ["", "def", "merge_scheme", "(", "self", ",", "child_outputs", ")", ":", "\n", "        ", "if", "self", ".", "merge_type", "==", "'concat'", ":", "\n", "            ", "output", "=", "torch", ".", "cat", "(", "child_outputs", ",", "dim", "=", "1", ")", "\n", "", "elif", "self", ".", "merge_type", "==", "'add'", ":", "\n", "            ", "output", "=", "list_sum", "(", "child_outputs", ")", "\n", "", "else", ":", "\n", "            ", "assert", "len", "(", "child_outputs", ")", "==", "1", "\n", "output", "=", "child_outputs", "[", "0", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.path_normal_forward": [[104, 115], ["edge", "child", "branch_bn"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "path_normal_forward", "(", "x", ",", "edge", "=", "None", ",", "child", "=", "None", ",", "branch_bn", "=", "None", ")", ":", "\n", "        ", "if", "edge", "is", "not", "None", ":", "\n", "            ", "x", "=", "edge", "(", "x", ")", "\n", "", "edge_x", "=", "x", "\n", "if", "child", "is", "not", "None", ":", "\n", "            ", "x", "=", "child", "(", "x", ")", "\n", "", "if", "branch_bn", "is", "not", "None", ":", "\n", "            ", "x", "=", "branch_bn", "(", "x", ")", "\n", "x", "=", "x", "+", "edge_x", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.path_drop_forward": [[116, 141], ["cifar_modules.TreeNode.path_normal_forward", "random.uniform", "cifar_modules.TreeNode.path_normal_forward", "edge.__dict__.get", "torch.zeros", "cifar_modules.TreeNode.path_normal_forward", "x.size", "x.size"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.path_normal_forward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.path_normal_forward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.path_normal_forward"], ["", "def", "path_drop_forward", "(", "self", ",", "x", ",", "branch_idx", ")", ":", "\n", "        ", "edge", ",", "child", ",", "branch_bn", "=", "self", ".", "edges", "[", "branch_idx", "]", ",", "self", ".", "child_nodes", "[", "branch_idx", "]", ",", "self", ".", "branch_bns", "[", "branch_idx", "]", "\n", "\n", "if", "self", ".", "path_drop_rate", ">", "0", ":", "\n", "            ", "if", "self", ".", "training", ":", "\n", "# train", "\n", "                ", "p", "=", "random", ".", "uniform", "(", "0", ",", "1", ")", "\n", "drop_flag", "=", "p", "<", "self", ".", "path_drop_rate", "\n", "if", "drop_flag", ":", "\n", "                    ", "batch_size", "=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "feature_map_size", "=", "x", ".", "size", "(", ")", "[", "2", ":", "4", "]", "\n", "stride", "=", "edge", ".", "__dict__", ".", "get", "(", "'stride'", ",", "1", ")", "\n", "out_channels", "=", "self", ".", "out_dim_list", "[", "branch_idx", "]", "\n", "padding", "=", "torch", ".", "zeros", "(", "batch_size", ",", "out_channels", ",", "\n", "feature_map_size", "[", "0", "]", "//", "stride", ",", "feature_map_size", "[", "1", "]", "//", "stride", ",", "device", "=", "x", ".", "device", ")", "\n", "path_out", "=", "padding", "\n", "", "else", ":", "\n", "                    ", "path_out", "=", "self", ".", "path_normal_forward", "(", "x", ",", "edge", ",", "child", ",", "branch_bn", ")", "\n", "", "", "else", ":", "\n", "# test", "\n", "                ", "path_out", "=", "self", ".", "path_normal_forward", "(", "x", ",", "edge", ",", "child", ",", "branch_bn", ")", "\n", "path_out", "=", "path_out", "*", "(", "1", "-", "self", ".", "path_drop_rate", ")", "\n", "", "", "else", ":", "\n", "            ", "path_out", "=", "self", ".", "path_normal_forward", "(", "x", ",", "edge", ",", "child", ",", "branch_bn", ")", "\n", "", "return", "path_out", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.forward": [[144, 154], ["cifar_modules.TreeNode.allocation_scheme", "range", "cifar_modules.TreeNode.merge_scheme", "cifar_modules.TreeNode.path_drop_forward", "child_outputs.append"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.allocation_scheme", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.merge_scheme", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.path_drop_forward"], ["def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "child_inputs", "=", "self", ".", "allocation_scheme", "(", "x", ")", "\n", "\n", "child_outputs", "=", "[", "]", "\n", "for", "branch_idx", "in", "range", "(", "self", ".", "child_num", ")", ":", "\n", "            ", "path_out", "=", "self", ".", "path_drop_forward", "(", "child_inputs", "[", "branch_idx", "]", ",", "branch_idx", ")", "\n", "child_outputs", ".", "append", "(", "path_out", ")", "\n", "\n", "", "output", "=", "self", ".", "merge_scheme", "(", "child_outputs", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.unit_str": [[155, 166], ["enumerate", "children_str.append"], "methods", ["None"], ["", "@", "property", "\n", "def", "unit_str", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "child_num", ">", "0", ":", "\n", "            ", "children_str", "=", "[", "]", "\n", "for", "_i", ",", "child", "in", "enumerate", "(", "self", ".", "child_nodes", ")", ":", "\n", "                ", "child_str", "=", "None", "if", "child", "is", "None", "else", "child", ".", "unit_str", "\n", "children_str", ".", "append", "(", "'%s=>%s'", "%", "(", "self", ".", "edges", "[", "_i", "]", ".", "unit_str", ",", "child_str", ")", ")", "\n", "", "children_str", "=", "'[%s]'", "%", "', '", ".", "join", "(", "children_str", ")", "\n", "", "else", ":", "\n", "            ", "children_str", "=", "None", "\n", "", "return", "'T(%s-%s, %s)'", "%", "(", "self", ".", "merge_type", ",", "self", ".", "split_type", ",", "children_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.config": [[167, 182], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "TreeNode", ".", "__name__", ",", "\n", "'in_channels'", ":", "self", ".", "in_channels", ",", "\n", "'out_channels'", ":", "self", ".", "out_channels", ",", "\n", "'split_type'", ":", "self", ".", "split_type", ",", "\n", "'merge_type'", ":", "self", ".", "merge_type", ",", "\n", "'has_branch_bn'", ":", "self", ".", "has_branch_bn", ",", "\n", "'path_drop_rate'", ":", "self", ".", "path_drop_rate", ",", "\n", "'edges'", ":", "[", "\n", "edge", ".", "config", "if", "edge", "is", "not", "None", "else", "None", "for", "edge", "in", "self", ".", "edges", "\n", "]", ",", "\n", "'child_nodes'", ":", "[", "\n", "child", ".", "config", "if", "child", "is", "not", "None", "else", "None", "for", "child", "in", "self", ".", "child_nodes", "\n", "]", ",", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.build_from_config": [[185, 196], ["config.pop", "config.pop", "cifar_modules.TreeNode", "config.pop", "edges.append", "child_nodes.append", "layers.set_layer_from_config", "cifar_modules.TreeNode.build_from_config"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "if", "'name'", "in", "config", ":", "\n", "            ", "config", ".", "pop", "(", "'name'", ")", "\n", "", "edges", "=", "[", "]", "\n", "for", "edge_config", "in", "config", ".", "pop", "(", "'edges'", ")", ":", "\n", "            ", "edges", ".", "append", "(", "set_layer_from_config", "(", "edge_config", ")", ")", "\n", "", "child_nodes", "=", "[", "]", "\n", "for", "child_config", "in", "config", ".", "pop", "(", "'child_nodes'", ")", ":", "\n", "            ", "child_nodes", ".", "append", "(", "TreeNode", ".", "build_from_config", "(", "child_config", ")", "if", "child_config", "is", "not", "None", "else", "None", ")", "\n", "", "return", "TreeNode", "(", "edges", "=", "edges", ",", "child_nodes", "=", "child_nodes", ",", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.get_flops": [[197, 213], ["cifar_modules.TreeNode.allocation_scheme", "range", "cifar_modules.TreeNode.merge_scheme", "child_outputs.append", "edge.get_flops", "child.get_flops"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.allocation_scheme", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TreeNode.merge_scheme", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "child_inputs", "=", "self", ".", "allocation_scheme", "(", "x", ")", "\n", "\n", "child_outputs", "=", "[", "]", "\n", "flops", "=", "0", "\n", "for", "branch_idx", "in", "range", "(", "self", ".", "child_num", ")", ":", "\n", "            ", "edge", ",", "child", ",", "branch_x", "=", "self", ".", "edges", "[", "branch_idx", "]", ",", "self", ".", "child_nodes", "[", "branch_idx", "]", ",", "child_inputs", "[", "branch_idx", "]", "\n", "if", "edge", "is", "not", "None", ":", "\n", "                ", "edge_flop", ",", "branch_x", "=", "edge", ".", "get_flops", "(", "branch_x", ")", "\n", "flops", "+=", "edge_flop", "\n", "", "if", "child", "is", "not", "None", ":", "\n", "                ", "child_flop", ",", "branch_x", "=", "child", ".", "get_flops", "(", "branch_x", ")", "\n", "flops", "+=", "child_flop", "\n", "", "child_outputs", ".", "append", "(", "branch_x", ")", "\n", "", "output", "=", "self", ".", "merge_scheme", "(", "child_outputs", ")", "\n", "return", "flops", ",", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TransitionBlock.__init__": [[216, 220], ["utils.BasicUnit.__init__", "nn.ModuleList"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ")", ":", "\n", "        ", "super", "(", "TransitionBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "layers", "=", "nn", ".", "ModuleList", "(", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TransitionBlock.forward": [[221, 225], ["layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "x", "=", "layer", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TransitionBlock.unit_str": [[226, 229], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "unit_str", "(", "self", ")", ":", "\n", "        ", "return", "'TransitionBlock'", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TransitionBlock.config": [[230, 236], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "TransitionBlock", ".", "__name__", ",", "\n", "'layers'", ":", "[", "\n", "layer", ".", "config", "for", "layer", "in", "self", ".", "layers", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TransitionBlock.build_from_config": [[239, 247], ["config.get", "cifar_modules.TransitionBlock", "layers.set_layer_from_config", "layers.append"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "layer_config", "in", "config", ".", "get", "(", "'layers'", ")", ":", "\n", "            ", "layer", "=", "set_layer_from_config", "(", "layer_config", ")", "\n", "layers", ".", "append", "(", "layer", ")", "\n", "", "block", "=", "TransitionBlock", "(", "layers", ")", "\n", "return", "block", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.TransitionBlock.get_flops": [[248, 254], ["layer.get_flops"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "flop", "=", "0", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "delta_flop", ",", "x", "=", "layer", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "", "return", "flop", ",", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.__init__": [[257, 271], ["utils.BasicUnit.__init__", "nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cell", ",", "in_bottle", ",", "out_bottle", ",", "shortcut", ",", "final_bn", "=", "True", ",", "cell_drop_rate", "=", "0", ")", ":", "\n", "        ", "super", "(", "ResidualTreeBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_bottle", "=", "in_bottle", "\n", "self", ".", "out_bottle", "=", "out_bottle", "\n", "self", ".", "shortcut", "=", "shortcut", "\n", "self", ".", "cell", "=", "cell", "\n", "\n", "if", "final_bn", ":", "\n", "            ", "self", ".", "final_bn", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "out_channels", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "final_bn", "=", "None", "\n", "\n", "", "self", ".", "cell_drop_rate", "=", "cell_drop_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.out_channels": [[272, 279], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "out_channels", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "out_bottle", "is", "None", ":", "\n", "            ", "out_channels", "=", "self", ".", "cell", ".", "out_channels", "\n", "", "else", ":", "\n", "            ", "out_channels", "=", "self", ".", "out_bottle", ".", "out_channels", "\n", "", "return", "out_channels", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.cell_normal_forward": [[280, 291], ["cifar_modules.ResidualTreeBlock.cell", "cifar_modules.ResidualTreeBlock.in_bottle", "cifar_modules.ResidualTreeBlock.out_bottle", "cifar_modules.ResidualTreeBlock.final_bn"], "methods", ["None"], ["", "def", "cell_normal_forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "in_bottle", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "in_bottle", "(", "x", ")", "\n", "\n", "", "x", "=", "self", ".", "cell", "(", "x", ")", "\n", "\n", "if", "self", ".", "out_bottle", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "out_bottle", "(", "x", ")", "\n", "", "if", "self", ".", "final_bn", ":", "\n", "            ", "x", "=", "self", ".", "final_bn", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.forward": [[292, 320], ["cifar_modules.ResidualTreeBlock.shortcut", "torch.cat.size", "torch.cat.size", "cifar_modules.ResidualTreeBlock.cell_normal_forward", "cifar_modules.ResidualTreeBlock.size", "torch.cat.size", "torch.zeros", "torch.cat", "random.uniform", "torch.zeros", "cifar_modules.ResidualTreeBlock.cell_normal_forward", "cifar_modules.ResidualTreeBlock.cell_normal_forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.cell_normal_forward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.cell_normal_forward", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.cell_normal_forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "_x", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "batch_size", "=", "_x", ".", "size", "(", ")", "[", "0", "]", "\n", "feature_map", "=", "_x", ".", "size", "(", ")", "[", "2", ":", "4", "]", "\n", "\n", "if", "self", ".", "cell_drop_rate", ">", "0", ":", "\n", "            ", "if", "self", ".", "training", ":", "\n", "# train", "\n", "                ", "p", "=", "random", ".", "uniform", "(", "0", ",", "1", ")", "\n", "drop_flag", "=", "p", "<", "self", ".", "cell_drop_rate", "\n", "if", "drop_flag", ":", "\n", "                    ", "x", "=", "torch", ".", "zeros", "(", "batch_size", ",", "self", ".", "out_channels", ",", "feature_map", "[", "0", "]", ",", "feature_map", "[", "1", "]", ",", "x", ".", "device", ")", "\n", "", "else", ":", "\n", "                    ", "x", "=", "self", ".", "cell_normal_forward", "(", "x", ")", "\n", "", "", "else", ":", "\n", "# test", "\n", "                ", "x", "=", "self", ".", "cell_normal_forward", "(", "x", ")", "*", "(", "1", "-", "self", ".", "cell_drop_rate", ")", "\n", "", "", "else", ":", "\n", "            ", "x", "=", "self", ".", "cell_normal_forward", "(", "x", ")", "\n", "\n", "", "residual_channel", "=", "x", ".", "size", "(", ")", "[", "1", "]", "\n", "shortcut_channel", "=", "_x", ".", "size", "(", ")", "[", "1", "]", "\n", "if", "residual_channel", "!=", "shortcut_channel", ":", "\n", "            ", "padding", "=", "torch", ".", "zeros", "(", "batch_size", ",", "residual_channel", "-", "shortcut_channel", ",", "feature_map", "[", "0", "]", ",", "feature_map", "[", "1", "]", ",", "\n", "device", "=", "x", ".", "device", ")", "\n", "_x", "=", "torch", ".", "cat", "(", "(", "_x", ",", "padding", ")", ",", "1", ")", "\n", "\n", "", "return", "_x", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.unit_str": [[321, 324], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "unit_str", "(", "self", ")", ":", "\n", "        ", "return", "'ResidualTreeBlock'", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.config": [[325, 335], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "ResidualTreeBlock", ".", "__name__", ",", "\n", "'cell_drop_rate'", ":", "self", ".", "cell_drop_rate", ",", "\n", "'final_bn'", ":", "self", ".", "final_bn", "is", "not", "None", ",", "\n", "'shortcut'", ":", "self", ".", "shortcut", ".", "config", ",", "\n", "'in_bottle'", ":", "self", ".", "in_bottle", ".", "config", ",", "\n", "'out_bottle'", ":", "self", ".", "out_bottle", ".", "config", ",", "\n", "'cell'", ":", "self", ".", "cell", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.build_from_config": [[337, 348], ["layers.set_layer_from_config", "layers.set_layer_from_config", "layers.set_layer_from_config", "cifar_modules.TreeNode.build_from_config", "config.get", "config.get", "cifar_modules.ResidualTreeBlock", "config.get", "config.get", "config.get", "config.get"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "in_bottle", "=", "set_layer_from_config", "(", "config", ".", "get", "(", "'in_bottle'", ")", ")", "\n", "out_bottle", "=", "set_layer_from_config", "(", "config", ".", "get", "(", "'out_bottle'", ")", ")", "\n", "\n", "shortcut", "=", "set_layer_from_config", "(", "config", ".", "get", "(", "'shortcut'", ")", ")", "\n", "cell", "=", "TreeNode", ".", "build_from_config", "(", "config", ".", "get", "(", "'cell'", ")", ")", "\n", "final_bn", "=", "config", ".", "get", "(", "'final_bn'", ")", "\n", "cell_drop_rate", "=", "config", ".", "get", "(", "'cell_drop_rate'", ")", "\n", "\n", "return", "ResidualTreeBlock", "(", "cell", ",", "in_bottle", ",", "out_bottle", ",", "shortcut", ",", "final_bn", ",", "cell_drop_rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.ResidualTreeBlock.get_flops": [[349, 373], ["cifar_modules.ResidualTreeBlock.shortcut.get_flops", "cifar_modules.ResidualTreeBlock.cell.get_flops", "torch.cat.size", "torch.cat.size", "cifar_modules.ResidualTreeBlock.in_bottle.get_flops", "cifar_modules.ResidualTreeBlock.out_bottle.get_flops", "x.size", "torch.cat.size", "torch.zeros", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "flop", ",", "_x", "=", "self", ".", "shortcut", ".", "get_flops", "(", "x", ")", "\n", "batch_size", "=", "_x", ".", "size", "(", ")", "[", "0", "]", "\n", "feature_map", "=", "_x", ".", "size", "(", ")", "[", "2", ":", "4", "]", "\n", "\n", "if", "self", ".", "in_bottle", "is", "not", "None", ":", "\n", "            ", "delta_flop", ",", "x", "=", "self", ".", "in_bottle", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "\n", "", "delta_flop", ",", "x", "=", "self", ".", "cell", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "\n", "if", "self", ".", "out_bottle", "is", "not", "None", ":", "\n", "            ", "delta_flop", ",", "x", "=", "self", ".", "out_bottle", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "\n", "", "residual_channel", "=", "x", ".", "size", "(", ")", "[", "1", "]", "\n", "shortcut_channel", "=", "_x", ".", "size", "(", ")", "[", "1", "]", "\n", "if", "residual_channel", "!=", "shortcut_channel", ":", "\n", "            ", "padding", "=", "torch", ".", "zeros", "(", "batch_size", ",", "residual_channel", "-", "shortcut_channel", ",", "feature_map", "[", "0", "]", ",", "feature_map", "[", "1", "]", ",", "\n", "device", "=", "x", ".", "device", ")", "\n", "_x", "=", "torch", ".", "cat", "(", "(", "_x", ",", "padding", ")", ",", "1", ")", "\n", "\n", "", "return", "flop", ",", "_x", "+", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.PyramidTreeNet.__init__": [[376, 386], ["utils.BasicUnit.__init__", "nn.ModuleList"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "blocks", ",", "classifier", ",", "\n", "tree_node_config", "=", "None", ",", "cell_drop_rate", "=", "0", ",", "cell_drop_scheme", "=", "'linear'", ")", ":", "\n", "        ", "super", "(", "PyramidTreeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "blocks", ")", "\n", "self", ".", "classifier", "=", "classifier", "\n", "\n", "self", ".", "tree_node_config", "=", "tree_node_config", "if", "tree_node_config", "is", "not", "None", "else", "{", "}", "\n", "self", ".", "cell_drop_rate", "=", "cell_drop_rate", "\n", "self", ".", "cell_drop_scheme", "=", "cell_drop_scheme", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.PyramidTreeNet.forward": [[387, 393], ["block.view", "cifar_modules.PyramidTreeNet.classifier", "block", "block.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# flatten", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.PyramidTreeNet.unit_str": [[394, 400], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "unit_str", "(", "self", ")", ":", "\n", "        ", "_str", "=", "''", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "_str", "+=", "block", ".", "module_str", "+", "'\\n'", "\n", "", "return", "_str", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.PyramidTreeNet.config": [[401, 412], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "PyramidTreeNet", ".", "__name__", ",", "\n", "'tree_node_config'", ":", "self", ".", "tree_node_config", ",", "\n", "'cell_drop_rate'", ":", "self", ".", "cell_drop_rate", ",", "\n", "'cell_drop_scheme'", ":", "self", ".", "cell_drop_scheme", ",", "\n", "'blocks'", ":", "[", "\n", "block", ".", "config", "for", "block", "in", "self", ".", "blocks", "\n", "]", ",", "\n", "'classifier'", ":", "self", ".", "classifier", ".", "config", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.PyramidTreeNet.build_from_config": [[414, 451], ["config.pop", "layers.set_layer_from_config", "cifar_modules.PyramidTreeNet", "config.pop", "cifar_modules.set_block_from_config", "blocks.append", "config.pop", "copy.deepcopy", "config.get", "root_node.update", "queue.Queue", "config.get", "config.get", "queue.Queue.put", "queue.Queue.empty", "queue.Queue.get", "queue.Queue.get.update", "config.get", "queue.Queue.put"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.set_block_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "if", "'name'", "in", "config", ":", "\n", "            ", "config", ".", "pop", "(", "'name'", ")", "\n", "", "blocks", "=", "[", "]", "\n", "total_blocks", "=", "0", "\n", "for", "block_config", "in", "config", ".", "pop", "(", "'blocks'", ")", ":", "\n", "            ", "if", "'cell'", "in", "block_config", ":", "\n", "                ", "total_blocks", "+=", "1", "\n", "tree_node_config", "=", "copy", ".", "deepcopy", "(", "config", ".", "get", "(", "'tree_node_config'", ",", "{", "}", ")", ")", "\n", "root_node", "=", "block_config", "[", "'cell'", "]", "[", "'child_nodes'", "]", "[", "0", "]", "\n", "if", "root_node", "is", "not", "None", ":", "\n", "                    ", "root_node", ".", "update", "(", "tree_node_config", ")", "\n", "tree_node_config", "[", "'has_branch_bn'", "]", "=", "False", "\n", "to_updates", "=", "Queue", "(", ")", "\n", "for", "child_config", "in", "root_node", "[", "'child_nodes'", "]", ":", "\n", "                        ", "to_updates", ".", "put", "(", "child_config", ")", "\n", "", "while", "not", "to_updates", ".", "empty", "(", ")", ":", "\n", "                        ", "child_config", "=", "to_updates", ".", "get", "(", ")", "\n", "if", "child_config", "is", "not", "None", ":", "\n", "                            ", "child_config", ".", "update", "(", "tree_node_config", ")", "\n", "for", "new_config", "in", "child_config", "[", "'child_nodes'", "]", ":", "\n", "                                ", "to_updates", ".", "put", "(", "new_config", ")", "\n", "", "", "", "", "", "block", "=", "set_block_from_config", "(", "block_config", ")", "\n", "blocks", ".", "append", "(", "block", ")", "\n", "\n", "", "_l", "=", "0", "\n", "for", "block", "in", "blocks", ":", "\n", "            ", "if", "'cell_drop_rate'", "in", "block", ".", "__dict__", ":", "\n", "                ", "_l", "+=", "1", "\n", "if", "config", ".", "get", "(", "'cell_drop_scheme'", ",", "'linear'", ")", "==", "'linear'", ":", "\n", "                    ", "block", ".", "cell_drop_rate", "=", "2", "*", "_l", "*", "config", ".", "get", "(", "'cell_drop_rate'", ",", "0", ")", "/", "(", "total_blocks", "+", "1", ")", "\n", "", "else", ":", "\n", "                    ", "block", ".", "cell_drop_rate", "=", "config", ".", "get", "(", "'cell_drop_rate'", ",", "0", ")", "\n", "\n", "", "", "", "classifier", "=", "set_layer_from_config", "(", "config", ".", "pop", "(", "'classifier'", ")", ")", "\n", "return", "PyramidTreeNet", "(", "blocks", ",", "classifier", ",", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.PyramidTreeNet.get_flops": [[452, 460], ["x.view.view.view", "cifar_modules.PyramidTreeNet.classifier.get_flops", "block.get_flops", "x.view.view.size"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "flop", "=", "0", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "delta_flop", ",", "x", "=", "block", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# flatten", "\n", "delta_flop", ",", "x", "=", "self", ".", "classifier", ".", "get_flops", "(", "x", ")", "\n", "return", "flop", "+", "delta_flop", ",", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.cifar_modules.set_block_from_config": [[9, 18], ["config.pop", "block.build_from_config"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config"], ["def", "set_block_from_config", "(", "config", ")", ":", "\n", "    ", "name2block", "=", "{", "\n", "TransitionBlock", ".", "__name__", ":", "TransitionBlock", ",", "\n", "ResidualTreeBlock", ".", "__name__", ":", "ResidualTreeBlock", ",", "\n", "}", "\n", "\n", "block_name", "=", "config", ".", "pop", "(", "'name'", ")", "\n", "block", "=", "name2block", "[", "block_name", "]", "\n", "return", "block", ".", "build_from_config", "(", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.MobileInvertedResidualBlock.__init__": [[7, 12], ["BasicUnit.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "mobile_inverted_conv", ",", "shortcut", ")", ":", "\n", "        ", "super", "(", "MobileInvertedResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "mobile_inverted_conv", "=", "mobile_inverted_conv", "\n", "self", ".", "shortcut", "=", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.MobileInvertedResidualBlock.forward": [[13, 23], ["nas_modules.MobileInvertedResidualBlock.mobile_inverted_conv.is_zero_layer", "nas_modules.MobileInvertedResidualBlock.shortcut.is_zero_layer", "nas_modules.MobileInvertedResidualBlock.mobile_inverted_conv", "nas_modules.MobileInvertedResidualBlock.mobile_inverted_conv", "nas_modules.MobileInvertedResidualBlock.shortcut"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "mobile_inverted_conv", ".", "is_zero_layer", "(", ")", ":", "\n", "            ", "res", "=", "x", "\n", "", "elif", "self", ".", "shortcut", "is", "None", "or", "self", ".", "shortcut", ".", "is_zero_layer", "(", ")", ":", "\n", "            ", "res", "=", "self", ".", "mobile_inverted_conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "conv_x", "=", "self", ".", "mobile_inverted_conv", "(", "x", ")", "\n", "skip_x", "=", "self", ".", "shortcut", "(", "x", ")", "\n", "res", "=", "skip_x", "+", "conv_x", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.MobileInvertedResidualBlock.unit_str": [[24, 28], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "unit_str", "(", "self", ")", ":", "\n", "        ", "return", "'(%s, %s)'", "%", "(", "self", ".", "mobile_inverted_conv", ".", "unit_str", ",", "\n", "self", ".", "shortcut", ".", "unit_str", "if", "self", ".", "shortcut", "is", "not", "None", "else", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.MobileInvertedResidualBlock.config": [[29, 35], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "MobileInvertedResidualBlock", ".", "__name__", ",", "\n", "'mobile_inverted_conv'", ":", "self", ".", "mobile_inverted_conv", ".", "config", ",", "\n", "'shortcut'", ":", "self", ".", "shortcut", ".", "config", "if", "self", ".", "shortcut", "is", "not", "None", "else", "None", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.MobileInvertedResidualBlock.build_from_config": [[37, 43], ["layers.set_layer_from_config", "layers.set_layer_from_config", "nas_modules.MobileInvertedResidualBlock"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "mobile_inverted_conv", "=", "set_layer_from_config", "(", "\n", "config", "[", "'mobile_inverted_conv'", "]", ")", "\n", "shortcut", "=", "set_layer_from_config", "(", "config", "[", "'shortcut'", "]", ")", "\n", "return", "MobileInvertedResidualBlock", "(", "mobile_inverted_conv", ",", "shortcut", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.MobileInvertedResidualBlock.get_flops": [[44, 52], ["nas_modules.MobileInvertedResidualBlock.mobile_inverted_conv.get_flops", "nas_modules.MobileInvertedResidualBlock.shortcut.get_flops", "nas_modules.MobileInvertedResidualBlock.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "flops1", ",", "_", "=", "self", ".", "mobile_inverted_conv", ".", "get_flops", "(", "x", ")", "\n", "if", "self", ".", "shortcut", ":", "\n", "            ", "flops2", ",", "_", "=", "self", ".", "shortcut", ".", "get_flops", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "flops2", "=", "0", "\n", "\n", "", "return", "flops1", "+", "flops2", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.__init__": [[56, 64], ["BasicUnit.__init__", "nn.ModuleList", "nn.AdaptiveAvgPool2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "first_conv", ",", "blocks", ",", "feature_mix_layer", ",", "classifier", ")", ":", "\n", "        ", "super", "(", "ProxylessNASNets", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "first_conv", "=", "first_conv", "\n", "self", ".", "blocks", "=", "nn", ".", "ModuleList", "(", "blocks", ")", "\n", "self", ".", "feature_mix_layer", "=", "feature_mix_layer", "\n", "self", ".", "global_avg_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "classifier", "=", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.forward": [[65, 75], ["nas_modules.ProxylessNASNets.first_conv", "nas_modules.ProxylessNASNets.global_avg_pooling", "nas_modules.ProxylessNASNets.view", "nas_modules.ProxylessNASNets.classifier", "block", "nas_modules.ProxylessNASNets.feature_mix_layer", "nas_modules.ProxylessNASNets.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "first_conv", "(", "x", ")", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "", "if", "self", ".", "feature_mix_layer", ":", "\n", "            ", "x", "=", "self", ".", "feature_mix_layer", "(", "x", ")", "\n", "", "x", "=", "self", ".", "global_avg_pooling", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# flatten", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.unit_str": [[76, 82], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "unit_str", "(", "self", ")", ":", "\n", "        ", "_str", "=", "''", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "_str", "+=", "block", ".", "unit_str", "+", "'\\n'", "\n", "", "return", "_str", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.config": [[83, 93], ["nas_modules.ProxylessNASNets.get_bn_param"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.get_bn_param"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "ProxylessNASNets", ".", "__name__", ",", "\n", "'bn'", ":", "self", ".", "get_bn_param", "(", ")", ",", "\n", "'first_conv'", ":", "self", ".", "first_conv", ".", "config", ",", "\n", "'feature_mix_layer'", ":", "self", ".", "feature_mix_layer", ".", "config", "if", "self", ".", "feature_mix_layer", "is", "not", "None", "else", "None", ",", "\n", "'classifier'", ":", "self", ".", "classifier", ".", "config", ",", "\n", "'blocks'", ":", "[", "\n", "block", ".", "config", "for", "block", "in", "self", ".", "blocks", "]", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.build_from_config": [[95, 110], ["layers.set_layer_from_config", "layers.set_layer_from_config", "layers.set_layer_from_config", "nas_modules.ProxylessNASNets", "blocks.append", "nas_modules.MobileInvertedResidualBlock.build_from_config"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "first_conv", "=", "set_layer_from_config", "(", "config", "[", "'first_conv'", "]", ")", "\n", "feature_mix_layer", "=", "set_layer_from_config", "(", "config", "[", "'feature_mix_layer'", "]", ")", "\n", "classifier", "=", "set_layer_from_config", "(", "config", "[", "'classifier'", "]", ")", "\n", "blocks", "=", "[", "]", "\n", "for", "block_config", "in", "config", "[", "'blocks'", "]", ":", "\n", "            ", "blocks", ".", "append", "(", "\n", "MobileInvertedResidualBlock", ".", "build_from_config", "(", "block_config", ")", ")", "\n", "\n", "", "return", "ProxylessNASNets", "(", "\n", "first_conv", ",", "\n", "blocks", ",", "\n", "feature_mix_layer", ",", "\n", "classifier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.get_flops": [[111, 126], ["nas_modules.ProxylessNASNets.first_conv.get_flops", "nas_modules.ProxylessNASNets.global_avg_pooling", "x.view.view.view", "nas_modules.ProxylessNASNets.classifier.get_flops", "block.get_flops", "nas_modules.ProxylessNASNets.feature_mix_layer.get_flops", "x.view.view.size"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "flop", ",", "x", "=", "self", ".", "first_conv", ".", "get_flops", "(", "x", ")", "\n", "\n", "for", "block", "in", "self", ".", "blocks", ":", "\n", "            ", "delta_flop", ",", "x", "=", "block", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "", "if", "self", ".", "feature_mix_layer", ":", "\n", "            ", "delta_flop", ",", "x", "=", "self", ".", "feature_mix_layer", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "", "x", "=", "self", ".", "global_avg_pooling", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# flatten", "\n", "\n", "delta_flop", ",", "x", "=", "self", ".", "classifier", ".", "get_flops", "(", "x", ")", "\n", "flop", "+=", "delta_flop", "\n", "return", "flop", ",", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.set_bn_param": [[127, 133], ["nas_modules.ProxylessNASNets.modules", "isinstance"], "methods", ["None"], ["", "def", "set_bn_param", "(", "self", ",", "bn_momentum", ",", "bn_eps", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "momentum", "=", "bn_momentum", "\n", "m", ".", "eps", "=", "bn_eps", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.get_bn_param": [[134, 142], ["nas_modules.ProxylessNASNets.modules", "isinstance"], "methods", ["None"], ["", "def", "get_bn_param", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "return", "{", "\n", "'momentum'", ":", "m", ".", "momentum", ",", "\n", "'eps'", ":", "m", ".", "eps", ",", "\n", "}", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.init_model": [[143, 167], ["nas_modules.ProxylessNASNets.modules", "isinstance", "isinstance", "m.weight.data.normal_", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "math.sqrt", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.bias.data.zero_", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "init_model", "(", "self", ",", "model_init", ",", "init_div_groups", "=", "True", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "if", "model_init", "==", "'he_fout'", ":", "\n", "                    ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "if", "init_div_groups", ":", "\n", "                        ", "n", "/=", "m", ".", "groups", "\n", "", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "model_init", "==", "'he_fin'", ":", "\n", "                    ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "in_channels", "\n", "if", "init_div_groups", ":", "\n", "                        ", "n", "/=", "m", ".", "groups", "\n", "", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "NotImplementedError", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.weight_parameters": [[168, 170], ["nas_modules.ProxylessNASNets.parameters"], "methods", ["None"], ["", "", "", "def", "weight_parameters", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets._make_divisible": [[171, 190], ["max", "int"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_make_divisible", "(", "v", ",", "divisor", ",", "min_val", "=", "None", ")", ":", "\n", "        ", "\"\"\"\n        This function is taken from the original tf repo.\n        It ensures that all layers have a channel number that is divisible by 8\n        It can be seen here:\n        https://github.com/tensorflow/models/blob/master/research/slim/nets/mobilenet/mobilenet.py\n        :param v:\n        :param divisor:\n        :param min_val:\n        :return:\n        \"\"\"", "\n", "if", "min_val", "is", "None", ":", "\n", "            ", "min_val", "=", "divisor", "\n", "", "new_v", "=", "max", "(", "min_val", ",", "int", "(", "v", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "# Make sure that round down does not go down by more than 10%.", "\n", "if", "new_v", "<", "0.9", "*", "v", ":", "\n", "            ", "new_v", "+=", "divisor", "\n", "", "return", "new_v", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.model_zoo.proxyless_base": [[11, 32], ["utils.download_url", "json.load", "open", "nas_modules.ProxylessNASNets.build_from_config", "cifar_modules.PyramidTreeNet.build_from_config", "PyramidTreeNet.build_from_config.set_bn_param", "utils.download_url", "torch.load", "PyramidTreeNet.build_from_config.load_state_dict"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.download_url", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.nas_modules.ProxylessNASNets.set_bn_param", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.download_url"], ["def", "proxyless_base", "(", "pretrained", "=", "True", ",", "net_config", "=", "None", ",", "net_weight", "=", "None", ")", ":", "\n", "    ", "assert", "net_config", "is", "not", "None", ",", "\"Please input a network config\"", "\n", "net_config_path", "=", "download_url", "(", "net_config", ")", "\n", "net_config_json", "=", "json", ".", "load", "(", "open", "(", "net_config_path", ",", "'r'", ")", ")", "\n", "if", "net_config_json", "[", "'name'", "]", "==", "ProxylessNASNets", ".", "__name__", ":", "\n", "        ", "net", "=", "ProxylessNASNets", ".", "build_from_config", "(", "net_config_json", ")", "\n", "", "else", ":", "\n", "        ", "net", "=", "PyramidTreeNet", ".", "build_from_config", "(", "net_config_json", ")", "\n", "\n", "", "if", "'bn'", "in", "net_config_json", ":", "\n", "        ", "net", ".", "set_bn_param", "(", "\n", "bn_momentum", "=", "net_config_json", "[", "'bn'", "]", "[", "'momentum'", "]", ",", "\n", "bn_eps", "=", "net_config_json", "[", "'bn'", "]", "[", "'eps'", "]", ")", "\n", "\n", "", "if", "pretrained", ":", "\n", "        ", "assert", "net_weight", "is", "not", "None", ",", "\"Please specify network weights\"", "\n", "init_path", "=", "download_url", "(", "net_weight", ")", "\n", "init", "=", "torch", ".", "load", "(", "init_path", ",", "map_location", "=", "'cpu'", ")", "\n", "net", ".", "load_state_dict", "(", "init", "[", "'state_dict'", "]", ")", "\n", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.__init__": [[27, 72], ["utils.BasicUnit.__init__", "nn.Dropout2d", "nn.BatchNorm2d", "nn.BatchNorm2d", "nn.ReLU", "nn.ReLU", "nn.ReLU6", "nn.ReLU6"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["\n", "", "class", "My2DLayer", "(", "MyModule", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "use_bn", "=", "True", ",", "act_func", "=", "'relu'", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "super", "(", "My2DLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "out_channels", "=", "out_channels", "\n", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "act_func", "=", "act_func", "\n", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "self", ".", "ops_order", "=", "ops_order", "\n", "\n", "\"\"\" modules \"\"\"", "\n", "modules", "=", "{", "}", "\n", "# batch norm", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "if", "self", ".", "bn_before_weight", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "", "else", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "", "", "else", ":", "\n", "            ", "modules", "[", "'bn'", "]", "=", "None", "\n", "# activation", "\n", "", "modules", "[", "'act'", "]", "=", "build_activation", "(", "self", ".", "act_func", ",", "self", ".", "ops_list", "[", "0", "]", "!=", "'act'", ")", "\n", "# dropout", "\n", "if", "self", ".", "dropout_rate", ">", "0", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "nn", ".", "Dropout2d", "(", "self", ".", "dropout_rate", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "None", "\n", "# weight", "\n", "", "modules", "[", "'weight'", "]", "=", "self", ".", "weight_op", "(", ")", "\n", "\n", "# add modules", "\n", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "modules", "[", "op", "]", "is", "None", ":", "\n", "                ", "continue", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "if", "modules", "[", "'dropout'", "]", "is", "not", "None", ":", "\n", "                    ", "self", ".", "add_module", "(", "'dropout'", ",", "modules", "[", "'dropout'", "]", ")", "\n", "", "for", "key", "in", "modules", "[", "'weight'", "]", ":", "\n", "                    ", "self", ".", "add_module", "(", "key", ",", "modules", "[", "'weight'", "]", "[", "key", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "add_module", "(", "op", ",", "modules", "[", "op", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.ops_list": [[73, 76], ["layers.BasicLayer.ops_order.split"], "methods", ["None"], ["", "", "", "@", "property", "\n", "def", "ops_list", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "ops_order", ".", "split", "(", "'_'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.bn_before_weight": [[77, 85], ["ValueError"], "methods", ["None"], ["", "@", "property", "\n", "def", "bn_before_weight", "(", "self", ")", ":", "\n", "        ", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "op", "==", "'bn'", ":", "\n", "                ", "return", "True", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "return", "False", "\n", "", "", "raise", "ValueError", "(", "'Invalid ops_order: %s'", "%", "self", ".", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.weight_call": [[86, 88], ["None"], "methods", ["None"], ["", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.forward": [[89, 105], ["layers.BasicLayer.weight_call", "layers.BasicLayer.dropout", "layers.BasicLayer.bn", "ValueError", "layers.BasicLayer.activation"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.IdentityLayer.weight_call", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.dropout", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.activation"], ["", "\"\"\" Methods defined in MyModule \"\"\"", "\n", "\n", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n", "", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'in_channels'", ":", "self", ".", "in_channels", ",", "\n", "'out_channels'", ":", "self", ".", "out_channels", ",", "\n", "'use_bn'", ":", "self", ".", "use_bn", ",", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.unit_str": [[106, 109], ["None"], "methods", ["None"], ["'act_func'", ":", "self", ".", "act_func", ",", "\n", "'dropout_rate'", ":", "self", ".", "dropout_rate", ",", "\n", "'ops_order'", ":", "self", ".", "ops_order", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.config": [[110, 119], ["None"], "methods", ["None"], ["\n", "", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "@", "staticmethod", "\n", "def", "is_zero_layer", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.build_from_config": [[121, 124], ["None"], "methods", ["None"], ["\n", "\n", "", "", "class", "ConvLayer", "(", "My2DLayer", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.get_flops": [[125, 127], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "has_shuffle", "=", "False", ",", "\n", "use_bn", "=", "True", ",", "act_func", "=", "'relu'", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.BasicLayer.is_zero_layer": [[128, 131], ["None"], "methods", ["None"], ["        ", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ConvLayer.__init__": [[135, 182], ["layers.BasicLayer.__init__", "utils.get_same_padding", "isinstance", "nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], ["super", "(", "ConvLayer", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ")", "\n", "\n", "", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "padding", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "if", "isinstance", "(", "padding", ",", "int", ")", ":", "\n", "            ", "padding", "*=", "self", ".", "dilation", "\n", "", "else", ":", "\n", "            ", "padding", "[", "0", "]", "*=", "self", ".", "dilation", "\n", "padding", "[", "1", "]", "*=", "self", ".", "dilation", "\n", "\n", "", "weight_dict", "=", "OrderedDict", "(", ")", "\n", "weight_dict", "[", "'conv'", "]", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "out_channels", ",", "kernel_size", "=", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "self", ".", "dilation", ",", "groups", "=", "self", ".", "groups", ",", "bias", "=", "self", ".", "bias", "\n", ")", "\n", "if", "self", ".", "has_shuffle", "and", "self", ".", "groups", ">", "1", ":", "\n", "            ", "weight_dict", "[", "'shuffle'", "]", "=", "ShuffleLayer", "(", "self", ".", "groups", ")", "\n", "\n", "", "return", "weight_dict", "\n", "\n", "", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", ":", "\n", "            ", "kernel_size", "=", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "kernel_size", "=", "self", ".", "kernel_size", "\n", "", "if", "self", ".", "groups", "==", "1", ":", "\n", "            ", "if", "self", ".", "dilation", ">", "1", ":", "\n", "                ", "return", "'%dx%d_DilatedConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "return", "'%dx%d_Conv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "", "else", ":", "\n", "            ", "if", "self", ".", "dilation", ">", "1", ":", "\n", "                ", "return", "'%dx%d_DilatedGroupConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "return", "'%dx%d_GroupConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "\n", "", "", "", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "ConvLayer", ".", "__name__", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "'dilation'", ":", "self", ".", "dilation", ",", "\n", "'groups'", ":", "self", ".", "groups", ",", "\n", "'bias'", ":", "self", ".", "bias", ",", "\n", "'has_shuffle'", ":", "self", ".", "has_shuffle", ",", "\n", "**", "super", "(", "ConvLayer", ",", "self", ")", ".", "config", ",", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ConvLayer.weight_call": [[183, 188], ["layers.ConvLayer.conv", "utils.shuffle_layer"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.shuffle_layer"], ["}", "\n", "\n", "", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "ConvLayer", "(", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ConvLayer.unit_str": [[189, 206], ["isinstance"], "methods", ["None"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "count_conv_flop", "(", "self", ".", "conv", ",", "x", ")", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "DepthConvLayer", "(", "My2DLayer", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "has_shuffle", "=", "False", ",", "\n", "use_bn", "=", "True", ",", "act_func", "=", "'relu'", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "dilation", "=", "dilation", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "bias", "=", "bias", "\n", "self", ".", "has_shuffle", "=", "has_shuffle", "\n", "\n", "super", "(", "DepthConvLayer", ",", "self", ")", ".", "__init__", "(", "\n", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ConvLayer.config": [[207, 220], ["config.update"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update"], [")", "\n", "\n", "", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "padding", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "if", "isinstance", "(", "padding", ",", "int", ")", ":", "\n", "            ", "padding", "*=", "self", ".", "dilation", "\n", "", "else", ":", "\n", "            ", "padding", "[", "0", "]", "*=", "self", ".", "dilation", "\n", "padding", "[", "1", "]", "*=", "self", ".", "dilation", "\n", "\n", "", "weight_dict", "=", "OrderedDict", "(", ")", "\n", "weight_dict", "[", "'depth_conv'", "]", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "in_channels", ",", "kernel_size", "=", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "\n", "dilation", "=", "self", ".", "dilation", ",", "groups", "=", "self", ".", "in_channels", ",", "bias", "=", "False", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ConvLayer.build_from_config": [[221, 224], ["layers.ConvLayer"], "methods", ["None"], [")", "\n", "weight_dict", "[", "'point_conv'", "]", "=", "nn", ".", "Conv2d", "(", "\n", "self", ".", "in_channels", ",", "self", ".", "out_channels", ",", "kernel_size", "=", "1", ",", "groups", "=", "self", ".", "groups", ",", "bias", "=", "self", ".", "bias", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ConvLayer.get_flops": [[225, 227], ["utils.count_conv_flop", "layers.ConvLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["if", "self", ".", "has_shuffle", "and", "self", ".", "groups", ">", "1", ":", "\n", "            ", "weight_dict", "[", "'shuffle'", "]", "=", "ShuffleLayer", "(", "self", ".", "groups", ")", "\n", "", "return", "weight_dict", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.DepthConvLayer.__init__": [[231, 284], ["layers.BasicLayer.__init__", "utils.get_same_padding", "isinstance", "nn.Conv2d", "nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], ["        ", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", ":", "\n", "            ", "kernel_size", "=", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "kernel_size", "=", "self", ".", "kernel_size", "\n", "", "if", "self", ".", "dilation", ">", "1", ":", "\n", "            ", "return", "'%dx%d_DilatedDepthConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "'%dx%d_DepthConv'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ")", "\n", "\n", "", "", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "DepthConvLayer", ".", "__name__", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "'dilation'", ":", "self", ".", "dilation", ",", "\n", "'groups'", ":", "self", ".", "groups", ",", "\n", "'bias'", ":", "self", ".", "bias", ",", "\n", "'has_shuffle'", ":", "self", ".", "has_shuffle", ",", "\n", "**", "super", "(", "DepthConvLayer", ",", "self", ")", ".", "config", ",", "\n", "}", "\n", "\n", "", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "DepthConvLayer", "(", "**", "config", ")", "\n", "\n", "", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "depth_flop", "=", "count_conv_flop", "(", "self", ".", "depth_conv", ",", "x", ")", "\n", "x", "=", "self", ".", "depth_conv", "(", "x", ")", "\n", "point_flop", "=", "count_conv_flop", "(", "self", ".", "point_conv", ",", "x", ")", "\n", "x", "=", "self", ".", "point_conv", "(", "x", ")", "\n", "return", "depth_flop", "+", "point_flop", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "PoolingLayer", "(", "My2DLayer", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "pool_type", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "use_bn", "=", "False", ",", "act_func", "=", "None", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "self", ".", "pool_type", "=", "pool_type", "\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "super", "(", "PoolingLayer", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ")", "\n", "\n", "", "def", "weight_op", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "stride", "==", "1", ":", "\n", "# same padding if `stride == 1`", "\n", "            ", "padding", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "padding", "=", "0", "\n", "\n", "", "weight_dict", "=", "OrderedDict", "(", ")", "\n", "if", "self", ".", "pool_type", "==", "'avg'", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.DepthConvLayer.weight_call": [[285, 291], ["layers.DepthConvLayer.depth_conv", "layers.DepthConvLayer.point_conv", "utils.shuffle_layer"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.shuffle_layer"], ["            ", "weight_dict", "[", "'pool'", "]", "=", "nn", ".", "AvgPool2d", "(", "\n", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ",", "count_include_pad", "=", "False", "\n", ")", "\n", "", "elif", "self", ".", "pool_type", "==", "'max'", ":", "\n", "            ", "weight_dict", "[", "'pool'", "]", "=", "nn", ".", "MaxPool2d", "(", "self", ".", "kernel_size", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "padding", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.DepthConvLayer.unit_str": [[292, 302], ["isinstance"], "methods", ["None"], ["", "return", "weight_dict", "\n", "\n", "", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "if", "isinstance", "(", "self", ".", "kernel_size", ",", "int", ")", ":", "\n", "            ", "kernel_size", "=", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ")", "\n", "", "else", ":", "\n", "            ", "kernel_size", "=", "self", ".", "kernel_size", "\n", "", "return", "'%dx%d_%sPool'", "%", "(", "kernel_size", "[", "0", "]", ",", "kernel_size", "[", "1", "]", ",", "self", ".", "pool_type", ".", "upper", "(", ")", ")", "\n", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.DepthConvLayer.config": [[303, 316], ["config.update"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update"], ["def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "PoolingLayer", ".", "__name__", ",", "\n", "'pool_type'", ":", "self", ".", "pool_type", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "**", "super", "(", "PoolingLayer", ",", "self", ")", ".", "config", "\n", "}", "\n", "\n", "", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "PoolingLayer", "(", "**", "config", ")", "\n", "\n", "", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.DepthConvLayer.build_from_config": [[317, 320], ["layers.DepthConvLayer"], "methods", ["None"], ["        ", "return", "0", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "IdentityLayer", "(", "My2DLayer", ")", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.DepthConvLayer.get_flops": [[321, 325], ["utils.count_conv_flop", "utils.count_conv_flop", "layers.DepthConvLayer.depth_conv", "layers.DepthConvLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["\n", "    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "use_bn", "=", "False", ",", "act_func", "=", "None", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "super", "(", "IdentityLayer", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "use_bn", ",", "act_func", ",", "dropout_rate", ",", "ops_order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.PoolingLayer.__init__": [[329, 373], ["layers.BasicLayer.__init__", "utils.get_same_padding", "nn.AvgPool2d", "nn.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], ["", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'Identity'", "\n", "\n", "", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "IdentityLayer", ".", "__name__", ",", "\n", "**", "super", "(", "IdentityLayer", ",", "self", ")", ".", "config", ",", "\n", "}", "\n", "\n", "", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "IdentityLayer", "(", "**", "config", ")", "\n", "\n", "", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "0", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n", "\n", "", "", "class", "LinearLayer", "(", "MyModule", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ",", "\n", "use_bn", "=", "False", ",", "act_func", "=", "None", ",", "dropout_rate", "=", "0", ",", "ops_order", "=", "'weight_bn_act'", ")", ":", "\n", "        ", "super", "(", "LinearLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "bias", "=", "bias", "\n", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "self", ".", "act_func", "=", "act_func", "\n", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "self", ".", "ops_order", "=", "ops_order", "\n", "\n", "\"\"\" modules \"\"\"", "\n", "modules", "=", "{", "}", "\n", "# batch norm", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "if", "self", ".", "bn_before_weight", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm1d", "(", "in_features", ")", "\n", "", "else", ":", "\n", "                ", "modules", "[", "'bn'", "]", "=", "nn", ".", "BatchNorm1d", "(", "out_features", ")", "\n", "", "", "else", ":", "\n", "            ", "modules", "[", "'bn'", "]", "=", "None", "\n", "# activation", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.PoolingLayer.weight_call": [[374, 376], ["layers.PoolingLayer.pool"], "methods", ["None"], ["", "modules", "[", "'act'", "]", "=", "build_activation", "(", "self", ".", "act_func", ",", "self", ".", "ops_list", "[", "0", "]", "!=", "'act'", ")", "\n", "# dropout", "\n", "if", "self", ".", "dropout_rate", ">", "0", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.PoolingLayer.unit_str": [[377, 385], ["isinstance", "layers.PoolingLayer.pool_type.upper"], "methods", ["None"], ["            ", "modules", "[", "'dropout'", "]", "=", "nn", ".", "Dropout", "(", "self", ".", "dropout_rate", ",", "inplace", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "modules", "[", "'dropout'", "]", "=", "None", "\n", "# linear", "\n", "", "modules", "[", "'weight'", "]", "=", "{", "'linear'", ":", "nn", ".", "Linear", "(", "self", ".", "in_features", ",", "self", ".", "out_features", ",", "self", ".", "bias", ")", "}", "\n", "\n", "# add modules", "\n", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "modules", "[", "op", "]", "is", "None", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.PoolingLayer.config": [[386, 396], ["config.update"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update"], ["                ", "continue", "\n", "", "elif", "op", "==", "'weight'", ":", "\n", "                ", "if", "modules", "[", "'dropout'", "]", "is", "not", "None", ":", "\n", "                    ", "self", ".", "add_module", "(", "'dropout'", ",", "modules", "[", "'dropout'", "]", ")", "\n", "", "for", "key", "in", "modules", "[", "'weight'", "]", ":", "\n", "                    ", "self", ".", "add_module", "(", "key", ",", "modules", "[", "'weight'", "]", "[", "key", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "self", ".", "add_module", "(", "op", ",", "modules", "[", "op", "]", ")", "\n", "\n", "", "", "", "@", "property", "\n", "def", "ops_list", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.PoolingLayer.build_from_config": [[397, 400], ["layers.PoolingLayer"], "methods", ["None"], ["        ", "return", "self", ".", "ops_order", ".", "split", "(", "'_'", ")", "\n", "\n", "", "@", "property", "\n", "def", "bn_before_weight", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.PoolingLayer.get_flops": [[401, 403], ["layers.PoolingLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["        ", "for", "op", "in", "self", ".", "ops_list", ":", "\n", "            ", "if", "op", "==", "'bn'", ":", "\n", "                ", "return", "True", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.IdentityLayer.__init__": [[407, 424], ["layers.BasicLayer.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "", "return", "x", "\n", "\n", "", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'%dx%d_Linear'", "%", "(", "self", ".", "in_features", ",", "self", ".", "out_features", ")", "\n", "\n", "", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "LinearLayer", ".", "__name__", ",", "\n", "'in_features'", ":", "self", ".", "in_features", ",", "\n", "'out_features'", ":", "self", ".", "out_features", ",", "\n", "'bias'", ":", "self", ".", "bias", ",", "\n", "'use_bn'", ":", "self", ".", "use_bn", ",", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.IdentityLayer.weight_call": [[425, 427], ["None"], "methods", ["None"], ["'act_func'", ":", "self", ".", "act_func", ",", "\n", "'dropout_rate'", ":", "self", ".", "dropout_rate", ",", "\n", "'ops_order'", ":", "self", ".", "ops_order", ",", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.IdentityLayer.unit_str": [[428, 431], ["None"], "methods", ["None"], ["}", "\n", "\n", "", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.IdentityLayer.config": [[432, 439], ["config.update"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update"], ["        ", "return", "LinearLayer", "(", "**", "config", ")", "\n", "\n", "", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "linear", ".", "weight", ".", "numel", "(", ")", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "is_zero_layer", "(", ")", ":", "\n", "        ", "return", "False", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.IdentityLayer.build_from_config": [[440, 443], ["layers.IdentityLayer"], "methods", ["None"], ["\n", "\n", "", "", "class", "MBInvertedConvLayer", "(", "MyModule", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.IdentityLayer.get_flops": [[444, 446], ["layers.IdentityLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "expand_ratio", "=", "6", ",", "mid_channels", "=", "None", ")", ":", "\n", "        ", "super", "(", "MBInvertedConvLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.LinearLayer.__init__": [[450, 503], ["utils.BasicUnit.__init__", "nn.Linear", "nn.Dropout", "nn.BatchNorm1d", "nn.BatchNorm1d", "nn.ReLU", "nn.ReLU", "nn.ReLU6", "nn.ReLU6", "nn.Tanh", "nn.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], ["\n", "self", ".", "kernel_size", "=", "kernel_size", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "expand_ratio", "=", "expand_ratio", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "\n", "if", "self", ".", "mid_channels", "is", "None", ":", "\n", "            ", "feature_dim", "=", "round", "(", "self", ".", "in_channels", "*", "self", ".", "expand_ratio", ")", "\n", "", "else", ":", "\n", "            ", "feature_dim", "=", "self", ".", "mid_channels", "\n", "\n", "", "if", "self", ".", "expand_ratio", "==", "1", ":", "\n", "            ", "self", ".", "inverted_bottleneck", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "inverted_bottleneck", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "self", ".", "in_channels", ",", "feature_dim", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "feature_dim", ")", ")", ",", "\n", "(", "'act'", ",", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "", "pad", "=", "get_same_padding", "(", "self", ".", "kernel_size", ")", "\n", "self", ".", "depth_conv", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "feature_dim", ",", "feature_dim", ",", "kernel_size", ",", "stride", ",", "pad", ",", "groups", "=", "feature_dim", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "feature_dim", ")", ")", ",", "\n", "(", "'act'", ",", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "self", ".", "point_linear", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "feature_dim", ",", "out_channels", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'bn'", ",", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", ",", "\n", "]", ")", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "inverted_bottleneck", ":", "\n", "            ", "x", "=", "self", ".", "inverted_bottleneck", "(", "x", ")", "\n", "", "x", "=", "self", ".", "depth_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "point_linear", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'%dx%d_MBConv%d'", "%", "(", "self", ".", "kernel_size", ",", "self", ".", "kernel_size", ",", "self", ".", "expand_ratio", ")", "\n", "\n", "", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'name'", ":", "MBInvertedConvLayer", ".", "__name__", ",", "\n", "'in_channels'", ":", "self", ".", "in_channels", ",", "\n", "'out_channels'", ":", "self", ".", "out_channels", ",", "\n", "'kernel_size'", ":", "self", ".", "kernel_size", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "'expand_ratio'", ":", "self", ".", "expand_ratio", ",", "\n", "'mid_channels'", ":", "self", ".", "mid_channels", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.LinearLayer.ops_list": [[504, 507], ["layers.LinearLayer.ops_order.split"], "methods", ["None"], ["\n", "", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "MBInvertedConvLayer", "(", "**", "config", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.LinearLayer.bn_before_weight": [[508, 516], ["ValueError"], "methods", ["None"], ["\n", "", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "inverted_bottleneck", ":", "\n", "            ", "flop1", "=", "count_conv_flop", "(", "self", ".", "inverted_bottleneck", ".", "conv", ",", "x", ")", "\n", "x", "=", "self", ".", "inverted_bottleneck", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "flop1", "=", "0", "\n", "\n", "", "flop2", "=", "count_conv_flop", "(", "self", ".", "depth_conv", ".", "conv", ",", "x", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.LinearLayer.forward": [[517, 533], ["layers.LinearLayer.linear", "layers.LinearLayer.dropout", "layers.LinearLayer.bn", "ValueError", "layers.LinearLayer.activation"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.dropout", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas_tensorflow.tf_layers.activation"], ["x", "=", "self", ".", "depth_conv", "(", "x", ")", "\n", "\n", "flop3", "=", "count_conv_flop", "(", "self", ".", "point_linear", ".", "conv", ",", "x", ")", "\n", "x", "=", "self", ".", "point_linear", "(", "x", ")", "\n", "\n", "return", "flop1", "+", "flop2", "+", "flop3", ",", "x", "\n", "\n", "", "@", "staticmethod", "\n", "def", "is_zero_layer", "(", ")", ":", "\n", "        ", "return", "False", "\n", "\n", "\n", "", "", "class", "ZeroLayer", "(", "MyModule", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "        ", "super", "(", "ZeroLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.LinearLayer.unit_str": [[534, 537], ["None"], "methods", ["None"], ["\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "n", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "h", "//=", "self", ".", "stride", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.LinearLayer.config": [[538, 549], ["None"], "methods", ["None"], ["w", "//=", "self", ".", "stride", "\n", "device", "=", "x", ".", "get_device", "(", ")", "if", "x", ".", "is_cuda", "else", "torch", ".", "device", "(", "'cpu'", ")", "\n", "# noinspection PyUnresolvedReferences", "\n", "padding", "=", "torch", ".", "zeros", "(", "n", ",", "c", ",", "h", ",", "w", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "return", "padding", "\n", "\n", "", "@", "property", "\n", "def", "module_str", "(", "self", ")", ":", "\n", "        ", "return", "'Zero'", "\n", "\n", "", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.LinearLayer.build_from_config": [[551, 554], ["layers.LinearLayer"], "methods", ["None"], ["'name'", ":", "ZeroLayer", ".", "__name__", ",", "\n", "'stride'", ":", "self", ".", "stride", ",", "\n", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.LinearLayer.get_flops": [[555, 557], ["layers.LinearLayer.linear.weight.numel", "layers.LinearLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "return", "ZeroLayer", "(", "**", "config", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.LinearLayer.is_zero_layer": [[558, 561], ["None"], "methods", ["None"], ["\n", "", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "0", ",", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.MBInvertedConvLayer.__init__": [[565, 620], ["utils.BasicUnit.__init__", "utils.get_same_padding", "nn.Sequential", "collections.OrderedDict", "nn.Sequential", "round", "nn.Sequential", "collections.OrderedDict", "collections.OrderedDict", "nn.Conv2d", "nn.BatchNorm2d", "nn.Conv2d", "nn.BatchNorm2d", "nn.ReLU6", "nn.Conv2d", "nn.BatchNorm2d", "nn.ReLU6"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], ["", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.MBInvertedConvLayer.forward": [[621, 627], ["layers.MBInvertedConvLayer.depth_conv", "layers.MBInvertedConvLayer.point_linear", "layers.MBInvertedConvLayer.inverted_bottleneck"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.MBInvertedConvLayer.unit_str": [[628, 633], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.MBInvertedConvLayer.config": [[634, 643], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.MBInvertedConvLayer.build_from_config": [[645, 648], ["layers.MBInvertedConvLayer"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.MBInvertedConvLayer.get_flops": [[649, 662], ["utils.count_conv_flop", "layers.MBInvertedConvLayer.depth_conv", "utils.count_conv_flop", "layers.MBInvertedConvLayer.point_linear", "utils.count_conv_flop", "layers.MBInvertedConvLayer.inverted_bottleneck"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.MBInvertedConvLayer.is_zero_layer": [[663, 666], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.__init__": [[670, 673], ["utils.BasicUnit.__init__"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.forward": [[674, 685], ["x.size", "torch.autograd.Variable", "torch.zeros", "torch.cuda.device", "torch.cuda.FloatTensor().fill_", "x.get_device", "torch.cuda.FloatTensor"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.unit_str": [[686, 689], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.config": [[690, 695], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.build_from_config": [[697, 700], ["layers.ZeroLayer"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.get_flops": [[701, 703], ["layers.ZeroLayer.forward"], "methods", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.ZeroLayer.is_zero_layer": [[704, 707], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.layers.set_layer_from_config": [[6, 23], ["layer_config.pop", "layer.build_from_config"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config"], ["from", "collections", "import", "OrderedDict", "\n", "\n", "\n", "def", "set_layer_from_config", "(", "layer_config", ")", ":", "\n", "    ", "if", "layer_config", "is", "None", ":", "\n", "        ", "return", "None", "\n", "\n", "", "name2layer", "=", "{", "\n", "ConvLayer", ".", "__name__", ":", "ConvLayer", ",", "\n", "DepthConvLayer", ".", "__name__", ":", "DepthConvLayer", ",", "\n", "PoolingLayer", ".", "__name__", ":", "PoolingLayer", ",", "\n", "IdentityLayer", ".", "__name__", ":", "IdentityLayer", ",", "\n", "LinearLayer", ".", "__name__", ":", "LinearLayer", ",", "\n", "MBInvertedConvLayer", ".", "__name__", ":", "MBInvertedConvLayer", ",", "\n", "ZeroLayer", ".", "__name__", ":", "ZeroLayer", ",", "\n", "}", "\n", "\n", "layer_name", "=", "layer_config", ".", "pop", "(", "'name'", ")", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.__init__": [[118, 123], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.reset": [[124, 129], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.AverageMeter.update": [[130, 135], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.forward": [[139, 141], ["None"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.unit_str": [[142, 145], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "unit_str", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.config": [[146, 149], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "config", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.build_from_config": [[150, 153], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "build_from_config", "(", "config", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.BasicUnit.get_flops": [[154, 156], ["None"], "methods", ["None"], ["", "def", "get_flops", "(", "self", ",", "x", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.download_url": [[14, 23], ["os.path.expanduser", "os.path.join", "url.split", "os.makedirs", "sys.stderr.write", "urlretrieve", "os.path.exists"], "function", ["None"], ["def", "download_url", "(", "url", ",", "model_dir", "=", "\"~/.torch/proxyless_nas\"", ",", "overwrite", "=", "False", ")", ":", "\n", "    ", "model_dir", "=", "os", ".", "path", ".", "expanduser", "(", "model_dir", ")", "\n", "filename", "=", "url", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "cached_file", "=", "os", ".", "path", ".", "join", "(", "model_dir", ",", "filename", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "cached_file", ")", "or", "overwrite", ":", "\n", "        ", "os", ".", "makedirs", "(", "model_dir", ",", "exist_ok", "=", "True", ")", "\n", "sys", ".", "stderr", ".", "write", "(", "'Downloading: \"{}\" to {}\\n'", ".", "format", "(", "url", ",", "cached_file", ")", ")", "\n", "urlretrieve", "(", "url", ",", "cached_file", ")", "\n", "", "return", "cached_file", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.load_url": [[25, 29], ["utils.download_url", "torch.load", "torch.load", "torch.load", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.download_url"], ["", "def", "load_url", "(", "url", ",", "model_dir", "=", "'~/.torch/proxyless_nas'", ",", "map_location", "=", "None", ")", ":", "\n", "    ", "cached_file", "=", "download_url", "(", "url", ",", "model_dir", ")", "\n", "map_location", "=", "\"cpu\"", "if", "not", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "map_location", "is", "None", "else", "None", "\n", "return", "torch", ".", "load", "(", "cached_file", ",", "map_location", "=", "map_location", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.cross_entropy_with_label_smoothing": [[31, 42], ["torch.LogSoftmax", "pred.size", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like.scatter_", "torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "nn.LogSoftmax."], "function", ["None"], ["", "def", "cross_entropy_with_label_smoothing", "(", "pred", ",", "target", ",", "label_smoothing", "=", "0.1", ")", ":", "\n", "    ", "logsoftmax", "=", "nn", ".", "LogSoftmax", "(", ")", "\n", "n_classes", "=", "pred", ".", "size", "(", "1", ")", "\n", "# convert to one-hot", "\n", "target", "=", "torch", ".", "unsqueeze", "(", "target", ",", "1", ")", "\n", "soft_target", "=", "torch", ".", "zeros_like", "(", "pred", ")", "\n", "soft_target", ".", "scatter_", "(", "1", ",", "target", ",", "1", ")", "\n", "# label smoothing", "\n", "soft_target", "=", "soft_target", "*", "(", "1", "-", "label_smoothing", ")", "+", "label_smoothing", "/", "n_classes", "\n", "return", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "-", "soft_target", "*", "logsoftmax", "(", "pred", ")", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding": [[44, 54], ["isinstance", "isinstance", "utils.get_same_padding", "utils.get_same_padding", "len"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding", "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_same_padding"], ["", "def", "get_same_padding", "(", "kernel_size", ")", ":", "\n", "    ", "if", "isinstance", "(", "kernel_size", ",", "tuple", ")", ":", "\n", "        ", "assert", "len", "(", "kernel_size", ")", "==", "2", ",", "'invalid kernel size: %s'", "%", "kernel_size", "\n", "p1", "=", "get_same_padding", "(", "kernel_size", "[", "0", "]", ")", "\n", "p2", "=", "get_same_padding", "(", "kernel_size", "[", "1", "]", ")", "\n", "return", "p1", ",", "p2", "\n", "", "assert", "isinstance", "(", "\n", "kernel_size", ",", "int", ")", ",", "'kernel size should be either `int` or `tuple`'", "\n", "assert", "kernel_size", "%", "2", ">", "0", ",", "'kernel size should be odd number'", "\n", "return", "kernel_size", "//", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.shuffle_layer": [[56, 66], ["x.view.data.size", "x.view.view", "torch.transpose().contiguous", "torch.transpose().contiguous", "torch.transpose().contiguous", "x.view.view", "torch.transpose", "torch.transpose", "torch.transpose"], "function", ["None"], ["", "def", "shuffle_layer", "(", "x", ",", "groups", ")", ":", "\n", "    ", "batchsize", ",", "num_channels", ",", "height", ",", "width", "=", "x", ".", "data", ".", "size", "(", ")", "\n", "channels_per_group", "=", "num_channels", "//", "groups", "\n", "# reshape", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "groups", ",", "channels_per_group", ",", "height", ",", "width", ")", "\n", "# transpose", "\n", "x", "=", "torch", ".", "transpose", "(", "x", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "# flatten", "\n", "x", "=", "x", ".", "view", "(", "batchsize", ",", "-", "1", ",", "height", ",", "width", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.get_split_list": [[68, 73], ["range"], "function", ["None"], ["", "def", "get_split_list", "(", "in_dim", ",", "child_num", ")", ":", "\n", "    ", "in_dim_list", "=", "[", "in_dim", "//", "child_num", "]", "*", "child_num", "\n", "for", "_i", "in", "range", "(", "in_dim", "%", "child_num", ")", ":", "\n", "        ", "in_dim_list", "[", "_i", "]", "+=", "1", "\n", "", "return", "in_dim_list", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.list_sum": [[75, 80], ["len", "utils.list_sum"], "function", ["home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.list_sum"], ["", "def", "list_sum", "(", "x", ")", ":", "\n", "    ", "if", "len", "(", "x", ")", "==", "1", ":", "\n", "        ", "return", "x", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "return", "x", "[", "0", "]", "+", "list_sum", "(", "x", "[", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_parameters": [[82, 86], ["sum", "p.numel", "model.parameters"], "function", ["None"], ["", "", "def", "count_parameters", "(", "model", ")", ":", "\n", "    ", "total_params", "=", "sum", "(", "p", ".", "numel", "(", ")", "\n", "for", "p", "in", "model", ".", "parameters", "(", ")", "if", "p", ".", "requires_grad", ")", "\n", "return", "total_params", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.count_conv_flop": [[88, 94], ["int", "int", "x.size", "x.size"], "function", ["None"], ["", "def", "count_conv_flop", "(", "layer", ",", "x", ")", ":", "\n", "    ", "out_h", "=", "int", "(", "x", ".", "size", "(", ")", "[", "2", "]", "/", "layer", ".", "stride", "[", "0", "]", ")", "\n", "out_w", "=", "int", "(", "x", ".", "size", "(", ")", "[", "3", "]", "/", "layer", ".", "stride", "[", "1", "]", ")", "\n", "delta_ops", "=", "layer", ".", "in_channels", "*", "layer", ".", "out_channels", "*", "layer", ".", "kernel_size", "[", "0", "]", "*", "layer", ".", "kernel_size", "[", "1", "]", "*", "out_h", "*", "out_w", "/", "layer", ".", "groups", "\n", "return", "delta_ops", "\n", "\n"]], "home.repos.pwc.inspect_result.MIT-HAN-LAB_ProxylessNAS.proxyless_nas.utils.accuracy": [[96, 110], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\" Computes the precision@k for the specified values of k \"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]]}