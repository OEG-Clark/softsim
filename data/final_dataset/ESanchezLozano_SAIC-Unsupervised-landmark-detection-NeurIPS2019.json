{"home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.databases.SuperDB.__init__": [[7, 15], ["inspect.getargvalues", "databases.preparedb", "inspect.currentframe", "setattr"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.databases.preparedb"], ["    ", "def", "__init__", "(", "self", ",", "path", "=", "None", ",", "sigma", "=", "1", ",", "size", "=", "128", ",", "step", "=", "15", ",", "flip", "=", "False", ",", "angle", "=", "0", ",", "tight", "=", "16", ",", "nimages", "=", "2", ",", "affine", "=", "False", ",", "db", "=", "'CelebA'", ")", ":", "\n", "# - automatically add attributes to the class with the values given by the class", "\n", "        ", "args", ",", "_", ",", "_", ",", "values", "=", "inspect", ".", "getargvalues", "(", "inspect", ".", "currentframe", "(", ")", ")", "\n", "del", "args", "[", "0", "]", "\n", "for", "k", "in", "args", ":", "\n", "            ", "setattr", "(", "self", ",", "k", ",", "values", "[", "k", "]", ")", "\n", "", "preparedb", "(", "self", ",", "db", ")", "\n", "self", ".", "db", "=", "db", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.databases.SuperDB.__len__": [[16, 18], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.databases.SuperDB.__getitem__": [[19, 43], ["databases.SuperDB.collect", "len", "dict.fromkeys", "range", "utils.affine_trans", "utils.crop", "utils.affine_trans", "torch.from_numpy", "image.type_as.type_as.type_as", "torch.from_numpy().permute().type_as", "utils.process_image", "numpy.clip", "numpy.random.randn", "image.type_as.type_as.swapaxes().swapaxes", "torch.FloatTensor", "torch.FloatTensor", "torch.from_numpy().type_as", "torch.from_numpy().permute", "torch.FloatTensor", "numpy.random.rand", "numpy.random.randn", "image.type_as.type_as.swapaxes", "torch.from_numpy", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.affine_trans", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.crop", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.affine_trans", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.process_image"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "image", ",", "points", "=", "self", ".", "collect", "(", "self", ",", "idx", ")", "\n", "nimg", "=", "len", "(", "image", ")", "\n", "if", "not", "self", ".", "affine", ":", "\n", "            ", "sample", "=", "dict", ".", "fromkeys", "(", "[", "'Im'", ",", "'ImP'", "]", ",", "None", ")", "\n", "flip", "=", "np", ".", "random", ".", "rand", "(", "1", ")", "[", "0", "]", ">", "0.5", "if", "self", ".", "flip", "else", "False", "# flip both or none", "\n", "for", "j", "in", "range", "(", "self", ".", "nimages", ")", ":", "\n", "                ", "out", "=", "process_image", "(", "image", "=", "image", "[", "j", "%", "nimg", "]", ",", "points", "=", "points", "[", "j", "%", "nimg", "]", ",", "angle", "=", "(", "j", "+", "1", ")", "*", "self", ".", "angle", ",", "flip", "=", "flip", ",", "size", "=", "self", ".", "size", ",", "tight", "=", "self", ".", "tight", ")", "\n", "if", "j", "==", "1", ":", "\n", "                   ", "sample", "[", "'Im'", "]", "=", "out", "[", "'image'", "]", "\n", "", "else", ":", "\n", "                   ", "sample", "[", "'ImP'", "]", "=", "out", "[", "'image'", "]", "\n", "", "", "", "else", ":", "\n", "            ", "tmp_angle", "=", "np", ".", "clip", "(", "np", ".", "random", ".", "randn", "(", "1", ")", "*", "self", ".", "angle", ",", "-", "40.0", ",", "40.0", ")", "if", "self", ".", "angle", ">", "0", "else", "self", ".", "angle", "\n", "image", ",", "points", ",", "_", "=", "affine_trans", "(", "image", "[", "0", "]", ",", "points", "[", "0", "]", ",", "tmp_angle", ")", "\n", "image", ",", "points", "=", "crop", "(", "image", ",", "points", ",", "128", ",", "tight", "=", "self", ".", "tight", ")", "\n", "tmp_angle", "=", "np", ".", "random", ".", "randn", "(", "1", ")", "*", "self", ".", "angle", "\n", "imrot", ",", "ptsrot", ",", "M", "=", "affine_trans", "(", "image", ",", "points", ",", "size", "=", "128", ",", "angle", "=", "tmp_angle", ")", "\n", "image", "=", "image", "/", "255.0", "\n", "image", "=", "torch", ".", "from_numpy", "(", "image", ".", "swapaxes", "(", "2", ",", "1", ")", ".", "swapaxes", "(", "1", ",", "0", ")", ")", "\n", "image", "=", "image", ".", "type_as", "(", "torch", ".", "FloatTensor", "(", ")", ")", "\n", "imrot", "=", "torch", ".", "from_numpy", "(", "imrot", "/", "255.0", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", ".", "type_as", "(", "torch", ".", "FloatTensor", "(", ")", ")", "\n", "sample", "=", "{", "'Im'", ":", "image", ",", "'ImP'", ":", "imrot", ",", "'M'", ":", "torch", ".", "from_numpy", "(", "M", ")", ".", "type_as", "(", "torch", ".", "FloatTensor", "(", ")", ")", ",", "'pts'", ":", "points", "}", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.databases.preparedb": [[46, 132], ["databases.preparedb.init"], "function", ["None"], ["", "", "def", "preparedb", "(", "self", ",", "db", ")", ":", "\n", "\n", "    ", "if", "db", "==", "'Skeleton'", ":", "# this is an example of what to prepare in a db", "\n", "        ", "def", "init", "(", "self", ")", ":", "\n", "# - here there's the stuff needed to collect points and images and labels or whatever", "\n", "# - they are then set to db as ", "\n", "            ", "keys", "=", "[", "'frames'", ",", "'images'", "]", "\n", "for", "k", "in", "keys", ":", "\n", "                ", "setattr", "(", "self", ",", "k", ",", "eval", "(", "k", ")", ")", "# if the variables are named after the keys", "\n", "", "setattr", "(", "self", ",", "'len'", ",", "lenval", ")", "# set value of len", "\n", "", "def", "collect", "(", "self", ",", "idx", ")", ":", "\n", "# - function to collect a sample to be processed in getitem", "\n", "            ", "return", "image", ",", "points", "\n", "", "init", "(", "self", ")", "# - do the initialisation", "\n", "setattr", "(", "self", ",", "'collect'", ",", "collect", ")", "# - add collect function to the class", "\n", "\n", "", "if", "db", "==", "'CelebA'", ":", "\n", "        ", "def", "init", "(", "self", ")", ":", "\n", "            ", "txt_file", "=", "open", "(", "'list_landmarks_align_celeba.txt'", ",", "'r'", ")", "\n", "lines", "=", "txt_file", ".", "readlines", "(", ")", "[", "2", ":", ":", "]", "\n", "names", "=", "[", "l", ".", "split", "(", ")", "[", "0", "]", "for", "l", "in", "lines", "]", "\n", "coords", "=", "[", "l", ".", "split", "(", ")", "[", "1", ":", ":", "]", "for", "l", "in", "lines", "]", "\n", "data", "=", "dict", "(", "zip", "(", "names", ",", "coords", ")", ")", "\n", "mafl", "=", "[", "l", ".", "replace", "(", "'\\n'", ",", "''", ")", "for", "l", "in", "open", "(", "'MAFL_test.txt'", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "# remove MAFL test from training", "\n", "files", "=", "list", "(", "set", "(", "names", ")", "-", "set", "(", "mafl", ")", ")", "\n", "keys", "=", "[", "'files'", ",", "'data'", "]", "\n", "for", "k", "in", "keys", ":", "\n", "                ", "setattr", "(", "self", ",", "k", ",", "eval", "(", "k", ")", ")", "\n", "", "setattr", "(", "self", ",", "'len'", ",", "len", "(", "files", ")", ")", "\n", "", "def", "collect", "(", "self", ",", "idx", ")", ":", "\n", "            ", "path_to_img", "=", "self", ".", "path", "+", "self", ".", "files", "[", "idx", "]", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "path_to_img", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "points", "=", "self", ".", "data", "[", "self", ".", "files", "[", "idx", "]", "]", "\n", "points", "=", "np", ".", "float32", "(", "self", ".", "data", "[", "self", ".", "files", "[", "idx", "]", "]", ")", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "return", "[", "image", "]", ",", "[", "points", "]", "\n", "", "init", "(", "self", ")", "\n", "setattr", "(", "self", ",", "'collect'", ",", "collect", ")", "\n", "\n", "", "if", "'AFLW'", "in", "db", ":", "\n", "        ", "def", "init", "(", "self", ")", ":", "\n", "            ", "partition", "=", "db", ".", "split", "(", "'-'", ")", "[", "1", "]", "\n", "mymat", "=", "sio", ".", "loadmat", "(", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "f'aflw_{partition}_keypoints.mat'", ")", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "f'aflw_{partition}_images.txt'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "                ", "alllines", "=", "f", ".", "readlines", "(", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "alllines", ")", ")", ":", "\n", "                ", "alllines", "[", "i", "]", "=", "alllines", "[", "i", "]", ".", "replace", "(", "'\\n'", ",", "''", ")", "\n", "", "files", "=", "alllines", "\n", "pts", "=", "mymat", "[", "'gt'", "]", "[", ":", ",", ":", ",", "[", "1", ",", "0", "]", "]", "\n", "keys", "=", "[", "'files'", ",", "'pts'", "]", "\n", "for", "k", "in", "keys", ":", "\n", "                ", "setattr", "(", "self", ",", "k", ",", "eval", "(", "k", ")", ")", "\n", "", "setattr", "(", "self", ",", "'len'", ",", "len", "(", "files", ")", ")", "\n", "", "def", "collect", "(", "self", ",", "idx", ")", ":", "\n", "            ", "path_to_img", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'output'", ",", "self", ".", "files", "[", "idx", "]", ")", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "path_to_img", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "points", "=", "self", ".", "pts", "[", "idx", "]", "\n", "return", "[", "image", "]", ",", "[", "points", "]", "\n", "", "init", "(", "self", ")", "\n", "setattr", "(", "self", ",", "'collect'", ",", "collect", ")", "\n", "\n", "\n", "", "if", "'MAFL'", "in", "db", ":", "\n", "        ", "def", "init", "(", "self", ")", ":", "\n", "            ", "partition", "=", "db", ".", "split", "(", "'-'", ")", "[", "1", "]", "\n", "txt_file", "=", "open", "(", "'list_landmarks_align_celeba.txt'", ",", "'r'", ")", "\n", "lines", "=", "txt_file", ".", "readlines", "(", ")", "[", "2", ":", ":", "]", "\n", "names", "=", "[", "l", ".", "split", "(", ")", "[", "0", "]", "for", "l", "in", "lines", "]", "\n", "coords", "=", "[", "l", ".", "split", "(", ")", "[", "1", ":", ":", "]", "for", "l", "in", "lines", "]", "\n", "data", "=", "dict", "(", "zip", "(", "names", ",", "coords", ")", ")", "\n", "files", "=", "[", "l", ".", "replace", "(", "'\\n'", ",", "''", ")", "for", "l", "in", "open", "(", "f'MAFL_{partition}.txt'", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "\n", "notfound", "=", "[", "'031524.jpg'", ",", "'179577.jpg'", ",", "'139803.jpg'", "]", "if", "partition", "==", "'train'", "else", "[", "]", "\n", "for", "f", "in", "notfound", ":", "\n", "                ", "idx", "=", "files", ".", "index", "(", "f", ")", "\n", "del", "files", "[", "idx", "]", "\n", "", "keys", "=", "[", "'files'", ",", "'data'", "]", "\n", "for", "k", "in", "keys", ":", "\n", "                ", "setattr", "(", "self", ",", "k", ",", "eval", "(", "k", ")", ")", "\n", "", "setattr", "(", "self", ",", "'len'", ",", "len", "(", "files", ")", ")", "\n", "", "def", "collect", "(", "self", ",", "idx", ")", ":", "\n", "            ", "path_to_img", "=", "self", ".", "path", "+", "self", ".", "files", "[", "idx", "]", "\n", "image", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "path_to_img", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "points", "=", "self", ".", "data", "[", "self", ".", "files", "[", "idx", "]", "]", "\n", "points", "=", "np", ".", "float32", "(", "self", ".", "data", "[", "self", ".", "files", "[", "idx", "]", "]", ")", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "return", "[", "image", "]", ",", "[", "points", "]", "\n", "", "init", "(", "self", ")", "\n", "setattr", "(", "self", ",", "'collect'", ",", "collect", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.affine_all_epochs.loadnet": [[18, 32], ["MTFAN.FAN().to", "torch.load", "FAN().to.load_state_dict", "FAN().to.to", "k.replace", "FAN().to.state_dict", "torch.load", "net.state_dict.update", "FAN().to.load_state_dict", "FAN().to.apply", "MTFAN.FAN", "torch.load.items", "torch.load.items", "torch.load.items"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.AverageMeter.update"], ["def", "loadnet", "(", "npoints", "=", "10", ",", "path_to_model", "=", "None", ",", "path_to_core", "=", "None", ")", ":", "\n", "    ", "net", "=", "FAN", "(", "1", ",", "n_points", "=", "npoints", ")", ".", "to", "(", "'cuda'", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "path_to_model", ")", "\n", "checkpoint", "=", "{", "k", ".", "replace", "(", "'module.'", ",", "''", ")", ":", "v", "for", "k", ",", "v", "in", "checkpoint", ".", "items", "(", ")", "}", "\n", "if", "path_to_core", "is", "not", "None", ":", "\n", "        ", "net_dict", "=", "net", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "path_to_core", ",", "map_location", "=", "'cuda'", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "(", "k", "in", "net_dict", ")", "}", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "pretrained_dict", "[", "k", "]", ".", "shape", "==", "net_dict", "[", "k", "]", ".", "shape", "}", "\n", "net_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "net", ".", "load_state_dict", "(", "net_dict", ",", "strict", "=", "True", ")", "\n", "net", ".", "apply", "(", "convertLayer", ")", "\n", "", "net", ".", "load_state_dict", "(", "checkpoint", ")", "\n", "return", "net", ".", "to", "(", "'cuda'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.affine_all_epochs.evalaffine": [[33, 48], ["numpy.zeros", "torch.utils.data.DataLoader", "MTFAN.GeoDistill().to", "enumerate", "GeoDistill().to.", "GeoDistill().to.", "range", "len", "MTFAN.GeoDistill", "facenet", "facenet", "pred_b.append", "numpy.sqrt", "a.cuda", "b.cuda", "numpy.sum", "torch.cat", "c[].permute", "torch.ones", "pred_b[].detach().numpy", "preda[].cpu", "predb[].detach().cpu().numpy", "pred_b[].detach", "predb[].detach().cpu", "predb[].detach"], "function", ["None"], ["", "def", "evalaffine", "(", "facenet", ",", "db", ",", "npts", "=", "10", ")", ":", "\n", "    ", "errors", "=", "np", ".", "zeros", "(", "(", "len", "(", "db", ")", ",", "npts", ")", ")", "\n", "trainloader", "=", "DataLoader", "(", "db", ",", "batch_size", "=", "30", ",", "shuffle", "=", "False", ",", "num_workers", "=", "12", ",", "pin_memory", "=", "False", ")", "\n", "i", "=", "0", "\n", "BOT", "=", "GeoDistill", "(", "sigma", "=", "0.5", ",", "temperature", "=", "0.1", ")", ".", "to", "(", "'cuda'", ")", "\n", "for", "j", ",", "sample", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "a", ",", "b", ",", "c", "=", "sample", "[", "'Im'", "]", ",", "sample", "[", "'ImP'", "]", ",", "sample", "[", "'M'", "]", "\n", "_", ",", "preda", "=", "BOT", "(", "facenet", "(", "a", ".", "cuda", "(", ")", ")", ")", "\n", "_", ",", "predb", "=", "BOT", "(", "facenet", "(", "b", ".", "cuda", "(", ")", ")", ")", "\n", "pred_b", "=", "[", "]", "\n", "for", "m", "in", "range", "(", "preda", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "pred_b", ".", "append", "(", "torch", ".", "cat", "(", "(", "4", "*", "preda", "[", "m", "]", ".", "cpu", "(", ")", ",", "torch", ".", "ones", "(", "npts", ",", "1", ")", ")", ",", "dim", "=", "1", ")", "@", "c", "[", "m", "]", ".", "permute", "(", "1", ",", "0", ")", ")", "\n", "errors", "[", "i", ",", ":", "]", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "pred_b", "[", "m", "]", ".", "detach", "(", ")", ".", "numpy", "(", ")", "-", "4", "*", "predb", "[", "m", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "**", "2", ",", "axis", "=", "-", "1", ")", ")", "\n", "i", "=", "i", "+", "1", "\n", "", "", "return", "errors", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.affine_all_epochs.main": [[50, 92], ["parser.parse_args", "folder.replace.replace", "databases.SuperDB", "list", "sorted", "GPU.getGPUs", "print", "idx.index.index", "print", "str", "str", "map", "os.path.exists", "pickle.load", "print", "affine_all_epochs.loadnet", "affine_all_epochs.evalaffine", "print", "numpy.mean", "pickle.dump", "min", "len", "min", "len", "os.path.join.find", "os.path.join", "glob.glob", "int", "open", "str", "numpy.mean", "open", "range", "all_errors.keys", "len", "x.split", "len", "re.findall"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.parse_args", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.extract_data.loadnet", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.affine_all_epochs.evalaffine"], ["", "def", "main", "(", ")", ":", "\n", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "assert", "args", ".", "db", "in", "[", "'CelebA'", ",", "'AFLW-train'", ",", "'AFLW-test'", ",", "'MAFL-train'", ",", "'MAFL-test'", "]", ",", "'Please choose between CelebA, AFLW-train, AFLW-test, MAFL-train, MAFL-test'", "\n", "\n", "if", "args", ".", "cuda", "==", "'auto'", ":", "\n", "        ", "import", "GPUtil", "as", "GPU", "\n", "GPUs", "=", "GPU", ".", "getGPUs", "(", ")", "\n", "idx", "=", "[", "GPUs", "[", "j", "]", ".", "memoryUsed", "for", "j", "in", "range", "(", "len", "(", "GPUs", ")", ")", "]", "\n", "print", "(", "idx", ")", "\n", "assert", "min", "(", "idx", ")", "<", "11.0", ",", "'All {} GPUs are in use'", ".", "format", "(", "len", "(", "GPUs", ")", ")", "\n", "idx", "=", "idx", ".", "index", "(", "min", "(", "idx", ")", ")", "\n", "print", "(", "'Assigning CUDA_VISIBLE_DEVICES={}'", ".", "format", "(", "idx", ")", ")", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "str", "(", "idx", ")", "\n", "", "else", ":", "\n", "        ", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "str", "(", "args", ".", "cuda", ")", "\n", "\n", "", "folder", "=", "args", ".", "f", "\n", "path_to_core", "=", "args", ".", "core", "if", "len", "(", "args", ".", "core", ")", ">", "0", "else", "None", "#'checkpoint_fansoft/fan_109.pth'", "\n", "if", "path_to_core", "is", "not", "None", ":", "\n", "        ", "if", "path_to_core", ".", "find", "(", "'/'", ")", "==", "-", "1", ":", "\n", "            ", "path_to_core", "=", "os", ".", "path", ".", "join", "(", "'checkpoint_fansoft'", ",", "path_to_core", ")", "\n", "\n", "", "", "folder", "=", "folder", ".", "replace", "(", "'/'", ",", "''", ")", "\n", "db", "=", "args", ".", "db", "\n", "tight", "=", "args", ".", "tight", "\n", "output_file", "=", "'affine_{}.pkl'", ".", "format", "(", "folder", ")", "\n", "\n", "db", "=", "SuperDB", "(", "path", "=", "args", ".", "data_path", ",", "size", "=", "128", ",", "flip", "=", "False", ",", "angle", "=", "15.0", ",", "tight", "=", "tight", "or", "64", ",", "db", "=", "db", ",", "affine", "=", "True", ")", "\n", "files", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "split", "(", "'/'", ")", "[", "1", "]", ",", "glob", ".", "glob", "(", "'{}/model_*.fan.pth'", ".", "format", "(", "folder", ")", ")", ")", ")", "\n", "epochs", "=", "sorted", "(", "[", "int", "(", "j", ")", "for", "j", "in", "[", "''", ".", "join", "(", "re", ".", "findall", "(", "r'\\d+'", ",", "k", ")", ")", "for", "k", "in", "files", "]", "if", "len", "(", "j", ")", ">", "0", "]", ")", "\n", "\n", "all_errors", "=", "pickle", ".", "load", "(", "open", "(", "output_file", ",", "'rb'", ")", ")", "if", "os", ".", "path", ".", "exists", "(", "output_file", ")", "else", "{", "}", "\n", "epochs", "=", "[", "k", "for", "k", "in", "epochs", "if", "k", "not", "in", "all_errors", ".", "keys", "(", ")", "]", "\n", "for", "e", "in", "epochs", ":", "\n", "        ", "print", "(", "'Affine experiment epoch {:d} for folder {:s} out of {:d} epochs'", ".", "format", "(", "e", ",", "folder", ",", "epochs", "[", "-", "1", "]", ")", ")", "\n", "path_to_model", "=", "'{}/model_{}.fan.pth'", ".", "format", "(", "folder", ",", "str", "(", "e", ")", ")", "\n", "net", "=", "loadnet", "(", "npoints", "=", "args", ".", "npts", ",", "path_to_model", "=", "path_to_model", ",", "path_to_core", "=", "path_to_core", ")", "\n", "errors", "=", "evalaffine", "(", "net", ",", "db", ",", "npts", "=", "args", ".", "npts", ")", "\n", "print", "(", "np", ".", "mean", "(", "errors", ",", "0", ")", ")", "\n", "all_errors", "[", "e", "]", "=", "np", ".", "mean", "(", "errors", ",", "0", ")", "\n", "pickle", ".", "dump", "(", "all_errors", ",", "open", "(", "output_file", ",", "'wb'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.__init__": [[6, 11], ["argparse.ArgumentParser", "Train_options.Options.initialize", "Train_options.Options.parse_args", "Train_options.Options.write_args"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.initialize", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.parse_args", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.write_args"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "_parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Unsupervised Landmark Discovery through unsupervised adaptation (NeurIPS19)'", ")", "\n", "self", ".", "initialize", "(", ")", "\n", "self", ".", "args", "=", "self", ".", "parse_args", "(", ")", "\n", "self", ".", "write_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.initialize": [[12, 38], ["Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument", "Train_options.Options._parser.add_argument"], "methods", ["None"], ["", "def", "initialize", "(", "self", ")", ":", "\n", "        ", "self", ".", "_parser", ".", "add_argument", "(", "'--resume'", ",", "default", "=", "''", ",", "type", "=", "str", ",", "metavar", "=", "'PATH'", ",", "help", "=", "'path to the latest checkpoint (default: none)'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--print-freq'", ",", "'-p'", ",", "default", "=", "10", ",", "type", "=", "int", ",", "metavar", "=", "'N'", ",", "help", "=", "'print frequency (default: 10)'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--file'", ",", "default", "=", "'model_'", ",", "help", "=", "'Store model'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'-o'", ",", "'--option'", ",", "type", "=", "str", ",", "default", "=", "'incremental'", ",", "help", "=", "'Use incremental/finetune/scratch'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'-f'", ",", "'--folder'", ",", "default", "=", "'.'", ",", "help", "=", "'Folder to save intermediate models'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--bSize'", ",", "default", "=", "48", ",", "help", "=", "'Batch Size'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--s'", ",", "default", "=", "0.5", ",", "help", "=", "'Sigma for heatmaps'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--t'", ",", "default", "=", "0.1", ",", "help", "=", "'Temperature of Softargmax'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--gc'", ",", "default", "=", "1", ",", "help", "=", "'Use gradient clipping'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--tight'", ",", "default", "=", "70", ",", "help", "=", "'Tight'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--npts'", ",", "default", "=", "10", ",", "help", "=", "'Number of points'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--size'", ",", "default", "=", "128", ",", "type", "=", "int", ",", "help", "=", "'Size of images'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--num_workers'", ",", "default", "=", "12", ",", "help", "=", "'Number of workers'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--visdom'", ",", "default", "=", "True", ",", "help", "=", "'Window for Visdom'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--data_path'", ",", "default", "=", "''", ",", "help", "=", "'Path to the data'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--port'", ",", "default", "=", "9001", ",", "help", "=", "'visdom port'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--db'", ",", "default", "=", "'CelebA'", ",", "help", "=", "'db'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--checkpoint'", ",", "default", "=", "'checkpoint_fansoft/fan_109.pth'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'-lf'", ",", "'--lr_fan'", ",", "default", "=", "0.001", ",", "type", "=", "float", ",", "metavar", "=", "'PATH'", ",", "help", "=", "'learning rate fan'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'-lg'", ",", "'--lr_gan'", ",", "default", "=", "0.001", ",", "type", "=", "float", ",", "metavar", "=", "'PATH'", ",", "help", "=", "'learning rate gan'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'-sz'", ",", "'--step_size'", ",", "default", "=", "30", ",", "type", "=", "int", ",", "help", "=", "'Step size for scheduler'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'-g'", ",", "'--gamma'", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "help", "=", "'Gamma for scheduler'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'-a'", ",", "'--angle'", ",", "default", "=", "15.0", ",", "type", "=", "float", ",", "help", "=", "'rotation angle'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--flip'", ",", "default", "=", "False", ",", "help", "=", "'Use flip or not'", ")", "\n", "self", ".", "_parser", ".", "add_argument", "(", "'--cuda'", ",", "default", "=", "'auto'", ",", "type", "=", "str", ",", "help", "=", "'cuda'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.parse_args": [[39, 47], ["Train_options.Options._parser.parse_args", "print", "sorted", "eval", "len", "str", "os.listdir", "os.getcwd", "os.path.isdir", "l.find"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.parse_args"], ["", "def", "parse_args", "(", "self", ")", ":", "\n", "        ", "self", ".", "args", "=", "self", ".", "_parser", ".", "parse_args", "(", ")", "\n", "if", "self", ".", "args", ".", "folder", "==", "'.'", ":", "\n", "            ", "experimentname", "=", "sorted", "(", "[", "l", "for", "l", "in", "os", ".", "listdir", "(", "os", ".", "getcwd", "(", ")", ")", "if", "os", ".", "path", ".", "isdir", "(", "l", ")", "and", "l", ".", "find", "(", "'Exp'", ")", ">", "-", "1", "]", ")", "\n", "self", ".", "args", ".", "folder", "=", "'Exp_{:d}'", ".", "format", "(", "len", "(", "experimentname", ")", ")", "\n", "", "self", ".", "args", ".", "visdom", "=", "self", ".", "args", ".", "folder", "if", "eval", "(", "str", "(", "self", ".", "args", ".", "visdom", ")", ")", "else", "None", "\n", "print", "(", "self", ".", "args", ".", "folder", ")", "\n", "return", "self", ".", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.write_args": [[48, 55], ["os.path.exists", "os.mkdir", "os.path.exists", "os.mkdir", "open", "print", "os.path.join", "os.path.join", "Train_options.Options.args.__getattribute__", "list", "Train_options.Options.args.__dict__.keys"], "methods", ["None"], ["", "def", "write_args", "(", "self", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "'./'", "+", "self", ".", "args", ".", "folder", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'./'", "+", "self", ".", "args", ".", "folder", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "folder", ",", "'code'", ")", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "args", ".", "folder", ",", "'code'", ")", ")", "\n", "", "with", "open", "(", "self", ".", "args", ".", "folder", "+", "'/args_'", "+", "self", ".", "args", ".", "file", "[", "0", ":", "-", "8", "]", "+", "'.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "print", "(", "' '", ".", "join", "(", "[", "'--{:s} {} '", ".", "format", "(", "k", ",", "self", ".", "args", ".", "__getattribute__", "(", "k", ")", ")", "for", "k", "in", "list", "(", "self", ".", "args", ".", "__dict__", ".", "keys", "(", ")", ")", "]", ")", "+", "'\\n'", ",", "file", "=", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.train.main": [[12, 106], ["os.getcwd", "glob.glob", "torch.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "float", "float", "int", "int", "int", "float", "eval", "int", "model.model", "list", "dict", "dict", "float", "sum", "print", "sum", "print", "databases.SuperDB", "torch.utils.data.DataLoader", "print", "print", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "os.path.join", "range", "Train_options.Options", "shutil.copy2", "GPU.getGPUs", "print", "idx.index.index", "print", "str", "str", "str", "model.model.loss.keys", "print", "str", "dict.fromkeys", "dict", "dict", "model.model.FAN.parameters", "model.model.GEN.parameters", "torch.optim.lr_scheduler.StepLR.step", "torch.optim.lr_scheduler.StepLR.step", "train.train_epoch", "model.model._save", "os.path.join", "os.path.join", "min", "len", "min", "p.numel", "p.numel", "int", "int", "range", "utils.AverageMeter", "utils.AverageMeter", "filter", "filter", "len", "VisdomLogger", "VisdomPlotLogger", "model.model.GEN.parameters", "model.model.FAN.parameters", "int", "int"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.train.train_epoch", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.model._save"], ["def", "main", "(", ")", ":", "\n", "# parse args", "\n", "    ", "global", "args", "\n", "args", "=", "Options", "(", ")", ".", "args", "\n", "\n", "# copy all files from experiment", "\n", "cwd", "=", "os", ".", "getcwd", "(", ")", "\n", "for", "ff", "in", "glob", ".", "glob", "(", "\"*.py\"", ")", ":", "\n", "        ", "copy2", "(", "os", ".", "path", ".", "join", "(", "cwd", ",", "ff", ")", ",", "os", ".", "path", ".", "join", "(", "args", ".", "folder", ",", "'code'", ")", ")", "\n", "\n", "# initialise seeds", "\n", "", "torch", ".", "manual_seed", "(", "1000", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "1000", ")", "\n", "np", ".", "random", ".", "seed", "(", "1000", ")", "\n", "\n", "# choose cuda", "\n", "if", "args", ".", "cuda", "==", "'auto'", ":", "\n", "        ", "import", "GPUtil", "as", "GPU", "\n", "GPUs", "=", "GPU", ".", "getGPUs", "(", ")", "\n", "idx", "=", "[", "GPUs", "[", "j", "]", ".", "memoryUsed", "for", "j", "in", "range", "(", "len", "(", "GPUs", ")", ")", "]", "\n", "print", "(", "idx", ")", "\n", "assert", "min", "(", "idx", ")", "<", "11.0", ",", "'All {} GPUs are in use'", ".", "format", "(", "len", "(", "GPUs", ")", ")", "\n", "idx", "=", "idx", ".", "index", "(", "min", "(", "idx", ")", ")", "\n", "print", "(", "'Assigning CUDA_VISIBLE_DEVICES={}'", ".", "format", "(", "idx", ")", ")", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "str", "(", "idx", ")", "\n", "", "else", ":", "\n", "        ", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "str", "(", "args", ".", "cuda", ")", "\n", "\n", "# parameters", "\n", "", "sigma", "=", "float", "(", "args", ".", "s", ")", "\n", "temperature", "=", "float", "(", "args", ".", "t", ")", "\n", "gradclip", "=", "int", "(", "args", ".", "gc", ")", "\n", "npts", "=", "int", "(", "args", ".", "npts", ")", "\n", "bSize", "=", "int", "(", "args", ".", "bSize", ")", "\n", "angle", "=", "float", "(", "args", ".", "angle", ")", "\n", "flip", "=", "eval", "(", "str", "(", "args", ".", "flip", ")", ")", "\n", "tight", "=", "int", "(", "args", ".", "tight", ")", "\n", "\n", "model", "=", "mymodel", "(", "sigma", "=", "sigma", ",", "temperature", "=", "temperature", ",", "gradclip", "=", "gradclip", ",", "npts", "=", "npts", ",", "option", "=", "args", ".", "option", ",", "size", "=", "args", ".", "size", ",", "path_to_check", "=", "args", ".", "checkpoint", ")", "\n", "\n", "plotkeys", "=", "[", "'input'", ",", "'target'", ",", "'generated'", "]", "\n", "losskeys", "=", "list", "(", "model", ".", "loss", ".", "keys", "(", ")", ")", "\n", "\n", "# define plotters", "\n", "global", "plotter", "\n", "if", "not", "args", ".", "visdom", ":", "\n", "        ", "print", "(", "'No Visdom'", ")", "\n", "plotter", "=", "None", "\n", "", "else", ":", "\n", "        ", "from", "torchnet", ".", "logger", "import", "VisdomPlotLogger", ",", "VisdomLogger", ",", "VisdomSaver", ",", "VisdomTextLogger", "\n", "experimentsName", "=", "str", "(", "args", ".", "visdom", ")", "\n", "plotter", "=", "dict", ".", "fromkeys", "(", "[", "'images'", ",", "'losses'", "]", ")", "\n", "plotter", "[", "'images'", "]", "=", "dict", "(", "[", "(", "key", ",", "VisdomLogger", "(", "\"images\"", ",", "port", "=", "int", "(", "args", ".", "port", ")", ",", "env", "=", "experimentsName", ",", "opts", "=", "{", "'title'", ":", "key", "}", ")", ")", "for", "key", "in", "plotkeys", "]", ")", "\n", "plotter", "[", "'losses'", "]", "=", "dict", "(", "[", "(", "key", ",", "VisdomPlotLogger", "(", "\"line\"", ",", "port", "=", "int", "(", "args", ".", "port", ")", ",", "env", "=", "experimentsName", ",", "opts", "=", "{", "'title'", ":", "key", ",", "'xlabel'", ":", "'Iteration'", ",", "'ylabel'", ":", "'Loss'", "}", ")", ")", "for", "key", "in", "losskeys", "]", ")", "\n", "\n", "# prepare average meters", "\n", "", "global", "meters", ",", "l_iteration", "\n", "meterskey", "=", "[", "'batch_time'", ",", "'data_time'", "]", "\n", "meters", "=", "dict", "(", "[", "(", "key", ",", "AverageMeter", "(", ")", ")", "for", "key", "in", "meterskey", "]", ")", "\n", "meters", "[", "'losses'", "]", "=", "dict", "(", "[", "(", "key", ",", "AverageMeter", "(", ")", ")", "for", "key", "in", "losskeys", "]", ")", "\n", "l_iteration", "=", "float", "(", "0.0", ")", "\n", "\n", "# plot number of parameters", "\n", "params", "=", "sum", "(", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "GEN", ".", "parameters", "(", ")", ")", "]", ")", "\n", "print", "(", "'GEN # trainable parameters: {}'", ".", "format", "(", "params", ")", ")", "\n", "params", "=", "sum", "(", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "model", ".", "FAN", ".", "parameters", "(", ")", ")", "]", ")", "\n", "print", "(", "'FAN # trainable parameters: {}'", ".", "format", "(", "params", ")", ")", "\n", "\n", "\n", "\n", "# define data", "\n", "video_dataset", "=", "SuperDB", "(", "path", "=", "args", ".", "data_path", ",", "sigma", "=", "sigma", ",", "size", "=", "args", ".", "size", ",", "flip", "=", "flip", ",", "angle", "=", "angle", ",", "tight", "=", "tight", ",", "db", "=", "args", ".", "db", ")", "\n", "videoloader", "=", "DataLoader", "(", "video_dataset", ",", "batch_size", "=", "bSize", ",", "shuffle", "=", "True", ",", "num_workers", "=", "int", "(", "args", ".", "num_workers", ")", ",", "pin_memory", "=", "True", ")", "\n", "print", "(", "'Number of workers is {:d}, and bSize is {:d}'", ".", "format", "(", "int", "(", "args", ".", "num_workers", ")", ",", "bSize", ")", ")", "\n", "\n", "# define optimizers", "\n", "lr_fan", "=", "args", ".", "lr_fan", "\n", "lr_gan", "=", "args", ".", "lr_gan", "\n", "print", "(", "'Using learning rate {} for FAN, and {} for GAN'", ".", "format", "(", "lr_fan", ",", "lr_gan", ")", ")", "\n", "optimizerFAN", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "FAN", ".", "parameters", "(", ")", ",", "lr", "=", "lr_fan", ",", "betas", "=", "(", "0", ",", "0.9", ")", ",", "weight_decay", "=", "5", "*", "1e-4", ")", "\n", "schedulerFAN", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizerFAN", ",", "step_size", "=", "args", ".", "step_size", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "optimizerGEN", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "GEN", ".", "parameters", "(", ")", ",", "lr", "=", "lr_gan", ",", "betas", "=", "(", "0", ",", "0.9", ")", ",", "weight_decay", "=", "5", "*", "1e-4", ")", "\n", "schedulerGEN", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "StepLR", "(", "optimizerGEN", ",", "step_size", "=", "args", ".", "step_size", ",", "gamma", "=", "args", ".", "gamma", ")", "\n", "myoptimizers", "=", "{", "'FAN'", ":", "optimizerFAN", ",", "'GEN'", ":", "optimizerGEN", "}", "\n", "\n", "# path to save models and images", "\n", "path_to_model", "=", "os", ".", "path", ".", "join", "(", "args", ".", "folder", ",", "args", ".", "file", ")", "\n", "\n", "# train", "\n", "for", "epoch", "in", "range", "(", "0", ",", "80", ")", ":", "\n", "        ", "schedulerFAN", ".", "step", "(", ")", "\n", "schedulerGEN", ".", "step", "(", ")", "\n", "train_epoch", "(", "videoloader", ",", "model", ",", "myoptimizers", ",", "epoch", ",", "bSize", ")", "\n", "model", ".", "_save", "(", "path_to_model", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.train.train_epoch": [[108, 176], ["iter", "time.time", "range", "next", "model.model._set_batch", "model.model.forward", "myoptimizers[].step", "myoptimizers[].step", "[].update", "meters[].update", "time.time", "open", "pickle.dump", "iter", "next", "model.model.loss[].item", "enumerate", "torch.nn.functional.interpolate", "torchvision.utils.save_image", "print", "iter", "next", "all_data[].to().detach", "range", "[].log", "[].log", "[].log", "[].log", "torch.from_numpy().permute", "time.time", "len", "open", "print", "cv2.circle", "numpy.expand_dims", "numpy.concatenate", "torch.from_numpy().permute", "model.model.loss[].item", "str", "all_data[].to", "output[].cpu", "torch.from_numpy", "meters[].keys", "int", "int", "numpy.expand_dims", "torch.from_numpy", "imtmp.permute().numpy", "imtmp.permute", "model.model"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.model._set_batch", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.forward", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.AverageMeter.update"], ["", "", "def", "train_epoch", "(", "dataloader", ",", "model", ",", "myoptimizers", ",", "epoch", ",", "bSize", ")", ":", "\n", "\n", "    ", "itervideo", "=", "iter", "(", "dataloader", ")", "\n", "global", "l_iteration", "\n", "log_epoch", "=", "{", "}", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "2500", ")", ":", "\n", "\n", "\n", "# - get data", "\n", "        ", "all_data", "=", "next", "(", "itervideo", ",", "None", ")", "\n", "if", "all_data", "is", "None", ":", "\n", "            ", "itervideo", "=", "iter", "(", "dataloader", ")", "\n", "all_data", "=", "next", "(", "itervideo", ",", "None", ")", "\n", "", "elif", "all_data", "[", "'Im'", "]", ".", "shape", "[", "0", "]", "<", "bSize", ":", "\n", "            ", "itervideo", "=", "iter", "(", "dataloader", ")", "\n", "all_data", "=", "next", "(", "itervideo", ",", "None", ")", "\n", "\n", "# - set batch", "\n", "", "model", ".", "_set_batch", "(", "all_data", ")", "\n", "\n", "# - forward", "\n", "output", "=", "model", ".", "forward", "(", ")", "\n", "\n", "# - update parameters", "\n", "myoptimizers", "[", "'GEN'", "]", ".", "step", "(", ")", "\n", "myoptimizers", "[", "'FAN'", "]", ".", "step", "(", ")", "\n", "\n", "meters", "[", "'losses'", "]", "[", "'rec'", "]", ".", "update", "(", "model", ".", "loss", "[", "'rec'", "]", ".", "item", "(", ")", ",", "bSize", ")", "\n", "l_iteration", "=", "l_iteration", "+", "1", "\n", "\n", "\n", "if", "i", "%", "100", "==", "0", ":", "\n", "# - plot some images", "\n", "            ", "allimgs", "=", "None", "\n", "for", "(", "ii", ",", "imtmp", ")", "in", "enumerate", "(", "all_data", "[", "'Im'", "]", ".", "to", "(", "'cpu'", ")", ".", "detach", "(", ")", ")", ":", "\n", "                ", "improc", "=", "(", "255", "*", "imtmp", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "copy", "(", ")", "\n", "x", "=", "4", "*", "output", "[", "'Points'", "]", "[", "ii", "]", "\n", "for", "m", "in", "range", "(", "0", ",", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "                    ", "cv2", ".", "circle", "(", "improc", ",", "(", "int", "(", "x", "[", "m", ",", "0", "]", ")", ",", "int", "(", "x", "[", "m", ",", "1", "]", ")", ")", ",", "3", ",", "(", "255", ",", "0", ",", "0", ")", ",", "-", "1", ")", "\n", "", "if", "allimgs", "is", "None", ":", "\n", "                    ", "allimgs", "=", "np", ".", "expand_dims", "(", "improc", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "                    ", "allimgs", "=", "np", ".", "concatenate", "(", "(", "allimgs", ",", "np", ".", "expand_dims", "(", "improc", ",", "axis", "=", "0", ")", ")", ")", "\n", "\n", "", "", "if", "plotter", "is", "not", "None", ":", "\n", "                ", "plotter", "[", "'images'", "]", "[", "'input'", "]", ".", "log", "(", "torch", ".", "from_numpy", "(", "allimgs", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "plotter", "[", "'images'", "]", "[", "'target'", "]", ".", "log", "(", "all_data", "[", "'ImP'", "]", ".", "data", ")", "\n", "plotter", "[", "'images'", "]", "[", "'generated'", "]", ".", "log", "(", "output", "[", "'Reconstructed'", "]", ".", "cpu", "(", ")", ".", "data", ")", "\n", "plotter", "[", "'losses'", "]", "[", "'rec'", "]", ".", "log", "(", "l_iteration", ",", "model", ".", "loss", "[", "'rec'", "]", ".", "item", "(", ")", ")", "\n", "\n", "", "save", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "torch", ".", "from_numpy", "(", "allimgs", "/", "255.0", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ",", "scale_factor", "=", "0.25", ")", "\n", "save_image", "(", "save", ",", "args", ".", "folder", "+", "'/image_{}_{}.png'", ".", "format", "(", "epoch", ",", "i", ")", ")", "\n", "\n", "\n", "", "log_epoch", "[", "i", "]", "=", "model", ".", "loss", "\n", "meters", "[", "'batch_time'", "]", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "if", "i", "%", "args", ".", "print_freq", "==", "0", ":", "\n", "            ", "mystr", "=", "'Epoch [{}][{}/{}] '", ".", "format", "(", "epoch", ",", "i", ",", "len", "(", "dataloader", ")", ")", "\n", "mystr", "+=", "'Time {:.2f} ({:.2f}) '", ".", "format", "(", "meters", "[", "'data_time'", "]", ".", "val", ",", "meters", "[", "'data_time'", "]", ".", "avg", ")", "\n", "mystr", "+=", "' '", ".", "join", "(", "[", "'Loss: {:s} {:.3f} ({:.3f}) '", ".", "format", "(", "k", ",", "meters", "[", "'losses'", "]", "[", "k", "]", ".", "val", ",", "meters", "[", "'losses'", "]", "[", "k", "]", ".", "avg", ")", "for", "k", "in", "meters", "[", "'losses'", "]", ".", "keys", "(", ")", "]", ")", "\n", "print", "(", "mystr", ")", "\n", "with", "open", "(", "args", ".", "folder", "+", "'/args_'", "+", "args", ".", "file", "[", "0", ":", "-", "8", "]", "+", "'.txt'", ",", "'a'", ")", "as", "f", ":", "\n", "                ", "print", "(", "mystr", ",", "file", "=", "f", ")", "\n", "\n", "", "", "", "with", "open", "(", "args", ".", "folder", "+", "'/args_'", "+", "args", ".", "file", "[", "0", ":", "-", "8", "]", "+", "'_'", "+", "str", "(", "epoch", ")", "+", "'.pkl'", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "pickle", ".", "dump", "(", "log_epoch", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.extract_data.loadnet": [[20, 34], ["MTFAN.FAN().to", "torch.load", "FAN().to.load_state_dict", "FAN().to.to", "k.replace", "FAN().to.state_dict", "torch.load", "net.state_dict.update", "FAN().to.load_state_dict", "FAN().to.apply", "MTFAN.FAN", "torch.load.items", "torch.load.items", "torch.load.items"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.AverageMeter.update"], ["def", "loadnet", "(", "npoints", "=", "10", ",", "path_to_model", "=", "None", ",", "path_to_core", "=", "None", ")", ":", "\n", "    ", "net", "=", "FAN", "(", "1", ",", "n_points", "=", "npoints", ")", ".", "to", "(", "'cuda'", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "path_to_model", ")", "\n", "checkpoint", "=", "{", "k", ".", "replace", "(", "'module.'", ",", "''", ")", ":", "v", "for", "k", ",", "v", "in", "checkpoint", ".", "items", "(", ")", "}", "\n", "if", "path_to_core", "is", "not", "None", ":", "\n", "        ", "net_dict", "=", "net", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "path_to_core", ",", "map_location", "=", "'cuda'", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "(", "k", "in", "net_dict", ")", "}", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "pretrained_dict", "[", "k", "]", ".", "shape", "==", "net_dict", "[", "k", "]", ".", "shape", "}", "\n", "net_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "net", ".", "load_state_dict", "(", "net_dict", ",", "strict", "=", "True", ")", "\n", "net", ".", "apply", "(", "convertLayer", ")", "\n", "", "net", ".", "load_state_dict", "(", "checkpoint", ")", "\n", "return", "net", ".", "to", "(", "'cuda'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.extract_data.getdata": [[35, 46], ["torch.no_grad", "numpy.concatenate", "numpy.concatenate", "BOT", "preds.append", "gths.append", "net", "out.cpu().detach", "img.cuda", "out.cpu"], "function", ["None"], ["", "def", "getdata", "(", "loader", ",", "BOT", ",", "net", ")", ":", "\n", "    ", "preds", "=", "[", "]", "\n", "gths", "=", "[", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "sample", "in", "loader", ":", "\n", "            ", "img", "=", "sample", "[", "'Im'", "]", "\n", "pts", "=", "sample", "[", "'pts'", "]", "\n", "_", ",", "out", "=", "BOT", "(", "net", "(", "img", ".", "cuda", "(", ")", ")", ")", "\n", "preds", ".", "append", "(", "out", ".", "cpu", "(", ")", ".", "detach", "(", ")", ")", "\n", "gths", ".", "append", "(", "pts", ")", "\n", "", "", "return", "np", ".", "concatenate", "(", "preds", ")", ",", "np", ".", "concatenate", "(", "gths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.extract_data.extractdata": [[47, 68], ["extract_data.loadnet", "MTFAN.GeoDistill().to", "databases.SuperDB", "torch.utils.data.DataLoader", "print", "extract_data.getdata", "pickle.dump", "os.path.exists", "pickle.load", "data.keys", "open", "MTFAN.GeoDistill", "len", "open", "str"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.extract_data.loadnet", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.extract_data.getdata"], ["", "def", "extractdata", "(", "folder", ",", "epoch", ",", "path_to_core", ",", "db", ",", "tight", ",", "npoints", ",", "data_path", ")", ":", "\n", "# outpickle", "\n", "    ", "outname", "=", "'data_{}.pkl'", ".", "format", "(", "folder", ")", "\n", "# create model", "\n", "path_to_model", "=", "'{}/model_{}.fan.pth'", ".", "format", "(", "folder", ",", "epoch", ")", "\n", "#checkpoint = torch.load(path_to_model)['state_dict']", "\n", "net", "=", "loadnet", "(", "npoints", ",", "path_to_model", ",", "path_to_core", ")", "\n", "BOT", "=", "GeoDistill", "(", "sigma", "=", "0.5", ",", "temperature", "=", "0.1", ")", ".", "to", "(", "'cuda'", ")", "\n", "# create data", "\n", "database", "=", "SuperDB", "(", "path", "=", "data_path", ",", "size", "=", "128", ",", "flip", "=", "False", ",", "angle", "=", "0.0", ",", "tight", "=", "tight", "or", "64", ",", "db", "=", "db", ",", "affine", "=", "True", ")", "\n", "num_workers", "=", "12", "\n", "dbloader", "=", "DataLoader", "(", "database", ",", "batch_size", "=", "30", ",", "shuffle", "=", "False", ",", "num_workers", "=", "num_workers", ",", "pin_memory", "=", "False", ")", "\n", "# extract data        ", "\n", "print", "(", "'Extracting data from {:s}, with {:d} imgs'", ".", "format", "(", "db", ",", "len", "(", "database", ")", ")", ")", "\n", "Ptr", ",", "Gtr", "=", "getdata", "(", "dbloader", ",", "BOT", ",", "net", ")", "\n", "# dump data", "\n", "data", "=", "pickle", ".", "load", "(", "open", "(", "outname", ",", "'rb'", ")", ")", "if", "os", ".", "path", ".", "exists", "(", "outname", ")", "else", "{", "}", "\n", "if", "db", "not", "in", "data", ".", "keys", "(", ")", ":", "\n", "        ", "data", "[", "db", "]", "=", "{", "}", "\n", "", "data", "[", "db", "]", "[", "str", "(", "epoch", ")", "]", "=", "{", "'Ptr'", ":", "Ptr", ",", "'Gtr'", ":", "Gtr", "}", "\n", "pickle", ".", "dump", "(", "data", ",", "open", "(", "outname", ",", "'wb'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.extract_data.main": [[69, 89], ["parser.parse_args", "extract_data.extractdata", "GPU.getGPUs", "print", "idx.index.index", "print", "str", "str", "min", "len", "min", "range", "len"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.parse_args", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.extract_data.extractdata"], ["", "def", "main", "(", ")", ":", "\n", "# input parameters    ", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "assert", "args", ".", "db", "in", "[", "'CelebA'", ",", "'AFLW-train'", ",", "'AFLW-test'", ",", "'MAFL-train'", ",", "'MAFL-test'", "]", ",", "'Please choose between CelebA, AFLW-train, AFLW-test, MAFL-train, MAFL-test'", "\n", "if", "args", ".", "cuda", "==", "'auto'", ":", "\n", "        ", "import", "GPUtil", "as", "GPU", "\n", "GPUs", "=", "GPU", ".", "getGPUs", "(", ")", "\n", "idx", "=", "[", "GPUs", "[", "j", "]", ".", "memoryUsed", "for", "j", "in", "range", "(", "len", "(", "GPUs", ")", ")", "]", "\n", "print", "(", "idx", ")", "\n", "assert", "min", "(", "idx", ")", "<", "11.0", ",", "'All {} GPUs are in use'", ".", "format", "(", "len", "(", "GPUs", ")", ")", "\n", "idx", "=", "idx", ".", "index", "(", "min", "(", "idx", ")", ")", "\n", "print", "(", "'Assigning CUDA_VISIBLE_DEVICES={}'", ".", "format", "(", "idx", ")", ")", "\n", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "str", "(", "idx", ")", "\n", "", "else", ":", "\n", "        ", "os", ".", "environ", "[", "\"CUDA_VISIBLE_DEVICES\"", "]", "=", "str", "(", "args", ".", "cuda", ")", "\n", "", "folder", ",", "epoch", "=", "args", ".", "f", ",", "args", ".", "e", "\n", "path_to_core", "=", "args", ".", "core", "#'checkpoint_fansoft/fan_109.pth'", "\n", "db", "=", "args", ".", "db", "#'AFLW'", "\n", "tight", "=", "args", ".", "t", "\n", "extractdata", "(", "folder", ",", "epoch", ",", "path_to_core", ",", "db", ",", "tight", ",", "npoints", "=", "10", ",", "data_path", "=", "args", ".", "data_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.main": [[12, 45], ["parser.parse_args", "folder.replace.replace", "os.path.exists", "pickle.load", "str", "print", "Xtr.reshape.reshape", "Xtest.reshape.reshape", "all_errors[].append", "pickle.dump", "print", "open", "print", "print", "pickle.load", "Ytr.reshape", "Ytest.reshape", "open", "os.path.exists", "open", "test.compute_errors", "test.compute_errors"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.Train_options.Options.parse_args", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.compute_errors", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.compute_errors"], ["def", "main", "(", ")", ":", "\n", "# input parameters", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "npoints", "=", "args", ".", "npoints", "\n", "folder", "=", "args", ".", "f", "\n", "folder", "=", "folder", ".", "replace", "(", "'/'", ",", "''", ")", "\n", "assert", "os", ".", "path", ".", "exists", "(", "f'data_{folder}.pkl'", ")", ",", "'Data not extracted yet'", "\n", "data", "=", "pickle", ".", "load", "(", "open", "(", "'data_{}.pkl'", ".", "format", "(", "folder", ")", ",", "'rb'", ")", ")", "\n", "db", "=", "args", ".", "db", "\n", "fwd", "=", "args", ".", "mode", "==", "'fwd'", "\n", "output_file", "=", "'allerrors_{}_{}.pkl'", ".", "format", "(", "folder", ",", "'fwd'", "if", "fwd", "else", "'bwd'", ")", "\n", "if", "fwd", ":", "\n", "        ", "print", "(", "'Forward training --------- '", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Backward training --------- '", ")", "\n", "", "all_errors", "=", "{", "}", "if", "not", "os", ".", "path", ".", "exists", "(", "output_file", ")", "else", "pickle", ".", "load", "(", "open", "(", "output_file", ",", "'rb'", ")", ")", "\n", "reg_factor", "=", "args", ".", "reg", "\n", "e", "=", "str", "(", "args", ".", "epoch", ")", "\n", "print", "(", "'Doing epoch {}'", ".", "format", "(", "e", ")", ")", "\n", "all_errors", "[", "e", "]", "=", "[", "]", "\n", "dbtrain", "=", "db", "+", "'-train'", "\n", "dbtest", "=", "db", "+", "'-test'", "\n", "Ytr", "=", "data", "[", "dbtrain", "]", "[", "e", "]", "[", "'Gtr'", "]", "\n", "Ytr", "=", "Ytr", ".", "reshape", "(", "Ytr", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "/", "4", "\n", "Xtr", "=", "data", "[", "dbtrain", "]", "[", "e", "]", "[", "'Ptr'", "]", "\n", "Xtr", "=", "Xtr", ".", "reshape", "(", "Xtr", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "Ytest", "=", "data", "[", "dbtest", "]", "[", "e", "]", "[", "'Gtr'", "]", "\n", "Ytest", "=", "Ytest", ".", "reshape", "(", "Ytest", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "/", "4", "\n", "Xtest", "=", "data", "[", "dbtest", "]", "[", "e", "]", "[", "'Ptr'", "]", "\n", "Xtest", "=", "Xtest", ".", "reshape", "(", "Xtest", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "all_errors", "[", "e", "]", ".", "append", "(", "compute_errors", "(", "Xtr", ",", "Ytr", ",", "Xtest", ",", "Ytest", ",", "reg_factor", ",", "True", ")", "if", "fwd", "else", "compute_errors", "(", "Ytr", ",", "Xtr", ",", "Ytest", ",", "Xtest", ",", "reg_factor", ",", "False", ")", ")", "\n", "pickle", ".", "dump", "(", "all_errors", ",", "open", "(", "output_file", ",", "'wb'", ")", ")", "\n", "print", "(", "all_errors", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.compute_errors": [[46, 69], ["numpy.zeros", "range", "len", "range", "len", "test.train_regressor", "numpy.zeros", "range", "numpy.mean", "numpy.random.permutation", "range", "test.fit_regressor", "test.NMSE", "test.compute_iod", "test.fit_regressor", "y.reshape.reshape", "y.reshape.reshape", "fit_regressor.reshape", "numpy.sum", "numpy.sqrt", "numpy.sum"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.train_regressor", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.fit_regressor", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.NMSE", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.compute_iod", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.fit_regressor"], ["", "def", "compute_errors", "(", "Xtr", ",", "Ytr", ",", "Xtest", ",", "Ytest", ",", "reg_factor", ",", "fwd", "=", "True", ")", ":", "\n", "    ", "npts", "=", "10", "\n", "n", "=", "[", "1", ",", "5", ",", "10", ",", "100", ",", "500", ",", "1000", ",", "5000", ",", "Xtr", ".", "shape", "[", "0", "]", "]", "\n", "nrepeats", "=", "10", "\n", "all_errors", "=", "np", ".", "zeros", "(", "(", "len", "(", "n", ")", ",", "nrepeats", ")", ")", "\n", "for", "tmp_idx", "in", "range", "(", "0", ",", "len", "(", "n", ")", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "0", ",", "nrepeats", ")", ":", "\n", "            ", "idx", "=", "np", ".", "random", ".", "permutation", "(", "(", "range", "(", "0", ",", "Xtr", ".", "shape", "[", "0", "]", ")", ")", ")", "[", "0", ":", "n", "[", "tmp_idx", "]", "+", "1", "]", "\n", "R", ",", "X0", ",", "Y0", "=", "train_regressor", "(", "Xtr", "[", "idx", ",", ":", "]", ",", "Ytr", "[", "idx", ",", ":", "]", ",", "reg_factor", ")", "\n", "err", "=", "np", ".", "zeros", "(", "(", "Xtest", ".", "shape", "[", "0", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "Xtest", ".", "shape", "[", "0", "]", ")", ":", "\n", "                ", "x", "=", "Xtest", "[", "i", ",", ":", "]", "\n", "y", "=", "Ytest", "[", "i", ",", ":", "]", "\n", "if", "fwd", ":", "\n", "                    ", "x", "=", "fit_regressor", "(", "R", ",", "x", ",", "X0", ",", "Y0", ")", "\n", "err", "[", "i", "]", "=", "NMSE", "(", "y", ".", "reshape", "(", "-", "1", ",", "2", ")", ",", "x", ")", "\n", "", "else", ":", "\n", "                    ", "iod", "=", "compute_iod", "(", "x", ".", "reshape", "(", "-", "1", ",", "2", ")", ")", "\n", "x", "=", "fit_regressor", "(", "R", ",", "x", ",", "X0", ",", "Y0", ")", "\n", "y", "=", "y", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "err", "[", "i", "]", "=", "np", ".", "sum", "(", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "x", "-", "y", ")", "**", "2", ",", "1", ")", ")", ")", "/", "(", "iod", "*", "npts", ")", "\n", "", "", "all_errors", "[", "tmp_idx", ",", "j", "]", "=", "np", ".", "mean", "(", "err", ")", "\n", "", "", "return", "all_errors", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.NMSE": [[70, 80], ["numpy.sqrt", "numpy.sqrt", "numpy.mean", "len", "landmarks_gt.reshape.reshape", "len", "landmarks_regressed.reshape.reshape", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "NMSE", "(", "landmarks_gt", ",", "landmarks_regressed", ")", ":", "\n", "    ", "if", "len", "(", "landmarks_gt", ".", "shape", ")", "==", "2", ":", "\n", "        ", "landmarks_gt", "=", "landmarks_gt", ".", "reshape", "(", "1", ",", "-", "1", ",", "2", ")", "\n", "", "if", "len", "(", "landmarks_regressed", ".", "shape", ")", "==", "2", ":", "\n", "        ", "landmarks_regressed", "=", "landmarks_regressed", ".", "reshape", "(", "1", ",", "-", "1", ",", "2", ")", "\n", "", "eyes", "=", "landmarks_gt", "[", ":", ",", ":", "2", ",", ":", "]", "if", "landmarks_gt", ".", "shape", "[", "1", "]", "==", "5", "else", "landmarks_gt", "[", ":", ",", "[", "36", ",", "45", "]", ",", ":", "]", "\n", "occular_distances", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "eyes", "[", ":", ",", "0", ",", ":", "]", "-", "eyes", "[", ":", ",", "1", ",", ":", "]", ")", "**", "2", ",", "axis", "=", "-", "1", ")", ")", "\n", "distances", "=", "np", ".", "sqrt", "(", "np", ".", "sum", "(", "(", "landmarks_gt", "-", "landmarks_regressed", ")", "**", "2", ",", "axis", "=", "-", "1", ")", ")", "\n", "mean_error", "=", "np", ".", "mean", "(", "distances", "/", "occular_distances", "[", ":", ",", "None", "]", ")", "\n", "return", "mean_error", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.train_regressor": [[81, 92], ["Xtmp.mean", "Ytmp.mean", "Xtmp.transpose", "numpy.linalg.inv", "numpy.ones", "Xtmp.mean.reshape", "numpy.ones", "Ytmp.mean.reshape", "Ytmp.transpose", "numpy.eye", "C.max"], "function", ["None"], ["", "def", "train_regressor", "(", "X", ",", "Y", ",", "l", ",", "size", "=", "64", ")", ":", "\n", "    ", "center", "=", "size", "/", "2", "\n", "Xtmp", "=", "X", "/", "center", "-", "0.5", "\n", "X0", "=", "Xtmp", ".", "mean", "(", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "Xtmp", "=", "Xtmp", "-", "np", ".", "ones", "(", "(", "Xtmp", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "@", "X0", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "C", "=", "Xtmp", ".", "transpose", "(", ")", "@", "Xtmp", "\n", "Ytmp", "=", "Y", "/", "center", "-", "0.5", "\n", "Y0", "=", "Ytmp", ".", "mean", "(", "axis", "=", "0", ",", "keepdims", "=", "True", ")", "\n", "Ytmp", "=", "Ytmp", "-", "np", ".", "ones", "(", "(", "Ytmp", ".", "shape", "[", "0", "]", ",", "1", ")", ")", "@", "Y0", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "R", "=", "(", "Ytmp", ".", "transpose", "(", ")", "@", "Xtmp", ")", "@", "np", ".", "linalg", ".", "inv", "(", "C", "+", "l", "*", "(", "C", ".", "max", "(", ")", "+", "1e-12", ")", "*", "np", ".", "eye", "(", "Xtmp", ".", "shape", "[", "1", "]", ")", ")", "\n", "return", "R", ",", "X0", ",", "Y0", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.fit_regressor": [[93, 98], ["Y0.reshape"], "function", ["None"], ["", "def", "fit_regressor", "(", "R", ",", "x", ",", "X0", ",", "Y0", ",", "size", "=", "64", ")", ":", "\n", "    ", "center", "=", "size", "/", "2", "\n", "x", "=", "(", "R", "@", "(", "x", "/", "center", "-", "0.5", "-", "X0", ")", ".", "transpose", "(", ")", ")", ".", "reshape", "(", "-", "1", ",", "2", ")", "+", "Y0", ".", "reshape", "(", "-", "1", ",", "2", ")", "\n", "x", "=", "(", "x", "+", "0.5", ")", "*", "center", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.compute_iod": [[99, 105], ["numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "def", "compute_iod", "(", "y", ")", ":", "\n", "    ", "if", "y", ".", "shape", "[", "0", "]", "==", "5", ":", "\n", "        ", "iod", "=", "np", ".", "sqrt", "(", "(", "y", "[", "0", ",", "0", "]", "-", "y", "[", "1", ",", "0", "]", ")", "**", "2", "+", "(", "y", "[", "0", ",", "1", "]", "-", "y", "[", "1", ",", "1", "]", ")", "**", "2", ")", "\n", "", "else", ":", "\n", "        ", "iod", "=", "np", ".", "sqrt", "(", "(", "y", "[", "36", ",", "0", "]", "-", "y", "[", "45", ",", "0", "]", ")", "**", "2", "+", "(", "y", "[", "36", ",", "1", "]", "-", "y", "[", "45", ",", "1", "]", ")", "**", "2", ")", "\n", "", "return", "iod", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.MyConv2d.__init__": [[34, 46], ["torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "str().find", "torch.nn.modules.conv._ConvNd.__init__", "torch.nn.modules.conv._ConvNd.__init__", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "torch.nn.modules.utils._pair", "str", "inspect.signature"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", ":", "\n", "        ", "kernel_size", "=", "_pair", "(", "kernel_size", ")", "\n", "stride", "=", "_pair", "(", "stride", ")", "\n", "padding", "=", "_pair", "(", "padding", ")", "\n", "dilation", "=", "_pair", "(", "dilation", ")", "\n", "if", "str", "(", "inspect", ".", "signature", "(", "_ConvNd", ")", ")", ".", "find", "(", "'padding_mode'", ")", ">", "-", "1", ":", "\n", "            ", "super", "(", "MyConv2d", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "False", ",", "_pair", "(", "0", ")", ",", "groups", ",", "bias", ",", "padding_mode", "=", "'zeros'", ")", "\n", "", "else", ":", "\n", "            ", "super", "(", "MyConv2d", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "\n", "False", ",", "_pair", "(", "0", ")", ",", "groups", ",", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.MyConv2d.forward": [[47, 56], ["hasattr", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm.view", "torch.mm.view", "torch.mm.view", "torch.conv2d", "torch.conv2d", "torch.conv2d", "MTFAN.MyConv2d.old_weight.view", "torch.mm.size", "torch.mm.size", "torch.mm.size", "MTFAN.MyConv2d.old_weight.size", "MTFAN.MyConv2d.old_weight.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "'weight'", ")", ":", "\n", "            ", "return", "F", ".", "conv2d", "(", "input", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "\n", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "", "else", ":", "\n", "            ", "temp", "=", "torch", ".", "mm", "(", "self", ".", "W", ",", "self", ".", "old_weight", ".", "view", "(", "self", ".", "old_weight", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "self", ".", "new_weight", "=", "temp", ".", "view", "(", "temp", ".", "size", "(", "0", ")", ",", "self", ".", "old_weight", ".", "size", "(", "1", ")", ",", "self", ".", "kernel_size", "[", "0", "]", ",", "self", ".", "kernel_size", "[", "1", "]", ")", "\n", "return", "F", ".", "conv2d", "(", "input", ",", "self", ".", "new_weight", ",", "self", ".", "bias", ",", "self", ".", "stride", ",", "\n", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.ConvBlock.__init__": [[59, 77], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "MTFAN.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "MTFAN.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "MTFAN.conv3x3", "int", "int", "int", "int", "int", "int", "int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.conv3x3", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.conv3x3", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ")", ":", "\n", "        ", "super", "(", "ConvBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "in_planes", ",", "int", "(", "out_planes", "/", "2", ")", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "int", "(", "out_planes", "/", "2", ")", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "int", "(", "out_planes", "/", "2", ")", ",", "int", "(", "out_planes", "/", "4", ")", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "int", "(", "out_planes", "/", "4", ")", ")", "\n", "self", ".", "conv3", "=", "conv3x3", "(", "int", "(", "out_planes", "/", "4", ")", ",", "int", "(", "out_planes", "/", "4", ")", ")", "\n", "\n", "if", "in_planes", "!=", "out_planes", ":", "\n", "            ", "self", ".", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "downsample", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.ConvBlock.forward": [[78, 101], ["MTFAN.ConvBlock.bn1", "torch.relu", "torch.relu", "torch.relu", "MTFAN.ConvBlock.conv1", "MTFAN.ConvBlock.bn2", "torch.relu", "torch.relu", "torch.relu", "MTFAN.ConvBlock.conv2", "MTFAN.ConvBlock.bn3", "torch.relu", "torch.relu", "torch.relu", "MTFAN.ConvBlock.conv3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "MTFAN.ConvBlock.downsample"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out1", "=", "self", ".", "bn1", "(", "x", ")", "\n", "out1", "=", "F", ".", "relu", "(", "out1", ",", "True", ")", "\n", "out1", "=", "self", ".", "conv1", "(", "out1", ")", "\n", "\n", "out2", "=", "self", ".", "bn2", "(", "out1", ")", "\n", "out2", "=", "F", ".", "relu", "(", "out2", ",", "True", ")", "\n", "out2", "=", "self", ".", "conv2", "(", "out2", ")", "\n", "\n", "out3", "=", "self", ".", "bn3", "(", "out2", ")", "\n", "out3", "=", "F", ".", "relu", "(", "out3", ",", "True", ")", "\n", "out3", "=", "self", ".", "conv3", "(", "out3", ")", "\n", "\n", "out3", "=", "torch", ".", "cat", "(", "(", "out1", ",", "out2", ",", "out3", ")", ",", "1", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "residual", ")", "\n", "\n", "", "out3", "+=", "residual", "\n", "\n", "return", "out3", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.HourGlass.__init__": [[103, 110], ["torch.Module.__init__", "MTFAN.HourGlass._generate_network"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.HourGlass._generate_network"], ["    ", "def", "__init__", "(", "self", ",", "num_modules", ",", "depth", ",", "num_features", ")", ":", "\n", "        ", "super", "(", "HourGlass", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_modules", "=", "num_modules", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "features", "=", "num_features", "\n", "\n", "self", ".", "_generate_network", "(", "self", ".", "depth", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.HourGlass._generate_network": [[111, 122], ["MTFAN.HourGlass.add_module", "MTFAN.HourGlass.add_module", "MTFAN.HourGlass.add_module", "MTFAN.ConvBlock", "MTFAN.ConvBlock", "MTFAN.HourGlass._generate_network", "MTFAN.HourGlass.add_module", "MTFAN.ConvBlock", "str", "str", "MTFAN.ConvBlock", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.HourGlass._generate_network"], ["", "def", "_generate_network", "(", "self", ",", "level", ")", ":", "\n", "        ", "self", ".", "add_module", "(", "'b1_'", "+", "str", "(", "level", ")", ",", "ConvBlock", "(", "self", ".", "features", ",", "self", ".", "features", ")", ")", "\n", "\n", "self", ".", "add_module", "(", "'b2_'", "+", "str", "(", "level", ")", ",", "ConvBlock", "(", "self", ".", "features", ",", "self", ".", "features", ")", ")", "\n", "\n", "if", "level", ">", "1", ":", "\n", "            ", "self", ".", "_generate_network", "(", "level", "-", "1", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "add_module", "(", "'b2_plus_'", "+", "str", "(", "level", ")", ",", "ConvBlock", "(", "self", ".", "features", ",", "self", ".", "features", ")", ")", "\n", "\n", "", "self", ".", "add_module", "(", "'b3_'", "+", "str", "(", "level", ")", ",", "ConvBlock", "(", "self", ".", "features", ",", "self", ".", "features", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.HourGlass._forward": [[123, 144], ["torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.interpolate", "torch.interpolate", "torch.interpolate", "MTFAN.HourGlass._forward", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.HourGlass._forward"], ["", "def", "_forward", "(", "self", ",", "level", ",", "inp", ")", ":", "\n", "# Upper branch", "\n", "        ", "up1", "=", "inp", "\n", "up1", "=", "self", ".", "_modules", "[", "'b1_'", "+", "str", "(", "level", ")", "]", "(", "up1", ")", "\n", "\n", "# Lower branch", "\n", "low1", "=", "F", ".", "avg_pool2d", "(", "inp", ",", "2", ",", "stride", "=", "2", ")", "\n", "low1", "=", "self", ".", "_modules", "[", "'b2_'", "+", "str", "(", "level", ")", "]", "(", "low1", ")", "\n", "\n", "if", "level", ">", "1", ":", "\n", "            ", "low2", "=", "self", ".", "_forward", "(", "level", "-", "1", ",", "low1", ")", "\n", "", "else", ":", "\n", "            ", "low2", "=", "low1", "\n", "low2", "=", "self", ".", "_modules", "[", "'b2_plus_'", "+", "str", "(", "level", ")", "]", "(", "low2", ")", "\n", "\n", "", "low3", "=", "low2", "\n", "low3", "=", "self", ".", "_modules", "[", "'b3_'", "+", "str", "(", "level", ")", "]", "(", "low3", ")", "\n", "\n", "up2", "=", "F", ".", "interpolate", "(", "low3", ",", "scale_factor", "=", "2", ",", "mode", "=", "'nearest'", ")", "\n", "\n", "return", "up1", "+", "up2", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.HourGlass.forward": [[145, 147], ["MTFAN.HourGlass._forward"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.HourGlass._forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "_forward", "(", "self", ".", "depth", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.FAN.__init__": [[151, 177], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "MTFAN.ConvBlock", "MTFAN.ConvBlock", "MTFAN.ConvBlock", "range", "MTFAN.FAN.add_module", "MTFAN.FAN.add_module", "MTFAN.FAN.add_module", "MTFAN.FAN.add_module", "MTFAN.FAN.add_module", "MTFAN.HourGlass", "MTFAN.ConvBlock", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "MTFAN.FAN.add_module", "MTFAN.FAN.add_module", "str", "str", "str", "str", "str", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_modules", "=", "1", ",", "n_points", "=", "66", ")", ":", "\n", "        ", "super", "(", "FAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_modules", "=", "num_modules", "\n", "\n", "# Base part", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "conv2", "=", "ConvBlock", "(", "64", ",", "128", ")", "\n", "self", ".", "conv3", "=", "ConvBlock", "(", "128", ",", "128", ")", "\n", "self", ".", "conv4", "=", "ConvBlock", "(", "128", ",", "256", ")", "\n", "\n", "# Stacking part", "\n", "for", "hg_module", "in", "range", "(", "self", ".", "num_modules", ")", ":", "\n", "            ", "self", ".", "add_module", "(", "'m'", "+", "str", "(", "hg_module", ")", ",", "HourGlass", "(", "1", ",", "4", ",", "256", ")", ")", "\n", "self", ".", "add_module", "(", "'top_m_'", "+", "str", "(", "hg_module", ")", ",", "ConvBlock", "(", "256", ",", "256", ")", ")", "\n", "self", ".", "add_module", "(", "'conv_last'", "+", "str", "(", "hg_module", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "\n", "self", ".", "add_module", "(", "'bn_end'", "+", "str", "(", "hg_module", ")", ",", "nn", ".", "BatchNorm2d", "(", "256", ")", ")", "\n", "self", ".", "add_module", "(", "'l_'", "+", "str", "(", "hg_module", ")", ",", "nn", ".", "Conv2d", "(", "256", ",", "\n", "n_points", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "\n", "\n", "if", "hg_module", "<", "self", ".", "num_modules", "-", "1", ":", "\n", "                ", "self", ".", "add_module", "(", "\n", "'bl'", "+", "str", "(", "hg_module", ")", ",", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "\n", "self", ".", "add_module", "(", "'al'", "+", "str", "(", "hg_module", ")", ",", "nn", ".", "Conv2d", "(", "n_points", ",", "\n", "256", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.FAN.forward": [[179, 208], ["torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "MTFAN.FAN.conv3", "MTFAN.FAN.conv4", "range", "MTFAN.FAN.bn1", "MTFAN.FAN.conv2", "torch.relu", "torch.relu", "torch.relu", "outputs.append", "MTFAN.FAN.conv1", "str", "str", "str", "str", "str", "str", "str"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ",", "True", ")", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "self", ".", "conv2", "(", "x", ")", ",", "2", ",", "stride", "=", "2", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "\n", "previous", "=", "x", "\n", "\n", "outputs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_modules", ")", ":", "\n", "            ", "hg", "=", "self", ".", "_modules", "[", "'m'", "+", "str", "(", "i", ")", "]", "(", "previous", ")", "\n", "\n", "ll", "=", "hg", "\n", "ll", "=", "self", ".", "_modules", "[", "'top_m_'", "+", "str", "(", "i", ")", "]", "(", "ll", ")", "\n", "\n", "ll", "=", "F", ".", "relu", "(", "self", ".", "_modules", "[", "'bn_end'", "+", "str", "(", "i", ")", "]", "\n", "(", "self", ".", "_modules", "[", "'conv_last'", "+", "str", "(", "i", ")", "]", "(", "ll", ")", ")", ",", "True", ")", "\n", "\n", "# Predict heatmaps", "\n", "tmp_out", "=", "self", ".", "_modules", "[", "'l_'", "+", "str", "(", "i", ")", "]", "(", "ll", ")", "\n", "outputs", ".", "append", "(", "tmp_out", ")", "\n", "\n", "if", "i", "<", "self", ".", "num_modules", "-", "1", ":", "\n", "                ", "ll", "=", "self", ".", "_modules", "[", "'bl'", "+", "str", "(", "i", ")", "]", "(", "ll", ")", "\n", "tmp_out_", "=", "self", ".", "_modules", "[", "'al'", "+", "str", "(", "i", ")", "]", "(", "tmp_out", ")", "\n", "previous", "=", "previous", "+", "ll", "+", "tmp_out_", "\n", "\n", "", "", "out", "=", "outputs", "[", "-", "1", "]", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.GeoDistill.__init__": [[211, 215], ["torch.Module.__init__", "utils.SoftArgmax2D", "utils.HeatMap"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sigma", "=", "0.5", ",", "temperature", "=", "0.1", ",", "out_res", "=", "32", ")", ":", "\n", "        ", "super", "(", "GeoDistill", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "softargmax", "=", "SoftArgmax2D", "(", "softmax_temp", "=", "temperature", ")", "\n", "self", ".", "heatmap", "=", "HeatMap", "(", "out_res", "=", "out_res", ",", "sigma", "=", "sigma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.GeoDistill.forward": [[216, 220], ["MTFAN.GeoDistill.softargmax", "MTFAN.GeoDistill.heatmap"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "pts", "=", "self", ".", "softargmax", "(", "x", ")", "\n", "out", "=", "self", ".", "heatmap", "(", "pts", ")", "\n", "return", "out", ",", "pts", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.conv3x3": [[7, 11], ["MTFAN.MyConv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "strd", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "MyConv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "strd", ",", "padding", "=", "padding", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.convertLayer": [[12, 21], ["isinstance", "m.weight.clone().detach", "m.old_weight.to", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "m.new_weight.to", "m.register_parameter", "m.__delattr__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "m.weight.clone", "torch.eye", "torch.eye", "torch.eye"], "function", ["None"], ["", "def", "convertLayer", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "MyConv2d", ")", ":", "\n", "       ", "m", ".", "old_weight", "=", "(", "m", ".", "weight", ".", "clone", "(", ")", ")", ".", "detach", "(", ")", "\n", "m", ".", "old_weight", ".", "requires_grad", "=", "False", "\n", "m", ".", "old_weight", "=", "m", ".", "old_weight", ".", "to", "(", "'cuda'", ")", "\n", "m", ".", "new_weight", "=", "torch", ".", "zeros_like", "(", "m", ".", "old_weight", ")", "\n", "m", ".", "new_weight", "=", "m", ".", "new_weight", ".", "to", "(", "'cuda'", ")", "\n", "m", ".", "register_parameter", "(", "'W'", ",", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "eye", "(", "m", ".", "out_channels", ",", "m", ".", "out_channels", ")", ")", ")", "\n", "m", ".", "__delattr__", "(", "'weight'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.MTFAN.convertBack": [[23, 31], ["hasattr", "torch.mm", "torch.mm", "torch.mm", "torch.mm.view", "m.register_parameter", "m.__delattr__", "m.__delattr__", "m.__delattr__", "m.old_weight.view", "torch.mm.size", "m.old_weight.size", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "m.old_weight.size"], "function", ["None"], ["", "", "def", "convertBack", "(", "m", ")", ":", "\n", "    ", "if", "hasattr", "(", "m", ",", "'W'", ")", ":", "\n", "        ", "temp", "=", "torch", ".", "mm", "(", "m", ".", "W", ".", "data", ",", "m", ".", "old_weight", ".", "view", "(", "m", ".", "old_weight", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "new_weight", "=", "temp", ".", "view", "(", "temp", ".", "size", "(", "0", ")", ",", "m", ".", "old_weight", ".", "size", "(", "1", ")", ",", "m", ".", "kernel_size", "[", "0", "]", ",", "m", ".", "kernel_size", "[", "1", "]", ")", "\n", "m", ".", "register_parameter", "(", "'weight'", ",", "torch", ".", "nn", ".", "Parameter", "(", "new_weight", ")", ")", "\n", "m", ".", "__delattr__", "(", "'W'", ")", "\n", "m", ".", "__delattr__", "(", "'old_weight'", ")", "\n", "m", ".", "__delattr__", "(", "'new_weight'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.ResidualBlock.__init__": [[13, 21], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__"], ["def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ")", ":", "\n", "        ", "super", "(", "ResidualBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "dim_in", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "dim_out", ",", "dim_out", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "dim_out", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.ResidualBlock.forward": [[22, 24], ["model.ResidualBlock.main"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.main"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "+", "self", ".", "main", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.Generator.__init__": [[27, 60], ["torch.Module.__init__", "layers.append", "layers.append", "layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "range", "range", "layers.append", "layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "layers.append", "layers.append", "layers.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "layers.append", "layers.append", "layers.append", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "model.ResidualBlock", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__"], ["def", "__init__", "(", "self", ",", "conv_dim", "=", "64", ",", "c_dim", "=", "66", ",", "repeat_num", "=", "6", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "3", ",", "conv_dim", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "conv_dim", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "# Down-sampling layers.", "\n", "curr_dim", "=", "conv_dim", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "curr_dim", ",", "curr_dim", "*", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "curr_dim", "*", "2", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "curr_dim", "=", "curr_dim", "*", "2", "\n", "", "self", ".", "downsampling", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "layers", "=", "[", "]", "\n", "curr_dim", "=", "curr_dim", "+", "c_dim", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "curr_dim", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "# Bottleneck layers.", "\n", "for", "i", "in", "range", "(", "repeat_num", ")", ":", "\n", "            ", "layers", ".", "append", "(", "ResidualBlock", "(", "dim_in", "=", "curr_dim", ",", "dim_out", "=", "curr_dim", ")", ")", "\n", "\n", "# Up-sampling layers.", "\n", "", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "ConvTranspose2d", "(", "curr_dim", ",", "curr_dim", "//", "2", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "curr_dim", "//", "2", ",", "affine", "=", "True", ",", "track_running_stats", "=", "True", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "curr_dim", "=", "curr_dim", "//", "2", "\n", "\n", "", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "curr_dim", ",", "3", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "Tanh", "(", ")", ")", "\n", "self", ".", "main", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.Generator.forward": [[61, 65], ["model.Generator.downsampling", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.Generator.main"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.test.main"], ["", "def", "forward", "(", "self", ",", "x", ",", "maps", ")", ":", "\n", "        ", "x", "=", "self", ".", "downsampling", "(", "x", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "maps", ")", ",", "1", ")", "\n", "return", "self", ".", "main", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.model.__init__": [[72, 116], ["MTFAN.FAN", "MTFAN.GeoDistill", "model.Generator", "model.model.FAN.to().train", "model.model.BOT.to().train", "model.model.GEN.to().train", "model.model.loss_network.eval", "model.model.loss_network.to", "dict.fromkeys", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "torch.nn.MSELoss().to", "model.model.FAN.state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "model.model.update", "model.model.FAN.load_state_dict", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "utils.LossNetwork", "utils.LossNetwork", "print", "model.model.FAN.apply", "int", "model.model.FAN.to", "model.model.BOT.to", "model.model.GEN.to", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torchvision.models.vgg.vgg16", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "torch.load.items", "torchvision.models.vgg.vgg16"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.AverageMeter.update"], ["    ", "def", "__init__", "(", "self", ",", "sigma", "=", "0.5", ",", "temperature", "=", "0.5", ",", "gradclip", "=", "1", ",", "npts", "=", "10", ",", "option", "=", "'incremental'", ",", "size", "=", "128", ",", "path_to_check", "=", "'checkpoint_fansoft/fan_109.pth'", ")", ":", "\n", "        ", "self", ".", "npoints", "=", "npts", "\n", "self", ".", "gradclip", "=", "gradclip", "\n", "\n", "# - define FAN", "\n", "self", ".", "FAN", "=", "FAN", "(", "1", ",", "n_points", "=", "self", ".", "npoints", ")", "\n", "\n", "if", "not", "option", "==", "'scratch'", ":", "\n", "            ", "net_dict", "=", "self", ".", "FAN", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "torch", ".", "load", "(", "path_to_check", ",", "map_location", "=", "'cuda'", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "(", "k", "in", "net_dict", ")", "}", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "pretrained_dict", "[", "k", "]", ".", "shape", "==", "net_dict", "[", "k", "]", ".", "shape", "}", "\n", "net_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "self", ".", "FAN", ".", "load_state_dict", "(", "net_dict", ",", "strict", "=", "True", ")", "\n", "if", "option", "==", "'incremental'", ":", "\n", "                ", "print", "(", "'Option is incremental'", ")", "\n", "self", ".", "FAN", ".", "apply", "(", "convertLayer", ")", "\n", "\n", "# - define Bottleneck", "\n", "", "", "self", ".", "BOT", "=", "GeoDistill", "(", "sigma", "=", "sigma", ",", "temperature", "=", "temperature", ",", "out_res", "=", "int", "(", "size", "/", "4", ")", ")", "\n", "\n", "# - define GEN      ", "\n", "self", ".", "GEN", "=", "Generator", "(", "conv_dim", "=", "32", ",", "c_dim", "=", "self", ".", "npoints", ")", "\n", "\n", "# - multiple GPUs", "\n", "if", "torch", ".", "cuda", ".", "device_count", "(", ")", ">", "1", ":", "\n", "            ", "self", ".", "FAN", "=", "torch", ".", "nn", ".", "DataParallel", "(", "self", ".", "FAN", ")", "\n", "self", ".", "BOT", "=", "torch", ".", "nn", ".", "DataParallel", "(", "self", ".", "BOT", ")", "\n", "self", ".", "GEN", "=", "torch", ".", "nn", ".", "DataParallel", "(", "self", ".", "GEN", ")", "\n", "\n", "", "self", ".", "FAN", ".", "to", "(", "'cuda'", ")", ".", "train", "(", ")", "\n", "self", ".", "BOT", ".", "to", "(", "'cuda'", ")", ".", "train", "(", ")", "\n", "self", ".", "GEN", ".", "to", "(", "'cuda'", ")", ".", "train", "(", ")", "\n", "\n", "# - VGG for perceptual loss", "\n", "self", ".", "loss_network", "=", "LossNetwork", "(", "torch", ".", "nn", ".", "DataParallel", "(", "vgg16", "(", "pretrained", "=", "True", ")", ")", ")", "if", "torch", ".", "cuda", ".", "device_count", "(", ")", ">", "1", "else", "LossNetwork", "(", "vgg16", "(", "pretrained", "=", "True", ")", ")", "\n", "self", ".", "loss_network", ".", "eval", "(", ")", "\n", "self", ".", "loss_network", ".", "to", "(", "'cuda'", ")", "\n", "self", ".", "loss", "=", "dict", ".", "fromkeys", "(", "[", "'rec'", "]", ")", "\n", "self", ".", "A", "=", "None", "\n", "\n", "# - define losses for reconstruction", "\n", "self", ".", "SelfLoss", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "'cuda'", ")", "\n", "self", ".", "PerceptualLoss", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", ".", "to", "(", "'cuda'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.model._perceptual_loss": [[118, 125], ["model.model.loss_network", "model.model.loss_network", "range", "model.model.PerceptualLoss", "vgg_target[].detach"], "methods", ["None"], ["", "def", "_perceptual_loss", "(", "self", ",", "fake_im", ",", "real_im", ")", ":", "\n", "        ", "vgg_fake", "=", "self", ".", "loss_network", "(", "fake_im", ")", "\n", "vgg_target", "=", "self", ".", "loss_network", "(", "real_im", ")", "\n", "perceptualLoss", "=", "0", "\n", "for", "vgg_idx", "in", "range", "(", "0", ",", "4", ")", ":", "\n", "            ", "perceptualLoss", "+=", "self", ".", "PerceptualLoss", "(", "vgg_fake", "[", "vgg_idx", "]", ",", "vgg_target", "[", "vgg_idx", "]", ".", "detach", "(", ")", ")", "\n", "", "return", "perceptualLoss", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.model._resume": [[127, 130], ["model.model.FAN.load_state_dict", "model.model.GEN.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "_resume", "(", "self", ",", "path_fan", ",", "path_gen", ")", ":", "\n", "        ", "self", ".", "FAN", ".", "load_state_dict", "(", "torch", ".", "load", "(", "path_fan", ")", ")", "\n", "self", ".", "GEN", ".", "load_state_dict", "(", "torch", ".", "load", "(", "path_gen", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.model._save": [[131, 134], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "model.model.FAN.state_dict", "model.model.GEN.state_dict", "str", "str"], "methods", ["None"], ["", "def", "_save", "(", "self", ",", "path_to_models", ",", "epoch", ")", ":", "\n", "        ", "torch", ".", "save", "(", "self", ".", "FAN", ".", "state_dict", "(", ")", ",", "path_to_models", "+", "str", "(", "epoch", ")", "+", "'.fan.pth'", ")", "\n", "torch", ".", "save", "(", "self", ".", "GEN", ".", "state_dict", "(", ")", ",", "path_to_models", "+", "str", "(", "epoch", ")", "+", "'.gen.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.model._set_batch": [[135, 137], ["torch.autograd.Variable().to", "torch.autograd.Variable().to", "torch.autograd.Variable().to", "data.keys", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "type"], "methods", ["None"], ["", "def", "_set_batch", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "A", "=", "{", "k", ":", "Variable", "(", "data", "[", "k", "]", ",", "requires_grad", "=", "True", ")", ".", "to", "(", "'cuda'", ")", "for", "k", "in", "data", ".", "keys", "(", ")", "if", "type", "(", "data", "[", "k", "]", ")", ".", "__name__", "==", "'Tensor'", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.model.forward": [[138, 150], ["model.model.GEN.zero_grad", "model.model.FAN.zero_grad", "model.model.FAN", "model.model.BOT", "model.model.loss[].backward", "model.model._perceptual_loss", "model.model.SelfLoss", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "model.model.GEN", "model.model.FAN.parameters", "model.model.GEN.parameters"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.model.model._perceptual_loss"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "self", ".", "GEN", ".", "zero_grad", "(", ")", "\n", "self", ".", "FAN", ".", "zero_grad", "(", ")", "\n", "H", "=", "self", ".", "FAN", "(", "self", ".", "A", "[", "'Im'", "]", ")", "\n", "H", ",", "Pts", "=", "self", ".", "BOT", "(", "H", ")", "\n", "X", "=", "0.5", "*", "(", "self", ".", "GEN", "(", "self", ".", "A", "[", "'ImP'", "]", ",", "H", ")", "+", "1", ")", "\n", "self", ".", "loss", "[", "'rec'", "]", "=", "self", ".", "_perceptual_loss", "(", "X", ",", "self", ".", "A", "[", "'Im'", "]", ")", "+", "self", ".", "SelfLoss", "(", "X", ",", "self", ".", "A", "[", "'Im'", "]", ")", "\n", "self", ".", "loss", "[", "'rec'", "]", ".", "backward", "(", ")", "\n", "if", "self", ".", "gradclip", ":", "\n", "            ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "FAN", ".", "parameters", "(", ")", ",", "1", ",", "norm_type", "=", "2", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "self", ".", "GEN", ".", "parameters", "(", ")", ",", "1", ",", "norm_type", "=", "2", ")", "\n", "", "return", "{", "'Heatmap'", ":", "H", ",", "'Reconstructed'", ":", "X", ",", "'Points'", ":", "Pts", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.AverageMeter.__init__": [[9, 11], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.AverageMeter.reset": [[12, 17], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.AverageMeter.update": [[18, 23], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.HeatMap.__init__": [[26, 34], ["super().__init__", "print", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__"], ["def", "__init__", "(", "self", ",", "out_res", ",", "sigma", "=", "0.5", ")", ":", "\n", "        ", "super", "(", "HeatMap", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sigma", "=", "sigma", "\n", "print", "(", "'The size of heatmap is {:f}'", ".", "format", "(", "self", ".", "sigma", ")", ")", "\n", "y", ",", "x", "=", "torch", ".", "meshgrid", "(", "[", "torch", ".", "arange", "(", "0", ",", "out_res", ")", ".", "float", "(", ")", ",", "torch", ".", "arange", "(", "0", ",", "out_res", ")", ".", "float", "(", ")", "]", ")", "\n", "self", ".", "x", "=", "x", "\n", "self", ".", "y", "=", "y", "\n", "self", ".", "out_res", "=", "out_res", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.HeatMap.forward": [[35, 46], ["utils.HeatMap.x.repeat", "utils.HeatMap.y.repeat", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "pts.size", "pts.size", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "utils.HeatMap.to", "utils.HeatMap.to"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "pts", ")", ":", "\n", "        ", "bSize", ",", "nPts", "=", "pts", ".", "size", "(", "0", ")", ",", "pts", ".", "size", "(", "1", ")", "\n", "x", "=", "self", ".", "x", ".", "repeat", "(", "bSize", ",", "nPts", ",", "1", ",", "1", ")", "\n", "y", "=", "self", ".", "y", ".", "repeat", "(", "bSize", ",", "nPts", ",", "1", ",", "1", ")", "\n", "xscore", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "unsqueeze", "(", "pts", "[", ":", ",", ":", ",", "0", "]", ",", "2", ")", ",", "3", ")", "\n", "yscore", "=", "torch", ".", "unsqueeze", "(", "torch", ".", "unsqueeze", "(", "pts", "[", ":", ",", ":", ",", "1", "]", ",", "2", ")", ",", "3", ")", "\n", "xscore", "=", "xscore", "-", "x", ".", "to", "(", "xscore", ".", "device", ")", "\n", "yscore", "=", "yscore", "-", "y", ".", "to", "(", "yscore", ".", "device", ")", "\n", "hms", "=", "-", "(", "xscore", "**", "2", "+", "yscore", "**", "2", ")", "\n", "hms", "=", "torch", ".", "exp", "(", "hms", "/", "self", ".", "sigma", ")", "\n", "return", "hms", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.SoftArgmax2D.__init__": [[49, 55], ["super().__init__", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Softmax"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__"], ["def", "__init__", "(", "self", ",", "base_index", "=", "0", ",", "step_size", "=", "1", ",", "softmax_temp", "=", "1.0", ")", ":", "\n", "        ", "super", "(", "SoftArgmax2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_index", "=", "base_index", "\n", "self", ".", "step_size", "=", "step_size", "\n", "self", ".", "softmax", "=", "torch", ".", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "self", ".", "softmax_temp", "=", "softmax_temp", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.SoftArgmax2D._softmax_2d": [[56, 61], ["x.size", "utils.SoftArgmax2D.softmax", "utils.SoftArgmax2D.view", "x.view"], "methods", ["None"], ["", "def", "_softmax_2d", "(", "self", ",", "x", ",", "temp", ")", ":", "\n", "        ", "B", ",", "C", ",", "W", ",", "H", "=", "x", ".", "size", "(", ")", "\n", "x_flat", "=", "x", ".", "view", "(", "(", "B", ",", "C", ",", "W", "*", "H", ")", ")", "/", "temp", "\n", "x_softmax", "=", "self", ".", "softmax", "(", "x_flat", ")", "\n", "return", "x_softmax", ".", "view", "(", "(", "B", ",", "C", ",", "W", ",", "H", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.SoftArgmax2D.forward": [[62, 75], ["x.size", "utils.SoftArgmax2D._softmax_2d", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.arange().float().cuda", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.sum().view", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.arange().float", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "utils.SoftArgmax2D.view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.SoftArgmax2D._softmax_2d"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", ",", "channels", ",", "height", ",", "width", "=", "x", ".", "size", "(", ")", "\n", "smax", "=", "self", ".", "_softmax_2d", "(", "x", ",", "self", ".", "softmax_temp", ")", "# * windows", "\n", "smax", "=", "smax", "/", "torch", ".", "sum", "(", "smax", ".", "view", "(", "batch_size", ",", "channels", ",", "-", "1", ")", ",", "dim", "=", "2", ")", ".", "view", "(", "batch_size", ",", "channels", ",", "1", ",", "1", ")", "\n", "# compute x index (sum over y axis, produce with indices and then sum over x axis for the expectation)", "\n", "x_end_index", "=", "self", ".", "base_index", "+", "width", "*", "self", ".", "step_size", "\n", "x_indices", "=", "torch", ".", "arange", "(", "start", "=", "self", ".", "base_index", ",", "end", "=", "x_end_index", ",", "step", "=", "self", ".", "step_size", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "x_coords", "=", "torch", ".", "sum", "(", "torch", ".", "sum", "(", "smax", ",", "2", ")", "*", "x_indices", ",", "2", ")", "\n", "# compute y index (sum over x axis, produce with indices and then sum over y axis for the expectation)", "\n", "y_end_index", "=", "self", ".", "base_index", "+", "height", "*", "self", ".", "step_size", "\n", "y_indices", "=", "torch", ".", "arange", "(", "start", "=", "self", ".", "base_index", ",", "end", "=", "y_end_index", ",", "step", "=", "self", ".", "step_size", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "y_coords", "=", "torch", ".", "sum", "(", "torch", ".", "sum", "(", "smax", ",", "3", ")", "*", "y_indices", ",", "2", ")", "\n", "return", "torch", ".", "cat", "(", "[", "torch", ".", "unsqueeze", "(", "x_coords", ",", "2", ")", ",", "torch", ".", "unsqueeze", "(", "y_coords", ",", "2", ")", "]", ",", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__": [[78, 87], ["super().__init__", "collections.namedtuple", "hasattr"], "methods", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.__init__"], ["    ", "def", "__init__", "(", "self", ",", "vgg_model", ")", ":", "\n", "        ", "super", "(", "LossNetwork", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "LossOutput", "=", "collections", ".", "namedtuple", "(", "\"LossOutput\"", ",", "[", "\"relu1_2\"", ",", "\"relu2_2\"", ",", "\"relu3_3\"", ",", "\"relu4_3\"", "]", ")", "\n", "self", ".", "vgg_layers", "=", "vgg_model", ".", "features", "if", "hasattr", "(", "vgg_model", ",", "'features'", ")", "else", "vgg_model", ".", "module", ".", "features", "#### to allow use in DataParallel", "\n", "self", ".", "layer_name_mapping", "=", "{", "\n", "'3'", ":", "\"relu1_2\"", ",", "\n", "'8'", ":", "\"relu2_2\"", ",", "\n", "'15'", ":", "\"relu3_3\"", ",", "\n", "'22'", ":", "\"relu4_3\"", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.LossNetwork.forward": [[89, 96], ["utils.LossNetwork.vgg_layers._modules.items", "utils.LossNetwork.LossOutput", "module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "{", "}", "\n", "for", "name", ",", "module", "in", "self", ".", "vgg_layers", ".", "_modules", ".", "items", "(", ")", ":", "\n", "            ", "x", "=", "module", "(", "x", ")", "\n", "if", "name", "in", "self", ".", "layer_name_mapping", ":", "\n", "                ", "output", "[", "self", ".", "layer_name_mapping", "[", "name", "]", "]", "=", "x", "\n", "", "", "return", "self", ".", "LossOutput", "(", "**", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.process_image": [[100, 117], ["dict.fromkeys", "utils.crop", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "cv2.flip.type_as", "numpy.floor", "numpy.clip", "utils.affine_trans", "int", "cv2.flip", "cv2.flip.swapaxes().swapaxes", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "numpy.random.randn", "cv2.flip.swapaxes", "numpy.random.randn"], "function", ["home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.crop", "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.affine_trans"], ["", "", "def", "process_image", "(", "image", ",", "points", ",", "angle", "=", "0", ",", "flip", "=", "False", ",", "sigma", "=", "1", ",", "size", "=", "128", ",", "tight", "=", "16", ",", "hmsize", "=", "64", ")", ":", "\n", "    ", "output", "=", "dict", ".", "fromkeys", "(", "[", "'image'", ",", "'points'", ",", "'M'", "]", ")", "\n", "if", "angle", ">", "0", ":", "\n", "        ", "tmp_angle", "=", "np", ".", "clip", "(", "np", ".", "random", ".", "randn", "(", "1", ")", "*", "angle", ",", "-", "40.0", ",", "40.0", ")", "\n", "image", ",", "points", ",", "M", "=", "affine_trans", "(", "image", ",", "points", ",", "tmp_angle", ")", "\n", "output", "[", "'M'", "]", "=", "M", "\n", "tight", "=", "int", "(", "tight", "+", "4", "*", "np", ".", "random", ".", "randn", "(", ")", ")", "\n", "", "image", ",", "points", "=", "crop", "(", "image", ",", "points", ",", "size", ",", "tight", ")", "\n", "if", "flip", ":", "\n", "        ", "image", "=", "cv2", ".", "flip", "(", "image", ",", "1", ")", "\n", "\n", "", "image", "=", "image", "/", "255.0", "\n", "image", "=", "torch", ".", "from_numpy", "(", "image", ".", "swapaxes", "(", "2", ",", "1", ")", ".", "swapaxes", "(", "1", ",", "0", ")", ")", "\n", "output", "[", "'image'", "]", "=", "image", ".", "type_as", "(", "torch", ".", "FloatTensor", "(", ")", ")", "\n", "output", "[", "'points'", "]", "=", "np", ".", "floor", "(", "points", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.crop": [[119, 145], ["landmarks.copy", "int", "int", "int", "int", "cv2.resize", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "int", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.round", "numpy.round", "numpy.round", "numpy.round", "numpy.min", "numpy.min", "numpy.max", "numpy.max"], "function", ["None"], ["", "def", "crop", "(", "image", ",", "landmarks", ",", "size", ",", "tight", "=", "8", ")", ":", "\n", "        ", "delta_x", "=", "np", ".", "max", "(", "landmarks", "[", ":", ",", "0", "]", ")", "-", "np", ".", "min", "(", "landmarks", "[", ":", ",", "0", "]", ")", "\n", "delta_y", "=", "np", ".", "max", "(", "landmarks", "[", ":", ",", "1", "]", ")", "-", "np", ".", "min", "(", "landmarks", "[", ":", ",", "1", "]", ")", "\n", "delta", "=", "0.5", "*", "(", "delta_x", "+", "delta_y", ")", "\n", "if", "delta", "<", "20", ":", "\n", "            ", "tight_aux", "=", "8", "\n", "", "else", ":", "\n", "            ", "tight_aux", "=", "int", "(", "tight", "*", "delta", "/", "100", ")", "\n", "", "pts_", "=", "landmarks", ".", "copy", "(", ")", "\n", "w", "=", "image", ".", "shape", "[", "1", "]", "\n", "h", "=", "image", ".", "shape", "[", "0", "]", "\n", "min_x", "=", "int", "(", "np", ".", "maximum", "(", "np", ".", "round", "(", "np", ".", "min", "(", "landmarks", "[", ":", ",", "0", "]", ")", ")", "-", "tight_aux", ",", "0", ")", ")", "\n", "min_y", "=", "int", "(", "np", ".", "maximum", "(", "np", ".", "round", "(", "np", ".", "min", "(", "landmarks", "[", ":", ",", "1", "]", ")", ")", "-", "tight_aux", ",", "0", ")", ")", "\n", "max_x", "=", "int", "(", "np", ".", "minimum", "(", "np", ".", "round", "(", "np", ".", "max", "(", "landmarks", "[", ":", ",", "0", "]", ")", ")", "+", "tight_aux", ",", "w", "-", "1", ")", ")", "\n", "max_y", "=", "int", "(", "np", ".", "minimum", "(", "np", ".", "round", "(", "np", ".", "max", "(", "landmarks", "[", ":", ",", "1", "]", ")", ")", "+", "tight_aux", ",", "h", "-", "1", ")", ")", "\n", "image", "=", "image", "[", "min_y", ":", "max_y", ",", "min_x", ":", "max_x", ",", ":", "]", "\n", "pts_", "[", ":", ",", "0", "]", "=", "pts_", "[", ":", ",", "0", "]", "-", "min_x", "\n", "pts_", "[", ":", ",", "1", "]", "=", "pts_", "[", ":", ",", "1", "]", "-", "min_y", "\n", "sw", "=", "size", "/", "image", ".", "shape", "[", "1", "]", "\n", "sh", "=", "size", "/", "image", ".", "shape", "[", "0", "]", "\n", "im", "=", "cv2", ".", "resize", "(", "image", ",", "dsize", "=", "(", "size", ",", "size", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "pts_", "[", ":", ",", "0", "]", "=", "pts_", "[", ":", ",", "0", "]", "*", "sw", "\n", "pts_", "[", ":", ",", "1", "]", "=", "pts_", "[", ":", ",", "1", "]", "*", "sh", "\n", "return", "im", ",", "pts_", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.affine_trans": [[148, 179], ["cv2.getRotationMatrix2D", "numpy.abs", "numpy.abs", "int", "int", "cv2.warpAffine", "numpy.concatenate", "new_landmarks.dot.dot", "cv2.resize", "cv2.getRotationMatrix2D.transpose", "torch.randn", "torch.randn", "torch.randn", "numpy.ones"], "function", ["None"], ["", "def", "affine_trans", "(", "image", ",", "landmarks", ",", "angle", "=", "None", ",", "size", "=", "None", ")", ":", "\n", "    ", "if", "angle", "is", "None", ":", "\n", "        ", "angle", "=", "30", "*", "torch", ".", "randn", "(", "1", ")", "\n", "\n", "\n", "", "(", "h", ",", "w", ")", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "(", "cX", ",", "cY", ")", "=", "(", "w", "//", "2", ",", "h", "//", "2", ")", "\n", "\n", "M", "=", "cv2", ".", "getRotationMatrix2D", "(", "(", "cX", ",", "cY", ")", ",", "-", "angle", ",", "1.0", ")", "\n", "cos", "=", "np", ".", "abs", "(", "M", "[", "0", ",", "0", "]", ")", "\n", "sin", "=", "np", ".", "abs", "(", "M", "[", "0", ",", "1", "]", ")", "\n", "\n", "# compute the new bounding dimensions of the image", "\n", "nW", "=", "int", "(", "(", "h", "*", "sin", ")", "+", "(", "w", "*", "cos", ")", ")", "\n", "nH", "=", "int", "(", "(", "h", "*", "cos", ")", "+", "(", "w", "*", "sin", ")", ")", "\n", "\n", "# adjust the rotation matrix to take into account translation", "\n", "M", "[", "0", ",", "2", "]", "+=", "(", "nW", "/", "2", ")", "-", "cX", "\n", "M", "[", "1", ",", "2", "]", "+=", "(", "nH", "/", "2", ")", "-", "cY", "\n", "dst", "=", "cv2", ".", "warpAffine", "(", "image", ",", "M", ",", "(", "nW", ",", "nH", ")", ",", "borderMode", "=", "cv2", ".", "BORDER_REPLICATE", ")", "\n", "#print(landmarks.shape)", "\n", "new_landmarks", "=", "np", ".", "concatenate", "(", "(", "landmarks", ",", "np", ".", "ones", "(", "(", "landmarks", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ")", ",", "axis", "=", "1", ")", "\n", "if", "size", "is", "not", "None", ":", "\n", "        ", "sw", "=", "size", "/", "nW", "\n", "sh", "=", "size", "/", "nH", "\n", "dst", "=", "cv2", ".", "resize", "(", "dst", ",", "dsize", "=", "(", "size", ",", "size", ")", ",", "\n", "interpolation", "=", "cv2", ".", "INTER_LINEAR", ")", "\n", "M", "=", "[", "[", "sw", ",", "0", "]", ",", "[", "0", ",", "sh", "]", "]", "@", "M", "\n", "\n", "", "new_landmarks", "=", "new_landmarks", ".", "dot", "(", "M", ".", "transpose", "(", ")", ")", "\n", "return", "dst", ",", "new_landmarks", ",", "M", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.init_weights": [[182, 204], ["print", "net.apply", "hasattr", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "hasattr", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "classname.find", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.normal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "torch.nn.init.constant_", "classname.find", "classname.find", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "torch.nn.init.orthogonal_", "NotImplementedError"], "function", ["None"], ["", "def", "init_weights", "(", "net", ",", "init_type", "=", "'normal'", ",", "gain", "=", "0.02", ")", ":", "\n", "    ", "def", "init_func", "(", "m", ")", ":", "\n", "        ", "classname", "=", "m", ".", "__class__", ".", "__name__", "\n", "if", "hasattr", "(", "m", ",", "'weight'", ")", "and", "(", "classname", ".", "find", "(", "'Conv'", ")", "!=", "-", "1", "or", "classname", ".", "find", "(", "'Linear'", ")", "!=", "-", "1", ")", ":", "\n", "            ", "if", "init_type", "==", "'normal'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "0.0", ",", "gain", ")", "\n", "", "elif", "init_type", "==", "'xavier'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "gain", ")", "\n", "", "elif", "init_type", "==", "'kaiming'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ".", "data", ",", "a", "=", "0", ",", "mode", "=", "'fan_in'", ")", "\n", "", "elif", "init_type", "==", "'orthogonal'", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "orthogonal_", "(", "m", ".", "weight", ".", "data", ",", "gain", "=", "gain", ")", "\n", "", "else", ":", "\n", "                ", "raise", "NotImplementedError", "(", "'initialization method [%s] is not implemented'", "%", "init_type", ")", "\n", "", "if", "hasattr", "(", "m", ",", "'bias'", ")", "and", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "", "", "elif", "classname", ".", "find", "(", "'BatchNorm2d'", ")", "!=", "-", "1", ":", "\n", "            ", "torch", ".", "nn", ".", "init", ".", "normal_", "(", "m", ".", "weight", ".", "data", ",", "1.0", ",", "gain", ")", "\n", "torch", ".", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ".", "data", ",", "0.0", ")", "\n", "\n", "", "", "print", "(", "'initialize network with %s'", "%", "init_type", ")", "\n", "net", ".", "apply", "(", "init_func", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.savetorchimg": [[207, 209], ["cv2.imwrite", "cv2.cvtColor", "img.permute().numpy", "img.permute"], "function", ["None"], ["", "def", "savetorchimg", "(", "name", ",", "img", ")", ":", "\n", "    ", "cv2", ".", "imwrite", "(", "name", ",", "cv2", ".", "cvtColor", "(", "(", "255", "*", "img", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.savetorchimgandpts": [[210, 218], ["range", "cv2.imwrite", "cv2.circle", "range", "cv2.cvtColor", "cv2.circle", "int", "int", "int", "int", "img.permute().numpy", "img.permute"], "function", ["None"], ["", "def", "savetorchimgandpts", "(", "name", ",", "img", ",", "x", ",", "y", "=", "None", ")", ":", "\n", "    ", "improc", "=", "(", "255", "*", "img", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "copy", "(", ")", "\n", "for", "m", "in", "range", "(", "0", ",", "x", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "cv2", ".", "circle", "(", "improc", ",", "(", "int", "(", "x", "[", "m", ",", "0", "]", ")", ",", "int", "(", "x", "[", "m", ",", "1", "]", ")", ")", ",", "2", ",", "(", "255", ",", "0", ",", "0", ")", ",", "-", "1", ")", "\n", "", "if", "y", "is", "not", "None", ":", "\n", "        ", "for", "m", "in", "range", "(", "0", ",", "y", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "cv2", ".", "circle", "(", "improc", ",", "(", "int", "(", "y", "[", "m", ",", "0", "]", ")", ",", "int", "(", "y", "[", "m", ",", "1", "]", ")", ")", ",", "2", ",", "(", "0", ",", "255", ",", "0", ")", ",", "-", "1", ")", "\n", "", "", "cv2", ".", "imwrite", "(", "name", ",", "cv2", ".", "cvtColor", "(", "improc", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.saveheatmap": [[220, 223], ["cv2.applyColorMap", "cv2.imwrite", "cv2.cvtColor", "img.permute().numpy", "img.permute"], "function", ["None"], ["", "def", "saveheatmap", "(", "name", ",", "img", ")", ":", "\n", "    ", "improc", "=", "cv2", ".", "applyColorMap", "(", "(", "255", "*", "img", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", ",", "cv2", ".", "COLORMAP_JET", ")", "\n", "cv2", ".", "imwrite", "(", "name", ",", "cv2", ".", "cvtColor", "(", "improc", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ESanchezLozano_SAIC-Unsupervised-landmark-detection-NeurIPS2019.None.utils.savetorchimgandptsv2": [[225, 238], ["cv2.drawMarker", "cv2.drawMarker", "cv2.drawMarker", "cv2.drawMarker", "cv2.drawMarker", "cv2.drawMarker", "cv2.drawMarker", "cv2.drawMarker", "cv2.drawMarker", "cv2.drawMarker", "cv2.imwrite", "cv2.cvtColor", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int", "img.permute().numpy", "img.permute"], "function", ["None"], ["", "def", "savetorchimgandptsv2", "(", "name", ",", "img", ",", "x", ",", "thick", "=", "2", ",", "mSize", "=", "4", ")", ":", "# to use different colours", "\n", "    ", "improc", "=", "(", "255", "*", "img", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "numpy", "(", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "copy", "(", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "0", ",", "0", "]", ")", ",", "int", "(", "x", "[", "0", ",", "1", "]", ")", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "markerType", "=", "cv2", ".", "MARKER_TILTED_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "1", ",", "0", "]", ")", ",", "int", "(", "x", "[", "1", ",", "1", "]", ")", ")", ",", "(", "0", ",", "255", ",", "0", ")", ",", "markerType", "=", "cv2", ".", "MARKER_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "2", ",", "0", "]", ")", ",", "int", "(", "x", "[", "2", ",", "1", "]", ")", ")", ",", "(", "0", ",", "0", ",", "255", ")", ",", "markerType", "=", "cv2", ".", "MARKER_TILTED_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "3", ",", "0", "]", ")", ",", "int", "(", "x", "[", "3", ",", "1", "]", ")", ")", ",", "(", "0", ",", "0", ",", "0", ")", ",", "markerType", "=", "cv2", ".", "MARKER_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "4", ",", "0", "]", ")", ",", "int", "(", "x", "[", "4", ",", "1", "]", ")", ")", ",", "(", "255", ",", "255", ",", "255", ")", ",", "markerType", "=", "cv2", ".", "MARKER_TILTED_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "5", ",", "0", "]", ")", ",", "int", "(", "x", "[", "5", ",", "1", "]", ")", ")", ",", "(", "255", ",", "255", ",", "0", ")", ",", "markerType", "=", "cv2", ".", "MARKER_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "6", ",", "0", "]", ")", ",", "int", "(", "x", "[", "6", ",", "1", "]", ")", ")", ",", "(", "255", ",", "0", ",", "255", ")", ",", "markerType", "=", "cv2", ".", "MARKER_TILTED_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "7", ",", "0", "]", ")", ",", "int", "(", "x", "[", "7", ",", "1", "]", ")", ")", ",", "(", "0", ",", "255", ",", "255", ")", ",", "markerType", "=", "cv2", ".", "MARKER_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "8", ",", "0", "]", ")", ",", "int", "(", "x", "[", "8", ",", "1", "]", ")", ")", ",", "(", "255", ",", "128", ",", "0", ")", ",", "markerType", "=", "cv2", ".", "MARKER_TILTED_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "drawMarker", "(", "improc", ",", "(", "int", "(", "x", "[", "9", ",", "0", "]", ")", ",", "int", "(", "x", "[", "9", ",", "1", "]", ")", ")", ",", "(", "0", ",", "0", ",", "128", ")", ",", "markerType", "=", "cv2", ".", "MARKER_CROSS", ",", "markerSize", "=", "mSize", ",", "thickness", "=", "thick", ")", "\n", "cv2", ".", "imwrite", "(", "name", ",", "cv2", ".", "cvtColor", "(", "improc", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n"]]}