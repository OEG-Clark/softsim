{"home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.load_data.load_data": [[6, 42], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "print", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "len", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "torchvision.transforms.RandomCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "function", ["None"], ["def", "load_data", "(", "args", ")", ":", "\n", "    ", "norm_mean", "=", "0", "\n", "norm_var", "=", "1", "\n", "if", "args", ".", "dataset", "==", "'cifar10'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "norm_mean", ",", "norm_mean", ",", "norm_mean", ")", ",", "(", "norm_var", ",", "norm_var", ",", "norm_var", ")", ")", ",", "\n", "]", ")", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "norm_mean", ",", "norm_mean", ",", "norm_mean", ")", ",", "(", "norm_var", ",", "norm_var", ",", "norm_var", ")", ")", ",", "\n", "]", ")", "\n", "\n", "train_dataset", "=", "datasets", ".", "CIFAR10", "(", "args", ".", "data_folder", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "test_dataset", "=", "datasets", ".", "CIFAR10", "(", "args", ".", "data_folder", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "\n", "", "elif", "args", ".", "dataset", "==", "'svhn'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "norm_mean", ",", "norm_mean", ",", "norm_mean", ")", ",", "(", "norm_var", ",", "norm_var", ",", "norm_var", ")", ")", ",", "\n", "]", ")", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "norm_mean", ",", "norm_mean", ",", "norm_mean", ")", ",", "(", "norm_var", ",", "norm_var", ",", "norm_var", ")", ")", ",", "\n", "]", ")", "\n", "\n", "train_dataset", "=", "datasets", ".", "SVHN", "(", "args", ".", "data_folder", ",", "split", "=", "'train'", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "test_dataset", "=", "datasets", ".", "SVHN", "(", "args", ".", "data_folder", ",", "split", "=", "'test'", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "\n", "", "train_loader", "=", "DataLoader", "(", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "True", ")", "\n", "test_loader", "=", "DataLoader", "(", "test_dataset", ",", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "True", ",", "num_workers", "=", "0", ",", "pin_memory", "=", "True", ")", "\n", "\n", "print", "(", "'the number of total training examples: '", ",", "len", "(", "train_loader", ".", "dataset", ")", ")", "\n", "return", "train_loader", ",", "test_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.main.main": [[39, 114], ["torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.device", "torch.device", "torch.device", "torch.device", "load_data.load_data", "capsnet.Capsnet.to", "torch.SGD", "print", "range", "modules.load_save_model", "models.resnet.ResNet18", "torch.CrossEntropyLoss().to", "capsnet.Capsnet.parameters", "modules.load_save_model", "modules.test_epoch", "print", "capsnet.Capsnet.eval", "foolbox.models.PyTorchModel", "tqdm.tqdm", "print", "modules.adjust_learning_rate", "modules.train_epoch", "modules.test_epoch", "print", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "models.capsnet.Capsnet", "torch.NLLLoss().to", "models.capsnet.Capsnet", "capsnet.Capsnet.load_state_dict", "foolbox.attacks.LinfFastGradientAttack", "foolbox.criteria.Misclassification", "foolbox.attacks.LinfProjectedGradientDescentAttack.", "capsnet.Capsnet.detach", "torch.CrossEntropyLoss", "capsnet.Capsnet.state_dict", "foolbox.attacks.LinfBasicIterativeAttack", "X.to", "y.to", "torch.NLLLoss", "foolbox.attacks.LinfProjectedGradientDescentAttack", "capsnet.Capsnet.", "x_adv.detach", "model().detach.max"], "function", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.load_data.load_data", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.load_save_model", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet18", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.load_save_model", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.test_epoch", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.adjust_learning_rate", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.train_epoch", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.test_epoch", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.Capsnet", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.Capsnet"], ["def", "main", "(", ")", ":", "\n", "\n", "    ", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "\n", "device", "=", "torch", ".", "device", "(", "\"cuda:0\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "\n", "train_loader", ",", "test_loader", "=", "load_data", "(", "args", ")", "\n", "\n", "if", "args", ".", "model", "==", "'resnet'", ":", "\n", "        ", "args", ".", "routing", "=", "'No'", "\n", "model", "=", "resnet", ".", "ResNet18", "(", ")", "\n", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "model", "==", "'capsnet'", ":", "\n", "        ", "args", ".", "routing", "=", "'DR'", "\n", "model", "=", "capsnet", ".", "Capsnet", "(", "args", ".", "routing", ")", "\n", "loss_func", "=", "nn", ".", "NLLLoss", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "\n", "opt", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "momentum", "=", "0.9", ")", "\n", "\n", "if", "args", ".", "evaluate", ":", "\n", "        ", "model", "=", "load_save_model", "(", "model", ",", "args", ",", "mode", "=", "'load'", ")", "\n", "\n", "test_accu", ",", "test_loss", "=", "test_epoch", "(", "test_loader", ",", "model", ",", "device", "=", "device", ",", "use_tqdm", "=", "True", ")", "\n", "print", "(", "'Standard Test Accu'", ",", "test_accu", ")", "\n", "\n", "if", "'vote_attack'", "in", "args", ".", "attack", ":", "\n", "# VoteAttack: Attack Votes directly (e.g., vote_attack_PGD)", "\n", "# We construct a model where the votes are averaged to form outputs", "\n", "# The adversarial examples are created on the constructed model and tested on the original CapsNet", "\n", "            ", "model_source", "=", "capsnet", ".", "Capsnet", "(", "'Vote_Attack'", ")", "\n", "model_source", ".", "load_state_dict", "(", "model", ".", "state_dict", "(", ")", ")", "\n", "", "else", ":", "\n", "# CapsAttack: Attack output capsules (e.g., PGD)", "\n", "# The adversarial examples are created on the model itself. ", "\n", "            ", "model_source", "=", "model", "\n", "\n", "", "model_source", ".", "eval", "(", ")", "\n", "fmodel", "=", "foolbox", ".", "models", ".", "PyTorchModel", "(", "model_source", ",", "bounds", "=", "(", "0.", ",", "1.", ")", ",", "device", "=", "device", ")", "\n", "\n", "if", "'FGSM'", "in", "args", ".", "attack", ":", "attack", "=", "foolbox", ".", "attacks", ".", "LinfFastGradientAttack", "(", ")", "\n", "elif", "'BIM'", "in", "args", ".", "attack", ":", "attack", "=", "foolbox", ".", "attacks", ".", "LinfBasicIterativeAttack", "(", "abs_stepsize", "=", "0.01", ")", "\n", "elif", "'PGD'", "in", "args", ".", "attack", ":", "attack", "=", "foolbox", ".", "attacks", ".", "LinfProjectedGradientDescentAttack", "(", "abs_stepsize", "=", "0.01", ")", "\n", "\n", "robust_accu", "=", "0", "\n", "total_n", "=", "0", "\n", "for", "X", ",", "y", "in", "tqdm", "(", "test_loader", ")", ":", "\n", "            ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "\n", "criterion", "=", "Misclassification", "(", "y", ")", "\n", "delta", ",", "x_adv", ",", "success", "=", "attack", "(", "fmodel", ",", "X", ",", "criterion", ",", "epsilons", "=", "args", ".", "eps", ")", "\n", "yp", "=", "model", "(", "x_adv", ".", "detach", "(", ")", ")", ".", "detach", "(", ")", "\n", "\n", "robust_accu", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "==", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "total_n", "+=", "yp", ".", "shape", "[", "0", "]", "\n", "\n", "", "print", "(", "'Robust Accu'", ",", "robust_accu", "/", "total_n", ")", "\n", "return", "\n", "\n", "# Start Traning", "\n", "", "print", "(", "'Start Standard Training ---------------------'", ")", "\n", "for", "ep", "in", "range", "(", "1", ",", "args", ".", "epochs", ")", ":", "\n", "\n", "        ", "adjust_learning_rate", "(", "ep", ",", "opt", ",", "args", ")", "\n", "\n", "train_accu", ",", "train_loss", "=", "train_epoch", "(", "train_loader", ",", "model", ",", "opt", ",", "device", "=", "device", ",", "use_tqdm", "=", "True", ",", "loss_func", "=", "loss_func", ")", "\n", "\n", "test_accu", ",", "test_loss", "=", "test_epoch", "(", "test_loader", ",", "model", ",", "device", "=", "device", ",", "use_tqdm", "=", "False", ",", "loss_func", "=", "loss_func", ")", "\n", "\n", "print", "(", "'\\nEpoch %d:'", "%", "ep", ",", "'Train Accu: %.4f'", "%", "train_accu", ",", "'Train Loss: %.4f'", "%", "train_loss", ",", "'Test Accu: %.4f'", "%", "test_accu", ",", "'Test Loss: %.4f'", "%", "test_loss", ")", "\n", "\n", "", "load_save_model", "(", "model", ",", "args", ",", "mode", "=", "'save'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.train_epoch": [[11, 36], ["torch.CrossEntropyLoss", "model.train", "tqdm.tqdm", "model", "loss_func", "opt.zero_grad", "loss_func.backward", "opt.step", "X.to", "y.to", "loss_func().item", "tqdm.tqdm.update", "len", "len", "len", "loss_func", "model.max"], "function", ["None"], ["def", "train_epoch", "(", "loader", ",", "model", ",", "opt", "=", "None", ",", "device", "=", "None", ",", "use_tqdm", "=", "False", ",", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ")", ":", "\n", "    ", "\"\"\"Standard training epoch over the dataset\"\"\"", "\n", "train_loss", ",", "train_accu", "=", "0.", ",", "0.", "\n", "\n", "model", ".", "train", "(", ")", "\n", "\n", "if", "use_tqdm", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ")", ")", "\n", "\n", "", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "yp", "=", "model", "(", "X", ")", "\n", "loss", "=", "loss_func", "(", "yp", ",", "y", ")", "\n", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "\n", "train_accu", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "==", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "train_loss", "+=", "loss_func", "(", "yp", ",", "y", ")", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "return", "train_accu", "/", "len", "(", "loader", ".", "dataset", ")", ",", "train_loss", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.test_epoch": [[39, 60], ["torch.CrossEntropyLoss", "model.eval", "tqdm.tqdm", "model", "loss_func", "X.to", "y.to", "loss_func().item", "tqdm.tqdm.update", "len", "len", "len", "loss_func", "model.max"], "function", ["None"], ["", "def", "test_epoch", "(", "loader", ",", "model", ",", "device", "=", "None", ",", "use_tqdm", "=", "False", ",", "loss_func", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ")", ":", "\n", "    ", "\"\"\"Standard test epoch over the dataset\"\"\"", "\n", "test_loss", ",", "test_accu", "=", "0.", ",", "0.", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "if", "use_tqdm", ":", "\n", "        ", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "loader", ")", ")", "\n", "\n", "", "for", "X", ",", "y", "in", "loader", ":", "\n", "        ", "X", ",", "y", "=", "X", ".", "to", "(", "device", ")", ",", "y", ".", "to", "(", "device", ")", "\n", "yp", "=", "model", "(", "X", ")", "\n", "loss", "=", "loss_func", "(", "yp", ",", "y", ")", "\n", "\n", "test_accu", "+=", "(", "yp", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "==", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "test_loss", "+=", "loss_func", "(", "yp", ",", "y", ")", ".", "item", "(", ")", "*", "X", ".", "shape", "[", "0", "]", "\n", "\n", "if", "use_tqdm", ":", "\n", "            ", "pbar", ".", "update", "(", "1", ")", "\n", "\n", "", "", "return", "test_accu", "/", "len", "(", "loader", ".", "dataset", ")", ",", "test_loss", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.load_save_model": [[63, 75], ["str", "model.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.save", "torch.save", "torch.save", "torch.save", "model.state_dict"], "function", ["None"], ["", "def", "load_save_model", "(", "model", ",", "args", ",", "mode", "=", "'save'", ")", ":", "\n", "    ", "r\"\"\"load or save model\n    Args:\n        mode (str): specify the actiion, save or load model \n    \"\"\"", "\n", "PATH", "=", "'./saved_models/'", "+", "args", ".", "model", "+", "'_'", "+", "args", ".", "routing", "+", "'_'", "+", "args", ".", "dataset", "+", "'_seed'", "+", "str", "(", "args", ".", "seed", ")", "\n", "if", "mode", "==", "'load'", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "PATH", "+", "'.pth'", ")", ")", "\n", "return", "model", "\n", "\n", "", "elif", "mode", "==", "'save'", ":", "\n", "        ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "PATH", "+", "'.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.None.modules.adjust_learning_rate": [[78, 82], ["None"], "function", ["None"], ["", "", "def", "adjust_learning_rate", "(", "ep", ",", "opt", ",", "args", ")", ":", "\n", "    ", "if", "ep", "==", "50", ":", "\n", "        ", "for", "param_group", "in", "opt", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "'lr'", "]", "=", "args", ".", "lr", "*", "0.01", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.rout.DynamicRouting2d.__init__": [[20, 37], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "A", ",", "B", ",", "C", ",", "D", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "iters", "=", "3", ")", ":", "\n", "        ", "super", "(", "DynamicRouting2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "A", "=", "A", "\n", "self", ".", "B", "=", "B", "\n", "self", ".", "C", "=", "C", "\n", "self", ".", "D", "=", "D", "\n", "\n", "self", ".", "k", "=", "kernel_size", "\n", "self", ".", "kk", "=", "kernel_size", "**", "2", "\n", "self", ".", "kkA", "=", "self", ".", "kk", "*", "A", "\n", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "pad", "=", "padding", "\n", "\n", "self", ".", "iters", "=", "iters", "\n", "self", ".", "W", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "self", ".", "kkA", ",", "B", "*", "D", ",", "C", ")", ")", "\n", "nn", ".", "init", ".", "kaiming_uniform_", "(", "self", ".", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.rout.DynamicRouting2d.forward": [[38, 78], ["torch.unfold", "torch.unfold", "torch.unfold", "pose.view.view.view", "pose.view.view.permute().contiguous", "pose.view.view.view", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "pose_out.view.view.view", "pose.view.view.new_zeros", "range", "squash.squeeze", "squash.view", "squash.transpose().contiguous", "math.floor", "squash.view", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "rout.squash", "pose.view.view.permute", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "squash.transpose"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.rout.squash"], ["", "def", "forward", "(", "self", ",", "pose", ")", ":", "\n", "# x: [b, AC, h, w]", "\n", "        ", "b", ",", "_", ",", "h", ",", "w", "=", "pose", ".", "shape", "\n", "# [b, ACkk, l]", "\n", "pose", "=", "F", ".", "unfold", "(", "pose", ",", "self", ".", "k", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "self", ".", "pad", ")", "\n", "l", "=", "pose", ".", "shape", "[", "-", "1", "]", "\n", "# [b, A, C, kk, l]", "\n", "pose", "=", "pose", ".", "view", "(", "b", ",", "self", ".", "A", ",", "self", ".", "C", ",", "self", ".", "kk", ",", "l", ")", "\n", "# [b, l, kk, A, C]", "\n", "pose", "=", "pose", ".", "permute", "(", "0", ",", "4", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "# [b, l, kkA, C, 1]", "\n", "pose", "=", "pose", ".", "view", "(", "b", ",", "l", ",", "self", ".", "kkA", ",", "self", ".", "C", ",", "1", ")", "\n", "\n", "# [b, l, kkA, BD]", "\n", "pose_out", "=", "torch", ".", "matmul", "(", "self", ".", "W", ",", "pose", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "# [b, l, kkA, B, D]", "\n", "pose_out", "=", "pose_out", ".", "view", "(", "b", ",", "l", ",", "self", ".", "kkA", ",", "self", ".", "B", ",", "self", ".", "D", ")", "\n", "\n", "# [b, l, kkA, B, 1]", "\n", "b", "=", "pose", ".", "new_zeros", "(", "b", ",", "l", ",", "self", ".", "kkA", ",", "self", ".", "B", ",", "1", ")", "\n", "#b = torch.cuda.FloatTensor(b, l, self.kkA, self.B, 1).normal_(mean=1./self.B, std=0.1)", "\n", "for", "i", "in", "range", "(", "self", ".", "iters", ")", ":", "\n", "            ", "c", "=", "torch", ".", "softmax", "(", "b", ",", "dim", "=", "3", ")", "#.detach()", "\n", "s", "=", "(", "c", "*", "pose_out", ")", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "# [b, l, 1, B, D]", "\n", "v", "=", "squash", "(", "s", ")", "\n", "\n", "b", "=", "b", "+", "(", "v", "*", "pose_out", ")", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "# [b, l, B, D]", "\n", "", "v", "=", "v", ".", "squeeze", "(", "2", ")", "\n", "# [b, l, BD]", "\n", "v", "=", "v", ".", "view", "(", "v", ".", "shape", "[", "0", "]", ",", "l", ",", "-", "1", ")", "\n", "# [b, BD, l]", "\n", "v", "=", "v", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "\n", "oh", "=", "ow", "=", "math", ".", "floor", "(", "l", "**", "(", "1", "/", "2", ")", ")", "\n", "\n", "# [b, BD, oh, ow]", "\n", "return", "v", ".", "view", "(", "v", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "oh", ",", "ow", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.rout.Vote_Attack.__init__": [[82, 99], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "torch.init.kaiming_uniform_", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "A", ",", "B", ",", "C", ",", "D", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ":", "\n", "        ", "super", "(", "Vote_Attack", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#num_caps, num_classes, incaps_size, caps_size", "\n", "self", ".", "A", "=", "A", "\n", "self", ".", "B", "=", "B", "\n", "self", ".", "C", "=", "C", "\n", "self", ".", "D", "=", "D", "\n", "\n", "self", ".", "k", "=", "kernel_size", "\n", "self", ".", "kk", "=", "kernel_size", "**", "2", "\n", "self", ".", "kkA", "=", "self", ".", "kk", "*", "A", "\n", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "pad", "=", "padding", "\n", "\n", "self", ".", "W", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "self", ".", "kkA", ",", "B", "*", "D", ",", "C", ")", ")", "\n", "nn", ".", "init", ".", "kaiming_uniform_", "(", "self", ".", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.rout.Vote_Attack.forward": [[100, 126], ["torch.unfold", "torch.unfold", "torch.unfold", "pose.view.view.view", "pose.view.view.permute().contiguous", "pose.view.view.view", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "pose_out.view.view.view", "rout.squash", "pose.view.view.permute", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.rout.squash"], ["", "def", "forward", "(", "self", ",", "pose", ")", ":", "\n", "# x: [b, AC, h, w]", "\n", "        ", "b", ",", "_", ",", "h", ",", "w", "=", "pose", ".", "shape", "\n", "# [b, ACkk, l]", "\n", "pose", "=", "F", ".", "unfold", "(", "pose", ",", "self", ".", "k", ",", "stride", "=", "self", ".", "stride", ",", "padding", "=", "self", ".", "pad", ")", "\n", "l", "=", "pose", ".", "shape", "[", "-", "1", "]", "\n", "# [b, A, C, kk, l]", "\n", "pose", "=", "pose", ".", "view", "(", "b", ",", "self", ".", "A", ",", "self", ".", "C", ",", "self", ".", "kk", ",", "l", ")", "\n", "# [b, l, kk, A, C]", "\n", "pose", "=", "pose", ".", "permute", "(", "0", ",", "4", ",", "3", ",", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "# [b, l, kkA, C, 1]", "\n", "pose", "=", "pose", ".", "view", "(", "b", ",", "l", ",", "self", ".", "kkA", ",", "self", ".", "C", ",", "1", ")", "\n", "\n", "# [b, l, kkA, BD]", "\n", "pose_out", "=", "torch", ".", "matmul", "(", "self", ".", "W", ",", "pose", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "# [b, l, kkA, B, D]", "\n", "pose_out", "=", "pose_out", ".", "view", "(", "b", ",", "self", ".", "kkA", ",", "self", ".", "B", ",", "self", ".", "D", ")", "\n", "\n", "#pose_out = (pose_out*0.1).sum(dim=1, keepdim=True)", "\n", "\n", "pose_out", "=", "(", "pose_out", "/", "self", ".", "kkA", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "# [b, l, 1, B, D]", "\n", "v", "=", "squash", "(", "pose_out", ")", "\n", "#print(s.shape, v.shape)", "\n", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.rout.squash": [[12, 17], ["torch.sum", "torch.sum", "torch.sum", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "function", ["None"], ["def", "squash", "(", "s", ",", "dim", "=", "-", "1", ")", ":", "\n", "    ", "mag_sq", "=", "torch", ".", "sum", "(", "s", "**", "2", ",", "dim", "=", "dim", ",", "keepdim", "=", "True", ")", "\n", "mag", "=", "torch", ".", "sqrt", "(", "mag_sq", ")", "\n", "v", "=", "(", "mag_sq", "/", "(", "1.0", "+", "mag_sq", ")", ")", "*", "(", "s", "/", "mag", ")", "\n", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.BasicBlock.__init__": [[13, 24], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.BasicBlock.forward": [[26, 32], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn2", "resnet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet.BasicBlock.bn1", "resnet.BasicBlock.conv2", "resnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.Bottleneck.__init__": [[35, 49], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "bias", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.Bottleneck.forward": [[51, 58], ["resnet.Bottleneck.relu", "resnet.Bottleneck.relu", "resnet.Bottleneck.bn3", "resnet.Bottleneck.shortcut", "resnet.Bottleneck.relu", "resnet.Bottleneck.bn1", "resnet.Bottleneck.bn2", "resnet.Bottleneck.conv3", "resnet.Bottleneck.conv1", "resnet.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet.__init__": [[60, 76], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet.__init__", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet._make_layer", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet._make_layer", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet._make_layer", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "\n", "\n", "self", ".", "activation", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet.get_activation": [[78, 82], ["output.cpu().detach", "output.cpu"], "methods", ["None"], ["", "def", "get_activation", "(", "self", ",", "name", ")", ":", "\n", "        ", "def", "hook", "(", "model", ",", "input", ",", "output", ")", ":", "\n", "            ", "self", ".", "activation", "[", "name", "]", "=", "output", ".", "cpu", "(", ")", ".", "detach", "(", ")", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet.register_layer": [[83, 85], ["layer.register_forward_hook", "resnet.ResNet.get_activation"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet.get_activation"], ["", "def", "register_layer", "(", "self", ",", "layer", ",", "name", ")", ":", "\n", "        ", "layer", ".", "register_forward_hook", "(", "self", ".", "get_activation", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet._make_layer": [[86, 93], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet.forward": [[94, 104], ["resnet.ResNet.relu", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet.ResNet.view", "resnet.ResNet.linear", "resnet.ResNet.bn1", "resnet.ResNet.size", "resnet.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "4", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet18": [[107, 109], ["resnet.ResNet"], "function", ["None"], ["", "", "def", "ResNet18", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet34": [[110, 112], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet50": [[113, 115], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet101": [[116, 118], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.resnet.ResNet152": [[119, 121], ["resnet.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.BasicBlock.__init__": [[17, 29], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ",", "option", "=", "'A'", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.BasicBlock.forward": [[31, 37], ["torch.relu", "torch.relu", "torch.relu", "capsnet.BasicBlock.bn2", "capsnet.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "capsnet.BasicBlock.bn1", "capsnet.BasicBlock.conv2", "capsnet.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet.__init__": [[40, 71], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "capsnet.ResNet._make_layer", "capsnet.ResNet._make_layer", "capsnet.ResNet._make_layer", "capsnet.ResNet._make_layer", "capsnet.ResNet.apply", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "DynamicRouting2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "Vote_Attack"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet.__init__", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet._make_layer", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet._make_layer", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet._make_layer", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "mode", ",", "num_classes", "=", "10", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn_1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "mode", "=", "mode", "\n", "kernel_size", "=", "4", "\n", "\n", "# DR", "\n", "if", "self", ".", "mode", "==", "'DR'", ":", "\n", "            ", "self", ".", "num_caps", "=", "64", "\n", "self", ".", "incaps_size", "=", "8", "\n", "self", ".", "caps_size", "=", "16", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "num_caps", "*", "self", ".", "incaps_size", ")", "\n", "self", ".", "rout", "=", "DynamicRouting2d", "(", "self", ".", "num_caps", ",", "num_classes", ",", "self", ".", "incaps_size", ",", "self", ".", "caps_size", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "0", ")", "\n", "\n", "# Vote_Attack", "\n", "", "elif", "self", ".", "mode", "==", "'Vote_Attack'", ":", "\n", "            ", "self", ".", "num_caps", "=", "64", "\n", "self", ".", "incaps_size", "=", "8", "\n", "self", ".", "caps_size", "=", "16", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "num_caps", "*", "self", ".", "incaps_size", ")", "\n", "self", ".", "rout", "=", "Vote_Attack", "(", "self", ".", "num_caps", ",", "num_classes", ",", "self", ".", "incaps_size", ",", "self", ".", "caps_size", ",", "kernel_size", "=", "kernel_size", ",", "padding", "=", "0", ")", "\n", "\n", "", "self", ".", "apply", "(", "weights_init", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet._make_layer": [[72, 80], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.ResNet.forward": [[82, 123], ["torch.relu", "torch.relu", "torch.relu", "capsnet.ResNet.layer1", "capsnet.ResNet.layer2", "capsnet.ResNet.layer3", "capsnet.ResNet.layer4", "capsnet.ResNet.bn_1", "capsnet.ResNet.bn", "pose.permute.permute.permute().contiguous", "squash", "pose.permute.permute.view", "pose.permute.permute.permute", "capsnet.ResNet.rout().squeeze", "out.log.log.view", "out.log.log.norm", "out.log.log.log", "capsnet.ResNet.conv1", "pose.permute.permute.view", "out.log.log.sum", "capsnet.ResNet.bn", "pose.permute.permute.permute().contiguous", "squash", "pose.permute.permute.view", "pose.permute.permute.permute", "capsnet.ResNet.rout", "out.log.log.norm", "out.log.log.reshape", "out.log.log.log", "pose.permute.permute.permute", "capsnet.ResNet.rout", "pose.permute.permute.view", "out.log.log.sum", "pose.permute.permute.permute"], "methods", ["home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.rout.squash", "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.rout.squash"], ["", "def", "forward", "(", "self", ",", "x", ",", "num_heads", "=", "1", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn_1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "\n", "# DR or No_R", "\n", "if", "self", ".", "mode", "==", "'DR'", ":", "\n", "            ", "pose", "=", "self", ".", "bn", "(", "out", ")", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "pose", ".", "shape", "\n", "pose", "=", "pose", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "pose", "=", "squash", "(", "pose", ".", "view", "(", "b", ",", "h", ",", "w", ",", "self", ".", "num_caps", ",", "self", ".", "incaps_size", ")", ")", "\n", "pose", "=", "pose", ".", "view", "(", "b", ",", "h", ",", "w", ",", "-", "1", ")", "\n", "pose", "=", "pose", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "out", "=", "self", ".", "rout", "(", "pose", ")", ".", "squeeze", "(", ")", "\n", "out", "=", "out", ".", "view", "(", "b", ",", "-", "1", ",", "self", ".", "caps_size", ")", "\n", "\n", "out", "=", "out", ".", "norm", "(", "dim", "=", "-", "1", ")", "\n", "out", "=", "out", "/", "out", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "out", "=", "out", ".", "log", "(", ")", "\n", "\n", "\n", "", "elif", "self", ".", "mode", "==", "'Vote_Attack'", ":", "\n", "\n", "            ", "pose", "=", "self", ".", "bn", "(", "out", ")", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "pose", ".", "shape", "\n", "pose", "=", "pose", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "pose", "=", "squash", "(", "pose", ".", "view", "(", "b", ",", "h", ",", "w", ",", "self", ".", "num_caps", ",", "self", ".", "incaps_size", ")", ")", "\n", "pose", "=", "pose", ".", "view", "(", "b", ",", "h", ",", "w", ",", "-", "1", ")", "\n", "pose", "=", "pose", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "out", "=", "self", ".", "rout", "(", "pose", ")", "\n", "\n", "out", "=", "out", ".", "norm", "(", "dim", "=", "-", "1", ")", "\n", "out", "=", "out", "/", "out", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "out", "=", "out", ".", "reshape", "(", "-", "1", ",", "10", ")", "\n", "out", "=", "out", ".", "log", "(", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.weights_init": [[7, 13], ["isinstance", "isinstance", "torch.init.kaiming_uniform_", "isinstance", "torch.init.constant_", "torch.init.constant_"], "function", ["None"], ["def", "weights_init", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "nn", ".", "init", ".", "kaiming_uniform_", "(", "m", ".", "weight", ".", "data", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JindongGu_VoteAttack.models.capsnet.Capsnet": [[125, 127], ["capsnet.ResNet"], "function", ["None"], ["", "", "def", "Capsnet", "(", "mode", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "mode", ")", "\n", "\n"]]}