{"home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.agent.Agent.__init__": [[16, 32], ["torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.Adam", "torch.Adam", "torch.Adam", "agent.Agent.policy_net.parameters", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "policy_net", ",", "target_net", ",", "env", ",", "epsilon", ")", ":", "\n", "        ", "self", ".", "policy_net", "=", "policy_net", "\n", "self", ".", "target_net", "=", "target_net", "\n", "self", ".", "env", "=", "env", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "\"cpu\"", ")", "\n", "self", ".", "learning_rate", "=", "1e-3", "\n", "# self.loss_func = torch.nn.SmoothL1Loss()", "\n", "self", ".", "loss_func", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "policy_net", ".", "parameters", "(", ")", ",", "lr", "=", "self", ".", "learning_rate", ")", "\n", "\n", "self", ".", "state_size", "=", "self", ".", "env", ".", "state_size", "\n", "self", ".", "n_actions", "=", "self", ".", "env", ".", "n_actions", "\n", "self", ".", "l", "=", "1.0", "# parameter lambda used in A* search", "\n", "self", ".", "decimal_punish", "=", "400", "\n", "self", ".", "epsilon", "=", "epsilon", "# stop searching when distance less than epsilon", "\n", "self", ".", "action_inv_table", "=", "[", "1", ",", "0", ",", "3", ",", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.agent.Agent.search": [[33, 157], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "agent.Agent.env.einsum", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.arange().to", "torch.cat.view", "torch.cat.view", "torch.cat.view", "agent.Agent.env.batch_distance_2", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "tqdm.trange", "torch.cat.view", "torch.cat.view", "torch.cat.view", "tqdm.trange", "agent.Agent.env.einsum().view", "torch.cat.expand().transpose", "torch.cat.expand().transpose", "torch.cat.expand().transpose", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.view", "torch.cat.view", "torch.cat.view", "next_indices.view", "agent.Agent.env.batch_distance_2", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "len", "tqdm.trange", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "agent.Agent.target_net().view", "len", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "agent.Agent.env.einsum().view", "next_indices.view", "agent.Agent.target_net().view", "action_sequence[].expand().transpose().reshape", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "agent.Agent.env.batch_distance_2", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "min_dist.detach", "best_state.detach", "best_sequence.detach", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "agent.Agent.target_net().view", "min", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "states_list.append", "actions_list.append", "action_sequence_list.append", "cost_to_go_list.append", "path_cost_list.append", "cost_decimal_list.append", "cost_list.append", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "len", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "agent.Agent.env.einsum", "torch.cat.expand", "torch.cat.expand", "torch.cat.expand", "next_indices.unsqueeze", "len", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "len", "agent.Agent.target_net", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "agent.Agent.env.einsum", "agent.Agent.target_net", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "action_sequence[].expand().transpose", "next_indices.view.unsqueeze", "agent.Agent.target_net", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "torch.round", "agent.Agent.view", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "action_sequence[].expand", "len"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_distance_2", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_distance_2", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_distance_2", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum"], ["", "def", "search", "(", "self", ",", "init", ",", "brute_force_length", ",", "expand_size", ",", "keep_size", ",", "maximum_depth", "=", "200", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "states", "=", "self", ".", "env", ".", "einsum", "(", "'aij, jk->aik'", ",", "self", ".", "env", ".", "U", ",", "init", ")", "\n", "actions", "=", "torch", ".", "arange", "(", "self", ".", "n_actions", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "action_sequence", "=", "actions", ".", "view", "(", "-", "1", ",", "1", ")", "# (batch, sequence_len)", "\n", "distances", "=", "self", ".", "env", ".", "batch_distance_2", "(", "self", ".", "env", ".", "target", ",", "states", ")", "\n", "min_dist", ",", "idx", "=", "torch", ".", "min", "(", "distances", ",", "0", ")", "\n", "best_state", "=", "states", "[", "idx", "]", "\n", "best_sequence", "=", "action_sequence", "[", "idx", "]", "\n", "\n", "for", "i", "in", "trange", "(", "1", ",", "brute_force_length", ")", ":", "\n", "                ", "next_indices", "=", "self", ".", "env", ".", "scramble_table", "[", "actions", "]", "# (batch, n_actions-1)", "\n", "states", "=", "self", ".", "env", ".", "einsum", "(", "'abij, ajk->abik'", ",", "self", ".", "env", ".", "U", "[", "next_indices", "]", ",", "states", ")", ".", "view", "(", "-", "1", ",", "2", ",", "2", ",", "2", ")", "\n", "# (batch, n_actions-1, seq_len)", "\n", "next_action_sequence", "=", "action_sequence", ".", "expand", "(", "self", ".", "n_actions", "-", "1", ",", "action_sequence", ".", "shape", "[", "0", "]", ",", "action_sequence", ".", "shape", "[", "1", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", "\n", "action_sequence", "=", "torch", ".", "cat", "(", "(", "next_action_sequence", ",", "next_indices", ".", "unsqueeze", "(", "-", "1", ")", ")", ",", "dim", "=", "-", "1", ")", "\n", "action_sequence", "=", "action_sequence", ".", "view", "(", "-", "1", ",", "action_sequence", ".", "shape", "[", "2", "]", ")", "\n", "actions", "=", "next_indices", ".", "view", "(", "-", "1", ")", "\n", "distances", "=", "self", ".", "env", ".", "batch_distance_2", "(", "self", ".", "env", ".", "target", ",", "states", ")", "\n", "\n", "val", ",", "idx", "=", "torch", ".", "min", "(", "distances", ",", "0", ")", "\n", "if", "val", "<", "min_dist", ":", "\n", "                    ", "min_dist", "=", "val", "\n", "best_state", "=", "states", "[", "idx", "]", "\n", "best_sequence", "=", "action_sequence", "[", "idx", "]", "\n", "\n", "# memory is not enough to evaluate all states, so chunk the states first", "\n", "", "", "states_flattened", "=", "states", ".", "view", "(", "-", "1", ",", "self", ".", "state_size", ")", "\n", "chunk_size", "=", "100000", "\n", "if", "len", "(", "states", ")", ">", "chunk_size", ":", "\n", "                ", "n_chunk", "=", "len", "(", "states", ")", "//", "chunk_size", "+", "1", "\n", "states_list", "=", "[", "]", "\n", "actions_list", "=", "[", "]", "\n", "action_sequence_list", "=", "[", "]", "\n", "cost_to_go_list", "=", "[", "]", "\n", "path_cost_list", "=", "[", "]", "\n", "cost_decimal_list", "=", "[", "]", "\n", "cost_list", "=", "[", "]", "\n", "for", "i", "in", "trange", "(", "n_chunk", ")", ":", "\n", "                    ", "cost_to_go", "=", "self", ".", "target_net", "(", "states_flattened", "[", "i", "*", "chunk_size", ":", "(", "i", "+", "1", ")", "*", "chunk_size", "]", ")", ".", "view", "(", "-", "1", ")", "# (batch)", "\n", "path_cost", "=", "brute_force_length", "*", "torch", ".", "ones_like", "(", "cost_to_go", ",", "device", "=", "self", ".", "device", ")", "\n", "cost_decimal", "=", "(", "cost_to_go", "-", "torch", ".", "round", "(", "cost_to_go", ")", ")", "**", "2", "\n", "cost", "=", "self", ".", "l", "*", "path_cost", "+", "cost_to_go", "+", "self", ".", "decimal_punish", "*", "cost_decimal", "/", "cost_to_go", "\n", "keep_size_i", "=", "min", "(", "keep_size", "//", "(", "n_chunk", "-", "1", ")", ",", "len", "(", "cost", ")", ")", "\n", "value", ",", "index", "=", "torch", ".", "topk", "(", "cost", ",", "keep_size_i", ",", "dim", "=", "0", ",", "largest", "=", "False", ",", "sorted", "=", "True", ")", "\n", "states_list", ".", "append", "(", "states", "[", "index", "]", ")", "\n", "actions_list", ".", "append", "(", "actions", "[", "index", "]", ")", "\n", "action_sequence_list", ".", "append", "(", "action_sequence", "[", "index", "]", ")", "\n", "cost_to_go_list", ".", "append", "(", "cost_to_go", "[", "index", "]", ")", "\n", "path_cost_list", ".", "append", "(", "path_cost", "[", "index", "]", ")", "\n", "cost_decimal_list", ".", "append", "(", "cost_decimal", "[", "index", "]", ")", "\n", "cost_list", ".", "append", "(", "cost", "[", "index", "]", ")", "\n", "", "states", "=", "torch", ".", "cat", "(", "states_list", ")", "\n", "actions", "=", "torch", ".", "cat", "(", "actions_list", ")", "\n", "action_sequence", "=", "torch", ".", "cat", "(", "action_sequence_list", ")", "\n", "cost_to_go", "=", "torch", ".", "cat", "(", "cost_to_go_list", ")", "\n", "path_cost", "=", "torch", ".", "cat", "(", "path_cost_list", ")", "\n", "cost_decimal", "=", "torch", ".", "cat", "(", "cost_decimal_list", ")", "\n", "cost", "=", "torch", ".", "cat", "(", "cost_list", ")", "\n", "", "else", ":", "\n", "                ", "cost_to_go", "=", "self", ".", "target_net", "(", "states_flattened", ")", ".", "view", "(", "-", "1", ")", "# (batch)", "\n", "path_cost", "=", "brute_force_length", "*", "torch", ".", "ones_like", "(", "cost_to_go", ",", "device", "=", "self", ".", "device", ")", "\n", "cost_decimal", "=", "(", "cost_to_go", "-", "torch", ".", "round", "(", "cost_to_go", ")", ")", "**", "2", "\n", "cost", "=", "self", ".", "l", "*", "path_cost", "+", "cost_to_go", "+", "self", ".", "decimal_punish", "*", "cost_decimal", "/", "cost_to_go", "\n", "", "if", "len", "(", "cost", ")", ">", "keep_size", ":", "\n", "                ", "cost", ",", "index", "=", "torch", ".", "topk", "(", "cost", ",", "keep_size", ",", "dim", "=", "0", ",", "largest", "=", "False", ",", "sorted", "=", "True", ")", "\n", "", "else", ":", "\n", "                ", "cost", ",", "index", "=", "torch", ".", "sort", "(", "cost", ")", "\n", "", "states", "=", "states", "[", "index", "]", "\n", "actions", "=", "actions", "[", "index", "]", "\n", "action_sequence", "=", "action_sequence", "[", "index", "]", "\n", "cost_to_go", "=", "cost_to_go", "[", "index", "]", "\n", "cost_decimal", "=", "cost_decimal", "[", "index", "]", "\n", "path_cost", "=", "path_cost", "[", "index", "]", "\n", "for", "i", "in", "trange", "(", "maximum_depth", ")", ":", "\n", "                ", "states_expand", "=", "states", "[", ":", "expand_size", "]", "\n", "actions_expand", "=", "actions", "[", ":", "expand_size", "]", "\n", "\n", "next_indices", "=", "self", ".", "env", ".", "scramble_table", "[", "actions_expand", "]", "\n", "next_states", "=", "self", ".", "env", ".", "einsum", "(", "'abij, ajk->abik'", ",", "self", ".", "env", ".", "U", "[", "next_indices", "]", ",", "states_expand", ")", ".", "view", "(", "-", "1", ",", "2", ",", "2", ",", "2", ")", "\n", "next_actions", "=", "next_indices", ".", "view", "(", "-", "1", ")", "\n", "next_cost_to_go", "=", "self", ".", "target_net", "(", "next_states", ".", "view", "(", "-", "1", ",", "self", ".", "state_size", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "next_cost_decimal", "=", "(", "next_cost_to_go", "-", "torch", ".", "round", "(", "next_cost_to_go", ")", ")", "**", "2", "\n", "next_path_cost", "=", "(", "path_cost", "[", ":", "expand_size", "]", "+", "1", ")", ".", "expand", "(", "self", ".", "n_actions", "-", "1", ",", "expand_size", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "-", "1", ")", "\n", "next_action_sequence", "=", "action_sequence", "[", ":", "expand_size", "]", ".", "expand", "(", "self", ".", "n_actions", "-", "1", ",", "expand_size", ",", "action_sequence", ".", "shape", "[", "1", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "reshape", "(", "(", "self", ".", "n_actions", "-", "1", ")", "*", "expand_size", ",", "-", "1", ")", "\n", "next_action_sequence", "=", "torch", ".", "cat", "(", "(", "next_action_sequence", ",", "next_actions", ".", "unsqueeze", "(", "-", "1", ")", ")", ",", "dim", "=", "-", "1", ")", "\n", "# in order to keep all action_seqs of same length, use -1 to mean \"no action\"", "\n", "action_sequence", "=", "torch", ".", "cat", "(", "(", "action_sequence", ",", "-", "1", "*", "torch", ".", "ones", "(", "(", "len", "(", "action_sequence", ")", ",", "1", ")", ",", "dtype", "=", "torch", ".", "int64", ",", "device", "=", "self", ".", "device", ")", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n", "distances", "=", "self", ".", "env", ".", "batch_distance_2", "(", "self", ".", "env", ".", "target", ",", "next_states", ")", "\n", "\n", "val", ",", "idx", "=", "torch", ".", "min", "(", "distances", ",", "0", ")", "\n", "if", "val", "<", "min_dist", ":", "\n", "                    ", "min_dist", "=", "val", "\n", "best_state", "=", "next_states", "[", "idx", "]", "\n", "best_sequence", "=", "next_action_sequence", "[", "idx", "]", "\n", "\n", "", "states", "=", "torch", ".", "cat", "(", "(", "states", "[", "expand_size", ":", "]", ",", "next_states", ")", ",", "dim", "=", "0", ")", "\n", "actions", "=", "torch", ".", "cat", "(", "(", "actions", "[", "expand_size", ":", "]", ",", "next_actions", ")", ",", "dim", "=", "0", ")", "\n", "action_sequence", "=", "torch", ".", "cat", "(", "(", "action_sequence", "[", "expand_size", ":", "]", ",", "next_action_sequence", ")", ",", "dim", "=", "0", ")", "\n", "cost_to_go", "=", "torch", ".", "cat", "(", "(", "cost_to_go", "[", "expand_size", ":", "]", ",", "next_cost_to_go", ")", ",", "dim", "=", "0", ")", "\n", "cost_decimal", "=", "torch", ".", "cat", "(", "(", "cost_decimal", "[", "expand_size", ":", "]", ",", "next_cost_decimal", ")", ",", "dim", "=", "0", ")", "\n", "path_cost", "=", "torch", ".", "cat", "(", "(", "path_cost", "[", "expand_size", ":", "]", ",", "next_path_cost", ")", ",", "dim", "=", "0", ")", "\n", "cost", "=", "torch", ".", "cat", "(", "(", "cost", "[", "expand_size", ":", "]", ",", "self", ".", "l", "*", "next_path_cost", "+", "next_cost_to_go", "+", "self", ".", "decimal_punish", "*", "next_cost_decimal", "/", "next_cost_to_go", ")", ",", "dim", "=", "0", ")", "\n", "if", "len", "(", "cost", ")", ">", "keep_size", ":", "\n", "                    ", "cost", ",", "index", "=", "torch", ".", "topk", "(", "cost", ",", "keep_size", ",", "dim", "=", "0", ",", "largest", "=", "False", ",", "sorted", "=", "True", ")", "\n", "", "else", ":", "\n", "                    ", "cost", ",", "index", "=", "torch", ".", "sort", "(", "cost", ")", "\n", "", "states", "=", "states", "[", "index", "]", "\n", "actions", "=", "actions", "[", "index", "]", "\n", "action_sequence", "=", "action_sequence", "[", "index", "]", "\n", "cost_to_go", "=", "cost_to_go", "[", "index", "]", "\n", "cost_decimal", "=", "cost_decimal", "[", "index", "]", "\n", "path_cost", "=", "path_cost", "[", "index", "]", "\n", "# print('Cost-to-go:', cost_to_go[0].detach().cpu().numpy().item(),\\", "\n", "#       'Total cost:', cost[0].detach().cpu().numpy().item())", "\n", "", "return", "min_dist", ".", "detach", "(", ")", ",", "best_state", ".", "detach", "(", ")", ",", "best_sequence", ".", "detach", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.agent.Agent.update_model": [[158, 174], ["len", "agent.Agent.policy_net", "agent.Agent.loss_func", "agent.Agent.optimizer.zero_grad", "agent.Agent.backward", "agent.Agent.optimizer.step", "agent.Agent.detach", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "agent.Agent.target_net().reshape", "agent.Agent.target_net", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "torch.min", "next_states.reshape"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.step"], ["", "", "def", "update_model", "(", "self", ",", "data", ")", ":", "\n", "        ", "states", "=", "data", "[", "'state'", "]", "\n", "next_states", "=", "data", "[", "'next_states'", "]", "\n", "mask", "=", "data", "[", "'mask'", "]", "\n", "batch_size", "=", "len", "(", "states", ")", "\n", "cost", "=", "self", ".", "policy_net", "(", "states", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "cost_target", "=", "self", ".", "target_net", "(", "next_states", ".", "reshape", "(", "batch_size", "*", "self", ".", "n_actions", ",", "self", ".", "state_size", ")", ")", ".", "reshape", "(", "batch_size", ",", "self", ".", "n_actions", ",", "1", ")", "\n", "cost_target", "=", "cost_target", "*", "mask", "\n", "cost_target", "=", "torch", ".", "min", "(", "cost_target", ",", "1", ")", "[", "0", "]", "+", "1.0", "\n", "", "loss", "=", "self", ".", "loss_func", "(", "cost", ",", "cost_target", ")", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "return", "loss", ".", "detach", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.testDataset.TestDataset.__init__": [[16, 27], ["dataGenerator.DataGenerator", "testDataset.TestDataset.generator.calc_data_full", "testDataset.TestDataset.reinitialize"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.calc_data_full", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.randomStateDataset.RandomStateDataset.reinitialize"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "cur_length", ",", "full_dataset_length", ",", "max_length", ",", "num_samples", ",", "epsilon", ")", ":", "\n", "        ", "self", ".", "env", "=", "env", "\n", "self", ".", "cur_length", "=", "cur_length", "\n", "self", ".", "max_length", "=", "max_length", "\n", "self", ".", "num_samples", "=", "num_samples", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "full_dataset_length", "=", "full_dataset_length", "\n", "\n", "self", ".", "generator", "=", "DataGenerator", "(", "env", ",", "epsilon", ")", "\n", "self", ".", "states_full", ",", "self", ".", "actions", ",", "_", ",", "_", "=", "self", ".", "generator", ".", "calc_data_full", "(", "self", ".", "full_dataset_length", ")", "\n", "self", ".", "reinitialize", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.testDataset.TestDataset.reinitialize": [[28, 32], ["testDataset.TestDataset.generator.calc_data_rand", "testDataset.TestDataset.states_full[].view"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.calc_data_rand"], ["", "def", "reinitialize", "(", "self", ")", ":", "\n", "        ", "n", "=", "self", ".", "cur_length", "-", "self", ".", "full_dataset_length", "\n", "if", "n", ">", "0", ":", "\n", "            ", "self", ".", "states_rand", ",", "_", ",", "_", "=", "self", ".", "generator", ".", "calc_data_rand", "(", "self", ".", "states_full", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "2", ",", "2", ",", "2", ")", ",", "self", ".", "actions", ",", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.testDataset.TestDataset.__len__": [[33, 35], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.testDataset.TestDataset.__getitem__": [[36, 47], ["torch.randint", "torch.randint", "torch.randint", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "_", ")", ":", "\n", "        ", "length", "=", "torch", ".", "randint", "(", "0", ",", "self", ".", "cur_length", ",", "(", ")", ")", "\n", "if", "length", "<", "self", ".", "full_dataset_length", ":", "\n", "            ", "idx", "=", "torch", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "states_full", "[", "length", "]", ")", ",", "(", ")", ")", "\n", "state", "=", "self", ".", "states_full", "[", "length", "]", "[", "idx", "]", "\n", "return", "{", "'state'", ":", "state", ",", "'length'", ":", "length", "+", "1", "}", "\n", "", "else", ":", "\n", "            ", "length", "=", "length", "-", "self", ".", "full_dataset_length", "\n", "idx", "=", "torch", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "states_rand", "[", "length", "]", ")", ",", "(", ")", ")", "\n", "state", "=", "self", ".", "states_rand", "[", "length", "]", "[", "idx", "]", "\n", "return", "{", "'state'", ":", "state", ",", "'length'", ":", "length", "+", "self", ".", "full_dataset_length", "+", "1", "}", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.__init__": [[14, 45], ["torch.no_grad", "numpy.exp", "numpy.zeros", "numpy.array", "numpy.array", "numpy.identity", "torch.zeros", "torch.tensor", "torch.tensor", "torch.zeros", "torch.tensor", "torch.tensor", "numpy.sqrt", "system.System.U_np[].conj", "numpy.sqrt", "system.System.U_np[].conj", "numpy.real", "numpy.imag", "numpy.real", "numpy.sqrt", "numpy.linalg.det", "numpy.linalg.det", "numpy.sqrt", "numpy.sqrt"], "methods", ["None"], ["    ", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "__init__", "(", "self", ",", "device", ")", ":", "\n", "        ", "self", ".", "state_size", "=", "8", "\n", "self", ".", "n_actions", "=", "4", "\n", "gamma", "=", "np", ".", "exp", "(", "1j", "*", "pi", "/", "5", ")", "\n", "kappa", "=", "(", "np", ".", "sqrt", "(", "5", ")", "-", "1", ")", "/", "2", "\n", "self", ".", "U_np", "=", "np", ".", "zeros", "(", "(", "4", ",", "2", ",", "2", ")", ",", "dtype", "=", "np", ".", "complex64", ")", "\n", "\n", "# here we ignored the global phase for 1-qubit systems, casting the U here into SU(2)", "\n", "self", ".", "U_np", "[", "0", "]", "=", "np", ".", "array", "(", "[", "[", "gamma", "**", "(", "-", "4", ")", ",", "0", "]", ",", "[", "0", ",", "gamma", "**", "3", "]", "]", ",", "dtype", "=", "np", ".", "complex64", ")", "\n", "self", ".", "U_np", "[", "0", "]", "=", "self", ".", "U_np", "[", "0", "]", "/", "np", ".", "sqrt", "(", "np", ".", "linalg", ".", "det", "(", "self", ".", "U_np", "[", "0", "]", ")", ")", "\n", "self", ".", "U_np", "[", "1", "]", "=", "self", ".", "U_np", "[", "0", "]", ".", "conj", "(", ")", ".", "T", "\n", "self", ".", "U_np", "[", "2", "]", "=", "np", ".", "array", "(", "[", "[", "-", "kappa", "*", "gamma", "**", "(", "-", "1", ")", ",", "np", ".", "sqrt", "(", "kappa", ")", "*", "gamma", "**", "(", "-", "3", ")", "]", ",", "[", "np", ".", "sqrt", "(", "kappa", ")", "*", "gamma", "**", "(", "-", "3", ")", ",", "-", "kappa", "]", "]", ",", "dtype", "=", "np", ".", "complex64", ")", "\n", "self", ".", "U_np", "[", "2", "]", "=", "self", ".", "U_np", "[", "2", "]", "/", "np", ".", "sqrt", "(", "np", ".", "linalg", ".", "det", "(", "self", ".", "U_np", "[", "2", "]", ")", ")", "\n", "self", ".", "U_np", "[", "3", "]", "=", "self", ".", "U_np", "[", "2", "]", ".", "conj", "(", ")", ".", "T", "\n", "I", "=", "np", ".", "identity", "(", "2", ",", "dtype", "=", "np", ".", "complex64", ")", "\n", "\n", "# (n_basic_operation, real and imag parts, 2-by-2 matrix)", "\n", "self", ".", "U", "=", "torch", ".", "zeros", "(", "(", "self", ".", "n_actions", ",", "2", ",", "2", ",", "2", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", "\n", "self", ".", "U", "[", ":", ",", "0", ",", ":", ",", ":", "]", "=", "torch", ".", "tensor", "(", "np", ".", "real", "(", "self", ".", "U_np", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", "\n", "self", ".", "U", "[", ":", ",", "1", ",", ":", ",", ":", "]", "=", "torch", ".", "tensor", "(", "np", ".", "imag", "(", "self", ".", "U_np", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", "\n", "\n", "self", ".", "target", "=", "torch", ".", "zeros", "(", "(", "2", ",", "2", ",", "2", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", "\n", "self", ".", "target", "[", "0", ",", ":", ",", ":", "]", "=", "torch", ".", "tensor", "(", "np", ".", "real", "(", "I", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", "\n", "# used when scrambling to avoid reverse actions", "\n", "self", ".", "scramble_table", "=", "torch", ".", "tensor", "(", "[", "[", "0", ",", "2", ",", "3", "]", ",", "[", "1", ",", "2", ",", "3", "]", ",", "[", "0", ",", "1", ",", "2", "]", ",", "[", "0", ",", "1", ",", "3", "]", "]", ",", "dtype", "=", "torch", ".", "int64", ",", "device", "=", "device", ")", "\n", "self", ".", "device", "=", "device", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.mul": [[47, 57], ["torch.no_grad", "torch.stack", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "mul", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "'''\n            complex matrix multiplication\n            x1: 2 * p * q    x2: 2 * q * r\n            first dimension: real and imag parts\n        '''", "\n", "real", "=", "torch", ".", "matmul", "(", "x1", "[", "0", "]", ",", "x2", "[", "0", "]", ")", "-", "torch", ".", "matmul", "(", "x1", "[", "1", "]", ",", "x2", "[", "1", "]", ")", "\n", "imag", "=", "torch", ".", "matmul", "(", "x1", "[", "1", "]", ",", "x2", "[", "0", "]", ")", "+", "torch", ".", "matmul", "(", "x1", "[", "0", "]", ",", "x2", "[", "1", "]", ")", "\n", "return", "torch", ".", "stack", "(", "(", "real", ",", "imag", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum": [[58, 73], ["torch.no_grad", "torch.stack", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "einsum", "(", "self", ",", "equation", ",", "U", ",", "states", ")", ":", "\n", "        ", "'''\n            einsum with customized complex number computation\n            replacement for the old batch_mul functions for clarity and unification\n            batch_mul(U, states) = einsum('ij, ajk->aik', U, states)\n            # note that U and states are reversed in batch_mul_1; this caused some bugs\n            batch_mul_1(states, U) = einsum('abij, ajk->abik', U, states) \n            batch_mul_2(U, states) = einsum('aij, bjk->baik', U, states)\n        '''", "\n", "real", "=", "torch", ".", "einsum", "(", "equation", ",", "U", "[", "...", ",", "0", ",", ":", ",", ":", "]", ",", "states", "[", "...", ",", "0", ",", ":", ",", ":", "]", ")", "-", "torch", ".", "einsum", "(", "equation", ",", "U", "[", "...", ",", "1", ",", ":", ",", ":", "]", ",", "states", "[", "...", ",", "1", ",", ":", ",", ":", "]", ")", "\n", "imag", "=", "torch", ".", "einsum", "(", "equation", ",", "U", "[", "...", ",", "0", ",", ":", ",", ":", "]", ",", "states", "[", "...", ",", "1", ",", ":", ",", ":", "]", ")", "+", "torch", ".", "einsum", "(", "equation", ",", "U", "[", "...", ",", "1", ",", ":", ",", ":", "]", ",", "states", "[", "...", ",", "0", ",", ":", ",", ":", "]", ")", "\n", "return", "torch", ".", "stack", "(", "(", "real", ",", "imag", ")", ",", "dim", "=", "-", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_mul": [[75, 84], ["torch.no_grad", "torch.stack", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "batch_mul", "(", "self", ",", "x", ",", "batch", ")", ":", "\n", "        ", "'''\n            complex matrix batch multiplication\n            x: 2 * p * q    batch: batch_size * 2 * q * r\n        '''", "\n", "real", "=", "torch", ".", "matmul", "(", "x", "[", "0", "]", ",", "batch", "[", ":", ",", "0", "]", ")", "-", "torch", ".", "matmul", "(", "x", "[", "1", "]", ",", "batch", "[", ":", ",", "1", "]", ")", "\n", "imag", "=", "torch", ".", "matmul", "(", "x", "[", "1", "]", ",", "batch", "[", ":", ",", "0", "]", ")", "+", "torch", ".", "matmul", "(", "x", "[", "0", "]", ",", "batch", "[", ":", ",", "1", "]", ")", "\n", "return", "torch", ".", "stack", "(", "(", "real", ",", "imag", ")", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_mul_1": [[85, 98], ["torch.no_grad", "torch.stack", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "batch_mul_1", "(", "self", ",", "x", ",", "batch", ")", ":", "\n", "        ", "'''\n            complex matrix batch multiplication\n            used when calculating Qs_next\n            x: batch_size * 2 * p * q    batch: batch_size * n_operation * 2 * q * r\n            output: batch_size * n_operation * 2 * p * q\n        '''", "\n", "real", "=", "torch", ".", "einsum", "(", "'abij,ajk->abik'", ",", "batch", "[", ":", ",", ":", ",", "0", "]", ",", "x", "[", ":", ",", "0", "]", ")", "-", "torch", ".", "einsum", "(", "'abij,ajk->abik'", ",", "batch", "[", ":", ",", ":", ",", "1", "]", ",", "x", "[", ":", ",", "1", "]", ")", "\n", "imag", "=", "torch", ".", "einsum", "(", "'abij,ajk->abik'", ",", "batch", "[", ":", ",", ":", ",", "0", "]", ",", "x", "[", ":", ",", "1", "]", ")", "+", "torch", ".", "einsum", "(", "'abij,ajk->abik'", ",", "batch", "[", ":", ",", ":", ",", "1", "]", ",", "x", "[", ":", ",", "0", "]", ")", "\n", "return", "torch", ".", "stack", "(", "(", "real", ",", "imag", ")", ",", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_mul_2": [[99, 112], ["torch.no_grad", "torch.stack", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "batch_mul_2", "(", "self", ",", "x", ",", "batch", ")", ":", "\n", "        ", "'''\n            complex matrix batch multiplication\n            used when calculating next_states\n            x: 3 * 2 * p * q    batch: batch_size * 2 * q * r\n            output: batch_size * 3 * 2 * p * q\n        '''", "\n", "real", "=", "torch", ".", "einsum", "(", "'aij,bjk->baik'", ",", "x", "[", ":", ",", "0", "]", ",", "batch", "[", ":", ",", "0", "]", ")", "-", "torch", ".", "einsum", "(", "'aij,bjk->baik'", ",", "x", "[", ":", ",", "1", "]", ",", "batch", "[", ":", ",", "1", "]", ")", "\n", "imag", "=", "torch", ".", "einsum", "(", "'aij,bjk->baik'", ",", "x", "[", ":", ",", "1", "]", ",", "batch", "[", ":", ",", "0", "]", ")", "+", "torch", ".", "einsum", "(", "'aij,bjk->baik'", ",", "x", "[", ":", ",", "0", "]", ",", "batch", "[", ":", ",", "1", "]", ")", "\n", "return", "torch", ".", "stack", "(", "(", "real", ",", "imag", ")", ",", "dim", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.step": [[113, 116], ["torch.no_grad", "system.System.mul"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.mul"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "step", "(", "self", ",", "x", ",", "action", ")", ":", "\n", "        ", "return", "self", ".", "mul", "(", "self", ".", "U", "[", "action", "]", ",", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.scramble": [[117, 135], ["torch.no_grad", "torch.randint", "system.System.step", "torch.randint", "range", "last_action.item", "system.System.step", "scramble_seq.append", "last_action.item"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.step", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.step"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "scramble", "(", "self", ",", "length", ")", ":", "\n", "        ", "'''\n            a function used during debugging\n            low efficiency, don't use it\n        '''", "\n", "state", "=", "self", ".", "target", "\n", "action_0", "=", "torch", ".", "randint", "(", "0", ",", "3", ",", "(", ")", ",", "dtype", "=", "torch", ".", "int32", ")", "\n", "state", "=", "self", ".", "step", "(", "state", ",", "action_0", ")", "\n", "actions", "=", "torch", ".", "randint", "(", "0", ",", "2", ",", "(", "length", "-", "1", ",", ")", ")", "\n", "last_action", "=", "action_0", "\n", "scramble_seq", "=", "[", "last_action", ".", "item", "(", ")", "]", "\n", "for", "i", "in", "range", "(", "length", "-", "1", ")", ":", "\n", "            ", "new_action", "=", "self", ".", "scramble_table", "[", "last_action", ",", "actions", "[", "i", "]", "]", "\n", "state", "=", "self", ".", "step", "(", "state", ",", "new_action", ")", "\n", "last_action", "=", "new_action", "\n", "scramble_seq", ".", "append", "(", "last_action", ".", "item", "(", ")", ")", "\n", "", "return", "state", ",", "scramble_seq", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.distance": [[136, 140], ["torch.no_grad", "torch.sum"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "distance", "(", "self", ",", "a", ",", "b", ")", ":", "\n", "        ", "diff", "=", "a", "-", "b", "\n", "return", "torch", ".", "sum", "(", "diff", "*", "diff", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_distance": [[141, 151], ["torch.no_grad", "target.expand", "torch.sqrt", "torch.sum"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "batch_distance", "(", "self", ",", "target", ",", "batch", ")", ":", "\n", "        ", "'''\n            matrix distance measured with F-norm\n            target: (2, 2, 2)\n            batch: (batch_sizes, 2, 2, 2)\n        '''", "\n", "batched_target", "=", "target", ".", "expand", "(", "batch", ".", "shape", ")", "\n", "diff", "=", "batched_target", "-", "batch", "\n", "return", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "diff", "*", "diff", ",", "dim", "=", "[", "-", "1", ",", "-", "2", ",", "-", "3", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_distance_2": [[152, 165], ["torch.no_grad", "target.expand", "torch.sum", "torch.sqrt"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "batch_distance_2", "(", "self", ",", "target", ",", "batch", ")", ":", "\n", "        ", "'''\n            the quaternion distance between two SU(2) matrices\n            in SU(2), matrices differ by -1 corresponds to the same rotation\n            the last function cannot deal with this; here we use another metric\n            target: (2, 2, 2)\n            batch: (batch_sizes, 2, 2, 2)\n            equal to theta/2 when theta is small\n        '''", "\n", "batched_target", "=", "target", ".", "expand", "(", "batch", ".", "shape", ")", "\n", "inner_prod", "=", "torch", ".", "sum", "(", "batched_target", "[", "...", ",", "0", "]", "*", "batch", "[", "...", ",", "0", "]", ",", "dim", "=", "[", "-", "1", ",", "-", "2", "]", ")", "\n", "return", "torch", ".", "sqrt", "(", "1", "-", "inner_prod", "*", "inner_prod", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.randU": [[166, 191], ["torch.no_grad", "torch.cos", "torch.sin", "torch.sqrt", "torch.sqrt", "torch.stack().view", "torch.rand", "torch.rand", "torch.stack"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "randU", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "'''\n            generate random 2*2 unitary matrices\n            shape: (batch_size, 2, 2, 2)\n            U = exp(ia) * [ exp( ib)cos(phi) exp( ic)sin(phi)\n                           -exp(-ic)sin(phi) exp(-ib)cos(phi)]\n            \n        '''", "\n", "abc", "=", "2", "*", "pi", "*", "torch", ".", "rand", "(", "(", "3", ",", "batch_size", ")", ",", "device", "=", "self", ".", "device", ")", "\n", "cosa", ",", "cosb", ",", "cosc", "=", "torch", ".", "cos", "(", "abc", ")", "\n", "sina", ",", "sinb", ",", "sinc", "=", "torch", ".", "sin", "(", "abc", ")", "\n", "sinphi", "=", "torch", ".", "sqrt", "(", "torch", ".", "rand", "(", "batch_size", ",", "device", "=", "self", ".", "device", ")", ")", "\n", "cosphi", "=", "torch", ".", "sqrt", "(", "1", "-", "sinphi", "*", "sinphi", ")", "\n", "real00", "=", "cosa", "*", "cosb", "*", "cosphi", "-", "sina", "*", "sinb", "*", "cosphi", "\n", "real01", "=", "cosa", "*", "cosc", "*", "sinphi", "-", "sina", "*", "sinc", "*", "sinphi", "\n", "real10", "=", "-", "cosa", "*", "cosc", "*", "sinphi", "-", "sina", "*", "sinc", "*", "sinphi", "\n", "real11", "=", "cosa", "*", "cosb", "*", "cosphi", "+", "sina", "*", "sinb", "*", "cosphi", "\n", "imag00", "=", "cosa", "*", "sinb", "*", "cosphi", "+", "sina", "*", "cosb", "*", "cosphi", "\n", "imag01", "=", "cosa", "*", "sinc", "*", "sinphi", "+", "sina", "*", "cosc", "*", "sinphi", "\n", "imag10", "=", "cosa", "*", "sinc", "*", "sinphi", "-", "sina", "*", "cosc", "*", "sinphi", "\n", "imag11", "=", "-", "cosa", "*", "sinb", "*", "cosphi", "+", "sina", "*", "cosb", "*", "cosphi", "\n", "U", "=", "torch", ".", "stack", "(", "(", "real00", ",", "real01", ",", "real10", ",", "real11", ",", "imag00", ",", "imag01", ",", "imag10", ",", "imag11", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "batch_size", ",", "2", ",", "2", ",", "2", ")", "\n", "return", "U", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.randSU": [[192, 217], ["torch.no_grad", "torch.cos", "torch.sin", "torch.sqrt", "torch.sqrt", "torch.stack().view", "torch.rand", "torch.rand", "torch.stack"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "randSU", "(", "self", ",", "batch_size", ")", ":", "\n", "        ", "'''\n            generate random 2*2 special unitary matrices\n            shape: (batch_size, 2, 2, 2)\n            U =           [ exp( ib)cos(phi) exp( ic)sin(phi)\n                           -exp(-ic)sin(phi) exp(-ib)cos(phi)]\n            \n        '''", "\n", "bc", "=", "2", "*", "pi", "*", "torch", ".", "rand", "(", "(", "2", ",", "batch_size", ")", ",", "device", "=", "self", ".", "device", ")", "\n", "cosb", ",", "cosc", "=", "torch", ".", "cos", "(", "bc", ")", "\n", "sinb", ",", "sinc", "=", "torch", ".", "sin", "(", "bc", ")", "\n", "sinphi", "=", "torch", ".", "sqrt", "(", "torch", ".", "rand", "(", "batch_size", ",", "device", "=", "self", ".", "device", ")", ")", "\n", "cosphi", "=", "torch", ".", "sqrt", "(", "1", "-", "sinphi", "*", "sinphi", ")", "\n", "real00", "=", "cosb", "*", "cosphi", "\n", "real01", "=", "cosc", "*", "sinphi", "\n", "real10", "=", "-", "cosc", "*", "sinphi", "\n", "real11", "=", "cosb", "*", "cosphi", "\n", "imag00", "=", "sinb", "*", "cosphi", "\n", "imag01", "=", "sinc", "*", "sinphi", "\n", "imag10", "=", "sinc", "*", "sinphi", "\n", "imag11", "=", "-", "sinb", "*", "cosphi", "\n", "U", "=", "torch", ".", "stack", "(", "(", "real00", ",", "real01", ",", "real10", ",", "real11", ",", "imag00", ",", "imag01", ",", "imag10", ",", "imag11", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "batch_size", ",", "2", ",", "2", ",", "2", ")", "\n", "return", "U", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.randRotation": [[218, 242], ["torch.no_grad", "torch.randn", "torch.sin", "torch.cos", "torch.stack().view", "torch.sqrt", "torch.sum", "torch.rand", "torch.stack"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "randRotation", "(", "self", ",", "max_theta", ",", "batch_size", ")", ":", "\n", "        ", "'''\n            Rn(theta) = cos(theta/2) I - i sin(theta/2) (nx X + ny Y + nz Z)\n            axis \\hat{n} is randomly selected\n            theta is uniformly selected between [-max_theta, max_theta]\n        '''", "\n", "axis", "=", "torch", ".", "randn", "(", "3", ",", "batch_size", ",", "device", "=", "self", ".", "device", ")", "\n", "axis", "=", "axis", "/", "torch", ".", "sqrt", "(", "torch", ".", "sum", "(", "axis", "*", "axis", ",", "dim", "=", "0", ")", ")", "\n", "a", ",", "b", ",", "c", "=", "axis", "\n", "theta", "=", "max_theta", "*", "(", "torch", ".", "rand", "(", "batch_size", ",", "device", "=", "self", ".", "device", ")", "-", "0.5", ")", "\n", "sintheta", "=", "torch", ".", "sin", "(", "theta", ")", "\n", "costheta", "=", "torch", ".", "cos", "(", "theta", ")", "\n", "real00", "=", "costheta", "\n", "real01", "=", "b", "*", "sintheta", "\n", "real10", "=", "-", "b", "*", "sintheta", "\n", "real11", "=", "costheta", "\n", "imag00", "=", "-", "c", "*", "sintheta", "\n", "imag01", "=", "-", "a", "*", "sintheta", "\n", "imag10", "=", "-", "a", "*", "sintheta", "\n", "imag11", "=", "c", "*", "sintheta", "\n", "U", "=", "torch", ".", "stack", "(", "(", "real00", ",", "real01", ",", "real10", ",", "real11", ",", "imag00", ",", "imag01", ",", "imag10", ",", "imag11", ")", ",", "dim", "=", "1", ")", ".", "view", "(", "batch_size", ",", "2", ",", "2", ",", "2", ")", "\n", "return", "U", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.model.Model.__init__": [[18, 49], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.__init__"], ["def", "__init__", "(", "self", ",", "input_size", "=", "8", ",", "embedding_size", "=", "1000", ",", "hidden_size", "=", "200", ",", "output_size", "=", "1", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "input_size", ",", "embedding_size", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "embedding_size", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "embedding_size", ",", "hidden_size", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc6", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn6", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc7", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn7", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc8", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn8", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc9", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn9", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc10", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn10", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc11", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn11", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc12", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn12", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc13", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn13", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc14", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "hidden_size", ")", "\n", "self", ".", "bn14", "=", "nn", ".", "BatchNorm1d", "(", "hidden_size", ")", "\n", "self", ".", "fc15", "=", "nn", ".", "Linear", "(", "hidden_size", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.model.Model.forward": [[50, 61], ["torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.Model.fc15", "model.Model.bn1", "model.Model.bn2", "model.Model.fc1", "model.Model.fc2", "model.Model.bn4", "model.Model.bn6", "model.Model.bn8", "model.Model.bn10", "model.Model.bn12", "model.Model.bn14", "model.Model.fc4", "model.Model.fc6", "model.Model.fc8", "model.Model.fc10", "model.Model.fc12", "model.Model.fc14", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.Model.bn3", "model.Model.bn5", "model.Model.bn7", "model.Model.bn9", "model.Model.bn11", "model.Model.bn13", "model.Model.fc3", "model.Model.fc5", "model.Model.fc7", "model.Model.fc9", "model.Model.fc11", "model.Model.fc13"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "bn1", "(", "self", ".", "fc1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "bn2", "(", "self", ".", "fc2", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", "+", "self", ".", "bn4", "(", "self", ".", "fc4", "(", "F", ".", "leaky_relu", "(", "self", ".", "bn3", "(", "self", ".", "fc3", "(", "x", ")", ")", ")", ")", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", "+", "self", ".", "bn6", "(", "self", ".", "fc6", "(", "F", ".", "leaky_relu", "(", "self", ".", "bn5", "(", "self", ".", "fc5", "(", "x", ")", ")", ")", ")", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", "+", "self", ".", "bn8", "(", "self", ".", "fc8", "(", "F", ".", "leaky_relu", "(", "self", ".", "bn7", "(", "self", ".", "fc7", "(", "x", ")", ")", ")", ")", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", "+", "self", ".", "bn10", "(", "self", ".", "fc10", "(", "F", ".", "leaky_relu", "(", "self", ".", "bn9", "(", "self", ".", "fc9", "(", "x", ")", ")", ")", ")", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", "+", "self", ".", "bn12", "(", "self", ".", "fc12", "(", "F", ".", "leaky_relu", "(", "self", ".", "bn11", "(", "self", ".", "fc11", "(", "x", ")", ")", ")", ")", ")", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "x", "+", "self", ".", "bn14", "(", "self", ".", "fc14", "(", "F", ".", "leaky_relu", "(", "self", ".", "bn13", "(", "self", ".", "fc13", "(", "x", ")", ")", ")", ")", ")", ")", "\n", "x", "=", "self", ".", "fc15", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.randomStateDataset.RandomStateDataset.__init__": [[16, 31], ["dataGenerator.DataGenerator", "randomStateDataset.RandomStateDataset.generator.calc_data_full", "randomStateDataset.RandomStateDataset.generator.calc_data_rand", "randomStateDataset.RandomStateDataset.states_full[].view"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.calc_data_full", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.calc_data_rand"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "cur_length", ",", "full_dataset_length", ",", "max_length", ",", "num_samples", ",", "epsilon", ")", ":", "\n", "        ", "self", ".", "env", "=", "env", "\n", "self", ".", "cur_length", "=", "cur_length", "\n", "self", ".", "max_length", "=", "max_length", "\n", "self", ".", "num_samples", "=", "num_samples", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "full_dataset_length", "=", "full_dataset_length", "\n", "\n", "self", ".", "generator", "=", "DataGenerator", "(", "env", ",", "epsilon", ")", "\n", "self", ".", "states_full", ",", "self", ".", "actions", ",", "self", ".", "next_states_full", ",", "self", ".", "masks_full", "=", "self", ".", "generator", ".", "calc_data_full", "(", "self", ".", "full_dataset_length", ")", "\n", "n", "=", "self", ".", "cur_length", "-", "self", ".", "full_dataset_length", "\n", "if", "n", ">", "0", ":", "\n", "            ", "self", ".", "states_rand", ",", "self", ".", "next_states_rand", ",", "self", ".", "masks_rand", "=", "self", ".", "generator", ".", "calc_data_rand", "(", "self", ".", "states_full", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "2", ",", "2", ",", "2", ")", ",", "self", ".", "actions", ",", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.randomStateDataset.RandomStateDataset.reinitialize": [[32, 39], ["randomStateDataset.RandomStateDataset.generator.calc_data_full", "randomStateDataset.RandomStateDataset.generator.calc_data_rand", "randomStateDataset.RandomStateDataset.states_full[].view"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.calc_data_full", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.calc_data_rand"], ["", "", "def", "reinitialize", "(", "self", ")", ":", "\n", "        ", "self", ".", "states_full", ",", "self", ".", "actions", ",", "self", ".", "next_states_full", ",", "self", ".", "masks_full", "=", "self", ".", "generator", ".", "calc_data_full", "(", "self", ".", "full_dataset_length", ")", "\n", "n", "=", "self", ".", "cur_length", "-", "self", ".", "full_dataset_length", "\n", "if", "n", ">", "0", ":", "\n", "            ", "self", ".", "states_rand", ",", "self", ".", "next_states_rand", ",", "self", ".", "masks_rand", "=", "self", ".", "generator", ".", "calc_data_rand", "(", "self", ".", "states_full", "[", "-", "1", "]", ".", "view", "(", "-", "1", ",", "2", ",", "2", ",", "2", ")", ",", "self", ".", "actions", ",", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.randomStateDataset.RandomStateDataset.__len__": [[40, 42], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.randomStateDataset.RandomStateDataset.__getitem__": [[43, 57], ["torch.randint", "torch.randint", "torch.randint", "len", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "_", ")", ":", "\n", "        ", "length", "=", "torch", ".", "randint", "(", "0", ",", "self", ".", "cur_length", ",", "(", ")", ")", "\n", "if", "length", "<", "self", ".", "full_dataset_length", ":", "\n", "            ", "idx", "=", "torch", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "states_full", "[", "length", "]", ")", ",", "(", ")", ")", "\n", "state", "=", "self", ".", "states_full", "[", "length", "]", "[", "idx", "]", "\n", "next_states", "=", "self", ".", "next_states_full", "[", "length", "]", "[", "idx", "]", "\n", "mask", "=", "self", ".", "masks_full", "[", "length", "]", "[", "idx", "]", "\n", "", "else", ":", "\n", "            ", "length", "=", "length", "-", "self", ".", "full_dataset_length", "\n", "idx", "=", "torch", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "states_rand", "[", "length", "]", ")", ",", "(", ")", ")", "\n", "state", "=", "self", ".", "states_rand", "[", "length", "]", "[", "idx", "]", "\n", "next_states", "=", "self", ".", "next_states_rand", "[", "length", "]", "[", "idx", "]", "\n", "mask", "=", "self", ".", "masks_rand", "[", "length", "]", "[", "idx", "]", "\n", "", "return", "{", "'state'", ":", "state", ",", "'next_states'", ":", "next_states", ",", "'mask'", ":", "mask", "}", "", "", "", ""]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.__init__": [[18, 27], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "env", ",", "epsilon", ")", ":", "\n", "        ", "self", ".", "env", "=", "env", "\n", "self", ".", "U", "=", "env", ".", "U", "\n", "self", ".", "scramble_table", "=", "self", ".", "env", ".", "scramble_table", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "init_batch", "=", "2", "\n", "# using the quaternion distance measure, distance approximates theta/2", "\n", "# init_theta = 0.01 corresponds to a maximum initial distance of 0.005", "\n", "self", ".", "init_theta", "=", "epsilon", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.calc_data_full": [[29, 59], ["torch.no_grad", "dataGenerator.DataGenerator.env.randRotation", "dataGenerator.DataGenerator.env.einsum().view", "torch.arange().expand().reshape", "dataGenerator.DataGenerator.env.einsum", "dataGenerator.DataGenerator.env.batch_distance_2", "states_list.append", "next_states_list.append", "masks_list.append", "range", "dataGenerator.DataGenerator.view", "dataGenerator.DataGenerator.view", "masks.float().unsqueeze", "dataGenerator.DataGenerator.env.einsum().view", "next_indices.view", "dataGenerator.DataGenerator.env.einsum", "dataGenerator.DataGenerator.env.batch_distance_2", "states_list.append", "next_states_list.append", "masks_list.append", "dataGenerator.DataGenerator.env.einsum", "torch.arange().expand", "dataGenerator.DataGenerator.view", "dataGenerator.DataGenerator.view", "masks.float().unsqueeze", "masks.float", "dataGenerator.DataGenerator.env.einsum", "torch.arange", "masks.float"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.randRotation", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_distance_2", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_distance_2", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "calc_data_full", "(", "self", ",", "n", ")", ":", "\n", "        ", "states_list", "=", "[", "]", "\n", "next_states_list", "=", "[", "]", "\n", "masks_list", "=", "[", "]", "\n", "\n", "states", "=", "self", ".", "env", ".", "randRotation", "(", "self", ".", "init_theta", ",", "self", ".", "init_batch", ")", "\n", "states", "=", "self", ".", "env", ".", "einsum", "(", "'aij, bjk->baik'", ",", "self", ".", "U", ",", "states", ")", ".", "view", "(", "-", "1", ",", "2", ",", "2", ",", "2", ")", "\n", "actions", "=", "torch", ".", "arange", "(", "self", ".", "env", ".", "n_actions", ",", "device", "=", "device", ")", ".", "expand", "(", "self", ".", "init_batch", ",", "self", ".", "env", ".", "n_actions", ")", ".", "reshape", "(", "-", "1", ")", "\n", "next_states", "=", "self", ".", "env", ".", "einsum", "(", "'aij, bjk->baik'", ",", "self", ".", "U", ",", "states", ")", "\n", "distances", "=", "self", ".", "env", ".", "batch_distance_2", "(", "self", ".", "env", ".", "target", ",", "next_states", ")", "\n", "masks", "=", "distances", ">", "self", ".", "epsilon", "\n", "\n", "states_list", ".", "append", "(", "states", ".", "view", "(", "-", "1", ",", "self", ".", "env", ".", "state_size", ")", ")", "\n", "# actions_list.append(actions)", "\n", "next_states_list", ".", "append", "(", "next_states", ".", "view", "(", "-", "1", ",", "self", ".", "env", ".", "n_actions", ",", "self", ".", "env", ".", "state_size", ")", ")", "\n", "masks_list", ".", "append", "(", "masks", ".", "float", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "n", ")", ":", "\n", "            ", "next_indices", "=", "self", ".", "scramble_table", "[", "actions", "]", "\n", "states", "=", "self", ".", "env", ".", "einsum", "(", "'abij, ajk->abik'", ",", "self", ".", "U", "[", "next_indices", "]", ",", "states", ")", ".", "view", "(", "-", "1", ",", "2", ",", "2", ",", "2", ")", "\n", "actions", "=", "next_indices", ".", "view", "(", "-", "1", ")", "\n", "next_states", "=", "self", ".", "env", ".", "einsum", "(", "'aij, bjk->baik'", ",", "self", ".", "U", ",", "states", ")", "\n", "distances", "=", "self", ".", "env", ".", "batch_distance_2", "(", "self", ".", "env", ".", "target", ",", "next_states", ")", "\n", "masks", "=", "distances", ">", "self", ".", "epsilon", "\n", "states_list", ".", "append", "(", "states", ".", "view", "(", "-", "1", ",", "self", ".", "env", ".", "state_size", ")", ")", "\n", "next_states_list", ".", "append", "(", "next_states", ".", "view", "(", "-", "1", ",", "self", ".", "env", ".", "n_actions", ",", "self", ".", "env", ".", "state_size", ")", ")", "\n", "masks_list", ".", "append", "(", "masks", ".", "float", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ")", "\n", "", "return", "states_list", ",", "actions", ",", "next_states_list", ",", "masks_list", "\n", "\n"]], "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.dataGenerator.DataGenerator.calc_data_rand": [[60, 78], ["torch.no_grad", "range", "torch.gather", "dataGenerator.DataGenerator.env.einsum().view", "torch.gather.view", "dataGenerator.DataGenerator.env.einsum", "dataGenerator.DataGenerator.env.batch_distance_2", "states_list.append", "next_states_list.append", "masks_list.append", "torch.randint", "dataGenerator.DataGenerator.view", "dataGenerator.DataGenerator.view", "masks.float().unsqueeze", "dataGenerator.DataGenerator.env.einsum", "len", "masks.float"], "methods", ["home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.batch_distance_2", "home.repos.pwc.inspect_result.yuanhangzhang98_ml_quantum_compiling.None.system.System.einsum"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "calc_data_rand", "(", "self", ",", "states", ",", "actions", ",", "n", ")", ":", "\n", "        ", "states_list", "=", "[", "]", "\n", "# actions_list = []", "\n", "next_states_list", "=", "[", "]", "\n", "masks_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "            ", "next_indices", "=", "torch", ".", "gather", "(", "self", ".", "scramble_table", "[", "actions", "]", ",", "1", ",", "torch", ".", "randint", "(", "0", ",", "self", ".", "env", ".", "n_actions", "-", "1", ",", "(", "len", "(", "actions", ")", ",", "1", ")", ",", "device", "=", "device", ")", ")", "\n", "states", "=", "self", ".", "env", ".", "einsum", "(", "'abij, ajk->abik'", ",", "self", ".", "U", "[", "next_indices", "]", ",", "states", ")", ".", "view", "(", "-", "1", ",", "2", ",", "2", ",", "2", ")", "\n", "actions", "=", "next_indices", ".", "view", "(", "-", "1", ")", "\n", "next_states", "=", "self", ".", "env", ".", "einsum", "(", "'aij, bjk->baik'", ",", "self", ".", "U", ",", "states", ")", "\n", "distances", "=", "self", ".", "env", ".", "batch_distance_2", "(", "self", ".", "env", ".", "target", ",", "next_states", ")", "\n", "masks", "=", "distances", ">", "self", ".", "epsilon", "\n", "states_list", ".", "append", "(", "states", ".", "view", "(", "-", "1", ",", "self", ".", "env", ".", "state_size", ")", ")", "\n", "next_states_list", ".", "append", "(", "next_states", ".", "view", "(", "-", "1", ",", "self", ".", "env", ".", "n_actions", ",", "self", ".", "env", ".", "state_size", ")", ")", "\n", "masks_list", ".", "append", "(", "masks", ".", "float", "(", ")", ".", "unsqueeze", "(", "-", "1", ")", ")", "\n", "", "return", "states_list", ",", "next_states_list", ",", "masks_list", "\n", "", "", ""]]}