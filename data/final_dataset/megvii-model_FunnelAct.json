{"home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.inference.main": [[22, 69], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "cv2.imread", "megengine.Compose", "megengine.trace", "inference.main.infer_func"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"-a\"", ",", "\"--arch\"", ",", "default", "=", "\"resnet50_frelu\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-m\"", ",", "\"--model\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-i\"", ",", "\"--image\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "model", "=", "getattr", "(", "M", ",", "args", ".", "arch", ")", "(", "pretrained", "=", "(", "args", ".", "model", "is", "None", ")", ")", "\n", "if", "args", ".", "model", ":", "\n", "        ", "state_dict", "=", "mge", ".", "load", "(", "args", ".", "model", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n", "", "if", "args", ".", "image", "is", "None", ":", "\n", "        ", "path", "=", "\"../../../assets/cat.jpg\"", "# please find the files in https://github.com/MegEngine/Models/tree/master/official/assets", "\n", "", "else", ":", "\n", "        ", "path", "=", "args", ".", "image", "\n", "", "image", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n", "transform", "=", "T", ".", "Compose", "(", "\n", "[", "\n", "T", ".", "Resize", "(", "256", ")", ",", "\n", "T", ".", "CenterCrop", "(", "224", ")", ",", "\n", "T", ".", "ToMode", "(", "\"CHW\"", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "@", "jit", ".", "trace", "(", "symbolic", "=", "True", ")", "\n", "def", "infer_func", "(", "processed_img", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "logits", "=", "model", "(", "processed_img", ")", "\n", "probs", "=", "F", ".", "softmax", "(", "logits", ")", "\n", "return", "probs", "\n", "\n", "", "processed_img", "=", "transform", ".", "apply", "(", "image", ")", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "probs", "=", "infer_func", "(", "processed_img", ")", "\n", "\n", "top_probs", ",", "classes", "=", "F", ".", "top_k", "(", "probs", ",", "k", "=", "5", ",", "descending", "=", "True", ")", "\n", "\n", "with", "open", "(", "\"../../../assets/imagenet_class_info.json\"", ")", "as", "fp", ":", "# please find the files in https://github.com/MegEngine/Models/tree/master/official/assets", "\n", "        ", "imagenet_class_index", "=", "json", ".", "load", "(", "fp", ")", "\n", "\n", "", "for", "rank", ",", "(", "prob", ",", "classid", ")", "in", "enumerate", "(", "\n", "zip", "(", "top_probs", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ",", "classes", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", ")", ":", "\n", "        ", "print", "(", "\n", "\"{}: class = {:20s} with probability = {:4.1f} %\"", ".", "format", "(", "\n", "rank", ",", "imagenet_class_index", "[", "str", "(", "classid", ")", "]", "[", "1", "]", ",", "100", "*", "prob", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.train.AverageMeter.__init__": [[311, 315], ["train.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "\":.3f\"", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.train.AverageMeter.reset": [[316, 321], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.train.AverageMeter.update": [[322, 327], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.train.AverageMeter.__str__": [[328, 331], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "\"{name} {val\"", "+", "self", ".", "fmt", "+", "\"} ({avg\"", "+", "self", ".", "fmt", "+", "\"})\"", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.train.main": [[54, 94], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "megengine.set_log_file", "os.path.exists", "os.makedirs", "os.path.join", "megengine.get_device_count", "multiprocessing.set_start_method", "range", "train.worker", "multiprocessing.Process", "mp.Process.start", "processes.append", "mp.Process.join"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.worker"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"-a\"", ",", "\"--arch\"", ",", "default", "=", "\"resnet50_frelu\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-d\"", ",", "\"--data\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-s\"", ",", "\"--save\"", ",", "default", "=", "\"./models\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-m\"", ",", "\"--model\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"-b\"", ",", "\"--batch-size\"", ",", "default", "=", "32", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--learning-rate\"", ",", "default", "=", "0.0125", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "\"--momentum\"", ",", "default", "=", "0.9", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight-decay\"", ",", "default", "=", "1e-4", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "\"--steps\"", ",", "default", "=", "300000", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"-n\"", ",", "\"--ngpus\"", ",", "default", "=", "None", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"-w\"", ",", "\"--workers\"", ",", "default", "=", "4", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--report-freq\"", ",", "default", "=", "50", ",", "type", "=", "int", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "save_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "args", ".", "arch", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "mge", ".", "set_log_file", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"log.txt\"", ")", ")", "\n", "\n", "world_size", "=", "mge", ".", "get_device_count", "(", "\"gpu\"", ")", "if", "args", ".", "ngpus", "is", "None", "else", "args", ".", "ngpus", "\n", "\n", "if", "world_size", ">", "1", ":", "\n", "# scale learning rate by number of gpus", "\n", "        ", "args", ".", "learning_rate", "*=", "world_size", "\n", "# start distributed training, dispatch sub-processes", "\n", "mp", ".", "set_start_method", "(", "\"spawn\"", ")", "\n", "processes", "=", "[", "]", "\n", "for", "rank", "in", "range", "(", "world_size", ")", ":", "\n", "            ", "p", "=", "mp", ".", "Process", "(", "target", "=", "worker", ",", "args", "=", "(", "rank", ",", "world_size", ",", "args", ")", ")", "\n", "p", ".", "start", "(", ")", "\n", "processes", ".", "append", "(", "p", ")", "\n", "\n", "", "for", "p", "in", "processes", ":", "\n", "            ", "p", ".", "join", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "worker", "(", "0", ",", "1", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.train.get_parameters": [[96, 114], ["model.named_parameters", "len", "dict", "dict", "group_weight_decay.append", "group_no_weight_decay.append", "list", "len", "len", "pname.find", "len", "model.parameters"], "function", ["None"], ["", "", "def", "get_parameters", "(", "model", ")", ":", "\n", "    ", "group_no_weight_decay", "=", "[", "]", "\n", "group_weight_decay", "=", "[", "]", "\n", "for", "pname", ",", "p", "in", "model", ".", "named_parameters", "(", "requires_grad", "=", "True", ")", ":", "\n", "        ", "if", "pname", ".", "find", "(", "\"weight\"", ")", ">=", "0", "and", "len", "(", "p", ".", "shape", ")", ">", "1", ":", "\n", "# print(\"include \", pname, p.shape)", "\n", "            ", "group_weight_decay", ".", "append", "(", "p", ")", "\n", "", "else", ":", "\n", "# print(\"not include \", pname, p.shape)", "\n", "            ", "group_no_weight_decay", ".", "append", "(", "p", ")", "\n", "", "", "assert", "len", "(", "list", "(", "model", ".", "parameters", "(", ")", ")", ")", "==", "len", "(", "group_weight_decay", ")", "+", "len", "(", "\n", "group_no_weight_decay", "\n", ")", "\n", "groups", "=", "[", "\n", "dict", "(", "params", "=", "group_weight_decay", ")", ",", "\n", "dict", "(", "params", "=", "group_no_weight_decay", ",", "weight_decay", "=", "0.0", ")", ",", "\n", "]", "\n", "return", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.train.worker": [[116, 272], ["megengine.set_log_file", "os.path.join", "megengine.SGD", "megengine.trace", "megengine.trace", "logger.info", "megengine.dataset.ImageNet", "megengine.Infinite", "megengine.DataLoader", "megengine.dataset.ImageNet", "megengine.SequentialSampler", "megengine.DataLoader", "train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "time.time", "range", "megengine.save", "train.infer", "logger.info", "os.path.join", "logger.info", "megengine.init_process_group", "getattr", "logger.info", "model.load_state_dict", "int", "train.get_parameters", "model.train", "model", "megengine.cross_entropy_with_softmax", "megengine.accuracy", "optim.SGD.backward", "megengine.is_distributed", "model.eval", "model", "megengine.cross_entropy_with_softmax", "megengine.accuracy", "megengine.is_distributed", "megengine.RandomSampler", "next", "image.astype.astype", "label.astype.astype", "optim.SGD.zero_grad", "train.worker.train_func"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.infer", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.get_parameters"], ["", "def", "worker", "(", "rank", ",", "world_size", ",", "args", ")", ":", "\n", "# pylint: disable=too-many-statements", "\n", "    ", "mge", ".", "set_log_file", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "args", ".", "arch", ",", "\"log.txt\"", ")", ")", "\n", "\n", "if", "world_size", ">", "1", ":", "\n", "# Initialize distributed process group", "\n", "        ", "logger", ".", "info", "(", "\"init distributed process group {} / {}\"", ".", "format", "(", "rank", ",", "world_size", ")", ")", "\n", "dist", ".", "init_process_group", "(", "\n", "master_ip", "=", "\"localhost\"", ",", "\n", "master_port", "=", "23456", ",", "\n", "world_size", "=", "world_size", ",", "\n", "rank", "=", "rank", ",", "\n", "dev", "=", "rank", ",", "\n", ")", "\n", "\n", "", "save_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "args", ".", "arch", ")", "\n", "\n", "model", "=", "getattr", "(", "M", ",", "args", ".", "arch", ")", "(", ")", "\n", "step_start", "=", "0", "\n", "if", "args", ".", "model", ":", "\n", "        ", "logger", ".", "info", "(", "\"load weights from %s\"", ",", "args", ".", "model", ")", "\n", "model", ".", "load_state_dict", "(", "mge", ".", "load", "(", "args", ".", "model", ")", ")", "\n", "step_start", "=", "int", "(", "args", ".", "model", ".", "split", "(", "\"-\"", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", ")", "\n", "\n", "", "optimizer", "=", "optim", ".", "SGD", "(", "\n", "get_parameters", "(", "model", ")", ",", "\n", "lr", "=", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ",", "\n", ")", "\n", "\n", "# Define train and valid graph", "\n", "@", "jit", ".", "trace", "(", "symbolic", "=", "True", ")", "\n", "def", "train_func", "(", "image", ",", "label", ")", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "logits", "=", "model", "(", "image", ")", "\n", "loss", "=", "F", ".", "cross_entropy_with_softmax", "(", "logits", ",", "label", ",", "label_smooth", "=", "0.", ")", "\n", "acc1", ",", "acc5", "=", "F", ".", "accuracy", "(", "logits", ",", "label", ",", "(", "1", ",", "5", ")", ")", "\n", "optimizer", ".", "backward", "(", "loss", ")", "# compute gradients", "\n", "if", "dist", ".", "is_distributed", "(", ")", ":", "# all_reduce_mean", "\n", "            ", "loss", "=", "dist", ".", "all_reduce_sum", "(", "loss", ",", "\"train_loss\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc1", "=", "dist", ".", "all_reduce_sum", "(", "acc1", ",", "\"train_acc1\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc5", "=", "dist", ".", "all_reduce_sum", "(", "acc5", ",", "\"train_acc5\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "", "return", "loss", ",", "acc1", ",", "acc5", "\n", "\n", "", "@", "jit", ".", "trace", "(", "symbolic", "=", "True", ")", "\n", "def", "valid_func", "(", "image", ",", "label", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "logits", "=", "model", "(", "image", ")", "\n", "loss", "=", "F", ".", "cross_entropy_with_softmax", "(", "logits", ",", "label", ",", "label_smooth", "=", "0.", ")", "\n", "acc1", ",", "acc5", "=", "F", ".", "accuracy", "(", "logits", ",", "label", ",", "(", "1", ",", "5", ")", ")", "\n", "if", "dist", ".", "is_distributed", "(", ")", ":", "# all_reduce_mean", "\n", "            ", "loss", "=", "dist", ".", "all_reduce_sum", "(", "loss", ",", "\"valid_loss\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc1", "=", "dist", ".", "all_reduce_sum", "(", "acc1", ",", "\"valid_acc1\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc5", "=", "dist", ".", "all_reduce_sum", "(", "acc5", ",", "\"valid_acc5\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "", "return", "loss", ",", "acc1", ",", "acc5", "\n", "\n", "# Build train and valid datasets", "\n", "", "logger", ".", "info", "(", "\"preparing dataset..\"", ")", "\n", "train_dataset", "=", "data", ".", "dataset", ".", "ImageNet", "(", "args", ".", "data", ",", "train", "=", "True", ")", "\n", "train_sampler", "=", "data", ".", "Infinite", "(", "data", ".", "RandomSampler", "(", "\n", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "drop_last", "=", "True", "\n", ")", ")", "\n", "train_queue", "=", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "sampler", "=", "train_sampler", ",", "\n", "transform", "=", "T", ".", "Compose", "(", "\n", "[", "\n", "T", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "T", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "T", ".", "ColorJitter", "(", "brightness", "=", "0.4", ",", "contrast", "=", "0.4", ",", "saturation", "=", "0.4", ")", ",", "\n", "T", ".", "ToMode", "(", "\"CHW\"", ")", ",", "\n", "]", "\n", ")", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "\n", ")", "\n", "\n", "valid_dataset", "=", "data", ".", "dataset", ".", "ImageNet", "(", "args", ".", "data", ",", "train", "=", "False", ")", "\n", "valid_sampler", "=", "data", ".", "SequentialSampler", "(", "\n", "valid_dataset", ",", "batch_size", "=", "100", ",", "drop_last", "=", "False", "\n", ")", "\n", "valid_queue", "=", "data", ".", "DataLoader", "(", "\n", "valid_dataset", ",", "\n", "sampler", "=", "valid_sampler", ",", "\n", "transform", "=", "T", ".", "Compose", "(", "\n", "[", "\n", "T", ".", "Resize", "(", "256", ")", ",", "\n", "T", ".", "CenterCrop", "(", "224", ")", ",", "\n", "T", ".", "ToMode", "(", "\"CHW\"", ")", ",", "\n", "]", "\n", ")", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "\n", ")", "\n", "\n", "# Start training", "\n", "objs", "=", "AverageMeter", "(", "\"Loss\"", ")", "\n", "top1", "=", "AverageMeter", "(", "\"Acc@1\"", ")", "\n", "top5", "=", "AverageMeter", "(", "\"Acc@5\"", ")", "\n", "total_time", "=", "AverageMeter", "(", "\"Time\"", ")", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "step", "in", "range", "(", "step_start", ",", "args", ".", "steps", "+", "1", ")", ":", "\n", "# Linear learning rate decay", "\n", "        ", "decay", "=", "1.0", "\n", "decay", "=", "1", "-", "float", "(", "step", ")", "/", "args", ".", "steps", "if", "step", "<", "args", ".", "steps", "else", "0", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "\"lr\"", "]", "=", "args", ".", "learning_rate", "*", "decay", "\n", "\n", "", "image", ",", "label", "=", "next", "(", "train_queue", ")", "\n", "time_data", "=", "time", ".", "time", "(", ")", "-", "t", "\n", "image", "=", "image", ".", "astype", "(", "\"float32\"", ")", "\n", "label", "=", "label", ".", "astype", "(", "\"int32\"", ")", "\n", "\n", "n", "=", "image", ".", "shape", "[", "0", "]", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ",", "acc1", ",", "acc5", "=", "train_func", "(", "image", ",", "label", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "top1", ".", "update", "(", "100", "*", "acc1", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top5", ".", "update", "(", "100", "*", "acc5", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "objs", ".", "update", "(", "loss", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "total_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "t", ")", "\n", "time_iter", "=", "time", ".", "time", "(", ")", "-", "t", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", "and", "rank", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"TRAIN Iter %06d: lr = %f,\\tloss = %f,\\twc_loss = 1,\\tTop-1 err = %f,\\tTop-5 err = %f,\\tdata_time = %f,\\ttrain_time = %f,\\tremain_hours=%f\"", ",", "\n", "step", ",", "\n", "args", ".", "learning_rate", "*", "decay", ",", "\n", "float", "(", "objs", ".", "__str__", "(", ")", ".", "split", "(", ")", "[", "1", "]", ")", ",", "\n", "1", "-", "float", "(", "top1", ".", "__str__", "(", ")", ".", "split", "(", ")", "[", "1", "]", ")", "/", "100", ",", "\n", "1", "-", "float", "(", "top5", ".", "__str__", "(", ")", ".", "split", "(", ")", "[", "1", "]", ")", "/", "100", ",", "\n", "time_data", ",", "\n", "time_iter", "-", "time_data", ",", "\n", "time_iter", "*", "(", "args", ".", "steps", "-", "step", ")", "/", "3600", ",", "\n", ")", "\n", "objs", ".", "reset", "(", ")", "\n", "top1", ".", "reset", "(", ")", "\n", "top5", ".", "reset", "(", ")", "\n", "total_time", ".", "reset", "(", ")", "\n", "", "if", "step", "%", "10000", "==", "0", "and", "rank", "==", "0", "and", "step", "!=", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\"SAVING %06d\"", ",", "step", ")", "\n", "mge", ".", "save", "(", "\n", "model", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"checkpoint-{:06d}.pkl\"", ".", "format", "(", "step", ")", ")", ",", "\n", ")", "\n", "", "if", "step", "%", "50000", "==", "0", "and", "step", "!=", "0", ":", "\n", "            ", "_", ",", "valid_acc", ",", "valid_acc5", "=", "infer", "(", "valid_func", ",", "valid_queue", ",", "args", ")", "\n", "logger", ".", "info", "(", "\"TEST Iter %06d: loss = %f,\\tTop-1 err = %f,\\tTop-5 err = %f\"", ",", "step", ",", "_", ",", "1", "-", "valid_acc", "/", "100", ",", "1", "-", "valid_acc5", "/", "100", ")", "\n", "\n", "", "", "mge", ".", "save", "(", "\n", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"checkpoint-{:06d}.pkl\"", ".", "format", "(", "step", ")", ")", "\n", ")", "\n", "_", ",", "valid_acc", ",", "valid_acc5", "=", "infer", "(", "valid_func", ",", "valid_queue", ",", "args", ")", "\n", "logger", ".", "info", "(", "\"TEST Iter %06d: loss=%f,\\tTop-1 err = %f,\\tTop-5 err = %f\"", ",", "step", ",", "_", ",", "1", "-", "valid_acc", "/", "100", ",", "1", "-", "valid_acc5", "/", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.train.infer": [[274, 305], ["train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "time.time", "enumerate", "image.astype.astype", "label.astype.astype", "model", "train.AverageMeter.update", "train.AverageMeter.update", "train.AverageMeter.update", "train.AverageMeter.update", "time.time", "logger.info", "loss.numpy", "time.time", "megengine.get_rank", "acc1.numpy", "acc5.numpy"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update"], ["", "def", "infer", "(", "model", ",", "data_queue", ",", "args", ")", ":", "\n", "    ", "objs", "=", "AverageMeter", "(", "\"Loss\"", ")", "\n", "top1", "=", "AverageMeter", "(", "\"Acc@1\"", ")", "\n", "top5", "=", "AverageMeter", "(", "\"Acc@5\"", ")", "\n", "total_time", "=", "AverageMeter", "(", "\"Time\"", ")", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "step", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "data_queue", ")", ":", "\n", "        ", "n", "=", "image", ".", "shape", "[", "0", "]", "\n", "image", "=", "image", ".", "astype", "(", "\"float32\"", ")", "# convert np.uint8 to float32", "\n", "label", "=", "label", ".", "astype", "(", "\"int32\"", ")", "\n", "\n", "loss", ",", "acc1", ",", "acc5", "=", "model", "(", "image", ",", "label", ")", "\n", "\n", "objs", ".", "update", "(", "loss", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top1", ".", "update", "(", "100", "*", "acc1", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top5", ".", "update", "(", "100", "*", "acc5", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "total_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "t", ")", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", "and", "dist", ".", "get_rank", "(", ")", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Step %d, %s %s %s %s\"", ",", "\n", "step", ",", "\n", "objs", ",", "\n", "top1", ",", "\n", "top5", ",", "\n", "total_time", ",", "\n", ")", "\n", "\n", "", "", "return", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.BasicBlock.__init__": [[56, 72], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "ValueError", "NotImplementedError", "megengine.Identity", "megengine.Identity", "megengine.Identity", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__"], ["def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "channels", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm", "=", "M", ".", "BatchNorm2d", ",", "\n", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "groups", "!=", "1", "or", "base_width", "!=", "64", ":", "\n", "            ", "raise", "ValueError", "(", "\"BasicBlock only supports groups=1 and base_width=64\"", ")", "\n", "", "if", "dilation", ">", "1", ":", "\n", "            ", "raise", "NotImplementedError", "(", "\"Dilation > 1 not supported in BasicBlock\"", ")", "\n", "", "self", ".", "conv1", "=", "M", ".", "Conv2d", "(", "in_channels", ",", "channels", ",", "3", ",", "stride", ",", "padding", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "channels", ")", "\n", "self", ".", "conv2", "=", "M", ".", "Conv2d", "(", "channels", ",", "channels", ",", "3", ",", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "norm", "(", "channels", ")", "\n", "self", ".", "downsample", "=", "(", "\n", "M", ".", "Identity", "(", ")", "\n", "if", "in_channels", "==", "channels", "and", "stride", "==", "1", "\n", "else", "M", ".", "Sequential", "(", "M", ".", "Conv2d", "(", "in_channels", ",", "channels", ",", "1", ",", "stride", ",", "bias", "=", "False", ")", ",", "norm", "(", "channels", ")", ",", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.BasicBlock.forward": [[74, 85], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "megengine.relu", "megengine.relu", "megengine.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.downsample", "megengine.relu", "megengine.relu", "megengine.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "identity", "=", "self", ".", "downsample", "(", "identity", ")", "\n", "x", "+=", "identity", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.Bottleneck_FReLU_Partial.__init__": [[97, 115], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "frelu.FReLU", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "int", "megengine.Identity", "megengine.Identity", "megengine.Identity", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__"], ["def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "channels", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm", "=", "M", ".", "BatchNorm2d", ",", "\n", ")", ":", "\n", "        ", "super", "(", "Bottleneck_FReLU_Partial", ",", "self", ")", ".", "__init__", "(", ")", "\n", "width", "=", "int", "(", "channels", "*", "(", "base_width", "/", "64.0", ")", ")", "*", "groups", "\n", "self", ".", "conv1", "=", "M", ".", "Conv2d", "(", "in_channels", ",", "width", ",", "1", ",", "stride", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "width", ")", "\n", "self", ".", "conv2", "=", "M", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "1", ",", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "dilation", "=", "dilation", ",", "bias", "=", "True", ",", ")", "\n", "self", ".", "bn2", "=", "norm", "(", "width", ")", "\n", "self", ".", "frelu", "=", "FReLU", "(", "width", ")", "\n", "self", ".", "conv3", "=", "M", ".", "Conv2d", "(", "width", ",", "channels", "*", "self", ".", "expansion", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn3", "=", "norm", "(", "channels", "*", "self", ".", "expansion", ")", "\n", "self", ".", "downsample", "=", "(", "\n", "M", ".", "Identity", "(", ")", "\n", "if", "in_channels", "==", "channels", "*", "self", ".", "expansion", "and", "stride", "==", "1", "\n", "else", "M", ".", "Sequential", "(", "\n", "M", ".", "Conv2d", "(", "in_channels", ",", "channels", "*", "self", ".", "expansion", ",", "1", ",", "stride", ",", "bias", "=", "True", ")", ",", "\n", "norm", "(", "channels", "*", "self", ".", "expansion", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.Bottleneck_FReLU_Partial.forward": [[118, 138], ["resnet.Bottleneck_FReLU_Partial.conv1", "resnet.Bottleneck_FReLU_Partial.bn1", "megengine.relu", "megengine.relu", "megengine.relu", "resnet.Bottleneck_FReLU_Partial.conv2", "resnet.Bottleneck_FReLU_Partial.bn2", "resnet.Bottleneck_FReLU_Partial.frelu", "resnet.Bottleneck_FReLU_Partial.conv3", "resnet.Bottleneck_FReLU_Partial.bn3", "resnet.Bottleneck_FReLU_Partial.downsample", "megengine.relu", "megengine.relu", "megengine.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "frelu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "\n", "\n", "identity", "=", "self", ".", "downsample", "(", "identity", ")", "\n", "\n", "x", "+=", "identity", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.Bottleneck_FReLU.__init__": [[142, 162], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "frelu.FReLU", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "frelu.FReLU", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "frelu.FReLU", "int", "megengine.Identity", "megengine.Identity", "megengine.Identity", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__"], ["def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "channels", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm", "=", "M", ".", "BatchNorm2d", ",", "\n", ")", ":", "\n", "        ", "super", "(", "Bottleneck_FReLU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "width", "=", "int", "(", "channels", "*", "(", "base_width", "/", "64.0", ")", ")", "*", "groups", "\n", "self", ".", "conv1", "=", "M", ".", "Conv2d", "(", "in_channels", ",", "width", ",", "1", ",", "stride", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "width", ")", "\n", "self", ".", "frelu1", "=", "FReLU", "(", "width", ")", "\n", "self", ".", "conv2", "=", "M", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "1", ",", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "dilation", "=", "dilation", ",", "bias", "=", "True", ",", ")", "\n", "self", ".", "bn2", "=", "norm", "(", "width", ")", "\n", "self", ".", "frelu2", "=", "FReLU", "(", "width", ")", "\n", "self", ".", "conv3", "=", "M", ".", "Conv2d", "(", "width", ",", "channels", "*", "self", ".", "expansion", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn3", "=", "norm", "(", "channels", "*", "self", ".", "expansion", ")", "\n", "self", ".", "frelu3", "=", "FReLU", "(", "channels", "*", "self", ".", "expansion", ")", "\n", "self", ".", "downsample", "=", "(", "\n", "M", ".", "Identity", "(", ")", "\n", "if", "in_channels", "==", "channels", "*", "self", ".", "expansion", "and", "stride", "==", "1", "\n", "else", "M", ".", "Sequential", "(", "\n", "M", ".", "Conv2d", "(", "in_channels", ",", "channels", "*", "self", ".", "expansion", ",", "1", ",", "stride", ",", "bias", "=", "True", ")", ",", "\n", "norm", "(", "channels", "*", "self", ".", "expansion", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.Bottleneck_FReLU.forward": [[165, 185], ["resnet.Bottleneck_FReLU.conv1", "resnet.Bottleneck_FReLU.bn1", "resnet.Bottleneck_FReLU.frelu1", "resnet.Bottleneck_FReLU.conv2", "resnet.Bottleneck_FReLU.bn2", "resnet.Bottleneck_FReLU.frelu2", "resnet.Bottleneck_FReLU.conv3", "resnet.Bottleneck_FReLU.bn3", "resnet.Bottleneck_FReLU.downsample", "resnet.Bottleneck_FReLU.frelu3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "frelu1", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "self", ".", "frelu2", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "\n", "\n", "identity", "=", "self", ".", "downsample", "(", "identity", ")", "\n", "\n", "x", "+=", "identity", "\n", "x", "=", "self", ".", "frelu3", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.Bottleneck.__init__": [[189, 206], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "int", "megengine.Identity", "megengine.Identity", "megengine.Identity", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__"], ["def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "channels", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "base_width", "=", "64", ",", "dilation", "=", "1", ",", "norm", "=", "M", ".", "BatchNorm2d", ",", "\n", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "width", "=", "int", "(", "channels", "*", "(", "base_width", "/", "64.0", ")", ")", "*", "groups", "\n", "self", ".", "conv1", "=", "M", ".", "Conv2d", "(", "in_channels", ",", "width", ",", "1", ",", "stride", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "width", ")", "\n", "self", ".", "conv2", "=", "M", ".", "Conv2d", "(", "width", ",", "width", ",", "3", ",", "1", ",", "padding", "=", "dilation", ",", "groups", "=", "groups", ",", "dilation", "=", "dilation", ",", "bias", "=", "True", ",", ")", "\n", "self", ".", "bn2", "=", "norm", "(", "width", ")", "\n", "self", ".", "conv3", "=", "M", ".", "Conv2d", "(", "width", ",", "channels", "*", "self", ".", "expansion", ",", "1", ",", "1", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn3", "=", "norm", "(", "channels", "*", "self", ".", "expansion", ")", "\n", "self", ".", "downsample", "=", "(", "\n", "M", ".", "Identity", "(", ")", "\n", "if", "in_channels", "==", "channels", "*", "self", ".", "expansion", "and", "stride", "==", "1", "\n", "else", "M", ".", "Sequential", "(", "\n", "M", ".", "Conv2d", "(", "in_channels", ",", "channels", "*", "self", ".", "expansion", ",", "1", ",", "stride", ",", "bias", "=", "True", ")", ",", "\n", "norm", "(", "channels", "*", "self", ".", "expansion", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.Bottleneck.forward": [[209, 229], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "megengine.relu", "megengine.relu", "megengine.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "megengine.relu", "megengine.relu", "megengine.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.downsample", "megengine.relu", "megengine.relu", "megengine.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "bn2", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "bn3", "(", "x", ")", "\n", "\n", "identity", "=", "self", ".", "downsample", "(", "identity", ")", "\n", "\n", "x", "+=", "identity", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.ResNet.__init__": [[232, 299], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "norm", "megengine.MaxPool2d", "megengine.MaxPool2d", "megengine.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "megengine.Linear", "megengine.Linear", "megengine.Linear", "megengine.Dropout", "megengine.Dropout", "megengine.Dropout", "resnet.ResNet.modules", "len", "ValueError", "isinstance", "resnet.ResNet.modules", "megengine.init.msra_normal_", "megengine.init.msra_normal_", "megengine.init.msra_normal_", "isinstance", "isinstance", "megengine.init.calculate_fan_in_and_fan_out", "megengine.init.calculate_fan_in_and_fan_out", "megengine.init.calculate_fan_in_and_fan_out", "megengine.init.uniform_", "megengine.init.uniform_", "megengine.init.uniform_", "megengine.init.ones_", "megengine.init.ones_", "megengine.init.ones_", "megengine.init.zeros_", "megengine.init.zeros_", "megengine.init.zeros_", "isinstance", "megengine.init.zeros_", "megengine.init.zeros_", "megengine.init.zeros_", "isinstance", "math.sqrt", "megengine.init.msra_uniform_", "megengine.init.msra_uniform_", "megengine.init.msra_uniform_", "megengine.init.zeros_", "megengine.init.zeros_", "megengine.init.zeros_", "megengine.init.calculate_fan_in_and_fan_out", "megengine.init.calculate_fan_in_and_fan_out", "megengine.init.calculate_fan_in_and_fan_out", "megengine.init.uniform_", "megengine.init.uniform_", "megengine.init.uniform_", "math.sqrt", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "block", ",", "\n", "layers", ",", "\n", "num_classes", "=", "1000", ",", "\n", "zero_init_residual", "=", "False", ",", "\n", "groups", "=", "1", ",", "\n", "width_per_group", "=", "64", ",", "\n", "replace_stride_with_dilation", "=", "None", ",", "\n", "norm", "=", "M", ".", "BatchNorm2d", ",", "\n", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "64", "\n", "self", ".", "dilation", "=", "1", "\n", "if", "replace_stride_with_dilation", "is", "None", ":", "\n", "# each element in the tuple indicates if we should replace", "\n", "# the 2x2 stride with a dilated convolution instead", "\n", "            ", "replace_stride_with_dilation", "=", "[", "False", ",", "False", ",", "False", "]", "\n", "", "if", "len", "(", "replace_stride_with_dilation", ")", "!=", "3", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"replace_stride_with_dilation should be None \"", "\n", "\"or a 3-element tuple, got {}\"", ".", "format", "(", "replace_stride_with_dilation", ")", "\n", ")", "\n", "", "self", ".", "groups", "=", "groups", "\n", "self", ".", "base_width", "=", "width_per_group", "\n", "self", ".", "conv1", "=", "M", ".", "Conv2d", "(", "3", ",", "self", ".", "in_channels", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "True", ")", "\n", "self", ".", "bn1", "=", "norm", "(", "self", ".", "in_channels", ")", "\n", "self", ".", "maxpool", "=", "M", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ",", "norm", "=", "norm", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ",", "dilate", "=", "replace_stride_with_dilation", "[", "0", "]", ",", "norm", "=", "norm", ",", "\n", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ",", "dilate", "=", "replace_stride_with_dilation", "[", "1", "]", ",", "norm", "=", "norm", ",", "\n", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "\n", "Bottleneck", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ",", "dilate", "=", "replace_stride_with_dilation", "[", "2", "]", ",", "norm", "=", "norm", ",", "\n", ")", "\n", "self", ".", "fc", "=", "M", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "num_classes", ")", "\n", "self", ".", "dropout", "=", "M", ".", "Dropout", "(", "0.2", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "M", ".", "Conv2d", ")", ":", "\n", "                ", "M", ".", "init", ".", "msra_normal_", "(", "m", ".", "weight", ",", "mode", "=", "\"fan_out\"", ",", "nonlinearity", "=", "\"relu\"", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "fan_in", ",", "_", "=", "M", ".", "init", ".", "calculate_fan_in_and_fan_out", "(", "m", ".", "weight", ")", "\n", "bound", "=", "1", "/", "math", ".", "sqrt", "(", "fan_in", ")", "\n", "M", ".", "init", ".", "uniform_", "(", "m", ".", "bias", ",", "-", "bound", ",", "bound", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "M", ".", "BatchNorm2d", ")", ":", "\n", "                ", "M", ".", "init", ".", "ones_", "(", "m", ".", "weight", ")", "\n", "M", ".", "init", ".", "zeros_", "(", "m", ".", "bias", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "M", ".", "Linear", ")", ":", "\n", "                ", "M", ".", "init", ".", "msra_uniform_", "(", "m", ".", "weight", ",", "a", "=", "math", ".", "sqrt", "(", "5", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "fan_in", ",", "_", "=", "M", ".", "init", ".", "calculate_fan_in_and_fan_out", "(", "m", ".", "weight", ")", "\n", "bound", "=", "1", "/", "math", ".", "sqrt", "(", "fan_in", ")", "\n", "M", ".", "init", ".", "uniform_", "(", "m", ".", "bias", ",", "-", "bound", ",", "bound", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "M", ".", "init", ".", "zeros_", "(", "m", ".", "bn3", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "M", ".", "init", ".", "zeros_", "(", "m", ".", "bn2", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.ResNet._make_layer": [[300, 332], ["layers.append", "range", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "block", "layers.append", "block"], "methods", ["None"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "channels", ",", "blocks", ",", "stride", "=", "1", ",", "dilate", "=", "False", ",", "norm", "=", "M", ".", "BatchNorm2d", ")", ":", "\n", "        ", "previous_dilation", "=", "self", ".", "dilation", "\n", "if", "dilate", ":", "\n", "            ", "self", ".", "dilation", "*=", "stride", "\n", "stride", "=", "1", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "in_channels", ",", "\n", "channels", ",", "\n", "stride", ",", "\n", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "\n", "dilation", "=", "previous_dilation", ",", "\n", "norm", "=", "norm", ",", "\n", ")", "\n", ")", "\n", "self", ".", "in_channels", "=", "channels", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "\n", "block", "(", "\n", "self", ".", "in_channels", ",", "\n", "channels", ",", "\n", "groups", "=", "self", ".", "groups", ",", "\n", "base_width", "=", "self", ".", "base_width", ",", "\n", "dilation", "=", "self", ".", "dilation", ",", "\n", "norm", "=", "norm", ",", "\n", ")", "\n", ")", "\n", "\n", "", "return", "M", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.ResNet.extract_features": [[333, 350], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "megengine.relu", "megengine.relu", "megengine.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4"], "methods", ["None"], ["", "def", "extract_features", "(", "self", ",", "x", ")", ":", "\n", "        ", "outputs", "=", "{", "}", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "outputs", "[", "\"stem\"", "]", "=", "x", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "outputs", "[", "\"res2\"", "]", "=", "x", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "outputs", "[", "\"res3\"", "]", "=", "x", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "outputs", "[", "\"res4\"", "]", "=", "x", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "outputs", "[", "\"res5\"", "]", "=", "x", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.ResNet.forward": [[351, 360], ["megengine.avg_pool2d", "megengine.avg_pool2d", "megengine.avg_pool2d", "resnet.ResNet.dropout", "megengine.flatten", "megengine.flatten", "megengine.flatten", "resnet.ResNet.fc", "resnet.ResNet.extract_features"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.ResNet.extract_features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "extract_features", "(", "x", ")", "[", "\"res5\"", "]", "\n", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "7", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "F", ".", "flatten", "(", "x", ",", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.resnet18": [[362, 368], ["megengine.pretrained", "resnet.ResNet"], "function", ["None"], ["", "", "@", "hub", ".", "pretrained", "(", "\"https://data.megengine.org.cn/models/weights/resnet18_naiveaug_70312_78a63ca6.pkl\"", ")", "\n", "def", "resnet18", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-18 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.resnet34": [[370, 376], ["megengine.pretrained", "resnet.ResNet"], "function", ["None"], ["", "@", "hub", ".", "pretrained", "(", "\"https://data.megengine.org.cn/models/weights/resnet34_naiveaug_73960_fd9d869d.pkl\"", ")", "\n", "def", "resnet34", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-34 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.resnet50": [[378, 384], ["megengine.pretrained", "resnet.ResNet"], "function", ["None"], ["", "@", "hub", ".", "pretrained", "(", "\"https://data.megengine.org.cn/models/weights/resnet50_fbaug_76254_4e14b7d1.pkl\"", ")", "\n", "def", "resnet50", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-50 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.resnet50_frelu": [[385, 391], ["megengine.pretrained", "resnet.ResNet"], "function", ["None"], ["", "@", "hub", ".", "pretrained", "(", "\"https://data.megengine.org.cn/models/weights/frelu/res50_frelu.model\"", ")", "\n", "def", "resnet50_frelu", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-50 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "Bottleneck_FReLU", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.resnet101": [[393, 399], ["megengine.pretrained", "resnet.ResNet"], "function", ["None"], ["", "@", "hub", ".", "pretrained", "(", "\"https://data.megengine.org.cn/models/weights/resnet101_fbaug_77944_b7932921.pkl\"", ")", "\n", "def", "resnet101", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-101 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.resnet152": [[401, 407], ["megengine.pretrained", "resnet.ResNet"], "function", ["None"], ["", "@", "hub", ".", "pretrained", "(", "\"https://data.megengine.org.cn/models/weights/resnet152_fbaug_78582_7551aff3.pkl\"", ")", "\n", "def", "resnet152", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNet-152 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_\n    \"\"\"", "\n", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.resnext50_32x4d": [[409, 421], ["megengine.pretrained", "resnet.ResNet"], "function", ["None"], ["", "@", "hub", ".", "pretrained", "(", "\"https://data.megengine.org.cn/models/weights/resnext50_32x4d_fbaug_77592_c4b04e5e.pkl\"", ")", "\n", "def", "resnext50_32x4d", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNeXt-50 32x4d model from\n    `\"Aggregated Residual Transformation for Deep Neural Networks\" <https://arxiv.org/pdf/1611.05431.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "\"groups\"", "]", "=", "32", "\n", "kwargs", "[", "\"width_per_group\"", "]", "=", "4", "\n", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.resnet.resnext101_32x8d": [[423, 434], ["resnet.ResNet"], "function", ["None"], ["", "def", "resnext101_32x8d", "(", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"ResNeXt-101 32x8d model from\n    `\"Aggregated Residual Transformation for Deep Neural Networks\" <https://arxiv.org/pdf/1611.05431.pdf>`_\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"", "\n", "kwargs", "[", "\"groups\"", "]", "=", "32", "\n", "kwargs", "[", "\"width_per_group\"", "]", "=", "8", "\n", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.test.AverageMeter.__init__": [[138, 142], ["test.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "\":.3f\"", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.test.AverageMeter.reset": [[143, 148], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.test.AverageMeter.update": [[149, 154], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.test.AverageMeter.__str__": [[155, 158], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "\"{name} {val\"", "+", "self", ".", "fmt", "+", "\"} ({avg\"", "+", "self", ".", "fmt", "+", "\"})\"", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.test.main": [[25, 51], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "megengine.get_device_count", "multiprocessing.set_start_method", "range", "test.worker", "multiprocessing.Process", "mp.Process.start", "processes.append", "mp.Process.join"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.worker"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"-a\"", ",", "\"--arch\"", ",", "default", "=", "\"resnet50_frelu\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-d\"", ",", "\"--data\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-m\"", ",", "\"--model\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"-n\"", ",", "\"--ngpus\"", ",", "default", "=", "None", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"-w\"", ",", "\"--workers\"", ",", "default", "=", "4", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--report-freq\"", ",", "default", "=", "50", ",", "type", "=", "int", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "world_size", "=", "mge", ".", "get_device_count", "(", "\"gpu\"", ")", "if", "args", ".", "ngpus", "is", "None", "else", "args", ".", "ngpus", "\n", "\n", "if", "world_size", ">", "1", ":", "\n", "# start distributed training, dispatch sub-processes", "\n", "        ", "mp", ".", "set_start_method", "(", "\"spawn\"", ")", "\n", "processes", "=", "[", "]", "\n", "for", "rank", "in", "range", "(", "world_size", ")", ":", "\n", "            ", "p", "=", "mp", ".", "Process", "(", "target", "=", "worker", ",", "args", "=", "(", "rank", ",", "world_size", ",", "args", ")", ")", "\n", "p", ".", "start", "(", ")", "\n", "processes", ".", "append", "(", "p", ")", "\n", "\n", "", "for", "p", "in", "processes", ":", "\n", "            ", "p", ".", "join", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "worker", "(", "0", ",", "1", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.test.worker": [[53, 102], ["megengine.trace", "logger.info", "megengine.dataset.ImageNet", "megengine.SequentialSampler", "megengine.DataLoader", "test.infer", "logger.info", "logger.info", "logger.info", "megengine.init_process_group", "getattr", "logger.info", "model.load_state_dict", "model.eval", "model", "megengine.cross_entropy_with_softmax", "megengine.accuracy", "megengine.is_distributed", "megengine.load", "megengine.Compose", "megengine.all_reduce_sum", "megengine.get_world_size", "megengine.all_reduce_sum", "megengine.get_world_size", "megengine.all_reduce_sum", "megengine.get_world_size", "megengine.Resize", "megengine.CenterCrop", "megengine.ToMode"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.infer"], ["", "", "def", "worker", "(", "rank", ",", "world_size", ",", "args", ")", ":", "\n", "    ", "if", "world_size", ">", "1", ":", "\n", "# Initialize distributed process group", "\n", "        ", "logger", ".", "info", "(", "\"init distributed process group {} / {}\"", ".", "format", "(", "rank", ",", "world_size", ")", ")", "\n", "dist", ".", "init_process_group", "(", "\n", "master_ip", "=", "\"localhost\"", ",", "\n", "master_port", "=", "23456", ",", "\n", "world_size", "=", "world_size", ",", "\n", "rank", "=", "rank", ",", "\n", "dev", "=", "rank", ",", "\n", ")", "\n", "\n", "", "model", "=", "getattr", "(", "M", ",", "args", ".", "arch", ")", "(", "pretrained", "=", "(", "args", ".", "model", "is", "None", ")", ")", "\n", "if", "args", ".", "model", ":", "\n", "        ", "logger", ".", "info", "(", "\"load weights from %s\"", ",", "args", ".", "model", ")", "\n", "model", ".", "load_state_dict", "(", "mge", ".", "load", "(", "args", ".", "model", ")", ")", "\n", "\n", "", "@", "jit", ".", "trace", "(", "symbolic", "=", "True", ")", "\n", "def", "valid_func", "(", "image", ",", "label", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "logits", "=", "model", "(", "image", ")", "\n", "loss", "=", "F", ".", "cross_entropy_with_softmax", "(", "logits", ",", "label", ")", "\n", "acc1", ",", "acc5", "=", "F", ".", "accuracy", "(", "logits", ",", "label", ",", "(", "1", ",", "5", ")", ")", "\n", "if", "dist", ".", "is_distributed", "(", ")", ":", "# all_reduce_mean", "\n", "            ", "loss", "=", "dist", ".", "all_reduce_sum", "(", "loss", ",", "\"valid_loss\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc1", "=", "dist", ".", "all_reduce_sum", "(", "acc1", ",", "\"valid_acc1\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc5", "=", "dist", ".", "all_reduce_sum", "(", "acc5", ",", "\"valid_acc5\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "", "return", "loss", ",", "acc1", ",", "acc5", "\n", "\n", "", "logger", ".", "info", "(", "\"preparing dataset..\"", ")", "\n", "valid_dataset", "=", "data", ".", "dataset", ".", "ImageNet", "(", "args", ".", "data", ",", "train", "=", "False", ")", "\n", "valid_sampler", "=", "data", ".", "SequentialSampler", "(", "\n", "valid_dataset", ",", "batch_size", "=", "100", ",", "drop_last", "=", "False", "\n", ")", "\n", "valid_queue", "=", "data", ".", "DataLoader", "(", "\n", "valid_dataset", ",", "\n", "sampler", "=", "valid_sampler", ",", "\n", "transform", "=", "T", ".", "Compose", "(", "\n", "[", "\n", "T", ".", "Resize", "(", "256", ")", ",", "\n", "T", ".", "CenterCrop", "(", "224", ")", ",", "\n", "T", ".", "ToMode", "(", "\"CHW\"", ")", ",", "\n", "]", "\n", ")", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "\n", ")", "\n", "_", ",", "valid_acc", ",", "valid_acc5", "=", "infer", "(", "valid_func", ",", "valid_queue", ",", "args", ")", "\n", "logger", ".", "info", "(", "\"Valid %.3f / %.3f\"", ",", "valid_acc", ",", "valid_acc5", ")", "\n", "logger", ".", "info", "(", "\"TOTAL TEST: loss=%f,\\tTop-1 err = %f,\\tTop-5 err = %f\"", ",", "_", ",", "1", "-", "valid_acc", "/", "100", ",", "1", "-", "valid_acc5", "/", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.test.infer": [[103, 134], ["test.AverageMeter", "test.AverageMeter", "test.AverageMeter", "test.AverageMeter", "time.time", "enumerate", "image.astype.astype", "label.astype.astype", "model", "test.AverageMeter.update", "test.AverageMeter.update", "test.AverageMeter.update", "test.AverageMeter.update", "time.time", "logger.info", "loss.numpy", "time.time", "megengine.get_rank", "acc1.numpy", "acc5.numpy"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update"], ["", "def", "infer", "(", "model", ",", "data_queue", ",", "args", ")", ":", "\n", "    ", "objs", "=", "AverageMeter", "(", "\"Loss\"", ")", "\n", "top1", "=", "AverageMeter", "(", "\"Acc@1\"", ")", "\n", "top5", "=", "AverageMeter", "(", "\"Acc@5\"", ")", "\n", "total_time", "=", "AverageMeter", "(", "\"Time\"", ")", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "step", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "data_queue", ")", ":", "\n", "        ", "n", "=", "image", ".", "shape", "[", "0", "]", "\n", "image", "=", "image", ".", "astype", "(", "\"float32\"", ")", "# convert np.uint8 to float32", "\n", "label", "=", "label", ".", "astype", "(", "\"int32\"", ")", "\n", "\n", "loss", ",", "acc1", ",", "acc5", "=", "model", "(", "image", ",", "label", ")", "\n", "\n", "objs", ".", "update", "(", "loss", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top1", ".", "update", "(", "100", "*", "acc1", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top5", ".", "update", "(", "100", "*", "acc5", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "total_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "t", ")", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", "and", "dist", ".", "get_rank", "(", ")", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Step %d, %s %s %s %s\"", ",", "\n", "step", ",", "\n", "objs", ",", "\n", "top1", ",", "\n", "top5", ",", "\n", "total_time", ",", "\n", ")", "\n", "\n", "", "", "return", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.frelu.FReLU.__init__": [[7, 11], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_frelu", "=", "M", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "3", ",", "1", ",", "1", ",", "groups", "=", "in_channels", ")", "\n", "self", ".", "bn_frelu", "=", "M", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.resnet.frelu.FReLU.forward": [[12, 17], ["frelu.FReLU.conv_frelu", "frelu.FReLU.bn_frelu", "megengine.maximum", "megengine.maximum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv_frelu", "(", "x", ")", "\n", "x1", "=", "self", ".", "bn_frelu", "(", "x1", ")", "\n", "x", "=", "F", ".", "maximum", "(", "x", ",", "x1", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.inference.main": [[22, 69], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "cv2.imread", "megengine.Compose", "megengine.trace", "inference.main.infer_func"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"-a\"", ",", "\"--arch\"", ",", "default", "=", "\"resnet50_frelu\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-m\"", ",", "\"--model\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-i\"", ",", "\"--image\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "model", "=", "getattr", "(", "M", ",", "args", ".", "arch", ")", "(", "pretrained", "=", "(", "args", ".", "model", "is", "None", ")", ")", "\n", "if", "args", ".", "model", ":", "\n", "        ", "state_dict", "=", "mge", ".", "load", "(", "args", ".", "model", ")", "\n", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n", "", "if", "args", ".", "image", "is", "None", ":", "\n", "        ", "path", "=", "\"../../../assets/cat.jpg\"", "# please find the files in https://github.com/MegEngine/Models/tree/master/official/assets", "\n", "", "else", ":", "\n", "        ", "path", "=", "args", ".", "image", "\n", "", "image", "=", "cv2", ".", "imread", "(", "path", ",", "cv2", ".", "IMREAD_COLOR", ")", "\n", "\n", "transform", "=", "T", ".", "Compose", "(", "\n", "[", "\n", "T", ".", "Resize", "(", "256", ")", ",", "\n", "T", ".", "CenterCrop", "(", "224", ")", ",", "\n", "T", ".", "ToMode", "(", "\"CHW\"", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "@", "jit", ".", "trace", "(", "symbolic", "=", "True", ")", "\n", "def", "infer_func", "(", "processed_img", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "logits", "=", "model", "(", "processed_img", ")", "\n", "probs", "=", "F", ".", "softmax", "(", "logits", ")", "\n", "return", "probs", "\n", "\n", "", "processed_img", "=", "transform", ".", "apply", "(", "image", ")", "[", "np", ".", "newaxis", ",", ":", "]", "\n", "probs", "=", "infer_func", "(", "processed_img", ")", "\n", "\n", "top_probs", ",", "classes", "=", "F", ".", "top_k", "(", "probs", ",", "k", "=", "5", ",", "descending", "=", "True", ")", "\n", "\n", "with", "open", "(", "\"../../../assets/imagenet_class_info.json\"", ")", "as", "fp", ":", "# please find the files in https://github.com/MegEngine/Models/tree/master/official/assets", "\n", "        ", "imagenet_class_index", "=", "json", ".", "load", "(", "fp", ")", "\n", "\n", "", "for", "rank", ",", "(", "prob", ",", "classid", ")", "in", "enumerate", "(", "\n", "zip", "(", "top_probs", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ",", "classes", ".", "numpy", "(", ")", ".", "reshape", "(", "-", "1", ")", ")", "\n", ")", ":", "\n", "        ", "print", "(", "\n", "\"{}: class = {:20s} with probability = {:4.1f} %\"", ".", "format", "(", "\n", "rank", ",", "imagenet_class_index", "[", "str", "(", "classid", ")", "]", "[", "1", "]", ",", "100", "*", "prob", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.AverageMeter.__init__": [[311, 315], ["train.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "\":.3f\"", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.AverageMeter.reset": [[316, 321], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.AverageMeter.update": [[322, 327], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.AverageMeter.__str__": [[328, 331], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "\"{name} {val\"", "+", "self", ".", "fmt", "+", "\"} ({avg\"", "+", "self", ".", "fmt", "+", "\"})\"", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.main": [[54, 94], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.join", "megengine.set_log_file", "os.path.exists", "os.makedirs", "os.path.join", "megengine.get_device_count", "multiprocessing.set_start_method", "range", "train.worker", "multiprocessing.Process", "mp.Process.start", "processes.append", "mp.Process.join"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.worker"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"-a\"", ",", "\"--arch\"", ",", "default", "=", "\"resnet50_frelu\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-d\"", ",", "\"--data\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-s\"", ",", "\"--save\"", ",", "default", "=", "\"./models\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-m\"", ",", "\"--model\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"-b\"", ",", "\"--batch-size\"", ",", "default", "=", "32", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--learning-rate\"", ",", "default", "=", "0.0125", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "\"--momentum\"", ",", "default", "=", "0.9", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight-decay\"", ",", "default", "=", "1e-4", ",", "type", "=", "float", ")", "\n", "parser", ".", "add_argument", "(", "\"--steps\"", ",", "default", "=", "300000", ",", "type", "=", "int", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"-n\"", ",", "\"--ngpus\"", ",", "default", "=", "None", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"-w\"", ",", "\"--workers\"", ",", "default", "=", "4", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--report-freq\"", ",", "default", "=", "50", ",", "type", "=", "int", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "save_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "args", ".", "arch", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "mge", ".", "set_log_file", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"log.txt\"", ")", ")", "\n", "\n", "world_size", "=", "mge", ".", "get_device_count", "(", "\"gpu\"", ")", "if", "args", ".", "ngpus", "is", "None", "else", "args", ".", "ngpus", "\n", "\n", "if", "world_size", ">", "1", ":", "\n", "# scale learning rate by number of gpus", "\n", "        ", "args", ".", "learning_rate", "*=", "world_size", "\n", "# start distributed training, dispatch sub-processes", "\n", "mp", ".", "set_start_method", "(", "\"spawn\"", ")", "\n", "processes", "=", "[", "]", "\n", "for", "rank", "in", "range", "(", "world_size", ")", ":", "\n", "            ", "p", "=", "mp", ".", "Process", "(", "target", "=", "worker", ",", "args", "=", "(", "rank", ",", "world_size", ",", "args", ")", ")", "\n", "p", ".", "start", "(", ")", "\n", "processes", ".", "append", "(", "p", ")", "\n", "\n", "", "for", "p", "in", "processes", ":", "\n", "            ", "p", ".", "join", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "worker", "(", "0", ",", "1", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.get_parameters": [[96, 114], ["model.named_parameters", "len", "dict", "dict", "group_weight_decay.append", "group_no_weight_decay.append", "list", "len", "len", "pname.find", "len", "model.parameters"], "function", ["None"], ["", "", "def", "get_parameters", "(", "model", ")", ":", "\n", "    ", "group_no_weight_decay", "=", "[", "]", "\n", "group_weight_decay", "=", "[", "]", "\n", "for", "pname", ",", "p", "in", "model", ".", "named_parameters", "(", "requires_grad", "=", "True", ")", ":", "\n", "        ", "if", "pname", ".", "find", "(", "\"weight\"", ")", ">=", "0", "and", "len", "(", "p", ".", "shape", ")", ">", "1", ":", "\n", "# print(\"include \", pname, p.shape)", "\n", "            ", "group_weight_decay", ".", "append", "(", "p", ")", "\n", "", "else", ":", "\n", "# print(\"not include \", pname, p.shape)", "\n", "            ", "group_no_weight_decay", ".", "append", "(", "p", ")", "\n", "", "", "assert", "len", "(", "list", "(", "model", ".", "parameters", "(", ")", ")", ")", "==", "len", "(", "group_weight_decay", ")", "+", "len", "(", "\n", "group_no_weight_decay", "\n", ")", "\n", "groups", "=", "[", "\n", "dict", "(", "params", "=", "group_weight_decay", ")", ",", "\n", "dict", "(", "params", "=", "group_no_weight_decay", ",", "weight_decay", "=", "0.0", ")", ",", "\n", "]", "\n", "return", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.worker": [[116, 272], ["megengine.set_log_file", "os.path.join", "megengine.SGD", "megengine.trace", "megengine.trace", "logger.info", "megengine.dataset.ImageNet", "megengine.Infinite", "megengine.DataLoader", "megengine.dataset.ImageNet", "megengine.SequentialSampler", "megengine.DataLoader", "train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "time.time", "range", "megengine.save", "train.infer", "logger.info", "os.path.join", "logger.info", "megengine.init_process_group", "getattr", "logger.info", "model.load_state_dict", "int", "train.get_parameters", "model.train", "model", "megengine.cross_entropy_with_softmax", "megengine.accuracy", "optim.SGD.backward", "megengine.is_distributed", "model.eval", "model", "megengine.cross_entropy_with_softmax", "megengine.accuracy", "megengine.is_distributed", "megengine.RandomSampler", "next", "image.astype.astype", "label.astype.astype", "optim.SGD.zero_grad", "train.worker.train_func"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.infer", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.get_parameters"], ["", "def", "worker", "(", "rank", ",", "world_size", ",", "args", ")", ":", "\n", "# pylint: disable=too-many-statements", "\n", "    ", "mge", ".", "set_log_file", "(", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "args", ".", "arch", ",", "\"log.txt\"", ")", ")", "\n", "\n", "if", "world_size", ">", "1", ":", "\n", "# Initialize distributed process group", "\n", "        ", "logger", ".", "info", "(", "\"init distributed process group {} / {}\"", ".", "format", "(", "rank", ",", "world_size", ")", ")", "\n", "dist", ".", "init_process_group", "(", "\n", "master_ip", "=", "\"localhost\"", ",", "\n", "master_port", "=", "23456", ",", "\n", "world_size", "=", "world_size", ",", "\n", "rank", "=", "rank", ",", "\n", "dev", "=", "rank", ",", "\n", ")", "\n", "\n", "", "save_dir", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save", ",", "args", ".", "arch", ")", "\n", "\n", "model", "=", "getattr", "(", "M", ",", "args", ".", "arch", ")", "(", ")", "\n", "step_start", "=", "0", "\n", "if", "args", ".", "model", ":", "\n", "        ", "logger", ".", "info", "(", "\"load weights from %s\"", ",", "args", ".", "model", ")", "\n", "model", ".", "load_state_dict", "(", "mge", ".", "load", "(", "args", ".", "model", ")", ")", "\n", "step_start", "=", "int", "(", "args", ".", "model", ".", "split", "(", "\"-\"", ")", "[", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", ")", "\n", "\n", "", "optimizer", "=", "optim", ".", "SGD", "(", "\n", "get_parameters", "(", "model", ")", ",", "\n", "lr", "=", "args", ".", "learning_rate", ",", "\n", "momentum", "=", "args", ".", "momentum", ",", "\n", "weight_decay", "=", "args", ".", "weight_decay", ",", "\n", ")", "\n", "\n", "# Define train and valid graph", "\n", "@", "jit", ".", "trace", "(", "symbolic", "=", "True", ")", "\n", "def", "train_func", "(", "image", ",", "label", ")", ":", "\n", "        ", "model", ".", "train", "(", ")", "\n", "logits", "=", "model", "(", "image", ")", "\n", "loss", "=", "F", ".", "cross_entropy_with_softmax", "(", "logits", ",", "label", ",", "label_smooth", "=", "0.", ")", "\n", "acc1", ",", "acc5", "=", "F", ".", "accuracy", "(", "logits", ",", "label", ",", "(", "1", ",", "5", ")", ")", "\n", "optimizer", ".", "backward", "(", "loss", ")", "# compute gradients", "\n", "if", "dist", ".", "is_distributed", "(", ")", ":", "# all_reduce_mean", "\n", "            ", "loss", "=", "dist", ".", "all_reduce_sum", "(", "loss", ",", "\"train_loss\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc1", "=", "dist", ".", "all_reduce_sum", "(", "acc1", ",", "\"train_acc1\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc5", "=", "dist", ".", "all_reduce_sum", "(", "acc5", ",", "\"train_acc5\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "", "return", "loss", ",", "acc1", ",", "acc5", "\n", "\n", "", "@", "jit", ".", "trace", "(", "symbolic", "=", "True", ")", "\n", "def", "valid_func", "(", "image", ",", "label", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "logits", "=", "model", "(", "image", ")", "\n", "loss", "=", "F", ".", "cross_entropy_with_softmax", "(", "logits", ",", "label", ",", "label_smooth", "=", "0.", ")", "\n", "acc1", ",", "acc5", "=", "F", ".", "accuracy", "(", "logits", ",", "label", ",", "(", "1", ",", "5", ")", ")", "\n", "if", "dist", ".", "is_distributed", "(", ")", ":", "# all_reduce_mean", "\n", "            ", "loss", "=", "dist", ".", "all_reduce_sum", "(", "loss", ",", "\"valid_loss\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc1", "=", "dist", ".", "all_reduce_sum", "(", "acc1", ",", "\"valid_acc1\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc5", "=", "dist", ".", "all_reduce_sum", "(", "acc5", ",", "\"valid_acc5\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "", "return", "loss", ",", "acc1", ",", "acc5", "\n", "\n", "# Build train and valid datasets", "\n", "", "logger", ".", "info", "(", "\"preparing dataset..\"", ")", "\n", "train_dataset", "=", "data", ".", "dataset", ".", "ImageNet", "(", "args", ".", "data", ",", "train", "=", "True", ")", "\n", "train_sampler", "=", "data", ".", "Infinite", "(", "data", ".", "RandomSampler", "(", "\n", "train_dataset", ",", "batch_size", "=", "args", ".", "batch_size", ",", "drop_last", "=", "True", "\n", ")", ")", "\n", "train_queue", "=", "data", ".", "DataLoader", "(", "\n", "train_dataset", ",", "\n", "sampler", "=", "train_sampler", ",", "\n", "transform", "=", "T", ".", "Compose", "(", "\n", "[", "\n", "T", ".", "RandomResizedCrop", "(", "224", ")", ",", "\n", "T", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "T", ".", "ColorJitter", "(", "brightness", "=", "0.4", ",", "contrast", "=", "0.4", ",", "saturation", "=", "0.4", ")", ",", "\n", "T", ".", "ToMode", "(", "\"CHW\"", ")", ",", "\n", "]", "\n", ")", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "\n", ")", "\n", "\n", "valid_dataset", "=", "data", ".", "dataset", ".", "ImageNet", "(", "args", ".", "data", ",", "train", "=", "False", ")", "\n", "valid_sampler", "=", "data", ".", "SequentialSampler", "(", "\n", "valid_dataset", ",", "batch_size", "=", "100", ",", "drop_last", "=", "False", "\n", ")", "\n", "valid_queue", "=", "data", ".", "DataLoader", "(", "\n", "valid_dataset", ",", "\n", "sampler", "=", "valid_sampler", ",", "\n", "transform", "=", "T", ".", "Compose", "(", "\n", "[", "\n", "T", ".", "Resize", "(", "256", ")", ",", "\n", "T", ".", "CenterCrop", "(", "224", ")", ",", "\n", "T", ".", "ToMode", "(", "\"CHW\"", ")", ",", "\n", "]", "\n", ")", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "\n", ")", "\n", "\n", "# Start training", "\n", "objs", "=", "AverageMeter", "(", "\"Loss\"", ")", "\n", "top1", "=", "AverageMeter", "(", "\"Acc@1\"", ")", "\n", "top5", "=", "AverageMeter", "(", "\"Acc@5\"", ")", "\n", "total_time", "=", "AverageMeter", "(", "\"Time\"", ")", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "step", "in", "range", "(", "step_start", ",", "args", ".", "steps", "+", "1", ")", ":", "\n", "# Linear learning rate decay", "\n", "        ", "decay", "=", "1.0", "\n", "decay", "=", "1", "-", "float", "(", "step", ")", "/", "args", ".", "steps", "if", "step", "<", "args", ".", "steps", "else", "0", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "\"lr\"", "]", "=", "args", ".", "learning_rate", "*", "decay", "\n", "\n", "", "image", ",", "label", "=", "next", "(", "train_queue", ")", "\n", "time_data", "=", "time", ".", "time", "(", ")", "-", "t", "\n", "image", "=", "image", ".", "astype", "(", "\"float32\"", ")", "\n", "label", "=", "label", ".", "astype", "(", "\"int32\"", ")", "\n", "\n", "n", "=", "image", ".", "shape", "[", "0", "]", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ",", "acc1", ",", "acc5", "=", "train_func", "(", "image", ",", "label", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "top1", ".", "update", "(", "100", "*", "acc1", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top5", ".", "update", "(", "100", "*", "acc5", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "objs", ".", "update", "(", "loss", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "total_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "t", ")", "\n", "time_iter", "=", "time", ".", "time", "(", ")", "-", "t", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", "and", "rank", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"TRAIN Iter %06d: lr = %f,\\tloss = %f,\\twc_loss = 1,\\tTop-1 err = %f,\\tTop-5 err = %f,\\tdata_time = %f,\\ttrain_time = %f,\\tremain_hours=%f\"", ",", "\n", "step", ",", "\n", "args", ".", "learning_rate", "*", "decay", ",", "\n", "float", "(", "objs", ".", "__str__", "(", ")", ".", "split", "(", ")", "[", "1", "]", ")", ",", "\n", "1", "-", "float", "(", "top1", ".", "__str__", "(", ")", ".", "split", "(", ")", "[", "1", "]", ")", "/", "100", ",", "\n", "1", "-", "float", "(", "top5", ".", "__str__", "(", ")", ".", "split", "(", ")", "[", "1", "]", ")", "/", "100", ",", "\n", "time_data", ",", "\n", "time_iter", "-", "time_data", ",", "\n", "time_iter", "*", "(", "args", ".", "steps", "-", "step", ")", "/", "3600", ",", "\n", ")", "\n", "objs", ".", "reset", "(", ")", "\n", "top1", ".", "reset", "(", ")", "\n", "top5", ".", "reset", "(", ")", "\n", "total_time", ".", "reset", "(", ")", "\n", "", "if", "step", "%", "10000", "==", "0", "and", "rank", "==", "0", "and", "step", "!=", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\"SAVING %06d\"", ",", "step", ")", "\n", "mge", ".", "save", "(", "\n", "model", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"checkpoint-{:06d}.pkl\"", ".", "format", "(", "step", ")", ")", ",", "\n", ")", "\n", "", "if", "step", "%", "50000", "==", "0", "and", "step", "!=", "0", ":", "\n", "            ", "_", ",", "valid_acc", ",", "valid_acc5", "=", "infer", "(", "valid_func", ",", "valid_queue", ",", "args", ")", "\n", "logger", ".", "info", "(", "\"TEST Iter %06d: loss = %f,\\tTop-1 err = %f,\\tTop-5 err = %f\"", ",", "step", ",", "_", ",", "1", "-", "valid_acc", "/", "100", ",", "1", "-", "valid_acc5", "/", "100", ")", "\n", "\n", "", "", "mge", ".", "save", "(", "\n", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"checkpoint-{:06d}.pkl\"", ".", "format", "(", "step", ")", ")", "\n", ")", "\n", "_", ",", "valid_acc", ",", "valid_acc5", "=", "infer", "(", "valid_func", ",", "valid_queue", ",", "args", ")", "\n", "logger", ".", "info", "(", "\"TEST Iter %06d: loss=%f,\\tTop-1 err = %f,\\tTop-5 err = %f\"", ",", "step", ",", "_", ",", "1", "-", "valid_acc", "/", "100", ",", "1", "-", "valid_acc5", "/", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.train.infer": [[274, 305], ["train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "train.AverageMeter", "time.time", "enumerate", "image.astype.astype", "label.astype.astype", "model", "train.AverageMeter.update", "train.AverageMeter.update", "train.AverageMeter.update", "train.AverageMeter.update", "time.time", "logger.info", "loss.numpy", "time.time", "megengine.get_rank", "acc1.numpy", "acc5.numpy"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update"], ["", "def", "infer", "(", "model", ",", "data_queue", ",", "args", ")", ":", "\n", "    ", "objs", "=", "AverageMeter", "(", "\"Loss\"", ")", "\n", "top1", "=", "AverageMeter", "(", "\"Acc@1\"", ")", "\n", "top5", "=", "AverageMeter", "(", "\"Acc@5\"", ")", "\n", "total_time", "=", "AverageMeter", "(", "\"Time\"", ")", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "step", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "data_queue", ")", ":", "\n", "        ", "n", "=", "image", ".", "shape", "[", "0", "]", "\n", "image", "=", "image", ".", "astype", "(", "\"float32\"", ")", "# convert np.uint8 to float32", "\n", "label", "=", "label", ".", "astype", "(", "\"int32\"", ")", "\n", "\n", "loss", ",", "acc1", ",", "acc5", "=", "model", "(", "image", ",", "label", ")", "\n", "\n", "objs", ".", "update", "(", "loss", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top1", ".", "update", "(", "100", "*", "acc1", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top5", ".", "update", "(", "100", "*", "acc5", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "total_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "t", ")", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", "and", "dist", ".", "get_rank", "(", ")", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Step %d, %s %s %s %s\"", ",", "\n", "step", ",", "\n", "objs", ",", "\n", "top1", ",", "\n", "top5", ",", "\n", "total_time", ",", "\n", ")", "\n", "\n", "", "", "return", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.__init__": [[138, 142], ["test.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "\":.3f\"", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.reset": [[143, 148], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update": [[149, 154], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.__str__": [[155, 158], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "\"{name} {val\"", "+", "self", ".", "fmt", "+", "\"} ({avg\"", "+", "self", ".", "fmt", "+", "\"})\"", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.main": [[25, 51], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "megengine.get_device_count", "multiprocessing.set_start_method", "range", "test.worker", "multiprocessing.Process", "mp.Process.start", "processes.append", "mp.Process.join"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.worker"], ["def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"-a\"", ",", "\"--arch\"", ",", "default", "=", "\"resnet50_frelu\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-d\"", ",", "\"--data\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"-m\"", ",", "\"--model\"", ",", "default", "=", "None", ",", "type", "=", "str", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"-n\"", ",", "\"--ngpus\"", ",", "default", "=", "None", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"-w\"", ",", "\"--workers\"", ",", "default", "=", "4", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "\"--report-freq\"", ",", "default", "=", "50", ",", "type", "=", "int", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "world_size", "=", "mge", ".", "get_device_count", "(", "\"gpu\"", ")", "if", "args", ".", "ngpus", "is", "None", "else", "args", ".", "ngpus", "\n", "\n", "if", "world_size", ">", "1", ":", "\n", "# start distributed training, dispatch sub-processes", "\n", "        ", "mp", ".", "set_start_method", "(", "\"spawn\"", ")", "\n", "processes", "=", "[", "]", "\n", "for", "rank", "in", "range", "(", "world_size", ")", ":", "\n", "            ", "p", "=", "mp", ".", "Process", "(", "target", "=", "worker", ",", "args", "=", "(", "rank", ",", "world_size", ",", "args", ")", ")", "\n", "p", ".", "start", "(", ")", "\n", "processes", ".", "append", "(", "p", ")", "\n", "\n", "", "for", "p", "in", "processes", ":", "\n", "            ", "p", ".", "join", "(", ")", "\n", "", "", "else", ":", "\n", "        ", "worker", "(", "0", ",", "1", ",", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.worker": [[53, 102], ["megengine.trace", "logger.info", "megengine.dataset.ImageNet", "megengine.SequentialSampler", "megengine.DataLoader", "test.infer", "logger.info", "logger.info", "logger.info", "megengine.init_process_group", "getattr", "logger.info", "model.load_state_dict", "model.eval", "model", "megengine.cross_entropy_with_softmax", "megengine.accuracy", "megengine.is_distributed", "megengine.load", "megengine.Compose", "megengine.all_reduce_sum", "megengine.get_world_size", "megengine.all_reduce_sum", "megengine.get_world_size", "megengine.all_reduce_sum", "megengine.get_world_size", "megengine.Resize", "megengine.CenterCrop", "megengine.ToMode"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.infer"], ["", "", "def", "worker", "(", "rank", ",", "world_size", ",", "args", ")", ":", "\n", "    ", "if", "world_size", ">", "1", ":", "\n", "# Initialize distributed process group", "\n", "        ", "logger", ".", "info", "(", "\"init distributed process group {} / {}\"", ".", "format", "(", "rank", ",", "world_size", ")", ")", "\n", "dist", ".", "init_process_group", "(", "\n", "master_ip", "=", "\"localhost\"", ",", "\n", "master_port", "=", "23456", ",", "\n", "world_size", "=", "world_size", ",", "\n", "rank", "=", "rank", ",", "\n", "dev", "=", "rank", ",", "\n", ")", "\n", "\n", "", "model", "=", "getattr", "(", "M", ",", "args", ".", "arch", ")", "(", "pretrained", "=", "(", "args", ".", "model", "is", "None", ")", ")", "\n", "if", "args", ".", "model", ":", "\n", "        ", "logger", ".", "info", "(", "\"load weights from %s\"", ",", "args", ".", "model", ")", "\n", "model", ".", "load_state_dict", "(", "mge", ".", "load", "(", "args", ".", "model", ")", ")", "\n", "\n", "", "@", "jit", ".", "trace", "(", "symbolic", "=", "True", ")", "\n", "def", "valid_func", "(", "image", ",", "label", ")", ":", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "logits", "=", "model", "(", "image", ")", "\n", "loss", "=", "F", ".", "cross_entropy_with_softmax", "(", "logits", ",", "label", ")", "\n", "acc1", ",", "acc5", "=", "F", ".", "accuracy", "(", "logits", ",", "label", ",", "(", "1", ",", "5", ")", ")", "\n", "if", "dist", ".", "is_distributed", "(", ")", ":", "# all_reduce_mean", "\n", "            ", "loss", "=", "dist", ".", "all_reduce_sum", "(", "loss", ",", "\"valid_loss\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc1", "=", "dist", ".", "all_reduce_sum", "(", "acc1", ",", "\"valid_acc1\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "acc5", "=", "dist", ".", "all_reduce_sum", "(", "acc5", ",", "\"valid_acc5\"", ")", "/", "dist", ".", "get_world_size", "(", ")", "\n", "", "return", "loss", ",", "acc1", ",", "acc5", "\n", "\n", "", "logger", ".", "info", "(", "\"preparing dataset..\"", ")", "\n", "valid_dataset", "=", "data", ".", "dataset", ".", "ImageNet", "(", "args", ".", "data", ",", "train", "=", "False", ")", "\n", "valid_sampler", "=", "data", ".", "SequentialSampler", "(", "\n", "valid_dataset", ",", "batch_size", "=", "100", ",", "drop_last", "=", "False", "\n", ")", "\n", "valid_queue", "=", "data", ".", "DataLoader", "(", "\n", "valid_dataset", ",", "\n", "sampler", "=", "valid_sampler", ",", "\n", "transform", "=", "T", ".", "Compose", "(", "\n", "[", "\n", "T", ".", "Resize", "(", "256", ")", ",", "\n", "T", ".", "CenterCrop", "(", "224", ")", ",", "\n", "T", ".", "ToMode", "(", "\"CHW\"", ")", ",", "\n", "]", "\n", ")", ",", "\n", "num_workers", "=", "args", ".", "workers", ",", "\n", ")", "\n", "_", ",", "valid_acc", ",", "valid_acc5", "=", "infer", "(", "valid_func", ",", "valid_queue", ",", "args", ")", "\n", "logger", ".", "info", "(", "\"Valid %.3f / %.3f\"", ",", "valid_acc", ",", "valid_acc5", ")", "\n", "logger", ".", "info", "(", "\"TOTAL TEST: loss=%f,\\tTop-1 err = %f,\\tTop-5 err = %f\"", ",", "_", ",", "1", "-", "valid_acc", "/", "100", ",", "1", "-", "valid_acc5", "/", "100", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.infer": [[103, 134], ["test.AverageMeter", "test.AverageMeter", "test.AverageMeter", "test.AverageMeter", "time.time", "enumerate", "image.astype.astype", "label.astype.astype", "model", "test.AverageMeter.update", "test.AverageMeter.update", "test.AverageMeter.update", "test.AverageMeter.update", "time.time", "logger.info", "loss.numpy", "time.time", "megengine.get_rank", "acc1.numpy", "acc5.numpy"], "function", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.test.AverageMeter.update"], ["", "def", "infer", "(", "model", ",", "data_queue", ",", "args", ")", ":", "\n", "    ", "objs", "=", "AverageMeter", "(", "\"Loss\"", ")", "\n", "top1", "=", "AverageMeter", "(", "\"Acc@1\"", ")", "\n", "top5", "=", "AverageMeter", "(", "\"Acc@5\"", ")", "\n", "total_time", "=", "AverageMeter", "(", "\"Time\"", ")", "\n", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "for", "step", ",", "(", "image", ",", "label", ")", "in", "enumerate", "(", "data_queue", ")", ":", "\n", "        ", "n", "=", "image", ".", "shape", "[", "0", "]", "\n", "image", "=", "image", ".", "astype", "(", "\"float32\"", ")", "# convert np.uint8 to float32", "\n", "label", "=", "label", ".", "astype", "(", "\"int32\"", ")", "\n", "\n", "loss", ",", "acc1", ",", "acc5", "=", "model", "(", "image", ",", "label", ")", "\n", "\n", "objs", ".", "update", "(", "loss", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top1", ".", "update", "(", "100", "*", "acc1", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "top5", ".", "update", "(", "100", "*", "acc5", ".", "numpy", "(", ")", "[", "0", "]", ",", "n", ")", "\n", "total_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "t", ")", "\n", "t", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "step", "%", "args", ".", "report_freq", "==", "0", "and", "dist", ".", "get_rank", "(", ")", "==", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Step %d, %s %s %s %s\"", ",", "\n", "step", ",", "\n", "objs", ",", "\n", "top1", ",", "\n", "top5", ",", "\n", "total_time", ",", "\n", ")", "\n", "\n", "", "", "return", "objs", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.frelu_light.FReLU.__init__": [[10, 16], ["megengine.Module.__init__", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_frelu1", "=", "M", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "(", "1", ",", "3", ")", ",", "1", ",", "(", "0", ",", "1", ")", ",", "groups", "=", "in_channels", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_frelu2", "=", "M", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "(", "3", ",", "1", ")", ",", "1", ",", "(", "1", ",", "0", ")", ",", "groups", "=", "in_channels", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "M", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "self", ".", "bn2", "=", "M", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.frelu_light.FReLU.forward": [[17, 24], ["frelu_light.FReLU.conv_frelu1", "frelu_light.FReLU.bn1", "frelu_light.FReLU.conv_frelu2", "frelu_light.FReLU.bn2", "megengine.maximum", "megengine.maximum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv_frelu1", "(", "x", ")", "\n", "x1", "=", "self", ".", "bn1", "(", "x1", ")", "\n", "x2", "=", "self", ".", "conv_frelu2", "(", "x", ")", "\n", "x2", "=", "self", ".", "bn2", "(", "x2", ")", "\n", "x", "=", "F", ".", "maximum", "(", "x", ",", "x1", "+", "x2", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleV2Block.__init__": [[44, 85], ["megengine.Module.__init__", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "frelu_light.FReLU", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "frelu_light.FReLU", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "frelu_light.FReLU"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "mid_channels", ",", "*", ",", "ksize", ",", "stride", ")", ":", "\n", "        ", "super", "(", "ShuffleV2Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "assert", "stride", "in", "[", "1", ",", "2", "]", "\n", "\n", "self", ".", "mid_channels", "=", "mid_channels", "\n", "self", ".", "ksize", "=", "ksize", "\n", "pad", "=", "ksize", "//", "2", "\n", "self", ".", "pad", "=", "pad", "\n", "self", ".", "inp", "=", "inp", "\n", "\n", "outputs", "=", "oup", "-", "inp", "\n", "\n", "branch_main", "=", "[", "\n", "# pw", "\n", "M", ".", "Conv2d", "(", "inp", ",", "mid_channels", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "M", ".", "BatchNorm2d", "(", "mid_channels", ")", ",", "\n", "FReLU", "(", "mid_channels", ")", ",", "\n", "# dw", "\n", "M", ".", "Conv2d", "(", "mid_channels", ",", "mid_channels", ",", "ksize", ",", "stride", ",", "pad", ",", "groups", "=", "mid_channels", ",", "bias", "=", "False", ",", ")", ",", "\n", "M", ".", "BatchNorm2d", "(", "mid_channels", ")", ",", "\n", "# pw-linear", "\n", "M", ".", "Conv2d", "(", "mid_channels", ",", "outputs", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "M", ".", "BatchNorm2d", "(", "outputs", ")", ",", "\n", "FReLU", "(", "outputs", ")", ",", "\n", "]", "\n", "self", ".", "branch_main", "=", "M", ".", "Sequential", "(", "*", "branch_main", ")", "\n", "\n", "if", "stride", "==", "2", ":", "\n", "            ", "branch_proj", "=", "[", "\n", "# dw", "\n", "M", ".", "Conv2d", "(", "inp", ",", "inp", ",", "ksize", ",", "stride", ",", "pad", ",", "groups", "=", "inp", ",", "bias", "=", "False", ")", ",", "\n", "M", ".", "BatchNorm2d", "(", "inp", ")", ",", "\n", "# pw-linear", "\n", "M", ".", "Conv2d", "(", "inp", ",", "inp", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "M", ".", "BatchNorm2d", "(", "inp", ")", ",", "\n", "FReLU", "(", "inp", ")", ",", "\n", "]", "\n", "self", ".", "branch_proj", "=", "M", ".", "Sequential", "(", "*", "branch_proj", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "branch_proj", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleV2Block.forward": [[86, 94], ["shufflenet_v2.ShuffleV2Block.channel_shuffle", "megengine.concat", "megengine.concat", "megengine.concat", "megengine.concat", "megengine.concat", "megengine.concat", "shufflenet_v2.ShuffleV2Block.branch_main", "shufflenet_v2.ShuffleV2Block.branch_proj", "shufflenet_v2.ShuffleV2Block.branch_main"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleV2Block.channel_shuffle"], ["", "", "def", "forward", "(", "self", ",", "old_x", ")", ":", "\n", "        ", "if", "self", ".", "stride", "==", "1", ":", "\n", "            ", "x_proj", ",", "x", "=", "self", ".", "channel_shuffle", "(", "old_x", ")", "\n", "return", "F", ".", "concat", "(", "(", "x_proj", ",", "self", ".", "branch_main", "(", "x", ")", ")", ",", "1", ")", "\n", "", "elif", "self", ".", "stride", "==", "2", ":", "\n", "            ", "x_proj", "=", "old_x", "\n", "x", "=", "old_x", "\n", "return", "F", ".", "concat", "(", "(", "self", ".", "branch_proj", "(", "x_proj", ")", ",", "self", ".", "branch_main", "(", "x", ")", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleV2Block.channel_shuffle": [[95, 102], ["x.reshape.reshape.reshape", "x.reshape.reshape.dimshuffle", "x.reshape.reshape.reshape"], "methods", ["None"], ["", "", "def", "channel_shuffle", "(", "self", ",", "x", ")", ":", "\n", "        ", "batchsize", ",", "num_channels", ",", "height", ",", "width", "=", "x", ".", "shape", "\n", "# assert (num_channels % 4 == 0)", "\n", "x", "=", "x", ".", "reshape", "(", "batchsize", "*", "num_channels", "//", "2", ",", "2", ",", "height", "*", "width", ")", "\n", "x", "=", "x", ".", "dimshuffle", "(", "1", ",", "0", ",", "2", ")", "\n", "x", "=", "x", ".", "reshape", "(", "2", ",", "-", "1", ",", "num_channels", "//", "2", ",", "height", ",", "width", ")", "\n", "return", "x", "[", "0", "]", ",", "x", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__": [[105, 162], ["megengine.Module.__init__", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.MaxPool2d", "megengine.MaxPool2d", "megengine.MaxPool2d", "range", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "megengine.AvgPool2d", "megengine.AvgPool2d", "megengine.AvgPool2d", "megengine.Sequential", "megengine.Sequential", "megengine.Sequential", "shufflenet_v2.ShuffleNetV2._initialize_weights", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "frelu_light.FReLU", "len", "range", "megengine.Conv2d", "megengine.Conv2d", "megengine.Conv2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "megengine.BatchNorm2d", "frelu_light.FReLU", "megengine.Dropout", "megengine.Dropout", "megengine.Dropout", "megengine.Linear", "megengine.Linear", "megengine.Linear", "shufflenet_v2.ShuffleNetV2.features.append", "shufflenet_v2.ShuffleNetV2.features.append", "shufflenet_v2.ShuffleV2Block", "shufflenet_v2.ShuffleV2Block"], "methods", ["home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.__init__", "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "input_size", "=", "224", ",", "num_classes", "=", "1000", ",", "model_size", "=", "\"1.5x\"", ")", ":", "\n", "        ", "super", "(", "ShuffleNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "stage_repeats", "=", "[", "4", ",", "8", ",", "4", "]", "\n", "self", ".", "model_size", "=", "model_size", "\n", "if", "model_size", "==", "\"0.5x\"", ":", "\n", "            ", "self", ".", "stage_out_channels", "=", "[", "-", "1", ",", "24", ",", "48", ",", "96", ",", "192", ",", "1024", "]", "\n", "", "elif", "model_size", "==", "\"1.0x\"", ":", "\n", "            ", "self", ".", "stage_out_channels", "=", "[", "-", "1", ",", "24", ",", "116", ",", "232", ",", "464", ",", "1024", "]", "\n", "", "elif", "model_size", "==", "\"1.5x\"", ":", "\n", "            ", "self", ".", "stage_out_channels", "=", "[", "-", "1", ",", "24", ",", "176", ",", "352", ",", "704", ",", "1024", "]", "\n", "", "elif", "model_size", "==", "\"2.0x\"", ":", "\n", "            ", "self", ".", "stage_out_channels", "=", "[", "-", "1", ",", "24", ",", "244", ",", "488", ",", "976", ",", "2048", "]", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n", "# building first layer", "\n", "", "input_channel", "=", "self", ".", "stage_out_channels", "[", "1", "]", "\n", "self", ".", "first_conv", "=", "M", ".", "Sequential", "(", "\n", "M", ".", "Conv2d", "(", "3", ",", "input_channel", ",", "3", ",", "2", ",", "1", ",", "bias", "=", "False", ")", ",", "M", ".", "BatchNorm2d", "(", "input_channel", ")", ",", "FReLU", "(", "input_channel", ")", ",", "\n", ")", "\n", "\n", "self", ".", "maxpool", "=", "M", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "features", "=", "[", "]", "\n", "for", "idxstage", "in", "range", "(", "len", "(", "self", ".", "stage_repeats", ")", ")", ":", "\n", "            ", "numrepeat", "=", "self", ".", "stage_repeats", "[", "idxstage", "]", "\n", "output_channel", "=", "self", ".", "stage_out_channels", "[", "idxstage", "+", "2", "]", "\n", "\n", "for", "i", "in", "range", "(", "numrepeat", ")", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "self", ".", "features", ".", "append", "(", "\n", "ShuffleV2Block", "(", "\n", "input_channel", ",", "output_channel", ",", "mid_channels", "=", "output_channel", "//", "2", ",", "ksize", "=", "3", ",", "stride", "=", "2", ",", "\n", ")", "\n", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "features", ".", "append", "(", "\n", "ShuffleV2Block", "(", "\n", "input_channel", "//", "2", ",", "output_channel", ",", "mid_channels", "=", "output_channel", "//", "2", ",", "ksize", "=", "3", ",", "stride", "=", "1", ",", "\n", ")", "\n", ")", "\n", "\n", "", "input_channel", "=", "output_channel", "\n", "\n", "", "", "self", ".", "features", "=", "M", ".", "Sequential", "(", "*", "self", ".", "features", ")", "\n", "\n", "self", ".", "conv_last", "=", "M", ".", "Sequential", "(", "\n", "M", ".", "Conv2d", "(", "input_channel", ",", "self", ".", "stage_out_channels", "[", "-", "1", "]", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "M", ".", "BatchNorm2d", "(", "self", ".", "stage_out_channels", "[", "-", "1", "]", ")", ",", "\n", "FReLU", "(", "self", ".", "stage_out_channels", "[", "-", "1", "]", ")", ",", "\n", ")", "\n", "self", ".", "globalpool", "=", "M", ".", "AvgPool2d", "(", "7", ")", "\n", "if", "self", ".", "model_size", "==", "\"2.0x\"", ":", "\n", "            ", "self", ".", "dropout", "=", "M", ".", "Dropout", "(", "0.2", ")", "\n", "", "self", ".", "classifier", "=", "M", ".", "Sequential", "(", "M", ".", "Linear", "(", "self", ".", "stage_out_channels", "[", "-", "1", "]", ",", "num_classes", ",", "bias", "=", "False", ")", ")", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2.forward": [[163, 175], ["shufflenet_v2.ShuffleNetV2.first_conv", "shufflenet_v2.ShuffleNetV2.maxpool", "shufflenet_v2.ShuffleNetV2.features", "shufflenet_v2.ShuffleNetV2.conv_last", "shufflenet_v2.ShuffleNetV2.globalpool", "shufflenet_v2.ShuffleNetV2.reshape", "shufflenet_v2.ShuffleNetV2.classifier", "shufflenet_v2.ShuffleNetV2.dropout"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "first_conv", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_last", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "globalpool", "(", "x", ")", "\n", "if", "self", ".", "model_size", "==", "\"2.0x\"", ":", "\n", "            ", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "self", ".", "stage_out_channels", "[", "-", "1", "]", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.ShuffleNetV2._initialize_weights": [[176, 199], ["shufflenet_v2.ShuffleNetV2.named_modules", "isinstance", "isinstance", "megengine.init.normal_", "megengine.init.normal_", "megengine.init.normal_", "megengine.init.normal_", "megengine.init.normal_", "megengine.init.normal_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "isinstance", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "isinstance", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.normal_", "megengine.init.normal_", "megengine.init.normal_", "megengine.init.fill_", "megengine.init.fill_", "megengine.init.fill_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "name", ",", "m", "in", "self", ".", "named_modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "M", ".", "Conv2d", ")", ":", "\n", "                ", "if", "\"first\"", "in", "name", ":", "\n", "                    ", "M", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "", "else", ":", "\n", "                    ", "M", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "1.0", "/", "m", ".", "weight", ".", "shape", "[", "1", "]", ")", "\n", "", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "M", ".", "init", ".", "fill_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "M", ".", "BatchNorm2d", ")", ":", "\n", "                ", "M", ".", "init", ".", "fill_", "(", "m", ".", "weight", ",", "1", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "M", ".", "init", ".", "fill_", "(", "m", ".", "bias", ",", "0.0001", ")", "\n", "", "M", ".", "init", ".", "fill_", "(", "m", ".", "running_mean", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "M", ".", "BatchNorm1d", ")", ":", "\n", "                ", "M", ".", "init", ".", "fill_", "(", "m", ".", "weight", ",", "1", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "M", ".", "init", ".", "fill_", "(", "m", ".", "bias", ",", "0.0001", ")", "\n", "", "M", ".", "init", ".", "fill_", "(", "m", ".", "running_mean", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "M", ".", "Linear", ")", ":", "\n", "                ", "M", ".", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "0.01", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "M", ".", "init", ".", "fill_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.megvii-model_FunnelAct.shufflenetv2.shufflenet_v2.shufflenet_v2_x0_5": [[202, 205], ["megengine.pretrained", "shufflenet_v2.ShuffleNetV2"], "function", ["None"], ["", "", "", "", "", "@", "hub", ".", "pretrained", "(", "\"https://data.megengine.org.cn/models/weights/frelu/shufflenetv2_0.5x.model\"", ")", "\n", "def", "shufflenet_v2_x0_5", "(", "num_classes", "=", "1000", ")", ":", "\n", "    ", "return", "ShuffleNetV2", "(", "num_classes", "=", "num_classes", ",", "model_size", "=", "\"0.5x\"", ")", "\n", "\n"]]}