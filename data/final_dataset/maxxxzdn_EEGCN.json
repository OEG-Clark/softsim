{"home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.Conv2dWithConstraint.__init__": [[8, 11], ["torch.nn.Conv2d.__init__"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "max_norm", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "max_norm", "=", "max_norm", "\n", "super", "(", "Conv2dWithConstraint", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.Conv2dWithConstraint.forward": [[12, 17], ["torch.renorm", "torch.renorm", "torch.renorm", "torch.renorm", "super().forward"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Identity.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "weight", ".", "data", "=", "torch", ".", "renorm", "(", "\n", "self", ".", "weight", ".", "data", ",", "p", "=", "2", ",", "dim", "=", "0", ",", "maxnorm", "=", "self", ".", "max_norm", "\n", ")", "\n", "return", "super", "(", "Conv2dWithConstraint", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EEGNet.__init__": [[19, 105], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "baselines.EEGNet.model.add_module", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "baselines.Conv2dWithConstraint", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ELU", "torch.nn.ELU", "pool_class", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.ELU", "torch.nn.ELU", "pool_class", "torch.nn.Dropout", "torch.nn.Dropout"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "EEGNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "kernel_length", "=", "61", "\n", "in_chans", "=", "61", "\n", "input_time_length", "=", "100", "\n", "F1", "=", "args", ".", "F1", "#8", "\n", "D", "=", "args", ".", "D", "#2", "\n", "self", ".", "F2", "=", "F1", "*", "D", "\n", "drop_prob", "=", "args", ".", "p_dropout", "#0.25", "\n", "\n", "pool_class", "=", "nn", ".", "AvgPool2d", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"conv_temporal\"", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "1", ",", "\n", "F1", ",", "\n", "(", "1", ",", "kernel_length", ")", ",", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "padding", "=", "(", "0", ",", "kernel_length", "//", "2", ")", ",", "\n", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"bnorm_temporal\"", ",", "\n", "nn", ".", "BatchNorm2d", "(", "F1", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1e-3", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"conv_spatial\"", ",", "\n", "Conv2dWithConstraint", "(", "\n", "F1", ",", "\n", "F1", "*", "D", ",", "\n", "(", "in_chans", ",", "1", ")", ",", "\n", "max_norm", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "groups", "=", "F1", ",", "\n", "padding", "=", "(", "0", ",", "0", ")", ",", "\n", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"bnorm_1\"", ",", "\n", "nn", ".", "BatchNorm2d", "(", "\n", "F1", "*", "D", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1e-3", "\n", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\"elu_1\"", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"pool_1\"", ",", "pool_class", "(", "kernel_size", "=", "(", "1", ",", "4", ")", ",", "stride", "=", "(", "1", ",", "4", ")", ")", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\"drop_1\"", ",", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"conv_separable_depth\"", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "F1", "*", "D", ",", "\n", "F1", "*", "D", ",", "\n", "(", "1", ",", "16", ")", ",", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "groups", "=", "F1", "*", "D", ",", "\n", "padding", "=", "(", "0", ",", "16", "//", "2", ")", ",", "\n", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"conv_separable_point\"", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "F1", "*", "D", ",", "\n", "F1", "*", "D", ",", "\n", "(", "1", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "padding", "=", "(", "0", ",", "0", ")", ",", "\n", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"bnorm_2\"", ",", "\n", "nn", ".", "BatchNorm2d", "(", "F1", "*", "D", ",", "momentum", "=", "0.01", ",", "affine", "=", "True", ",", "eps", "=", "1e-3", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\"elu_2\"", ",", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"pool_2\"", ",", "pool_class", "(", "kernel_size", "=", "(", "1", ",", "8", ")", ",", "stride", "=", "(", "1", ",", "8", ")", ")", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\"drop_2\"", ",", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "F2", "*", "(", "100", "//", "32", ")", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EEGNet.forward": [[106, 113], ["baselines.EEGNet.model().view", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "baselines.EEGNet.model", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "baselines.EEGNet.fc", "baselines.EEGNet.fc", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# Layer 1", "\n", "        ", "x", "=", "self", ".", "model", "(", "x", ")", ".", "view", "(", "-", "1", ",", "self", ".", "F2", "*", "(", "100", "//", "32", ")", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "torch", ".", "sigmoid", "(", "self", ".", "fc", "(", "x", ")", ")", ",", "torch", ".", "zeros", "(", "10", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "sigmoid", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EEGNet.__str__": [[114, 116], ["None"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"EEGNet\"", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.shGCN.__init__": [[118, 139], ["super().__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Linear", "torch.nn.Linear", "gnn.GraphConv", "torch.nn.BatchNorm1d", "torch.nn.BatchNorm1d", "baselines.Expression", "globPool", "baselines.Expression", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.log", "torch.log", "torch.log", "torch.log", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "shGCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "conv_nonlin", "=", "lambda", "x", ":", "x", "*", "x", "\n", "pool_nonlin", "=", "lambda", "x", ":", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "x", ",", "min", "=", "1e-6", ")", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Conv1d", "(", "\n", "1", ",", "\n", "args", ".", "d_latent", ",", "\n", "args", ".", "kernel_size", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "args", ".", "kernel_size", "//", "2", "\n", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "100", ",", "1", ")", "\n", "self", ".", "processor", "=", "gnn", ".", "GraphConv", "(", "args", ".", "d_latent", ",", "args", ".", "d_hidden", ")", "\n", "self", ".", "bnorm", "=", "nn", ".", "BatchNorm1d", "(", "\n", "args", ".", "d_hidden", ",", "momentum", "=", "0.1", ",", "affine", "=", "True", "\n", ")", "\n", "self", ".", "conv_nonlin", "=", "Expression", "(", "conv_nonlin", ")", "\n", "self", ".", "aggregator", "=", "globPool", "(", "args", ".", "aggregate", ")", "\n", "self", ".", "pool_nonlin", "=", "Expression", "(", "pool_nonlin", ")", "\n", "self", ".", "drop", "=", "nn", ".", "Dropout", "(", "p", "=", "args", ".", "p_dropout", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "args", ".", "d_hidden", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.shGCN.forward": [[140, 154], ["baselines.shGCN.encoder", "baselines.shGCN.fc1().squeeze", "baselines.shGCN.processor", "baselines.shGCN.bnorm", "baselines.shGCN.conv_nonlin", "baselines.shGCN.aggregator", "baselines.shGCN.pool_nonlin", "baselines.shGCN.drop", "baselines.shGCN.fc2", "baselines.shGCN.unsqueeze", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "baselines.shGCN.fc1", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ",", "edge_weight", "=", "None", ",", "batch", "=", "None", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ".", "unsqueeze", "(", "1", ")", ")", "\n", "x", "=", "self", ".", "fc1", "(", "x", ")", ".", "squeeze", "(", ")", "\n", "x", "=", "self", ".", "processor", "(", "x", ",", "edge_index", ")", "\n", "x", "=", "self", ".", "bnorm", "(", "x", ")", "\n", "x", "=", "self", ".", "conv_nonlin", "(", "x", ")", "\n", "x", ",", "grads", "=", "self", ".", "aggregator", "(", "x", ",", "batch", ")", "\n", "x", "=", "self", ".", "pool_nonlin", "(", "x", ")", "\n", "x", "=", "self", ".", "drop", "(", "x", ")", "\n", "y", "=", "self", ".", "fc2", "(", "x", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "torch", ".", "sigmoid", "(", "y", ")", ",", "grads", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "sigmoid", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.Expression.__init__": [[157, 160], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "expression_fn", ")", ":", "\n", "        ", "super", "(", "Expression", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "expression_fn", "=", "expression_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.Expression.forward": [[161, 163], ["baselines.Expression.expression_fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "x", ")", ":", "\n", "        ", "return", "self", ".", "expression_fn", "(", "*", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.ShallowNet.__init__": [[165, 223], ["torch.nn.Module.__init__", "int", "torch.nn.Sequential", "torch.nn.Sequential", "baselines.ShallowNet.model.add_module", "baselines.ShallowNet.model.add_module", "baselines.ShallowNet.model.add_module", "baselines.ShallowNet.model.add_module", "baselines.ShallowNet.model.add_module", "baselines.ShallowNet.model.add_module", "baselines.ShallowNet.model.add_module", "torch.nn.Linear", "torch.nn.Linear", "torch.log", "torch.log", "torch.log", "torch.log", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "baselines.Expression", "pool_class", "baselines.Expression", "torch.nn.Dropout", "torch.nn.Dropout", "numpy.ceil", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "ShallowNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_chans", "=", "61", "\n", "input_time_length", "=", "100", "\n", "\n", "n_filters_time", "=", "args", ".", "n_filters_time", "#40", "\n", "self", ".", "n_filters_spat", "=", "args", ".", "n_filters_spat", "#40", "\n", "filter_time_length", "=", "args", ".", "filter_time_length", "#25", "\n", "pool_time_length", "=", "args", ".", "pool_time_length", "#75", "\n", "pool_time_stride", "=", "args", ".", "pool_time_stride", "#15", "\n", "drop_prob", "=", "args", ".", "p_dropout", "#0.5", "\n", "batch_norm_alpha", "=", "0.1", "\n", "\n", "self", ".", "out_dim", "=", "int", "(", "self", ".", "n_filters_spat", "*", "np", ".", "ceil", "(", "(", "(", "input_time_length", "-", "filter_time_length", "+", "1", ")", "-", "pool_time_length", "+", "1", ")", "/", "pool_time_stride", ")", ")", "\n", "\n", "conv_nonlin", "=", "lambda", "x", ":", "x", "*", "x", "\n", "pool_nonlin", "=", "lambda", "x", ":", "torch", ".", "log", "(", "torch", ".", "clamp", "(", "x", ",", "min", "=", "1e-6", ")", ")", "\n", "pool_class", "=", "nn", ".", "AvgPool2d", "\n", "\n", "self", ".", "model", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"conv_time\"", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "1", ",", "\n", "n_filters_time", ",", "\n", "(", "filter_time_length", ",", "1", ")", ",", "\n", "stride", "=", "1", ",", "\n", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"conv_spat\"", ",", "\n", "nn", ".", "Conv2d", "(", "\n", "n_filters_time", ",", "\n", "self", ".", "n_filters_spat", ",", "\n", "(", "1", ",", "in_chans", ")", ",", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"bnorm\"", ",", "\n", "nn", ".", "BatchNorm2d", "(", "\n", "self", ".", "n_filters_spat", ",", "momentum", "=", "batch_norm_alpha", ",", "affine", "=", "True", "\n", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\"conv_nonlin\"", ",", "Expression", "(", "conv_nonlin", ")", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\n", "\"pool\"", ",", "\n", "pool_class", "(", "\n", "kernel_size", "=", "(", "pool_time_length", ",", "1", ")", ",", "\n", "stride", "=", "(", "pool_time_stride", ",", "1", ")", ",", "\n", ")", ",", "\n", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\"pool_nonlin\"", ",", "Expression", "(", "pool_nonlin", ")", ")", "\n", "self", ".", "model", ".", "add_module", "(", "\"drop\"", ",", "nn", ".", "Dropout", "(", "p", "=", "drop_prob", ")", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "self", ".", "out_dim", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.ShallowNet.forward": [[224, 230], ["baselines.ShallowNet.model().view", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "baselines.ShallowNet.model", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "baselines.ShallowNet.fc", "baselines.ShallowNet.fc", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "model", "(", "x", ")", ".", "view", "(", "-", "1", ",", "self", ".", "out_dim", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "torch", ".", "sigmoid", "(", "self", ".", "fc", "(", "x", ")", ")", ",", "torch", ".", "zeros", "(", "10", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "sigmoid", "(", "self", ".", "fc", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.ShallowNet.__str__": [[231, 233], ["None"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"ShallowConvNet\"", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.Potential.__init__": [[235, 244], ["super().__init__", "torch.nn.Linear", "torch.nn.Linear", "LayerNorm", "torch.nn.Linear", "torch.nn.Linear", "LayerNorm", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Linear", "(", "2", "*", "in_dim", ",", "in_dim", ")", "\n", "self", ".", "lnorm1", "=", "LayerNorm", "(", "in_dim", ")", "\n", "#self.res1 = nn.Linear(in_dim, in_dim//2)", "\n", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "in_dim", ",", "in_dim", "//", "2", ")", "\n", "self", ".", "lnorm2", "=", "LayerNorm", "(", "in_dim", "//", "2", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "in_dim", "//", "2", ",", "10", ")", "\n", "self", ".", "res3", "=", "nn", ".", "Linear", "(", "in_dim", "//", "2", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.Potential.forward": [[245, 254], ["baselines.Potential.lnorm1", "baselines.Potential.lnorm2", "baselines.Potential.fc3", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "baselines.Potential.fc1", "baselines.Potential.fc2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "h", "=", "self", ".", "lnorm1", "(", "F", ".", "tanh", "(", "self", ".", "fc1", "(", "x", ")", ")", ")", "\n", "#x = self.res1(x)", "\n", "#h += x", "\n", "h", "=", "self", ".", "lnorm2", "(", "F", ".", "tanh", "(", "self", ".", "fc2", "(", "h", ")", ")", ")", "\n", "h", "=", "self", ".", "fc3", "(", "h", ")", "\n", "#x = self.res3(x)", "\n", "#h += x", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.__init__": [[256, 263], ["super().__init__", "baselines.Potential"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ",", "t", "=", "10", ",", "alpha", "=", "1e-1", ",", "reg_weight", "=", "1e-3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_dim", "=", "in_dim", "\n", "self", ".", "t", "=", "t", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "reg_weight", "=", "reg_weight", "\n", "self", ".", "potential", "=", "Potential", "(", "in_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.forward": [[264, 274], ["int", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "baselines.EquilibriumAgg.energy", "baselines.EquilibriumAgg.grad", "batch.max().item", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "batch.max"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.energy", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.grad"], ["", "def", "forward", "(", "self", ",", "x", ",", "batch", ")", ":", "\n", "        ", "bsize", "=", "int", "(", "batch", ".", "max", "(", ")", ".", "item", "(", ")", "+", "1", ")", "\n", "grads", "=", "torch", ".", "zeros", "(", "self", ".", "t", ",", "bsize", ",", "self", ".", "in_dim", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "y", "=", "torch", ".", "zeros", "(", "bsize", ",", "self", ".", "in_dim", ",", "requires_grad", "=", "True", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "t", ")", ":", "\n", "            ", "u", "=", "self", ".", "energy", "(", "x", ",", "y", ",", "bsize", ")", "\n", "grad", "=", "self", ".", "grad", "(", "u", ",", "y", ")", "\n", "y", "=", "y", "-", "self", ".", "alpha", "*", "grad", "\n", "grads", "[", "i", "]", "=", "grad", "\n", "", "return", "y", ",", "grads", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.grad": [[275, 283], ["torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.grad", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.grad", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.grad", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.grad"], ["", "def", "grad", "(", "self", ",", "u", ",", "y", ")", ":", "\n", "        ", "grads", "=", "torch", ".", "ones", "(", "u", ".", "shape", ",", "device", "=", "u", ".", "device", ")", "\n", "grad", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "u", ",", "\n", "y", ",", "\n", "create_graph", "=", "True", ",", "\n", "grad_outputs", "=", "grads", ")", "[", "0", "]", "\n", "return", "grad", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.energy": [[284, 291], ["baselines.EquilibriumAgg.residual", "x.view.view.view", "y.repeat().view.repeat().view.repeat().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "baselines.EquilibriumAgg.potential().square().mean().sum", "y.repeat().view.repeat().view.repeat", "baselines.EquilibriumAgg.potential().square().mean", "baselines.EquilibriumAgg.potential().square", "baselines.EquilibriumAgg.potential"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.residual"], ["", "def", "energy", "(", "self", ",", "x", ",", "y", ",", "bsize", ")", ":", "\n", "        ", "residual", "=", "self", ".", "residual", "(", "y", ")", "\n", "x", "=", "x", ".", "view", "(", "bsize", ",", "-", "1", ",", "self", ".", "in_dim", ")", "\n", "n_nodes", "=", "x", ".", "shape", "[", "1", "]", "\n", "y", "=", "y", ".", "repeat", "(", "1", ",", "n_nodes", ")", ".", "view", "(", "bsize", ",", "-", "1", ",", "self", ".", "in_dim", ")", "\n", "inputs", "=", "torch", ".", "cat", "(", "[", "x", ",", "y", "]", ",", "-", "1", ")", "\n", "return", "self", ".", "potential", "(", "inputs", ")", ".", "square", "(", ")", ".", "mean", "(", "dim", "=", "-", "1", ")", ".", "sum", "(", "-", "1", ")", "+", "residual", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.EquilibriumAgg.residual": [[292, 294], ["y.square().mean", "y.square"], "methods", ["None"], ["", "def", "residual", "(", "self", ",", "y", ")", ":", "\n", "        ", "return", "self", ".", "reg_weight", "*", "y", ".", "square", "(", ")", ".", "mean", "(", "-", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Encoder.__init__": [[10, 21], ["super().__init__", "model.get_activation", "torch.nn.ModuleList", "torch.nn.ModuleList", "model.Encoder.convs.append", "model.clones", "model.Encoder.convs.append", "torch.nn.Dropout", "torch.nn.Dropout", "model.get_pooling", "model.Block", "model.Block", "model.Block"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.get_activation", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.clones", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.get_pooling"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "get_activation", "(", "args", ")", "\n", "self", ".", "pooling", "=", "get_pooling", "(", "args", ")", "[", "0", "]", "\n", "self", ".", "ks", "=", "args", ".", "kernel_size", "\n", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "self", ".", "convs", ".", "append", "(", "Block", "(", "1", ",", "args", ".", "d_latent", ",", "self", ".", "ks", ",", "1", ",", "self", ".", "ks", "//", "2", ",", "args", ".", "norm_enc", ",", "False", ")", ")", "\n", "self", ".", "convs", "+=", "clones", "(", "Block", "(", "args", ".", "d_latent", ",", "args", ".", "d_latent", ",", "5", ",", "1", ",", "2", ",", "args", ".", "norm_enc", ",", "True", ")", ",", "args", ".", "n_cnn", "-", "2", ")", "\n", "self", ".", "convs", ".", "append", "(", "Block", "(", "args", ".", "d_latent", ",", "8", ",", "5", ",", "1", ",", "2", ",", "args", ".", "norm_enc", ",", "False", ")", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "args", ".", "p_dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Encoder.forward": [[22, 29], ["x.unsqueeze", "enumerate", "model.Encoder.dropout", "conv", "model.Encoder.pooling", "len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "z", "=", "x", ".", "unsqueeze", "(", "1", ")", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "convs", ")", ":", "\n", "            ", "z", "=", "conv", "(", "z", ")", "\n", "if", "i", "==", "0", "or", "i", "==", "(", "len", "(", "self", ".", "convs", ")", "-", "1", ")", ":", "\n", "                ", "z", "=", "self", ".", "pooling", "(", "z", ")", "\n", "", "", "return", "self", ".", "dropout", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Processor.__init__": [[31, 39], ["super().__init__", "model.get_activation", "torch.nn.ModuleList", "torch.nn.ModuleList", "model.Processor.gconvs.append", "model.clones", "model.Processor.gconvs.append", "torch.nn.Dropout", "torch.nn.Dropout", "model.GBlock", "model.GBlock", "model.GBlock"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.get_activation", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.clones"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Processor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "get_activation", "(", "args", ")", "\n", "self", ".", "gconvs", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "self", ".", "gconvs", ".", "append", "(", "GBlock", "(", "32", ",", "args", ".", "d_hidden", ",", "args", ".", "norm_proc", ",", "False", ")", ")", "\n", "self", ".", "gconvs", "+=", "clones", "(", "GBlock", "(", "args", ".", "d_hidden", ",", "args", ".", "d_hidden", ",", "args", ".", "norm_proc", ",", "True", ")", ",", "args", ".", "n_mp", "-", "2", ")", "\n", "self", ".", "gconvs", ".", "append", "(", "GBlock", "(", "args", ".", "d_hidden", ",", "args", ".", "d_hidden", ",", "args", ".", "norm_proc", ",", "False", ")", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "args", ".", "p_dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Processor.forward": [[40, 44], ["model.Processor.dropout", "gconv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "z", ",", "edge_index", ",", "edge_weight", ",", "batch", ")", ":", "\n", "        ", "for", "gconv", "in", "self", ".", "gconvs", ":", "\n", "            ", "z", "=", "gconv", "(", "z", ",", "edge_index", ",", "edge_weight", ",", "batch", ")", "\n", "", "return", "self", ".", "dropout", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Classifier.__init__": [[46, 54], ["super().__init__", "model.get_activation", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.LayerNorm", "torch.nn.LayerNorm", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.get_activation"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "Classifier", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "activation", "=", "get_activation", "(", "args", ")", "\n", "self", ".", "mlp", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "args", ".", "d_hidden", ",", "args", ".", "d_hidden", "//", "2", ")", ",", "\n", "nn", ".", "LayerNorm", "(", "args", ".", "d_hidden", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "args", ".", "d_hidden", "//", "2", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Classifier.forward": [[55, 58], ["model.Classifier.mlp", "model.Classifier.linear"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "h", ")", ":", "\n", "        ", "h", "=", "self", ".", "mlp", "(", "h", ")", "\n", "return", "self", ".", "linear", "(", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.GCN.__init__": [[60, 72], ["super().__init__", "model.Classifier", "model.Encoder", "model.Identity", "model.Processor", "model.Identity", "EquilibriumAgg", "model.globPool"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "GCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# 1D Convolutions to extract features from a signal                    ", "\n", "self", ".", "encoder", "=", "Encoder", "(", "args", ")", "if", "args", ".", "n_cnn", ">", "0", "else", "Identity", "(", ")", "\n", "# Graph Convolution Networks", "\n", "self", ".", "processor", "=", "Processor", "(", "args", ")", "if", "args", ".", "n_mp", ">", "0", "else", "Identity", "(", ")", "\n", "if", "args", ".", "aggregate", "==", "'eq'", ":", "\n", "            ", "self", ".", "aggregator", "=", "EquilibriumAgg", "(", "args", ".", "d_hidden", ",", "t", "=", "10", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "aggregator", "=", "globPool", "(", "args", ".", "aggregate", ")", "\n", "# MLP to make a prediction  ", "\n", "", "self", ".", "classifier", "=", "Classifier", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.GCN.forward": [[73, 82], ["model.GCN.encoder().view", "model.GCN.processor", "model.GCN.aggregator", "model.GCN.classifier", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "model.GCN.encoder", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ",", "edge_weight", "=", "None", ",", "batch", "=", "None", ")", ":", "\n", "        ", "z", "=", "self", ".", "encoder", "(", "x", ")", ".", "view", "(", "x", ".", "shape", "[", "0", "]", ",", "-", "1", ")", "\n", "h", "=", "self", ".", "processor", "(", "z", ",", "edge_index", ",", "edge_weight", ",", "batch", ")", "\n", "h", ",", "grads", "=", "self", ".", "aggregator", "(", "h", ",", "batch", ")", "\n", "y", "=", "self", ".", "classifier", "(", "h", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "torch", ".", "sigmoid", "(", "y", ")", ",", "grads", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "sigmoid", "(", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.LayerNorm.__init__": [[111, 116], ["torch.nn.Module.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["def", "__init__", "(", "self", ",", "features", ",", "eps", "=", "1e-6", ")", ":", "\n", "        ", "super", "(", "LayerNorm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "a_2", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "features", ")", ")", "\n", "self", ".", "b_2", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "features", ")", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.LayerNorm.forward": [[117, 121], ["x.mean", "x.std"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "mean", "=", "x", ".", "mean", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "std", "=", "x", ".", "std", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "return", "self", ".", "a_2", "*", "(", "x", "-", "mean", ")", "/", "(", "std", "+", "self", ".", "eps", ")", "+", "self", ".", "b_2", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.LayerNorm.backward": [[122, 124], ["None"], "methods", ["None"], ["", "def", "backward", "(", "self", ",", "y", ",", "mean", ",", "std", ")", ":", "\n", "        ", "return", "(", "y", "-", "self", ".", "b_2", ")", "*", "(", "std", "+", "self", ".", "eps", ")", "/", "self", ".", "a_2", "+", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Concatenate.__init__": [[126, 129], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_dim", "=", "in_dim", "\n", "", "def", "forward", "(", "self", ",", "input", ")", ":", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Concatenate.forward": [[129, 131], ["input.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "view", "(", "-", "1", ",", "61", "*", "self", ".", "in_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Block.__init__": [[133, 143], ["torch.nn.Module.__init__", "torch.nn.Conv1d", "torch.nn.Conv1d", "norm_layer", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ",", "norm", ",", "skipcon", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "skipcon", "=", "skipcon", "\n", "if", "norm", ":", "\n", "            ", "norm_layer", "=", "nn", ".", "BatchNorm1d", "\n", "", "else", ":", "\n", "            ", "norm_layer", "=", "Identity", "\n", "", "self", ".", "conv", "=", "nn", ".", "Conv1d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "self", ".", "norm", "=", "norm_layer", "(", "out_channels", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Block.forward": [[144, 153], ["model.Block.conv", "model.Block.norm", "model.Block.relu", "model.Block.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "self", ".", "conv", "(", "x", ")", "\n", "out", "=", "self", ".", "norm", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "if", "self", ".", "skipcon", ":", "\n", "            ", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.gBatchNorm.__init__": [[155, 157], ["torch_geometric.BatchNorm.__init__"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "in_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.gBatchNorm.forward": [[158, 160], ["model.gBatchNorm.module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "batch", ")", ":", "\n", "        ", "return", "self", ".", "module", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.GBlock.__init__": [[162, 176], ["torch.nn.Module.__init__", "torch_geometric.GraphConv", "norm_layer", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "norm", ",", "skipcon", ")", ":", "\n", "        ", "super", "(", "GBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "skipcon", "=", "skipcon", "\n", "if", "norm", "==", "'batch'", ":", "\n", "            ", "norm_layer", "=", "gBatchNorm", "\n", "", "elif", "norm", "==", "'graph'", ":", "\n", "            ", "norm_layer", "=", "gnn", ".", "GraphNorm", "\n", "", "elif", "norm", "==", "'layer'", ":", "\n", "            ", "norm_layer", "=", "gnn", ".", "LayerNorm", "\n", "", "else", ":", "\n", "            ", "norm_layer", "=", "Identity", "\n", "", "self", ".", "gconv", "=", "gnn", ".", "GraphConv", "(", "in_channels", ",", "out_channels", ")", "\n", "self", ".", "norm", "=", "norm_layer", "(", "out_channels", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.GBlock.forward": [[177, 186], ["model.GBlock.gconv", "model.GBlock.norm", "model.GBlock.relu", "model.GBlock.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ",", "edge_weight", ",", "batch", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "out", "=", "self", ".", "gconv", "(", "x", ",", "edge_index", ",", "edge_weight", ")", "\n", "out", "=", "self", ".", "norm", "(", "out", ",", "batch", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "if", "self", ".", "skipcon", ":", "\n", "            ", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Identity.__init__": [[188, 191], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "pass", "\n", "", "def", "forward", "(", "*", "args", ")", ":", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.Identity.forward": [[191, 193], ["None"], "methods", ["None"], ["", "def", "forward", "(", "*", "args", ")", ":", "\n", "        ", "return", "args", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__init__": [[195, 200], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "aggr", ")", ":", "\n", "        ", "if", "aggr", "==", "'max'", ":", "\n", "            ", "self", ".", "aggr", "=", "gnn", ".", "global_max_pool", "\n", "", "elif", "aggr", "==", "'mean'", ":", "\n", "            ", "self", ".", "aggr", "=", "gnn", ".", "global_mean_pool", "\n", "", "", "def", "__call__", "(", "self", ",", "x", ",", "batch", ")", ":", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.globPool.__call__": [[200, 202], ["model.globPool.aggr", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "x", ",", "batch", ")", ":", "\n", "        ", "return", "self", ".", "aggr", "(", "x", ",", "batch", ")", ",", "torch", ".", "zeros", "(", "1", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.get_activation": [[83, 92], ["None"], "function", ["None"], ["", "", "", "def", "get_activation", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "activation", "==", "'leaky_relu'", ":", "\n", "        ", "return", "F", ".", "leaky_relu", "\n", "", "elif", "args", ".", "activation", "==", "'relu'", ":", "\n", "        ", "return", "F", ".", "relu", "\n", "", "elif", "args", ".", "activation", "==", "'tanh'", ":", "\n", "        ", "return", "F", ".", "tanh", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.get_pooling": [[93, 100], ["torch.nn.MaxPool1d", "torch.nn.AvgPool1d"], "function", ["None"], ["", "", "def", "get_pooling", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "pooling", "==", "\"max\"", ":", "\n", "        ", "return", "nn", ".", "MaxPool1d", "(", "kernel_size", "=", "5", ")", ",", "gnn", ".", "global_max_pool", "\n", "", "elif", "args", ".", "pooling", "==", "\"avg\"", ":", "\n", "        ", "return", "nn", ".", "AvgPool1d", "(", "kernel_size", "=", "5", ")", ",", "gnn", ".", "global_mean_pool", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.clones": [[101, 107], ["torch.nn.ModuleList", "torch.nn.ModuleList", "copy.deepcopy", "range"], "function", ["None"], ["", "", "def", "clones", "(", "module", ",", "N", ",", "shared", "=", "False", ")", ":", "\n", "    ", "\"Produce N identical layers.\"", "\n", "if", "shared", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "N", "*", "[", "module", "]", ")", "\n", "", "else", ":", "\n", "        ", "return", "nn", ".", "ModuleList", "(", "[", "copy", ".", "deepcopy", "(", "module", ")", "for", "_", "in", "range", "(", "N", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.utils.init_weights": [[6, 10], ["isinstance", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "m.bias.data.fill_"], "function", ["None"], ["def", "init_weights", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "m", ".", "weight", ")", "\n", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.01", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.utils.train": [[11, 79], ["range", "model.load_state_dict", "model.eval", "utils.test", "model.train", "utils.test", "utils.test", "torch.load", "torch.load", "wandb.log", "str", "data.to.y.view().float().cuda", "optim.zero_grad", "model", "grads.square().mean", "loss.backward", "optim.step", "loss.item", "len", "torch.save", "torch.save", "wandb.log", "print", "str", "criterion", "wandb.log", "model.state_dict", "print", "model.__str__", "data.to.x.view().unsqueeze().cuda().float().permute", "str", "data.to.to", "data.to.y.view().float", "grads.square", "data.to.x.view().unsqueeze().cuda().float", "data.to.x.float", "data.to.x.view().unsqueeze().cuda().float", "data.to.y.view", "data.to.x.view().unsqueeze().cuda", "data.to.x.view().unsqueeze().cuda", "data.to.x.view().unsqueeze", "data.to.x.view().unsqueeze", "data.to.x.view", "data.to.x.view"], "function", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.utils.test", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.utils.train", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.utils.test", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.utils.test", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.model.LayerNorm.backward", "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.baselines.ShallowNet.__str__"], ["", "", "def", "train", "(", "model", ",", "optim", ",", "train_loader", ",", "val_loader", ",", "test_loader", ",", "criterion", ",", "epochs", ",", "wandb", ",", "key", ")", ":", "\n", "    ", "path", "=", "'models/'", "+", "model", ".", "__str__", "(", ")", "[", ":", "3", "]", "+", "str", "(", "key", ")", "+", "'.pt'", "\n", "best_val_accuracy", "=", "0", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "# loop over the dataset multiple times", "\n", "        ", "model", ".", "train", "(", ")", "\n", "running_loss", "=", "0.0", "\n", "for", "data", "in", "train_loader", ":", "\n", "            ", "if", "str", "(", "model", ")", "==", "'ShallowConvNet'", ":", "\n", "                ", "inputs", "=", "(", "data", ".", "x", ".", "view", "(", "-", "1", ",", "61", ",", "100", ")", ".", "unsqueeze", "(", "1", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", ",", ")", "\n", "", "elif", "str", "(", "model", ")", "==", "'EEGNet'", ":", "\n", "                ", "inputs", "=", "(", "data", ".", "x", ".", "view", "(", "-", "1", ",", "61", ",", "100", ")", ".", "unsqueeze", "(", "1", ")", ".", "cuda", "(", ")", ".", "float", "(", ")", ",", ")", "\n", "", "else", ":", "\n", "                ", "data", "=", "data", ".", "to", "(", "'cuda'", ")", "\n", "inputs", "=", "(", "data", ".", "x", ".", "float", "(", ")", ",", "data", ".", "edge_index", ",", "None", ",", "data", ".", "batch", ")", "\n", "\n", "", "labels_y", "=", "data", ".", "y", ".", "view", "(", "-", "1", ",", "3", ")", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "\n", "# zero the parameter gradients", "\n", "optim", ".", "zero_grad", "(", ")", "\n", "\n", "out_y", ",", "grads", "=", "model", "(", "*", "inputs", ")", "\n", "loss_aux", "=", "grads", ".", "square", "(", ")", ".", "mean", "(", ")", "\n", "loss", "=", "criterion", "(", "out_y", ",", "labels_y", ")", "+", "1e-3", "*", "loss_aux", "# Compute the loss.", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "optim", ".", "step", "(", ")", "\n", "\n", "running_loss", "+=", "loss", ".", "item", "(", ")", "\n", "\n", "", "running_loss", "=", "running_loss", "/", "len", "(", "train_loader", ")", "\n", "val_acc_s", ",", "val_acc_d", ",", "val_precision_s", ",", "val_precision_d", ",", "val_recall_s", ",", "val_recall_d", ",", "val_f1_s", ",", "val_f1_d", "=", "test", "(", "model", ",", "val_loader", ")", "\n", "train_acc_s", ",", "train_acc_d", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_", "=", "test", "(", "model", ",", "train_loader", ")", "\n", "\n", "if", "(", "val_acc_s", "*", "val_acc_d", ")", ">", "best_val_accuracy", ":", "\n", "            ", "best_val_accuracy", "=", "(", "val_acc_s", "*", "val_acc_d", ")", "\n", "try", ":", "\n", "                ", "wandb", ".", "log", "(", "{", "\"best val accuracy\"", ":", "best_val_accuracy", "}", ")", "\n", "", "except", ":", "\n", "                ", "None", "\n", "", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "path", ")", "\n", "\n", "", "try", ":", "\n", "            ", "wandb", ".", "log", "(", "{", "\"epoch\"", ":", "epoch", ",", "\"running loss\"", ":", "running_loss", ",", "\n", "\"train accuracy s\"", ":", "train_acc_s", ",", "\"train accuracy d\"", ":", "train_acc_d", ",", "\n", "\"val precision\"", ":", "(", "val_precision_s", "+", "val_precision_d", ")", "/", "2", ",", "\n", "\"val recall\"", ":", "(", "val_recall_s", "+", "val_recall_d", ")", "/", "2", ",", "\"val f1\"", ":", "(", "val_f1_d", "+", "val_f1_s", ")", "/", "2", ",", "\n", "\"val accuracy s\"", ":", "val_acc_s", ",", "\"val accuracy d\"", ":", "val_acc_d", ",", "\"val accuracy m\"", ":", "val_acc_s", "*", "val_acc_d", ",", "\n", "\"val precision d\"", ":", "val_precision_d", ",", "\n", "\"val recall d\"", ":", "val_recall_d", ",", "\"val f1 d\"", ":", "val_f1_d", ",", "\"val precision s\"", ":", "val_precision_s", ",", "\n", "\"val recall s\"", ":", "val_recall_s", ",", "\"val f1 s\"", ":", "val_f1_s", "}", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "f\"Epoch: {epoch}, \"", "\n", "f\"Running loss: {running_loss:.2f}, \"", "\n", "f\"Val accuracy: {((val_acc_s+val_acc_d)/2):.2f}, \"", "\n", "f\"Val F1-metric: {((val_f1_d + val_f1_s)/2):.2f}\"", ")", "\n", "\n", "", "", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "path", ")", ")", "\n", "model", ".", "eval", "(", ")", "\n", "test_acc_s", ",", "test_acc_d", ",", "test_precision_s", ",", "test_precision_d", ",", "test_recall_s", ",", "test_recall_d", ",", "test_f1_s", ",", "test_f1_d", "=", "test", "(", "model", ",", "test_loader", ")", "\n", "try", ":", "\n", "        ", "wandb", ".", "log", "(", "{", "\"test accuracy\"", ":", "(", "test_acc_s", "+", "test_acc_d", ")", "/", "2", ",", "\n", "\"test precision\"", ":", "(", "test_precision_s", "+", "test_precision_d", ")", "/", "2", ",", "\n", "\"test recall\"", ":", "(", "test_recall_s", "+", "test_recall_d", ")", "/", "2", ",", "\"test f1\"", ":", "(", "test_f1_d", "+", "test_f1_s", ")", "/", "2", ",", "\n", "\"test accuracy s\"", ":", "test_acc_s", ",", "\"test accuracy d\"", ":", "test_acc_d", ",", "\"test precision d\"", ":", "test_precision_d", ",", "\n", "\"test recall d\"", ":", "test_recall_d", ",", "\"test f1 d\"", ":", "test_f1_d", ",", "\"test precision s\"", ":", "test_precision_s", ",", "\n", "\"test recall s\"", ":", "test_recall_s", ",", "\"test f1 s\"", ":", "test_f1_s", "}", ")", "\n", "", "except", ":", "\n", "        ", "print", "(", "f\"Test accuracy: {((test_acc_s+test_acc_d)/2):.2f}, \"", "\n", "f\"Test F1-metric: {((test_f1_d + test_f1_s)/2):.2f}\"", ")", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.utils.apply_along_axis": [[82, 86], ["torch.stack().to", "torch.stack().to", "torch.stack", "torch.stack", "function", "torch.unbind", "torch.unbind"], "function", ["None"], ["", "", "def", "apply_along_axis", "(", "function", ",", "x", ",", "axis", ":", "int", "=", "0", ")", ":", "\n", "     ", "return", "torch", ".", "stack", "(", "[", "\n", "function", "(", "x_i", ")", "for", "x_i", "in", "torch", ".", "unbind", "(", "x", ",", "dim", "=", "axis", ")", "\n", "]", ",", "dim", "=", "axis", ")", ".", "to", "(", "x", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.utils.test": [[87, 125], ["model.eval", "model", "utils.apply_along_axis", "int", "int", "sklearn.metrics.precision_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "sklearn.metrics.recall_score", "len", "len", "len", "len", "len", "len", "str", "data.to.d.cuda", "data.to.s.cuda", "labels_d.cpu().detach().numpy", "numpy.round", "labels_s.cpu().detach().numpy", "numpy.round", "labels_d.cpu().detach().numpy", "numpy.round", "labels_s.cpu().detach().numpy", "numpy.round", "data.to.x.view().unsqueeze().cuda().permute", "str", "data.to.to", "apply_along_axis.cpu().detach().numpy", "pred_s.cpu().detach().numpy", "apply_along_axis.cpu().detach().numpy", "pred_s.cpu().detach().numpy", "data.to.x.view().unsqueeze().cuda", "data.to.x.float", "labels_d.cpu().detach", "labels_s.cpu().detach", "labels_d.cpu().detach", "labels_s.cpu().detach", "data.to.x.view().unsqueeze().cuda", "apply_along_axis.cpu().detach", "pred_s.cpu().detach", "apply_along_axis.cpu().detach", "pred_s.cpu().detach", "data.to.x.view().unsqueeze", "labels_d.cpu", "labels_s.cpu", "labels_d.cpu", "labels_s.cpu", "data.to.x.view().unsqueeze", "apply_along_axis.cpu", "pred_s.cpu", "apply_along_axis.cpu", "pred_s.cpu", "data.to.x.view", "data.to.x.view"], "function", ["home.repos.pwc.inspect_result.maxxxzdn_EEGCN.None.utils.apply_along_axis"], ["", "def", "test", "(", "model", ",", "loader", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "# set evaluation mode for the model", "\n", "correct_s", "=", "0", "\n", "correct_d", "=", "0", "\n", "precision_s", "=", "0", "\n", "precision_d", "=", "0", "\n", "recall_s", "=", "0", "\n", "recall_d", "=", "0", "\n", "\n", "for", "data", "in", "loader", ":", "# Iterate in batches over the training/test dataset.", "\n", "        ", "if", "str", "(", "model", ")", "==", "'ShallowConvNet'", ":", "\n", "            ", "inputs", "=", "(", "data", ".", "x", ".", "view", "(", "-", "1", ",", "61", ",", "100", ")", ".", "unsqueeze", "(", "1", ")", ".", "cuda", "(", ")", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", ",", ")", "\n", "", "elif", "str", "(", "model", ")", "==", "'EEGNet'", ":", "\n", "            ", "inputs", "=", "(", "data", ".", "x", ".", "view", "(", "-", "1", ",", "61", ",", "100", ")", ".", "unsqueeze", "(", "1", ")", ".", "cuda", "(", ")", ",", ")", "\n", "", "else", ":", "\n", "            ", "data", "=", "data", ".", "to", "(", "'cuda'", ")", "\n", "inputs", "=", "(", "data", ".", "x", ".", "float", "(", ")", ",", "data", ".", "edge_index", ",", "None", ",", "data", ".", "batch", ")", "\n", "", "labels_d", ",", "labels_s", "=", "data", ".", "d", ".", "cuda", "(", ")", ",", "data", ".", "s", ".", "cuda", "(", ")", "\n", "out_y", "=", "model", "(", "*", "inputs", ")", "\n", "pred_d", "=", "apply_along_axis", "(", "func", ",", "out_y", ">", "0.5", ")", "\n", "pred_s", "=", "(", "out_y", "[", ":", ",", "2", "]", ">", "0.5", ")", ".", "long", "(", ")", "\n", "correct_s", "+=", "int", "(", "(", "pred_s", "==", "labels_s", ")", ".", "sum", "(", ")", ")", "# Check against ground-truth labels.", "\n", "correct_d", "+=", "int", "(", "(", "pred_d", "==", "labels_d", ")", ".", "sum", "(", ")", ")", "# Check against ground-truth labels.", "\n", "precision_d", "+=", "precision_score", "(", "labels_d", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "np", ".", "round", "(", "pred_d", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", ",", "average", "=", "'macro'", ")", "\n", "precision_s", "+=", "precision_score", "(", "labels_s", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "np", ".", "round", "(", "pred_s", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", ",", "average", "=", "'macro'", ")", "\n", "recall_d", "+=", "recall_score", "(", "labels_d", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "np", ".", "round", "(", "pred_d", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", ",", "average", "=", "'macro'", ")", "\n", "recall_s", "+=", "recall_score", "(", "labels_s", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ",", "np", ".", "round", "(", "pred_s", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", ",", "average", "=", "'macro'", ")", "\n", "\n", "", "acc_d", "=", "correct_d", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "acc_s", "=", "correct_s", "/", "len", "(", "loader", ".", "dataset", ")", "\n", "precision_d", "=", "precision_d", "/", "len", "(", "loader", ")", "\n", "recall_d", "=", "recall_d", "/", "len", "(", "loader", ")", "\n", "f1_d", "=", "2", "*", "precision_d", "*", "recall_d", "/", "(", "precision_d", "+", "recall_d", ")", "\n", "precision_s", "=", "precision_s", "/", "len", "(", "loader", ")", "\n", "recall_s", "=", "recall_s", "/", "len", "(", "loader", ")", "\n", "f1_s", "=", "2", "*", "precision_s", "*", "recall_s", "/", "(", "precision_s", "+", "recall_s", ")", "\n", "\n", "return", "acc_s", ",", "acc_d", ",", "precision_s", ",", "precision_d", ",", "recall_s", ",", "recall_d", ",", "f1_s", ",", "f1_d", "# Derive ratio of correct predictions.", "\n", "\n"]]}