{"home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.FullyConnected.__init__": [[23, 32], ["zip", "layers.pop", "torch.Sequential.__init__", "layers.append", "layers.append", "layers.append", "torch.Linear", "torch.Linear", "torch.ELU", "torch.ELU"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.FullyConnected.append", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.FullyConnected.append", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.FullyConnected.append"], ["def", "__init__", "(", "self", ",", "sizes", ",", "final_activation", "=", "None", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "in_size", ",", "out_size", "in", "zip", "(", "sizes", ",", "sizes", "[", "1", ":", "]", ")", ":", "\n", "            ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "in_size", ",", "out_size", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ELU", "(", ")", ")", "\n", "", "layers", ".", "pop", "(", "-", "1", ")", "\n", "if", "final_activation", "is", "not", "None", ":", "\n", "            ", "layers", ".", "append", "(", "final_activation", ")", "\n", "", "super", "(", ")", ".", "__init__", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.FullyConnected.append": [[33, 36], ["isinstance", "tedvae_gpu.FullyConnected.add_module", "str", "len"], "methods", ["None"], ["", "def", "append", "(", "self", ",", "layer", ")", ":", "\n", "        ", "assert", "isinstance", "(", "layer", ",", "nn", ".", "Module", ")", "\n", "self", ".", "add_module", "(", "str", "(", "len", "(", "self", ")", ")", ",", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DistributionNet.get_class": [[42, 53], ["DistributionNet.__subclasses__", "ValueError", "cls.__name__.lower"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "get_class", "(", "dtype", ")", ":", "\n", "        ", "\"\"\"\n        Get a subclass by a prefix of its name, e.g.::\n\n            assert DistributionNet.get_class(\"bernoulli\") is BernoulliNet\n        \"\"\"", "\n", "for", "cls", "in", "DistributionNet", ".", "__subclasses__", "(", ")", ":", "\n", "            ", "if", "cls", ".", "__name__", ".", "lower", "(", ")", "==", "dtype", "+", "\"net\"", ":", "\n", "                ", "return", "cls", "\n", "", "", "raise", "ValueError", "(", "\"dtype not supported: {}\"", ".", "format", "(", "dtype", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.BernoulliNet.__init__": [[68, 72], ["torch.Module.__init__", "tedvae_gpu.FullyConnected", "len"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__"], ["def", "__init__", "(", "self", ",", "sizes", ")", ":", "\n", "        ", "assert", "len", "(", "sizes", ")", ">=", "1", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "FullyConnected", "(", "sizes", "+", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.BernoulliNet.forward": [[73, 76], ["tedvae_gpu.BernoulliNet.fc().squeeze().clamp", "tedvae_gpu.BernoulliNet.fc().squeeze", "tedvae_gpu.BernoulliNet.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "logits", "=", "self", ".", "fc", "(", "x", ")", ".", "squeeze", "(", "-", "1", ")", ".", "clamp", "(", "min", "=", "-", "10", ",", "max", "=", "10", ")", "\n", "return", "logits", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.BernoulliNet.make_dist": [[77, 80], ["pyro.Bernoulli", "pyro.Bernoulli"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "make_dist", "(", "logits", ")", ":", "\n", "        ", "return", "dist", ".", "Bernoulli", "(", "logits", "=", "logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.ExponentialNet.__init__": [[95, 99], ["torch.Module.__init__", "tedvae_gpu.FullyConnected", "len"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__"], ["def", "__init__", "(", "self", ",", "sizes", ")", ":", "\n", "        ", "assert", "len", "(", "sizes", ")", ">=", "1", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "FullyConnected", "(", "sizes", "+", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.ExponentialNet.forward": [[100, 104], ["torch.functional.softplus().clamp", "torch.functional.softplus().clamp", "torch.functional.softplus().clamp.reciprocal", "torch.functional.softplus", "torch.functional.softplus", "tedvae_gpu.ExponentialNet.fc().squeeze", "tedvae_gpu.ExponentialNet.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "scale", "=", "nn", ".", "functional", ".", "softplus", "(", "self", ".", "fc", "(", "x", ")", ".", "squeeze", "(", "-", "1", ")", ")", ".", "clamp", "(", "min", "=", "1e-3", ",", "max", "=", "1e6", ")", "\n", "rate", "=", "scale", ".", "reciprocal", "(", ")", "\n", "return", "rate", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.ExponentialNet.make_dist": [[105, 108], ["pyro.Exponential", "pyro.Exponential"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "make_dist", "(", "rate", ")", ":", "\n", "        ", "return", "dist", ".", "Exponential", "(", "rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.LaplaceNet.__init__": [[124, 128], ["torch.Module.__init__", "tedvae_gpu.FullyConnected", "len"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__"], ["def", "__init__", "(", "self", ",", "sizes", ")", ":", "\n", "        ", "assert", "len", "(", "sizes", ")", ">=", "1", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "FullyConnected", "(", "sizes", "+", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.LaplaceNet.forward": [[129, 134], ["tedvae_gpu.LaplaceNet.fc", "loc_scale[].clamp", "torch.functional.softplus().clamp", "torch.functional.softplus().clamp", "torch.functional.softplus", "torch.functional.softplus"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "loc_scale", "=", "self", ".", "fc", "(", "x", ")", "\n", "loc", "=", "loc_scale", "[", "...", ",", "0", "]", ".", "clamp", "(", "min", "=", "-", "1e6", ",", "max", "=", "1e6", ")", "\n", "scale", "=", "nn", ".", "functional", ".", "softplus", "(", "loc_scale", "[", "...", ",", "1", "]", ")", ".", "clamp", "(", "min", "=", "1e-3", ",", "max", "=", "1e6", ")", "\n", "return", "loc", ",", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.LaplaceNet.make_dist": [[135, 138], ["pyro.Laplace", "pyro.Laplace"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "make_dist", "(", "loc", ",", "scale", ")", ":", "\n", "        ", "return", "dist", ".", "Laplace", "(", "loc", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.NormalNet.__init__": [[154, 158], ["torch.Module.__init__", "tedvae_gpu.FullyConnected", "len"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__"], ["def", "__init__", "(", "self", ",", "sizes", ")", ":", "\n", "        ", "assert", "len", "(", "sizes", ")", ">=", "1", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "FullyConnected", "(", "sizes", "+", "[", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.NormalNet.forward": [[159, 164], ["tedvae_gpu.NormalNet.fc", "loc_scale[].clamp", "torch.functional.softplus().clamp", "torch.functional.softplus().clamp", "torch.functional.softplus", "torch.functional.softplus"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "loc_scale", "=", "self", ".", "fc", "(", "x", ")", "\n", "loc", "=", "loc_scale", "[", "...", ",", "0", "]", ".", "clamp", "(", "min", "=", "-", "1e6", ",", "max", "=", "1e6", ")", "\n", "scale", "=", "nn", ".", "functional", ".", "softplus", "(", "loc_scale", "[", "...", ",", "1", "]", ")", ".", "clamp", "(", "min", "=", "1e-3", ",", "max", "=", "1e6", ")", "\n", "return", "loc", ",", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.NormalNet.make_dist": [[165, 168], ["pyro.Normal", "pyro.Normal"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "make_dist", "(", "loc", ",", "scale", ")", ":", "\n", "        ", "return", "dist", ".", "Normal", "(", "loc", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.StudentTNet.__init__": [[184, 189], ["torch.Module.__init__", "tedvae_gpu.FullyConnected", "torch.Parameter", "torch.Parameter", "len", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__"], ["def", "__init__", "(", "self", ",", "sizes", ")", ":", "\n", "        ", "assert", "len", "(", "sizes", ")", ">=", "1", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "FullyConnected", "(", "sizes", "+", "[", "2", "]", ")", "\n", "self", ".", "df_unconstrained", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "0.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.StudentTNet.forward": [[190, 196], ["tedvae_gpu.StudentTNet.fc", "loc_scale[].clamp", "torch.functional.softplus().clamp", "torch.functional.softplus().clamp", "torch.functional.softplus().add().expand_as", "torch.functional.softplus().add().expand_as", "torch.functional.softplus", "torch.functional.softplus", "torch.functional.softplus().add", "torch.functional.softplus().add", "torch.functional.softplus", "torch.functional.softplus"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "loc_scale", "=", "self", ".", "fc", "(", "x", ")", "\n", "loc", "=", "loc_scale", "[", "...", ",", "0", "]", ".", "clamp", "(", "min", "=", "-", "1e6", ",", "max", "=", "1e6", ")", "\n", "scale", "=", "nn", ".", "functional", ".", "softplus", "(", "loc_scale", "[", "...", ",", "1", "]", ")", ".", "clamp", "(", "min", "=", "1e-3", ",", "max", "=", "1e6", ")", "\n", "df", "=", "nn", ".", "functional", ".", "softplus", "(", "self", ".", "df_unconstrained", ")", ".", "add", "(", "1", ")", ".", "expand_as", "(", "loc", ")", "\n", "return", "df", ",", "loc", ",", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.StudentTNet.make_dist": [[197, 200], ["pyro.StudentT", "pyro.StudentT"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "make_dist", "(", "df", ",", "loc", ",", "scale", ")", ":", "\n", "        ", "return", "dist", ".", "StudentT", "(", "df", ",", "loc", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DiagNormalNet.__init__": [[219, 224], ["torch.Module.__init__", "tedvae_gpu.FullyConnected", "len"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__"], ["def", "__init__", "(", "self", ",", "sizes", ")", ":", "\n", "        ", "assert", "len", "(", "sizes", ")", ">=", "2", "\n", "self", ".", "dim", "=", "sizes", "[", "-", "1", "]", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "FullyConnected", "(", "sizes", "[", ":", "-", "1", "]", "+", "[", "self", ".", "dim", "*", "2", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DiagNormalNet.forward": [[225, 230], ["tedvae_gpu.DiagNormalNet.fc", "loc_scale[].clamp", "torch.functional.softplus().add().clamp", "torch.functional.softplus().add().clamp", "torch.functional.softplus().add", "torch.functional.softplus().add", "torch.functional.softplus", "torch.functional.softplus"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "loc_scale", "=", "self", ".", "fc", "(", "x", ")", "\n", "loc", "=", "loc_scale", "[", "...", ",", ":", "self", ".", "dim", "]", ".", "clamp", "(", "min", "=", "-", "1e2", ",", "max", "=", "1e2", ")", "\n", "scale", "=", "nn", ".", "functional", ".", "softplus", "(", "loc_scale", "[", "...", ",", "self", ".", "dim", ":", "]", ")", ".", "add", "(", "1e-3", ")", ".", "clamp", "(", "max", "=", "1e2", ")", "\n", "return", "loc", ",", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DiagBernoulliNet.__init__": [[244, 249], ["torch.Module.__init__", "tedvae_gpu.FullyConnected", "len"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__"], ["def", "__init__", "(", "self", ",", "sizes", ")", ":", "\n", "        ", "assert", "len", "(", "sizes", ")", ">=", "2", "\n", "self", ".", "dim", "=", "sizes", "[", "-", "1", "]", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc", "=", "FullyConnected", "(", "sizes", "[", ":", "-", "1", "]", "+", "[", "self", ".", "dim", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DiagBernoulliNet.forward": [[250, 253], ["tedvae_gpu.DiagBernoulliNet.fc().squeeze().clamp", "tedvae_gpu.DiagBernoulliNet.fc().squeeze", "tedvae_gpu.DiagBernoulliNet.fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "logits", "=", "self", ".", "fc", "(", "x", ")", ".", "squeeze", "(", "-", "1", ")", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "11", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DiagBernoulliNet.make_dist": [[254, 257], ["pyro.Bernoulli", "pyro.Bernoulli"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "make_dist", "(", "logits", ")", ":", "\n", "        ", "return", "dist", ".", "Bernoulli", "(", "logits", "=", "logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.PreWhitener.__init__": [[263, 271], ["torch.Module.__init__", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "data.mean", "data.std", "tedvae_gpu.PreWhitener.register_buffer", "tedvae_gpu.PreWhitener.register_buffer", "data.std.reciprocal"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__"], ["def", "__init__", "(", "self", ",", "data", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "loc", "=", "data", ".", "mean", "(", "0", ")", "\n", "scale", "=", "data", ".", "std", "(", "0", ")", "\n", "scale", "[", "~", "(", "scale", ">", "0", ")", "]", "=", "1.", "\n", "self", ".", "register_buffer", "(", "\"loc\"", ",", "loc", ")", "\n", "self", ".", "register_buffer", "(", "\"inv_scale\"", ",", "scale", ".", "reciprocal", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.PreWhitener.forward": [[272, 274], ["None"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "return", "(", "data", "-", "self", ".", "loc", ")", "*", "self", ".", "inv_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Guide.__init__": [[295, 333], ["tedvae_gpu.DistributionNet.get_class", "pyro.nn.PyroModule.__init__", "tedvae_gpu.BernoulliNet", "tedvae_gpu.FullyConnected", "tedvae_gpu.DistributionNet.get_class", "tedvae_gpu.DistributionNet.get_class", "tedvae_gpu.FullyConnected", "tedvae_gpu.DiagNormalNet", "tedvae_gpu.FullyConnected", "tedvae_gpu.DiagNormalNet", "tedvae_gpu.FullyConnected", "tedvae_gpu.DiagNormalNet", "torch.ELU", "torch.ELU", "torch.ELU", "torch.ELU", "torch.ELU", "torch.ELU", "torch.ELU", "torch.ELU"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DistributionNet.get_class", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DistributionNet.get_class", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DistributionNet.get_class"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "latent_dim", "=", "config", "[", "\"latent_dim\"", "]", "\n", "self", ".", "latent_dim_t", "=", "config", "[", "\"latent_dim_t\"", "]", "\n", "self", ".", "latent_dim_y", "=", "config", "[", "\"latent_dim_y\"", "]", "\n", "\n", "OutcomeNet", "=", "DistributionNet", ".", "get_class", "(", "config", "[", "\"outcome_dist\"", "]", ")", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "# self.t_nn = BernoulliNet([config[\"feature_dim\"]])", "\n", "self", ".", "t_nn", "=", "BernoulliNet", "(", "[", "config", "[", "\"latent_dim\"", "]", "+", "config", "[", "\"latent_dim_t\"", "]", "]", ")", "\n", "\n", "# The y and z networks both follow an architecture where the first few", "\n", "# layers are shared for t in {0,1}, but the final layer is split", "\n", "# between the two t values.", "\n", "self", ".", "y_nn", "=", "FullyConnected", "(", "[", "config", "[", "\"latent_dim\"", "]", "+", "config", "[", "\"latent_dim_y\"", "]", "]", "+", "\n", "[", "config", "[", "\"hidden_dim\"", "]", "]", "*", "(", "config", "[", "\"num_layers\"", "]", "-", "1", ")", ",", "\n", "final_activation", "=", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "y0_nn", "=", "OutcomeNet", "(", "[", "config", "[", "\"hidden_dim\"", "]", "]", ")", "\n", "self", ".", "y1_nn", "=", "OutcomeNet", "(", "[", "config", "[", "\"hidden_dim\"", "]", "]", ")", "\n", "\n", "self", ".", "z_nn", "=", "FullyConnected", "(", "[", "config", "[", "\"feature_dim\"", "]", "]", "+", "\n", "[", "config", "[", "\"hidden_dim\"", "]", "]", "*", "(", "config", "[", "\"num_layers\"", "]", "-", "1", ")", ",", "\n", "final_activation", "=", "nn", ".", "ELU", "(", ")", ")", "\n", "\n", "\n", "self", ".", "z_out_nn", "=", "DiagNormalNet", "(", "[", "config", "[", "\"hidden_dim\"", "]", ",", "config", "[", "\"latent_dim\"", "]", "]", ")", "\n", "\n", "\n", "self", ".", "zt_nn", "=", "FullyConnected", "(", "[", "config", "[", "\"feature_dim\"", "]", "]", "+", "\n", "[", "config", "[", "\"hidden_dim\"", "]", "]", "*", "(", "config", "[", "\"num_layers\"", "]", "-", "1", ")", ",", "\n", "final_activation", "=", "nn", ".", "ELU", "(", ")", ")", "\n", "\n", "self", ".", "zt_out_nn", "=", "DiagNormalNet", "(", "[", "config", "[", "\"hidden_dim\"", "]", ",", "config", "[", "\"latent_dim_t\"", "]", "]", ")", "\n", "\n", "\n", "self", ".", "zy_nn", "=", "FullyConnected", "(", "[", "config", "[", "\"feature_dim\"", "]", "]", "+", "\n", "[", "config", "[", "\"hidden_dim\"", "]", "]", "*", "(", "config", "[", "\"num_layers\"", "]", "-", "1", ")", ",", "\n", "final_activation", "=", "nn", ".", "ELU", "(", ")", ")", "\n", "self", ".", "zy_out_nn", "=", "DiagNormalNet", "(", "[", "config", "[", "\"hidden_dim\"", "]", ",", "config", "[", "\"latent_dim_y\"", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Guide.forward": [[334, 348], ["x.size", "pyro.plate", "pyro.plate", "pyro.plate", "pyro.plate", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "tedvae_gpu.Guide.z_dist", "tedvae_gpu.Guide.zt_dist", "tedvae_gpu.Guide.zy_dist", "tedvae_gpu.Guide.t_dist", "tedvae_gpu.Guide.y_dist"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.z_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zt_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zy_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.t_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.y_dist"], ["", "def", "forward", "(", "self", ",", "x", ",", "t", "=", "None", ",", "y", "=", "None", ",", "size", "=", "None", ")", ":", "\n", "        ", "if", "size", "is", "None", ":", "\n", "            ", "size", "=", "x", ".", "size", "(", "0", ")", "\n", "", "with", "pyro", ".", "plate", "(", "\"data\"", ",", "size", ",", "subsample", "=", "x", ")", ":", "\n", "# The t and y sites are needed for prediction, and participate in", "\n", "# the auxiliary CEVAE loss. We mark them auxiliary to indicate they", "\n", "# do not correspond to latent variables during training.", "\n", "            ", "z", "=", "pyro", ".", "sample", "(", "\"z\"", ",", "self", ".", "z_dist", "(", "x", ")", ")", "\n", "zt", "=", "pyro", ".", "sample", "(", "\"zt\"", ",", "self", ".", "zt_dist", "(", "x", ")", ")", "\n", "zy", "=", "pyro", ".", "sample", "(", "\"zy\"", ",", "self", ".", "zy_dist", "(", "x", ")", ")", "\n", "\n", "t", "=", "pyro", ".", "sample", "(", "\"t\"", ",", "self", ".", "t_dist", "(", "z", ",", "zt", ")", ",", "obs", "=", "t", ",", "infer", "=", "{", "\"is_auxiliary\"", ":", "True", "}", ")", "\n", "\n", "y", "=", "pyro", ".", "sample", "(", "\"y\"", ",", "self", ".", "y_dist", "(", "t", ",", "z", ",", "zy", ")", ",", "obs", "=", "y", ",", "infer", "=", "{", "\"is_auxiliary\"", ":", "True", "}", ")", "\n", "# The z site participates only in the usual ELBO loss.", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Guide.z_mean": [[350, 356], ["pyro.plate", "pyro.plate", "pyro.plate", "pyro.plate", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "x.size", "tedvae_gpu.Guide.z_dist", "tedvae_gpu.Guide.zt_dist", "tedvae_gpu.Guide.zy_dist"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.z_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zt_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zy_dist"], ["", "", "def", "z_mean", "(", "self", ",", "x", ",", "t", "=", "None", ")", ":", "\n", "        ", "with", "pyro", ".", "plate", "(", "\"data\"", ",", "x", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "z", "=", "pyro", ".", "sample", "(", "\"z\"", ",", "self", ".", "z_dist", "(", "x", ")", ")", "\n", "zt", "=", "pyro", ".", "sample", "(", "\"zt\"", ",", "self", ".", "zt_dist", "(", "x", ")", ")", "\n", "zy", "=", "pyro", ".", "sample", "(", "\"zy\"", ",", "self", ".", "zy_dist", "(", "x", ")", ")", "\n", "", "return", "z", ",", "zt", ",", "zy", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Guide.t_dist": [[357, 361], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "tedvae_gpu.Guide.t_nn", "pyro.Bernoulli", "pyro.Bernoulli"], "methods", ["None"], ["", "def", "t_dist", "(", "self", ",", "z", ",", "zt", ")", ":", "\n", "        ", "input_concat", "=", "torch", ".", "cat", "(", "(", "z", ",", "zt", ")", ",", "-", "1", ")", "\n", "logits", ",", "=", "self", ".", "t_nn", "(", "input_concat", ")", "\n", "return", "dist", ".", "Bernoulli", "(", "logits", "=", "logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Guide.y_dist": [[362, 372], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "tedvae_gpu.Guide.y_nn", "tedvae_gpu.Guide.y0_nn", "tedvae_gpu.Guide.y1_nn", "t.bool.bool.bool", "tedvae_gpu.Guide.y0_nn.make_dist", "torch.where", "torch.where", "torch.where", "torch.where", "zip"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DiagBernoulliNet.make_dist"], ["", "def", "y_dist", "(", "self", ",", "t", ",", "z", ",", "zy", ")", ":", "\n", "# The first n-1 layers are identical for all t values.", "\n", "        ", "x", "=", "torch", ".", "cat", "(", "(", "z", ",", "zy", ")", ",", "-", "1", ")", "\n", "hidden", "=", "self", ".", "y_nn", "(", "x", ")", "\n", "# In the final layer params are not shared among t values.", "\n", "params0", "=", "self", ".", "y0_nn", "(", "hidden", ")", "\n", "params1", "=", "self", ".", "y1_nn", "(", "hidden", ")", "\n", "t", "=", "t", ".", "bool", "(", ")", "\n", "params", "=", "[", "torch", ".", "where", "(", "t", ",", "p1", ",", "p0", ")", "for", "p0", ",", "p1", "in", "zip", "(", "params0", ",", "params1", ")", "]", "\n", "return", "self", ".", "y0_nn", ".", "make_dist", "(", "*", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Guide.z_dist": [[373, 378], ["tedvae_gpu.Guide.z_nn", "tedvae_gpu.Guide.z_out_nn", "pyro.Normal().to_event", "pyro.Normal().to_event", "x.float", "pyro.Normal", "pyro.Normal"], "methods", ["None"], ["", "def", "z_dist", "(", "self", ",", "x", ")", ":", "\n", "# hidden = self.z_nn(x)", "\n", "        ", "hidden", "=", "self", ".", "z_nn", "(", "x", ".", "float", "(", ")", ")", "\n", "params", "=", "self", ".", "z_out_nn", "(", "hidden", ")", "\n", "return", "dist", ".", "Normal", "(", "*", "params", ")", ".", "to_event", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Guide.zt_dist": [[379, 383], ["tedvae_gpu.Guide.zt_nn", "tedvae_gpu.Guide.zt_out_nn", "pyro.Normal().to_event", "pyro.Normal().to_event", "x.float", "pyro.Normal", "pyro.Normal"], "methods", ["None"], ["", "def", "zt_dist", "(", "self", ",", "x", ")", ":", "\n", "        ", "hidden", "=", "self", ".", "zt_nn", "(", "x", ".", "float", "(", ")", ")", "\n", "params", "=", "self", ".", "zt_out_nn", "(", "hidden", ")", "\n", "return", "dist", ".", "Normal", "(", "*", "params", ")", ".", "to_event", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Guide.zy_dist": [[384, 388], ["tedvae_gpu.Guide.zy_nn", "tedvae_gpu.Guide.zy_out_nn", "pyro.Normal().to_event", "pyro.Normal().to_event", "x.float", "pyro.Normal", "pyro.Normal"], "methods", ["None"], ["", "def", "zy_dist", "(", "self", ",", "x", ")", ":", "\n", "        ", "hidden", "=", "self", ".", "zy_nn", "(", "x", ".", "float", "(", ")", ")", "\n", "params", "=", "self", ".", "zy_out_nn", "(", "hidden", ")", "\n", "return", "dist", ".", "Normal", "(", "*", "params", ")", ".", "to_event", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TraceCausalEffect_ELBO._differentiable_loss_particle": [[397, 414], ["guide_trace.copy", "super()._differentiable_loss_particle", "guide_trace.nodes.items", "pyro.infer.util.torch_item", "pyro.infer.util.torch_item"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TraceCausalEffect_ELBO._differentiable_loss_particle"], ["def", "_differentiable_loss_particle", "(", "self", ",", "model_trace", ",", "guide_trace", ")", ":", "\n", "# Construct -ELBO part.", "\n", "        ", "blocked_names", "=", "[", "name", "for", "name", ",", "site", "in", "guide_trace", ".", "nodes", ".", "items", "(", ")", "\n", "if", "site", "[", "\"type\"", "]", "==", "\"sample\"", "and", "site", "[", "\"is_observed\"", "]", "]", "\n", "blocked_guide_trace", "=", "guide_trace", ".", "copy", "(", ")", "\n", "for", "name", "in", "blocked_names", ":", "\n", "            ", "del", "blocked_guide_trace", ".", "nodes", "[", "name", "]", "\n", "", "loss", ",", "surrogate_loss", "=", "super", "(", ")", ".", "_differentiable_loss_particle", "(", "\n", "model_trace", ",", "blocked_guide_trace", ")", "\n", "\n", "# Add log q terms.", "\n", "for", "name", "in", "blocked_names", ":", "\n", "            ", "log_q", "=", "guide_trace", ".", "nodes", "[", "name", "]", "[", "\"log_prob_sum\"", "]", "\n", "loss", "=", "loss", "-", "100", "*", "torch_item", "(", "log_q", ")", "\n", "surrogate_loss", "=", "surrogate_loss", "-", "100", "*", "log_q", "\n", "\n", "", "return", "loss", ",", "surrogate_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TraceCausalEffect_ELBO.loss": [[415, 418], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "pyro.infer.util.torch_item", "pyro.infer.util.torch_item", "tedvae_gpu.TraceCausalEffect_ELBO.differentiable_loss"], "methods", ["None"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "loss", "(", "self", ",", "model", ",", "guide", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "torch_item", "(", "self", ".", "differentiable_loss", "(", "model", ",", "guide", ",", "*", "args", ",", "**", "kwargs", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.__init__": [[440, 461], ["pyro.nn.PyroModule.__init__", "tedvae_gpu.DiagNormalNet", "tedvae_gpu.DiagBernoulliNet", "tedvae_gpu.DistributionNet.get_class", "tedvae_gpu.DistributionNet.get_class", "tedvae_gpu.DistributionNet.get_class", "tedvae_gpu.BernoulliNet", "len", "len"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DistributionNet.get_class", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DistributionNet.get_class", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DistributionNet.get_class"], ["def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "self", ".", "latent_dim", "=", "config", "[", "\"latent_dim\"", "]", "\n", "self", ".", "latent_dim_t", "=", "config", "[", "\"latent_dim_t\"", "]", "\n", "self", ".", "latent_dim_y", "=", "config", "[", "\"latent_dim_y\"", "]", "\n", "self", ".", "binfeats", "=", "config", "[", "\"binary_dim\"", "]", "\n", "self", ".", "contfeats", "=", "config", "[", "\"continuous_dim\"", "]", "\n", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "x_nn", "=", "DiagNormalNet", "(", "[", "config", "[", "\"latent_dim\"", "]", "+", "config", "[", "\"latent_dim_t\"", "]", "+", "config", "[", "\"latent_dim_y\"", "]", "]", "+", "\n", "[", "config", "[", "\"hidden_dim\"", "]", "]", "*", "config", "[", "\"num_layers\"", "]", "+", "\n", "[", "len", "(", "config", "[", "\"continuous_dim\"", "]", ")", "]", ")", "\n", "self", ".", "x2_nn", "=", "DiagBernoulliNet", "(", "[", "config", "[", "\"latent_dim\"", "]", "+", "config", "[", "\"latent_dim_t\"", "]", "+", "config", "[", "\"latent_dim_y\"", "]", "]", "+", "\n", "[", "config", "[", "\"hidden_dim\"", "]", "]", "*", "config", "[", "\"num_layers\"", "]", "+", "\n", "[", "len", "(", "config", "[", "\"binary_dim\"", "]", ")", "]", ")", "\n", "OutcomeNet", "=", "DistributionNet", ".", "get_class", "(", "config", "[", "\"outcome_dist\"", "]", ")", "\n", "# The y network is split between the two t values.", "\n", "self", ".", "y0_nn", "=", "OutcomeNet", "(", "[", "config", "[", "\"latent_dim\"", "]", "+", "config", "[", "\"latent_dim_y\"", "]", "]", "+", "\n", "[", "config", "[", "\"hidden_dim\"", "]", "]", "*", "config", "[", "\"num_layers\"", "]", ")", "\n", "self", ".", "y1_nn", "=", "OutcomeNet", "(", "[", "config", "[", "\"latent_dim\"", "]", "+", "config", "[", "\"latent_dim_y\"", "]", "]", "+", "\n", "[", "config", "[", "\"hidden_dim\"", "]", "]", "*", "config", "[", "\"num_layers\"", "]", ")", "\n", "self", ".", "t_nn", "=", "BernoulliNet", "(", "[", "config", "[", "\"latent_dim\"", "]", "+", "config", "[", "\"latent_dim_t\"", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.forward": [[462, 479], ["torch.cat.size", "torch.cat.size", "pyro.plate", "pyro.plate", "pyro.plate", "pyro.plate", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "tedvae_gpu.Model.z_dist", "tedvae_gpu.Model.zt_dist", "tedvae_gpu.Model.zy_dist", "tedvae_gpu.Model.x_dist_binary", "tedvae_gpu.Model.x_dist_continuous", "tedvae_gpu.Model.t_dist", "tedvae_gpu.Model.y_dist"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.z_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zt_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zy_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.x_dist_binary", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.x_dist_continuous", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.t_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.y_dist"], ["", "def", "forward", "(", "self", ",", "x", ",", "t", "=", "None", ",", "y", "=", "None", ",", "size", "=", "None", ")", ":", "\n", "        ", "if", "size", "is", "None", ":", "\n", "            ", "size", "=", "x", ".", "size", "(", "0", ")", "\n", "", "with", "pyro", ".", "plate", "(", "\"data\"", ",", "size", ",", "subsample", "=", "x", ")", ":", "\n", "            ", "z", "=", "pyro", ".", "sample", "(", "\"z\"", ",", "self", ".", "z_dist", "(", ")", ")", "\n", "zt", "=", "pyro", ".", "sample", "(", "\"zt\"", ",", "self", ".", "zt_dist", "(", ")", ")", "\n", "zy", "=", "pyro", ".", "sample", "(", "\"zy\"", ",", "self", ".", "zy_dist", "(", ")", ")", "\n", "\n", "# x = pyro.sample(\"x\", self.x_dist(z, zt, zy), obs=x)", "\n", "x_binary", "=", "pyro", ".", "sample", "(", "\"x_bin\"", ",", "self", ".", "x_dist_binary", "(", "z", ",", "zt", ",", "zy", ")", ",", "obs", "=", "x", "[", ":", ",", "self", ".", "binfeats", "]", ")", "\n", "x_continuous", "=", "pyro", ".", "sample", "(", "\"x_cont\"", ",", "self", ".", "x_dist_continuous", "(", "z", ",", "zt", ",", "zy", ")", ",", "obs", "=", "x", "[", ":", ",", "self", ".", "contfeats", "]", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x_binary", ",", "x_continuous", ")", ",", "-", "1", ")", "\n", "# x = pyro.sample(\"x\", self.x_dist_binary(z, zt, zy), obs=x)", "\n", "t", "=", "pyro", ".", "sample", "(", "\"t\"", ",", "self", ".", "t_dist", "(", "z", ",", "zt", ")", ",", "obs", "=", "t", ")", "\n", "y", "=", "pyro", ".", "sample", "(", "\"y\"", ",", "self", ".", "y_dist", "(", "t", ",", "z", ",", "zy", ")", ",", "obs", "=", "y", ")", "\n", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.y_mean": [[480, 490], ["pyro.plate", "pyro.plate", "pyro.plate", "pyro.plate", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "pyro.sample", "pyro.sample", "pyro.sample", "pyro.sample", "tedvae_gpu.Model.y_dist", "torch.cat.size", "torch.cat.size", "tedvae_gpu.Model.z_dist", "tedvae_gpu.Model.zt_dist", "tedvae_gpu.Model.zy_dist", "tedvae_gpu.Model.x_dist_binary", "tedvae_gpu.Model.x_dist_continuous", "tedvae_gpu.Model.t_dist"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.y_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.z_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zt_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zy_dist", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.x_dist_binary", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.x_dist_continuous", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.t_dist"], ["", "def", "y_mean", "(", "self", ",", "x", ",", "t", "=", "None", ")", ":", "\n", "        ", "with", "pyro", ".", "plate", "(", "\"data\"", ",", "x", ".", "size", "(", "0", ")", ")", ":", "\n", "            ", "z", "=", "pyro", ".", "sample", "(", "\"z\"", ",", "self", ".", "z_dist", "(", ")", ")", "\n", "zt", "=", "pyro", ".", "sample", "(", "\"zt\"", ",", "self", ".", "zt_dist", "(", ")", ")", "\n", "zy", "=", "pyro", ".", "sample", "(", "\"zy\"", ",", "self", ".", "zy_dist", "(", ")", ")", "\n", "x_binary", "=", "pyro", ".", "sample", "(", "\"x_bin\"", ",", "self", ".", "x_dist_binary", "(", "z", ",", "zt", ",", "zy", ")", ",", "obs", "=", "x", "[", ":", ",", "self", ".", "binfeats", "]", ")", "\n", "x_continuous", "=", "pyro", ".", "sample", "(", "\"x_cont\"", ",", "self", ".", "x_dist_continuous", "(", "z", ",", "zt", ",", "zy", ")", ",", "obs", "=", "x", "[", ":", ",", "self", ".", "contfeats", "]", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x_binary", ",", "x_continuous", ")", ",", "-", "1", ")", "\n", "t", "=", "pyro", ".", "sample", "(", "\"t\"", ",", "self", ".", "t_dist", "(", "z", ",", "zt", ")", ",", "obs", "=", "t", ")", "\n", "", "return", "self", ".", "y_dist", "(", "t", ",", "z", ",", "zy", ")", ".", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.z_dist": [[491, 493], ["pyro.Normal().expand().to_event", "pyro.Normal().expand().to_event", "pyro.Normal().expand", "pyro.Normal().expand", "pyro.Normal", "pyro.Normal"], "methods", ["None"], ["", "def", "z_dist", "(", "self", ")", ":", "\n", "        ", "return", "dist", ".", "Normal", "(", "0", ",", "1", ")", ".", "expand", "(", "[", "self", ".", "latent_dim", "]", ")", ".", "to_event", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zt_dist": [[494, 496], ["pyro.Normal().expand().to_event", "pyro.Normal().expand().to_event", "pyro.Normal().expand", "pyro.Normal().expand", "pyro.Normal", "pyro.Normal"], "methods", ["None"], ["", "def", "zt_dist", "(", "self", ")", ":", "\n", "        ", "return", "dist", ".", "Normal", "(", "0", ",", "1", ")", ".", "expand", "(", "[", "self", ".", "latent_dim_t", "]", ")", ".", "to_event", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.zy_dist": [[497, 499], ["pyro.Normal().expand().to_event", "pyro.Normal().expand().to_event", "pyro.Normal().expand", "pyro.Normal().expand", "pyro.Normal", "pyro.Normal"], "methods", ["None"], ["", "def", "zy_dist", "(", "self", ")", ":", "\n", "        ", "return", "dist", ".", "Normal", "(", "0", ",", "1", ")", ".", "expand", "(", "[", "self", ".", "latent_dim_y", "]", ")", ".", "to_event", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.x_dist_continuous": [[500, 504], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "tedvae_gpu.Model.x_nn", "pyro.Normal().to_event", "pyro.Normal().to_event", "pyro.Normal", "pyro.Normal"], "methods", ["None"], ["", "def", "x_dist_continuous", "(", "self", ",", "z", ",", "zt", ",", "zy", ")", ":", "\n", "        ", "z_concat", "=", "torch", ".", "cat", "(", "(", "z", ",", "zt", ",", "zy", ")", ",", "-", "1", ")", "\n", "loc", ",", "scale", "=", "self", ".", "x_nn", "(", "z_concat", ")", "\n", "return", "dist", ".", "Normal", "(", "loc", ",", "scale", ")", ".", "to_event", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.x_dist_binary": [[505, 509], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "tedvae_gpu.Model.x2_nn", "pyro.Bernoulli().to_event", "pyro.Bernoulli().to_event", "pyro.Bernoulli", "pyro.Bernoulli"], "methods", ["None"], ["", "def", "x_dist_binary", "(", "self", ",", "z", ",", "zt", ",", "zy", ")", ":", "\n", "        ", "z_concat", "=", "torch", ".", "cat", "(", "(", "z", ",", "zt", ",", "zy", ")", ",", "-", "1", ")", "\n", "logits", "=", "self", ".", "x2_nn", "(", "z_concat", ")", "\n", "return", "dist", ".", "Bernoulli", "(", "logits", "=", "logits", ")", ".", "to_event", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.y_dist": [[511, 519], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "tedvae_gpu.Model.y0_nn", "tedvae_gpu.Model.y1_nn", "t.bool.bool.bool", "tedvae_gpu.Model.y0_nn.make_dist", "torch.where", "torch.where", "torch.where", "torch.where", "zip"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.DiagBernoulliNet.make_dist"], ["", "def", "y_dist", "(", "self", ",", "t", ",", "z", ",", "zy", ")", ":", "\n", "# Parameters are not shared among t values.", "\n", "        ", "z_concat", "=", "torch", ".", "cat", "(", "(", "z", ",", "zy", ")", ",", "-", "1", ")", "\n", "params0", "=", "self", ".", "y0_nn", "(", "z_concat", ")", "\n", "params1", "=", "self", ".", "y1_nn", "(", "z_concat", ")", "\n", "t", "=", "t", ".", "bool", "(", ")", "\n", "params", "=", "[", "torch", ".", "where", "(", "t", ",", "p1", ",", "p0", ")", "for", "p0", ",", "p1", "in", "zip", "(", "params0", ",", "params1", ")", "]", "\n", "return", "self", ".", "y0_nn", ".", "make_dist", "(", "*", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.Model.t_dist": [[520, 524], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "tedvae_gpu.Model.t_nn", "pyro.Bernoulli", "pyro.Bernoulli"], "methods", ["None"], ["", "def", "t_dist", "(", "self", ",", "z", ",", "zt", ")", ":", "\n", "        ", "z_concat", "=", "torch", ".", "cat", "(", "(", "z", ",", "zt", ")", ",", "-", "1", ")", "\n", "logits", ",", "=", "self", ".", "t_nn", "(", "z_concat", ")", "\n", "return", "dist", ".", "Bernoulli", "(", "logits", "=", "logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__": [[526, 544], ["dict", "torch.Module.__init__", "tedvae_gpu.Model", "tedvae_gpu.Guide", "tedvae_gpu.TEDVAE.cuda"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feature_dim", ",", "continuous_dim", ",", "binary_dim", ",", "outcome_dist", "=", "\"normal\"", ",", "\n", "latent_dim", "=", "20", ",", "latent_dim_t", "=", "20", ",", "latent_dim_y", "=", "20", ",", "hidden_dim", "=", "200", ",", "num_layers", "=", "3", ",", "num_samples", "=", "100", ")", ":", "\n", "        ", "config", "=", "dict", "(", "feature_dim", "=", "feature_dim", ",", "latent_dim", "=", "latent_dim", ",", "\n", "latent_dim_t", "=", "latent_dim_t", ",", "latent_dim_y", "=", "latent_dim_y", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "num_layers", "=", "num_layers", ",", "continuous_dim", "=", "continuous_dim", ",", "binary_dim", "=", "binary_dim", ",", "\n", "num_samples", "=", "num_samples", ")", "\n", "# for name, size in config.items():", "\n", "#     if not (isinstance(size, int) and size > 0):", "\n", "#         raise ValueError(\"Expected {} > 0 but got {}\".format(name, size))", "\n", "config", "[", "\"outcome_dist\"", "]", "=", "outcome_dist", "\n", "self", ".", "feature_dim", "=", "feature_dim", "\n", "self", ".", "num_samples", "=", "num_samples", "\n", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model", "=", "Model", "(", "config", ")", "\n", "self", ".", "guide", "=", "Guide", "(", "config", ")", "\n", "# self.to_dev", "\n", "self", ".", "cuda", "(", ")", "\n", "", "def", "fit", "(", "self", ",", "x", ",", "t", ",", "y", ",", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.fit": [[544, 591], ["torch.utils.data.TensorDataset", "torch.utils.data.TensorDataset", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "logger.info", "pyro.optim.ClippedAdam", "pyro.optim.ClippedAdam", "pyro.infer.SVI", "pyro.infer.SVI", "range", "len", "tedvae_gpu.TraceCausalEffect_ELBO", "x.dim", "x.size", "len", "logger.debug", "losses.append", "pyro.infer.SVI.step", "pyro.infer.SVI.step", "len", "pyro.util.torch_isnan", "pyro.util.torch_isnan", "len", "len"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.FullyConnected.append"], ["", "def", "fit", "(", "self", ",", "x", ",", "t", ",", "y", ",", "\n", "num_epochs", "=", "100", ",", "\n", "batch_size", "=", "100", ",", "\n", "learning_rate", "=", "1e-3", ",", "\n", "learning_rate_decay", "=", "0.1", ",", "\n", "weight_decay", "=", "1e-4", ")", ":", "\n", "        ", "\"\"\"\n        Train using :class:`~pyro.infer.svi.SVI` with the\n        :class:`TraceCausalEffect_ELBO` loss.\n\n        :param ~torch.Tensor x:\n        :param ~torch.Tensor t:\n        :param ~torch.Tensor y:\n        :param int num_epochs: Number of training epochs. Defaults to 100.\n        :param int batch_size: Batch size. Defaults to 100.\n        :param float learning_rate: Learning rate. Defaults to 1e-3.\n        :param float learning_rate_decay: Learning rate decay over all epochs;\n            the per-step decay rate will depend on batch size and number of epochs\n            such that the initial learning rate will be ``learning_rate`` and the final\n            learning rate will be ``learning_rate * learning_rate_decay``.\n            Defaults to 0.1.\n        :param float weight_decay: Weight decay. Defaults to 1e-4.\n        :return: list of epoch losses\n        \"\"\"", "\n", "assert", "x", ".", "dim", "(", ")", "==", "2", "and", "x", ".", "size", "(", "-", "1", ")", "==", "self", ".", "feature_dim", "\n", "assert", "t", ".", "shape", "==", "x", ".", "shape", "[", ":", "1", "]", "\n", "assert", "y", ".", "shape", "==", "y", ".", "shape", "[", ":", "1", "]", "\n", "# self.whiten = PreWhitener(x)", "\n", "\n", "dataset", "=", "TensorDataset", "(", "x", ",", "t", ",", "y", ")", "\n", "dataloader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ")", "\n", "logger", ".", "info", "(", "\"Training with {} minibatches per epoch\"", ".", "format", "(", "len", "(", "dataloader", ")", ")", ")", "\n", "num_steps", "=", "num_epochs", "*", "len", "(", "dataloader", ")", "\n", "optim", "=", "ClippedAdam", "(", "{", "\"lr\"", ":", "learning_rate", ",", "\n", "\"weight_decay\"", ":", "weight_decay", ",", "\n", "\"lrd\"", ":", "learning_rate_decay", "**", "(", "1", "/", "num_steps", ")", "}", ")", "\n", "svi", "=", "SVI", "(", "self", ".", "model", ",", "self", ".", "guide", ",", "optim", ",", "TraceCausalEffect_ELBO", "(", ")", ")", "\n", "losses", "=", "[", "]", "\n", "for", "epoch", "in", "range", "(", "num_epochs", ")", ":", "\n", "            ", "for", "x", ",", "t", ",", "y", "in", "dataloader", ":", "\n", "# x = self.whiten(x)", "\n", "                ", "loss", "=", "svi", ".", "step", "(", "x", ",", "t", ",", "y", ",", "size", "=", "len", "(", "dataset", ")", ")", "/", "len", "(", "dataset", ")", "\n", "# print(loss)", "\n", "logger", ".", "debug", "(", "\"step {: >5d} loss = {:0.6g}\"", ".", "format", "(", "len", "(", "losses", ")", ",", "loss", ")", ")", "\n", "assert", "not", "torch_isnan", "(", "loss", ")", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.ite": [[592, 633], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "logger.info", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch._C._get_tracing_state", "torch._C._get_tracing_state", "torch._C._get_tracing_state", "torch._C._get_tracing_state", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "result.append", "len", "pyro.plate", "pyro.plate", "pyro.plate", "pyro.plate", "torch._C._get_tracing_state", "torch._C._get_tracing_state", "torch._C._get_tracing_state", "torch._C._get_tracing_state", "logger.debug", "x.dim", "x.size", "pyro.poutine.trace", "pyro.poutine.trace", "pyro.poutine.block", "pyro.poutine.block", "tedvae_gpu.TEDVAE.guide", "pyro.poutine.do", "pyro.poutine.do", "pyro.poutine.do", "pyro.poutine.do", "ite.mean", "dict", "dict", "pyro.poutine.replay", "pyro.poutine.replay", "pyro.poutine.replay", "pyro.poutine.replay", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.FullyConnected.append"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "ite", "(", "self", ",", "x", ",", "ym", ",", "ys", ",", "num_samples", "=", "None", ",", "batch_size", "=", "None", ")", ":", "\n", "        ", "r\"\"\"\n        Computes Individual Treatment Effect for a batch of data ``x``.\n\n        .. math::\n\n            ITE(x) = \\mathbb E\\bigl[ \\mathbf y \\mid \\mathbf X=x, do(\\mathbf t=1) \\bigr]\n                   - \\mathbb E\\bigl[ \\mathbf y \\mid \\mathbf X=x, do(\\mathbf t=0) \\bigr]\n\n        This has complexity ``O(len(x) * num_samples ** 2)``.\n\n        :param ~torch.Tensor x: A batch of data.\n        :param int num_samples: The number of monte carlo samples.\n            Defaults to ``self.num_samples`` which defaults to ``100``.\n        :param int batch_size: Batch size. Defaults to ``len(x)``.\n        :return: A ``len(x)``-sized tensor of estimated effects.\n        :rtype: ~torch.Tensor\n        \"\"\"", "\n", "if", "num_samples", "is", "None", ":", "\n", "            ", "num_samples", "=", "self", ".", "num_samples", "\n", "", "if", "not", "torch", ".", "_C", ".", "_get_tracing_state", "(", ")", ":", "\n", "            ", "assert", "x", ".", "dim", "(", ")", "==", "2", "and", "x", ".", "size", "(", "-", "1", ")", "==", "self", ".", "feature_dim", "\n", "\n", "", "dataloader", "=", "[", "x", "]", "if", "batch_size", "is", "None", "else", "DataLoader", "(", "x", ",", "batch_size", "=", "batch_size", ")", "\n", "logger", ".", "info", "(", "\"Evaluating {} minibatches\"", ".", "format", "(", "len", "(", "dataloader", ")", ")", ")", "\n", "result", "=", "[", "]", "\n", "for", "x", "in", "dataloader", ":", "\n", "# x = self.whiten(x)", "\n", "            ", "with", "pyro", ".", "plate", "(", "\"num_particles\"", ",", "num_samples", ",", "dim", "=", "-", "2", ")", ":", "\n", "                ", "with", "poutine", ".", "trace", "(", ")", "as", "tr", ",", "poutine", ".", "block", "(", "hide", "=", "[", "\"y\"", ",", "\"t\"", "]", ")", ":", "\n", "                    ", "self", ".", "guide", "(", "x", ")", "\n", "", "with", "poutine", ".", "do", "(", "data", "=", "dict", "(", "t", "=", "torch", ".", "zeros", "(", "(", ")", ")", ")", ")", ":", "\n", "                    ", "y0", "=", "poutine", ".", "replay", "(", "self", ".", "model", ".", "y_mean", ",", "tr", ".", "trace", ")", "(", "x", ")", "*", "ys", "+", "ym", "\n", "", "with", "poutine", ".", "do", "(", "data", "=", "dict", "(", "t", "=", "torch", ".", "ones", "(", "(", ")", ")", ")", ")", ":", "\n", "                    ", "y1", "=", "poutine", ".", "replay", "(", "self", ".", "model", ".", "y_mean", ",", "tr", ".", "trace", ")", "(", "x", ")", "*", "ys", "+", "ym", "\n", "", "", "ite", "=", "(", "y1", "-", "y0", ")", ".", "mean", "(", "0", ")", "\n", "if", "not", "torch", ".", "_C", ".", "_get_tracing_state", "(", ")", ":", "\n", "                ", "logger", ".", "debug", "(", "\"batch ate = {:0.6g}\"", ".", "format", "(", "ite", ".", "mean", "(", ")", ")", ")", "\n", "", "result", ".", "append", "(", "ite", ")", "\n", "", "return", "torch", ".", "cat", "(", "result", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.to_script_module": [[634, 648], ["tedvae_gpu.TEDVAE.train", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "pyro.validation_enabled", "pyro.validation_enabled", "pyro.validation_enabled", "pyro.validation_enabled", "torch.jit.trace_module", "torch.jit.trace_module", "torch.jit.trace_module", "torch.jit.trace_module"], "methods", ["None"], ["", "def", "to_script_module", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Compile this module using :func:`torch.jit.trace_module` ,\n        assuming self has already been fit to data.\n\n        :return: A traced version of self with an :meth:`ite` method.\n        :rtype: torch.jit.ScriptModule\n        \"\"\"", "\n", "self", ".", "train", "(", "False", ")", "\n", "fake_x", "=", "torch", ".", "randn", "(", "2", ",", "self", ".", "feature_dim", ")", "\n", "with", "pyro", ".", "validation_enabled", "(", "False", ")", ":", "\n", "# Disable check_trace due to nondeterministic nodes.", "\n", "            ", "result", "=", "torch", ".", "jit", ".", "trace_module", "(", "self", ",", "{", "\"ite\"", ":", "(", "fake_x", ",", ")", "}", ",", "check_trace", "=", "False", ")", "\n", "", "return", "result", "\n", "", "", ""]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_ihdp.main": [[18, 56], ["pyro.enable_validation", "torch.set_default_tensor_type", "pyro.set_rng_seed", "datasets.IHDP", "pyro.set_rng_seed", "pyro.clear_param_store", "tedvae_gpu.TEDVAE", "tedvae_gpu.TEDVAE.fit", "tedvae_gpu.TEDVAE.ite", "tedvae_gpu.TEDVAE.ite", "numpy.sqrt", "numpy.sqrt", "print", "print", "y_train.mean", "y_train.std", "numpy.mean", "numpy.mean", "true_ite_test.squeeze", "tedvae.ite.cpu().numpy", "true_ite_test.squeeze", "tedvae.ite.cpu().numpy", "true_ite_train.squeeze", "tedvae.ite.cpu().numpy", "true_ite_train.squeeze", "tedvae.ite.cpu().numpy", "tedvae.ite.cpu", "tedvae.ite.cpu", "tedvae.ite.cpu", "tedvae.ite.cpu"], "function", ["home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.datasets.IHDP", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.fit", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.ite", "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.tedvae_gpu.TEDVAE.ite"], ["def", "main", "(", "args", ",", "reptition", "=", "1", ",", "path", "=", "\"./IHDP/\"", ")", ":", "\n", "    ", "pyro", ".", "enable_validation", "(", "__debug__", ")", "\n", "# if args.cuda:", "\n", "torch", ".", "set_default_tensor_type", "(", "'torch.cuda.FloatTensor'", ")", "\n", "\n", "# Generate synthetic data.", "\n", "pyro", ".", "set_rng_seed", "(", "args", ".", "seed", ")", "\n", "train", ",", "test", ",", "contfeats", ",", "binfeats", "=", "IHDP", "(", "path", "=", "path", ",", "reps", "=", "reptition", ",", "cuda", "=", "True", ")", "\n", "(", "x_train", ",", "t_train", ",", "y_train", ")", ",", "true_ite_train", "=", "train", "\n", "(", "x_test", ",", "t_test", ",", "y_test", ")", ",", "true_ite_test", "=", "test", "\n", "\n", "ym", ",", "ys", "=", "y_train", ".", "mean", "(", ")", ",", "y_train", ".", "std", "(", ")", "\n", "y_train", "=", "(", "y_train", "-", "ym", ")", "/", "ys", "\n", "\n", "# Train.", "\n", "pyro", ".", "set_rng_seed", "(", "args", ".", "seed", ")", "\n", "pyro", ".", "clear_param_store", "(", ")", "\n", "tedvae", "=", "TEDVAE", "(", "feature_dim", "=", "args", ".", "feature_dim", ",", "continuous_dim", "=", "contfeats", ",", "binary_dim", "=", "binfeats", ",", "\n", "latent_dim", "=", "args", ".", "latent_dim", ",", "latent_dim_t", "=", "args", ".", "latent_dim_t", ",", "latent_dim_y", "=", "args", ".", "latent_dim_y", ",", "\n", "hidden_dim", "=", "args", ".", "hidden_dim", ",", "\n", "num_layers", "=", "args", ".", "num_layers", ",", "\n", "num_samples", "=", "10", ")", "\n", "tedvae", ".", "fit", "(", "x_train", ",", "t_train", ",", "y_train", ",", "\n", "num_epochs", "=", "args", ".", "num_epochs", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "learning_rate", "=", "args", ".", "learning_rate", ",", "\n", "learning_rate_decay", "=", "args", ".", "learning_rate_decay", ",", "weight_decay", "=", "args", ".", "weight_decay", ")", "\n", "\n", "# Evaluate.", "\n", "est_ite", "=", "tedvae", ".", "ite", "(", "x_test", ",", "ym", ",", "ys", ")", "\n", "est_ite_train", "=", "tedvae", ".", "ite", "(", "x_train", ",", "ym", ",", "ys", ")", "\n", "\n", "pehe", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "(", "true_ite_test", ".", "squeeze", "(", ")", "-", "est_ite", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "*", "(", "true_ite_test", ".", "squeeze", "(", ")", "-", "est_ite", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", ")", "\n", "pehe_train", "=", "np", ".", "sqrt", "(", "np", ".", "mean", "(", "(", "true_ite_train", ".", "squeeze", "(", ")", "-", "est_ite_train", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "*", "(", "true_ite_train", ".", "squeeze", "(", ")", "-", "est_ite_train", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", ")", "\n", "print", "(", "\"PEHE_train = {:0.3g}\"", ".", "format", "(", "pehe_train", ")", ")", "\n", "\n", "print", "(", "\"PEHE = {:0.3g}\"", ".", "format", "(", "pehe", ")", ")", "\n", "return", "pehe", ",", "pehe_train", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.datasets.generate_data": [[12, 44], ["pyro.Bernoulli().sample", "pyro.Bernoulli().sample", "pyro.Bernoulli().sample", "pyro.Normal().sample().t", "pyro.Normal().sample().t", "pyro.Normal().sample().t", "torch.cat", "torch.mul", "torch.tensor", "pyro.Bernoulli().sample", "pyro.Bernoulli().sample", "pyro.Normal().sample().t().squeeze", "pyro.Normal().sample().t().squeeze", "pyro.Bernoulli", "pyro.Bernoulli", "pyro.Bernoulli", "pyro.Normal().sample", "pyro.Normal().sample", "pyro.Normal().sample", "pyro.Normal", "pyro.Normal", "pyro.Bernoulli", "pyro.Bernoulli", "pyro.Normal().sample().t", "pyro.Normal().sample().t", "pyro.Normal", "pyro.Normal", "pyro.Normal", "pyro.Normal().sample", "pyro.Normal().sample", "pyro.Normal", "pyro.Normal"], "function", ["None"], ["def", "generate_data", "(", "args", ",", "alpha", "=", "0.25", ",", "beta", "=", "1", ",", "gamma", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    This implements the generative process of [1], but using larger feature and\n    latent spaces ([1] assumes ``feature_dim=1`` and ``latent_dim=5``).\n    \"\"\"", "\n", "\n", "zc", "=", "dist", ".", "Bernoulli", "(", "0.5", ")", ".", "sample", "(", "[", "args", ".", "num_data", "]", ")", "\n", "zt", "=", "dist", ".", "Bernoulli", "(", "0.5", ")", ".", "sample", "(", "[", "args", ".", "num_data", "]", ")", "\n", "zy", "=", "dist", ".", "Bernoulli", "(", "0.5", ")", ".", "sample", "(", "[", "args", ".", "num_data", "]", ")", "\n", "\n", "# zc = dist.Normal(0,1).sample([args.num_data])", "\n", "# zt = dist.Normal(0,1).sample([args.num_data])", "\n", "# zy = dist.Normal(0,1).sample([args.num_data])", "\n", "\n", "xc", "=", "dist", ".", "Normal", "(", "zc", ",", "5", "*", "zc", "+", "3", "*", "(", "1", "-", "zc", ")", ")", ".", "sample", "(", "[", "args", ".", "synthetic_dim", "]", ")", ".", "t", "(", ")", "\n", "xt", "=", "dist", ".", "Normal", "(", "zt", ",", "2", "*", "zt", "+", "0.5", "*", "(", "1", "-", "zt", ")", ")", ".", "sample", "(", "[", "args", ".", "synthetic_dim", "]", ")", ".", "t", "(", ")", "\n", "xy", "=", "dist", ".", "Normal", "(", "zy", ",", "10", "*", "zy", "+", "6", "*", "(", "1", "-", "zy", ")", ")", ".", "sample", "(", "[", "args", ".", "synthetic_dim", "]", ")", ".", "t", "(", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "xc", ",", "xt", ",", "xy", "]", ",", "-", "1", ")", "\n", "\n", "t", "=", "torch", ".", "mul", "(", "dist", ".", "Bernoulli", "(", "alpha", "*", "zt", "+", "(", "1", "-", "alpha", ")", "*", "(", "1", "-", "zt", ")", ")", ".", "sample", "(", ")", ",", "dist", ".", "Bernoulli", "(", "alpha", "*", "zt", "+", "(", "1", "-", "alpha", ")", "*", "(", "1", "-", "zt", ")", ")", ".", "sample", "(", ")", ")", "\n", "\n", "y", "=", "dist", ".", "Normal", "(", "beta", "*", "(", "zc", "+", "gamma", "*", "(", "2", "*", "t", "-", "2", ")", ")", ",", "1", ")", ".", "sample", "(", "[", "1", "]", ")", ".", "t", "(", ")", ".", "squeeze", "(", "-", "1", ")", "+", "dist", ".", "Normal", "(", "beta", "*", "zy", ",", "1", ")", ".", "sample", "(", "[", "1", "]", ")", ".", "t", "(", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "\n", "# Compute true ite for evaluation (via Monte Carlo approximation).", "\n", "t0_t1", "=", "torch", ".", "tensor", "(", "[", "[", "0.", "]", ",", "[", "1.", "]", "]", ")", "\n", "\n", "y_t0", ",", "y_t1", "=", "dist", ".", "Normal", "(", "beta", "*", "(", "zc", "+", "gamma", "*", "(", "2", "*", "t0_t1", "-", "2", ")", ")", ",", "1", ")", ".", "mean", "+", "dist", ".", "Normal", "(", "beta", "*", "zy", ",", "1", ")", ".", "mean", "\n", "\n", "true_ite", "=", "y_t1", "-", "y_t0", "\n", "return", "x", ",", "t", ",", "y", ",", "true_ite", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.datasets.generate_data_z": [[46, 97], ["torch.tensor", "torch.tensor.new_full", "torch.tensor", "torch.tensor.new_full", "torch.tensor", "torch.tensor.new_full", "pyro.Bernoulli().sample", "pyro.Bernoulli().sample", "pyro.Bernoulli().sample", "torch.tensor", "dist.Bernoulli().sample.split", "torch.tensor", "dist.Bernoulli().sample.split", "torch.tensor", "dist.Bernoulli().sample.split", "torch.cat", "torch.mul().squeeze", "torch.tensor", "pyro.Normal().sample().t", "torch.cat", "pyro.Normal().sample().t", "torch.cat", "pyro.Normal().sample().t", "torch.cat", "pyro.Normal().sample().t().squeeze", "pyro.Normal().sample().t().squeeze", "pyro.Bernoulli", "pyro.Bernoulli", "pyro.Bernoulli", "torch.mul", "pyro.Normal", "pyro.Normal", "pyro.Normal().sample", "pyro.Normal().sample", "pyro.Normal().sample", "pyro.Bernoulli().sample", "pyro.Bernoulli().sample", "pyro.Normal().sample().t", "pyro.Normal().sample().t", "pyro.Normal", "pyro.Normal", "pyro.Normal", "pyro.Bernoulli", "pyro.Bernoulli", "pyro.Normal().sample", "pyro.Normal().sample", "row.squeeze", "row.squeeze", "row.squeeze", "pyro.Normal", "pyro.Normal", "row.squeeze", "row.squeeze", "row.squeeze", "row.squeeze", "row.squeeze", "row.squeeze", "dist.Bernoulli().sample.squeeze", "dist.Bernoulli().sample.squeeze"], "function", ["None"], ["", "def", "generate_data_z", "(", "args", ",", "dim_t", ",", "dim_c", ",", "dim_y", ",", "alpha", "=", "0.25", ",", "beta", "=", "1", ",", "gamma", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    This implements the generative process of [1], but using larger feature and\n    latent spaces ([1] assumes ``feature_dim=1`` and ``latent_dim=5``).\n    \"\"\"", "\n", "prob_t", "=", "torch", ".", "tensor", "(", "0.5", ")", "\n", "probs_t", "=", "prob_t", ".", "new_full", "(", "(", "dim_t", ",", ")", ",", "0.5", ")", "\n", "prob_c", "=", "torch", ".", "tensor", "(", "0.5", ")", "\n", "probs_c", "=", "prob_c", ".", "new_full", "(", "(", "dim_c", ",", ")", ",", "0.5", ")", "\n", "prob_y", "=", "torch", ".", "tensor", "(", "0.5", ")", "\n", "probs_y", "=", "prob_y", ".", "new_full", "(", "(", "dim_y", ",", ")", ",", "0.5", ")", "\n", "\n", "zc", "=", "dist", ".", "Bernoulli", "(", "probs_c", ")", ".", "sample", "(", "[", "args", ".", "num_data", "]", ")", "\n", "zt", "=", "dist", ".", "Bernoulli", "(", "probs_t", ")", ".", "sample", "(", "[", "args", ".", "num_data", "]", ")", "\n", "zy", "=", "dist", ".", "Bernoulli", "(", "probs_y", ")", ".", "sample", "(", "[", "args", ".", "num_data", "]", ")", "\n", "\n", "xc", "=", "torch", ".", "tensor", "(", "[", "]", ")", "\n", "for", "row", "in", "zc", ".", "split", "(", "1", ",", "dim", "=", "1", ")", ":", "\n", "        ", "temp", "=", "dist", ".", "Normal", "(", "row", ".", "squeeze", "(", ")", ",", "5", "*", "row", ".", "squeeze", "(", ")", "+", "3", "*", "(", "1", "-", "row", ".", "squeeze", "(", ")", ")", ")", ".", "sample", "(", "[", "5", "*", "dim_c", "]", ")", ".", "t", "(", ")", "\n", "xc", "=", "torch", ".", "cat", "(", "[", "xc", ",", "temp", "]", ",", "1", ")", "\n", "\n", "", "xt", "=", "torch", ".", "tensor", "(", "[", "]", ")", "\n", "for", "row", "in", "zt", ".", "split", "(", "1", ",", "dim", "=", "1", ")", ":", "\n", "        ", "temp", "=", "dist", ".", "Normal", "(", "row", ".", "squeeze", "(", ")", ",", "5", "*", "row", ".", "squeeze", "(", ")", "+", "3", "*", "(", "1", "-", "row", ".", "squeeze", "(", ")", ")", ")", ".", "sample", "(", "[", "5", "*", "dim_t", "]", ")", ".", "t", "(", ")", "\n", "xt", "=", "torch", ".", "cat", "(", "[", "xt", ",", "temp", "]", ",", "1", ")", "\n", "\n", "\n", "", "xy", "=", "torch", ".", "tensor", "(", "[", "]", ")", "\n", "for", "row", "in", "zy", ".", "split", "(", "1", ",", "dim", "=", "1", ")", ":", "\n", "        ", "temp", "=", "dist", ".", "Normal", "(", "row", ".", "squeeze", "(", ")", ",", "5", "*", "row", ".", "squeeze", "(", ")", "+", "3", "*", "(", "1", "-", "row", ".", "squeeze", "(", ")", ")", ")", ".", "sample", "(", "[", "5", "*", "dim_y", "]", ")", ".", "t", "(", ")", "\n", "xy", "=", "torch", ".", "cat", "(", "[", "xy", ",", "temp", "]", ",", "1", ")", "\n", "\n", "\n", "", "x", "=", "torch", ".", "cat", "(", "[", "xc", ",", "xt", ",", "xy", "]", ",", "-", "1", ")", "\n", "\n", "t", "=", "torch", ".", "mul", "(", "dist", ".", "Bernoulli", "(", "alpha", "*", "zt", "+", "(", "1", "-", "alpha", ")", "*", "(", "1", "-", "zt", ")", ")", ".", "sample", "(", ")", ",", "dist", ".", "Bernoulli", "(", "alpha", "*", "zt", "+", "(", "1", "-", "alpha", ")", "*", "(", "1", "-", "zt", ")", ")", ".", "sample", "(", ")", ")", ".", "squeeze", "(", ")", "\n", "\n", "\n", "y", "=", "dist", ".", "Normal", "(", "beta", "*", "(", "zc", ".", "squeeze", "(", ")", "+", "gamma", "*", "(", "2", "*", "t", "-", "2", ")", ")", ",", "1", ")", ".", "sample", "(", "[", "1", "]", ")", ".", "t", "(", ")", ".", "squeeze", "(", "-", "1", ")", "+", "dist", ".", "Normal", "(", "beta", "*", "zy", ".", "squeeze", "(", ")", ",", "1", ")", ".", "sample", "(", "[", "1", "]", ")", ".", "t", "(", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "# Compute true ite for evaluation (via Monte Carlo approximation).", "\n", "t0_t1", "=", "torch", ".", "tensor", "(", "[", "[", "0.", "]", ",", "[", "1.", "]", "]", ")", "\n", "\n", "y_t0", ",", "y_t1", "=", "dist", ".", "Normal", "(", "beta", "*", "(", "zc", "+", "gamma", "*", "(", "2", "*", "t0_t1", "-", "2", ")", ")", ",", "1", ")", ".", "mean", "+", "dist", ".", "Normal", "(", "beta", "*", "zy", ",", "1", ")", ".", "mean", "\n", "\n", "# y_t0 = (y_t0- beta*(zc + (2*t-2)) - beta*zy )/1.414", "\n", "# y_t1 = ((y_t1- beta*(zc + (2*t-2)) - beta*zy )/1.414)", "\n", "# y_t0, y_t1 = dist.Bernoulli(logits= ( beta* (zc+ 2 * (2 * t0_t1 - 2)))).mean", "\n", "true_ite", "=", "y_t1", "-", "y_t0", "\n", "return", "x", ",", "t", ",", "y", ",", "true_ite", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.datasets.generate_data_cevae": [[100, 118], ["pyro.Bernoulli().sample", "pyro.Normal().sample().t", "pyro.Bernoulli().sample", "pyro.Bernoulli().sample", "torch.tensor", "pyro.Bernoulli", "pyro.Bernoulli", "pyro.Normal().sample", "pyro.Bernoulli", "pyro.Bernoulli", "pyro.Normal"], "function", ["None"], ["", "def", "generate_data_cevae", "(", "args", ",", "alpha", "=", "0.75", ",", "beta", "=", "3", ",", "gamma", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    This implements the generative process of [1], but using larger feature and\n    latent spaces ([1] assumes ``feature_dim=1`` and ``latent_dim=5``).\n    \"\"\"", "\n", "\n", "z", "=", "dist", ".", "Bernoulli", "(", "0.5", ")", ".", "sample", "(", "[", "args", ".", "num_data", "]", ")", "\n", "\n", "x", "=", "dist", ".", "Normal", "(", "z", ",", "5", "*", "z", "+", "3", "*", "(", "1", "-", "z", ")", ")", ".", "sample", "(", "[", "args", ".", "feature_dim", "]", ")", ".", "t", "(", ")", "\n", "\n", "t", "=", "dist", ".", "Bernoulli", "(", "alpha", "*", "z", "+", "(", "1", "-", "alpha", ")", "*", "(", "1", "-", "z", ")", ")", ".", "sample", "(", ")", "\n", "y", "=", "dist", ".", "Bernoulli", "(", "logits", "=", "beta", "*", "(", "z", "+", "gamma", "*", "(", "2", "*", "t", "-", "2", ")", ")", ")", ".", "sample", "(", ")", "\n", "\n", "# Compute true ite for evaluation (via Monte Carlo approximation).", "\n", "t0_t1", "=", "torch", ".", "tensor", "(", "[", "[", "0.", "]", ",", "[", "1.", "]", "]", ")", "\n", "y_t0", ",", "y_t1", "=", "dist", ".", "Bernoulli", "(", "logits", "=", "beta", "*", "(", "z", "+", "gamma", "*", "(", "2", "*", "t0_t1", "-", "2", ")", ")", ")", ".", "mean", "\n", "true_ite", "=", "y_t1", "-", "y_t0", "\n", "return", "x", ",", "t", ",", "y", ",", "true_ite", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.datasets.ACIC2016_train": [[120, 137], ["numpy.loadtxt", "torch.from_numpy", "torch.from_numpy().squeeze", "torch.from_numpy().squeeze", "x.cuda.cuda", "y.cuda.cuda", "t.cuda.cuda", "torch.from_numpy", "torch.from_numpy", "str"], "function", ["None"], ["", "def", "ACIC2016_train", "(", "reptition", "=", "1", ",", "cuda", "=", "True", ")", ":", "\n", "    ", "path_data", "=", "\"./acic2016_continuous/\"", "\n", "reptition", "=", "reptition", "\n", "\n", "data", "=", "np", ".", "loadtxt", "(", "path_data", "+", "str", "(", "reptition", ")", "+", "'_train.csv'", ",", "delimiter", "=", "','", ",", "skiprows", "=", "1", ")", "\n", "t", ",", "y", "=", "data", "[", ":", ",", "23", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data", "[", ":", ",", "24", "]", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "mu_0", ",", "mu_1", ",", "x", "=", "data", "[", ":", ",", "27", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data", "[", ":", ",", "28", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data", "[", ":", ",", ":", "23", "]", "\n", "true_ite", "=", "mu_1", "-", "mu_0", "\n", "x", "=", "torch", ".", "from_numpy", "(", "x", ")", "\n", "y", "=", "torch", ".", "from_numpy", "(", "y", ")", ".", "squeeze", "(", ")", "\n", "t", "=", "torch", ".", "from_numpy", "(", "t", ")", ".", "squeeze", "(", ")", "\n", "if", "cuda", ":", "\n", "        ", "x", "=", "x", ".", "cuda", "(", ")", "\n", "y", "=", "y", ".", "cuda", "(", ")", "\n", "t", "=", "t", ".", "cuda", "(", ")", "\n", "\n", "", "return", "x", ",", "t", ",", "y", ",", "true_ite", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.datasets.ACIC2016_test": [[138, 154], ["numpy.loadtxt", "torch.from_numpy", "torch.from_numpy().squeeze", "torch.from_numpy().squeeze", "x.cuda.cuda", "y.cuda.cuda", "t.cuda.cuda", "torch.from_numpy", "torch.from_numpy", "str"], "function", ["None"], ["", "def", "ACIC2016_test", "(", "reptition", "=", "1", ",", "cuda", "=", "True", ")", ":", "\n", "    ", "path_data", "=", "\"./acic2016_continuous/\"", "\n", "reptition", "=", "reptition", "\n", "\n", "data", "=", "np", ".", "loadtxt", "(", "path_data", "+", "str", "(", "reptition", ")", "+", "'_test.csv'", ",", "delimiter", "=", "','", ",", "skiprows", "=", "1", ")", "\n", "t", ",", "y", "=", "data", "[", ":", ",", "23", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data", "[", ":", ",", "24", "]", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "mu_0", ",", "mu_1", ",", "x", "=", "data", "[", ":", ",", "27", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data", "[", ":", ",", "28", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data", "[", ":", ",", ":", "23", "]", "\n", "true_ite", "=", "mu_1", "-", "mu_0", "\n", "x", "=", "torch", ".", "from_numpy", "(", "x", ")", "\n", "y", "=", "torch", ".", "from_numpy", "(", "y", ")", ".", "squeeze", "(", ")", "\n", "t", "=", "torch", ".", "from_numpy", "(", "t", ")", ".", "squeeze", "(", ")", "\n", "if", "cuda", ":", "\n", "        ", "x", "=", "x", ".", "cuda", "(", ")", "\n", "y", "=", "y", ".", "cuda", "(", ")", "\n", "t", "=", "t", ".", "cuda", "(", ")", "\n", "", "return", "x", ",", "t", ",", "y", ",", "true_ite", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.datasets.IHDP": [[156, 196], ["numpy.loadtxt", "torch.from_numpy", "torch.from_numpy().squeeze", "torch.from_numpy().squeeze", "numpy.loadtxt", "torch.from_numpy", "torch.from_numpy().squeeze", "torch.from_numpy().squeeze", "x.cuda.cuda", "y.cuda.cuda", "t.cuda.cuda", "x_test.cuda.cuda", "y_test.cuda.cuda", "t_test.cuda.cuda", "range", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "str", "str"], "function", ["None"], ["", "def", "IHDP", "(", "path", "=", "\"./IHDP\"", ",", "reps", "=", "1", ",", "cuda", "=", "True", ")", ":", "\n", "    ", "path_data", "=", "path", "\n", "replications", "=", "reps", "\n", "# which features are binary", "\n", "binfeats", "=", "[", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", "22", ",", "23", ",", "24", "]", "\n", "# which features are continuous", "\n", "contfeats", "=", "[", "i", "for", "i", "in", "range", "(", "25", ")", "if", "i", "not", "in", "binfeats", "]", "\n", "\n", "data", "=", "np", ".", "loadtxt", "(", "path_data", "+", "'/ihdp_npci_train_'", "+", "str", "(", "replications", ")", "+", "'.csv'", ",", "delimiter", "=", "','", ",", "skiprows", "=", "1", ")", "\n", "t", ",", "y", "=", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "1", "]", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "mu_0", ",", "mu_1", ",", "x", "=", "data", "[", ":", ",", "3", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data", "[", ":", ",", "4", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data", "[", ":", ",", "5", ":", "]", "\n", "true_ite", "=", "mu_1", "-", "mu_0", "\n", "x", "[", ":", ",", "13", "]", "-=", "1", "\n", "# perm = binfeats + contfeats", "\n", "# x = x[:, perm]", "\n", "\n", "x", "=", "torch", ".", "from_numpy", "(", "x", ")", "\n", "y", "=", "torch", ".", "from_numpy", "(", "y", ")", ".", "squeeze", "(", ")", "\n", "t", "=", "torch", ".", "from_numpy", "(", "t", ")", ".", "squeeze", "(", ")", "\n", "if", "cuda", ":", "\n", "        ", "x", "=", "x", ".", "cuda", "(", ")", "\n", "y", "=", "y", ".", "cuda", "(", ")", "\n", "t", "=", "t", ".", "cuda", "(", ")", "\n", "", "train", "=", "(", "x", ",", "t", ",", "y", ")", ",", "true_ite", "\n", "\n", "data_test", "=", "np", ".", "loadtxt", "(", "path_data", "+", "'/ihdp_npci_test_'", "+", "str", "(", "replications", ")", "+", "'.csv'", ",", "delimiter", "=", "','", ",", "skiprows", "=", "1", ")", "\n", "t_test", ",", "y_test", "=", "data_test", "[", ":", ",", "0", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data_test", "[", ":", ",", "1", "]", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "mu_0_test", ",", "mu_1_test", ",", "x_test", "=", "data_test", "[", ":", ",", "3", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data_test", "[", ":", ",", "4", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data_test", "[", ":", ",", "5", ":", "]", "\n", "x_test", "[", ":", ",", "13", "]", "-=", "1", "\n", "# x_test = x_test[:, perm]", "\n", "x_test", "=", "torch", ".", "from_numpy", "(", "x_test", ")", "\n", "y_test", "=", "torch", ".", "from_numpy", "(", "y_test", ")", ".", "squeeze", "(", ")", "\n", "t_test", "=", "torch", ".", "from_numpy", "(", "t_test", ")", ".", "squeeze", "(", ")", "\n", "if", "cuda", ":", "\n", "        ", "x_test", "=", "x_test", ".", "cuda", "(", ")", "\n", "y_test", "=", "y_test", ".", "cuda", "(", ")", "\n", "t_test", "=", "t_test", ".", "cuda", "(", ")", "\n", "", "true_ite_test", "=", "mu_1_test", "-", "mu_0_test", "\n", "test", "=", "(", "x_test", ",", "t_test", ",", "y_test", ")", ",", "true_ite_test", "\n", "return", "train", ",", "test", ",", "contfeats", ",", "binfeats", "\n", "\n"]], "home.repos.pwc.inspect_result.WeijiaZhang24_TEDVAE.None.datasets.Jobs": [[198, 236], ["numpy.loadtxt", "torch.from_numpy", "torch.from_numpy().squeeze", "torch.from_numpy().squeeze", "numpy.loadtxt", "torch.from_numpy", "torch.from_numpy().squeeze", "torch.from_numpy().squeeze", "x.cuda.cuda", "y.cuda.cuda", "t.cuda.cuda", "x_test.cuda.cuda", "y_test.cuda.cuda", "t_test.cuda.cuda", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "str", "str"], "function", ["None"], ["", "def", "Jobs", "(", "path", "=", "\"./Jobs\"", ",", "reps", "=", "1", ",", "cuda", "=", "True", ")", ":", "\n", "    ", "path_data", "=", "path", "\n", "replications", "=", "reps", "\n", "# which features are binary", "\n", "binfeats", "=", "[", "0", ",", "1", ",", "2", ",", "3", "]", "\n", "# which features are continuous", "\n", "contfeats", "=", "[", "4", ",", "5", ",", "6", ",", "7", "]", "\n", "\n", "data", "=", "np", ".", "loadtxt", "(", "path_data", "+", "'/Jobs_train_'", "+", "str", "(", "replications", ")", "+", "'.csv'", ",", "delimiter", "=", "','", ",", "skiprows", "=", "1", ")", "\n", "# t, y = data[:, 0], data[:, 10][:, np.newaxis] # index 10: continuous outcome re78", "\n", "t", ",", "y", "=", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "1", "]", "[", ":", ",", "np", ".", "newaxis", "]", "# index 1: binary outcome", "\n", "\n", "x", "=", "data", "[", ":", ",", "2", ":", "10", "]", "\n", "# perm = binfeats + contfeats", "\n", "# x = x[:, perm]", "\n", "\n", "x", "=", "torch", ".", "from_numpy", "(", "x", ")", "\n", "y", "=", "torch", ".", "from_numpy", "(", "y", ")", ".", "squeeze", "(", ")", "\n", "t", "=", "torch", ".", "from_numpy", "(", "t", ")", ".", "squeeze", "(", ")", "\n", "if", "cuda", ":", "\n", "        ", "x", "=", "x", ".", "cuda", "(", ")", "\n", "y", "=", "y", ".", "cuda", "(", ")", "\n", "t", "=", "t", ".", "cuda", "(", ")", "\n", "", "train", "=", "(", "x", ",", "t", ",", "y", ")", "\n", "\n", "data_test", "=", "np", ".", "loadtxt", "(", "path_data", "+", "'/Jobs_test_'", "+", "str", "(", "replications", ")", "+", "'.csv'", ",", "delimiter", "=", "','", ",", "skiprows", "=", "1", ")", "\n", "t_test", ",", "y_test", "=", "data_test", "[", ":", ",", "0", "]", "[", ":", ",", "np", ".", "newaxis", "]", ",", "data_test", "[", ":", ",", "1", "]", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "x_test", "=", "data_test", "[", ":", ",", "2", ":", "10", "]", "\n", "# x_test = x_test[:, perm]", "\n", "x_test", "=", "torch", ".", "from_numpy", "(", "x_test", ")", "\n", "y_test", "=", "torch", ".", "from_numpy", "(", "y_test", ")", ".", "squeeze", "(", ")", "\n", "t_test", "=", "torch", ".", "from_numpy", "(", "t_test", ")", ".", "squeeze", "(", ")", "\n", "if", "cuda", ":", "\n", "        ", "x_test", "=", "x_test", ".", "cuda", "(", ")", "\n", "y_test", "=", "y_test", ".", "cuda", "(", ")", "\n", "t_test", "=", "t_test", ".", "cuda", "(", ")", "\n", "", "test", "=", "(", "x_test", ",", "t_test", ",", "y_test", ")", "\n", "return", "train", ",", "test", ",", "contfeats", ",", "binfeats", "", "", ""]]}