{"home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.tsne.get_data": [[12, 45], ["numpy.load", "range", "print", "len", "print", "ID_list.append", "len", "len", "set", "x_dic[].append", "len", "x_vector.append", "label_vector.append", "label.split"], "function", ["None"], ["def", "get_data", "(", "path", ")", ":", "\n", "    ", "data", "=", "np", ".", "load", "(", "path", ")", "\n", "\n", "X", "=", "data", "[", "'vector'", "]", "\n", "labels", "=", "data", "[", "'utt'", "]", "\n", "\n", "ID_list", "=", "[", "]", "\n", "for", "label", "in", "labels", ":", "\n", "        ", "ID_list", ".", "append", "(", "label", ".", "split", "(", "'-'", ")", "[", "0", "]", ")", "\n", "", "x_dic", "=", "{", "}", "\n", "for", "i", "in", "ID_list", ":", "\n", "        ", "x_dic", "[", "i", "]", "=", "[", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "ID_list", ")", ")", ":", "\n", "        ", "if", "ID_list", "[", "i", "]", "in", "x_dic", ":", "\n", "           ", "x_dic", "[", "ID_list", "[", "i", "]", "]", ".", "append", "(", "X", "[", "i", "]", ")", "\n", "", "", "x_choose", "=", "{", "}", "\n", "for", "i", "in", "x_dic", ":", "\n", "        ", "if", "len", "(", "x_dic", "[", "i", "]", ")", ">=", "250", ":", "\n", "            ", "x_choose", "[", "i", "]", "=", "x_dic", "[", "i", "]", "\n", "", "", "print", "(", "'select speakers with utts large than 250'", ")", "\n", "\n", "x_vector", "=", "[", "]", "\n", "label_vector", "=", "[", "]", "\n", "n", "=", "1", "\n", "for", "i", "in", "x_choose", ":", "\n", "        ", "for", "j", "in", "x_choose", "[", "i", "]", ":", "\n", "            ", "x_vector", ".", "append", "(", "j", ")", "\n", "label_vector", ".", "append", "(", "n", ")", "\n", "", "n", "+=", "1", "\n", "", "n_samples", ",", "n_dim", "=", "len", "(", "x_vector", ")", ",", "x_vector", "[", "0", "]", ".", "shape", "\n", "n_labels", "=", "len", "(", "set", "(", "label_vector", ")", ")", "\n", "print", "(", "'n_samples={}, n_dim={}, n_labels={}'", ".", "format", "(", "n_samples", ",", "n_dim", ",", "n_labels", ")", ")", "\n", "return", "x_vector", ",", "label_vector", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.tsne.plot_embedding": [[47, 62], ["matplotlib.figure", "matplotlib.subplot", "matplotlib.scatter", "matplotlib.title", "numpy.min", "numpy.max", "numpy.min", "numpy.max", "numpy.min", "numpy.max"], "function", ["None"], ["", "def", "plot_embedding", "(", "data", ",", "label", ",", "title", ")", ":", "\n", "    ", "x_min", ",", "x_max", "=", "np", ".", "min", "(", "data", ",", "0", ")", ",", "np", ".", "max", "(", "data", ",", "0", ")", "\n", "data", "=", "(", "data", "-", "x_min", ")", "/", "(", "x_max", "-", "x_min", ")", "\n", "if", "np", ".", "min", "(", "label", ",", "0", ")", "!=", "np", ".", "max", "(", "label", ",", "0", ")", ":", "\n", "        ", "label_min", ",", "label_max", "=", "np", ".", "min", "(", "label", ",", "0", ")", ",", "np", ".", "max", "(", "label", ",", "0", ")", "\n", "label", "=", "(", "label", "-", "label_min", ")", "/", "(", "label_max", "-", "label_min", ")", "\n", "", "else", ":", "\n", "        ", "label", "=", "label", "\n", "\n", "", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "plt", ".", "subplot", "(", "111", ")", "\n", "\n", "plt", ".", "scatter", "(", "data", "[", ":", ",", "0", "]", ",", "data", "[", ":", ",", "1", "]", ",", "10", ",", "c", "=", "label", ",", "cmap", "=", "plt", ".", "cm", ".", "Spectral", ",", "alpha", "=", "0.5", ")", "\n", "plt", ".", "title", "(", "title", ")", "\n", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.tsne.main": [[64, 79], ["tsne.get_data", "print", "len", "sklearn.manifold.TSNE", "sklearn.manifold.TSNE.fit_transform", "tsne.plot_embedding", "matplotlib.savefig", "matplotlib.close", "set", "os.path.exists", "os.mkdir"], "function", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.data_load.get_data", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.tsne.plot_embedding"], ["", "def", "main", "(", "path0", ",", "epoch", ")", ":", "\n", "    ", "data", ",", "labels_color", "=", "get_data", "(", "path0", ")", "\n", "print", "(", "'Computing t-SNE embedding epoch'", ")", "\n", "n_labels", "=", "len", "(", "set", "(", "labels_color", ")", ")", "\n", "tsne", "=", "TSNE", "(", "n_components", "=", "2", ",", "init", "=", "'pca'", ",", "random_state", "=", "0", ")", "\n", "\n", "result", "=", "tsne", ".", "fit_transform", "(", "data", ")", "\n", "\n", "fig", "=", "plot_embedding", "(", "result", ",", "labels_color", ",", "'t-SNE z_vector epoch{} n_speaker={}'", ".", "format", "(", "epoch", ",", "n_labels", ")", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "'./tsne'", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "'./tsne'", ")", ";", "\n", "\n", "", "plt", ".", "savefig", "(", "\"./tsne/z_vector_epoch{}_n_speaker={}.png\"", ".", "format", "(", "epoch", ",", "n_labels", ")", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.train.data_normlize": [[25, 27], ["train_data.std", "train_data.mean"], "function", ["None"], ["def", "data_normlize", "(", "train_data", ",", "test_data", ")", ":", "\n", "    ", "return", "(", "test_data", "-", "train_data", ".", "mean", "(", "axis", "=", "0", ")", ")", "/", "train_data", ".", "std", "(", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.train.supervise_mean_var": [[28, 40], ["numpy.array", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "list", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "mean_list.append", "set", "copy.deepcopy().cpu().numpy", "copy.deepcopy().cpu", "copy.deepcopy"], "function", ["None"], ["", "def", "supervise_mean_var", "(", "data", ",", "labels", ")", ":", "\n", "    ", "assert", "(", "data", ".", "shape", "[", "0", "]", "==", "labels", ".", "shape", "[", "0", "]", ")", ",", "'data and label must have the same length'", "\n", "#init class mean vectors", "\n", "label_class", "=", "np", ".", "array", "(", "list", "(", "set", "(", "copy", ".", "deepcopy", "(", "labels", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", ")", "\n", "mean_list", "=", "[", "]", "\n", "for", "lb", "in", "label_class", ":", "\n", "        ", "data_j", "=", "data", "[", "labels", "==", "lb", "]", "\n", "mean_j", "=", "torch", ".", "mean", "(", "data_j", ",", "0", ",", "True", ")", "\n", "\n", "mean_list", ".", "append", "(", "mean_j", ")", "\n", "", "class_mean", "=", "torch", ".", "cat", "(", "mean_list", ",", "0", ")", "\n", "return", "class_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.train.initial": [[42, 51], ["score.supervise_mean_var.clone", "print", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "print", "model", "score.supervise_mean_var"], "function", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.supervise_mean_var"], ["", "def", "initial", "(", "train_data", ",", "train_label", ",", "epoch", ")", ":", "\n", "   ", "if", "epoch", "==", "0", ":", "\n", "     ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "      ", "print", "(", "\"SCH 2: init mean by z, init var by predifined value\"", ")", "\n", "out", ",", "_", "=", "model", "(", "train_data", ")", "\n", "class_mean", "=", "supervise_mean_var", "(", "out", ",", "train_label", ")", "\n", "", "model", ".", "class_mean", ".", "data", "=", "class_mean", ".", "clone", "(", ")", "\n", "print", "(", "\"SCH2: init the mean adaptable parameters, and var un-adaptable\"", ")", "\n", "model", ".", "class_mean", ".", "requires_grad", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.train.train": [[55, 97], ["model.train", "utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "tqdm.tqdm", "enumerate", "tqdm.tqdm.close", "train.initial", "optimizer_model.zero_grad", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "torch.index_select", "model.dnf_Gaussian_log_likelihood", "dnf_loss.mean", "dnf_loss.mean.backward", "optimizer_model.step", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "tqdm.tqdm.update", "tqdm.tqdm.set_description", "len", "data.to", "labels.to", "dnf_loss.mean.item", "log_probs.mean().item", "logdet.mean().item", "data.size", "log_probs.mean", "logdet.mean"], "function", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.train.train", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.train.initial", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.FlowSequential.dnf_Gaussian_log_likelihood", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.update"], ["", "", "def", "train", "(", "epoch", ")", ":", "\n", "\n", "    ", "model", ".", "train", "(", ")", "\n", "if", "epoch", "==", "0", ":", "\n", "      ", "initial", "(", "train_data", ",", "train_label", ",", "epoch", ")", "\n", "", "class_mean", "=", "model", ".", "class_mean", "\n", "\n", "#statistics box", "\n", "losses_ag", "=", "AverageMeter", "(", ")", "\n", "logjac_ag", "=", "AverageMeter", "(", ")", "\n", "logp_ag", "=", "AverageMeter", "(", ")", "\n", "\n", "#utilities", "\n", "pbar", "=", "tqdm", "(", "total", "=", "len", "(", "train_loader", ".", "dataset", ")", ")", "\n", "\n", "#strat to train", "\n", "for", "batch_idx", ",", "(", "data", ",", "labels", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "data", ",", "labels", "=", "data", ".", "to", "(", "device", ")", ",", "labels", ".", "to", "(", "device", ")", "\n", "optimizer_model", ".", "zero_grad", "(", ")", "\n", "\n", "#flow loss with class specific means", "\n", "mean_j", "=", "torch", ".", "index_select", "(", "class_mean", ",", "0", ",", "labels", ")", "\n", "\n", "u_out", ",", "dnf_loss", ",", "log_probs", ",", "logdet", "=", "model", ".", "dnf_Gaussian_log_likelihood", "(", "data", ",", "mean_j", ",", "args", ".", "vc", ")", "\n", "\n", "loss", "=", "dnf_loss", ".", "mean", "(", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer_model", ".", "step", "(", ")", "\n", "\n", "#update statistics", "\n", "losses_ag", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "labels", ".", "shape", "[", "0", "]", ")", "\n", "logp_ag", ".", "update", "(", "log_probs", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "labels", ".", "shape", "[", "0", "]", ")", "\n", "logjac_ag", ".", "update", "(", "logdet", ".", "mean", "(", ")", ".", "item", "(", ")", ",", "labels", ".", "shape", "[", "0", "]", ")", "\n", "\n", "\n", "pbar", ".", "update", "(", "data", ".", "size", "(", "0", ")", ")", "\n", "pbar", ".", "set_description", "(", "'Total val/avg={:.3f}/{:.3f}  LogP val/avg={:.3f}/{:.3f} LogDet val/avg= {:.3f}/{:.3f}'", ".", "format", "(", "\n", "losses_ag", ".", "val", ",", "losses_ag", ".", "avg", ",", "logp_ag", ".", "val", ",", "logp_ag", ".", "avg", ",", "logjac_ag", ".", "val", ",", "logjac_ag", ".", "avg", ")", ")", "\n", "\n", "#utility ", "\n", "", "pbar", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.data_load.data_load.__init__": [[10, 14], ["data_load.load_data_normalised", "data_load.data_load.Data", "data_load.data_load.Data"], "methods", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.data_load.load_data_normalised"], ["", "", "def", "__init__", "(", "self", ",", "path", ",", "nclass", "=", "0", ")", ":", "\n", "        ", "data", ",", "label", "=", "load_data_normalised", "(", "path", ",", "nclass", ")", "\n", "self", ".", "dt", "=", "self", ".", "Data", "(", "data", ")", "\n", "self", ".", "label", "=", "self", ".", "Data", "(", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.data_load.get_data": [[15, 51], ["numpy.load", "range", "print", "numpy.array", "numpy.array", "print", "print", "ID_list.append", "len", "x_dic[].append", "len", "np.array.append", "np.array.append", "label.split", "len", "set"], "function", ["None"], ["", "", "def", "get_data", "(", "path", ",", "n_filter", "=", "0", ")", ":", "\n", "    ", "data", "=", "np", ".", "load", "(", "path", ")", "\n", "\n", "X", "=", "data", "[", "'vector'", "]", "\n", "labels", "=", "data", "[", "'utt'", "]", "\n", "\n", "ID_list", "=", "[", "]", "\n", "for", "label", "in", "labels", ":", "\n", "        ", "ID_list", ".", "append", "(", "label", ".", "split", "(", "'-'", ")", "[", "0", "]", ")", "\n", "", "x_dic", "=", "{", "}", "\n", "for", "i", "in", "ID_list", ":", "\n", "        ", "x_dic", "[", "i", "]", "=", "[", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "ID_list", ")", ")", ":", "\n", "        ", "if", "ID_list", "[", "i", "]", "in", "x_dic", ":", "\n", "           ", "x_dic", "[", "ID_list", "[", "i", "]", "]", ".", "append", "(", "X", "[", "i", "]", ")", "\n", "", "", "x_choose", "=", "{", "}", "\n", "for", "i", "in", "x_dic", ":", "\n", "        ", "if", "len", "(", "x_dic", "[", "i", "]", ")", ">=", "n_filter", ":", "\n", "            ", "x_choose", "[", "i", "]", "=", "x_dic", "[", "i", "]", "\n", "", "", "print", "(", "'x_choose done'", ")", "\n", "\n", "x_vector", "=", "[", "]", "\n", "label_vector", "=", "[", "]", "\n", "n", "=", "0", "\n", "for", "i", "in", "x_choose", ":", "\n", "        ", "for", "j", "in", "x_choose", "[", "i", "]", ":", "\n", "            ", "x_vector", ".", "append", "(", "j", ")", "\n", "label_vector", ".", "append", "(", "n", ")", "\n", "", "n", "+=", "1", "\n", "", "x_vector", "=", "np", ".", "array", "(", "x_vector", ")", "\n", "label_vector", "=", "np", ".", "array", "(", "label_vector", ")", "\n", "\n", "print", "(", "'%d samples loaded, dim=%d, labels=%d, nclasses=%d'", "%", "(", "x_vector", ".", "shape", "[", "0", "]", ",", "x_vector", ".", "shape", "[", "1", "]", ",", "label_vector", ".", "shape", "[", "0", "]", ",", "len", "(", "set", "(", "label_vector", ")", ")", ")", ")", "\n", "print", "(", "'label_vector1='", ",", "label_vector", ")", "\n", "\n", "return", "x_vector", ",", "label_vector", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.data_load.load_data_normalised": [[54, 57], ["data_load.get_data"], "function", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.data_load.get_data"], ["", "def", "load_data_normalised", "(", "path", ",", "n_filter", ")", ":", "\n", "    ", "X", ",", "labels", "=", "get_data", "(", "path", ",", "n_filter", ")", "\n", "return", "X", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.data_load.dataset_prepare": [[59, 84], ["print", "data_load.data_load", "torch.from_numpy", "torch.from_numpy", "torch.utils.data.TensorDataset", "print", "data_load.data_load", "torch.from_numpy", "torch.from_numpy", "torch.utils.data.TensorDataset", "print", "data_load.data_load", "torch.from_numpy", "torch.from_numpy", "torch.utils.data.TensorDataset"], "function", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.data_load", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.data_load", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.data_load"], ["", "def", "dataset_prepare", "(", "n_filter", "=", "0", ",", "test_name", "=", "None", ")", ":", "\n", "\n", "#training set voxceleb_4k_speaker", "\n", "    ", "print", "(", "\"loading training data from %s\"", "%", "'./data/xvector/vox_4k.npz'", ")", ";", "\n", "trn_data", "=", "data_load", "(", "'./data/xvector/vox_4k.npz'", ",", "n_filter", ")", "\n", "t0_tensor", "=", "torch", ".", "from_numpy", "(", "trn_data", ".", "dt", ".", "x", ")", "\n", "t0_label_tensor", "=", "torch", ".", "from_numpy", "(", "trn_data", ".", "label", ".", "y", ")", "\n", "t0_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "t0_tensor", ",", "t0_label_tensor", ")", "\n", "\n", "\n", "#sitw enroll", "\n", "print", "(", "\"loading enrollment data from %s\"", "%", "'./data/xvector/Sitw/enroll.npz'", ")", ";", "\n", "enr_data", "=", "data_load", "(", "'./data/xvector/Sitw/enroll.npz'", ",", "0", ")", "\n", "t1_tensor", "=", "torch", ".", "from_numpy", "(", "enr_data", ".", "dt", ".", "x", ")", "\n", "t1_label_tensor", "=", "torch", ".", "from_numpy", "(", "enr_data", ".", "label", ".", "y", ")", "\n", "t1_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "t1_tensor", ",", "t1_label_tensor", ")", "\n", "#testset: verify", "\n", "print", "(", "\"loading enrollment data from %s\"", "%", "'./data/xvector/Sitw/test.npz'", ")", ";", "\n", "ver_data", "=", "data_load", "(", "'./data/xvector/Sitw/test.npz'", ",", "0", ")", "\n", "t2_tensor", "=", "torch", ".", "from_numpy", "(", "ver_data", ".", "dt", ".", "x", ")", "\n", "t2_label_tensor", "=", "torch", ".", "from_numpy", "(", "ver_data", ".", "label", ".", "y", ")", "\n", "t2_dataset", "=", "torch", ".", "utils", ".", "data", ".", "TensorDataset", "(", "t2_tensor", ",", "t2_label_tensor", ")", "\n", "\n", "\n", "return", "t0_dataset", ",", "t1_dataset", ",", "t2_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.MaskedLinear.__init__": [[31, 40], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "model.MaskedLinear.register_buffer"], "methods", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_features", ",", "\n", "out_features", ",", "\n", "mask", ",", "\n", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "MaskedLinear", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "in_features", ",", "out_features", ")", "\n", "\n", "self", ".", "register_buffer", "(", "'mask'", ",", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.MaskedLinear.forward": [[41, 45], ["torch.linear", "torch.linear", "torch.linear"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "output", "=", "F", ".", "linear", "(", "inputs", ",", "self", ".", "linear", ".", "weight", "*", "self", ".", "mask", ",", "\n", "self", ".", "linear", ".", "bias", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.MADE.__init__": [[52, 75], ["torch.Module.__init__", "model.get_mask", "model.get_mask", "model.get_mask", "torch.MaskedLinear", "torch.MaskedLinear", "torch.MaskedLinear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "act_func", "torch.MaskedLinear", "torch.MaskedLinear", "torch.MaskedLinear", "act_func", "torch.MaskedLinear", "torch.MaskedLinear", "torch.MaskedLinear"], "methods", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.__init__", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.get_mask", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.get_mask", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.get_mask"], ["def", "__init__", "(", "self", ",", "\n", "num_inputs", ",", "\n", "num_hidden", ",", "\n", "act", "=", "'relu'", ",", "\n", "pre_exp_tanh", "=", "False", ")", ":", "\n", "        ", "super", "(", "MADE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "activations", "=", "{", "'relu'", ":", "nn", ".", "ReLU", ",", "'PReLU'", ":", "nn", ".", "PReLU", ",", "'LeakyReLU'", ":", "nn", ".", "LeakyReLU", ",", "'sigmoid'", ":", "nn", ".", "Sigmoid", ",", "'tanh'", ":", "nn", ".", "Tanh", "}", "\n", "act_func", "=", "activations", "[", "act", "]", "\n", "\n", "input_mask", "=", "get_mask", "(", "\n", "num_inputs", ",", "num_hidden", ",", "num_inputs", ",", "mask_type", "=", "'input'", ")", "\n", "hidden_mask", "=", "get_mask", "(", "num_hidden", ",", "num_hidden", ",", "num_inputs", ")", "\n", "output_mask", "=", "get_mask", "(", "\n", "num_hidden", ",", "num_inputs", "*", "2", ",", "num_inputs", ",", "mask_type", "=", "'output'", ")", "\n", "\n", "self", ".", "joiner", "=", "nn", ".", "MaskedLinear", "(", "num_inputs", ",", "num_hidden", ",", "input_mask", ")", "\n", "\n", "self", ".", "trunk", "=", "nn", ".", "Sequential", "(", "act_func", "(", ")", ",", "\n", "nn", ".", "MaskedLinear", "(", "num_hidden", ",", "num_hidden", ",", "\n", "hidden_mask", ")", ",", "act_func", "(", ")", ",", "\n", "nn", ".", "MaskedLinear", "(", "num_hidden", ",", "num_inputs", "*", "2", ",", "\n", "output_mask", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.MADE.forward": [[76, 81], ["model.MADE.joiner", "model.MADE.trunk().chunk", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "model.MADE.trunk", "a.sum"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "mode", "=", "'direct'", ")", ":", "\n", "        ", "h", "=", "self", ".", "joiner", "(", "inputs", ")", "\n", "m", ",", "a", "=", "self", ".", "trunk", "(", "h", ")", ".", "chunk", "(", "2", ",", "1", ")", "\n", "u", "=", "(", "inputs", "-", "m", ")", "*", "torch", ".", "exp", "(", "-", "a", ")", "\n", "return", "u", ",", "-", "a", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.FlowSequential.set_class_mean": [[91, 94], ["torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter"], "methods", ["None"], ["def", "set_class_mean", "(", "self", ",", "class_mean", "=", "None", ",", "class_mean_grad", "=", "True", ")", ":", "\n", "        ", "self", ".", "class_mean", "=", "torch", ".", "nn", ".", "Parameter", "(", "class_mean", ",", "requires_grad", "=", "class_mean_grad", ")", "\n", "return", "self", ".", "class_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.FlowSequential.forward": [[96, 102], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "model.FlowSequential._modules.values", "inputs.size", "module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "logdets", "=", "torch", ".", "zeros", "(", "inputs", ".", "size", "(", "0", ")", ",", "1", ",", "device", "=", "inputs", ".", "device", ")", "\n", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "inputs", ",", "logdet", "=", "module", "(", "inputs", ")", "\n", "logdets", "+=", "logdet", "\n", "", "return", "inputs", ",", "logdets", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.FlowSequential.dnf_Gaussian_log_likelihood": [[105, 114], ["model.FlowSequential.", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.log().sum", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["None"], ["", "def", "dnf_Gaussian_log_likelihood", "(", "self", ",", "inputs", ",", "mean_j", ",", "v_c", ")", ":", "\n", "#forward pass", "\n", "        ", "u", ",", "logdet", "=", "self", "(", "inputs", ")", "\n", "class_var", "=", "torch", ".", "ones", "(", "u", ".", "shape", "[", "1", "]", ",", "device", "=", "u", ".", "device", ")", "*", "(", "v_c", "**", "0.5", ")", "\n", "\n", "log_det_sigma", "=", "torch", ".", "log", "(", "class_var", "+", "1e-10", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "log_probs", "=", "-", "0.5", "*", "(", "(", "torch", ".", "pow", "(", "(", "u", "-", "mean_j", ")", ",", "2", ")", "/", "(", "class_var", "+", "1e-10", ")", "+", "torch", ".", "log", "(", "2", "*", "pi", ")", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "+", "log_det_sigma", ")", "\n", "\n", "return", "u", ",", "-", "(", "log_probs", "+", "logdet", ")", ".", "mean", "(", ")", ",", "log_probs", ",", "logdet", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.model.get_mask": [[11, 28], ["torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "out_degrees.unsqueeze", "in_degrees.unsqueeze"], "function", ["None"], ["def", "get_mask", "(", "in_features", ",", "out_features", ",", "in_flow_features", ",", "mask_type", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    mask_type: input | None | output\n    See Figure 1 for a better illustration:\n    https://arxiv.org/pdf/1502.03509.pdf\n    \"\"\"", "\n", "if", "mask_type", "==", "'input'", ":", "\n", "        ", "in_degrees", "=", "torch", ".", "arange", "(", "in_features", ")", "%", "in_flow_features", "\n", "", "else", ":", "\n", "        ", "in_degrees", "=", "torch", ".", "arange", "(", "in_features", ")", "%", "(", "in_flow_features", "-", "1", ")", "\n", "\n", "", "if", "mask_type", "==", "'output'", ":", "\n", "        ", "out_degrees", "=", "torch", ".", "arange", "(", "out_features", ")", "%", "in_flow_features", "-", "1", "\n", "", "else", ":", "\n", "        ", "out_degrees", "=", "torch", ".", "arange", "(", "out_features", ")", "%", "(", "in_flow_features", "-", "1", ")", "\n", "\n", "", "return", "(", "out_degrees", ".", "unsqueeze", "(", "-", "1", ")", ">=", "in_degrees", ".", "unsqueeze", "(", "0", ")", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.data_load": [[12, 26], ["numpy.load", "numpy.load", "numpy.load", "score.load_trails", "tr_vec.mean", "tr_vec.mean"], "function", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.load_trails"], ["def", "data_load", "(", "train_path", ",", "enroll_path", ",", "test_path", ",", "trails_path", ")", ":", "\n", "    ", "train", "=", "np", ".", "load", "(", "train_path", ")", "\n", "enroll", "=", "np", ".", "load", "(", "enroll_path", ")", "\n", "test", "=", "np", ".", "load", "(", "test_path", ")", "\n", "tr_vec", "=", "train", "[", "'vector'", "]", "\n", "en_vec", "=", "enroll", "[", "'vector'", "]", "\n", "en_label", "=", "enroll", "[", "'utt'", "]", "\n", "te_vec", "=", "test", "[", "'vector'", "]", "\n", "te_label", "=", "test", "[", "'utt'", "]", "\n", "en_vec", "=", "en_vec", "-", "tr_vec", ".", "mean", "(", "axis", "=", "0", ")", "\n", "te_vec", "=", "te_vec", "-", "tr_vec", ".", "mean", "(", "axis", "=", "0", ")", "\n", "trails", "=", "load_trails", "(", "trails_path", ")", "\n", "\n", "return", "en_vec", ",", "en_label", ",", "te_vec", ",", "te_label", ",", "trails", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.compute_eer": [[28, 48], ["sorted", "sorted", "len", "len", "range", "isinstance", "list", "isinstance", "list", "int", "float"], "function", ["None"], ["", "def", "compute_eer", "(", "target_scores", ",", "nontarget_scores", ")", ":", "\n", "    ", "if", "isinstance", "(", "target_scores", ",", "list", ")", "is", "False", ":", "\n", "        ", "target_scores", "=", "list", "(", "target_scores", ")", "\n", "", "if", "isinstance", "(", "nontarget_scores", ",", "list", ")", "is", "False", ":", "\n", "        ", "nontarget_scores", "=", "list", "(", "nontarget_scores", ")", "\n", "", "target_scores", "=", "sorted", "(", "target_scores", ")", "\n", "nontarget_scores", "=", "sorted", "(", "nontarget_scores", ")", "\n", "target_size", "=", "len", "(", "target_scores", ")", ";", "\n", "nontarget_size", "=", "len", "(", "nontarget_scores", ")", "\n", "for", "i", "in", "range", "(", "target_size", "-", "1", ")", ":", "\n", "        ", "target_position", "=", "i", "\n", "nontarget_n", "=", "nontarget_size", "*", "float", "(", "target_position", ")", "/", "target_size", "\n", "nontarget_position", "=", "int", "(", "nontarget_size", "-", "1", "-", "nontarget_n", ")", "\n", "if", "nontarget_position", "<", "0", ":", "\n", "            ", "nontarget_position", "=", "0", "\n", "", "if", "nontarget_scores", "[", "nontarget_position", "]", "<", "target_scores", "[", "target_position", "]", ":", "\n", "            ", "break", "\n", "", "", "th", "=", "target_scores", "[", "target_position", "]", ";", "\n", "eer", "=", "target_position", "*", "1.0", "/", "target_size", ";", "\n", "return", "eer", ",", "th", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.compute_idr": [[50, 65], ["score.load_trails", "set", "numpy.argmax"], "function", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.load_trails"], ["", "def", "compute_idr", "(", "trails_path", ",", "scores", ")", ":", "\n", "    ", "trails", "=", "load_trails", "(", "trails_path", ")", "\n", "p", "=", "0", "\n", "n", "=", "0", "\n", "for", "lb", "in", "set", "(", "trails", "[", "1", "]", ")", ":", "\n", "        ", "sco_i", "=", "scores", "[", "trails", "[", "1", "]", "==", "lb", "]", "\n", "s_index", "=", "np", ".", "argmax", "(", "sco_i", ")", "\n", "tar", "=", "trails", "[", "2", "]", "[", "trails", "[", "1", "]", "==", "lb", "]", "\n", "if", "tar", "[", "s_index", "]", "==", "'target'", ":", "\n", "            ", "p", "+=", "1", "\n", "", "else", ":", "\n", "            ", "n", "+=", "1", "\n", "", "", "idr", "=", "p", "/", "(", "n", "+", "p", ")", "\n", "\n", "return", "idr", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.load_trails": [[67, 84], ["open", "np.array.append", "np.array.append", "np.array.append", "numpy.array", "line.strip().split.strip().split", "enroll.append", "test.append", "tar.append", "line.strip().split.strip"], "function", ["None"], ["", "def", "load_trails", "(", "trails_path", ")", ":", "\n", "    ", "file", "=", "open", "(", "trails_path", ",", "'r'", ")", "\n", "trails", "=", "[", "]", "\n", "enroll", "=", "[", "]", "\n", "test", "=", "[", "]", "\n", "tar", "=", "[", "]", "\n", "for", "line", "in", "file", ":", "\n", "        ", "line", "=", "line", ".", "strip", "(", "'\\n'", ")", ".", "split", "(", "' '", ")", "\n", "enroll", ".", "append", "(", "line", "[", "0", "]", ")", "\n", "test", ".", "append", "(", "line", "[", "1", "]", ")", "\n", "tar", ".", "append", "(", "line", "[", "2", "]", ")", "\n", "\n", "", "trails", ".", "append", "(", "enroll", ")", "\n", "trails", ".", "append", "(", "test", ")", "\n", "trails", ".", "append", "(", "tar", ")", "\n", "trails", "=", "np", ".", "array", "(", "trails", ")", "\n", "return", "trails", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.supervise_mean_var": [[87, 102], ["numpy.array", "numpy.array", "numpy.array", "list", "data_j.mean", "mean_list.append", "label_list.append", "set", "copy.deepcopy"], "function", ["None"], ["", "def", "supervise_mean_var", "(", "data", ",", "label", ")", ":", "\n", "    ", "assert", "(", "data", ".", "shape", "[", "0", "]", "==", "label", ".", "shape", "[", "0", "]", ")", ",", "'data and label must have the same length'", "\n", "label_class", "=", "np", ".", "array", "(", "list", "(", "set", "(", "copy", ".", "deepcopy", "(", "label", ")", ")", ")", ")", "\n", "\n", "mean_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "for", "lb", "in", "label_class", ":", "\n", "        ", "data_j", "=", "data", "[", "label", "==", "lb", "]", "\n", "mean_j", "=", "data_j", ".", "mean", "(", "0", ")", "\n", "mean_list", ".", "append", "(", "mean_j", ")", "\n", "label_list", ".", "append", "(", "lb", ")", "\n", "", "mean_class", "=", "np", ".", "array", "(", "mean_list", ")", "\n", "mlabel", "=", "np", ".", "array", "(", "label_list", ")", "\n", "\n", "return", "mean_class", ",", "mlabel", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.Cosine_score": [[104, 121], ["score.supervise_mean_var", "range", "numpy.array", "Cosine_tensor_list.append", "tar.append", "numpy.array", "numpy.dot", "numpy.linalg.norm", "numpy.linalg.norm"], "function", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.supervise_mean_var"], ["", "def", "Cosine_score", "(", "test_vec", ",", "te_label", ",", "enroll_vec", ",", "enroll_label", ",", "trails", ")", ":", "\n", "    ", "mean_class", ",", "mlabel", "=", "supervise_mean_var", "(", "enroll_vec", ",", "enroll_label", ")", "\n", "\n", "Cosine_tensor_list", "=", "[", "]", "\n", "tar", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "trails", "[", "0", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "e", "=", "mean_class", "[", "mlabel", "==", "trails", "[", "0", "]", "[", "i", "]", "]", "[", "0", "]", "\n", "t", "=", "test_vec", "[", "te_label", "==", "trails", "[", "1", "]", "[", "i", "]", "]", "[", "0", "]", "\n", "\n", "Cosine_similarity", "=", "np", ".", "dot", "(", "e", ",", "t", ")", "/", "(", "np", ".", "linalg", ".", "norm", "(", "e", ")", "*", "np", ".", "linalg", ".", "norm", "(", "t", ")", ")", "\n", "\n", "Cosine_tensor_list", ".", "append", "(", "Cosine_similarity", ")", "\n", "tar", ".", "append", "(", "trails", "[", "2", "]", "[", "i", "]", ")", "\n", "\n", "", "Cosine_scores", "=", "np", ".", "array", "(", "Cosine_tensor_list", ")", "\n", "\n", "return", "Cosine_scores", ",", "np", ".", "array", "(", "tar", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.cosine_scoring_by_trails": [[123, 128], ["score.data_load", "score.Cosine_score", "score.compute_eer"], "function", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.data_load", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.Cosine_score", "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.score.compute_eer"], ["", "def", "cosine_scoring_by_trails", "(", "train_path", ",", "enroll_path", ",", "test_path", ",", "trails_path", ")", ":", "\n", "    ", "en_vec", ",", "en_label", ",", "te_vec", ",", "te_label", ",", "trails", "=", "data_load", "(", "train_path", ",", "enroll_path", ",", "test_path", ",", "trails_path", ")", "\n", "Cosine_scores", ",", "tar", "=", "Cosine_score", "(", "te_vec", ",", "te_label", ",", "en_vec", ",", "en_label", ",", "trails", ")", "\n", "eer", ",", "th", "=", "compute_eer", "(", "Cosine_scores", "[", "tar", "==", "'target'", "]", ",", "Cosine_scores", "[", "tar", "==", "'nontarget'", "]", ")", "\n", "return", "eer", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.__init__": [[19, 21], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.reset": [[22, 27], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.AverageMeter.update": [[28, 33], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.Caiyq2019_Deep-generative-LDA.None.utils.save_images": [[36, 50], ["best_model.eval", "torch.no_grad", "torch.sigmoid", "os.makedirs", "best_model.sample().detach().cpu", "best_model.sample().detach().cpu", "best_model.sample().detach().cpu.view", "best_model.sample().detach", "best_model.sample().detach", "best_model.sample", "best_model.sample"], "function", ["None"], ["", "", "def", "save_images", "(", "epoch", ",", "best_model", ",", "cond", ")", ":", "\n", "    ", "best_model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "if", "cond", ":", "\n", "            ", "imgs", "=", "best_model", ".", "sample", "(", "batch_size", ",", "noise", "=", "fixed_noise", ",", "cond_inputs", "=", "y_onehot", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "", "else", ":", "\n", "            ", "imgs", "=", "best_model", ".", "sample", "(", "batch_size", ",", "noise", "=", "fixed_noise", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "", "imgs", "=", "torch", ".", "sigmoid", "(", "imgs", ".", "view", "(", "batch_size", ",", "1", ",", "28", ",", "28", ")", ")", "\n", "\n", "", "try", ":", "\n", "        ", "os", ".", "makedirs", "(", "'images'", ")", "\n", "", "except", "OSError", ":", "\n", "        ", "pass", "\n", "\n"]]}