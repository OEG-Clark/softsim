{"home.repos.pwc.inspect_result.shijieS_SST.None.test_mot17.test": [[23, 113], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "utils.timer.Timer", "zip", "print", "print", "os.path.exists", "os.mkdir", "tracker.TrackerConfig.get_configure_str", "os.path.join", "f", "f", "f", "f", "print", "tracker.SSTTracker", "data.mot_data_reader.MOTDataReader", "list", "enumerate", "numpy.savetxt", "print", "os.path.exists", "os.mkdir", "format_str.format", "float", "float", "utils.timer.Timer.tic", "tracker.SSTTracker.update", "utils.timer.Timer.toc", "print", "numpy.array().astype", "str", "str", "str", "str", "len", "len", "cv2.VideoWriter", "cv2.imshow", "cv2.waitKey", "cv2.VideoWriter.write", "len", "cv2.VideoWriter_fourcc", "os.path.basename", "int", "n.get_box", "list.append", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.get_configure_str", "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.tic", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.toc", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_box", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["def", "test", "(", "choice", "=", "None", ")", ":", "\n", "    ", "if", "args", ".", "type", "==", "'train'", ":", "\n", "        ", "dataset_index", "=", "[", "2", ",", "4", ",", "5", ",", "9", ",", "10", ",", "11", ",", "13", "]", "\n", "dataset_detection_type", "=", "{", "'-DPM'", ",", "'-FRCNN'", ",", "'-SDP'", "}", "\n", "\n", "", "if", "args", ".", "type", "==", "'test'", ":", "\n", "        ", "dataset_index", "=", "[", "1", ",", "3", ",", "6", ",", "7", ",", "8", ",", "12", ",", "14", "]", "\n", "dataset_detection_type", "=", "{", "'-FRCNN'", ",", "'-SDP'", ",", "'-DPM'", "}", "\n", "\n", "", "dataset_image_folder_format", "=", "os", ".", "path", ".", "join", "(", "args", ".", "mot_root", ",", "args", ".", "type", "+", "'/MOT'", "+", "str", "(", "args", ".", "mot_version", ")", "+", "'-{:02}{}/img1'", ")", "\n", "detection_file_name_format", "=", "os", ".", "path", ".", "join", "(", "args", ".", "mot_root", ",", "args", ".", "type", "+", "'/MOT'", "+", "str", "(", "args", ".", "mot_version", ")", "+", "'-{:02}{}/det/det.txt'", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "log_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "log_folder", ")", "\n", "\n", "", "save_folder", "=", "''", "\n", "choice_str", "=", "''", "\n", "if", "not", "choice", "is", "None", ":", "\n", "        ", "choice_str", "=", "TrackerConfig", ".", "get_configure_str", "(", "choice", ")", "\n", "save_folder", "=", "os", ".", "path", ".", "join", "(", "args", ".", "log_folder", ",", "choice_str", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_folder", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "save_folder", ")", "\n", "# else:", "\n", "#     return", "\n", "\n", "", "", "saved_file_name_format", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'MOT'", "+", "str", "(", "args", ".", "mot_version", ")", "+", "'-{:02}{}.txt'", ")", "\n", "save_video_name_format", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'MOT'", "+", "str", "(", "args", ".", "mot_version", ")", "+", "'-{:02}{}.avi'", ")", "\n", "\n", "f", "=", "lambda", "format_str", ":", "[", "format_str", ".", "format", "(", "index", ",", "type", ")", "for", "type", "in", "dataset_detection_type", "for", "index", "in", "dataset_index", "]", "\n", "\n", "timer", "=", "Timer", "(", ")", "\n", "for", "image_folder", ",", "detection_file_name", ",", "saved_file_name", ",", "save_video_name", "in", "zip", "(", "f", "(", "dataset_image_folder_format", ")", ",", "f", "(", "detection_file_name_format", ")", ",", "f", "(", "saved_file_name_format", ")", ",", "f", "(", "save_video_name_format", ")", ")", ":", "\n", "        ", "print", "(", "'start processing '", "+", "saved_file_name", ")", "\n", "tracker", "=", "SSTTracker", "(", ")", "\n", "reader", "=", "MOTDataReader", "(", "image_folder", "=", "image_folder", ",", "\n", "detection_file_name", "=", "detection_file_name", ",", "\n", "min_confidence", "=", "0.0", ")", "\n", "result", "=", "list", "(", ")", "\n", "result_str", "=", "saved_file_name", "\n", "first_run", "=", "True", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "reader", ")", ":", "\n", "            ", "if", "i", ">", "len", "(", "reader", ")", ":", "\n", "                ", "break", "\n", "\n", "", "if", "item", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "img", "=", "item", "[", "0", "]", "\n", "det", "=", "item", "[", "1", "]", "\n", "\n", "if", "img", "is", "None", "or", "det", "is", "None", "or", "len", "(", "det", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "len", "(", "det", ")", ">", "config", "[", "'max_object'", "]", ":", "\n", "                ", "det", "=", "det", "[", ":", "config", "[", "'max_object'", "]", ",", ":", "]", "\n", "\n", "", "h", ",", "w", ",", "_", "=", "img", ".", "shape", "\n", "\n", "\n", "if", "first_run", "and", "args", ".", "save_video", ":", "\n", "                ", "vw", "=", "cv2", ".", "VideoWriter", "(", "save_video_name", ",", "cv2", ".", "VideoWriter_fourcc", "(", "'M'", ",", "'J'", ",", "'P'", ",", "'G'", ")", ",", "10", ",", "(", "w", ",", "h", ")", ")", "\n", "first_run", "=", "False", "\n", "\n", "", "det", "[", ":", ",", "[", "2", ",", "4", "]", "]", "/=", "float", "(", "w", ")", "\n", "det", "[", ":", ",", "[", "3", ",", "5", "]", "]", "/=", "float", "(", "h", ")", "\n", "timer", ".", "tic", "(", ")", "\n", "image_org", "=", "tracker", ".", "update", "(", "img", ",", "det", "[", ":", ",", "2", ":", "6", "]", ",", "args", ".", "show_image", ",", "i", ")", "\n", "timer", ".", "toc", "(", ")", "\n", "print", "(", "'{}:{}, {}, {}\\r'", ".", "format", "(", "os", ".", "path", ".", "basename", "(", "saved_file_name", ")", ",", "i", ",", "int", "(", "i", "*", "100", "/", "len", "(", "reader", ")", ")", ",", "choice_str", ")", ")", "\n", "if", "args", ".", "show_image", "and", "not", "image_org", "is", "None", ":", "\n", "                ", "cv2", ".", "imshow", "(", "'res'", ",", "image_org", ")", "\n", "cv2", ".", "waitKey", "(", "1", ")", "\n", "\n", "", "if", "args", ".", "save_video", "and", "not", "image_org", "is", "None", ":", "\n", "                ", "vw", ".", "write", "(", "image_org", ")", "\n", "\n", "# save result", "\n", "", "for", "t", "in", "tracker", ".", "tracks", ":", "\n", "                ", "n", "=", "t", ".", "nodes", "[", "-", "1", "]", "\n", "if", "t", ".", "age", "==", "1", ":", "\n", "                    ", "b", "=", "n", ".", "get_box", "(", "tracker", ".", "frame_index", "-", "1", ",", "tracker", ".", "recorder", ")", "\n", "result", ".", "append", "(", "\n", "[", "i", "]", "+", "[", "t", ".", "id", "]", "+", "[", "b", "[", "0", "]", "*", "w", ",", "b", "[", "1", "]", "*", "h", ",", "b", "[", "2", "]", "*", "w", ",", "b", "[", "3", "]", "*", "h", "]", "+", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", "\n", ")", "\n", "# save data", "\n", "", "", "", "np", ".", "savetxt", "(", "saved_file_name", ",", "np", ".", "array", "(", "result", ")", ".", "astype", "(", "int", ")", ",", "fmt", "=", "'%i'", ")", "\n", "print", "(", "result_str", ")", "\n", "\n", "", "print", "(", "timer", ".", "total_time", ")", "\n", "print", "(", "timer", ".", "average_time", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.test_mot16.test": [[21, 103], ["os.path.join", "os.path.join", "utils.timer.Timer", "zip", "print", "print", "f", "f", "f", "f", "print", "sst_tracker.TrackSet", "data.mot_data_reader.MOTDataReader", "list", "numpy.savetxt", "print", "str", "str", "format_str.format", "float", "float", "utils.timer.Timer.tic", "sst_tracker.TrackSet.update", "utils.timer.Timer.toc", "print", "numpy.array().astype", "str", "str", "len", "len", "cv2.VideoWriter", "cv2.imshow", "cv2.waitKey", "cv2.VideoWriter.write", "len", "cv2.VideoWriter_fourcc", "int", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.tic", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.toc"], ["def", "test", "(", ")", ":", "\n", "    ", "if", "args", ".", "type", "==", "'train'", ":", "\n", "        ", "dataset_index", "=", "[", "2", ",", "4", ",", "5", ",", "9", ",", "10", ",", "11", ",", "13", "]", "\n", "# dataset_index = [10]", "\n", "dataset_detection_type", "=", "{", "'-DPM'", ",", "'-FRCNN'", ",", "'-SDP'", "}", "\n", "dataset_detection_type", "=", "{", "'-FRCNN'", "}", "\n", "\n", "", "if", "args", ".", "type", "==", "'test'", ":", "\n", "# dataset_index = [1, 3, 6, 7, 8, 12, 14]", "\n", "        ", "dataset_index", "=", "[", "3", "]", "\n", "dataset_detection_type", "=", "{", "'-DPM'", ",", "'-FRCNN'", ",", "'-SDP'", "}", "\n", "dataset_detection_type", "=", "{", "'-FRCNN'", "}", "\n", "\n", "", "dataset_detection_type", "=", "{", "''", "}", "\n", "dataset_image_folder_format", "=", "os", ".", "path", ".", "join", "(", "args", ".", "mot_root", ",", "args", ".", "type", "+", "'/MOT'", "+", "str", "(", "args", ".", "mot_version", ")", "+", "'-{:02}{}/img1'", ")", "\n", "detection_file_name_format", "=", "os", ".", "path", ".", "join", "(", "args", ".", "mot_root", ",", "args", ".", "type", "+", "'/MOT'", "+", "str", "(", "args", ".", "mot_version", ")", "+", "'-{:02}{}/det/det.txt'", ")", "\n", "saved_file_name_format", "=", "'MOT'", "+", "str", "(", "args", ".", "mot_version", ")", "+", "'-{:02}{}.txt'", "\n", "save_video_name_format", "=", "'MOT'", "+", "str", "(", "args", ".", "mot_version", ")", "+", "'-{:02}{}.avi'", "\n", "\n", "\n", "f", "=", "lambda", "format_str", ":", "[", "format_str", ".", "format", "(", "index", ",", "type", ")", "for", "type", "in", "dataset_detection_type", "for", "index", "in", "dataset_index", "]", "\n", "\n", "timer", "=", "Timer", "(", ")", "\n", "for", "image_folder", ",", "detection_file_name", ",", "saved_file_name", ",", "save_video_name", "in", "zip", "(", "f", "(", "dataset_image_folder_format", ")", ",", "f", "(", "detection_file_name_format", ")", ",", "f", "(", "saved_file_name_format", ")", ",", "f", "(", "save_video_name_format", ")", ")", ":", "\n", "        ", "print", "(", "'start processing '", "+", "saved_file_name", ")", "\n", "tracker", "=", "SSTTracker", "(", ")", "\n", "reader", "=", "MOTDataReader", "(", "image_folder", "=", "image_folder", ",", "\n", "detection_file_name", "=", "detection_file_name", ")", "\n", "i", "=", "0", "\n", "result", "=", "list", "(", ")", "\n", "result_str", "=", "saved_file_name", "\n", "\n", "\n", "for", "item", "in", "reader", ":", "\n", "            ", "i", "+=", "1", "\n", "if", "i", ">", "len", "(", "reader", ")", ":", "\n", "                ", "break", "\n", "\n", "", "if", "item", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "img", "=", "item", "[", "0", "]", "\n", "det", "=", "item", "[", "1", "]", "\n", "\n", "if", "img", "is", "None", "or", "det", "is", "None", "or", "len", "(", "det", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "len", "(", "det", ")", ">", "config", "[", "'max_object'", "]", ":", "\n", "                ", "det", "=", "det", "[", ":", "config", "[", "'max_object'", "]", ",", ":", "]", "\n", "\n", "", "h", ",", "w", ",", "_", "=", "img", ".", "shape", "\n", "\n", "if", "i", "==", "1", "and", "args", ".", "save_video", ":", "\n", "                ", "vw", "=", "cv2", ".", "VideoWriter", "(", "save_video_name", ",", "cv2", ".", "VideoWriter_fourcc", "(", "'M'", ",", "'J'", ",", "'P'", ",", "'G'", ")", ",", "10", ",", "(", "w", ",", "h", ")", ")", "\n", "\n", "", "det", "[", ":", ",", "[", "2", ",", "4", "]", "]", "/=", "float", "(", "w", ")", "\n", "det", "[", ":", ",", "[", "3", ",", "5", "]", "]", "/=", "float", "(", "h", ")", "\n", "timer", ".", "tic", "(", ")", "\n", "image_org", "=", "tracker", ".", "update", "(", "img", ",", "det", "[", ":", ",", "2", ":", "6", "]", ",", "args", ".", "show_image", ")", "\n", "timer", ".", "toc", "(", ")", "\n", "print", "(", "'{}:{}, {}\\r'", ".", "format", "(", "saved_file_name", ",", "i", ",", "int", "(", "i", "*", "100", "/", "len", "(", "reader", ")", ")", ")", ")", "\n", "if", "args", ".", "show_image", "and", "not", "image_org", "is", "None", ":", "\n", "                ", "cv2", ".", "imshow", "(", "'res'", ",", "image_org", ")", "\n", "cv2", ".", "waitKey", "(", "10", ")", "\n", "\n", "", "if", "args", ".", "save_video", "and", "not", "image_org", "is", "None", ":", "\n", "                ", "vw", ".", "write", "(", "image_org", ")", "\n", "\n", "# save result", "\n", "# for t in tracker.tracks:", "\n", "#     n = t.nodes[-1]", "\n", "#     if t.age == 1:", "\n", "#         b = n.box", "\n", "#         result.append(", "\n", "#             [i] + [t.id] + [b[0]*w, b[1]*h, b[2]*w, b[3]*h] + [-1, -1, -1, -1]", "\n", "#         )", "\n", "# save data", "\n", "", "", "np", ".", "savetxt", "(", "saved_file_name", ",", "np", ".", "array", "(", "result", ")", ".", "astype", "(", "int", ")", ",", "fmt", "=", "'%i'", ")", "\n", "print", "(", "result_str", ")", "\n", "\n", "", "print", "(", "timer", ".", "total_time", ")", "\n", "print", "(", "timer", ".", "average_time", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_ua.xavier": [[94, 96], ["torch.xavier_uniform"], "function", ["None"], ["", "def", "xavier", "(", "param", ")", ":", "\n", "    ", "init", ".", "xavier_uniform", "(", "param", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_ua.weights_init": [[97, 101], ["isinstance", "train_ua.xavier", "m.bias.data.zero_"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.xavier"], ["", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "xavier", "(", "m", ".", "weight", ".", "data", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_ua.train": [[116, 231], ["net.train", "print", "data.ua.UATrainDataset", "print", "torch.DataLoader", "print", "range", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "utils.augmentations.SSJAugmentation", "len", "next", "time.time", "net", "optimizer.zero_grad", "criterion", "loss.backward", "optimizer.step", "time.time", "sst_net.state_dict", "train_ua.adjust_learning_rate", "iter", "train_ua.adjust_learning_rate", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "loss.data.cpu", "print", "print", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "len", "writer.add_scalar", "loss.data.cpu", "loss_pre.data.cpu", "loss_next.data.cpu", "loss_similarity.data.cpu", "accuracy.data.cpu", "accuracy_pre.data.cpu", "accuracy_next.data.cpu", "net.named_parameters", "utils.operation.show_batch_circle_image", "writer.add_image", "sst_net.state_dict", "os.path.join", "float", "writer.add_histogram", "torchvision.make_grid", "numpy.mean", "param.clone().cpu().data.numpy", "repr", "repr", "float", "repr", "param.clone().cpu", "param.clone"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.train", "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.adjust_learning_rate", "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.adjust_learning_rate", "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.show_batch_circle_image"], ["def", "train", "(", ")", ":", "\n", "    ", "net", ".", "train", "(", ")", "\n", "current_lr", "=", "config", "[", "'learning_rate'", "]", "\n", "print", "(", "'Loading Dataset...'", ")", "\n", "\n", "dataset", "=", "UATrainDataset", "(", "args", ".", "ua_image_root", ",", "\n", "args", ".", "ua_detection_root", ",", "\n", "args", ".", "ua_ignore_root", ",", "\n", "SSJAugmentation", "(", "\n", "sst_dim", ",", "means", "\n", ")", ")", "\n", "\n", "epoch_size", "=", "len", "(", "dataset", ")", "//", "args", ".", "batch_size", "\n", "print", "(", "'Training SST on'", ",", "dataset", ".", "dataset_name", ")", "\n", "step_index", "=", "0", "\n", "\n", "batch_iterator", "=", "None", "\n", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "shuffle", "=", "True", ",", "\n", "collate_fn", "=", "collate_fn", ",", "\n", "pin_memory", "=", "False", ")", "\n", "\n", "# adjust the learning rate", "\n", "print", "(", "'adjust the learning rate'", ")", "\n", "for", "iteration", "in", "range", "(", "args", ".", "start_iter", ")", ":", "\n", "        ", "if", "iteration", "in", "stepvalues", ":", "\n", "            ", "step_index", "+=", "1", "\n", "current_lr", "=", "adjust_learning_rate", "(", "optimizer", ",", "args", ".", "gamma", ",", "step_index", ")", "\n", "\n", "# start training", "\n", "", "", "for", "iteration", "in", "range", "(", "args", ".", "start_iter", ",", "max_iter", ")", ":", "\n", "        ", "if", "(", "not", "batch_iterator", ")", "or", "(", "iteration", "%", "epoch_size", "==", "0", ")", ":", "\n", "# create batch iterator", "\n", "            ", "batch_iterator", "=", "iter", "(", "data_loader", ")", "\n", "all_epoch_loss", "=", "[", "]", "\n", "\n", "", "if", "iteration", "in", "stepvalues", ":", "\n", "            ", "step_index", "+=", "1", "\n", "current_lr", "=", "adjust_learning_rate", "(", "optimizer", ",", "args", ".", "gamma", ",", "step_index", ")", "\n", "\n", "# load train data", "\n", "", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ",", "valid_pre", ",", "valid_next", "=", "next", "(", "batch_iterator", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "img_pre", "=", "Variable", "(", "img_pre", ".", "cuda", "(", ")", ")", "\n", "img_next", "=", "Variable", "(", "img_next", ".", "cuda", "(", ")", ")", "\n", "boxes_pre", "=", "Variable", "(", "boxes_pre", ".", "cuda", "(", ")", ")", "\n", "boxes_next", "=", "Variable", "(", "boxes_next", ".", "cuda", "(", ")", ")", "\n", "valid_pre", "=", "Variable", "(", "valid_pre", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "valid_next", "=", "Variable", "(", "valid_next", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "labels", "=", "Variable", "(", "labels", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "\n", "", "else", ":", "\n", "            ", "img_pre", "=", "Variable", "(", "img_pre", ")", "\n", "img_next", "=", "Variable", "(", "img_next", ")", "\n", "boxes_pre", "=", "Variable", "(", "boxes_pre", ")", "\n", "boxes_next", "=", "Variable", "(", "boxes_next", ")", "\n", "valid_pre", "=", "Variable", "(", "valid_pre", ")", "\n", "valid_next", "=", "Variable", "(", "valid_next", ")", "\n", "labels", "=", "Variable", "(", "labels", ",", "volatile", "=", "True", ")", "\n", "\n", "\n", "# forward", "\n", "", "t0", "=", "time", ".", "time", "(", ")", "\n", "out", "=", "net", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "valid_pre", ",", "valid_next", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_pre", ",", "loss_next", ",", "loss_similarity", ",", "loss", ",", "accuracy_pre", ",", "accuracy_next", ",", "accuracy", ",", "predict_indexes", "=", "criterion", "(", "out", ",", "labels", ",", "valid_pre", ",", "valid_next", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "\n", "all_epoch_loss", "+=", "[", "loss", ".", "data", ".", "cpu", "(", ")", "]", "\n", "\n", "if", "iteration", "%", "10", "==", "0", ":", "\n", "            ", "print", "(", "'Timer: %.4f sec.'", "%", "(", "t1", "-", "t0", ")", ")", "\n", "print", "(", "'iter '", "+", "repr", "(", "iteration", ")", "+", "', '", "+", "repr", "(", "epoch_size", ")", "+", "' || epoch: %.4f '", "%", "(", "iteration", "/", "(", "float", ")", "(", "epoch_size", ")", ")", "+", "' || Loss: %.4f ||'", "%", "(", "loss", ".", "data", "[", "0", "]", ")", ",", "end", "=", "' '", ")", "\n", "\n", "", "if", "args", ".", "tensorboard", ":", "\n", "            ", "if", "len", "(", "all_epoch_loss", ")", ">", "30", ":", "\n", "                ", "writer", ".", "add_scalar", "(", "'data/epoch_loss'", ",", "float", "(", "np", ".", "mean", "(", "all_epoch_loss", ")", ")", ",", "iteration", ")", "\n", "", "writer", ".", "add_scalar", "(", "'data/learning_rate'", ",", "current_lr", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'loss/loss'", ",", "loss", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_pre'", ",", "loss_pre", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_next'", ",", "loss_next", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_similarity'", ",", "loss_similarity", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy'", ",", "accuracy", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy_pre'", ",", "accuracy_pre", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy_next'", ",", "accuracy_next", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "\n", "# add weights", "\n", "if", "iteration", "%", "1000", "==", "0", ":", "\n", "                ", "for", "name", ",", "param", "in", "net", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "writer", ".", "add_histogram", "(", "name", ",", "param", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "iteration", ")", "\n", "\n", "# add images", "\n", "", "", "if", "args", ".", "send_images", "and", "iteration", "%", "1000", "==", "0", ":", "\n", "                ", "result_image", "=", "show_batch_circle_image", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "valid_pre", ",", "valid_next", ",", "predict_indexes", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_image", "(", "'WithLabel/ImageResult'", ",", "vutils", ".", "make_grid", "(", "result_image", ",", "nrow", "=", "2", ",", "normalize", "=", "True", ",", "scale_each", "=", "True", ")", ",", "iteration", ")", "\n", "\n", "", "", "if", "iteration", "%", "save_weights_iteration", "==", "0", ":", "\n", "            ", "print", "(", "'Saving state, iter:'", ",", "iteration", ")", "\n", "torch", ".", "save", "(", "sst_net", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "save_folder", ",", "\n", "'sst300_0712_'", "+", "repr", "(", "iteration", ")", "+", "'.pth'", ")", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "sst_net", ".", "state_dict", "(", ")", ",", "args", ".", "save_folder", "+", "''", "+", "args", ".", "version", "+", "'.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_ua.adjust_learning_rate": [[233, 242], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "gamma", ",", "step", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by 10 at every specified step\n    # Adapted from PyTorch Imagenet example:\n    # https://github.com/pytorch/examples/blob/master/imagenet/main.py\n    \"\"\"", "\n", "lr", "=", "args", ".", "lr", "*", "(", "gamma", "**", "(", "step", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_kitti.xavier": [[89, 91], ["torch.xavier_uniform"], "function", ["None"], ["", "def", "xavier", "(", "param", ")", ":", "\n", "    ", "init", ".", "xavier_uniform", "(", "param", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_kitti.weights_init": [[92, 96], ["isinstance", "train_kitti.xavier", "m.bias.data.zero_"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.xavier"], ["", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "xavier", "(", "m", ".", "weight", ".", "data", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_kitti.train": [[111, 228], ["net.train", "print", "data.kitti.KITTITrainDataset", "print", "torch.DataLoader", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "utils.augmentations.SSJAugmentation", "len", "next", "time.time", "net", "optimizer.zero_grad", "criterion", "loss.backward", "optimizer.step", "time.time", "sst_net.state_dict", "iter", "train_kitti.adjust_learning_rate", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "print", "print", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "writer.add_scalar", "writer.add_scalar", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "loss.data.cpu", "loss_pre.data.cpu", "loss_next.data.cpu", "loss_similarity.data.cpu", "accuracy.data.cpu", "accuracy_pre.data.cpu", "accuracy_next.data.cpu", "net.named_parameters", "utils.operation.show_batch_circle_image", "writer.add_image", "sst_net.state_dict", "os.path.join", "writer.add_histogram", "torchvision.make_grid", "loss.data.cpu", "param.clone().cpu().data.numpy", "repr", "repr", "float", "repr", "param.clone().cpu", "param.clone"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.train", "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.adjust_learning_rate", "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.show_batch_circle_image"], ["def", "train", "(", ")", ":", "\n", "    ", "net", ".", "train", "(", ")", "\n", "\n", "epoch", "=", "0", "\n", "print", "(", "'Loading Dataset...'", ")", "\n", "\n", "dataset", "=", "KITTITrainDataset", "(", "args", ".", "kitti_image_root", ",", "\n", "args", ".", "kitti_detection_root", ",", "\n", "SSJAugmentation", "(", "sst_dim", ",", "means", ")", ")", "\n", "\n", "epoch_size", "=", "len", "(", "dataset", ")", "//", "args", ".", "batch_size", "\n", "print", "(", "'Training SSJ on'", ",", "dataset", ".", "dataset_name", ")", "\n", "step_index", "=", "0", "\n", "\n", "batch_iterator", "=", "None", "\n", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "shuffle", "=", "True", ",", "\n", "collate_fn", "=", "collate_fn", ",", "\n", "pin_memory", "=", "False", ")", "\n", "\n", "for", "iteration", "in", "range", "(", "args", ".", "start_iter", ",", "max_iter", ")", ":", "\n", "        ", "if", "(", "not", "batch_iterator", ")", "or", "(", "iteration", "%", "epoch_size", "==", "0", ")", ":", "\n", "# create batch iterator", "\n", "            ", "batch_iterator", "=", "iter", "(", "data_loader", ")", "\n", "\n", "\n", "", "if", "iteration", "in", "stepvalues", ":", "\n", "            ", "step_index", "+=", "1", "\n", "current_lr", "=", "adjust_learning_rate", "(", "optimizer", ",", "args", ".", "gamma", ",", "step_index", ")", "\n", "\n", "if", "args", ".", "tensorboard", "and", "iteration", "!=", "0", ":", "\n", "                ", "writer", ".", "add_scalar", "(", "'data/epoch_loss'", ",", "loss", ".", "data", ".", "cpu", "(", ")", "/", "epoch_size", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'data/learning_rate'", ",", "current_lr", ",", "iteration", ")", "\n", "# reset epoch loss counters", "\n", "", "epoch", "+=", "1", "\n", "\n", "# load trian data", "\n", "", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ",", "valid_pre", ",", "valid_next", "=", "next", "(", "batch_iterator", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "img_pre", "=", "Variable", "(", "img_pre", ".", "cuda", "(", ")", ")", "\n", "img_next", "=", "Variable", "(", "img_next", ".", "cuda", "(", ")", ")", "\n", "boxes_pre", "=", "Variable", "(", "boxes_pre", ".", "cuda", "(", ")", ")", "\n", "boxes_next", "=", "Variable", "(", "boxes_next", ".", "cuda", "(", ")", ")", "\n", "valid_pre", "=", "Variable", "(", "valid_pre", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "valid_next", "=", "Variable", "(", "valid_next", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "labels", "=", "Variable", "(", "labels", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "\n", "", "else", ":", "\n", "            ", "img_pre", "=", "Variable", "(", "img_pre", ")", "\n", "img_next", "=", "Variable", "(", "img_next", ")", "\n", "boxes_pre", "=", "Variable", "(", "boxes_pre", ")", "\n", "boxes_next", "=", "Variable", "(", "boxes_next", ")", "\n", "valid_pre", "=", "Variable", "(", "valid_pre", ")", "\n", "valid_next", "=", "Variable", "(", "valid_next", ")", "\n", "labels", "=", "Variable", "(", "labels", ",", "volatile", "=", "True", ")", "\n", "\n", "\n", "# forward", "\n", "", "t0", "=", "time", ".", "time", "(", ")", "\n", "out", "=", "net", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "valid_pre", ",", "valid_next", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_pre", ",", "loss_next", ",", "loss_similarity", ",", "loss", ",", "accuracy_pre", ",", "accuracy_next", ",", "accuracy", ",", "predict_indexes", "=", "criterion", "(", "out", ",", "labels", ",", "valid_pre", ",", "valid_next", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "iteration", "%", "10", "==", "0", ":", "\n", "            ", "print", "(", "'Timer: %.4f sec.'", "%", "(", "t1", "-", "t0", ")", ")", "\n", "print", "(", "'iter '", "+", "repr", "(", "iteration", ")", "+", "', '", "+", "repr", "(", "epoch_size", ")", "+", "' || epoch: %.4f '", "%", "(", "iteration", "/", "(", "float", ")", "(", "epoch_size", ")", ")", "+", "' || Loss: %.4f ||'", "%", "(", "loss", ".", "data", "[", "0", "]", ")", ",", "end", "=", "' '", ")", "\n", "\n", "", "if", "args", ".", "tensorboard", ":", "\n", "# add scalar", "\n", "# if iteration % 20 == 0:", "\n", "            ", "writer", ".", "add_scalar", "(", "'loss/loss'", ",", "loss", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_pre'", ",", "loss_pre", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_next'", ",", "loss_next", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_similarity'", ",", "loss_similarity", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy'", ",", "accuracy", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy_pre'", ",", "accuracy_pre", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy_next'", ",", "accuracy_next", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "\n", "# add weights", "\n", "if", "iteration", "%", "1000", "==", "0", ":", "\n", "                ", "for", "name", ",", "param", "in", "net", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "writer", ".", "add_histogram", "(", "name", ",", "param", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "iteration", ",", "bins", "=", "'doane'", ")", "\n", "\n", "# add images", "\n", "", "", "if", "args", ".", "send_images", "and", "iteration", "%", "200", "==", "0", ":", "\n", "# add images", "\n", "# writer.add_image('WithoutLabel/Image_pre',", "\n", "#                  vutils.make_grid(img_pre.data, nrow=2, normalize=True, scale_each=True),iteration)", "\n", "# writer.add_image('WithoutLabel/Image_next',", "\n", "#                  vutils.make_grid(img_next.data, nrow=2, normalize=True, scale_each=True), iteration)", "\n", "# writer.add_image('WithLabel/Image_pre',", "\n", "#                  vutils.make_grid(show_circle(img_pre, boxes_pre, valid_pre), nrow=2, normalize=True, scale_each=True), iteration)", "\n", "# writer.add_image('WithLabel/Image_next',", "\n", "#                  vutils.make_grid(show_circle(img_next, boxes_next, valid_next), nrow=2, normalize=True, scale_each=True), iteration)", "\n", "\n", "                ", "result_image", "=", "show_batch_circle_image", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "valid_pre", ",", "valid_next", ",", "predict_indexes", ")", "\n", "writer", ".", "add_image", "(", "'WithLabel/ImageResult'", ",", "\n", "vutils", ".", "make_grid", "(", "result_image", ",", "nrow", "=", "2", ",", "normalize", "=", "True", ",", "scale_each", "=", "True", ")", ",", "iteration", ")", "\n", "\n", "", "", "if", "iteration", "%", "5000", "==", "0", ":", "\n", "            ", "print", "(", "'Saving state, iter:'", ",", "iteration", ")", "\n", "torch", ".", "save", "(", "sst_net", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "save_folder", ",", "\n", "'ssj300_0712_'", "+", "repr", "(", "iteration", ")", "+", "'.pth'", ")", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "sst_net", ".", "state_dict", "(", ")", ",", "args", ".", "save_folder", "+", "''", "+", "args", ".", "version", "+", "'.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_kitti.adjust_learning_rate": [[229, 238], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "gamma", ",", "step", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by 10 at every specified step\n    # Adapted from PyTorch Imagenet example:\n    # https://github.com/pytorch/examples/blob/master/imagenet/main.py\n    \"\"\"", "\n", "lr", "=", "args", ".", "lr", "*", "(", "gamma", "**", "(", "step", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.test_kitti.test": [[21, 99], ["os.path.join", "sorted", "os.path.join", "sorted", "utils.timer.Timer", "zip", "print", "print", "saved_file_name_format.format", "save_video_name_format.format", "print", "sst_tracker.TrackSet", "data.kitti_detection_data_reader.KITTIDataReader", "list", "numpy.savetxt", "print", "os.path.join", "os.path.join", "float", "float", "utils.timer.Timer.tic", "sst_tracker.TrackSet.update", "utils.timer.Timer.toc", "print", "numpy.array().astype", "os.listdir", "os.listdir", "len", "len", "cv2.VideoWriter", "cv2.imshow", "cv2.waitKey", "cv2.VideoWriter.write", "len", "cv2.VideoWriter_fourcc", "int", "list.append", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.tic", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.toc", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["def", "test", "(", ")", ":", "\n", "    ", "image_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "kitti_image_root", ",", "args", ".", "type", ",", "'image_02'", ")", "\n", "all_image_folders", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "d", ")", "for", "d", "in", "os", ".", "listdir", "(", "image_root", ")", "]", "\n", ")", "\n", "detection_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "kitti_detection_root", ",", "args", ".", "type", ",", "'det_02'", ")", "\n", "all_detection_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "detection_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "detection_root", ")", "]", "\n", ")", "\n", "saved_file_name_format", "=", "'KITTI'", "+", "'-{0:04}.txt'", "\n", "save_video_name_format", "=", "'KITTI'", "+", "'-{0:04}.avi'", "\n", "\n", "timer", "=", "Timer", "(", ")", "\n", "i", "=", "0", "\n", "for", "image_folder", ",", "detection_file_name", "in", "zip", "(", "all_image_folders", ",", "all_detection_files", ")", ":", "\n", "        ", "save_file_name", "=", "saved_file_name_format", ".", "format", "(", "i", ")", "\n", "save_video_name", "=", "save_video_name_format", ".", "format", "(", "i", ")", "\n", "\n", "print", "(", "'start processing '", "+", "save_file_name", ")", "\n", "tracker", "=", "SSTTracker", "(", ")", "\n", "reader", "=", "KITTIDataReader", "(", "image_folder", "=", "image_folder", ",", "\n", "detection_file_name", "=", "detection_file_name", ")", "\n", "i", "=", "0", "\n", "result", "=", "list", "(", ")", "\n", "result_str", "=", "save_file_name", "\n", "\n", "\n", "for", "item", "in", "reader", ":", "\n", "            ", "i", "+=", "1", "\n", "if", "i", ">", "len", "(", "reader", ")", ":", "\n", "                ", "break", "\n", "\n", "", "if", "item", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "img", "=", "item", "[", "0", "]", "\n", "det", "=", "item", "[", "1", "]", "\n", "\n", "if", "img", "is", "None", "or", "det", "is", "None", "or", "len", "(", "det", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "len", "(", "det", ")", ">", "config", "[", "'max_object'", "]", ":", "\n", "                ", "det", "=", "det", "[", ":", "config", "[", "'max_object'", "]", ",", ":", "]", "\n", "\n", "", "h", ",", "w", ",", "_", "=", "img", ".", "shape", "\n", "\n", "if", "i", "==", "1", "and", "args", ".", "save_video", ":", "\n", "                ", "vw", "=", "cv2", ".", "VideoWriter", "(", "save_video_name", ",", "cv2", ".", "VideoWriter_fourcc", "(", "'M'", ",", "'J'", ",", "'P'", ",", "'G'", ")", ",", "10", ",", "(", "w", ",", "h", ")", ")", "\n", "\n", "", "det", "[", ":", ",", "[", "8", ",", "9", "]", "]", "=", "det", "[", ":", ",", "[", "8", ",", "9", "]", "]", "-", "det", "[", ":", ",", "[", "6", ",", "7", "]", "]", "\n", "det", "[", ":", ",", "[", "6", ",", "8", "]", "]", "/=", "float", "(", "w", ")", "\n", "det", "[", ":", ",", "[", "7", ",", "9", "]", "]", "/=", "float", "(", "h", ")", "\n", "timer", ".", "tic", "(", ")", "\n", "image_org", "=", "tracker", ".", "update", "(", "img", ",", "det", "[", ":", ",", "6", ":", "10", "]", ",", "args", ".", "show_image", ")", "\n", "timer", ".", "toc", "(", ")", "\n", "print", "(", "'{}:{}, {}\\r'", ".", "format", "(", "save_file_name", ",", "i", ",", "int", "(", "i", "*", "100", "/", "len", "(", "reader", ")", ")", ")", ")", "\n", "if", "args", ".", "show_image", "and", "not", "image_org", "is", "None", "and", "image_org", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "                ", "cv2", ".", "imshow", "(", "'res'", ",", "image_org", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "\n", "", "if", "args", ".", "save_video", "and", "not", "image_org", "is", "None", "and", "image_org", ".", "shape", "[", "0", "]", ">", "0", ":", "\n", "                ", "vw", ".", "write", "(", "image_org", ")", "\n", "\n", "# save result", "\n", "", "for", "t", "in", "tracker", ".", "tracks", ":", "\n", "                ", "continue", "\n", "n", "=", "t", ".", "nodes", "[", "-", "1", "]", "\n", "if", "t", ".", "age", "==", "1", ":", "\n", "                    ", "b", "=", "n", ".", "box", "\n", "result", ".", "append", "(", "\n", "[", "i", "]", "+", "[", "t", ".", "id", "]", "+", "[", "b", "[", "0", "]", "*", "w", ",", "b", "[", "1", "]", "*", "h", ",", "b", "[", "2", "]", "*", "w", ",", "b", "[", "3", "]", "*", "h", "]", "+", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", "\n", ")", "\n", "# save data", "\n", "", "", "", "np", ".", "savetxt", "(", "save_file_name", ",", "np", ".", "array", "(", "result", ")", ".", "astype", "(", "int", ")", ",", "fmt", "=", "'%i'", ")", "\n", "print", "(", "result_str", ")", "\n", "\n", "", "print", "(", "timer", ".", "total_time", ")", "\n", "print", "(", "timer", ".", "average_time", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot15.xavier": [[94, 96], ["torch.xavier_uniform"], "function", ["None"], ["", "def", "xavier", "(", "param", ")", ":", "\n", "    ", "init", ".", "xavier_uniform", "(", "param", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot15.weights_init": [[97, 101], ["isinstance", "train_mot15.xavier", "m.bias.data.zero_"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.xavier"], ["", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "xavier", "(", "m", ".", "weight", ".", "data", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot15.train": [[116, 222], ["net.train", "print", "data.mot.MOTTrainDataset", "print", "torch.DataLoader", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "utils.augmentations.SSJAugmentation", "len", "next", "time.time", "net", "optimizer.zero_grad", "criterion", "loss.backward", "optimizer.step", "time.time", "sst_net.state_dict", "iter", "train_mot15.adjust_learning_rate", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "loss.data.cpu", "print", "print", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "len", "writer.add_scalar", "loss.data.cpu", "loss_pre.data.cpu", "loss_next.data.cpu", "loss_similarity.data.cpu", "accuracy.data.cpu", "accuracy_pre.data.cpu", "accuracy_next.data.cpu", "net.named_parameters", "utils.operation.show_batch_circle_image", "writer.add_image", "sst_net.state_dict", "os.path.join", "float", "writer.add_histogram", "torchvision.make_grid", "numpy.mean", "param.clone().cpu().data.numpy", "repr", "repr", "float", "repr", "param.clone().cpu", "param.clone"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.train", "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.adjust_learning_rate", "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.show_batch_circle_image"], ["def", "train", "(", ")", ":", "\n", "    ", "net", ".", "train", "(", ")", "\n", "current_lr", "=", "config", "[", "'learning_rate'", "]", "\n", "print", "(", "'Loading Dataset...'", ")", "\n", "\n", "dataset", "=", "MOTTrainDataset", "(", "args", ".", "mot_root", ",", "\n", "SSJAugmentation", "(", "\n", "sst_dim", ",", "means", "\n", ")", "\n", ")", "\n", "\n", "epoch_size", "=", "len", "(", "dataset", ")", "//", "args", ".", "batch_size", "\n", "print", "(", "'Training SSJ on'", ",", "dataset", ".", "dataset_name", ")", "\n", "step_index", "=", "0", "\n", "\n", "batch_iterator", "=", "None", "\n", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "shuffle", "=", "True", ",", "\n", "collate_fn", "=", "collate_fn", ",", "\n", "pin_memory", "=", "False", ")", "\n", "\n", "for", "iteration", "in", "range", "(", "args", ".", "start_iter", ",", "max_iter", ")", ":", "\n", "        ", "if", "(", "not", "batch_iterator", ")", "or", "(", "iteration", "%", "epoch_size", "==", "0", ")", ":", "\n", "# create batch iterator", "\n", "            ", "batch_iterator", "=", "iter", "(", "data_loader", ")", "\n", "all_epoch_loss", "=", "[", "]", "\n", "\n", "", "if", "iteration", "in", "stepvalues", ":", "\n", "            ", "step_index", "+=", "1", "\n", "current_lr", "=", "adjust_learning_rate", "(", "optimizer", ",", "args", ".", "gamma", ",", "step_index", ")", "\n", "\n", "# load train data", "\n", "", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ",", "valid_pre", ",", "valid_next", "=", "next", "(", "batch_iterator", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "img_pre", "=", "Variable", "(", "img_pre", ".", "cuda", "(", ")", ")", "\n", "img_next", "=", "Variable", "(", "img_next", ".", "cuda", "(", ")", ")", "\n", "boxes_pre", "=", "Variable", "(", "boxes_pre", ".", "cuda", "(", ")", ")", "\n", "boxes_next", "=", "Variable", "(", "boxes_next", ".", "cuda", "(", ")", ")", "\n", "valid_pre", "=", "Variable", "(", "valid_pre", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "valid_next", "=", "Variable", "(", "valid_next", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "labels", "=", "Variable", "(", "labels", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "\n", "", "else", ":", "\n", "            ", "img_pre", "=", "Variable", "(", "img_pre", ")", "\n", "img_next", "=", "Variable", "(", "img_next", ")", "\n", "boxes_pre", "=", "Variable", "(", "boxes_pre", ")", "\n", "boxes_next", "=", "Variable", "(", "boxes_next", ")", "\n", "valid_pre", "=", "Variable", "(", "valid_pre", ")", "\n", "valid_next", "=", "Variable", "(", "valid_next", ")", "\n", "labels", "=", "Variable", "(", "labels", ",", "volatile", "=", "True", ")", "\n", "\n", "\n", "# forward", "\n", "", "t0", "=", "time", ".", "time", "(", ")", "\n", "out", "=", "net", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "valid_pre", ",", "valid_next", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_pre", ",", "loss_next", ",", "loss_similarity", ",", "loss", ",", "accuracy_pre", ",", "accuracy_next", ",", "accuracy", ",", "predict_indexes", "=", "criterion", "(", "out", ",", "labels", ",", "valid_pre", ",", "valid_next", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "\n", "all_epoch_loss", "+=", "[", "loss", ".", "data", ".", "cpu", "(", ")", "]", "\n", "\n", "if", "iteration", "%", "10", "==", "0", ":", "\n", "            ", "print", "(", "'Timer: %.4f sec.'", "%", "(", "t1", "-", "t0", ")", ")", "\n", "print", "(", "'iter '", "+", "repr", "(", "iteration", ")", "+", "', '", "+", "repr", "(", "epoch_size", ")", "+", "' || epoch: %.4f '", "%", "(", "iteration", "/", "(", "float", ")", "(", "epoch_size", ")", ")", "+", "' || Loss: %.4f ||'", "%", "(", "loss", ".", "data", "[", "0", "]", ")", ",", "end", "=", "' '", ")", "\n", "\n", "", "if", "args", ".", "tensorboard", ":", "\n", "            ", "if", "len", "(", "all_epoch_loss", ")", ">", "30", ":", "\n", "                ", "writer", ".", "add_scalar", "(", "'data/epoch_loss'", ",", "float", "(", "np", ".", "mean", "(", "all_epoch_loss", ")", ")", ",", "iteration", ")", "\n", "", "writer", ".", "add_scalar", "(", "'data/learning_rate'", ",", "current_lr", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'loss/loss'", ",", "loss", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_pre'", ",", "loss_pre", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_next'", ",", "loss_next", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_similarity'", ",", "loss_similarity", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy'", ",", "accuracy", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy_pre'", ",", "accuracy_pre", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy_next'", ",", "accuracy_next", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "\n", "# add weights", "\n", "if", "iteration", "%", "1000", "==", "0", ":", "\n", "                ", "for", "name", ",", "param", "in", "net", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "writer", ".", "add_histogram", "(", "name", ",", "param", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "iteration", ")", "\n", "\n", "# add images", "\n", "", "", "if", "args", ".", "send_images", "and", "iteration", "%", "1000", "==", "0", ":", "\n", "                ", "result_image", "=", "show_batch_circle_image", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "valid_pre", ",", "valid_next", ",", "predict_indexes", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_image", "(", "'WithLabel/ImageResult'", ",", "vutils", ".", "make_grid", "(", "result_image", ",", "nrow", "=", "2", ",", "normalize", "=", "True", ",", "scale_each", "=", "True", ")", ",", "iteration", ")", "\n", "\n", "", "", "if", "iteration", "%", "save_weights_iteration", "==", "0", ":", "\n", "            ", "print", "(", "'Saving state, iter:'", ",", "iteration", ")", "\n", "torch", ".", "save", "(", "sst_net", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "save_folder", ",", "\n", "'sst300_0712_'", "+", "repr", "(", "iteration", ")", "+", "'.pth'", ")", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "sst_net", ".", "state_dict", "(", ")", ",", "args", ".", "save_folder", "+", "''", "+", "args", ".", "version", "+", "'.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot15.adjust_learning_rate": [[223, 232], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "gamma", ",", "step", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by 10 at every specified step\n    # Adapted from PyTorch Imagenet example:\n    # https://github.com/pytorch/examples/blob/master/imagenet/main.py\n    \"\"\"", "\n", "lr", "=", "args", ".", "lr", "*", "(", "gamma", "**", "(", "step", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackUtil.convert_detection": [[13, 30], ["torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().float.cuda", "torch.from_numpy().float.cuda", "torch.from_numpy().float.astype", "torch.from_numpy().float.astype"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "convert_detection", "(", "detection", ")", ":", "\n", "        ", "'''\n        transform the current detection center to [-1, 1]\n        :param detection: detection\n        :return: translated detection\n        '''", "\n", "# get the center, and format it in (-1, 1)", "\n", "center", "=", "(", "2", "*", "detection", "[", ":", ",", "0", ":", "2", "]", "+", "detection", "[", ":", ",", "2", ":", "4", "]", ")", "-", "1.0", "\n", "center", "=", "torch", ".", "from_numpy", "(", "center", ".", "astype", "(", "float", ")", ")", ".", "float", "(", ")", "\n", "center", ".", "unsqueeze_", "(", "0", ")", "\n", "center", ".", "unsqueeze_", "(", "2", ")", "\n", "center", ".", "unsqueeze_", "(", "3", ")", "\n", "\n", "if", "TrackerConfig", ".", "cuda", ":", "\n", "            ", "return", "Variable", "(", "center", ".", "cuda", "(", ")", ")", "\n", "", "return", "Variable", "(", "center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackUtil.convert_image": [[31, 46], ["cv2.resize().astype", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "image.permute.permute.permute", "image.permute.permute.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cv2.resize", "image.permute.permute.cuda"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "convert_image", "(", "image", ")", ":", "\n", "        ", "'''\n        transform image to the FloatTensor (1, 3,size, size)\n        :param image: same as update parameter\n        :return: the transformed image FloatTensor (i.e. 1x3x900x900)\n        '''", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "TrackerConfig", ".", "image_size", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image", "-=", "TrackerConfig", ".", "mean_pixel", "\n", "image", "=", "torch", ".", "FloatTensor", "(", "image", ")", "\n", "image", "=", "image", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "image", ".", "unsqueeze_", "(", "dim", "=", "0", ")", "\n", "if", "TrackerConfig", ".", "cuda", ":", "\n", "            ", "return", "Variable", "(", "image", ".", "cuda", "(", ")", ")", "\n", "", "return", "Variable", "(", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackUtil.get_iou": [[47, 73], ["len", "len", "numpy.zeros", "range", "numpy.copy", "range", "numpy.copy", "min", "max", "min", "max", "max", "max", "min", "max", "min"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_iou", "(", "pre_boxes", ",", "next_boxes", ")", ":", "\n", "        ", "h", "=", "len", "(", "pre_boxes", ")", "\n", "w", "=", "len", "(", "next_boxes", ")", "\n", "if", "h", "==", "0", "or", "w", "==", "0", ":", "\n", "            ", "return", "[", "]", "\n", "\n", "", "iou", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ",", "dtype", "=", "float", ")", "\n", "for", "i", "in", "range", "(", "h", ")", ":", "\n", "            ", "b1", "=", "np", ".", "copy", "(", "pre_boxes", "[", "i", ",", ":", "]", ")", "\n", "b1", "[", "2", ":", "]", "=", "b1", "[", ":", "2", "]", "+", "b1", "[", "2", ":", "]", "\n", "for", "j", "in", "range", "(", "w", ")", ":", "\n", "                ", "b2", "=", "np", ".", "copy", "(", "next_boxes", "[", "j", ",", ":", "]", ")", "\n", "b2", "[", "2", ":", "]", "=", "b2", "[", ":", "2", "]", "+", "b2", "[", "2", ":", "]", "\n", "delta_h", "=", "min", "(", "b1", "[", "2", "]", ",", "b2", "[", "2", "]", ")", "-", "max", "(", "b1", "[", "0", "]", ",", "b2", "[", "0", "]", ")", "\n", "delta_w", "=", "min", "(", "b1", "[", "3", "]", ",", "b2", "[", "3", "]", ")", "-", "max", "(", "b1", "[", "1", "]", ",", "b2", "[", "1", "]", ")", "\n", "if", "delta_h", "<", "0", "or", "delta_w", "<", "0", ":", "\n", "                    ", "expand_area", "=", "(", "max", "(", "b1", "[", "2", "]", ",", "b2", "[", "2", "]", ")", "-", "min", "(", "b1", "[", "0", "]", ",", "b2", "[", "0", "]", ")", ")", "*", "(", "max", "(", "b1", "[", "3", "]", ",", "b2", "[", "3", "]", ")", "-", "min", "(", "b1", "[", "1", "]", ",", "b2", "[", "1", "]", ")", ")", "\n", "area", "=", "(", "b1", "[", "2", "]", "-", "b1", "[", "0", "]", ")", "*", "(", "b1", "[", "3", "]", "-", "b1", "[", "1", "]", ")", "+", "(", "b2", "[", "2", "]", "-", "b2", "[", "0", "]", ")", "*", "(", "b2", "[", "3", "]", "-", "b2", "[", "1", "]", ")", "\n", "iou", "[", "i", ",", "j", "]", "=", "-", "(", "expand_area", "-", "area", ")", "/", "area", "\n", "", "else", ":", "\n", "                    ", "overlap", "=", "delta_h", "*", "delta_w", "\n", "area", "=", "(", "b1", "[", "2", "]", "-", "b1", "[", "0", "]", ")", "*", "(", "b1", "[", "3", "]", "-", "b1", "[", "1", "]", ")", "+", "(", "b2", "[", "2", "]", "-", "b2", "[", "0", "]", ")", "*", "(", "b2", "[", "3", "]", "-", "b2", "[", "1", "]", ")", "-", "max", "(", "overlap", ",", "0", ")", "\n", "iou", "[", "i", ",", "j", "]", "=", "overlap", "/", "area", "\n", "\n", "", "", "", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackUtil.get_node_similarity": [[74, 93], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_node_similarity", "(", "n1", ",", "n2", ",", "frame_index", ",", "recorder", ")", ":", "\n", "        ", "if", "n1", ".", "frame_index", ">", "n2", ".", "frame_index", ":", "\n", "            ", "n_max", "=", "n1", "\n", "n_min", "=", "n2", "\n", "", "elif", "n1", ".", "frame_index", "<", "n2", ".", "frame_index", ":", "\n", "            ", "n_max", "=", "n2", "\n", "n_min", "=", "n1", "\n", "", "else", ":", "# in the same frame_index", "\n", "            ", "return", "None", "\n", "\n", "", "f_max", "=", "n_max", ".", "frame_index", "\n", "f_min", "=", "n_min", ".", "frame_index", "\n", "\n", "# not recorded in recorder", "\n", "if", "frame_index", "-", "f_min", ">=", "TrackerConfig", ".", "max_track_node", ":", "\n", "            ", "return", "None", "\n", "\n", "", "return", "recorder", ".", "all_similarity", "[", "f_max", "]", "[", "f_min", "]", "[", "n_min", ".", "id", ",", "n_max", ".", "id", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackUtil.get_merge_similarity": [[94, 126], ["enumerate", "numpy.mean", "enumerate", "len", "numpy.array", "tracker.TrackUtil.get_node_similarity"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackUtil.get_node_similarity"], ["", "@", "staticmethod", "\n", "def", "get_merge_similarity", "(", "t1", ",", "t2", ",", "frame_index", ",", "recorder", ")", ":", "\n", "        ", "'''\n        Get the similarity between two tracks\n        :param t1: track 1\n        :param t2: track 2\n        :param frame_index: current frame_index\n        :param recorder: recorder\n        :return: the similairty (float value). if valid, return None\n        '''", "\n", "merge_value", "=", "[", "]", "\n", "if", "t1", "is", "t2", ":", "\n", "            ", "return", "None", "\n", "\n", "", "all_f1", "=", "[", "n", ".", "frame_index", "for", "n", "in", "t1", ".", "nodes", "]", "\n", "all_f2", "=", "[", "n", ".", "frame_index", "for", "n", "in", "t2", ".", "nodes", "]", "\n", "\n", "for", "i", ",", "f1", "in", "enumerate", "(", "all_f1", ")", ":", "\n", "            ", "for", "j", ",", "f2", "in", "enumerate", "(", "all_f2", ")", ":", "\n", "                ", "compare_f", "=", "[", "f1", "+", "1", ",", "f1", "-", "1", "]", "\n", "for", "f", "in", "compare_f", ":", "\n", "                    ", "if", "f", "not", "in", "all_f1", "and", "f", "==", "f2", ":", "\n", "                        ", "n1", "=", "t1", ".", "nodes", "[", "i", "]", "\n", "n2", "=", "t2", ".", "nodes", "[", "j", "]", "\n", "s", "=", "TrackUtil", ".", "get_node_similarity", "(", "n1", ",", "n2", ",", "frame_index", ",", "recorder", ")", "\n", "if", "s", "is", "None", ":", "\n", "                            ", "continue", "\n", "", "merge_value", "+=", "[", "s", "]", "\n", "\n", "", "", "", "", "if", "len", "(", "merge_value", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "np", ".", "mean", "(", "np", ".", "array", "(", "merge_value", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackUtil.merge": [[127, 152], ["enumerate", "min", "len", "enumerate", "t1.nodes.insert"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "merge", "(", "t1", ",", "t2", ")", ":", "\n", "        ", "'''\n        merge t2 to t1, after that t2 is set invalid\n        :param t1: track 1\n        :param t2: track 2\n        :return: None\n        '''", "\n", "all_f1", "=", "[", "n", ".", "frame_index", "for", "n", "in", "t1", ".", "nodes", "]", "\n", "all_f2", "=", "[", "n", ".", "frame_index", "for", "n", "in", "t2", ".", "nodes", "]", "\n", "\n", "for", "i", ",", "f2", "in", "enumerate", "(", "all_f2", ")", ":", "\n", "            ", "if", "f2", "not", "in", "all_f1", ":", "\n", "                ", "insert_pos", "=", "0", "\n", "for", "j", ",", "f1", "in", "enumerate", "(", "all_f1", ")", ":", "\n", "                    ", "if", "f2", "<", "f1", ":", "\n", "                        ", "break", "\n", "", "insert_pos", "+=", "1", "\n", "", "t1", ".", "nodes", ".", "insert", "(", "insert_pos", ",", "t2", ".", "nodes", "[", "i", "]", ")", "\n", "\n", "# remove some nodes in t1 in order to keep t1 satisfy the max nodes", "\n", "", "", "if", "len", "(", "t1", ".", "nodes", ")", ">", "TrackerConfig", ".", "max_track_node", ":", "\n", "            ", "t1", ".", "nodes", "=", "t1", ".", "nodes", "[", "-", "TrackerConfig", ".", "max_track_node", ":", "]", "\n", "", "t1", ".", "age", "=", "min", "(", "t1", ".", "age", ",", "t2", ".", "age", ")", "\n", "t2", ".", "valid", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.set_configure": [[178, 218], ["range", "range", "range"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "set_configure", "(", "all_choice", ")", ":", "\n", "\n", "        ", "min_iou_frame_gaps", "=", "[", "\n", "# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", "]", "\n", "]", "\n", "min_ious", "=", "[", "\n", "# [0.4, 0.3, 0.25, 0.2, 0.1, 0.0, -1.0, -2.0, -3.0, -4.0, -4.5, -5.0, -5.5, -6.0, -6.5, -7.0],", "\n", "[", "0.3", ",", "0.1", ",", "0.0", ",", "-", "1.0", ",", "-", "2.0", ",", "-", "3.0", ",", "-", "4.0", ",", "-", "5.0", ",", "-", "6.0", ",", "-", "7.0", "]", ",", "\n", "[", "0.3", ",", "0.0", ",", "-", "1.0", ",", "-", "2.0", ",", "-", "3.0", ",", "-", "4.0", ",", "-", "5.0", ",", "-", "6.0", ",", "-", "7.0", ",", "-", "7.0", "]", ",", "\n", "[", "0.2", ",", "0.0", ",", "-", "1.0", ",", "-", "2.0", ",", "-", "3.0", ",", "-", "4.0", ",", "-", "5.0", ",", "-", "6.0", ",", "-", "7.0", ",", "-", "7.0", "]", ",", "\n", "[", "0.1", ",", "0.0", ",", "-", "1.0", ",", "-", "2.0", ",", "-", "3.0", ",", "-", "4.0", ",", "-", "5.0", ",", "-", "6.0", ",", "-", "7.0", ",", "-", "7.0", "]", ",", "\n", "[", "-", "1.0", ",", "-", "1.0", ",", "-", "2.0", ",", "-", "3.0", ",", "-", "4.0", ",", "-", "5.0", ",", "-", "6.0", ",", "-", "7.0", ",", "-", "8.0", ",", "-", "9.0", "]", ",", "\n", "[", "0.4", ",", "0.3", ",", "0.25", ",", "0.2", ",", "0.1", ",", "0.0", ",", "-", "1.0", ",", "-", "2.0", ",", "-", "3.0", ",", "-", "4.0", ",", "-", "4.5", ",", "-", "5.0", ",", "-", "5.5", ",", "-", "6.0", ",", "-", "6.5", ",", "-", "7.0", "]", ",", "\n", "]", "\n", "\n", "decays", "=", "[", "1", "-", "0.01", "*", "i", "for", "i", "in", "range", "(", "11", ")", "]", "\n", "\n", "roi_verify_max_iterations", "=", "[", "2", ",", "3", ",", "4", ",", "5", ",", "6", "]", "\n", "\n", "roi_verify_punish_rates", "=", "[", "0.6", ",", "0.4", ",", "0.2", ",", "0.1", ",", "0.0", ",", "1.0", "]", "\n", "\n", "max_track_ages", "=", "[", "i", "*", "3", "for", "i", "in", "range", "(", "1", ",", "11", ")", "]", "\n", "max_track_nodes", "=", "[", "i", "*", "3", "for", "i", "in", "range", "(", "1", ",", "11", ")", "]", "\n", "\n", "if", "all_choice", "is", "None", ":", "\n", "            ", "return", "\n", "", "TrackerConfig", ".", "min_iou_frame_gap", "=", "min_iou_frame_gaps", "[", "all_choice", "[", "0", "]", "]", "\n", "TrackerConfig", ".", "min_iou", "=", "min_ious", "[", "all_choice", "[", "0", "]", "]", "\n", "TrackerConfig", ".", "decay", "=", "decays", "[", "all_choice", "[", "1", "]", "]", "\n", "TrackerConfig", ".", "roi_verify_max_iteration", "=", "roi_verify_max_iterations", "[", "all_choice", "[", "2", "]", "]", "\n", "TrackerConfig", ".", "roi_verify_punish_rate", "=", "roi_verify_punish_rates", "[", "all_choice", "[", "3", "]", "]", "\n", "TrackerConfig", ".", "max_track_age", "=", "max_track_ages", "[", "all_choice", "[", "4", "]", "]", "\n", "TrackerConfig", ".", "max_track_node", "=", "max_track_nodes", "[", "all_choice", "[", "5", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.get_configure_str": [[219, 222], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_configure_str", "(", "all_choice", ")", ":", "\n", "        ", "return", "\"{}_{}_{}_{}_{}_{}\"", ".", "format", "(", "all_choice", "[", "0", "]", ",", "all_choice", "[", "1", "]", ",", "all_choice", "[", "2", "]", ",", "all_choice", "[", "3", "]", ",", "all_choice", "[", "4", "]", ",", "all_choice", "[", "5", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.get_all_choices": [[223, 227], ["range", "range", "range", "range", "range", "range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_all_choices", "(", ")", ":", "\n", "# return [(1, 1, 0, 0, 4, 2)]", "\n", "        ", "return", "[", "(", "i1", ",", "i2", ",", "i3", ",", "i4", ",", "i5", ",", "i6", ")", "for", "i1", "in", "range", "(", "5", ")", "for", "i2", "in", "range", "(", "5", ")", "for", "i3", "in", "range", "(", "5", ")", "for", "i4", "in", "range", "(", "5", ")", "for", "i5", "in", "range", "(", "5", ")", "for", "i6", "in", "range", "(", "5", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.get_all_choices_decay": [[228, 231], ["range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_all_choices_decay", "(", ")", ":", "\n", "        ", "return", "[", "(", "1", ",", "i2", ",", "0", ",", "0", ",", "4", ",", "2", ")", "for", "i2", "in", "range", "(", "11", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.get_all_choices_max_track_node": [[232, 235], ["range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_all_choices_max_track_node", "(", ")", ":", "\n", "        ", "return", "[", "(", "1", ",", "i2", ",", "0", ",", "0", ",", "4", ",", "2", ")", "for", "i2", "in", "range", "(", "11", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.get_choices_age_node": [[236, 239], ["range", "range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_choices_age_node", "(", ")", ":", "\n", "        ", "return", "[", "(", "0", ",", "0", ",", "0", ",", "0", ",", "a", ",", "n", ")", "for", "a", "in", "range", "(", "10", ")", "for", "n", "in", "range", "(", "10", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.get_ua_choice": [[240, 243], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_ua_choice", "(", ")", ":", "\n", "        ", "return", "(", "5", ",", "0", ",", "4", ",", "1", ",", "5", ",", "5", ")", "\n", "", "", "class", "FeatureRecorder", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.FeatureRecorder.__init__": [[248, 255], ["numpy.array"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "max_record_frame", "=", "TrackerConfig", ".", "max_record_frame", "\n", "self", ".", "all_frame_index", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "int", ")", "\n", "self", ".", "all_features", "=", "{", "}", "\n", "self", ".", "all_boxes", "=", "{", "}", "\n", "self", ".", "all_similarity", "=", "{", "}", "\n", "self", ".", "all_iou", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.FeatureRecorder.update": [[256, 297], ["numpy.append", "tracker.FeatureRecorder.all_frame_index.__index__", "len", "pow", "sst.forward_stacker_features", "tracker.TrackUtil.get_iou", "sst.forward_stacker_features", "tracker.TrackUtil.get_iou", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker_features", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_iou", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker_features", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_iou"], ["", "def", "update", "(", "self", ",", "sst", ",", "frame_index", ",", "features", ",", "boxes", ")", ":", "\n", "# if the coming frame in the new frame", "\n", "        ", "if", "frame_index", "not", "in", "self", ".", "all_frame_index", ":", "\n", "# if the recorder have reached the max_record_frame.", "\n", "            ", "if", "len", "(", "self", ".", "all_frame_index", ")", "==", "self", ".", "max_record_frame", ":", "\n", "                ", "del_frame", "=", "self", ".", "all_frame_index", "[", "0", "]", "\n", "del", "self", ".", "all_features", "[", "del_frame", "]", "\n", "del", "self", ".", "all_boxes", "[", "del_frame", "]", "\n", "del", "self", ".", "all_similarity", "[", "del_frame", "]", "\n", "del", "self", ".", "all_iou", "[", "del_frame", "]", "\n", "self", ".", "all_frame_index", "=", "self", ".", "all_frame_index", "[", "1", ":", "]", "\n", "\n", "# add new item for all_frame_index, all_features and all_boxes. Besides, also add new similarity", "\n", "", "self", ".", "all_frame_index", "=", "np", ".", "append", "(", "self", ".", "all_frame_index", ",", "frame_index", ")", "\n", "self", ".", "all_features", "[", "frame_index", "]", "=", "features", "\n", "self", ".", "all_boxes", "[", "frame_index", "]", "=", "boxes", "\n", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "=", "{", "}", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "-", "1", "]", ":", "\n", "                ", "delta", "=", "pow", "(", "TrackerConfig", ".", "decay", ",", "(", "frame_index", "-", "pre_index", ")", "/", "3.0", ")", "\n", "pre_similarity", "=", "sst", ".", "forward_stacker_features", "(", "Variable", "(", "self", ".", "all_features", "[", "pre_index", "]", ")", ",", "Variable", "(", "features", ")", ",", "fill_up_column", "=", "False", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "pre_similarity", "*", "delta", "\n", "\n", "", "self", ".", "all_iou", "[", "frame_index", "]", "=", "{", "}", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "-", "1", "]", ":", "\n", "                ", "iou", "=", "TrackUtil", ".", "get_iou", "(", "self", ".", "all_boxes", "[", "pre_index", "]", ",", "boxes", ")", "\n", "self", ".", "all_iou", "[", "frame_index", "]", "[", "pre_index", "]", "=", "iou", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "all_features", "[", "frame_index", "]", "=", "features", "\n", "self", ".", "all_boxes", "[", "frame_index", "]", "=", "boxes", "\n", "index", "=", "self", ".", "all_frame_index", ".", "__index__", "(", "frame_index", ")", "\n", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "index", "+", "1", "]", ":", "\n", "                ", "if", "pre_index", "==", "self", ".", "all_frame_index", "[", "-", "1", "]", ":", "\n", "                    ", "continue", "\n", "\n", "", "pre_similarity", "=", "sst", ".", "forward_stacker_features", "(", "Variable", "(", "self", ".", "all_features", "[", "pre_index", "]", ")", ",", "Variable", "(", "self", ".", "all_features", "[", "-", "1", "]", ")", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "pre_similarity", "\n", "\n", "iou", "=", "TrackUtil", ".", "get_iou", "(", "self", ".", "all_boxes", "[", "pre_index", "]", ",", "boxes", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.FeatureRecorder.get_feature": [[298, 314], ["len", "len"], "methods", ["None"], ["", "", "", "def", "get_feature", "(", "self", ",", "frame_index", ",", "detection_index", ")", ":", "\n", "        ", "'''\n        get the feature by the specified frame index and detection index\n        :param frame_index: start from 0\n        :param detection_index: start from 0\n        :return: the corresponding feature at frame index and detection index\n        '''", "\n", "\n", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "features", "=", "self", ".", "all_features", "[", "frame_index", "]", "\n", "if", "len", "(", "features", ")", "==", "0", ":", "\n", "                ", "return", "None", "\n", "", "if", "detection_index", "<", "len", "(", "features", ")", ":", "\n", "                ", "return", "features", "[", "detection_index", "]", "\n", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.FeatureRecorder.get_box": [[315, 324], ["len", "len"], "methods", ["None"], ["", "def", "get_box", "(", "self", ",", "frame_index", ",", "detection_index", ")", ":", "\n", "        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "boxes", "=", "self", ".", "all_boxes", "[", "frame_index", "]", "\n", "if", "len", "(", "boxes", ")", "==", "0", ":", "\n", "                ", "return", "None", "\n", "\n", "", "if", "detection_index", "<", "len", "(", "boxes", ")", ":", "\n", "                ", "return", "boxes", "[", "detection_index", "]", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.FeatureRecorder.get_features": [[325, 333], ["len"], "methods", ["None"], ["", "def", "get_features", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "features", "=", "self", ".", "all_features", "[", "frame_index", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "", "if", "len", "(", "features", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.FeatureRecorder.get_boxes": [[334, 343], ["len"], "methods", ["None"], ["", "def", "get_boxes", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "boxes", "=", "self", ".", "all_boxes", "[", "frame_index", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n", "", "if", "len", "(", "boxes", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Node.__init__": [[352, 355], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "frame_index", ",", "id", ")", ":", "\n", "        ", "self", ".", "frame_index", "=", "frame_index", "\n", "self", ".", "id", "=", "id", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Node.get_box": [[356, 360], ["None"], "methods", ["None"], ["", "def", "get_box", "(", "self", ",", "frame_index", ",", "recoder", ")", ":", "\n", "        ", "if", "frame_index", "-", "self", ".", "frame_index", ">=", "TrackerConfig", ".", "max_record_frame", ":", "\n", "            ", "return", "None", "\n", "", "return", "recoder", ".", "all_boxes", "[", "self", ".", "frame_index", "]", "[", "self", ".", "id", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Node.get_iou": [[361, 365], ["None"], "methods", ["None"], ["", "def", "get_iou", "(", "self", ",", "frame_index", ",", "recoder", ",", "box_id", ")", ":", "\n", "        ", "if", "frame_index", "-", "self", ".", "frame_index", ">=", "TrackerConfig", ".", "max_track_node", ":", "\n", "            ", "return", "None", "\n", "", "return", "recoder", ".", "all_iou", "[", "frame_index", "]", "[", "self", ".", "frame_index", "]", "[", "self", ".", "id", ",", "box_id", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Track.__init__": [[377, 384], ["list", "tuple", "numpy.random.rand"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "nodes", "=", "list", "(", ")", "\n", "self", ".", "id", "=", "Track", ".", "_id_pool", "\n", "Track", ".", "_id_pool", "+=", "1", "\n", "self", ".", "age", "=", "0", "\n", "self", ".", "valid", "=", "True", "# indicate this track is merged", "\n", "self", ".", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Track.__del__": [[385, 388], ["None"], "methods", ["None"], ["", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "for", "n", "in", "self", ".", "nodes", ":", "\n", "            ", "del", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Track.add_age": [[389, 391], ["None"], "methods", ["None"], ["", "", "def", "add_age", "(", "self", ")", ":", "\n", "        ", "self", ".", "age", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Track.reset_age": [[392, 394], ["None"], "methods", ["None"], ["", "def", "reset_age", "(", "self", ")", ":", "\n", "        ", "self", ".", "age", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Track.add_node": [[395, 409], ["tracker.Track.nodes.append", "tracker.Track.reset_age", "len", "n.get_iou", "TrackerConfig.min_iou_frame_gap.index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.reset_age", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_iou"], ["", "def", "add_node", "(", "self", ",", "frame_index", ",", "recorder", ",", "node", ")", ":", "\n", "# iou judge", "\n", "        ", "if", "len", "(", "self", ".", "nodes", ")", ">", "0", ":", "\n", "            ", "n", "=", "self", ".", "nodes", "[", "-", "1", "]", "\n", "iou", "=", "n", ".", "get_iou", "(", "frame_index", ",", "recorder", ",", "node", ".", "id", ")", "\n", "delta_frame", "=", "frame_index", "-", "n", ".", "frame_index", "\n", "if", "delta_frame", "in", "TrackerConfig", ".", "min_iou_frame_gap", ":", "\n", "                ", "iou_index", "=", "TrackerConfig", ".", "min_iou_frame_gap", ".", "index", "(", "delta_frame", ")", "\n", "# if iou < TrackerConfig.min_iou[iou_index]:", "\n", "if", "iou", "<", "TrackerConfig", ".", "min_iou", "[", "-", "1", "]", ":", "\n", "                    ", "return", "False", "\n", "", "", "", "self", ".", "nodes", ".", "append", "(", "node", ")", "\n", "self", ".", "reset_age", "(", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Track.get_similarity": [[410, 423], ["numpy.array", "numpy.sum", "len", "numpy.array"], "methods", ["None"], ["", "def", "get_similarity", "(", "self", ",", "frame_index", ",", "recorder", ")", ":", "\n", "        ", "similarity", "=", "[", "]", "\n", "for", "n", "in", "self", ".", "nodes", ":", "\n", "            ", "f", "=", "n", ".", "frame_index", "\n", "id", "=", "n", ".", "id", "\n", "if", "frame_index", "-", "f", ">=", "TrackerConfig", ".", "max_track_node", ":", "\n", "                ", "continue", "\n", "", "similarity", "+=", "[", "recorder", ".", "all_similarity", "[", "frame_index", "]", "[", "f", "]", "[", "id", ",", ":", "]", "]", "\n", "\n", "", "if", "len", "(", "similarity", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "a", "=", "np", ".", "array", "(", "similarity", ")", "\n", "return", "np", ".", "sum", "(", "np", ".", "array", "(", "similarity", ")", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Track.verify": [[424, 435], ["TrackerConfig.min_iou_frame_gap.index", "n.get_iou"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_iou"], ["", "def", "verify", "(", "self", ",", "frame_index", ",", "recorder", ",", "box_id", ")", ":", "\n", "        ", "for", "n", "in", "self", ".", "nodes", ":", "\n", "            ", "delta_f", "=", "frame_index", "-", "n", ".", "frame_index", "\n", "if", "delta_f", "in", "TrackerConfig", ".", "min_iou_frame_gap", ":", "\n", "                ", "iou_index", "=", "TrackerConfig", ".", "min_iou_frame_gap", ".", "index", "(", "delta_f", ")", "\n", "iou", "=", "n", ".", "get_iou", "(", "frame_index", ",", "recorder", ",", "box_id", ")", "\n", "if", "iou", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "if", "iou", "<", "TrackerConfig", ".", "min_iou", "[", "iou_index", "]", ":", "\n", "                    ", "return", "False", "\n", "", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Tracks.__init__": [[442, 445], ["list"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "tracks", "=", "list", "(", ")", "# the set of tracks", "\n", "self", ".", "max_drawing_track", "=", "TrackerConfig", ".", "max_draw_track_node", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Tracks.__getitem__": [[447, 449], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "self", ".", "tracks", "[", "item", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Tracks.append": [[450, 453], ["tracker.Tracks.tracks.append", "tracker.Tracks.volatile_tracks"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.volatile_tracks"], ["", "def", "append", "(", "self", ",", "track", ")", ":", "\n", "        ", "self", ".", "tracks", ".", "append", "(", "track", ")", "\n", "self", ".", "volatile_tracks", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Tracks.volatile_tracks": [[454, 460], ["len", "numpy.argmax"], "methods", ["None"], ["", "def", "volatile_tracks", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "tracks", ")", ">", "TrackerConfig", ".", "max_object", ":", "\n", "# start to delete the most oldest tracks", "\n", "            ", "all_ages", "=", "[", "t", ".", "age", "for", "t", "in", "self", ".", "tracks", "]", "\n", "oldest_track_index", "=", "np", ".", "argmax", "(", "all_ages", ")", "\n", "del", "self", ".", "tracks", "[", "oldest_track_index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Tracks.get_track_by_id": [[461, 466], ["None"], "methods", ["None"], ["", "", "def", "get_track_by_id", "(", "self", ",", "id", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "id", "==", "id", ":", "\n", "                ", "return", "t", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Tracks.get_similarity": [[467, 490], ["numpy.array", "numpy.repeat", "t.get_similarity", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.get_similarity"], ["", "def", "get_similarity", "(", "self", ",", "frame_index", ",", "recorder", ")", ":", "\n", "        ", "ids", "=", "[", "]", "\n", "similarity", "=", "[", "]", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "s", "=", "t", ".", "get_similarity", "(", "frame_index", ",", "recorder", ")", "\n", "if", "s", "is", "None", ":", "\n", "                ", "continue", "\n", "", "similarity", "+=", "[", "s", "]", "\n", "ids", "+=", "[", "t", ".", "id", "]", "\n", "\n", "", "similarity", "=", "np", ".", "array", "(", "similarity", ")", "\n", "\n", "track_num", "=", "similarity", ".", "shape", "[", "0", "]", "\n", "if", "track_num", ">", "0", ":", "\n", "            ", "box_num", "=", "similarity", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "box_num", "=", "0", "\n", "\n", "", "if", "track_num", "==", "0", ":", "\n", "            ", "return", "np", ".", "array", "(", "similarity", ")", ",", "np", ".", "array", "(", "ids", ")", "\n", "\n", "", "similarity", "=", "np", ".", "repeat", "(", "similarity", ",", "[", "1", "]", "*", "(", "box_num", "-", "1", ")", "+", "[", "track_num", "]", ",", "axis", "=", "1", ")", "\n", "return", "np", ".", "array", "(", "similarity", ")", ",", "np", ".", "array", "(", "ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Tracks.one_frame_pass": [[491, 500], ["list", "enumerate", "t.add_age", "list.append"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.add_age", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "one_frame_pass", "(", "self", ")", ":", "\n", "        ", "keep_track_set", "=", "list", "(", ")", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "            ", "t", ".", "add_age", "(", ")", "\n", "if", "t", ".", "age", ">", "TrackerConfig", ".", "max_track_age", ":", "\n", "                ", "continue", "\n", "", "keep_track_set", ".", "append", "(", "i", ")", "\n", "\n", "", "self", ".", "tracks", "=", "[", "self", ".", "tracks", "[", "i", "]", "for", "i", "in", "keep_track_set", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Tracks.merge": [[501, 530], ["len", "numpy.zeros", "enumerate", "enumerate", "enumerate", "numpy.argmax", "tracker.TrackUtil.merge", "tracker.TrackUtil.get_merge_similarity"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.merge", "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackUtil.get_merge_similarity"], ["", "def", "merge", "(", "self", ",", "frame_index", ",", "recorder", ")", ":", "\n", "        ", "t_l", "=", "len", "(", "self", ".", "tracks", ")", "\n", "res", "=", "np", ".", "zeros", "(", "(", "t_l", ",", "t_l", ")", ",", "dtype", "=", "float", ")", "\n", "# get track similarity matrix", "\n", "for", "i", ",", "t1", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "            ", "for", "j", ",", "t2", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "                ", "s", "=", "TrackUtil", ".", "get_merge_similarity", "(", "t1", ",", "t2", ",", "frame_index", ",", "recorder", ")", "\n", "if", "s", "is", "None", ":", "\n", "                    ", "res", "[", "i", ",", "j", "]", "=", "0", "\n", "", "else", ":", "\n", "                    ", "res", "[", "i", ",", "j", "]", "=", "s", "\n", "\n", "# get the track pair which needs merged", "\n", "", "", "", "used_indexes", "=", "[", "]", "\n", "merge_pair", "=", "[", "]", "\n", "for", "i", ",", "t1", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "            ", "if", "i", "in", "used_indexes", ":", "\n", "                ", "continue", "\n", "", "max_track_index", "=", "np", ".", "argmax", "(", "res", "[", "i", ",", ":", "]", ")", "\n", "if", "i", "!=", "max_track_index", "and", "res", "[", "i", ",", "max_track_index", "]", ">", "TrackerConfig", ".", "min_merge_threshold", ":", "\n", "                ", "used_indexes", "+=", "[", "max_track_index", "]", "\n", "merge_pair", "+=", "[", "(", "i", ",", "max_track_index", ")", "]", "\n", "\n", "# start merge", "\n", "", "", "for", "i", ",", "j", "in", "merge_pair", ":", "\n", "            ", "TrackUtil", ".", "merge", "(", "self", ".", "tracks", "[", "i", "]", ",", "self", ".", "tracks", "[", "j", "]", ")", "\n", "\n", "# remove the invalid tracks", "\n", "", "self", ".", "tracks", "=", "[", "t", "for", "t", "in", "self", ".", "tracks", "if", "t", ".", "valid", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Tracks.show": [[532, 563], ["zip", "t.nodes[].get_box", "cv2.putText", "cv2.rectangle", "len", "n1.get_box", "n2.get_box", "cv2.line", "len", "len", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_box", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_box", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_box"], ["", "def", "show", "(", "self", ",", "frame_index", ",", "recorder", ",", "image", ")", ":", "\n", "        ", "h", ",", "w", ",", "_", "=", "image", ".", "shape", "\n", "\n", "# draw rectangle", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "len", "(", "t", ".", "nodes", ")", ">", "0", "and", "t", ".", "age", "<", "2", ":", "\n", "                ", "b", "=", "t", ".", "nodes", "[", "-", "1", "]", ".", "get_box", "(", "frame_index", ",", "recorder", ")", "\n", "if", "b", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "txt", "=", "'({}, {})'", ".", "format", "(", "t", ".", "id", ",", "t", ".", "nodes", "[", "-", "1", "]", ".", "id", ")", "\n", "image", "=", "cv2", ".", "putText", "(", "image", ",", "txt", ",", "(", "int", "(", "b", "[", "0", "]", "*", "w", ")", ",", "int", "(", "(", "b", "[", "1", "]", ")", "*", "h", ")", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "t", ".", "color", ",", "3", ")", "\n", "image", "=", "cv2", ".", "rectangle", "(", "image", ",", "(", "int", "(", "b", "[", "0", "]", "*", "w", ")", ",", "int", "(", "(", "b", "[", "1", "]", ")", "*", "h", ")", ")", ",", "(", "int", "(", "(", "b", "[", "0", "]", "+", "b", "[", "2", "]", ")", "*", "w", ")", ",", "int", "(", "(", "b", "[", "1", "]", "+", "b", "[", "3", "]", ")", "*", "h", ")", ")", ",", "t", ".", "color", ",", "2", ")", "\n", "\n", "# draw line", "\n", "", "", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "age", ">", "1", ":", "\n", "                ", "continue", "\n", "", "if", "len", "(", "t", ".", "nodes", ")", ">", "self", ".", "max_drawing_track", ":", "\n", "                ", "start", "=", "len", "(", "t", ".", "nodes", ")", "-", "self", ".", "max_drawing_track", "\n", "", "else", ":", "\n", "                ", "start", "=", "0", "\n", "", "for", "n1", ",", "n2", "in", "zip", "(", "t", ".", "nodes", "[", "start", ":", "]", ",", "t", ".", "nodes", "[", "start", "+", "1", ":", "]", ")", ":", "\n", "                ", "b1", "=", "n1", ".", "get_box", "(", "frame_index", ",", "recorder", ")", "\n", "b2", "=", "n2", ".", "get_box", "(", "frame_index", ",", "recorder", ")", "\n", "if", "b1", "is", "None", "or", "b2", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "c1", "=", "(", "int", "(", "(", "b1", "[", "0", "]", "+", "b1", "[", "2", "]", "/", "2.0", ")", "*", "w", ")", ",", "int", "(", "(", "b1", "[", "1", "]", "+", "b1", "[", "3", "]", ")", "*", "h", ")", ")", "\n", "c2", "=", "(", "int", "(", "(", "b2", "[", "0", "]", "+", "b2", "[", "2", "]", "/", "2.0", ")", "*", "w", ")", ",", "int", "(", "(", "b2", "[", "1", "]", "+", "b2", "[", "3", "]", ")", "*", "h", ")", ")", "\n", "image", "=", "cv2", ".", "line", "(", "image", ",", "c1", ",", "c2", ",", "t", ".", "color", ",", "2", ")", "\n", "\n", "", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.SSTTracker.__init__": [[566, 578], ["tracker.SSTTracker.load_model", "tracker.FeatureRecorder", "tracker.Tracks"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.load_model"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "Track", ".", "_id_pool", "=", "0", "\n", "self", ".", "first_run", "=", "True", "\n", "self", ".", "image_size", "=", "TrackerConfig", ".", "image_size", "\n", "self", ".", "model_path", "=", "TrackerConfig", ".", "sst_model_path", "\n", "self", ".", "cuda", "=", "TrackerConfig", ".", "cuda", "\n", "self", ".", "mean_pixel", "=", "TrackerConfig", ".", "mean_pixel", "\n", "self", ".", "max_object", "=", "TrackerConfig", ".", "max_object", "\n", "self", ".", "frame_index", "=", "0", "\n", "self", ".", "load_model", "(", ")", "\n", "self", ".", "recorder", "=", "FeatureRecorder", "(", ")", "\n", "self", ".", "tracks", "=", "Tracks", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.SSTTracker.load_model": [[579, 589], ["layer.sst.build_sst", "tracker.SSTTracker.sst.eval", "tracker.SSTTracker.sst.load_state_dict", "tracker.SSTTracker.sst.cuda", "tracker.SSTTracker.sst.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst.build_sst"], ["", "def", "load_model", "(", "self", ")", ":", "\n", "# load the model", "\n", "        ", "self", ".", "sst", "=", "build_sst", "(", "'test'", ",", "900", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "cudnn", ".", "benchmark", "=", "True", "\n", "self", ".", "sst", ".", "load_state_dict", "(", "torch", ".", "load", "(", "config", "[", "'resume'", "]", ")", ")", "\n", "self", ".", "sst", "=", "self", ".", "sst", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "sst", ".", "load_state_dict", "(", "torch", ".", "load", "(", "config", "[", "'resume'", "]", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "", "self", ".", "sst", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.SSTTracker.update": [[590, 687], ["numpy.copy", "tracker.TrackUtil.convert_image", "numpy.copy", "tracker.TrackUtil.convert_detection", "tracker.SSTTracker.sst.forward_feature_extracter", "tracker.SSTTracker.recorder.update", "tracker.SSTTracker.tracks.get_similarity", "tracker.SSTTracker.tracks.one_frame_pass", "tracker.SSTTracker.tracks.show", "range", "tracker.SSTTracker.tracks.one_frame_pass", "tracker.SSTTracker.tracks.show", "len", "scipy.optimize.linear_sum_assignment", "print", "range", "len", "tracker.Track", "tracker.Node", "tracker.Track.add_node", "tracker.SSTTracker.tracks.append", "tracker.SSTTracker.tracks.get_track_by_id", "tracker.Node", "tracker.Track.add_node", "len", "tracker.SSTTracker.tracks.get_track_by_id", "scipy.optimize.linear_sum_assignment", "tracker.Node", "tracker.Track", "tracker.Track.add_node", "tracker.SSTTracker.tracks.append", "tracker.Track.verify"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_image", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_detection", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_feature_extracter", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.get_similarity", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.one_frame_pass", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.one_frame_pass", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.get_track_by_id", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.get_track_by_id", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.Track.verify"], ["", "def", "update", "(", "self", ",", "image", ",", "detection", ",", "show_image", ",", "frame_index", ",", "force_init", "=", "False", ")", ":", "\n", "        ", "'''\n        Update the state of tracker, the following jobs should be done:\n        1) extract the features\n        2) stack the features together\n        3) get the similarity matrix\n        4) do assignment work\n        5) save the previous image\n        :param image: the opencv readed image, format is hxwx3\n        :param detections: detection array. numpy array (l, r, w, h) and they all formated in (0, 1)\n        '''", "\n", "\n", "self", ".", "frame_index", "=", "frame_index", "\n", "\n", "# format the image and detection", "\n", "h", ",", "w", ",", "_", "=", "image", ".", "shape", "\n", "image_org", "=", "np", ".", "copy", "(", "image", ")", "\n", "image", "=", "TrackUtil", ".", "convert_image", "(", "image", ")", "\n", "detection_org", "=", "np", ".", "copy", "(", "detection", ")", "\n", "detection", "=", "TrackUtil", ".", "convert_detection", "(", "detection", ")", "\n", "\n", "# features can be (1, 10, 450)", "\n", "features", "=", "self", ".", "sst", ".", "forward_feature_extracter", "(", "image", ",", "detection", ")", "\n", "\n", "# update recorder", "\n", "self", ".", "recorder", ".", "update", "(", "self", ".", "sst", ",", "self", ".", "frame_index", ",", "features", ".", "data", ",", "detection_org", ")", "\n", "\n", "if", "self", ".", "frame_index", "==", "0", "or", "force_init", "or", "len", "(", "self", ".", "tracks", ".", "tracks", ")", "==", "0", ":", "\n", "            ", "for", "i", "in", "range", "(", "detection", ".", "shape", "[", "1", "]", ")", ":", "\n", "                ", "t", "=", "Track", "(", ")", "\n", "n", "=", "Node", "(", "self", ".", "frame_index", ",", "i", ")", "\n", "t", ".", "add_node", "(", "self", ".", "frame_index", ",", "self", ".", "recorder", ",", "n", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "", "self", ".", "tracks", ".", "one_frame_pass", "(", ")", "\n", "# self.frame_index += 1", "\n", "return", "self", ".", "tracks", ".", "show", "(", "self", ".", "frame_index", ",", "self", ".", "recorder", ",", "image_org", ")", "\n", "\n", "# get tracks similarity", "\n", "", "y", ",", "ids", "=", "self", ".", "tracks", ".", "get_similarity", "(", "self", ".", "frame_index", ",", "self", ".", "recorder", ")", "\n", "\n", "if", "len", "(", "y", ")", ">", "0", ":", "\n", "#3) find the corresponding by the similar matrix", "\n", "            ", "row_index", ",", "col_index", "=", "linear_sum_assignment", "(", "-", "y", ")", "\n", "col_index", "[", "col_index", ">=", "detection_org", ".", "shape", "[", "0", "]", "]", "=", "-", "1", "\n", "\n", "# verification by iou", "\n", "verify_iteration", "=", "0", "\n", "while", "verify_iteration", "<", "TrackerConfig", ".", "roi_verify_max_iteration", ":", "\n", "                ", "is_change_y", "=", "False", "\n", "for", "i", "in", "row_index", ":", "\n", "                    ", "box_id", "=", "col_index", "[", "i", "]", "\n", "track_id", "=", "ids", "[", "i", "]", "\n", "\n", "if", "box_id", "<", "0", ":", "\n", "                        ", "continue", "\n", "", "t", "=", "self", ".", "tracks", ".", "get_track_by_id", "(", "track_id", ")", "\n", "if", "not", "t", ".", "verify", "(", "self", ".", "frame_index", ",", "self", ".", "recorder", ",", "box_id", ")", ":", "\n", "                        ", "y", "[", "i", ",", "box_id", "]", "*=", "TrackerConfig", ".", "roi_verify_punish_rate", "\n", "is_change_y", "=", "True", "\n", "", "", "if", "is_change_y", ":", "\n", "                    ", "row_index", ",", "col_index", "=", "linear_sum_assignment", "(", "-", "y", ")", "\n", "col_index", "[", "col_index", ">=", "detection_org", ".", "shape", "[", "0", "]", "]", "=", "-", "1", "\n", "", "else", ":", "\n", "                    ", "break", "\n", "", "verify_iteration", "+=", "1", "\n", "\n", "", "print", "(", "verify_iteration", ")", "\n", "\n", "#4) update the tracks", "\n", "for", "i", "in", "row_index", ":", "\n", "                ", "track_id", "=", "ids", "[", "i", "]", "\n", "t", "=", "self", ".", "tracks", ".", "get_track_by_id", "(", "track_id", ")", "\n", "col_id", "=", "col_index", "[", "i", "]", "\n", "if", "col_id", "<", "0", ":", "\n", "                    ", "continue", "\n", "", "node", "=", "Node", "(", "self", ".", "frame_index", ",", "col_id", ")", "\n", "t", ".", "add_node", "(", "self", ".", "frame_index", ",", "self", ".", "recorder", ",", "node", ")", "\n", "\n", "#5) add new track", "\n", "", "for", "col", "in", "range", "(", "len", "(", "detection_org", ")", ")", ":", "\n", "                ", "if", "col", "not", "in", "col_index", ":", "\n", "                    ", "node", "=", "Node", "(", "self", ".", "frame_index", ",", "col", ")", "\n", "t", "=", "Track", "(", ")", "\n", "t", ".", "add_node", "(", "self", ".", "frame_index", ",", "self", ".", "recorder", ",", "node", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "\n", "# remove the old track", "\n", "", "", "", "self", ".", "tracks", ".", "one_frame_pass", "(", ")", "\n", "\n", "# merge the tracks", "\n", "# if self.frame_index % 20 == 0:", "\n", "#     self.tracks.merge(self.frame_index, self.recorder)", "\n", "\n", "# if show_image:", "\n", "image_org", "=", "self", ".", "tracks", ".", "show", "(", "self", ".", "frame_index", ",", "self", ".", "recorder", ",", "image_org", ")", "\n", "# self.frame_index += 1", "\n", "return", "image_org", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.test_ua.test": [[23, 147], ["print", "sorted", "os.path.join", "os.path.join", "FileNotFoundError", "numpy.loadtxt", "os.listdir", "os.path.basename", "os.path.join", "os.path.join", "tracker.TrackerConfig.get_configure_str", "tracker.TrackerConfig.set_configure", "os.path.join", "os.path.basename", "ignore_file_base_name.index", "detection_file_base_name.index", "os.path.join.format", "os.path.join.format", "print", "tracker.SSTTracker", "data.ua_detection_data_reader.UADetectionDataReader", "list", "utils.timer.Timer", "enumerate", "numpy.savetxt", "numpy.savetxt", "print", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "FileNotFoundError", "os.path.join", "os.path.basename", "os.path.basename", "os.path.exists", "os.mkdir", "float", "float", "utils.timer.Timer.tic", "tracker.SSTTracker.update", "utils.timer.Timer.toc", "len", "numpy.array().astype", "numpy.array", "os.path.join", "os.path.exists", "os.path.exists", "os.path.exists", "len", "cv2.VideoWriter", "print", "cv2.imshow", "cv2.waitKey", "cv2.VideoWriter.write", "len", "cv2.VideoWriter_fourcc", "n.get_box", "list.append", "numpy.array", "os.path.splitext", "int"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.get_configure_str", "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.set_configure", "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.tic", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.toc", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_box", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["def", "test", "(", "choice", "=", "None", ",", "sequence_list", "=", "None", ")", ":", "\n", "    ", "image_root", "=", "args", ".", "ua_image_root", "\n", "detection_root", "=", "args", ".", "ua_detection_root", "\n", "ignore_root", "=", "args", ".", "ua_ignore_root", "\n", "save_folder", "=", "args", ".", "save_folder", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "image_root", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "detection_root", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "ignore_root", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'Pls check the file of parameters'", ")", "\n", "\n", "", "print", "(", "'''\n    ==============================\n    =     Start Reading Files    =\n    ==============================\n    '''", ")", "\n", "\n", "if", "not", "sequence_list", "is", "None", ":", "\n", "        ", "sequences", "=", "np", ".", "loadtxt", "(", "sequence_list", ",", "dtype", "=", "'str'", ")", "\n", "", "else", ":", "\n", "        ", "sequences", "=", "os", ".", "listdir", "(", "image_root", ")", "\n", "", "sequences_basename", "=", "[", "os", ".", "path", ".", "basename", "(", "s", ")", "for", "s", "in", "sequences", "]", "\n", "# print(sequences_basename)", "\n", "# validation", "\n", "for", "seq", "in", "sequences", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "image_root", ",", "seq", ")", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "(", ")", "\n", "\n", "", "", "all_image_folders", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "d", ")", "for", "d", "in", "sequences", "]", "\n", ")", "\n", "\n", "all_detection_files", "=", "[", "os", ".", "path", ".", "join", "(", "detection_root", ",", "f", "+", "'_Det_'", "+", "config", "[", "'detector_name'", "]", "+", "'.txt'", ")", "for", "f", "in", "sequences_basename", "]", "\n", "all_ignore_files", "=", "[", "os", ".", "path", ".", "join", "(", "ignore_root", ",", "f", "+", "'_IgR.txt'", ")", "for", "f", "in", "sequences_basename", "]", "\n", "# all_detection_files = sorted(", "\n", "#     [os.path.join(detection_root, f) for f in os.listdir(detection_root) if 'MVI_' in f and os.path.basename(f) in sequences_basename]", "\n", "# )", "\n", "# all_ignore_files = sorted(", "\n", "#     [os.path.join(ignore_root, f) for f in os.listdir(ignore_root) if os.path.basename(f)[:-8] in sequences_basename]", "\n", "# )", "\n", "# print(all_ignore_files)", "\n", "\n", "ignore_file_base_name", "=", "[", "os", ".", "path", ".", "basename", "(", "f", ")", "[", ":", "-", "8", "]", "for", "f", "in", "all_ignore_files", "]", "\n", "detection_file_base_name", "=", "[", "os", ".", "path", ".", "basename", "(", "f", ")", "[", ":", "9", "]", "for", "f", "in", "all_detection_files", "]", "\n", "\n", "choice_str", "=", "''", "\n", "if", "not", "choice", "is", "None", ":", "\n", "        ", "choice_str", "=", "TrackerConfig", ".", "get_configure_str", "(", "choice", ")", "\n", "TrackerConfig", ".", "set_configure", "(", "c", ")", "\n", "save_folder", "=", "os", ".", "path", ".", "join", "(", "args", ".", "save_folder", ",", "choice_str", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_folder", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "save_folder", ")", "\n", "\n", "", "", "saved_file_name_format", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'{}.txt'", ")", "\n", "saved_video_name_format", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'{}.avi'", ")", "\n", "\n", "for", "image_folder", "in", "all_image_folders", ":", "\n", "        ", "image_folder_base_name", "=", "os", ".", "path", ".", "basename", "(", "image_folder", ")", "\n", "i", "=", "ignore_file_base_name", ".", "index", "(", "image_folder_base_name", ")", "\n", "ignore_file", "=", "all_ignore_files", "[", "i", "]", "\n", "\n", "j", "=", "detection_file_base_name", ".", "index", "(", "image_folder_base_name", ")", "\n", "detection_file", "=", "all_detection_files", "[", "j", "]", "\n", "\n", "saved_file_name", "=", "saved_file_name_format", ".", "format", "(", "image_folder_base_name", ")", "\n", "saved_video_name", "=", "saved_video_name_format", ".", "format", "(", "image_folder_base_name", ")", "\n", "vw", "=", "None", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "image_folder", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "detection_file", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "ignore_file", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "print", "(", "'processing '", ",", "image_folder", ",", "'>>>>>>>>>>>>>>>>>>'", ")", "\n", "\n", "tracker", "=", "SSTTracker", "(", ")", "\n", "reader", "=", "UADetectionDataReader", "(", "image_folder", ",", "detection_file", ",", "ignore_file", "if", "args", ".", "use_ignore", "else", "None", ",", "\n", "args", ".", "detection_threshold", ")", "\n", "result", "=", "list", "(", ")", "\n", "result_str", "=", "saved_file_name", "\n", "timer", "=", "Timer", "(", ")", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "reader", ")", ":", "\n", "            ", "if", "item", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "img", "=", "item", "[", "0", "]", "\n", "det", "=", "item", "[", "1", "]", "\n", "\n", "if", "img", "is", "None", "or", "det", "is", "None", "or", "len", "(", "det", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "len", "(", "det", ")", ">", "config", "[", "'max_object'", "]", ":", "\n", "                ", "det", "=", "det", "[", ":", "config", "[", "'max_object'", "]", ",", ":", "]", "\n", "\n", "", "h", ",", "w", ",", "_", "=", "img", ".", "shape", "\n", "if", "vw", "is", "None", "and", "args", ".", "save_video", ":", "\n", "                ", "vw", "=", "cv2", ".", "VideoWriter", "(", "saved_video_name", ",", "cv2", ".", "VideoWriter_fourcc", "(", "'M'", ",", "'J'", ",", "'P'", ",", "'G'", ")", ",", "10", ",", "(", "w", ",", "h", ")", ")", "\n", "\n", "", "det", "[", ":", ",", "[", "2", ",", "4", "]", "]", "/=", "float", "(", "w", ")", "\n", "det", "[", ":", ",", "[", "3", ",", "5", "]", "]", "/=", "float", "(", "h", ")", "\n", "\n", "timer", ".", "tic", "(", ")", "\n", "image_org", "=", "tracker", ".", "update", "(", "img", ",", "det", "[", ":", ",", "2", ":", "6", "]", ",", "args", ".", "show_image", ",", "i", ")", "\n", "timer", ".", "toc", "(", ")", "\n", "if", "i", "%", "20", "==", "0", ":", "\n", "                ", "print", "(", "'{}:{}, {}, {}, {}\\r'", ".", "format", "(", "saved_file_name", ",", "i", ",", "int", "(", "i", "*", "100", "/", "reader", ".", "length", ")", ",", "choice_str", ",", "args", ".", "detection_threshold", ")", ")", "\n", "\n", "", "if", "args", ".", "show_image", "and", "not", "image_org", "is", "None", ":", "\n", "                ", "cv2", ".", "imshow", "(", "'res'", ",", "image_org", ")", "\n", "cv2", ".", "waitKey", "(", "1", ")", "\n", "\n", "", "if", "args", ".", "save_video", "and", "not", "image_org", "is", "None", ":", "\n", "                ", "vw", ".", "write", "(", "image_org", ")", "\n", "\n", "", "for", "t", "in", "tracker", ".", "tracks", ":", "\n", "                ", "n", "=", "t", ".", "nodes", "[", "-", "1", "]", "\n", "if", "t", ".", "age", "==", "1", ":", "\n", "                    ", "b", "=", "n", ".", "get_box", "(", "tracker", ".", "frame_index", "-", "1", ",", "tracker", ".", "recorder", ")", "\n", "result", ".", "append", "(", "\n", "[", "i", "+", "1", "]", "+", "[", "t", ".", "id", "+", "1", "]", "+", "[", "b", "[", "0", "]", "*", "w", ",", "b", "[", "1", "]", "*", "h", ",", "b", "[", "2", "]", "*", "w", ",", "b", "[", "3", "]", "*", "h", "]", "+", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", "\n", ")", "\n", "# save data", "\n", "", "", "", "if", "len", "(", "result", ")", ">", "0", ":", "\n", "            ", "save_format", "=", "'%d %d %1.2f %1.2f %1.2f %1.2f %d %d %d %d'", "\n", "", "else", ":", "\n", "            ", "save_format", "=", "'%i'", "\n", "", "np", ".", "savetxt", "(", "saved_file_name", ",", "np", ".", "array", "(", "result", ")", ".", "astype", "(", "int", ")", ",", "fmt", "=", "save_format", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "splitext", "(", "saved_file_name", ")", "[", "0", "]", "+", "'-speed.txt'", ",", "np", ".", "array", "(", "[", "timer", ".", "total_time", "]", ")", ",", "fmt", "=", "'%.3f'", ")", "\n", "print", "(", "result_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.test_mot15.test": [[23, 115], ["os.path.join", "os.path.join", "utils.timer.Timer", "print", "print", "os.path.exists", "os.mkdir", "tracker.TrackerConfig.get_configure_str", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join.format", "os.path.join.format", "data.mot_data_reader.MOTDataReader", "tracker.SSTTracker", "list", "enumerate", "numpy.savetxt", "print", "os.path.exists", "os.mkdir", "tracker.TrackerConfig.set_configure", "tracker.TrackerConfig.set_configure", "det.astype.astype", "float", "float", "utils.timer.Timer.tic", "tracker.SSTTracker.update", "utils.timer.Timer.toc", "print", "numpy.array().astype", "len", "len", "cv2.VideoWriter", "cv2.imshow", "cv2.waitKey", "len", "cv2.VideoWriter_fourcc", "os.path.basename", "int", "cv2.VideoWriter.write", "n.get_box", "list.append", "numpy.array", "len"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.get_configure_str", "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.set_configure", "home.repos.pwc.inspect_result.shijieS_SST.None.tracker.TrackerConfig.set_configure", "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.tic", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.toc", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_box", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["def", "test", "(", "choice", "=", "None", ")", ":", "\n", "    ", "video_name_list", "=", "config", "[", "'video_name_list'", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "log_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "log_folder", ")", "\n", "\n", "", "save_folder", "=", "''", "\n", "choice_str", "=", "''", "\n", "if", "not", "choice", "is", "None", ":", "\n", "        ", "choice_str", "=", "TrackerConfig", ".", "get_configure_str", "(", "choice", ")", "\n", "save_folder", "=", "os", ".", "path", ".", "join", "(", "args", ".", "log_folder", ",", "choice_str", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_folder", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "save_folder", ")", "\n", "\n", "", "", "save_file_name_format", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'{}.txt'", ")", "\n", "save_video_name_format", "=", "os", ".", "path", ".", "join", "(", "save_folder", ",", "'{}.avi'", ")", "\n", "timer", "=", "Timer", "(", ")", "\n", "\n", "for", "video_name", "in", "video_name_list", ":", "\n", "        ", "if", "video_name", "==", "'AVG-TownCentre'", ":", "\n", "            ", "TrackerConfig", ".", "set_configure", "(", "(", "4", ",", "0", ",", "4", ",", "4", ",", "5", ",", "4", ")", ")", "\n", "", "else", ":", "\n", "            ", "TrackerConfig", ".", "set_configure", "(", "choice", ")", "\n", "\n", "\n", "", "mot_root", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'mot_root'", "]", ",", "config", "[", "'dataset_type'", "]", ")", "\n", "mot_root", "=", "os", ".", "path", ".", "join", "(", "mot_root", ",", "video_name", ")", "\n", "image_folder", "=", "os", ".", "path", ".", "join", "(", "mot_root", ",", "'img1'", ")", "\n", "detection_file_name", "=", "os", ".", "path", ".", "join", "(", "mot_root", ",", "'det/det.txt'", ")", "\n", "save_video_name", "=", "save_video_name_format", ".", "format", "(", "video_name", ")", "\n", "save_file_name", "=", "save_file_name_format", ".", "format", "(", "video_name", ")", "\n", "reader", "=", "MOTDataReader", "(", "image_folder", "=", "image_folder", ",", "\n", "detection_file_name", "=", "detection_file_name", ",", "\n", "min_confidence", "=", "None", ")", "\n", "tracker", "=", "SSTTracker", "(", ")", "\n", "\n", "result", "=", "list", "(", ")", "\n", "result_str", "=", "save_file_name", "\n", "\n", "force_init", "=", "True", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "reader", ")", ":", "\n", "            ", "if", "i", ">", "len", "(", "reader", ")", ":", "\n", "                ", "break", "\n", "\n", "", "if", "item", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "", "img", "=", "item", "[", "0", "]", "\n", "det", "=", "item", "[", "1", "]", "\n", "\n", "if", "img", "is", "None", "or", "det", "is", "None", "or", "len", "(", "det", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "if", "len", "(", "det", ")", ">", "config", "[", "'max_object'", "]", ":", "\n", "                ", "det", "=", "det", "[", ":", "config", "[", "'max_object'", "]", ",", ":", "]", "\n", "\n", "", "h", ",", "w", ",", "_", "=", "img", ".", "shape", "\n", "\n", "if", "i", "==", "1", "and", "args", ".", "save_video", ":", "\n", "                ", "vw", "=", "cv2", ".", "VideoWriter", "(", "save_video_name", ",", "cv2", ".", "VideoWriter_fourcc", "(", "'M'", ",", "'J'", ",", "'P'", ",", "'G'", ")", ",", "10", ",", "(", "w", ",", "h", ")", ")", "\n", "", "det", "=", "det", ".", "astype", "(", "float", ")", "\n", "det", "[", ":", ",", "[", "2", ",", "4", "]", "]", "/=", "float", "(", "w", ")", "\n", "det", "[", ":", ",", "[", "3", ",", "5", "]", "]", "/=", "float", "(", "h", ")", "\n", "timer", ".", "tic", "(", ")", "\n", "image_org", "=", "tracker", ".", "update", "(", "img", ",", "det", "[", ":", ",", "2", ":", "6", "]", ",", "args", ".", "show_image", ",", "i", ",", "force_init", ")", "\n", "force_init", "=", "False", "\n", "timer", ".", "toc", "(", ")", "\n", "print", "(", "'{}:{}, {}, {}\\r'", ".", "format", "(", "os", ".", "path", ".", "basename", "(", "save_file_name", ")", ",", "i", ",", "int", "(", "i", "*", "100", "/", "len", "(", "reader", ")", ")", ",", "choice_str", ")", ")", "\n", "if", "args", ".", "show_image", "and", "not", "image_org", "is", "None", ":", "\n", "                ", "cv2", ".", "imshow", "(", "'res'", ",", "image_org", ")", "\n", "cv2", ".", "waitKey", "(", "1", ")", "\n", "\n", "", "if", "args", ".", "save_video", "and", "not", "image_org", "is", "None", ":", "\n", "                ", "try", ":", "\n", "                    ", "vw", ".", "write", "(", "image_org", ")", "\n", "", "except", ":", "\n", "                    ", "pass", "\n", "\n", "# save result", "\n", "", "", "for", "t", "in", "tracker", ".", "tracks", ":", "\n", "                ", "n", "=", "t", ".", "nodes", "[", "-", "1", "]", "\n", "if", "t", ".", "age", "==", "1", ":", "\n", "                    ", "b", "=", "n", ".", "get_box", "(", "tracker", ".", "frame_index", "-", "1", ",", "tracker", ".", "recorder", ")", "\n", "result", ".", "append", "(", "\n", "[", "i", "+", "1", "]", "+", "[", "t", ".", "id", "+", "1", "]", "+", "[", "b", "[", "0", "]", "*", "w", ",", "b", "[", "1", "]", "*", "h", ",", "b", "[", "2", "]", "*", "w", ",", "b", "[", "3", "]", "*", "h", "]", "+", "[", "-", "1", ",", "-", "1", ",", "-", "1", ",", "-", "1", "]", "\n", ")", "\n", "# save data", "\n", "", "", "", "np", ".", "savetxt", "(", "save_file_name", ",", "np", ".", "array", "(", "result", ")", ".", "astype", "(", "int", ")", ",", "fmt", "=", "'%i'", ")", "\n", "print", "(", "result_str", ")", "\n", "\n", "", "print", "(", "timer", ".", "total_time", ")", "\n", "print", "(", "timer", ".", "average_time", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.FeatureRecorder.__init__": [[37, 44], ["numpy.array"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "max_record_frame", "=", "TrackerConfig", ".", "max_record_frame", "\n", "self", ".", "all_frame_index", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "int", ")", "\n", "self", ".", "all_features", "=", "{", "}", "\n", "self", ".", "all_boxes", "=", "{", "}", "\n", "self", ".", "all_similarity", "=", "{", "}", "\n", "self", ".", "all_iou", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.FeatureRecorder.update": [[45, 86], ["numpy.append", "sst_tracker.FeatureRecorder.all_frame_index.__index__", "len", "pow", "sst.forward_stacker_features", "sst_tracker.TrackUtil.get_iou", "sst.forward_stacker_features", "sst_tracker.TrackUtil.get_iou", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker_features", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_iou", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker_features", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_iou"], ["", "def", "update", "(", "self", ",", "sst", ",", "frame_index", ",", "features", ",", "boxes", ")", ":", "\n", "# if the coming frame in the new frame", "\n", "        ", "if", "frame_index", "not", "in", "self", ".", "all_frame_index", ":", "\n", "# if the recorder have reached the max_record_frame.", "\n", "            ", "if", "len", "(", "self", ".", "all_frame_index", ")", "==", "self", ".", "max_record_frame", ":", "\n", "                ", "del_frame", "=", "self", ".", "all_frame_index", "[", "0", "]", "\n", "del", "self", ".", "all_features", "[", "del_frame", "]", "\n", "del", "self", ".", "all_boxes", "[", "del_frame", "]", "\n", "del", "self", ".", "all_similarity", "[", "del_frame", "]", "\n", "del", "self", ".", "all_iou", "[", "del_frame", "]", "\n", "self", ".", "all_frame_index", "=", "self", ".", "all_frame_index", "[", "1", ":", "]", "\n", "\n", "# add new item for all_frame_index, all_features and all_boxes. Besides, also add new similarity", "\n", "", "self", ".", "all_frame_index", "=", "np", ".", "append", "(", "self", ".", "all_frame_index", ",", "frame_index", ")", "\n", "self", ".", "all_features", "[", "frame_index", "]", "=", "features", "\n", "self", ".", "all_boxes", "[", "frame_index", "]", "=", "boxes", "\n", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "=", "{", "}", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "-", "1", "]", ":", "\n", "                ", "delta", "=", "pow", "(", "TrackerConfig", ".", "decay", ",", "frame_index", "-", "pre_index", ")", "\n", "pre_similarity", "=", "sst", ".", "forward_stacker_features", "(", "Variable", "(", "self", ".", "all_features", "[", "pre_index", "]", ")", ",", "Variable", "(", "features", ")", ",", "fill_up_column", "=", "False", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "pre_similarity", "*", "delta", "\n", "\n", "", "self", ".", "all_iou", "[", "frame_index", "]", "=", "{", "}", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "-", "1", "]", ":", "\n", "                ", "iou", "=", "TrackUtil", ".", "get_iou", "(", "self", ".", "all_boxes", "[", "pre_index", "]", ",", "boxes", ")", "\n", "self", ".", "all_iou", "[", "frame_index", "]", "[", "pre_index", "]", "=", "iou", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "all_features", "[", "frame_index", "]", "=", "features", "\n", "self", ".", "all_boxes", "[", "frame_index", "]", "=", "boxes", "\n", "index", "=", "self", ".", "all_frame_index", ".", "__index__", "(", "frame_index", ")", "\n", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "index", "+", "1", "]", ":", "\n", "                ", "if", "pre_index", "==", "self", ".", "all_frame_index", "[", "-", "1", "]", ":", "\n", "                    ", "continue", "\n", "\n", "", "pre_similarity", "=", "sst", ".", "forward_stacker_features", "(", "Variable", "(", "self", ".", "all_features", "[", "pre_index", "]", ")", ",", "Variable", "(", "self", ".", "all_features", "[", "-", "1", "]", ")", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "pre_similarity", "\n", "\n", "iou", "=", "TrackUtil", ".", "get_iou", "(", "self", ".", "all_boxes", "[", "pre_index", "]", ",", "boxes", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.FeatureRecorder.get_feature": [[87, 103], ["len", "len"], "methods", ["None"], ["", "", "", "def", "get_feature", "(", "self", ",", "frame_index", ",", "detection_index", ")", ":", "\n", "        ", "'''\n        get the feature by the specified frame index and detection index\n        :param frame_index: start from 0\n        :param detection_index: start from 0\n        :return: the corresponding feature at frame index and detection index\n        '''", "\n", "\n", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "features", "=", "self", ".", "all_features", "[", "frame_index", "]", "\n", "if", "len", "(", "features", ")", "==", "0", ":", "\n", "                ", "return", "None", "\n", "", "if", "detection_index", "<", "len", "(", "features", ")", ":", "\n", "                ", "return", "features", "[", "detection_index", "]", "\n", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.FeatureRecorder.get_box": [[104, 113], ["len", "len"], "methods", ["None"], ["", "def", "get_box", "(", "self", ",", "frame_index", ",", "detection_index", ")", ":", "\n", "        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "boxes", "=", "self", ".", "all_boxes", "[", "frame_index", "]", "\n", "if", "len", "(", "boxes", ")", "==", "0", ":", "\n", "                ", "return", "None", "\n", "\n", "", "if", "detection_index", "<", "len", "(", "boxes", ")", ":", "\n", "                ", "return", "boxes", "[", "detection_index", "]", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.FeatureRecorder.get_features": [[114, 122], ["len"], "methods", ["None"], ["", "def", "get_features", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "features", "=", "self", ".", "all_features", "[", "frame_index", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "", "if", "len", "(", "features", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.FeatureRecorder.get_boxes": [[123, 132], ["len"], "methods", ["None"], ["", "def", "get_boxes", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "boxes", "=", "self", ".", "all_boxes", "[", "frame_index", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n", "", "if", "len", "(", "boxes", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Node.__init__": [[134, 139], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "frame_index", ",", "feature_index", ",", "detection_index", ")", ":", "\n", "        ", "self", ".", "frame_index", "=", "frame_index", "\n", "self", ".", "feature_index", "=", "feature_index", "\n", "self", ".", "detection_index", "=", "detection_index", "\n", "self", ".", "active", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Track.__init__": [[143, 155], ["numpy.zeros", "range", "numpy.array", "numpy.zeros", "tuple", "len", "numpy.random.rand"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "s", "=", "np", ".", "zeros", "(", "(", "TrackerConfig", ".", "max_track_node", ",", "TrackerConfig", ".", "max_track_node", ")", ",", "dtype", "=", "np", ".", "float", ")", "# similarity score", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "s", ")", ")", ":", "\n", "            ", "self", ".", "s", "[", "i", ",", "i", "]", "=", "-", "1", "\n", "\n", "", "self", ".", "f", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "int", ")", "# recorded frame", "\n", "self", ".", "uv", "=", "np", ".", "zeros", "(", "(", "TrackerConfig", ".", "max_track_node", ",", "TrackerConfig", ".", "max_track_node", ")", ",", "dtype", "=", "int", ")", "# the box index", "\n", "self", ".", "id", "=", "Track", ".", "_id_pool", "\n", "Track", ".", "_id_pool", "+=", "1", "\n", "self", ".", "age", "=", "0", "\n", "self", ".", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "self", ".", "valid", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Track.update": [[156, 173], ["numpy.append", "len", "numpy.zeros", "range", "numpy.zeros", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "update", "(", "self", ",", "frame_index", ",", "similarity", ",", "index", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "f", ")", "==", "TrackerConfig", ".", "max_track_node", ":", "\n", "# remove the first item", "\n", "            ", "self", ".", "f", "=", "self", ".", "f", "[", "1", ":", "]", "\n", "s", "=", "np", ".", "zeros", "(", "(", "TrackerConfig", ".", "max_track_node", ",", "TrackerConfig", ".", "max_track_node", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "s", ")", ")", ":", "\n", "                ", "self", ".", "s", "[", "i", ",", "i", "]", "=", "-", "1", "\n", "", "s", "[", ":", "-", "1", ",", ":", "-", "1", "]", "=", "self", ".", "s", "[", "1", ":", ",", "1", ":", "]", "\n", "self", ".", "s", "=", "s", "\n", "uv", "=", "np", ".", "zeros", "(", "(", "TrackerConfig", ".", "max_track_node", ",", "TrackerConfig", ".", "max_track_node", ")", ",", "dtype", "=", "int", ")", "\n", "uv", "[", ":", "-", "1", ",", ":", "-", "1", "]", "=", "self", ".", "uv", "[", "1", ":", ",", "1", ":", "]", "\n", "self", ".", "uv", "=", "uv", "\n", "\n", "", "self", ".", "f", "=", "np", ".", "append", "(", "self", ".", "f", ",", "frame_index", ")", "\n", "i", "=", "len", "(", "self", ".", "f", ")", "-", "1", "\n", "self", ".", "s", "[", ":", "len", "(", "similarity", ")", ",", "i", "]", "=", "similarity", "\n", "self", ".", "uv", "[", ":", "len", "(", "index", ")", ",", "i", "]", "=", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Track.add_age": [[174, 176], ["None"], "methods", ["None"], ["", "def", "add_age", "(", "self", ")", ":", "\n", "        ", "self", ".", "age", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Track.reset_age": [[177, 179], ["None"], "methods", ["None"], ["", "def", "reset_age", "(", "self", ")", ":", "\n", "        ", "self", ".", "age", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Track.get_all_nodes": [[180, 189], ["enumerate", "all_nodes.append"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "get_all_nodes", "(", "self", ",", "recorder", ")", ":", "\n", "        ", "all_nodes", "=", "[", "]", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "self", ".", "f", ")", ":", "\n", "            ", "id", "=", "self", ".", "uv", "[", "i", ",", "i", "]", "\n", "if", "id", "==", "-", "1", ":", "\n", "                ", "continue", "\n", "", "all_nodes", ".", "append", "(", "recorder", ".", "all_boxes", "[", "f", "]", "[", "id", ",", ":", "]", ")", "\n", "\n", "", "return", "all_nodes", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Track.get_current_box": [[190, 198], ["len", "len"], "methods", ["None"], ["", "def", "get_current_box", "(", "self", ",", "recorder", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "f", ")", ">", "0", "and", "self", ".", "age", "==", "0", ":", "\n", "            ", "frame_index", "=", "self", ".", "f", "[", "-", "1", "]", "\n", "i", "=", "len", "(", "self", ".", "f", ")", "-", "1", "\n", "id", "=", "self", ".", "uv", "[", "i", ",", "i", "]", "\n", "if", "id", "!=", "-", "1", ":", "\n", "                ", "return", "recorder", ".", "all_boxes", "[", "frame_index", "]", "[", "id", ",", ":", "]", "\n", "", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Track.get_total_similarity": [[199, 211], ["enumerate", "numpy.min"], "methods", ["None"], ["", "def", "get_total_similarity", "(", "self", ")", ":", "\n", "        ", "total_similarity", "=", "[", "]", "\n", "total_count", "=", "0", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "self", ".", "f", ")", ":", "\n", "            ", "if", "self", ".", "s", "[", "i", ",", "i", "]", ">", "0", ":", "\n", "                ", "total_similarity", "+=", "[", "self", ".", "s", "[", "i", ",", "i", "]", "]", "\n", "total_count", "+=", "1", "\n", "\n", "", "", "if", "total_count", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "return", "np", ".", "min", "(", "total_similarity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Track.remove_similarity_node": [[212, 242], ["enumerate", "enumerate", "len", "min", "numpy.where"], "methods", ["None"], ["", "", "def", "remove_similarity_node", "(", "self", ",", "t", ")", ":", "\n", "# Remove all the node with same id compared with t.", "\n", "        ", "remove_frame", "=", "[", "]", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "t", ".", "f", ")", ":", "\n", "            ", "if", "f", "in", "self", ".", "f", "and", "t", ".", "uv", "[", "i", ",", "i", "]", "!=", "-", "1", ":", "\n", "                ", "id1", "=", "t", ".", "uv", "[", "i", ",", "i", "]", "\n", "index", "=", "np", ".", "where", "(", "self", ".", "f", "==", "f", ")", "[", "0", "]", "[", "0", "]", "\n", "id", "=", "self", ".", "uv", "[", "index", ",", "index", "]", "\n", "if", "id", "==", "id1", ":", "\n", "                    ", "remove_frame", "+=", "[", "index", "]", "\n", "self", ".", "uv", "[", "index", ",", "index", "]", "=", "-", "1", "\n", "\n", "# Remove extra one node which is the cause of wrong matching.", "\n", "", "", "", "if", "len", "(", "remove_frame", ")", ">", "0", ":", "\n", "            ", "min_index", "=", "min", "(", "remove_frame", ")", "\n", "min_index", "-=", "1", "\n", "while", "min_index", ">", "0", ":", "\n", "                ", "if", "self", ".", "uv", "[", "min_index", ",", "min_index", "]", "!=", "-", "1", ":", "\n", "                    ", "self", ".", "uv", "[", "min_index", ",", "min_index", "]", "=", "-", "1", "\n", "", "min_index", "-=", "1", "\n", "\n", "\n", "# if remove all the nodes, then remove this track", "\n", "", "", "is_valid", "=", "False", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "self", ".", "f", ")", ":", "\n", "            ", "if", "self", ".", "uv", "[", "i", ",", "i", "]", "!=", "-", "1", ":", "\n", "                ", "is_valid", "=", "True", "\n", "break", "\n", "\n", "", "", "self", ".", "valid", "=", "is_valid", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.Track.get_bad_probability": [[243, 253], ["enumerate", "len", "len"], "methods", ["None"], ["", "def", "get_bad_probability", "(", "self", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "f", ")", "==", "0", ":", "\n", "            ", "return", "0.0", "\n", "\n", "", "bad_num", "=", "0", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "self", ".", "f", ")", ":", "\n", "            ", "if", "self", ".", "uv", "[", "i", ",", "i", "]", "==", "-", "1", ":", "\n", "                ", "bad_num", "+=", "1.0", "\n", "\n", "", "", "return", "bad_num", "/", "len", "(", "self", ".", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackUtil.convert_detection": [[257, 274], ["torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().float.cuda", "torch.from_numpy().float.cuda", "torch.from_numpy().float.astype", "torch.from_numpy().float.astype"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "convert_detection", "(", "detection", ")", ":", "\n", "        ", "'''\n        transform the current detection center to [-1, 1]\n        :param detection: detection\n        :return: translated detection\n        '''", "\n", "# get the center, and format it in (-1, 1)", "\n", "center", "=", "(", "2", "*", "detection", "[", ":", ",", "0", ":", "2", "]", "+", "detection", "[", ":", ",", "2", ":", "4", "]", ")", "-", "1.0", "\n", "center", "=", "torch", ".", "from_numpy", "(", "center", ".", "astype", "(", "float", ")", ")", ".", "float", "(", ")", "\n", "center", ".", "unsqueeze_", "(", "0", ")", "\n", "center", ".", "unsqueeze_", "(", "2", ")", "\n", "center", ".", "unsqueeze_", "(", "3", ")", "\n", "\n", "if", "TrackerConfig", ".", "cuda", ":", "\n", "            ", "return", "Variable", "(", "center", ".", "cuda", "(", ")", ")", "\n", "", "return", "Variable", "(", "center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackUtil.convert_image": [[275, 290], ["cv2.resize().astype", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "image.permute.permute.permute", "image.permute.permute.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cv2.resize", "image.permute.permute.cuda"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "convert_image", "(", "image", ")", ":", "\n", "        ", "'''\n        transform image to the FloatTensor (1, 3,size, size)\n        :param image: same as update parameter\n        :return: the transformed image FloatTensor (i.e. 1x3x900x900)\n        '''", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "TrackerConfig", ".", "image_size", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image", "-=", "TrackerConfig", ".", "mean_pixel", "\n", "image", "=", "torch", ".", "FloatTensor", "(", "image", ")", "\n", "image", "=", "image", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "image", ".", "unsqueeze_", "(", "dim", "=", "0", ")", "\n", "if", "TrackerConfig", ".", "cuda", ":", "\n", "            ", "return", "Variable", "(", "image", ".", "cuda", "(", ")", ")", "\n", "", "return", "Variable", "(", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackUtil.get_iou": [[291, 310], ["len", "len", "numpy.zeros", "range", "numpy.copy", "range", "numpy.copy", "max", "max", "min", "max", "min", "max"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_iou", "(", "pre_boxes", ",", "next_boxes", ")", ":", "\n", "        ", "h", "=", "len", "(", "pre_boxes", ")", "\n", "w", "=", "len", "(", "next_boxes", ")", "\n", "if", "h", "==", "0", "or", "w", "==", "0", ":", "\n", "            ", "return", "[", "]", "\n", "\n", "", "iou", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ",", "dtype", "=", "float", ")", "\n", "for", "i", "in", "range", "(", "h", ")", ":", "\n", "            ", "b1", "=", "np", ".", "copy", "(", "pre_boxes", "[", "i", ",", ":", "]", ")", "\n", "b1", "[", "2", ":", "]", "=", "b1", "[", ":", "2", "]", "+", "b1", "[", "2", ":", "]", "\n", "for", "j", "in", "range", "(", "w", ")", ":", "\n", "                ", "b2", "=", "np", ".", "copy", "(", "next_boxes", "[", "j", ",", ":", "]", ")", "\n", "b2", "[", "2", ":", "]", "=", "b2", "[", ":", "2", "]", "+", "b2", "[", "2", ":", "]", "\n", "overlap", "=", "max", "(", "min", "(", "b1", "[", "2", "]", ",", "b2", "[", "2", "]", ")", "-", "max", "(", "b1", "[", "0", "]", ",", "b2", "[", "0", "]", ")", ",", "0", ")", "*", "max", "(", "min", "(", "b1", "[", "3", "]", ",", "b2", "[", "3", "]", ")", "-", "max", "(", "b1", "[", "1", "]", ",", "b2", "[", "1", "]", ")", ",", "0", ")", "\n", "area", "=", "(", "b1", "[", "2", "]", "-", "b1", "[", "0", "]", ")", "*", "(", "b1", "[", "3", "]", "-", "b1", "[", "1", "]", ")", "+", "(", "b2", "[", "2", "]", "-", "b2", "[", "0", "]", ")", "*", "(", "b2", "[", "3", "]", "-", "b2", "[", "1", "]", ")", "-", "overlap", "\n", "iou", "[", "i", ",", "j", "]", "=", "overlap", "/", "area", "\n", "\n", "", "", "return", "iou", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackUtil.get_merge_value": [[311, 322], ["enumerate", "enumerate", "float"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "get_merge_value", "(", "t1", ",", "t2", ")", ":", "\n", "        ", "merge_value", "=", "0", "\n", "if", "t1", "is", "t2", ":", "\n", "            ", "return", "merge_value", "\n", "\n", "", "for", "i", ",", "f1", "in", "enumerate", "(", "t1", ".", "f", ")", ":", "\n", "            ", "for", "j", ",", "f2", "in", "enumerate", "(", "t2", ".", "f", ")", ":", "\n", "                ", "if", "f1", "==", "f2", "and", "t1", ".", "uv", "[", "i", ",", "i", "]", "==", "t2", ".", "uv", "[", "j", ",", "j", "]", "and", "t1", ".", "uv", "[", "i", ",", "i", "]", "!=", "-", "1", ":", "\n", "                    ", "merge_value", "+=", "1", "\n", "", "", "", "return", "merge_value", "/", "float", "(", "TrackerConfig", ".", "max_track_node", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackUtil.merge": [[323, 342], ["t1.get_total_similarity", "t2.get_total_similarity", "t1.remove_similarity_node", "t2.remove_similarity_node"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_total_similarity", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_total_similarity", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.remove_similarity_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.remove_similarity_node"], ["", "@", "staticmethod", "\n", "def", "merge", "(", "t1", ",", "t2", ")", ":", "\n", "# keep the track with the highest matching probability.", "\n", "# remove the overlapped node of the bad one", "\n", "        ", "s1", "=", "t1", ".", "get_total_similarity", "(", ")", "\n", "s2", "=", "t2", ".", "get_total_similarity", "(", ")", "\n", "\n", "is_t1", "=", "False", "\n", "if", "s1", "==", "0", "and", "s2", "==", "0", ":", "\n", "            ", "if", "t1", ".", "id", ">", "t2", ".", "id", ":", "\n", "                ", "is_t1", "=", "True", "\n", "", "", "else", ":", "\n", "            ", "if", "s1", "<", "s2", ":", "\n", "                ", "is_t1", "=", "True", "\n", "\n", "", "", "if", "is_t1", ":", "\n", "            ", "t1", ".", "remove_similarity_node", "(", "t2", ")", "\n", "", "else", ":", "\n", "            ", "t2", ".", "remove_similarity_node", "(", "t1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackSet.__init__": [[345, 363], ["list", "sst_tracker.FeatureRecorder", "layer.sst.build_sst", "sst_tracker.TrackSet.sst.eval", "sst_tracker.TrackSet.sst.load_state_dict", "sst_tracker.TrackSet.sst.cuda", "sst_tracker.TrackSet.sst.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst.build_sst"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "tracks", "=", "list", "(", ")", "\n", "self", ".", "max_drawing_track", "=", "TrackerConfig", ".", "max_draw_track_node", "\n", "self", ".", "cuda", "=", "TrackerConfig", ".", "cuda", "\n", "self", ".", "recorder", "=", "FeatureRecorder", "(", ")", "\n", "self", ".", "frame_index", "=", "0", "\n", "\n", "# load the model", "\n", "self", ".", "sst", "=", "build_sst", "(", "'test'", ",", "900", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "cudnn", ".", "benchmark", "=", "True", "\n", "self", ".", "sst", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "TrackerConfig", ".", "sst_model_path", ")", "\n", ")", "\n", "self", ".", "sst", "=", "self", ".", "sst", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "sst", ".", "load_state_dict", "(", "torch", ".", "load", "(", "config", "[", "'resume'", "]", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "", "self", ".", "sst", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackSet.__getitem__": [[364, 366], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "self", ".", "tracks", "[", "item", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackSet.__len__": [[367, 369], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "tracks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackSet.get_similarity_uv_by_linear_assignment": [[370, 373], ["None"], "methods", ["None"], ["", "def", "get_similarity_uv_by_linear_assignment", "(", "self", ",", "t", ",", "frame_index", ")", ":", "\n", "        ", "res_similarity", "=", "[", "]", "\n", "res_uv", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackSet.get_similarity_uv": [[377, 433], ["enumerate", "zip", "numpy.copy", "numpy.argmax", "len", "max", "TrackerConfig.min_iou_frame_gap.index", "numpy.append", "int", "float", "res.keys", "res.keys", "len", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "get_similarity_uv", "(", "self", ",", "t", ",", "frame_index", ")", ":", "\n", "        ", "res_similarity", "=", "[", "]", "\n", "res_uv", "=", "[", "]", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "t", ".", "f", ")", ":", "\n", "            ", "if", "len", "(", "t", ".", "f", ")", "==", "TrackerConfig", ".", "max_track_node", "and", "i", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "all_iou", "=", "self", ".", "recorder", ".", "all_iou", "[", "frame_index", "]", "[", "f", "]", "\n", "all_similarity", "=", "self", ".", "recorder", ".", "all_similarity", "[", "frame_index", "]", "[", "f", "]", "\n", "selected_box_index", "=", "t", ".", "uv", "[", "i", ",", "i", "]", "\n", "if", "selected_box_index", "==", "-", "1", ":", "# cannot find box in f frame.", "\n", "                ", "res_similarity", "+=", "[", "0", "]", "\n", "res_uv", "+=", "[", "-", "1", "]", "\n", "continue", "\n", "\n", "# combine the similarity with the iou", "\n", "", "selected_similarity", "=", "np", ".", "copy", "(", "all_similarity", "[", "selected_box_index", ",", ":", "]", ")", "\n", "delta_f", "=", "frame_index", "-", "f", "\n", "if", "delta_f", "in", "TrackerConfig", ".", "min_iou_frame_gap", ":", "\n", "                ", "iou_index", "=", "TrackerConfig", ".", "min_iou_frame_gap", ".", "index", "(", "delta_f", ")", "\n", "selected_iou", "=", "(", "all_iou", "[", "selected_box_index", ",", ":", "]", ">=", "TrackerConfig", ".", "min_iou", "[", "iou_index", "]", ")", ".", "astype", "(", "float", ")", "\n", "selected_iou", "=", "np", ".", "append", "(", "selected_iou", ",", "1.0", ")", "\n", "selected_similarity", "=", "selected_similarity", "*", "selected_iou", "\n", "\n", "", "max_index", "=", "np", ".", "argmax", "(", "selected_similarity", ")", "\n", "max_value", "=", "all_similarity", "[", "selected_box_index", ",", "max_index", "]", "\n", "\n", "if", "max_index", "==", "all_similarity", ".", "shape", "[", "1", "]", "-", "1", ":", "# new node", "\n", "                ", "max_index", "=", "-", "1", "\n", "", "res_uv", "+=", "[", "int", "(", "max_index", ")", "]", "\n", "res_similarity", "+=", "[", "float", "(", "max_value", ")", "]", "\n", "\n", "# get the representation box of this frame.", "\n", "", "res", "=", "{", "}", "\n", "for", "uv", ",", "s", "in", "zip", "(", "res_uv", ",", "res_similarity", ")", ":", "\n", "# if s < 0.5:", "\n", "#     continue", "\n", "            ", "if", "uv", "not", "in", "res", ":", "\n", "                ", "res", "[", "uv", "]", "=", "[", "s", "]", "\n", "", "else", ":", "\n", "                ", "res", "[", "uv", "]", "+=", "[", "s", "]", "\n", "\n", "", "", "if", "len", "(", "res", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "            ", "max_uv", "=", "max", "(", "res", ".", "keys", "(", ")", ",", "key", "=", "(", "lambda", "k", ":", "np", ".", "sum", "(", "res", "[", "k", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "max_uv", "=", "-", "1", "\n", "\n", "", "res_similarity", "+=", "[", "1", "]", "\n", "res_uv", "+=", "[", "max_uv", "]", "\n", "\n", "if", "max_uv", "==", "-", "1", ":", "\n", "            ", "t", ".", "age", "+=", "1", "\n", "", "else", ":", "\n", "            ", "t", ".", "age", "=", "0", "\n", "\n", "", "return", "res_similarity", ",", "res_uv", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackSet.show": [[434, 462], ["t.get_current_box", "t.get_all_nodes", "zip", "cv2.putText", "cv2.rectangle", "len", "cv2.line", "str", "len", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_current_box", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_all_nodes"], ["", "def", "show", "(", "self", ",", "image", ")", ":", "\n", "        ", "h", ",", "w", ",", "_", "=", "image", ".", "shape", "\n", "\n", "# draw rectangle", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "b", "=", "t", ".", "get_current_box", "(", "self", ".", "recorder", ")", "\n", "if", "not", "b", "is", "None", ":", "\n", "                ", "image", "=", "cv2", ".", "putText", "(", "image", ",", "str", "(", "t", ".", "id", ")", ",", "(", "int", "(", "b", "[", "0", "]", "*", "w", ")", ",", "int", "(", "(", "b", "[", "1", "]", ")", "*", "h", ")", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "\n", "t", ".", "color", ",", "3", ")", "\n", "image", "=", "cv2", ".", "rectangle", "(", "image", ",", "(", "int", "(", "b", "[", "0", "]", "*", "w", ")", ",", "int", "(", "(", "b", "[", "1", "]", ")", "*", "h", ")", ")", ",", "\n", "(", "int", "(", "(", "b", "[", "0", "]", "+", "b", "[", "2", "]", ")", "*", "w", ")", ",", "int", "(", "(", "b", "[", "1", "]", "+", "b", "[", "3", "]", ")", "*", "h", ")", ")", ",", "t", ".", "color", ",", "2", ")", "\n", "\n", "# draw line", "\n", "", "", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "age", ">", "1", ":", "\n", "                ", "continue", "\n", "", "nodes", "=", "t", ".", "get_all_nodes", "(", "self", ".", "recorder", ")", "\n", "if", "len", "(", "nodes", ")", ">", "self", ".", "max_drawing_track", ":", "\n", "                ", "start", "=", "len", "(", "nodes", ")", "-", "self", ".", "max_drawing_track", "\n", "", "else", ":", "\n", "                ", "start", "=", "0", "\n", "\n", "", "for", "n1", ",", "n2", "in", "zip", "(", "nodes", "[", "start", ":", "]", ",", "nodes", "[", "start", "+", "1", ":", "]", ")", ":", "\n", "                ", "c1", "=", "(", "int", "(", "(", "n1", "[", "0", "]", "+", "n1", "[", "2", "]", "/", "2.0", ")", "*", "w", ")", ",", "int", "(", "(", "n1", "[", "1", "]", "+", "n1", "[", "3", "]", ")", "*", "h", ")", ")", "\n", "c2", "=", "(", "int", "(", "(", "n2", "[", "0", "]", "+", "n2", "[", "2", "]", "/", "2.0", ")", "*", "w", ")", ",", "int", "(", "(", "n2", "[", "1", "]", "+", "n2", "[", "3", "]", ")", "*", "h", ")", ")", "\n", "image", "=", "cv2", ".", "line", "(", "image", ",", "c1", ",", "c2", ",", "t", ".", "color", ",", "2", ")", "\n", "\n", "", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.sst_tracker.TrackSet.update": [[463, 526], ["sst_tracker.TrackUtil.convert_image", "sst_tracker.TrackUtil.convert_detection", "sst_tracker.TrackSet.sst.forward_feature_extracter", "sst_tracker.TrackSet.recorder.update", "len", "range", "range", "numpy.zeros", "enumerate", "sst_tracker.TrackSet.show", "len", "sst_tracker.Track", "sst_tracker.Track.update", "sst_tracker.TrackSet.tracks.append", "sst_tracker.TrackSet.get_similarity_uv", "sst_tracker.Track.update", "len", "enumerate", "sum", "range", "sst_tracker.Track", "sst_tracker.Track.update", "sst_tracker.TrackSet.tracks.append", "sst_tracker.TrackUtil.get_merge_value", "sum", "range", "sst_tracker.Track.get_bad_probability", "sst_tracker.TrackUtil.merge"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_image", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_detection", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_feature_extracter", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.get_similarity_uv", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_merge_value", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_bad_probability", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.merge"], ["", "def", "update", "(", "self", ",", "image", ",", "detection", ",", "show_image", ")", ":", "\n", "        ", "'''\n        1. get all the detection features and update the feature recorder\n        2. according the features update trackset\n        :param image: the current frame\n        :param detection: the detected boxes\n        :return: update current track according to the extracted features\n        '''", "\n", "frame_index", "=", "self", ".", "frame_index", "\n", "input_image", "=", "TrackUtil", ".", "convert_image", "(", "image", ")", "\n", "input_detection", "=", "TrackUtil", ".", "convert_detection", "(", "detection", ")", "\n", "\n", "features", "=", "self", ".", "sst", ".", "forward_feature_extracter", "(", "input_image", ",", "input_detection", ")", "\n", "self", ".", "recorder", ".", "update", "(", "self", ".", "sst", ",", "frame_index", ",", "features", ".", "data", ",", "detection", ")", "\n", "\n", "if", "frame_index", "==", "0", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "detection", ")", ")", ":", "\n", "                ", "t", "=", "Track", "(", ")", "\n", "t", ".", "update", "(", "0", ",", "[", "1", "]", ",", "[", "i", "]", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "\n", "", "", "else", ":", "\n", "# get all similarity between each frame", "\n", "            ", "record_id", "=", "[", "]", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "# get every boxes in current frame's similarity.", "\n", "                ", "similarity", ",", "uv", "=", "self", ".", "get_similarity_uv", "(", "t", ",", "frame_index", ")", "\n", "record_id", "+=", "uv", "[", "-", "1", ":", "]", "# record the representation", "\n", "t", ".", "update", "(", "frame_index", ",", "similarity", ",", "uv", ")", "\n", "\n", "# add new tracks", "\n", "", "for", "i", "in", "range", "(", "len", "(", "detection", ")", ")", ":", "\n", "                ", "if", "i", "not", "in", "record_id", ":", "\n", "                    ", "t", "=", "Track", "(", ")", "\n", "t", ".", "update", "(", "frame_index", ",", "[", "1", "]", ",", "[", "i", "]", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "\n", "# merge tracks", "\n", "", "", "", "l_track", "=", "len", "(", "self", ".", "tracks", ")", "\n", "if", "l_track", "!=", "0", ":", "\n", "            ", "merge_matrix", "=", "np", ".", "zeros", "(", "(", "l_track", ",", "l_track", ")", ",", "dtype", "=", "float", ")", "\n", "for", "i", ",", "t1", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "                ", "for", "j", ",", "t2", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "                    ", "merge_matrix", "[", "i", ",", "j", "]", "=", "TrackUtil", ".", "get_merge_value", "(", "t1", ",", "t2", ")", "\n", "\n", "", "", "merge_matrix", "=", "merge_matrix", ">", "TrackerConfig", ".", "min_merge_threshold", "\n", "if", "sum", "(", "sum", "(", "merge_matrix", ")", ")", ">", "0", ":", "\n", "                ", "for", "i", "in", "range", "(", "l_track", ")", ":", "\n", "                    ", "if", "self", ".", "tracks", "[", "i", "]", ".", "valid", ":", "\n", "                        ", "for", "j", "in", "range", "(", "l_track", ")", ":", "\n", "                            ", "if", "self", ".", "tracks", "[", "j", "]", ".", "valid", "and", "merge_matrix", "[", "i", ",", "j", "]", ":", "\n", "                                ", "TrackUtil", ".", "merge", "(", "self", ".", "tracks", "[", "i", "]", ",", "self", ".", "tracks", "[", "j", "]", ")", "\n", "\n", "", "", "", "", "", "self", ".", "tracks", "=", "[", "t", "for", "t", "in", "self", ".", "tracks", "if", "t", ".", "valid", "]", "\n", "\n", "# remove older track", "\n", "", "self", ".", "tracks", "=", "[", "t", "for", "t", "in", "self", ".", "tracks", "if", "t", ".", "age", "<", "TrackerConfig", ".", "max_track_age", "and", "t", ".", "get_bad_probability", "(", ")", "<", "TrackerConfig", ".", "max_bad_node", "]", "\n", "\n", "self", ".", "frame_index", "+=", "1", "\n", "\n", "if", "show_image", ":", "\n", "            ", "image", "=", "self", ".", "show", "(", "image", ")", "\n", "return", "image", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shijieS_SST.None.create_demo.create": [[26, 79], ["tracker.SSTTracker", "data.mot_data_reader.MOTDataReader", "enumerate", "FileNotFoundError", "os.path.exists", "os.mkdir", "float", "float", "tracker.SSTTracker.update", "os.path.exists", "os.path.exists", "len", "len", "cv2.imshow", "cv2.imwrite", "print", "len", "os.path.join"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update"], ["def", "create", "(", "c", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "image_folder", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "detection_file_name", ")", ":", "\n", "        ", "raise", "FileNotFoundError", "(", "'cannot find the image folder and the detection file'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "args", ".", "log_folder", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "args", ".", "log_folder", ")", "\n", "\n", "", "tracker", "=", "SSTTracker", "(", ")", "\n", "reader", "=", "MOTDataReader", "(", "image_folder", "=", "image_folder", ",", "\n", "detection_file_name", "=", "detection_file_name", ",", "\n", "min_confidence", "=", "0.0", ")", "\n", "\n", "select_squences", "=", "[", "402", ",", "404", ",", "410", ",", "422", "]", "\n", "\n", "frame_index", "=", "0", "\n", "for", "i", ",", "item", "in", "enumerate", "(", "reader", ")", ":", "\n", "        ", "if", "i", "not", "in", "select_squences", ":", "\n", "            ", "continue", "\n", "\n", "", "if", "i", ">", "len", "(", "reader", ")", ":", "\n", "            ", "break", "\n", "\n", "", "if", "item", "is", "None", ":", "\n", "            ", "continue", "\n", "\n", "", "img", "=", "item", "[", "0", "]", "\n", "det", "=", "item", "[", "1", "]", "\n", "\n", "if", "img", "is", "None", "or", "det", "is", "None", "or", "len", "(", "det", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "\n", "", "if", "len", "(", "det", ")", ">", "config", "[", "'max_object'", "]", ":", "\n", "            ", "det", "=", "det", "[", ":", "config", "[", "'max_object'", "]", ",", ":", "]", "\n", "\n", "", "h", ",", "w", ",", "_", "=", "img", ".", "shape", "\n", "\n", "det", "[", ":", ",", "[", "2", ",", "4", "]", "]", "/=", "float", "(", "w", ")", "\n", "det", "[", ":", ",", "[", "3", ",", "5", "]", "]", "/=", "float", "(", "h", ")", "\n", "\n", "image_org", "=", "tracker", ".", "update", "(", "img", ",", "det", "[", ":", ",", "2", ":", "6", "]", ",", "args", ".", "show_image", ",", "frame_index", ")", "\n", "frame_index", "+=", "1", "\n", "\n", "if", "args", ".", "show_image", "and", "not", "image_org", "is", "None", ":", "\n", "# det[:, [2, 4]] *= float(w)", "\n", "# det[:, [3, 5]] *= float(h)", "\n", "# boxes = det[:, 2:6].astype(int)", "\n", "# for bid, b in enumerate(boxes):", "\n", "#     image_org = cv2.putText(image_org, '{}'.format(bid), tuple(b[:2]), cv2.FONT_HERSHEY_SIMPLEX, 1,", "\n", "#                             (0, 0, 0), 2)", "\n", "            ", "cv2", ".", "imshow", "(", "'res'", ",", "image_org", ")", "\n", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "args", ".", "log_folder", ",", "'{0:06}.jpg'", ".", "format", "(", "i", ")", ")", ",", "image_org", ")", "\n", "# cv2.waitKey(0)", "\n", "print", "(", "'frame: {}'", ".", "format", "(", "i", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.xavier": [[94, 96], ["torch.xavier_uniform"], "function", ["None"], ["", "def", "xavier", "(", "param", ")", ":", "\n", "    ", "init", ".", "xavier_uniform", "(", "param", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.weights_init": [[97, 101], ["isinstance", "train_mot17.xavier", "m.bias.data.zero_"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.xavier"], ["", "def", "weights_init", "(", "m", ")", ":", "\n", "    ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "xavier", "(", "m", ".", "weight", ".", "data", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.train": [[116, 222], ["net.train", "print", "data.mot.MOTTrainDataset", "print", "torch.DataLoader", "range", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "utils.augmentations.SSJAugmentation", "len", "next", "time.time", "net", "optimizer.zero_grad", "criterion", "loss.backward", "optimizer.step", "time.time", "sst_net.state_dict", "iter", "train_mot17.adjust_learning_rate", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "loss.data.cpu", "print", "print", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "print", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "torch.autograd.Variable.cuda", "len", "writer.add_scalar", "loss.data.cpu", "loss_pre.data.cpu", "loss_next.data.cpu", "loss_similarity.data.cpu", "accuracy.data.cpu", "accuracy_pre.data.cpu", "accuracy_next.data.cpu", "net.named_parameters", "utils.operation.show_batch_circle_image", "writer.add_image", "sst_net.state_dict", "os.path.join", "float", "writer.add_histogram", "torchvision.make_grid", "numpy.mean", "param.clone().cpu().data.numpy", "repr", "repr", "float", "repr", "param.clone().cpu", "param.clone"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.train", "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.adjust_learning_rate", "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.show_batch_circle_image"], ["def", "train", "(", ")", ":", "\n", "    ", "net", ".", "train", "(", ")", "\n", "current_lr", "=", "config", "[", "'learning_rate'", "]", "\n", "print", "(", "'Loading Dataset...'", ")", "\n", "\n", "dataset", "=", "MOTTrainDataset", "(", "args", ".", "mot_root", ",", "\n", "SSJAugmentation", "(", "\n", "sst_dim", ",", "means", "\n", ")", "\n", ")", "\n", "\n", "epoch_size", "=", "len", "(", "dataset", ")", "//", "args", ".", "batch_size", "\n", "print", "(", "'Training SSJ on'", ",", "dataset", ".", "dataset_name", ")", "\n", "step_index", "=", "0", "\n", "\n", "batch_iterator", "=", "None", "\n", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", ",", "batch_size", ",", "\n", "num_workers", "=", "args", ".", "num_workers", ",", "\n", "shuffle", "=", "True", ",", "\n", "collate_fn", "=", "collate_fn", ",", "\n", "pin_memory", "=", "False", ")", "\n", "\n", "for", "iteration", "in", "range", "(", "args", ".", "start_iter", ",", "max_iter", ")", ":", "\n", "        ", "if", "(", "not", "batch_iterator", ")", "or", "(", "iteration", "%", "epoch_size", "==", "0", ")", ":", "\n", "# create batch iterator", "\n", "            ", "batch_iterator", "=", "iter", "(", "data_loader", ")", "\n", "all_epoch_loss", "=", "[", "]", "\n", "\n", "", "if", "iteration", "in", "stepvalues", ":", "\n", "            ", "step_index", "+=", "1", "\n", "current_lr", "=", "adjust_learning_rate", "(", "optimizer", ",", "args", ".", "gamma", ",", "step_index", ")", "\n", "\n", "# load train data", "\n", "", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ",", "valid_pre", ",", "valid_next", "=", "next", "(", "batch_iterator", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "img_pre", "=", "Variable", "(", "img_pre", ".", "cuda", "(", ")", ")", "\n", "img_next", "=", "Variable", "(", "img_next", ".", "cuda", "(", ")", ")", "\n", "boxes_pre", "=", "Variable", "(", "boxes_pre", ".", "cuda", "(", ")", ")", "\n", "boxes_next", "=", "Variable", "(", "boxes_next", ".", "cuda", "(", ")", ")", "\n", "valid_pre", "=", "Variable", "(", "valid_pre", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "valid_next", "=", "Variable", "(", "valid_next", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "labels", "=", "Variable", "(", "labels", ".", "cuda", "(", ")", ",", "volatile", "=", "True", ")", "\n", "\n", "", "else", ":", "\n", "            ", "img_pre", "=", "Variable", "(", "img_pre", ")", "\n", "img_next", "=", "Variable", "(", "img_next", ")", "\n", "boxes_pre", "=", "Variable", "(", "boxes_pre", ")", "\n", "boxes_next", "=", "Variable", "(", "boxes_next", ")", "\n", "valid_pre", "=", "Variable", "(", "valid_pre", ")", "\n", "valid_next", "=", "Variable", "(", "valid_next", ")", "\n", "labels", "=", "Variable", "(", "labels", ",", "volatile", "=", "True", ")", "\n", "\n", "\n", "# forward", "\n", "", "t0", "=", "time", ".", "time", "(", ")", "\n", "out", "=", "net", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "valid_pre", ",", "valid_next", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss_pre", ",", "loss_next", ",", "loss_similarity", ",", "loss", ",", "accuracy_pre", ",", "accuracy_next", ",", "accuracy", ",", "predict_indexes", "=", "criterion", "(", "out", ",", "labels", ",", "valid_pre", ",", "valid_next", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "t1", "=", "time", ".", "time", "(", ")", "\n", "\n", "all_epoch_loss", "+=", "[", "loss", ".", "data", ".", "cpu", "(", ")", "]", "\n", "\n", "if", "iteration", "%", "10", "==", "0", ":", "\n", "            ", "print", "(", "'Timer: %.4f sec.'", "%", "(", "t1", "-", "t0", ")", ")", "\n", "print", "(", "'iter '", "+", "repr", "(", "iteration", ")", "+", "', '", "+", "repr", "(", "epoch_size", ")", "+", "' || epoch: %.4f '", "%", "(", "iteration", "/", "(", "float", ")", "(", "epoch_size", ")", ")", "+", "' || Loss: %.4f ||'", "%", "(", "loss", ".", "data", "[", "0", "]", ")", ",", "end", "=", "' '", ")", "\n", "\n", "", "if", "args", ".", "tensorboard", ":", "\n", "            ", "if", "len", "(", "all_epoch_loss", ")", ">", "30", ":", "\n", "                ", "writer", ".", "add_scalar", "(", "'data/epoch_loss'", ",", "float", "(", "np", ".", "mean", "(", "all_epoch_loss", ")", ")", ",", "iteration", ")", "\n", "", "writer", ".", "add_scalar", "(", "'data/learning_rate'", ",", "current_lr", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'loss/loss'", ",", "loss", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_pre'", ",", "loss_pre", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_next'", ",", "loss_next", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'loss/loss_similarity'", ",", "loss_similarity", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy'", ",", "accuracy", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy_pre'", ",", "accuracy_pre", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "writer", ".", "add_scalar", "(", "'accuracy/accuracy_next'", ",", "accuracy_next", ".", "data", ".", "cpu", "(", ")", ",", "iteration", ")", "\n", "\n", "# add weights", "\n", "if", "iteration", "%", "1000", "==", "0", ":", "\n", "                ", "for", "name", ",", "param", "in", "net", ".", "named_parameters", "(", ")", ":", "\n", "                    ", "writer", ".", "add_histogram", "(", "name", ",", "param", ".", "clone", "(", ")", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ",", "iteration", ")", "\n", "\n", "# add images", "\n", "", "", "if", "args", ".", "send_images", "and", "iteration", "%", "1000", "==", "0", ":", "\n", "                ", "result_image", "=", "show_batch_circle_image", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "valid_pre", ",", "valid_next", ",", "predict_indexes", ",", "iteration", ")", "\n", "\n", "writer", ".", "add_image", "(", "'WithLabel/ImageResult'", ",", "vutils", ".", "make_grid", "(", "result_image", ",", "nrow", "=", "2", ",", "normalize", "=", "True", ",", "scale_each", "=", "True", ")", ",", "iteration", ")", "\n", "\n", "", "", "if", "iteration", "%", "save_weights_iteration", "==", "0", ":", "\n", "            ", "print", "(", "'Saving state, iter:'", ",", "iteration", ")", "\n", "torch", ".", "save", "(", "sst_net", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "\n", "args", ".", "save_folder", ",", "\n", "'sst300_0712_'", "+", "repr", "(", "iteration", ")", "+", "'.pth'", ")", ")", "\n", "\n", "", "", "torch", ".", "save", "(", "sst_net", ".", "state_dict", "(", ")", ",", "args", ".", "save_folder", "+", "''", "+", "args", ".", "version", "+", "'.pth'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.None.train_mot17.adjust_learning_rate": [[223, 232], ["None"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "gamma", ",", "step", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by 10 at every specified step\n    # Adapted from PyTorch Imagenet example:\n    # https://github.com/pytorch/examples/blob/master/imagenet/main.py\n    \"\"\"", "\n", "lr", "=", "args", ".", "lr", "*", "(", "gamma", "**", "(", "step", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.__init__": [[5, 11], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "total_time", "=", "0.", "\n", "self", ".", "calls", "=", "0", "\n", "self", ".", "start_time", "=", "0.", "\n", "self", ".", "diff", "=", "0.", "\n", "self", ".", "average_time", "=", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.tic": [[12, 16], ["time.time"], "methods", ["None"], ["", "def", "tic", "(", "self", ")", ":", "\n", "# using time.time instead of time.clock because time time.clock", "\n", "# does not normalize for multithreading", "\n", "        ", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.timer.Timer.toc": [[17, 26], ["time.time"], "methods", ["None"], ["", "def", "toc", "(", "self", ",", "average", "=", "True", ")", ":", "\n", "        ", "self", ".", "diff", "=", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", "\n", "self", ".", "total_time", "+=", "self", ".", "diff", "\n", "self", ".", "calls", "+=", "1", "\n", "self", ".", "average_time", "=", "self", ".", "total_time", "/", "self", ".", "calls", "\n", "if", "average", ":", "\n", "            ", "return", "self", ".", "average_time", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "diff", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.get_equality_matrix": [[11, 21], ["len", "len", "numpy.repeat", "numpy.repeat", "numpy.expand_dims", "numpy.expand_dims"], "function", ["None"], ["def", "get_equality_matrix", "(", "a", ",", "b", ")", ":", "\n", "    ", "'''\n    get the equality matrix (mxn) of 1-dim array a, b\n    :param a: (m,)\n    :param b: (n,)\n    :return: return the equality matrix (mxn)\n    '''", "\n", "m", "=", "len", "(", "a", ")", "\n", "n", "=", "len", "(", "b", ")", "\n", "return", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "a", ",", "axis", "=", "1", ")", ",", "n", ",", "axis", "=", "1", ")", "==", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "b", ",", "axis", "=", "0", ")", ",", "m", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.add_images": [[23, 25], ["writer.add_image", "torchvision.make_grid"], "function", ["None"], ["", "def", "add_images", "(", "writer", ",", "img", ",", "boxes", ")", ":", "\n", "    ", "writer", ".", "add_image", "(", "'Image_pre'", ",", "vutils", ".", "make_grid", "(", "img", ",", "nrow", "=", "2", ",", "normalize", "=", "True", ",", "scale_each", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.show_circle": [[27, 43], ["list", "range", "torch.stack", "torch.stack", "valid[].data.cpu().numpy", "boxes[].data.cpu().numpy", "numpy.clip().astype().copy", "torch.from_numpy().permute", "torch.from_numpy().permute", "list.append", "img[].permute", "cv2.circle.cpu().numpy", "cv2.circle", "valid[].data.cpu", "boxes[].data.cpu", "numpy.clip().astype", "tuple", "torch.from_numpy", "torch.from_numpy", "cv2.circle.cpu", "numpy.clip", "cv2.circle.astype"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "show_circle", "(", "img", ",", "boxes", ",", "valid", ")", ":", "\n", "    ", "batch_size", "=", "img", ".", "shape", "[", "0", "]", "\n", "images", "=", "list", "(", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "img1", "=", "img", "[", "i", ",", ":", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "data", "\n", "img1", "=", "img1", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "+", "config", "[", "'mean_pixel'", "]", "\n", "valid1", "=", "valid", "[", "i", ",", "0", ",", ":", "-", "1", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "boxes1", "=", "boxes", "[", "i", ",", ":", ",", "0", ",", "0", ",", ":", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "boxes1", "=", "boxes1", "[", "valid1", "==", "1", "]", "\n", "img1", "=", "np", ".", "clip", "(", "img1", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "copy", "(", ")", "\n", "for", "b", "in", "boxes1", ":", "\n", "            ", "img1", "=", "cv2", ".", "circle", "(", "img1", ",", "tuple", "(", "(", "(", "b", "+", "1", ")", "/", "2.0", "*", "config", "[", "'sst_dim'", "]", ")", ".", "astype", "(", "int", ")", ")", ",", "20", ",", "[", "255", ",", "0", ",", "0", "]", ",", "thickness", "=", "3", ")", "\n", "\n", "", "img1", "=", "torch", ".", "from_numpy", "(", "img1", ".", "astype", "(", "np", ".", "float", ")", "-", "config", "[", "'mean_pixel'", "]", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "images", ".", "append", "(", "img1", ")", "\n", "", "return", "torch", ".", "stack", "(", "images", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.show_matching_rectangle": [[206, 229], ["img_pre.copy", "img_next.copy", "numpy.concatenate", "cv2.rectangle", "cv2.rectangle", "numpy.nonzero", "zip", "tuple", "tuple", "tuple", "tuple", "cv2.line", "box[].astype", "box[].astype", "box[].astype", "box[].astype", "numpy.array", "tuple", "tuple", "center_p.astype", "center_n.astype", "int", "int", "int", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn"], "function", ["None"], ["", "def", "show_matching_rectangle", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ",", "show_matching", "=", "True", ")", ":", "\n", "    ", "img_p", "=", "img_pre", ".", "copy", "(", ")", "\n", "img_n", "=", "img_next", ".", "copy", "(", ")", "\n", "for", "box", "in", "boxes_pre", "[", ":", ",", "0", ":", "4", "]", ":", "\n", "        ", "img_p", "=", "cv2", ".", "rectangle", "(", "img_p", ",", "tuple", "(", "box", "[", ":", "2", "]", ".", "astype", "(", "int", ")", ")", ",", "tuple", "(", "(", "box", "[", "2", ":", "4", "]", ")", ".", "astype", "(", "int", ")", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "2", ")", "\n", "\n", "", "for", "box", "in", "boxes_next", "[", ":", ",", "0", ":", "4", "]", ":", "\n", "        ", "img_n", "=", "cv2", ".", "rectangle", "(", "img_n", ",", "tuple", "(", "box", "[", ":", "2", "]", ".", "astype", "(", "int", ")", ")", ",", "tuple", "(", "(", "box", "[", "2", ":", "4", "]", ")", ".", "astype", "(", "int", ")", ")", ",", "(", "255", ",", "0", ",", "0", ")", ",", "2", ")", "\n", "\n", "", "h", ",", "w", ",", "c", "=", "img_p", ".", "shape", "\n", "img", "=", "np", ".", "concatenate", "(", "[", "img_p", ",", "img_n", "]", ",", "axis", "=", "0", ")", "\n", "if", "show_matching", ":", "\n", "        ", "rows", ",", "cols", "=", "np", ".", "nonzero", "(", "labels", ")", "\n", "for", "r", ",", "c", "in", "zip", "(", "rows", ",", "cols", ")", ":", "\n", "            ", "box_p", "=", "boxes_pre", "[", "r", ",", "0", ":", "4", "]", "\n", "box_n", "=", "boxes_next", "[", "c", ",", "0", ":", "4", "]", "\n", "center_p", "=", "(", "box_p", "[", ":", "2", "]", "+", "box_p", "[", "2", ":", "4", "]", ")", "/", "2.0", "\n", "center_n", "=", "(", "box_n", "[", ":", "2", "]", "+", "box_n", "[", "2", ":", "4", "]", ")", "/", "2.0", "+", "np", ".", "array", "(", "[", "0", ",", "h", "]", ")", "\n", "cv2", ".", "line", "(", "img", ",", "tuple", "(", "center_p", ".", "astype", "(", "int", ")", ")", ",", "tuple", "(", "center_n", ".", "astype", "(", "int", ")", ")", ",", "\n", "(", "(", "int", ")", "(", "np", ".", "random", ".", "randn", "(", ")", "*", "255", ")", ",", "(", "int", ")", "(", "np", ".", "random", ".", "randn", "(", ")", "*", "255", ")", ",", "(", "int", ")", "(", "np", ".", "random", ".", "randn", "(", ")", "*", "255", ")", ")", ",", "\n", "2", ")", "\n", "\n", "", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.getProperbility": [[68, 137], ["mask0.cuda.unsqueeze().repeat", "mask1.cuda.unsqueeze().repeat", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "mask_region.clone", "mask_region.clone", "input_pre.clone", "target.float.float", "target.float.sum", "target_pre.sum", "target_next.sum", "target_union.sum", "int", "int", "int", "input_pre.clone.max", "target_pre.max", "print", "mask0.cuda.cuda", "mask1.cuda.cuda", "torch.Softmax", "torch.Softmax", "mask_pre[].nonzero", "mask0.cuda.unsqueeze", "mask1.cuda.unsqueeze", "target.float.byte", "str", "mask_pre.sum", "torch.abs", "torch.abs", "torch.log", "torch.log", "torch.log", "torch.log", "torch.abs", "torch.abs", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["None"], ["", "def", "getProperbility", "(", "input", ",", "target", ",", "mask0", ",", "mask1", ")", ":", "\n", "    ", "mask_pre", "=", "mask0", "[", ":", ",", ":", ",", ":", "]", "\n", "mask_next", "=", "mask1", "[", ":", ",", ":", ",", ":", "]", "\n", "\n", "mask0", "=", "mask0", ".", "unsqueeze", "(", "3", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "config", "[", "'max_object'", "]", "+", "1", ")", "\n", "mask1", "=", "mask1", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "config", "[", "'max_object'", "]", "+", "1", ",", "1", ")", "\n", "mask0", "=", "Variable", "(", "mask0", ".", "data", ")", "\n", "mask1", "=", "Variable", "(", "mask1", ".", "data", ")", "\n", "target", "=", "Variable", "(", "target", ".", "byte", "(", ")", ".", "data", ")", "\n", "\n", "if", "config", "[", "'cuda'", "]", ":", "\n", "        ", "mask0", "=", "mask0", ".", "cuda", "(", ")", "\n", "mask1", "=", "mask1", ".", "cuda", "(", ")", "\n", "\n", "# add false object to the input matrix", "\n", "\n", "", "mask_region", "=", "(", "mask0", "*", "mask1", ")", ".", "float", "(", ")", "# the valid position mask", "\n", "\n", "mask_region_pre", "=", "mask_region", ".", "clone", "(", ")", "#note: should use clone (fix bug)", "\n", "mask_region_pre", "[", ":", ",", ":", ",", "config", "[", "'max_object'", "]", ",", ":", "]", "=", "0", "\n", "mask_region_next", "=", "mask_region", ".", "clone", "(", ")", "#note: should use clone (fix bug) finnally", "\n", "mask_region_next", "[", ":", ",", ":", ",", ":", ",", "config", "[", "'max_object'", "]", "]", "=", "0", "\n", "mask_region_union", "=", "mask_region_pre", "*", "mask_region_next", "\n", "\n", "input_pre", "=", "nn", ".", "Softmax", "(", "dim", "=", "3", ")", "(", "mask_region_pre", "*", "input", ")", "\n", "input_next", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "(", "mask_region_next", "*", "input", ")", "\n", "\n", "# input = torch.max(torch.stack([input_pre, input_next], 4), 4)[0]", "\n", "input", "=", "input_pre", ".", "clone", "(", ")", "\n", "input", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "-", "1", "]", "=", "(", "input_pre", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "-", "1", "]", "+", "input_next", "[", ":", ",", ":", ",", ":", "-", "1", ",", ":", "-", "1", "]", ")", "/", "2.0", "\n", "# input = (input_pre + input_next) / 2.0", "\n", "# target = (mask_region * target).float()", "\n", "target", "=", "target", ".", "float", "(", ")", "\n", "target_pre", "=", "mask_region_pre", "*", "target", "\n", "target_next", "=", "mask_region_next", "*", "target", "\n", "target_union", "=", "mask_region_union", "*", "target", "\n", "target_num", "=", "target", ".", "sum", "(", ")", "\n", "target_num_pre", "=", "target_pre", ".", "sum", "(", ")", "\n", "target_num_next", "=", "target_next", ".", "sum", "(", ")", "\n", "target_num_union", "=", "target_union", ".", "sum", "(", ")", "\n", "if", "int", "(", "target_num_pre", ".", "data", "[", "0", "]", ")", ":", "\n", "        ", "loss_pre", "=", "-", "(", "target_pre", "*", "torch", ".", "log", "(", "input_pre", ")", ")", ".", "sum", "(", ")", "/", "target_num_pre", "\n", "", "else", ":", "\n", "        ", "loss_pre", "=", "-", "(", "target_pre", "*", "torch", ".", "log", "(", "input_pre", ")", ")", ".", "sum", "(", ")", "\n", "", "if", "int", "(", "target_num_next", ".", "data", "[", "0", "]", ")", ":", "\n", "        ", "loss_next", "=", "-", "(", "target_next", "*", "torch", ".", "log", "(", "input_next", ")", ")", ".", "sum", "(", ")", "/", "target_num_next", "\n", "", "else", ":", "\n", "        ", "loss_next", "=", "-", "(", "target_next", "*", "torch", ".", "log", "(", "input_next", ")", ")", ".", "sum", "(", ")", "\n", "", "if", "int", "(", "target_num_union", ".", "data", "[", "0", "]", ")", ":", "\n", "        ", "loss_similarity", "=", "(", "0.5", "*", "target_union", "*", "(", "\n", "torch", ".", "abs", "(", "(", "1", "-", "input_pre", ")", "**", "2", "-", "(", "1", "-", "input_next", ")", "**", "2", ")", ")", ")", ".", "sum", "(", ")", "/", "target_num", "\n", "", "else", ":", "\n", "        ", "loss_similarity", "=", "(", "0.5", "*", "target_union", "*", "(", "torch", ".", "abs", "(", "(", "1", "-", "input_pre", ")", "**", "2", "-", "(", "1", "-", "input_next", ")", "**", "2", ")", ")", ")", ".", "sum", "(", ")", "\n", "\n", "", "loss", "=", "(", "loss_pre", "+", "loss_next", ")", "/", "2.0", "+", "loss_similarity", "\n", "\n", "_", ",", "indexes", "=", "input", ".", "max", "(", "3", ")", "\n", "_", ",", "indexes_", "=", "target_pre", ".", "max", "(", "3", ")", "\n", "mask_pre_num", "=", "mask_pre", ".", "sum", "(", ")", ".", "data", "[", "0", "]", "-", "1", "\n", "if", "mask_pre_num", ":", "\n", "        ", "accuracy", "=", "(", "indexes", "[", "mask_pre", "]", "[", ":", "-", "1", "]", "==", "indexes_", "[", "mask_pre", "]", "[", ":", "-", "1", "]", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "mask_pre_num", "\n", "", "else", ":", "\n", "        ", "accuracy", "=", "(", "indexes", "[", "mask_pre", "]", "[", ":", "-", "1", "]", "==", "indexes_", "[", "mask_pre", "]", "[", ":", "-", "1", "]", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "+", "1", "\n", "\n", "", "indexes_pre", "=", "mask_pre", "[", "0", ",", "0", ",", ":", "-", "1", "]", ".", "nonzero", "(", ")", "[", ":", ",", "0", "]", "\n", "indexes_next", "=", "indexes", "[", "mask_pre", "]", "[", ":", "-", "1", "]", "\n", "\n", "print", "(", "'accuracy:'", "+", "str", "(", "accuracy", ")", ")", "\n", "return", "loss", ",", "accuracy", ",", "input", ",", "input_pre", ",", "input_next", ",", "indexes_pre", ",", "indexes_next", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.show_matching_circle": [[138, 204], ["img_pre[].permute", "img_next[].permute", "torch.cat", "torch.cat", "numpy.clip().astype", "list", "range", "range", "range", "cv2.line.data.numpy", "len", "int", "int", "cv2.circle", "len", "int", "cv2.circle", "len", "tuple", "int", "int", "cv2.circle", "int", "cv2.circle", "cv2.line", "numpy.clip", "int", "len", "int", "numpy.random.rand"], "function", ["None"], ["", "def", "show_matching_circle", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "indexes_pre", ",", "indexes_next", ")", ":", "\n", "    ", "H", "=", "config", "[", "'sst_dim'", "]", "\n", "W", "=", "H", "\n", "img_pre", "=", "img_pre", "[", "0", ",", ":", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "img_next", "=", "img_next", "[", "0", ",", ":", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", "\n", "img", "=", "torch", ".", "cat", "(", "[", "img_pre", ",", "img_next", "]", ",", "0", ")", "\n", "img", "=", "img", ".", "data", ".", "numpy", "(", ")", "+", "config", "[", "'mean_pixel'", "]", "\n", "img", "=", "np", ".", "clip", "(", "img", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "rest_pre_box", "=", "list", "(", ")", "\n", "\n", "# draw all circles", "\n", "for", "i", "in", "range", "(", "len", "(", "indexes_pre", ")", ")", ":", "\n", "        ", "i_pre", "=", "indexes_pre", "[", "i", "]", "\n", "c_pre", "=", "boxes_pre", "[", "0", ",", "i_pre", ".", "data", "[", "0", "]", ",", "0", ",", "0", ",", ":", "]", "\n", "color", "=", "(", "0", ",", "0", ",", "255", ")", "\n", "# convert it to the origin image", "\n", "cx_p", "=", "int", "(", "(", "c_pre", ".", "data", "[", "0", "]", "+", "1", ")", "/", "2.0", "*", "W", ")", "\n", "cy_p", "=", "int", "(", "(", "c_pre", ".", "data", "[", "1", "]", "+", "1", ")", "/", "2.0", "*", "H", ")", "\n", "\n", "# draw the circle", "\n", "img", "=", "cv2", ".", "circle", "(", "img", ",", "(", "cx_p", ",", "cy_p", ")", ",", "10", ",", "color", ",", "thickness", "=", "2", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "indexes_next", ")", ")", ":", "\n", "        ", "color", "=", "(", "0", ",", "0", ",", "255", ")", "\n", "i_next", "=", "indexes_next", "[", "i", "]", "\n", "if", "i_next", ".", "data", "[", "0", "]", ">=", "config", "[", "'max_object'", "]", ":", "\n", "            ", "continue", "\n", "", "c_next", "=", "boxes_next", "[", "0", ",", "i_next", ".", "data", "[", "0", "]", ",", "0", ",", "0", ",", ":", "]", "\n", "cx_n", "=", "int", "(", "(", "c_next", ".", "data", "[", "0", "]", "+", "1", ")", "/", "2.0", "*", "W", ")", "\n", "cy_n", "=", "int", "(", "(", "c_next", ".", "data", "[", "1", "]", "+", "1", ")", "/", "2.0", "*", "H", ")", "+", "H", "\n", "\n", "# draw the circle", "\n", "img", "=", "cv2", ".", "circle", "(", "img", ",", "(", "cx_n", ",", "cy_n", ")", ",", "10", ",", "color", ",", "thickness", "=", "2", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "len", "(", "indexes_pre", ")", ")", ":", "\n", "        ", "if", "i", ">", "len", "(", "indexes_next", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "i_pre", "=", "indexes_pre", "[", "i", "]", "\n", "i_next", "=", "indexes_next", "[", "i", "]", "\n", "\n", "c_pre", "=", "boxes_pre", "[", "0", ",", "i_pre", ".", "data", "[", "0", "]", ",", "0", ",", "0", ",", ":", "]", "\n", "\n", "if", "i_next", ".", "data", "[", "0", "]", ">=", "config", "[", "'max_object'", "]", "or", "i_pre", ".", "data", "[", "0", "]", ">=", "config", "[", "'max_object'", "]", ":", "\n", "            ", "continue", "\n", "\n", "", "c_next", "=", "boxes_next", "[", "0", ",", "i_next", ".", "data", "[", "0", "]", ",", "0", ",", "0", ",", ":", "]", "\n", "\n", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "# convert it to the origin image", "\n", "cx_p", "=", "int", "(", "(", "c_pre", ".", "data", "[", "0", "]", "+", "1", ")", "/", "2.0", "*", "W", ")", "\n", "cy_p", "=", "int", "(", "(", "c_pre", ".", "data", "[", "1", "]", "+", "1", ")", "/", "2.0", "*", "H", ")", "\n", "\n", "# draw the circle", "\n", "img", "=", "cv2", ".", "circle", "(", "img", ",", "(", "cx_p", ",", "cy_p", ")", ",", "10", ",", "color", ",", "thickness", "=", "2", ")", "\n", "\n", "cx_n", "=", "int", "(", "(", "c_next", ".", "data", "[", "0", "]", "+", "1", ")", "/", "2.0", "*", "W", ")", "\n", "cy_n", "=", "int", "(", "(", "c_next", ".", "data", "[", "1", "]", "+", "1", ")", "/", "2.0", "*", "H", ")", "+", "H", "\n", "\n", "# draw the circle", "\n", "img", "=", "cv2", ".", "circle", "(", "img", ",", "(", "cx_n", ",", "cy_n", ")", ",", "10", ",", "color", ",", "thickness", "=", "2", ")", "\n", "\n", "# draw a line between", "\n", "img", "=", "cv2", ".", "line", "(", "img", ",", "(", "cx_p", ",", "cy_p", ")", ",", "(", "cx_n", ",", "cy_n", ")", ",", "color", ",", "thickness", "=", "3", ")", "\n", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.operation.show_batch_circle_image": [[231, 291], ["list", "range", "torch.stack", "torch.stack", "valid_pre[].data.cpu().numpy", "boxes_pre[].data.cpu().numpy", "numpy.clip().astype().copy", "valid_next[].data.cpu().numpy", "boxes_next[].data.cpu().numpy", "numpy.clip().astype().copy", "int", "enumerate", "torch.from_numpy().permute", "torch.from_numpy().permute", "list.append", "img_pre[].permute", "cv2.circle.cpu().numpy", "indexes[].data.cpu().numpy", "img_next[].permute", "cv2.circle.cpu().numpy", "cv2.circle", "cv2.circle", "numpy.ones", "tuple", "tuple", "tuple", "cv2.circle", "cv2.circle", "cv2.line", "cv2.imwrite", "valid_pre[].data.cpu", "boxes_pre[].data.cpu", "numpy.clip().astype", "valid_next[].data.cpu", "boxes_next[].data.cpu", "numpy.clip().astype", "tuple", "tuple", "boxes_next[].data.cpu().numpy", "os.path.join", "torch.from_numpy", "torch.from_numpy", "cv2.circle.cpu", "indexes[].data.cpu", "cv2.circle.cpu", "cv2.line.astype", "numpy.clip", "numpy.clip", "boxes_next[].data.cpu", "numpy.random.rand"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "show_batch_circle_image", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "valid_pre", ",", "valid_next", ",", "indexes", ",", "iteration", "=", "-", "1", ")", ":", "\n", "    ", "batch_size", "=", "img_pre", ".", "shape", "[", "0", "]", "\n", "images", "=", "list", "(", ")", "\n", "h", "=", "config", "[", "'sst_dim'", "]", "\n", "gap", "=", "20", "/", "config", "[", "'sst_dim'", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "img1", "=", "img_pre", "[", "i", ",", ":", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "data", "\n", "img1", "=", "img1", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "+", "config", "[", "'mean_pixel'", "]", "\n", "valid1", "=", "valid_pre", "[", "i", ",", "0", ",", ":", "-", "1", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "boxes1", "=", "boxes_pre", "[", "i", ",", ":", ",", "0", ",", "0", ",", ":", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "boxes1", "=", "boxes1", "[", "valid1", "==", "1", "]", "\n", "img1", "=", "np", ".", "clip", "(", "img1", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "copy", "(", ")", "\n", "\n", "index", "=", "indexes", "[", "i", ",", "0", ",", ":", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "valid1", "==", "1", "]", "\n", "\n", "img2", "=", "img_next", "[", "i", ",", ":", "]", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "data", "\n", "img2", "=", "img2", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "+", "config", "[", "'mean_pixel'", "]", "\n", "valid2", "=", "valid_next", "[", "i", ",", "0", ",", ":", "-", "1", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "boxes2", "=", "boxes_next", "[", "i", ",", ":", ",", "0", ",", "0", ",", ":", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "boxes2", "=", "boxes2", "[", "valid2", "==", "1", "]", "\n", "img2", "=", "np", ".", "clip", "(", "img2", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "copy", "(", ")", "\n", "\n", "# draw all circle", "\n", "for", "b", "in", "boxes1", ":", "\n", "            ", "img1", "=", "cv2", ".", "circle", "(", "img1", ",", "tuple", "(", "(", "(", "b", "+", "1", ")", "/", "2.0", "*", "config", "[", "'sst_dim'", "]", ")", ".", "astype", "(", "int", ")", ")", ",", "20", ",", "[", "0", ",", "0", ",", "255", "]", ",", "\n", "thickness", "=", "3", ")", "\n", "\n", "", "for", "b", "in", "boxes2", ":", "\n", "            ", "img2", "=", "cv2", ".", "circle", "(", "img2", ",", "tuple", "(", "(", "(", "b", "+", "1", ")", "/", "2.0", "*", "config", "[", "'sst_dim'", "]", ")", ".", "astype", "(", "int", ")", ")", ",", "20", ",", "[", "0", ",", "0", ",", "255", "]", ",", "\n", "thickness", "=", "3", ")", "\n", "\n", "", "gap_pixel", "=", "int", "(", "gap", "*", "config", "[", "\"sst_dim\"", "]", ")", "\n", "H", ",", "W", ",", "C", "=", "img1", ".", "shape", "\n", "img", "=", "np", ".", "ones", "(", "(", "2", "*", "H", "+", "gap_pixel", ",", "W", ",", "C", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "*", "255", "\n", "img", "[", ":", "H", ",", ":", "W", ",", ":", "]", "=", "img1", "\n", "img", "[", "gap_pixel", "+", "H", ":", ",", ":", "]", "=", "img2", "\n", "# connect the boxes", "\n", "# img = np.concatenate([img1, img2], axis=0)", "\n", "\n", "# draw the connected boxes", "\n", "for", "j", ",", "b1", "in", "enumerate", "(", "boxes1", ")", ":", "\n", "            ", "if", "index", "[", "j", "]", ">=", "config", "[", "'max_object'", "]", ":", "\n", "                ", "continue", "\n", "\n", "", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "start_pt", "=", "tuple", "(", "(", "(", "b1", "+", "1", ")", "/", "2.0", "*", "config", "[", "'sst_dim'", "]", ")", ".", "astype", "(", "int", ")", ")", "\n", "b2", "=", "boxes_next", "[", "i", ",", ":", ",", "0", ",", "0", ",", ":", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "[", "index", "[", "j", "]", "]", "\n", "end_pt", "=", "tuple", "(", "(", "(", "b2", "+", "1", ")", "/", "2.0", "*", "config", "[", "'sst_dim'", "]", ")", ".", "astype", "(", "int", ")", ")", "\n", "end_pt", "=", "(", "end_pt", "[", "0", "]", ",", "end_pt", "[", "1", "]", "+", "h", "+", "gap_pixel", ")", "\n", "img", "=", "cv2", ".", "circle", "(", "img", ",", "start_pt", ",", "20", ",", "color", ",", "thickness", "=", "3", ")", "\n", "img", "=", "cv2", ".", "circle", "(", "img", ",", "end_pt", ",", "20", ",", "color", ",", "thickness", "=", "3", ")", "\n", "img", "=", "cv2", ".", "line", "(", "img", ",", "start_pt", ",", "end_pt", ",", "color", ",", "thickness", "=", "3", ")", "\n", "\n", "", "if", "'save_images_folder'", "in", "config", "and", "iteration", "!=", "-", "1", ":", "\n", "            ", "cv2", ".", "imwrite", "(", "os", ".", "path", ".", "join", "(", "config", "[", "'save_images_folder'", "]", ",", "'{0:06}.png'", ".", "format", "(", "iteration", ")", ")", ",", "img", ")", "\n", "\n", "# img = torch.from_numpy(img.astype(np.float) - config['mean_pixel']).permute(2, 0, 1)", "\n", "", "img", "=", "torch", ".", "from_numpy", "(", "img", ".", "astype", "(", "np", ".", "float", ")", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "images", ".", "append", "(", "img", ")", "\n", "", "return", "torch", ".", "stack", "(", "images", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Compose.__init__": [[49, 51], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "transforms", ")", ":", "\n", "        ", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Compose.__call__": [[52, 57], ["t"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "transforms", ":", "\n", "            ", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "=", "t", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ")", "\n", "", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Lambda.__init__": [[61, 64], ["isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "lambd", ")", ":", "\n", "        ", "assert", "isinstance", "(", "lambd", ",", "types", ".", "LambdaType", ")", "\n", "self", ".", "lambd", "=", "lambd", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Lambda.__call__": [[65, 67], ["augmentations.Lambda.lambd"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "boxes", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "lambd", "(", "img", ",", "boxes", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.ConvertFromInts.__call__": [[69, 73], ["img_pre.astype", "img_next.astype"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "\n", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "return", "img_pre", ".", "astype", "(", "np", ".", "float32", ")", ",", "img_next", ".", "astype", "(", "np", ".", "float32", ")", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.SubtractMeans.__init__": [[75, 77], ["numpy.array"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", ")", ":", "\n", "        ", "self", ".", "mean", "=", "np", ".", "array", "(", "mean", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.SubtractMeans.__call__": [[78, 84], ["img_pre.astype.astype.astype", "img_next.astype.astype.astype", "img_pre.astype.astype.astype", "img_next.astype.astype.astype"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "img_pre", "=", "img_pre", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_pre", "-=", "self", ".", "mean", "\n", "img_next", "=", "img_next", ".", "astype", "(", "np", ".", "float32", ")", "\n", "img_next", "-=", "self", ".", "mean", "\n", "return", "img_pre", ".", "astype", "(", "np", ".", "float32", ")", ",", "img_next", ".", "astype", "(", "np", ".", "float32", ")", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.ToPercentCoords.__call__": [[86, 99], ["None"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "height", ",", "width", ",", "channels", "=", "img_pre", ".", "shape", "\n", "boxes_pre", "[", ":", ",", "0", "]", "/=", "width", "\n", "boxes_pre", "[", ":", ",", "2", "]", "/=", "width", "\n", "boxes_pre", "[", ":", ",", "1", "]", "/=", "height", "\n", "boxes_pre", "[", ":", ",", "3", "]", "/=", "height", "\n", "\n", "boxes_next", "[", ":", ",", "0", "]", "/=", "width", "\n", "boxes_next", "[", ":", ",", "2", "]", "/=", "width", "\n", "boxes_next", "[", ":", ",", "1", "]", "/=", "height", "\n", "boxes_next", "[", ":", ",", "3", "]", "/=", "height", "\n", "\n", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Resize.__init__": [[101, 103], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", "=", "config", "[", "'sst_dim'", "]", ")", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Resize.__call__": [[104, 110], ["cv2.resize", "cv2.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "\n", "        ", "img_pre", "=", "cv2", ".", "resize", "(", "img_pre", ",", "(", "self", ".", "size", ",", "self", ".", "size", ")", ")", "\n", "img_next", "=", "cv2", ".", "resize", "(", "img_next", ",", "(", "self", ".", "size", ",", "self", ".", "size", ")", ")", "\n", "\n", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomSaturation.__init__": [[112, 117], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lower", "=", "config", "[", "'lower_saturation'", "]", ",", "upper", "=", "config", "[", "'upper_saturation'", "]", ")", ":", "\n", "        ", "self", ".", "lower", "=", "lower", "\n", "self", ".", "upper", "=", "upper", "\n", "assert", "self", ".", "upper", ">=", "self", ".", "lower", ",", "\"contrast upper must be >= lower.\"", "\n", "assert", "self", ".", "lower", ">=", "0", ",", "\"contrast lower must be non-negative.\"", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomSaturation.__call__": [[118, 125], ["numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "if", "random", ".", "randint", "(", "2", ")", ":", "\n", "            ", "alpha", "=", "random", ".", "uniform", "(", "self", ".", "lower", ",", "self", ".", "upper", ")", "\n", "img_pre", "[", ":", ",", ":", ",", "1", "]", "=", "img_pre", "[", ":", ",", ":", ",", "1", "]", "*", "alpha", "\n", "img_next", "[", ":", ",", ":", ",", "1", "]", "=", "img_next", "[", ":", ",", ":", ",", "1", "]", "*", "alpha", "\n", "\n", "", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomHue.__init__": [[127, 130], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "delta", "=", "18.0", ")", ":", "\n", "        ", "assert", "delta", ">=", "0.0", "and", "delta", "<=", "360.0", "\n", "self", ".", "delta", "=", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomHue.__call__": [[131, 142], ["numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "if", "random", ".", "randint", "(", "2", ")", ":", "\n", "            ", "delta", "=", "random", ".", "uniform", "(", "-", "self", ".", "delta", ",", "self", ".", "delta", ")", "\n", "img_pre", "[", ":", ",", ":", ",", "0", "]", "=", "img_pre", "[", ":", ",", ":", ",", "0", "]", "+", "delta", "\n", "img_pre", "[", ":", ",", ":", ",", "0", "]", "[", "img_pre", "[", ":", ",", ":", ",", "0", "]", ">", "360.0", "]", "-=", "360.0", "\n", "img_pre", "[", ":", ",", ":", ",", "0", "]", "[", "img_pre", "[", ":", ",", ":", ",", "0", "]", "<", "0.0", "]", "+=", "360.0", "\n", "\n", "img_next", "[", ":", ",", ":", ",", "0", "]", "=", "img_next", "[", ":", ",", ":", ",", "0", "]", "+", "delta", "\n", "img_next", "[", ":", ",", ":", ",", "0", "]", "[", "img_next", "[", ":", ",", ":", ",", "0", "]", ">", "360.0", "]", "-=", "360.0", "\n", "img_next", "[", ":", ",", ":", ",", "0", "]", "[", "img_next", "[", ":", ",", ":", ",", "0", "]", "<", "0.0", "]", "+=", "360.0", "\n", "", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomLightingNoise.__init__": [[144, 148], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "perms", "=", "(", "(", "0", ",", "1", ",", "2", ")", ",", "(", "0", ",", "2", ",", "1", ")", ",", "\n", "(", "1", ",", "0", ",", "2", ")", ",", "(", "1", ",", "2", ",", "0", ")", ",", "\n", "(", "2", ",", "0", ",", "1", ")", ",", "(", "2", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomLightingNoise.__call__": [[149, 156], ["numpy.random.randint", "augmentations.SwapChannels", "SwapChannels.", "SwapChannels.", "numpy.random.randint", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "if", "random", ".", "randint", "(", "2", ")", ":", "\n", "            ", "swap", "=", "self", ".", "perms", "[", "random", ".", "randint", "(", "len", "(", "self", ".", "perms", ")", ")", "]", "\n", "shuffle", "=", "SwapChannels", "(", "swap", ")", "# shuffle channels", "\n", "img_pre", "=", "shuffle", "(", "img_pre", ")", "\n", "img_next", "=", "shuffle", "(", "img_next", ")", "\n", "", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.ConvertColor.__init__": [[158, 161], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "current", "=", "'BGR'", ",", "transform", "=", "'HSV'", ")", ":", "\n", "        ", "self", ".", "transform", "=", "transform", "\n", "self", ".", "current", "=", "current", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.ConvertColor.__call__": [[162, 172], ["cv2.cvtColor", "cv2.cvtColor", "cv2.cvtColor", "cv2.cvtColor"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "current", "==", "'BGR'", "and", "self", ".", "transform", "==", "'HSV'", ":", "\n", "            ", "img_pre", "=", "cv2", ".", "cvtColor", "(", "img_pre", ",", "cv2", ".", "COLOR_BGR2HSV", ")", "\n", "img_next", "=", "cv2", ".", "cvtColor", "(", "img_next", ",", "cv2", ".", "COLOR_BGR2HSV", ")", "\n", "", "elif", "self", ".", "current", "==", "'HSV'", "and", "self", ".", "transform", "==", "'BGR'", ":", "\n", "            ", "img_pre", "=", "cv2", ".", "cvtColor", "(", "img_pre", ",", "cv2", ".", "COLOR_HSV2BGR", ")", "\n", "img_next", "=", "cv2", ".", "cvtColor", "(", "img_next", ",", "cv2", ".", "COLOR_HSV2BGR", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomContrast.__init__": [[174, 179], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "lower", "=", "config", "[", "'lower_contrast'", "]", ",", "upper", "=", "config", "[", "'upper_constrast'", "]", ")", ":", "\n", "        ", "self", ".", "lower", "=", "lower", "\n", "self", ".", "upper", "=", "upper", "\n", "assert", "self", ".", "upper", ">=", "self", ".", "lower", ",", "\"contrast upper must be >= lower.\"", "\n", "assert", "self", ".", "lower", ">=", "0", ",", "\"contrast lower must be non-negative.\"", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomContrast.__call__": [[181, 187], ["numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "if", "random", ".", "randint", "(", "2", ")", ":", "\n", "            ", "alpha", "=", "random", ".", "uniform", "(", "self", ".", "lower", ",", "self", ".", "upper", ")", "\n", "img_pre", "=", "img_pre", "*", "alpha", "\n", "img_next", "=", "img_next", "*", "alpha", "\n", "", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomBrightness.__init__": [[189, 193], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "delta", "=", "32", ")", ":", "\n", "        ", "assert", "delta", ">=", "0.0", "\n", "assert", "delta", "<=", "255.0", "\n", "self", ".", "delta", "=", "delta", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomBrightness.__call__": [[194, 200], ["numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "if", "random", ".", "randint", "(", "2", ")", ":", "\n", "            ", "delta", "=", "random", ".", "uniform", "(", "-", "self", ".", "delta", ",", "self", ".", "delta", ")", "\n", "img_pre", "=", "img_pre", "+", "delta", "\n", "img_next", "=", "img_next", "+", "delta", "\n", "", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomSampleCrop.__init__": [[206, 217], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "sample_options", "=", "(", "\n", "# using entire original input image", "\n", "None", ",", "\n", "# sample a patch s.t. MIN jaccard w/ obj in .1,.3,.4,.7,.9", "\n", "(", "0.7", ",", "None", ")", ",", "\n", "(", "0.8", ",", "None", ")", ",", "\n", "(", "0.85", ",", "None", ")", ",", "\n", "(", "0.9", ",", "None", ")", ",", "\n", "# randomly sample a patch", "\n", "(", "None", ",", "None", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomSampleCrop.crop": [[218, 285], ["numpy.array", "augmentations.jaccard_numpy", "boxes[].copy", "numpy.pad", "numpy.maximum", "numpy.minimum", "numpy.pad.any", "numpy.pad", "numpy.pad", "int", "int", "int", "int", "jaccard_numpy.min", "jaccard_numpy.max", "len", "numpy.logical_not", "numpy.logical_not"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.jaccard_numpy"], ["", "def", "crop", "(", "self", ",", "image", ",", "boxes", ",", "labels", ",", "mode", ",", "min_iou", ",", "max_iou", ",", "w", ",", "h", ",", "left", ",", "top", ",", "isPre", "=", "True", ")", ":", "\n", "\n", "        ", "current_image", "=", "image", "\n", "# convert to integer rect x1,y1,x2,y2", "\n", "rect", "=", "np", ".", "array", "(", "[", "int", "(", "left", ")", ",", "int", "(", "top", ")", ",", "int", "(", "left", "+", "w", ")", ",", "int", "(", "top", "+", "h", ")", "]", ")", "\n", "\n", "#  IoU (jaccard calculateoverlap) b/t the cropped and gt boxes", "\n", "\n", "overlap", "=", "jaccard_numpy", "(", "\n", "boxes", "[", ":", ",", ":", "]", ",", "\n", "rect", ")", "\n", "\n", "# is min and max overlap constraint satisfied? if not try again", "\n", "if", "overlap", ".", "min", "(", ")", "<", "min_iou", "and", "max_iou", "<", "overlap", ".", "max", "(", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "# cut the crop from the image", "\n", "", "current_image", "=", "current_image", "[", "rect", "[", "1", "]", ":", "rect", "[", "3", "]", ",", "rect", "[", "0", "]", ":", "rect", "[", "2", "]", ",", ":", "]", "\n", "\n", "# keep overlap with gt box IF center in sampled patch", "\n", "centers", "=", "(", "boxes", "[", ":", ",", ":", "2", "]", "+", "boxes", "[", ":", ",", "2", ":", "]", ")", "/", "2.0", "\n", "\n", "# mask in all gt boxes that above and to the left of centers", "\n", "m1", "=", "(", "rect", "[", "0", "]", "<", "centers", "[", ":", ",", "0", "]", ")", "*", "(", "rect", "[", "1", "]", "<", "centers", "[", ":", ",", "1", "]", ")", "\n", "\n", "# mask in all gt boxes that under and to the right of centers", "\n", "m2", "=", "(", "rect", "[", "2", "]", ">", "centers", "[", ":", ",", "0", "]", ")", "*", "(", "rect", "[", "3", "]", ">", "centers", "[", ":", ",", "1", "]", ")", "\n", "\n", "# mask in that both m1 and m2 are true", "\n", "mask", "=", "m1", "*", "m2", "\n", "\n", "# have any valid boxes? try again if not", "\n", "if", "not", "mask", ".", "any", "(", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "# take only matching gt boxes", "\n", "", "current_boxes", "=", "boxes", "[", "mask", ",", ":", "]", ".", "copy", "(", ")", "\n", "\n", "# pading the mask", "\n", "mask", "=", "np", ".", "pad", "(", "mask", ",", "\n", "(", "0", ",", "config", "[", "'max_object'", "]", "-", "len", "(", "mask", ")", ")", ",", "\n", "'constant'", ")", "\n", "mask", "=", "(", "mask", "==", "False", ")", "\n", "\n", "# take only matching gt labels", "\n", "# Important change: instead assign to zero, we should delete the row", "\n", "current_labels", "=", "labels", "\n", "h", ",", "w", "=", "labels", ".", "shape", "\n", "if", "isPre", ":", "\n", "            ", "current_labels", "=", "current_labels", "[", "np", ".", "logical_not", "(", "mask", ")", ",", ":", "]", "\n", "current_labels", "=", "np", ".", "pad", "(", "current_labels", ",", "[", "[", "0", ",", "h", "-", "current_labels", ".", "shape", "[", "0", "]", "]", ",", "[", "0", ",", "0", "]", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0.0", ")", "\n", "", "else", ":", "\n", "            ", "current_labels", "=", "current_labels", "[", ":", ",", "np", ".", "logical_not", "(", "mask", ")", "]", "\n", "current_labels", "=", "np", ".", "pad", "(", "current_labels", ",", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "w", "-", "current_labels", ".", "shape", "[", "1", "]", "]", "]", ",", "mode", "=", "'constant'", ",", "constant_values", "=", "0.0", ")", "\n", "\n", "# should we use the box left and top corner or the crop's", "\n", "", "current_boxes", "[", ":", ",", ":", "2", "]", "=", "np", ".", "maximum", "(", "current_boxes", "[", ":", ",", ":", "2", "]", ",", "\n", "rect", "[", ":", "2", "]", ")", "\n", "# adjust to crop (by substracting crop's left,top)", "\n", "current_boxes", "[", ":", ",", ":", "2", "]", "-=", "rect", "[", ":", "2", "]", "\n", "\n", "current_boxes", "[", ":", ",", "2", ":", "]", "=", "np", ".", "minimum", "(", "current_boxes", "[", ":", ",", "2", ":", "]", ",", "\n", "rect", "[", "2", ":", "]", ")", "\n", "# adjust to crop (by substracting crop's left,top)", "\n", "current_boxes", "[", ":", ",", "2", ":", "]", "-=", "rect", "[", ":", "2", "]", "\n", "\n", "return", "current_image", ",", "current_boxes", ",", "current_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomSampleCrop.__call__": [[287, 323], ["numpy.random.choice", "range", "float", "float", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "augmentations.RandomSampleCrop.crop", "augmentations.RandomSampleCrop.crop"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomSampleCrop.crop", "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomSampleCrop.crop"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "height", ",", "width", ",", "_", "=", "img_pre", ".", "shape", "\n", "while", "True", ":", "\n", "# randomly choose a mode", "\n", "            ", "mode", "=", "random", ".", "choice", "(", "self", ".", "sample_options", ")", "\n", "if", "mode", "is", "None", ":", "\n", "                ", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n", "", "min_iou", ",", "max_iou", "=", "mode", "\n", "if", "min_iou", "is", "None", ":", "\n", "                ", "min_iou", "=", "float", "(", "'-inf'", ")", "\n", "", "if", "max_iou", "is", "None", ":", "\n", "                ", "max_iou", "=", "float", "(", "'inf'", ")", "\n", "\n", "# max trails (50)", "\n", "", "for", "_", "in", "range", "(", "50", ")", ":", "\n", "\n", "                ", "w", "=", "random", ".", "uniform", "(", "0.8", "*", "width", ",", "width", ")", "\n", "h", "=", "random", ".", "uniform", "(", "0.8", "*", "height", ",", "height", ")", "\n", "\n", "# aspect ratio constraint b/t .5 & 2", "\n", "if", "h", "/", "w", "<", "0.5", "or", "h", "/", "w", ">", "2", ":", "\n", "                    ", "continue", "\n", "\n", "", "left", "=", "random", ".", "uniform", "(", "width", "-", "w", ")", "\n", "top", "=", "random", ".", "uniform", "(", "height", "-", "h", ")", "\n", "\n", "res_pre", "=", "self", ".", "crop", "(", "img_pre", ",", "boxes_pre", ",", "labels", ",", "mode", ",", "min_iou", ",", "max_iou", ",", "w", ",", "h", ",", "left", ",", "top", ",", "isPre", "=", "True", ")", "\n", "if", "res_pre", "is", "None", ":", "\n", "                    ", "continue", "\n", "\n", "", "res_next", "=", "self", ".", "crop", "(", "img_next", ",", "boxes_next", ",", "res_pre", "[", "2", "]", ",", "mode", ",", "min_iou", ",", "max_iou", ",", "w", ",", "h", ",", "left", ",", "top", ",", "isPre", "=", "False", ")", "\n", "if", "res_next", "is", "None", ":", "\n", "                    ", "continue", "\n", "", "else", ":", "\n", "                    ", "return", "res_pre", "[", "0", "]", ",", "res_next", "[", "0", "]", ",", "res_pre", "[", "1", "]", ",", "res_next", "[", "1", "]", ",", "res_next", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Expand.__init__": [[325, 327], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", "=", "config", "[", "'mean_pixel'", "]", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Expand.expand": [[328, 335], ["numpy.zeros", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["", "def", "expand", "(", "self", ",", "image", ",", "height", ",", "width", ",", "depth", ",", "ratio", ",", "left", ",", "top", ")", ":", "\n", "        ", "expand_image", "=", "np", ".", "zeros", "(", "\n", "(", "int", "(", "height", "*", "ratio", ")", ",", "int", "(", "width", "*", "ratio", ")", ",", "depth", ")", ",", "\n", "dtype", "=", "image", ".", "dtype", ")", "\n", "expand_image", "[", ":", ",", ":", ",", ":", "]", "=", "self", ".", "mean", "\n", "expand_image", "[", "int", "(", "top", ")", ":", "int", "(", "top", "+", "height", ")", ",", "int", "(", "left", ")", ":", "int", "(", "left", "+", "width", ")", "]", "=", "image", "\n", "return", "expand_image", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Expand.__call__": [[336, 357], ["numpy.random.randint", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "augmentations.Expand.expand", "augmentations.Expand.expand", "boxes_pre.copy.copy.copy", "boxes_next.copy.copy.copy", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Expand.expand", "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.Expand.expand"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "if", "random", ".", "randint", "(", "2", ")", ":", "\n", "            ", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n", "", "height", ",", "width", ",", "depth", "=", "img_pre", ".", "shape", "\n", "ratio", "=", "random", ".", "uniform", "(", "1", ",", "config", "[", "'max_expand'", "]", ")", "# new: adjust the max_expand to 2.0 (orgin is 4.0)", "\n", "left", "=", "random", ".", "uniform", "(", "0", ",", "width", "*", "ratio", "-", "width", ")", "\n", "top", "=", "random", ".", "uniform", "(", "0", ",", "height", "*", "ratio", "-", "height", ")", "\n", "\n", "img_pre", "=", "self", ".", "expand", "(", "img_pre", ",", "height", ",", "width", ",", "depth", ",", "ratio", ",", "left", ",", "top", ")", "\n", "img_next", "=", "self", ".", "expand", "(", "img_next", ",", "height", ",", "width", ",", "depth", ",", "ratio", ",", "left", ",", "top", ")", "\n", "\n", "boxes_pre", "=", "boxes_pre", ".", "copy", "(", ")", "\n", "boxes_pre", "[", ":", ",", ":", "2", "]", "+=", "(", "int", "(", "left", ")", ",", "int", "(", "top", ")", ")", "\n", "boxes_pre", "[", ":", ",", "2", ":", "]", "+=", "(", "int", "(", "left", ")", ",", "int", "(", "top", ")", ")", "\n", "\n", "boxes_next", "=", "boxes_next", ".", "copy", "(", ")", "\n", "boxes_next", "[", ":", ",", ":", "2", "]", "+=", "(", "int", "(", "left", ")", ",", "int", "(", "top", ")", ")", "\n", "boxes_next", "[", ":", ",", "2", ":", "]", "+=", "(", "int", "(", "left", ")", ",", "int", "(", "top", ")", ")", "\n", "\n", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomMirror.mirror": [[359, 366], ["numpy.array", "boxes.copy.copy.copy"], "methods", ["None"], ["    ", "def", "mirror", "(", "self", ",", "image", ",", "boxes", ")", ":", "\n", "        ", "_", ",", "width", ",", "_", "=", "image", ".", "shape", "\n", "image", "=", "np", ".", "array", "(", "image", "[", ":", ",", ":", ":", "-", "1", "]", ")", "\n", "boxes", "=", "boxes", ".", "copy", "(", ")", "\n", "boxes", "[", ":", ",", "0", "]", "=", "width", "-", "boxes", "[", ":", ",", "0", "]", "\n", "boxes", "[", ":", ",", "2", "]", "=", "width", "-", "boxes", "[", ":", ",", "2", "]", "\n", "return", "image", ",", "boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomMirror.__call__": [[367, 377], ["numpy.random.randint", "augmentations.RandomMirror.mirror", "augmentations.RandomMirror.mirror"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomMirror.mirror", "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.RandomMirror.mirror"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "if", "random", ".", "randint", "(", "2", ")", ":", "\n", "            ", "res_pre", "=", "self", ".", "mirror", "(", "img_pre", ",", "boxes_pre", ")", "\n", "res_next", "=", "self", ".", "mirror", "(", "img_next", ",", "boxes_next", ")", "\n", "img_pre", "=", "res_pre", "[", "0", "]", "\n", "img_next", "=", "res_next", "[", "0", "]", "\n", "boxes_pre", "=", "res_pre", "[", "1", "]", "\n", "boxes_next", "=", "res_next", "[", "1", "]", "\n", "\n", "", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.SwapChannels.__init__": [[386, 388], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "swaps", ")", ":", "\n", "        ", "self", ".", "swaps", "=", "swaps", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.SwapChannels.__call__": [[389, 402], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "image", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            image (Tensor): image tensor to be transformed\n        Return:\n            a tensor with channels swapped according to swap\n        \"\"\"", "\n", "# if torch.is_tensor(image):", "\n", "#     image = image.data.cpu().numpy()", "\n", "# else:", "\n", "#     image = np.array(image)", "\n", "image", "=", "image", "[", ":", ",", ":", ",", "self", ".", "swaps", "]", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.PhotometricDistort.__init__": [[404, 415], ["augmentations.RandomBrightness", "augmentations.RandomLightingNoise", "augmentations.RandomContrast", "augmentations.ConvertColor", "augmentations.RandomSaturation", "augmentations.RandomHue", "augmentations.ConvertColor", "augmentations.RandomContrast"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "pd", "=", "[", "\n", "RandomContrast", "(", ")", ",", "\n", "ConvertColor", "(", "transform", "=", "'HSV'", ")", ",", "\n", "RandomSaturation", "(", ")", ",", "\n", "RandomHue", "(", ")", ",", "\n", "ConvertColor", "(", "current", "=", "'HSV'", ",", "transform", "=", "'BGR'", ")", ",", "\n", "RandomContrast", "(", ")", "\n", "]", "\n", "self", ".", "rand_brightness", "=", "RandomBrightness", "(", ")", "\n", "self", ".", "rand_light_noise", "=", "RandomLightingNoise", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.PhotometricDistort.__call__": [[416, 429], ["img_pre.copy", "img_next.copy", "augmentations.PhotometricDistort.rand_brightness", "numpy.random.randint", "Compose.", "augmentations.PhotometricDistort.rand_light_noise", "augmentations.Compose", "augmentations.Compose"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "im_pre", "=", "img_pre", ".", "copy", "(", ")", "\n", "im_next", "=", "img_next", ".", "copy", "(", ")", "\n", "im_pre", ",", "im_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "=", "self", ".", "rand_brightness", "(", "im_pre", ",", "im_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ")", "\n", "if", "random", ".", "randint", "(", "2", ")", ":", "\n", "            ", "distort", "=", "Compose", "(", "self", ".", "pd", "[", ":", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "            ", "distort", "=", "Compose", "(", "self", ".", "pd", "[", "1", ":", "]", ")", "\n", "\n", "", "im_pre", ",", "im_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "=", "distort", "(", "im_pre", ",", "im_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ")", "\n", "\n", "return", "self", ".", "rand_light_noise", "(", "im_pre", ",", "im_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.ResizeShuffleBoxes.show_matching_hanlded_rectangle": [[431, 437], ["utils.show_matching_rectangle", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.utils.operation.show_matching_rectangle"], ["    ", "def", "show_matching_hanlded_rectangle", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ")", ":", "\n", "        ", "img_pre", "=", "(", "img_pre", "+", "np", ".", "array", "(", "config", "[", "'mean_pixel'", "]", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "img_next", "=", "(", "img_next", "+", "np", ".", "array", "(", "config", "[", "'mean_pixel'", "]", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "h", "=", "img_pre", ".", "shape", "[", "0", "]", "\n", "\n", "return", "op", ".", "show_matching_rectangle", "(", "img_pre", ",", "img_next", ",", "boxes_pre", "[", ":", ",", ":", "]", "*", "h", ",", "boxes_next", "[", ":", ",", ":", "]", "*", "h", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.ResizeShuffleBoxes.__call__": [[438, 487], ["resize_f", "resize_f", "numpy.arange", "numpy.arange", "numpy.random.shuffle", "numpy.random.shuffle", "numpy.expand_dims", "numpy.concatenate", "numpy.append", "numpy.expand_dims", "numpy.concatenate", "numpy.append", "numpy.append", "numpy.vstack", "numpy.logical_not", "numpy.logical_not", "numpy.concatenate.sum", "numpy.concatenate.sum", "numpy.full", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "resize_f", "=", "lambda", "boxes", ":", "(", "boxes", ".", "shape", "[", "0", "]", ",", "\n", "np", ".", "vstack", "(", "(", "\n", "boxes", ",", "\n", "np", ".", "full", "(", "\n", "(", "config", "[", "'max_object'", "]", "-", "len", "(", "boxes", ")", ",", "\n", "boxes", ".", "shape", "[", "1", "]", ")", ",", "\n", "np", ".", "inf", "\n", ")", ")", ")", ")", "\n", "# show the shuffling result", "\n", "# cv2.imwrite('temp_handled.jpg', self.show_matching_hanlded_rectangle(img_pre, img_next, boxes_pre, boxes_next, labels))", "\n", "size_pre", ",", "boxes_pre", "=", "resize_f", "(", "boxes_pre", ")", "\n", "size_next", ",", "boxes_next", "=", "resize_f", "(", "boxes_next", ")", "\n", "\n", "indexes_pre", "=", "np", ".", "arange", "(", "config", "[", "'max_object'", "]", ")", "\n", "indexes_next", "=", "np", ".", "arange", "(", "config", "[", "'max_object'", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indexes_pre", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indexes_next", ")", "\n", "\n", "boxes_pre", "=", "boxes_pre", "[", "indexes_pre", ",", ":", "]", "\n", "boxes_next", "=", "boxes_next", "[", "indexes_next", ",", ":", "]", "\n", "\n", "labels", "=", "labels", "[", "indexes_pre", ",", ":", "]", "\n", "labels", "=", "labels", "[", ":", ",", "indexes_next", "]", "\n", "\n", "mask_pre", "=", "indexes_pre", "<", "size_pre", "\n", "mask_next", "=", "indexes_next", "<", "size_next", "\n", "\n", "# add false object label", "\n", "false_object_pre", "=", "(", "labels", ".", "sum", "(", "1", ")", "==", "0", ")", ".", "astype", "(", "float", ")", "# should consider unmatched object", "\n", "false_object_pre", "[", "np", ".", "logical_not", "(", "mask_pre", ")", "]", "=", "0.0", "\n", "\n", "false_object_next", "=", "(", "labels", ".", "sum", "(", "0", ")", "==", "0", ")", ".", "astype", "(", "float", ")", "# should consider unmatched object", "\n", "false_object_next", "[", "np", ".", "logical_not", "(", "mask_next", ")", "]", "=", "0.0", "\n", "\n", "false_object_pre", "=", "np", ".", "expand_dims", "(", "false_object_pre", ",", "axis", "=", "1", ")", "\n", "labels", "=", "np", ".", "concatenate", "(", "(", "labels", ",", "false_object_pre", ")", ",", "axis", "=", "1", ")", "#60x61", "\n", "\n", "false_object_next", "=", "np", ".", "append", "(", "false_object_next", ",", "[", "0", "]", ")", "\n", "false_object_next", "=", "np", ".", "expand_dims", "(", "false_object_next", ",", "axis", "=", "0", ")", "\n", "labels", "=", "np", ".", "concatenate", "(", "(", "labels", ",", "false_object_next", ")", ",", "axis", "=", "0", ")", "# 60x61", "\n", "\n", "mask_pre", "=", "np", ".", "append", "(", "mask_pre", ",", "[", "True", "]", ")", "# 61", "\n", "mask_next", "=", "np", ".", "append", "(", "mask_next", ",", "[", "True", "]", ")", "# 61", "\n", "return", "img_pre", ",", "img_next", ",", "[", "boxes_pre", ",", "mask_pre", "]", ",", "[", "boxes_next", ",", "mask_next", "]", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.FormatBoxes.__init__": [[492, 494], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "keep_box", "=", "False", ")", ":", "\n", "        ", "self", ".", "keep_box", "=", "keep_box", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.FormatBoxes.__call__": [[495, 526], ["f", "f", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.expand_dims", "numpy.concatenate"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "'''\n        boxes_pre: [N, 4]\n        '''", "\n", "if", "not", "self", ".", "keep_box", ":", "\n", "# convert the center to [-1, 1]", "\n", "            ", "f", "=", "lambda", "boxes", ":", "np", ".", "expand_dims", "(", "\n", "np", ".", "expand_dims", "(", "\n", "(", "boxes", "[", ":", ",", ":", "2", "]", "+", "boxes", "[", ":", ",", "2", ":", "]", ")", "-", "1", ",", "\n", "axis", "=", "1", "\n", ")", ",", "\n", "axis", "=", "1", "\n", ")", "\n", "", "else", ":", "\n", "            ", "f", "=", "lambda", "boxes", ":", "np", ".", "expand_dims", "(", "\n", "np", ".", "expand_dims", "(", "\n", "np", ".", "concatenate", "(", "[", "(", "boxes", "[", ":", ",", ":", "2", "]", "+", "boxes", "[", ":", ",", "2", ":", "]", ")", "-", "1", ",", "boxes", "[", ":", ",", "2", ":", "6", "]", "]", ",", "axis", "=", "1", ")", ",", "\n", "axis", "=", "1", "\n", ")", ",", "\n", "axis", "=", "1", "\n", ")", "\n", "\n", "\n", "# remove inf", "\n", "", "boxes_pre", "[", "0", "]", "=", "f", "(", "boxes_pre", "[", "0", "]", ")", "\n", "boxes_pre", "[", "0", "]", "[", "boxes_pre", "[", "0", "]", "==", "np", ".", "inf", "]", "=", "1.5", "\n", "\n", "boxes_next", "[", "0", "]", "=", "f", "(", "boxes_next", "[", "0", "]", ")", "\n", "boxes_next", "[", "0", "]", "[", "boxes_next", "[", "0", "]", "==", "np", ".", "inf", "]", "=", "1.5", "\n", "\n", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.ToTensor.__call__": [[528, 541], ["torch.from_numpy().permute", "torch.from_numpy().permute", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().unsqueeze", "boxes_pre[].astype", "boxes_pre[].astype", "boxes_next[].astype", "boxes_next[].astype", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().permute.astype", "torch.from_numpy().permute.astype"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", "=", "None", ",", "boxes_next", "=", "None", ",", "labels", "=", "None", ")", ":", "\n", "        ", "img_pre", "=", "torch", ".", "from_numpy", "(", "img_pre", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "img_next", "=", "torch", ".", "from_numpy", "(", "img_next", ".", "astype", "(", "np", ".", "float32", ")", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "\n", "boxes_pre", "[", "0", "]", "=", "torch", ".", "from_numpy", "(", "boxes_pre", "[", "0", "]", ".", "astype", "(", "float", ")", ")", "\n", "boxes_pre", "[", "1", "]", "=", "torch", ".", "from_numpy", "(", "boxes_pre", "[", "1", "]", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "boxes_next", "[", "0", "]", "=", "torch", ".", "from_numpy", "(", "boxes_next", "[", "0", "]", ".", "astype", "(", "float", ")", ")", "\n", "boxes_next", "[", "1", "]", "=", "torch", ".", "from_numpy", "(", "boxes_next", "[", "1", "]", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "labels", "=", "torch", ".", "from_numpy", "(", "labels", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "return", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.SSJAugmentation.__init__": [[543, 572], ["augmentations.Compose", "augmentations.Compose", "NameError", "augmentations.ConvertFromInts", "augmentations.PhotometricDistort", "augmentations.Expand", "augmentations.RandomSampleCrop", "augmentations.RandomMirror", "augmentations.ToPercentCoords", "augmentations.Resize", "augmentations.SubtractMeans", "augmentations.ResizeShuffleBoxes", "augmentations.FormatBoxes", "augmentations.ToTensor", "augmentations.ConvertFromInts", "augmentations.ToPercentCoords", "augmentations.Resize", "augmentations.SubtractMeans", "augmentations.ResizeShuffleBoxes", "augmentations.FormatBoxes", "augmentations.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", "=", "config", "[", "'sst_dim'", "]", ",", "mean", "=", "config", "[", "'mean_pixel'", "]", ",", "type", "=", "config", "[", "'type'", "]", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "size", "=", "size", "\n", "if", "type", "==", "'train'", ":", "\n", "            ", "self", ".", "augment", "=", "Compose", "(", "[", "\n", "ConvertFromInts", "(", ")", ",", "\n", "PhotometricDistort", "(", ")", ",", "\n", "Expand", "(", "self", ".", "mean", ")", ",", "\n", "RandomSampleCrop", "(", ")", ",", "\n", "RandomMirror", "(", ")", ",", "\n", "ToPercentCoords", "(", ")", ",", "\n", "Resize", "(", "self", ".", "size", ")", ",", "\n", "SubtractMeans", "(", "self", ".", "mean", ")", ",", "\n", "ResizeShuffleBoxes", "(", ")", ",", "\n", "FormatBoxes", "(", ")", ",", "\n", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "elif", "type", "==", "'test'", ":", "\n", "            ", "self", ".", "augment", "=", "Compose", "(", "[", "\n", "ConvertFromInts", "(", ")", ",", "\n", "ToPercentCoords", "(", ")", ",", "\n", "Resize", "(", "self", ".", "size", ")", ",", "\n", "SubtractMeans", "(", "self", ".", "mean", ")", ",", "\n", "ResizeShuffleBoxes", "(", ")", ",", "\n", "FormatBoxes", "(", "keep_box", "=", "True", ")", ",", "\n", "ToTensor", "(", ")", "\n", "]", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NameError", "(", "'config type is wrong, should be choose from (train, test)'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.SSJAugmentation.__call__": [[573, 575], ["augmentations.SSJAugmentation.augment"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ")", ":", "\n", "        ", "return", "self", ".", "augment", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.SSJEvalAugment.__init__": [[577, 588], ["augmentations.Compose", "augmentations.ConvertFromInts", "augmentations.ToPercentCoords", "augmentations.Resize", "augmentations.SubtractMeans", "augmentations.ResizeShuffleBoxes", "augmentations.FormatBoxes", "augmentations.ToTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", "=", "config", "[", "'sst_dim'", "]", ",", "mean", "=", "config", "[", "'mean_pixel'", "]", ")", ":", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "augment", "=", "Compose", "(", "[", "\n", "ConvertFromInts", "(", ")", ",", "\n", "ToPercentCoords", "(", ")", ",", "\n", "Resize", "(", "self", ".", "size", ")", ",", "\n", "SubtractMeans", "(", "self", ".", "mean", ")", ",", "\n", "ResizeShuffleBoxes", "(", ")", ",", "\n", "FormatBoxes", "(", ")", ",", "\n", "ToTensor", "(", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.SSJEvalAugment.__call__": [[590, 592], ["augmentations.SSJEvalAugment.augment"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ")", ":", "\n", "        ", "return", "self", ".", "augment", "(", "img_pre", ",", "img_next", ",", "boxes_pre", ",", "boxes_next", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.intersect": [[13, 18], ["numpy.minimum", "numpy.maximum", "numpy.clip"], "function", ["None"], ["def", "intersect", "(", "box_a", ",", "box_b", ")", ":", "\n", "    ", "max_xy", "=", "np", ".", "minimum", "(", "box_a", "[", ":", ",", "2", ":", "]", ",", "box_b", "[", "2", ":", "]", ")", "\n", "min_xy", "=", "np", ".", "maximum", "(", "box_a", "[", ":", ",", ":", "2", "]", ",", "box_b", "[", ":", "2", "]", ")", "\n", "inter", "=", "np", ".", "clip", "(", "(", "max_xy", "-", "min_xy", ")", ",", "a_min", "=", "0", ",", "a_max", "=", "np", ".", "inf", ")", "\n", "return", "inter", "[", ":", ",", "0", "]", "*", "inter", "[", ":", ",", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.jaccard_numpy": [[19, 37], ["augmentations.intersect"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.intersect"], ["", "def", "jaccard_numpy", "(", "box_a", ",", "box_b", ")", ":", "\n", "    ", "\"\"\"Compute the jaccard overlap of two sets of boxes.  The jaccard overlap\n    is simply the intersection over union of two boxes.\n    E.g.:\n        A \u2229 B / A \u222a B = A \u2229 B / (area(A) + area(B) - A \u2229 B)\n    Args:\n        box_a: Multiple bounding boxes, Shape: [num_boxes,4]\n        box_b: Single bounding box, Shape: [4]\n    Return:\n        jaccard overlap: Shape: [box_a.shape[0], box_a.shape[1]]\n    \"\"\"", "\n", "inter", "=", "intersect", "(", "box_a", ",", "box_b", ")", "\n", "area_a", "=", "(", "(", "box_a", "[", ":", ",", "2", "]", "-", "box_a", "[", ":", ",", "0", "]", ")", "*", "\n", "(", "box_a", "[", ":", ",", "3", "]", "-", "box_a", "[", ":", ",", "1", "]", ")", ")", "# [A,B]", "\n", "area_b", "=", "(", "(", "box_b", "[", "2", "]", "-", "box_b", "[", "0", "]", ")", "*", "\n", "(", "box_b", "[", "3", "]", "-", "box_b", "[", "1", "]", ")", ")", "# [A,B]", "\n", "union", "=", "area_a", "+", "area_b", "-", "inter", "\n", "return", "inter", "/", "union", "# [A,B]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.utils.augmentations.collate_fn": [[593, 614], ["img_pre.append", "img_next.append", "boxes_pre.append", "boxes_next.append", "labels.append", "indexes_pre.append", "indexes_next.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "[].float", "[].float", "sample[].float", "[].byte", "[].byte", "torch.stack", "torch.stack"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "", "def", "collate_fn", "(", "batch", ")", ":", "\n", "    ", "img_pre", "=", "[", "]", "\n", "img_next", "=", "[", "]", "\n", "boxes_pre", "=", "[", "]", "\n", "boxes_next", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "indexes_pre", "=", "[", "]", "\n", "indexes_next", "=", "[", "]", "\n", "for", "sample", "in", "batch", ":", "\n", "        ", "img_pre", ".", "append", "(", "sample", "[", "0", "]", ")", "\n", "img_next", ".", "append", "(", "sample", "[", "1", "]", ")", "\n", "boxes_pre", ".", "append", "(", "sample", "[", "2", "]", "[", "0", "]", ".", "float", "(", ")", ")", "\n", "boxes_next", ".", "append", "(", "sample", "[", "3", "]", "[", "0", "]", ".", "float", "(", ")", ")", "\n", "labels", ".", "append", "(", "sample", "[", "4", "]", ".", "float", "(", ")", ")", "\n", "indexes_pre", ".", "append", "(", "sample", "[", "2", "]", "[", "1", "]", ".", "byte", "(", ")", ")", "\n", "indexes_next", ".", "append", "(", "sample", "[", "3", "]", "[", "1", "]", ".", "byte", "(", ")", ")", "\n", "", "return", "torch", ".", "stack", "(", "img_pre", ",", "0", ")", ",", "torch", ".", "stack", "(", "img_next", ",", "0", ")", ",", "torch", ".", "stack", "(", "boxes_pre", ",", "0", ")", ",", "torch", ".", "stack", "(", "boxes_next", ",", "0", ")", ",", "torch", ".", "stack", "(", "labels", ",", "0", ")", ",", "torch", ".", "stack", "(", "indexes_pre", ",", "0", ")", ".", "unsqueeze", "(", "1", ")", ",", "torch", ".", "stack", "(", "indexes_next", ",", "0", ")", ".", "unsqueeze", "(", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.shijieS_SST.utils.eb_utils.get_sequence_name_by_det_folder": [[3, 10], ["os.listdir"], "function", ["None"], ["def", "get_sequence_name_by_det_folder", "(", "det_folder", ")", ":", "\n", "    ", "'''\n    get the sequence name (i.e. ['MVI_39031', 'MVI_39051']) from the detection folder\n    :param det_folder: currently detection folder\n    :return: return sequence names\n    '''", "\n", "return", "[", "f", "[", ":", "9", "]", "for", "f", "in", "os", ".", "listdir", "(", "det_folder", ")", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.__init__": [[28, 53], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "int"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "phase", ",", "base", ",", "extras", ",", "selector", ",", "final_net", ",", "use_gpu", "=", "config", "[", "'cuda'", "]", ")", ":", "\n", "        ", "super", "(", "SST", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "phase", "=", "phase", "\n", "\n", "# vgg network", "\n", "self", ".", "vgg", "=", "nn", ".", "ModuleList", "(", "base", ")", "\n", "self", ".", "extras", "=", "nn", ".", "ModuleList", "(", "extras", ")", "\n", "self", ".", "selector", "=", "nn", ".", "ModuleList", "(", "selector", ")", "\n", "\n", "# self.vgg_next = nn.ModuleList(base_next)", "\n", "# self.extras_next = nn.ModuleList(extras_next)", "\n", "# self.selector_next = nn.ModuleList(selector_next)", "\n", "\n", "self", ".", "stacker2_bn", "=", "nn", ".", "BatchNorm2d", "(", "int", "(", "config", "[", "'final_net'", "]", "[", "'900'", "]", "[", "0", "]", "/", "2", ")", ")", "\n", "self", ".", "final_dp", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "self", ".", "final_net", "=", "nn", ".", "ModuleList", "(", "final_net", ")", "\n", "\n", "self", ".", "image_size", "=", "config", "[", "'sst_dim'", "]", "\n", "self", ".", "max_object", "=", "config", "[", "'max_object'", "]", "\n", "self", ".", "selector_channel", "=", "config", "[", "'selector_channel'", "]", "\n", "\n", "self", ".", "false_objects_column", "=", "None", "\n", "self", ".", "false_objects_row", "=", "None", "\n", "self", ".", "false_constant", "=", "config", "[", "'false_constant'", "]", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward": [[54, 93], ["list", "list", "sst.SST.forward_vgg", "sst.SST.forward_vgg", "sst.SST.forward_extras", "sst.SST.forward_extras", "sst.SST.forward_selector_stacker1", "sst.SST.forward_selector_stacker1", "sst.SST.forward_stacker2", "sst.SST.final_dp", "sst.SST.forward_final", "sst.SST.add_unmatched_dim"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_vgg", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_vgg", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_extras", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_extras", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_selector_stacker1", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_selector_stacker1", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker2", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_final", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.add_unmatched_dim"], ["", "def", "forward", "(", "self", ",", "x_pre", ",", "x_next", ",", "l_pre", ",", "l_next", ",", "valid_pre", "=", "None", ",", "valid_next", "=", "None", ")", ":", "\n", "        ", "'''\n        the sst net forward stream\n        :param x_pre:  the previous image, (1, 3, 900, 900) FT\n        :param x_next: the next image,  (1, 3, 900, 900) FT\n        :param l_pre: the previous box center, (1, 60, 1, 1, 2) FT\n        :param l_next: the next box center, (1, 60, 1, 1, 2) FT\n        :param valid_pre: the previous box mask, (1, 1, 61) BT\n        :param valid_next: the next box mask, (1, 1, 61) BT\n        :return: the similarity matrix\n        '''", "\n", "sources_pre", "=", "list", "(", ")", "\n", "sources_next", "=", "list", "(", ")", "\n", "x_pre", "=", "self", ".", "forward_vgg", "(", "x_pre", ",", "self", ".", "vgg", ",", "sources_pre", ")", "\n", "x_next", "=", "self", ".", "forward_vgg", "(", "x_next", ",", "self", ".", "vgg", ",", "sources_next", ")", "\n", "# x_next.register_hook(lambda grad: print('start:', grad.sum().data[0]))", "\n", "x_pre", "=", "self", ".", "forward_extras", "(", "x_pre", ",", "self", ".", "extras", ",", "\n", "sources_pre", ")", "\n", "x_next", "=", "self", ".", "forward_extras", "(", "x_next", ",", "self", ".", "extras", ",", "\n", "sources_next", ")", "\n", "\n", "x_pre", "=", "self", ".", "forward_selector_stacker1", "(", "\n", "sources_pre", ",", "l_pre", ",", "self", ".", "selector", "\n", ")", "\n", "x_next", "=", "self", ".", "forward_selector_stacker1", "(", "\n", "sources_next", ",", "l_next", ",", "self", ".", "selector", "\n", ")", "\n", "# x_pre.register_hook(lambda grad: print('selector_stacker1:', grad.sum().data[0]))", "\n", "# [B, N, N, C]", "\n", "x", "=", "self", ".", "forward_stacker2", "(", "\n", "x_pre", ",", "x_next", "\n", ")", "\n", "x", "=", "self", ".", "final_dp", "(", "x", ")", "\n", "# [B, N, N, 1]", "\n", "x", "=", "self", ".", "forward_final", "(", "x", ",", "self", ".", "final_net", ")", "\n", "\n", "# add false unmatched row and column", "\n", "x", "=", "self", ".", "add_unmatched_dim", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_feature_extracter": [[94, 108], ["list", "sst.SST.forward_vgg", "sst.SST.forward_extras", "sst.SST.forward_selector_stacker1"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_vgg", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_extras", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_selector_stacker1"], ["", "def", "forward_feature_extracter", "(", "self", ",", "x", ",", "l", ")", ":", "\n", "        ", "'''\n        extract features from the vgg layers and extra net\n        :param x:\n        :param l:\n        :return: the features\n        '''", "\n", "s", "=", "list", "(", ")", "\n", "\n", "x", "=", "self", ".", "forward_vgg", "(", "x", ",", "self", ".", "vgg", ",", "s", ")", "\n", "x", "=", "self", ".", "forward_extras", "(", "x", ",", "self", ".", "extras", ",", "s", ")", "\n", "x", "=", "self", ".", "forward_selector_stacker1", "(", "s", ",", "l", ",", "self", ".", "selector", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.get_similarity": [[109, 113], ["sst.SST.forward_feature_extracter", "sst.SST.forward_feature_extracter", "sst.SST.forward_stacker_features"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_feature_extracter", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_feature_extracter", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker_features"], ["", "def", "get_similarity", "(", "self", ",", "image1", ",", "detection1", ",", "image2", ",", "detection2", ")", ":", "\n", "        ", "feature1", "=", "self", ".", "forward_feature_extracter", "(", "image1", ",", "detection1", ")", "\n", "feature2", "=", "self", ".", "forward_feature_extracter", "(", "image2", ",", "detection2", ")", "\n", "return", "self", ".", "forward_stacker_features", "(", "feature1", ",", "feature2", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.resize_dim": [[115, 125], ["list", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable().cuda", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "resize_dim", "(", "self", ",", "x", ",", "added_size", ",", "dim", "=", "1", ",", "constant", "=", "0", ")", ":", "\n", "        ", "if", "added_size", "<=", "0", ":", "\n", "            ", "return", "x", "\n", "", "shape", "=", "list", "(", "x", ".", "shape", ")", "\n", "shape", "[", "dim", "]", "=", "added_size", "\n", "if", "self", ".", "use_gpu", ":", "\n", "            ", "new_data", "=", "Variable", "(", "torch", ".", "ones", "(", "shape", ")", "*", "constant", ")", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "new_data", "=", "Variable", "(", "torch", ".", "ones", "(", "shape", ")", "*", "constant", ")", "\n", "", "return", "torch", ".", "cat", "(", "[", "x", ",", "new_data", "]", ",", "dim", "=", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker_features": [[126, 176], ["sst.SST.forward_stacker2", "sst.SST.final_dp", "sst.SST.forward_final", "torch.cat.contiguous", "torch.cat.contiguous", "torch.cat.contiguous", "sst.SST.resize_dim", "sst.SST.resize_dim", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "sst.SST.resize_dim", "sst.SST.resize_dim", "list", "list", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.data.cpu().numpy", "torch.cat.data.cpu().numpy", "torch.cat.data.cpu().numpy", "torch.cat.data.numpy", "torch.cat.data.numpy", "torch.cat.data.numpy", "range", "range", "x[].repeat", "torch.cat.data.cpu", "torch.cat.data.cpu", "torch.cat.data.cpu"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker2", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_final", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.resize_dim", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.resize_dim", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.resize_dim", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.resize_dim"], ["", "def", "forward_stacker_features", "(", "self", ",", "xp", ",", "xn", ",", "fill_up_column", "=", "True", ")", ":", "\n", "        ", "pre_rest_num", "=", "self", ".", "max_object", "-", "xp", ".", "shape", "[", "1", "]", "\n", "next_rest_num", "=", "self", ".", "max_object", "-", "xn", ".", "shape", "[", "1", "]", "\n", "pre_num", "=", "xp", ".", "shape", "[", "1", "]", "\n", "next_num", "=", "xn", ".", "shape", "[", "1", "]", "\n", "x", "=", "self", ".", "forward_stacker2", "(", "\n", "self", ".", "resize_dim", "(", "xp", ",", "pre_rest_num", ",", "dim", "=", "1", ")", ",", "\n", "self", ".", "resize_dim", "(", "xn", ",", "next_rest_num", ",", "dim", "=", "1", ")", "\n", ")", "\n", "\n", "x", "=", "self", ".", "final_dp", "(", "x", ")", "\n", "# [B, N, N, 1]", "\n", "x", "=", "self", ".", "forward_final", "(", "x", ",", "self", ".", "final_net", ")", "\n", "x", "=", "x", ".", "contiguous", "(", ")", "\n", "# add zero", "\n", "if", "next_num", "<", "self", ".", "max_object", ":", "\n", "            ", "x", "[", "0", ",", "0", ",", ":", ",", "next_num", ":", "]", "=", "0", "\n", "", "if", "pre_num", "<", "self", ".", "max_object", ":", "\n", "            ", "x", "[", "0", ",", "0", ",", "pre_num", ":", ",", ":", "]", "=", "0", "\n", "", "x", "=", "x", "[", "0", ",", "0", ",", ":", "]", "\n", "# add false unmatched row and column", "\n", "x", "=", "self", ".", "resize_dim", "(", "x", ",", "1", ",", "dim", "=", "0", ",", "constant", "=", "self", ".", "false_constant", ")", "\n", "x", "=", "self", ".", "resize_dim", "(", "x", ",", "1", ",", "dim", "=", "1", ",", "constant", "=", "self", ".", "false_constant", ")", "\n", "\n", "x_f", "=", "F", ".", "softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "x_t", "=", "F", ".", "softmax", "(", "x", ",", "dim", "=", "0", ")", "\n", "# slice", "\n", "last_row", ",", "last_col", "=", "x_f", ".", "shape", "\n", "row_slice", "=", "list", "(", "range", "(", "pre_num", ")", ")", "+", "[", "last_row", "-", "1", "]", "\n", "col_slice", "=", "list", "(", "range", "(", "next_num", ")", ")", "+", "[", "last_col", "-", "1", "]", "\n", "x_f", "=", "x_f", "[", "row_slice", ",", ":", "]", "\n", "x_f", "=", "x_f", "[", ":", ",", "col_slice", "]", "\n", "x_t", "=", "x_t", "[", "row_slice", ",", ":", "]", "\n", "x_t", "=", "x_t", "[", ":", ",", "col_slice", "]", "\n", "\n", "x", "=", "Variable", "(", "torch", ".", "zeros", "(", "pre_num", ",", "next_num", "+", "1", ")", ")", "\n", "# x[0:pre_num, 0:next_num] = torch.max(x_f[0:pre_num, 0:next_num], x_t[0:pre_num, 0:next_num])", "\n", "x", "[", "0", ":", "pre_num", ",", "0", ":", "next_num", "]", "=", "(", "x_f", "[", "0", ":", "pre_num", ",", "0", ":", "next_num", "]", "+", "x_t", "[", "0", ":", "pre_num", ",", "0", ":", "next_num", "]", ")", "/", "2.0", "\n", "x", "[", ":", ",", "next_num", ":", "next_num", "+", "1", "]", "=", "x_f", "[", ":", "pre_num", ",", "next_num", ":", "next_num", "+", "1", "]", "\n", "if", "fill_up_column", "and", "pre_num", ">", "1", ":", "\n", "            ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "x", "[", ":", ",", "next_num", ":", "next_num", "+", "1", "]", ".", "repeat", "(", "1", ",", "pre_num", "-", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "self", ".", "use_gpu", ":", "\n", "            ", "y", "=", "x", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "# del x, x_f, x_t", "\n", "# torch.cuda.empty_cache()", "\n", "", "else", ":", "\n", "            ", "y", "=", "x", ".", "data", ".", "numpy", "(", ")", "\n", "\n", "", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_vgg": [[177, 190], ["range", "sources.append", "range", "sources.append", "range", "sources.append"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "forward_vgg", "(", "self", ",", "x", ",", "vgg", ",", "sources", ")", ":", "\n", "        ", "for", "k", "in", "range", "(", "16", ")", ":", "\n", "            ", "x", "=", "vgg", "[", "k", "]", "(", "x", ")", "\n", "", "sources", ".", "append", "(", "x", ")", "\n", "\n", "for", "k", "in", "range", "(", "16", ",", "23", ")", ":", "\n", "            ", "x", "=", "vgg", "[", "k", "]", "(", "x", ")", "\n", "", "sources", ".", "append", "(", "x", ")", "\n", "\n", "for", "k", "in", "range", "(", "23", ",", "35", ")", ":", "\n", "            ", "x", "=", "vgg", "[", "k", "]", "(", "x", ")", "\n", "", "sources", ".", "append", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_extras": [[191, 197], ["enumerate", "v", "sources.append"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "forward_extras", "(", "self", ",", "x", ",", "extras", ",", "sources", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "enumerate", "(", "extras", ")", ":", "\n", "            ", "x", "=", "v", "(", "x", ")", "#x = F.relu(v(x), inplace=True)        #done: relu is unnecessary.", "\n", "if", "k", "%", "6", "==", "3", ":", "#done: should select the output of BatchNormalization (-> k%6==2)", "\n", "                ", "sources", ".", "append", "(", "x", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_selector_stacker1": [[198, 222], ["list", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.relu", "torch.relu", "torch.relu", "labels.size", "list", "range", "list.append", "net", "zip", "len", "list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.grid_sample().squeeze().squeeze", "torch.grid_sample().squeeze().squeeze", "torch.grid_sample().squeeze().squeeze", "torch.grid_sample().squeeze", "torch.grid_sample().squeeze", "torch.grid_sample().squeeze", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "forward_selector_stacker1", "(", "self", ",", "sources", ",", "labels", ",", "selector", ")", ":", "\n", "        ", "'''\n        :param sources: [B, C, H, W]\n        :param labels: [B, N, 1, 1, 2]\n        :return: the connected feature\n        '''", "\n", "sources", "=", "[", "\n", "F", ".", "relu", "(", "net", "(", "x", ")", ",", "inplace", "=", "True", ")", "for", "net", ",", "x", "in", "zip", "(", "selector", ",", "sources", ")", "\n", "]", "\n", "\n", "res", "=", "list", "(", ")", "\n", "for", "label_index", "in", "range", "(", "labels", ".", "size", "(", "1", ")", ")", ":", "\n", "            ", "label_res", "=", "list", "(", ")", "\n", "for", "source_index", "in", "range", "(", "len", "(", "sources", ")", ")", ":", "\n", "# [N, B, C, 1, 1]", "\n", "                ", "label_res", ".", "append", "(", "\n", "# [B, C, 1, 1]", "\n", "F", ".", "grid_sample", "(", "sources", "[", "source_index", "]", ",", "# [B, C, H, W]", "\n", "labels", "[", ":", ",", "label_index", ",", ":", "]", "# [B, 1, 1, 2", "\n", ")", ".", "squeeze", "(", "2", ")", ".", "squeeze", "(", "2", ")", "\n", ")", "\n", "", "res", ".", "append", "(", "torch", ".", "cat", "(", "label_res", ",", "1", ")", ")", "\n", "\n", "", "return", "torch", ".", "stack", "(", "res", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker2": [[223, 236], ["sst.SST.unsqueeze().repeat().permute", "sst.SST.unsqueeze().repeat().permute", "sst.SST.stacker2_bn", "sst.SST.stacker2_bn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "sst.SST.contiguous", "sst.SST.contiguous", "sst.SST.unsqueeze().repeat", "sst.SST.unsqueeze().repeat", "sst.SST.unsqueeze", "sst.SST.unsqueeze"], "methods", ["None"], ["", "def", "forward_stacker2", "(", "self", ",", "stacker1_pre_output", ",", "stacker1_next_output", ")", ":", "\n", "        ", "stacker1_pre_output", "=", "stacker1_pre_output", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "max_object", ",", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "stacker1_next_output", "=", "stacker1_next_output", ".", "unsqueeze", "(", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "max_object", ",", "1", ",", "1", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "stacker1_pre_output", "=", "self", ".", "stacker2_bn", "(", "stacker1_pre_output", ".", "contiguous", "(", ")", ")", "\n", "stacker1_next_output", "=", "self", ".", "stacker2_bn", "(", "stacker1_next_output", ".", "contiguous", "(", ")", ")", "\n", "\n", "output", "=", "torch", ".", "cat", "(", "\n", "[", "stacker1_pre_output", ",", "stacker1_next_output", "]", ",", "\n", "1", "\n", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_final": [[237, 242], ["f.contiguous", "f"], "methods", ["None"], ["", "def", "forward_final", "(", "self", ",", "x", ",", "final_net", ")", ":", "\n", "        ", "x", "=", "x", ".", "contiguous", "(", ")", "\n", "for", "f", "in", "final_net", ":", "\n", "            ", "x", "=", "f", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.add_unmatched_dim": [[243, 256], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "sst.SST.false_objects_column.cuda", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "sst.SST.false_objects_row.cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["None"], ["", "def", "add_unmatched_dim", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "false_objects_column", "is", "None", ":", "\n", "            ", "self", ".", "false_objects_column", "=", "Variable", "(", "torch", ".", "ones", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "x", ".", "shape", "[", "2", "]", ",", "1", ")", ")", "*", "self", ".", "false_constant", "\n", "if", "self", ".", "use_gpu", ":", "\n", "                ", "self", ".", "false_objects_column", "=", "self", ".", "false_objects_column", ".", "cuda", "(", ")", "\n", "", "", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "self", ".", "false_objects_column", "]", ",", "3", ")", "\n", "\n", "if", "self", ".", "false_objects_row", "is", "None", ":", "\n", "            ", "self", ".", "false_objects_row", "=", "Variable", "(", "torch", ".", "ones", "(", "x", ".", "shape", "[", "0", "]", ",", "x", ".", "shape", "[", "1", "]", ",", "1", ",", "x", ".", "shape", "[", "3", "]", ")", ")", "*", "self", ".", "false_constant", "\n", "if", "self", ".", "use_gpu", ":", "\n", "                ", "self", ".", "false_objects_row", "=", "self", ".", "false_objects_row", ".", "cuda", "(", ")", "\n", "", "", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "self", ".", "false_objects_row", "]", ",", "2", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.load_weights": [[257, 268], ["os.path.splitext", "print", "sst.SST.load_state_dict", "print", "print", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["None"], ["", "def", "load_weights", "(", "self", ",", "base_file", ")", ":", "\n", "        ", "other", ",", "ext", "=", "os", ".", "path", ".", "splitext", "(", "base_file", ")", "\n", "if", "ext", "==", "'.pkl'", "or", "'.pth'", ":", "\n", "            ", "print", "(", "'Loading weights into state dict...'", ")", "\n", "self", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "base_file", ",", "\n", "map_location", "=", "lambda", "storage", ",", "loc", ":", "storage", ")", "\n", ")", "\n", "print", "(", "'Finished'", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "'Sorry only .pth and .pkl files supported.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.vgg": [[269, 290], ["torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["", "", "", "def", "vgg", "(", "cfg", ",", "i", ",", "batch_norm", "=", "False", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "i", "\n", "for", "v", "in", "cfg", ":", "\n", "        ", "if", "v", "==", "'M'", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "elif", "v", "==", "'C'", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "ceil_mode", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "\n", "", "", "pool5", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "conv6", "=", "nn", ".", "Conv2d", "(", "512", ",", "1024", ",", "kernel_size", "=", "3", ",", "padding", "=", "6", ",", "dilation", "=", "6", ")", "\n", "conv7", "=", "nn", ".", "Conv2d", "(", "1024", ",", "1024", ",", "kernel_size", "=", "1", ")", "\n", "layers", "+=", "[", "pool5", ",", "conv6", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "conv7", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.add_extras": [[291, 316], ["enumerate", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["", "def", "add_extras", "(", "cfg", ",", "i", ",", "batch_norm", "=", "True", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "i", "\n", "flag", "=", "False", "\n", "for", "k", ",", "v", "in", "enumerate", "(", "cfg", ")", ":", "\n", "        ", "if", "in_channels", "!=", "'S'", ":", "\n", "            ", "if", "v", "==", "'S'", ":", "\n", "                ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "cfg", "[", "k", "+", "1", "]", ",", "\n", "kernel_size", "=", "(", "1", ",", "3", ")", "[", "flag", "]", ",", "\n", "stride", "=", "2", ",", "\n", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "cfg", "[", "k", "+", "1", "]", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "", "else", ":", "\n", "                ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "\n", "kernel_size", "=", "(", "1", ",", "3", ")", "[", "flag", "]", ")", "\n", "if", "batch_norm", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "", "flag", "=", "not", "flag", "\n", "", "in_channels", "=", "v", "\n", "", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.add_final": [[317, 336], ["int", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["", "def", "add_final", "(", "cfg", ",", "batch_normal", "=", "True", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "int", "(", "cfg", "[", "0", "]", ")", "\n", "layers", "+=", "[", "]", "\n", "# 1. add the 1:-2 layer with BatchNorm", "\n", "for", "v", "in", "cfg", "[", "1", ":", "-", "2", "]", ":", "\n", "        ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "if", "batch_normal", ":", "\n", "            ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "            ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "# 2. add the -2: layer without BatchNorm for BatchNorm would make the output value normal distribution.", "\n", "", "for", "v", "in", "cfg", "[", "-", "2", ":", "]", ":", "\n", "        ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "in_channels", "=", "v", "\n", "\n", "", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.selector": [[337, 363], ["enumerate", "enumerate", "enumerate", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "function", ["None"], ["", "def", "selector", "(", "vgg", ",", "extra_layers", ",", "batch_normal", "=", "True", ")", ":", "\n", "    ", "'''\n    batch_normal must be same to add_extras batch_normal\n    '''", "\n", "selector_layers", "=", "[", "]", "\n", "vgg_source", "=", "config", "[", "'vgg_source'", "]", "\n", "\n", "for", "k", ",", "v", "in", "enumerate", "(", "vgg_source", ")", ":", "\n", "         ", "selector_layers", "+=", "[", "nn", ".", "Conv2d", "(", "vgg", "[", "v", "-", "1", "]", ".", "out_channels", ",", "\n", "config", "[", "'selector_channel'", "]", "[", "k", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "]", "\n", "", "if", "batch_normal", ":", "\n", "        ", "for", "k", ",", "v", "in", "enumerate", "(", "extra_layers", "[", "3", ":", ":", "6", "]", ",", "3", ")", ":", "\n", "            ", "selector_layers", "+=", "[", "nn", ".", "Conv2d", "(", "v", ".", "out_channels", ",", "\n", "config", "[", "'selector_channel'", "]", "[", "k", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "]", "\n", "", "", "else", ":", "\n", "        ", "for", "k", ",", "v", "in", "enumerate", "(", "extra_layers", "[", "3", ":", ":", "4", "]", ",", "3", ")", ":", "\n", "            ", "selector_layers", "+=", "[", "nn", ".", "Conv2d", "(", "v", ".", "out_channels", ",", "\n", "config", "[", "'selector_channel'", "]", "[", "k", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ")", "]", "\n", "\n", "", "", "return", "vgg", ",", "extra_layers", ",", "selector_layers", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.build_sst": [[364, 388], ["sst.SST", "print", "print", "sst.add_final", "sst.selector", "sst.vgg", "sst.add_extras", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst.add_final", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.selector", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.vgg", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.add_extras"], ["", "def", "build_sst", "(", "phase", ",", "size", "=", "900", ",", "use_gpu", "=", "config", "[", "'cuda'", "]", ")", ":", "\n", "    ", "'''\n    create the SSJ Tracker Object\n    :return: ssj tracker object\n    '''", "\n", "if", "phase", "!=", "'test'", "and", "phase", "!=", "'train'", ":", "\n", "        ", "print", "(", "'Error: Phase not recognized'", ")", "\n", "return", "\n", "\n", "", "if", "size", "!=", "900", ":", "\n", "        ", "print", "(", "'Error: Sorry only SST{} is supported currently!'", ".", "format", "(", "size", ")", ")", "\n", "return", "\n", "\n", "", "base", "=", "config", "[", "'base_net'", "]", "\n", "extras", "=", "config", "[", "'extra_net'", "]", "\n", "final", "=", "config", "[", "'final_net'", "]", "\n", "\n", "return", "SST", "(", "phase", ",", "\n", "*", "selector", "(", "\n", "vgg", "(", "base", "[", "str", "(", "size", ")", "]", ",", "3", ")", ",", "\n", "add_extras", "(", "extras", "[", "str", "(", "size", ")", "]", ",", "1024", ")", "\n", ")", ",", "\n", "add_final", "(", "final", "[", "str", "(", "size", ")", "]", ")", ",", "\n", "use_gpu", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst_loss.SSTLoss.__init__": [[8, 12], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.__init__"], ["    ", "def", "__init__", "(", "self", ",", "use_gpu", "=", "config", "[", "'cuda'", "]", ")", ":", "\n", "        ", "super", "(", "SSTLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "use_gpu", "=", "use_gpu", "\n", "self", ".", "max_object", "=", "config", "[", "'max_object'", "]", "\n", "", "def", "forward", "(", "self", ",", "input", ",", "target", ",", "mask0", ",", "mask1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst_loss.SSTLoss.forward": [[12, 87], ["mask0.cuda.cuda.unsqueeze().repeat", "mask1.cuda.cuda.unsqueeze().repeat", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "mask_region.clone", "mask_region.clone", "input_pre.clone", "target.float.float.float", "target.float.float.sum", "target_pre.sum", "target_next.sum", "target_union.sum", "int", "int", "int", "target_pre.max", "input_pre.clone.max", "target_next.max", "input_next.max", "mask0.cuda.cuda.cuda", "mask1.cuda.cuda.cuda", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "int", "int", "mask0.cuda.cuda.unsqueeze", "mask1.cuda.cuda.unsqueeze", "target.float.float.byte", "mask_pre[].sum", "mask_next[].sum", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ",", "mask0", ",", "mask1", ")", ":", "\n", "\n", "        ", "mask_pre", "=", "mask0", "[", ":", ",", ":", ",", ":", "]", "\n", "mask_next", "=", "mask1", "[", ":", ",", ":", ",", ":", "]", "\n", "mask0", "=", "mask0", ".", "unsqueeze", "(", "3", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "self", ".", "max_object", "+", "1", ")", "\n", "mask1", "=", "mask1", ".", "unsqueeze", "(", "2", ")", ".", "repeat", "(", "1", ",", "1", ",", "self", ".", "max_object", "+", "1", ",", "1", ")", "\n", "mask0", "=", "Variable", "(", "mask0", ".", "data", ")", "\n", "mask1", "=", "Variable", "(", "mask1", ".", "data", ")", "\n", "target", "=", "Variable", "(", "target", ".", "byte", "(", ")", ".", "data", ")", "\n", "\n", "if", "self", ".", "use_gpu", ":", "\n", "            ", "mask0", "=", "mask0", ".", "cuda", "(", ")", "\n", "mask1", "=", "mask1", ".", "cuda", "(", ")", "\n", "\n", "", "mask_region", "=", "(", "mask0", "*", "mask1", ")", ".", "float", "(", ")", "# the valid position mask", "\n", "mask_region_pre", "=", "mask_region", ".", "clone", "(", ")", "#note: should use clone (fix this bug)", "\n", "mask_region_pre", "[", ":", ",", ":", ",", "self", ".", "max_object", ",", ":", "]", "=", "0", "\n", "mask_region_next", "=", "mask_region", ".", "clone", "(", ")", "#note: should use clone (fix this bug)", "\n", "mask_region_next", "[", ":", ",", ":", ",", ":", ",", "self", ".", "max_object", "]", "=", "0", "\n", "mask_region_union", "=", "mask_region_pre", "*", "mask_region_next", "\n", "\n", "input_pre", "=", "nn", ".", "Softmax", "(", "dim", "=", "3", ")", "(", "mask_region_pre", "*", "input", ")", "\n", "input_next", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "(", "mask_region_next", "*", "input", ")", "\n", "input_all", "=", "input_pre", ".", "clone", "(", ")", "\n", "input_all", "[", ":", ",", ":", ",", ":", "self", ".", "max_object", ",", ":", "self", ".", "max_object", "]", "=", "torch", ".", "max", "(", "input_pre", ",", "input_next", ")", "[", ":", ",", ":", ",", ":", "self", ".", "max_object", ",", ":", "self", ".", "max_object", "]", "\n", "# input_all[:, :, :self.max_object, :self.max_object] = ((input_pre + input_next)/2.0)[:, :, :self.max_object, :self.max_object]", "\n", "target", "=", "target", ".", "float", "(", ")", "\n", "target_pre", "=", "mask_region_pre", "*", "target", "\n", "target_next", "=", "mask_region_next", "*", "target", "\n", "target_union", "=", "mask_region_union", "*", "target", "\n", "target_num", "=", "target", ".", "sum", "(", ")", "\n", "target_num_pre", "=", "target_pre", ".", "sum", "(", ")", "\n", "target_num_next", "=", "target_next", ".", "sum", "(", ")", "\n", "target_num_union", "=", "target_union", ".", "sum", "(", ")", "\n", "#todo: remove the last row negative effect", "\n", "if", "int", "(", "target_num_pre", ".", "data", "[", "0", "]", ")", ":", "\n", "            ", "loss_pre", "=", "-", "(", "target_pre", "*", "torch", ".", "log", "(", "input_pre", ")", ")", ".", "sum", "(", ")", "/", "target_num_pre", "\n", "", "else", ":", "\n", "            ", "loss_pre", "=", "-", "(", "target_pre", "*", "torch", ".", "log", "(", "input_pre", ")", ")", ".", "sum", "(", ")", "\n", "", "if", "int", "(", "target_num_next", ".", "data", "[", "0", "]", ")", ":", "\n", "            ", "loss_next", "=", "-", "(", "target_next", "*", "torch", ".", "log", "(", "input_next", ")", ")", ".", "sum", "(", ")", "/", "target_num_next", "\n", "", "else", ":", "\n", "            ", "loss_next", "=", "-", "(", "target_next", "*", "torch", ".", "log", "(", "input_next", ")", ")", ".", "sum", "(", ")", "\n", "", "if", "int", "(", "target_num_pre", ".", "data", "[", "0", "]", ")", "and", "int", "(", "target_num_next", ".", "data", "[", "0", "]", ")", ":", "\n", "            ", "loss", "=", "-", "(", "target_pre", "*", "torch", ".", "log", "(", "input_all", ")", ")", ".", "sum", "(", ")", "/", "target_num_pre", "\n", "", "else", ":", "\n", "            ", "loss", "=", "-", "(", "target_pre", "*", "torch", ".", "log", "(", "input_all", ")", ")", ".", "sum", "(", ")", "\n", "\n", "", "if", "int", "(", "target_num_union", ".", "data", "[", "0", "]", ")", ":", "\n", "            ", "loss_similarity", "=", "(", "target_union", "*", "(", "torch", ".", "abs", "(", "(", "1", "-", "input_pre", ")", "-", "(", "1", "-", "input_next", ")", ")", ")", ")", ".", "sum", "(", ")", "/", "target_num", "\n", "", "else", ":", "\n", "            ", "loss_similarity", "=", "(", "target_union", "*", "(", "torch", ".", "abs", "(", "(", "1", "-", "input_pre", ")", "-", "(", "1", "-", "input_next", ")", ")", ")", ")", ".", "sum", "(", ")", "\n", "\n", "", "_", ",", "indexes_", "=", "target_pre", ".", "max", "(", "3", ")", "\n", "indexes_", "=", "indexes_", "[", ":", ",", ":", ",", ":", "-", "1", "]", "\n", "_", ",", "indexes_pre", "=", "input_all", ".", "max", "(", "3", ")", "\n", "indexes_pre", "=", "indexes_pre", "[", ":", ",", ":", ",", ":", "-", "1", "]", "\n", "mask_pre_num", "=", "mask_pre", "[", ":", ",", ":", ",", ":", "-", "1", "]", ".", "sum", "(", ")", ".", "data", "[", "0", "]", "\n", "if", "mask_pre_num", ":", "\n", "            ", "accuracy_pre", "=", "(", "indexes_pre", "[", "mask_pre", "[", ":", ",", ":", ",", ":", "-", "1", "]", "]", "==", "indexes_", "[", "mask_pre", "[", ":", ",", ":", ",", ":", "-", "1", "]", "]", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "mask_pre_num", "\n", "", "else", ":", "\n", "            ", "accuracy_pre", "=", "(", "indexes_pre", "[", "mask_pre", "[", ":", ",", ":", ",", ":", "-", "1", "]", "]", "==", "indexes_", "[", "mask_pre", "[", ":", ",", ":", ",", ":", "-", "1", "]", "]", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "+", "1", "\n", "\n", "", "_", ",", "indexes_", "=", "target_next", ".", "max", "(", "2", ")", "\n", "indexes_", "=", "indexes_", "[", ":", ",", ":", ",", ":", "-", "1", "]", "\n", "_", ",", "indexes_next", "=", "input_next", ".", "max", "(", "2", ")", "\n", "indexes_next", "=", "indexes_next", "[", ":", ",", ":", ",", ":", "-", "1", "]", "\n", "mask_next_num", "=", "mask_next", "[", ":", ",", ":", ",", ":", "-", "1", "]", ".", "sum", "(", ")", ".", "data", "[", "0", "]", "\n", "if", "mask_next_num", ":", "\n", "            ", "accuracy_next", "=", "(", "indexes_next", "[", "mask_next", "[", ":", ",", ":", ",", ":", "-", "1", "]", "]", "==", "indexes_", "[", "mask_next", "[", ":", ",", ":", ",", ":", "-", "1", "]", "]", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "/", "mask_next_num", "\n", "", "else", ":", "\n", "            ", "accuracy_next", "=", "(", "indexes_next", "[", "mask_next", "[", ":", ",", ":", ",", ":", "-", "1", "]", "]", "==", "indexes_", "[", "mask_next", "[", ":", ",", ":", ",", ":", "-", "1", "]", "]", ")", ".", "float", "(", ")", ".", "sum", "(", ")", "+", "1", "\n", "\n", "", "return", "loss_pre", ",", "loss_next", ",", "loss_similarity", ",", "(", "loss_pre", "+", "loss_next", "+", "loss", "+", "loss_similarity", ")", "/", "4.0", ",", "accuracy_pre", ",", "accuracy_next", ",", "(", "accuracy_pre", "+", "accuracy_next", ")", "/", "2.0", ",", "indexes_pre", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.layer.sst_loss.SSTLoss.getProperty": [[88, 90], ["sst_loss.SSTLoss.forward"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst_loss.SSTLoss.forward"], ["", "def", "getProperty", "(", "self", ",", "input", ",", "target", ",", "mask0", ",", "mask1", ")", ":", "\n", "        ", "return", "self", ".", "forward", "(", "input", ",", "target", ",", "mask0", ",", "mask1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.init": [[42, 72], ["print", "print", "cv2.imread", "cv2.imread", "compare_tools.CompareTools.convert_image", "compare_tools.CompareTools.convert_image", "numpy.concatenate", "numpy.copy", "print", "layer.sst.build_sst", "print", "ValueError", "CompareTools.sst.load_state_dict", "CompareTools.sst.cuda", "CompareTools.sst.load_state_dict", "os.path.exists", "os.path.exists", "os.path.exists", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_image", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_image", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.build_sst"], ["@", "staticmethod", "\n", "def", "init", "(", "img1_path", ",", "img2_path", ",", "model_path", ",", "cuda", ")", ":", "\n", "        ", "print", "(", "'start init >>>>>>>>>>>>>>'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "img1_path", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "img2_path", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "model_path", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"input parameter not right\"", ")", "\n", "\n", "", "CompareTools", ".", "cuda", "=", "cuda", "\n", "\n", "print", "(", "'load image...'", ")", "\n", "# load image", "\n", "CompareTools", ".", "img1", "=", "cv2", ".", "imread", "(", "img1_path", ")", "\n", "CompareTools", ".", "img2", "=", "cv2", ".", "imread", "(", "img2_path", ")", "\n", "CompareTools", ".", "img1_convert", "=", "CompareTools", ".", "convert_image", "(", "CompareTools", ".", "img1", ",", "CompareTools", ".", "cuda", ")", "\n", "CompareTools", ".", "img2_convert", "=", "CompareTools", ".", "convert_image", "(", "CompareTools", ".", "img2", ",", "CompareTools", ".", "cuda", ")", "\n", "CompareTools", ".", "img", "=", "np", ".", "concatenate", "(", "[", "CompareTools", ".", "img1", ",", "CompareTools", ".", "img2", "]", ",", "axis", "=", "0", ")", "\n", "CompareTools", ".", "img_org", "=", "np", ".", "copy", "(", "CompareTools", ".", "img", ")", "\n", "\n", "print", "(", "'load model...'", ")", "\n", "# load net", "\n", "CompareTools", ".", "sst", "=", "build_sst", "(", "'test'", ",", "900", ",", "CompareTools", ".", "cuda", ")", "\n", "if", "cuda", ":", "\n", "            ", "cudnn", ".", "benchmark", "=", "True", "\n", "CompareTools", ".", "sst", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "model_path", ")", "\n", ")", "\n", "CompareTools", ".", "sst", "=", "CompareTools", ".", "sst", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "CompareTools", ".", "sst", ".", "load_state_dict", "(", "torch", ".", "load", "(", "model_path", ")", ")", "\n", "\n", "", "print", "(", "'finish init <<<<<<<<<<<<'", ")", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.convert_image": [[72, 87], ["cv2.resize().astype", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "image.permute.permute.permute", "image.permute.permute.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cv2.resize", "image.permute.permute.cuda"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "convert_image", "(", "image", ",", "cuda", ")", ":", "\n", "        ", "'''\n        transform image to the FloatTensor (1, 3,size, size)\n        :param image: same as update parameter\n        :return: the transformed image FloatTensor (i.e. 1x3x900x900)\n        '''", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "900", ",", "900", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image", "-=", "(", "104", ",", "117", ",", "123", ")", "\n", "image", "=", "torch", ".", "FloatTensor", "(", "image", ")", "\n", "image", "=", "image", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "image", ".", "unsqueeze_", "(", "dim", "=", "0", ")", "\n", "if", "cuda", ":", "\n", "            ", "return", "Variable", "(", "image", ".", "cuda", "(", ")", ")", "\n", "", "return", "Variable", "(", "image", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.convert_boxes": [[88, 100], ["numpy.array", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().float.cuda", "torch.from_numpy().float.cuda", "torch.from_numpy().float.astype", "torch.from_numpy().float.astype"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "convert_boxes", "(", "boxes", ")", ":", "\n", "        ", "boxes", "=", "np", ".", "array", "(", "boxes", ")", "\n", "center", "=", "(", "boxes", "[", ":", ",", "0", ":", "2", "]", "+", "boxes", "[", ":", ",", "2", ":", "4", "]", ")", "-", "1.0", "\n", "center", "=", "torch", ".", "from_numpy", "(", "center", ".", "astype", "(", "float", ")", ")", ".", "float", "(", ")", "\n", "center", ".", "unsqueeze_", "(", "0", ")", "\n", "center", ".", "unsqueeze_", "(", "2", ")", "\n", "center", ".", "unsqueeze_", "(", "3", ")", "\n", "\n", "if", "CompareTools", ".", "cuda", ":", "\n", "            ", "return", "Variable", "(", "center", ".", "cuda", "(", ")", ")", "\n", "", "return", "Variable", "(", "center", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.select_object": [[101, 123], ["tuple", "cv2.rectangle", "cv2.rectangle", "str", "tuple", "numpy.random.rand", "len", "numpy.random.rand"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "select_object", "(", "event", ",", "x", ",", "y", ",", "flag", ",", "param", ")", ":", "\n", "        ", "global", "ix", ",", "iy", "\n", "\n", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "if", "event", "==", "cv2", ".", "EVENT_LBUTTONDOWN", ":", "\n", "            ", "CompareTools", ".", "drawing", "=", "True", "\n", "ix", ",", "iy", "=", "x", ",", "y", "\n", "", "elif", "event", "==", "cv2", ".", "EVENT_MOUSEMOVE", ":", "\n", "            ", "if", "CompareTools", ".", "drawing", "==", "True", ":", "\n", "                ", "cv2", ".", "rectangle", "(", "CompareTools", ".", "img", ",", "(", "ix", ",", "iy", ")", ",", "(", "x", ",", "y", ")", ",", "color", ",", "2", ")", "\n", "\n", "", "", "elif", "event", "==", "cv2", ".", "EVENT_LBUTTONUP", ":", "\n", "            ", "CompareTools", ".", "drawing", "=", "False", "\n", "cv2", ".", "rectangle", "(", "CompareTools", ".", "img", ",", "(", "ix", ",", "iy", ")", ",", "(", "x", ",", "y", ")", ",", "color", ",", "2", ")", "\n", "\n", "CompareTools", ".", "save_objects", "[", "'rect'", "]", "+=", "[", "(", "\n", "(", "ix", ",", "iy", ")", ",", "\n", "(", "x", ",", "y", ")", ",", "\n", "str", "(", "len", "(", "CompareTools", ".", "save_objects", "[", "'rect'", "]", ")", ")", ",", "\n", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", ")", "]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.draw": [[125, 135], ["cv2.rectangle", "cv2.putText", "int", "int", "int", "int"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "draw", "(", "img", ")", ":", "\n", "        ", "boxes", "=", "CompareTools", ".", "save_objects", "[", "'rect'", "]", "\n", "for", "b", "in", "boxes", ":", "\n", "            ", "start", "=", "(", "int", "(", "b", "[", "0", "]", "[", "0", "]", "/", "CompareTools", ".", "resize_rate", ")", ",", "int", "(", "b", "[", "0", "]", "[", "1", "]", "/", "CompareTools", ".", "resize_rate", ")", ")", "\n", "end", "=", "(", "int", "(", "b", "[", "1", "]", "[", "0", "]", "/", "CompareTools", ".", "resize_rate", ")", ",", "int", "(", "b", "[", "1", "]", "[", "1", "]", "/", "CompareTools", ".", "resize_rate", ")", ")", "\n", "text", "=", "b", "[", "2", "]", "\n", "cv2", ".", "rectangle", "(", "img", ",", "start", ",", "end", ",", "b", "[", "3", "]", ",", "3", ")", "\n", "cv2", ".", "putText", "(", "img", ",", "text", ",", "start", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "b", "[", "3", "]", ",", "2", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.get_similarity": [[136, 156], ["list", "compare_tools.CompareTools.convert_boxes", "compare_tools.CompareTools.convert_boxes", "CompareTools.sst.get_similarity", "map", "list", "list", "float", "float", "float", "float"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.convert_boxes", "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.convert_boxes", "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.get_similarity"], ["", "@", "staticmethod", "\n", "def", "get_similarity", "(", ")", ":", "\n", "        ", "h", ",", "w", ",", "_", "=", "CompareTools", ".", "img1", ".", "shape", "\n", "boxes", "=", "[", "list", "(", "b", "[", "0", "]", ")", "+", "list", "(", "b", "[", "1", "]", ")", "for", "b", "in", "CompareTools", ".", "save_objects", "[", "'rect'", "]", "]", "\n", "\n", "def", "convert_box", "(", "x", ")", ":", "\n", "            ", "x", "[", "0", "]", "/=", "float", "(", "w", ")", "*", "CompareTools", ".", "resize_rate", "\n", "x", "[", "2", "]", "/=", "float", "(", "w", ")", "*", "CompareTools", ".", "resize_rate", "\n", "x", "[", "1", "]", "/=", "float", "(", "h", ")", "*", "CompareTools", ".", "resize_rate", "\n", "x", "[", "3", "]", "/=", "float", "(", "h", ")", "*", "CompareTools", ".", "resize_rate", "\n", "return", "x", "\n", "\n", "", "boxes", "=", "list", "(", "map", "(", "convert_box", ",", "boxes", ")", ")", "\n", "boxes1", "=", "[", "b", "for", "b", "in", "boxes", "if", "b", "[", "1", "]", "<", "1", "]", "\n", "boxes2", "=", "[", "[", "b", "[", "0", "]", ",", "b", "[", "1", "]", "-", "1", ",", "b", "[", "2", "]", ",", "b", "[", "3", "]", "-", "1", "]", "for", "b", "in", "boxes", "if", "b", "[", "1", "]", ">=", "1", "]", "\n", "\n", "boxes1", "=", "CompareTools", ".", "convert_boxes", "(", "boxes1", ")", "\n", "boxes2", "=", "CompareTools", ".", "convert_boxes", "(", "boxes2", ")", "\n", "\n", "return", "CompareTools", ".", "sst", ".", "get_similarity", "(", "CompareTools", ".", "img1_convert", ",", "boxes1", ",", "CompareTools", ".", "img2_convert", ",", "boxes2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.run": [[157, 188], ["print", "cv2.namedWindow", "cv2.setMouseCallback", "compare_tools.CompareTools.draw", "cv2.resize", "cv2.imshow", "cv2.waitKey", "numpy.copy", "print", "int", "int", "print", "print", "compare_tools.CompareTools.get_similarity", "print"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.draw", "home.repos.pwc.inspect_result.shijieS_SST.tools.compare_tools.CompareTools.get_similarity"], ["", "@", "staticmethod", "\n", "def", "run", "(", ")", ":", "\n", "        ", "print", "(", "'''\n        select the rectangle, and press the following key for more function:\n        'd': delete the latest rectangle\n        'D': delete all the rectangles\n        'c': calculate the similarity matrix\n        '''", ")", "\n", "h", ",", "w", ",", "_", "=", "CompareTools", ".", "img", ".", "shape", "\n", "# start draw", "\n", "title", "=", "\"images(left is previous, right is current)\"", "\n", "cv2", ".", "namedWindow", "(", "title", ")", "\n", "cv2", ".", "setMouseCallback", "(", "title", ",", "CompareTools", ".", "select_object", ")", "\n", "\n", "while", "(", "1", ")", ":", "\n", "            ", "CompareTools", ".", "img", "=", "CompareTools", ".", "draw", "(", "np", ".", "copy", "(", "CompareTools", ".", "img_org", ")", ")", "\n", "CompareTools", ".", "img", "=", "cv2", ".", "resize", "(", "CompareTools", ".", "img", ",", "(", "int", "(", "CompareTools", ".", "resize_rate", "*", "w", ")", ",", "int", "(", "CompareTools", ".", "resize_rate", "*", "h", ")", ")", ")", "\n", "cv2", ".", "imshow", "(", "title", ",", "CompareTools", ".", "img", ")", "\n", "key", "=", "cv2", ".", "waitKey", "(", "20", ")", "\n", "if", "key", "==", "100", ":", "#    'd'", "\n", "                ", "CompareTools", ".", "save_objects", "[", "'rect'", "]", "=", "CompareTools", ".", "save_objects", "[", "'rect'", "]", "[", ":", "-", "1", "]", "\n", "print", "(", "'delete the latest box!'", ")", "\n", "", "elif", "key", "==", "68", ":", "#   'D'", "\n", "                ", "CompareTools", ".", "save_objects", "[", "'rect'", "]", "=", "[", "]", "\n", "print", "(", "'delete all boxes'", ")", "\n", "", "elif", "key", "==", "99", ":", "#   'c'", "\n", "                ", "print", "(", "'start calculate the similarity!'", ")", "\n", "s", "=", "CompareTools", ".", "get_similarity", "(", ")", "\n", "print", "(", "s", ")", "\n", "", "if", "key", "&", "0xFF", "==", "27", ":", "\n", "                ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.convert_mat_2_ua.ConvertMat2UA.run": [[21, 66], ["print", "os.path.join", "print", "os.path.join", "print", "enumerate", "print", "os.path.exists", "FileNotFoundError", "os.path.exists", "FileNotFoundError", "os.path.exists", "os.mkdir", "os.path.join", "print", "os.path.join", "enumerate", "numpy.array", "numpy.savetxt", "os.listdir", "zip", "enumerate", "zip", "os.path.splitext", "os.path.splitext", "scipy.loadmat", "os.path.basename"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "run", "(", "root", ",", "mat_folder_name", ")", ":", "\n", "        ", "print", "(", "'read files >>>>>>>>>>>>>'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "root", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "'cannot find file '", "+", "root", ")", "\n", "\n", "", "mat_folder", "=", "os", ".", "path", ".", "join", "(", "root", ",", "mat_folder_name", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "mat_folder", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "'cannot find file '", "+", "mat_folder", ")", "\n", "\n", "", "print", "(", "'create gt folder'", ")", "\n", "\n", "gt_folder", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'gt'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "gt_folder", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "gt_folder", ")", "\n", "\n", "", "print", "(", "'search mat'", ")", "\n", "\n", "mat_files_name", "=", "[", "f", "for", "f", "in", "os", ".", "listdir", "(", "mat_folder", ")", "if", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "1", "]", "==", "'.mat'", "]", "\n", "mat_files_full_name", "=", "[", "os", ".", "path", ".", "join", "(", "mat_folder", ",", "f", ")", "for", "f", "in", "mat_files_name", "]", "\n", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "mat_files_full_name", ")", ":", "\n", "            ", "print", "(", "'process :'", ",", "f", ",", "'>>>>>'", ")", "\n", "\n", "file_name", "=", "os", ".", "path", ".", "join", "(", "gt_folder", ",", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "f", ")", ")", "[", "0", "]", "+", "'.txt'", ")", "\n", "\n", "mat", "=", "scio", ".", "loadmat", "(", "f", ")", "[", "'gtInfo'", "]", "[", "0", "]", "[", "0", "]", "\n", "\n", "X", "=", "mat", "[", "0", "]", "\n", "Y", "=", "mat", "[", "1", "]", "\n", "H", "=", "mat", "[", "2", "]", "\n", "W", "=", "mat", "[", "3", "]", "\n", "\n", "res", "=", "[", "]", "\n", "for", "trackId", ",", "(", "xc", ",", "yc", ",", "hc", ",", "wc", ")", "in", "enumerate", "(", "zip", "(", "X", ".", "T", ",", "Y", ".", "T", ",", "H", ".", "T", ",", "W", ".", "T", ")", ")", ":", "\n", "                ", "for", "frameId", ",", "(", "x", ",", "y", ",", "h", ",", "w", ")", "in", "enumerate", "(", "zip", "(", "xc", ",", "yc", ",", "hc", ",", "wc", ")", ")", ":", "\n", "                    ", "if", "x", "!=", "0", "and", "y", "!=", "0", "and", "h", "!=", "0", "and", "w", "!=", "0", ":", "\n", "                        ", "res", "+=", "[", "[", "frameId", ",", "trackId", ",", "x", "-", "w", "/", "2.0", ",", "y", "-", "h", ",", "x", "+", "w", "/", "2.0", ",", "y", "]", "]", "\n", "\n", "", "", "", "res", "=", "np", ".", "array", "(", "res", ")", "\n", "\n", "np", ".", "savetxt", "(", "file_name", ",", "res", ",", "delimiter", "=", "','", ",", "fmt", "=", "\"%d,%d,%1.2f,%1.2f,%1.2f,%1.2f\"", ")", "\n", "\n", "", "print", "(", "'=================Well Done================='", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_detection_player.show_rectangle": [[19, 23], ["tuple", "cv2.rectangle", "tuple", "tuple", "numpy.random.rand"], "function", ["None"], ["def", "show_rectangle", "(", "image", ",", "box", ")", ":", "\n", "    ", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "image", "=", "cv2", ".", "rectangle", "(", "image", ",", "tuple", "(", "box", "[", ":", "2", "]", ")", ",", "tuple", "(", "box", "[", "2", ":", "4", "]", ")", ",", "color", ",", "2", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_detection_player.play": [[24, 66], ["print", "print", "print", "os.path.join", "sorted", "os.path.join", "sorted", "zip", "os.path.join", "data.kitti_detection_data_reader.KITTIDataReader", "range", "os.path.join", "os.path.join", "len", "data[].astype", "cv2.imshow", "cv2.waitKey", "os.listdir", "os.listdir", "os.path.exists", "os.path.exists", "kitti_detection_player.show_rectangle"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_detection_player.show_rectangle"], ["", "def", "play", "(", ")", ":", "\n", "# 1. show the information", "\n", "    ", "print", "(", "'====================='", ")", "\n", "print", "(", "'play the rectangles.'", ")", "\n", "print", "(", "'====================='", ")", "\n", "\n", "# 2. read all folders in image_root", "\n", "image_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "kitti_image_root", ",", "args", ".", "type", ",", "'image_02'", ")", "\n", "all_image_folders", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "d", ")", "for", "d", "in", "os", ".", "listdir", "(", "image_root", ")", "]", "\n", ")", "\n", "\n", "# 3. read all files in detection_root", "\n", "detection_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "kitti_detection_root", ",", "args", ".", "type", ",", "'det_02'", ")", "\n", "all_detection_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "detection_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "detection_root", ")", "]", "\n", ")", "\n", "\n", "# 4. for each item in image_root create a reader", "\n", "for", "image_folder", ",", "detection_file", "in", "zip", "(", "all_image_folders", ",", "all_detection_files", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "image_folder", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "detection_file", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "image_file_format", "=", "os", ".", "path", ".", "join", "(", "image_folder", ",", "'{0:04}.png'", ")", "\n", "\n", "# 4.1 create a reader", "\n", "reader", "=", "KITTIDataReader", "(", "image_folder", ",", "detection_file", ")", "\n", "# 4.2 read all the item from the reader", "\n", "for", "i", "in", "range", "(", "len", "(", "reader", ")", ")", ":", "\n", "# 4.2.1 read the detection", "\n", "            ", "image", ",", "data", "=", "reader", "[", "i", "]", "\n", "if", "data", "is", "None", "or", "image", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "# 4.2.2 show rectangles", "\n", "", "dets", "=", "data", "[", ":", ",", "6", ":", "10", "]", ".", "astype", "(", "int", ")", "\n", "\n", "for", "d", "in", "dets", ":", "\n", "                ", "image", "=", "show_rectangle", "(", "image", ",", "d", ")", "\n", "\n", "", "cv2", ".", "imshow", "(", "'kitti tracking player'", ",", "image", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_track_player.Track.__init__": [[87, 92], ["list", "tuple", "numpy.random.rand"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "id", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "boxes", "=", "list", "(", ")", "\n", "self", ".", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "self", ".", "id", "=", "id", "\n", "self", ".", "age", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_track_player.Track.add_box": [[93, 99], ["ua_track_player.Track.boxes.append", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "add_box", "(", "self", ",", "b", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "boxes", ")", "==", "args", ".", "max_boxes", ":", "\n", "            ", "del", "self", ".", "boxes", "[", "0", "]", "\n", "\n", "", "self", ".", "boxes", ".", "append", "(", "b", ")", "\n", "self", ".", "age", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_track_player.Track.one_frame_pass": [[100, 102], ["None"], "methods", ["None"], ["", "def", "one_frame_pass", "(", "self", ")", ":", "\n", "        ", "self", ".", "age", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_track_player.Track.show": [[103, 116], ["zip", "cv2.rectangle", "len", "tuple", "tuple", "cv2.line", "tuple", "tuple", "tuple", "tuple"], "methods", ["None"], ["", "def", "show", "(", "self", ",", "image", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "boxes", ")", "==", "0", ":", "\n", "            ", "return", "image", "\n", "\n", "", "for", "b_next", ",", "b_pre", "in", "zip", "(", "self", ".", "boxes", "[", "1", ":", "]", ",", "self", ".", "boxes", ")", ":", "\n", "            ", "p_pre", "=", "tuple", "(", "(", "(", "b_pre", "[", ":", "2", "]", "+", "b_pre", "[", "2", ":", "]", ")", "/", "2", ")", ".", "astype", "(", "int", ")", ")", "\n", "p_next", "=", "tuple", "(", "(", "(", "b_next", "[", ":", "2", "]", "+", "b_next", "[", "2", ":", "]", ")", "/", "2", ")", ".", "astype", "(", "int", ")", ")", "\n", "image", "=", "cv2", ".", "line", "(", "image", ",", "tuple", "(", "p_pre", ")", ",", "tuple", "(", "p_next", ")", ",", "self", ".", "color", ",", "2", ")", "\n", "\n", "", "b", "=", "self", ".", "boxes", "[", "-", "1", "]", "\n", "image", "=", "cv2", ".", "rectangle", "(", "image", ",", "tuple", "(", "b", "[", ":", "2", "]", ")", ",", "tuple", "(", "b", "[", "2", ":", "4", "]", ")", ",", "self", ".", "color", ",", "2", ")", "\n", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_track_player.Tracks.__init__": [[119, 121], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "tracks", "=", "list", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_track_player.Tracks.show": [[122, 127], ["t.show"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show"], ["", "def", "show", "(", "self", ",", "image", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "age", "==", "1", ":", "\n", "                ", "image", "=", "t", ".", "show", "(", "image", ")", "\n", "", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_track_player.Tracks.add_box": [[128, 139], ["ua_track_player.Track", "ua_track_player.Track.add_box", "ua_track_player.Tracks.tracks.append", "ua_track_player.Track.add_box"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.add_box", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.add_box"], ["", "def", "add_box", "(", "self", ",", "box", ",", "id", ")", ":", "\n", "        ", "box_add", "=", "False", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "id", "==", "id", ":", "\n", "                ", "t", ".", "add_box", "(", "box", ")", "\n", "box_add", "=", "True", "\n", "break", "\n", "", "", "if", "not", "box_add", ":", "\n", "            ", "t", "=", "Track", "(", "id", ")", "\n", "t", ".", "add_box", "(", "box", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_track_player.Tracks.one_frame_pass": [[140, 149], ["list", "enumerate", "reversed", "t.one_frame_pass", "list.append"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.one_frame_pass", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "", "def", "one_frame_pass", "(", "self", ")", ":", "\n", "        ", "del_indexes", "=", "list", "(", ")", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "            ", "t", ".", "one_frame_pass", "(", ")", "\n", "if", "t", ".", "age", ">", "args", ".", "max_age", ":", "\n", "                ", "del_indexes", ".", "append", "(", "i", ")", "\n", "\n", "", "", "for", "i", "in", "reversed", "(", "del_indexes", ")", ":", "\n", "            ", "del", "self", ".", "tracks", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_track_player.play": [[20, 84], ["print", "print", "print", "os.path.join", "sorted", "os.path.join", "sorted", "os.path.join", "sorted", "zip", "ignore_file_base_name.index", "print", "data.ua_tracking_data_reader.UADataReader", "ua_track_player.Tracks", "range", "os.path.join", "os.path.join", "os.path.join", "os.path.basename", "os.path.basename", "len", "data[].astype", "zip", "ua_track_player.Tracks.one_frame_pass", "ua_track_player.Tracks.show", "cv2.imshow", "cv2.waitKey", "os.listdir", "os.listdir", "os.listdir", "os.path.exists", "os.path.exists", "os.path.exists", "ua_track_player.Tracks.add_box", "cv2.rectangle", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.one_frame_pass", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show", "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.add_box"], ["def", "play", "(", ")", ":", "\n", "# 1. show the information", "\n", "    ", "print", "(", "'====================='", ")", "\n", "print", "(", "'play the the tracking result now.'", ")", "\n", "print", "(", "'====================='", ")", "\n", "\n", "# 2. read all folders in image_root", "\n", "image_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "args", ".", "image_folder_name", ")", "\n", "all_image_folders", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "d", ")", "for", "d", "in", "os", ".", "listdir", "(", "image_root", ")", "]", "\n", ")", "\n", "\n", "# 3. read all files in detection_root", "\n", "detection_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "args", ".", "gt_folder_name", ")", "\n", "all_detection_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "detection_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "detection_root", ")", "]", "\n", ")", "\n", "\n", "# 3.1 read all ignore files in igrs_root", "\n", "igrs_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "args", ".", "igrs_folder_name", ")", "\n", "all_igrs_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "igrs_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "igrs_root", ")", "]", "\n", ")", "\n", "\n", "ignore_file_base_name", "=", "[", "os", ".", "path", ".", "basename", "(", "f", ")", "[", ":", "-", "8", "]", "for", "f", "in", "all_igrs_files", "]", "\n", "\n", "# 4. for each item in image_root create a reader", "\n", "for", "image_folder", ",", "detection_file", "in", "zip", "(", "all_image_folders", ",", "all_detection_files", ")", ":", "\n", "        ", "i", "=", "ignore_file_base_name", ".", "index", "(", "os", ".", "path", ".", "basename", "(", "image_folder", ")", ")", "\n", "igrs_file", "=", "all_igrs_files", "[", "i", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "image_folder", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "detection_file", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "igrs_file", ")", ":", "\n", "            ", "continue", "\n", "", "print", "(", "'processing '", ",", "image_folder", ",", "'>>>>>>>>>>>>>>>>>>'", ")", "\n", "# 4.1 create a reader", "\n", "reader", "=", "UADataReader", "(", "image_folder", ",", "detection_file", ",", "igrs_file", ")", "\n", "trackers", "=", "Tracks", "(", ")", "\n", "# 4.2 read all the item from the reader", "\n", "for", "i", "in", "range", "(", "len", "(", "reader", ")", ")", ":", "\n", "# 4.2.1 read the detection", "\n", "            ", "image", ",", "data", "=", "reader", "[", "i", "]", "\n", "if", "data", "is", "None", "or", "image", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "# 4.2.2 update tracks", "\n", "", "dets", "=", "data", "[", ":", ",", "2", ":", "6", "]", ".", "astype", "(", "int", ")", "\n", "ids", "=", "data", "[", ":", ",", "1", "]", "\n", "\n", "for", "id", ",", "d", "in", "zip", "(", "ids", ",", "dets", ")", ":", "\n", "                ", "if", "id", "==", "-", "1", ":", "\n", "                    ", "continue", "\n", "", "trackers", ".", "add_box", "(", "d", ",", "id", ")", "\n", "\n", "", "trackers", ".", "one_frame_pass", "(", ")", "\n", "\n", "# 4.2.3 show the trackers", "\n", "image", "=", "trackers", ".", "show", "(", "image", ")", "\n", "\n", "if", "args", ".", "show_ignore_rect", ":", "\n", "                ", "for", "r", "in", "reader", ".", "ignore", ":", "\n", "                    ", "image", "=", "cv2", ".", "rectangle", "(", "image", ",", "(", "int", "(", "r", "[", "0", "]", ")", ",", "int", "(", "r", "[", "1", "]", ")", ")", ",", "(", "int", "(", "r", "[", "2", "]", ")", ",", "int", "(", "r", "[", "3", "]", ")", ")", ",", "(", "255", ",", "255", ",", "255", ")", ",", "2", ")", "\n", "\n", "", "", "cv2", ".", "imshow", "(", "'ua tracking player'", ",", "image", ")", "\n", "cv2", ".", "waitKey", "(", "25", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.convert_mot_result_2_ua_result.ConvertTools.init": [[25, 109], ["os.path.join", "os.listdir", "list", "numpy.savetxt", "os.listdir", "numpy.savetxt", "os.path.exists", "FileNotFoundError", "os.path.exists", "os.mkdir", "os.path.join", "filter", "os.path.join", "sorted", "os.path.join", "os.path.join", "max", "os.listdir", "os.path.basename", "os.path.exists", "os.mkdir", "os.path.join", "list", "print", "numpy.loadtxt", "numpy.loadtxt", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.savetxt", "numpy.savetxt", "numpy.savetxt", "numpy.savetxt", "numpy.savetxt", "os.path.splitext", "os.listdir", "os.path.isdir", "os.listdir", "filter", "os.path.join", "len", "numpy.savetxt", "numpy.savetxt", "numpy.savetxt", "numpy.savetxt", "numpy.savetxt", "len", "numpy.expand_dims", "max", "ua_file.format", "ua_file.format", "ua_file.format", "ua_file.format", "ua_file.format", "os.path.basename", "numpy.loadtxt", "ua_file.format", "ua_file.format", "ua_file.format", "ua_file.format", "ua_file.format", "os.path.splitext", "os.path.join", "os.path.splitext", "os.path.splitext", "os.path.splitext", "os.path.isfile", "os.path.basename", "os.path.basename", "os.path.basename"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "init", "(", "mot_folder", ",", "ua_folder", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "mot_folder", ")", ":", "\n", "            ", "raise", "FileNotFoundError", "(", "'cannot find {}'", ".", "format", "(", "mot_folder", ")", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "ua_folder", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "ua_folder", ")", "\n", "\n", "\n", "# get all the videos' frame number from 0.0 folder", "\n", "", "frame_number", "=", "{", "}", "\n", "path00", "=", "os", ".", "path", ".", "join", "(", "mot_folder", ",", "'0.0'", ")", "\n", "files00", "=", "os", ".", "listdir", "(", "path00", ")", "\n", "for", "f", "in", "files00", ":", "\n", "            ", "if", "'speed'", "not", "in", "f", ":", "\n", "                ", "frame_number", "[", "os", ".", "path", ".", "splitext", "(", "f", ")", "[", "0", "]", "]", "=", "max", "(", "np", ".", "loadtxt", "(", "os", ".", "path", ".", "join", "(", "path00", ",", "f", ")", ",", "dtype", "=", "int", ")", "[", ":", ",", "0", "]", ")", "\n", "\n", "\n", "\n", "# get all directory in mot_folder path", "\n", "", "", "threshold_folder", "=", "[", "os", ".", "path", ".", "join", "(", "mot_folder", ",", "d", ")", "for", "d", "in", "os", ".", "listdir", "(", "mot_folder", ")", "]", "\n", "threshold_folder", "=", "list", "(", "filter", "(", "lambda", "f", ":", "os", ".", "path", ".", "isdir", "(", "f", ")", ",", "threshold_folder", ")", ")", "\n", "for", "folder", "in", "threshold_folder", ":", "\n", "            ", "ua_threshold_folder", "=", "os", ".", "path", ".", "join", "(", "ua_folder", ",", "os", ".", "path", ".", "basename", "(", "folder", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "ua_threshold_folder", ")", ":", "\n", "                ", "os", ".", "mkdir", "(", "ua_threshold_folder", ")", "\n", "# list all the files", "\n", "", "files", "=", "[", "os", ".", "path", ".", "join", "(", "folder", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "folder", ")", "]", "\n", "files", "=", "sorted", "(", "list", "(", "filter", "(", "lambda", "f", ":", "os", ".", "path", ".", "isfile", "(", "f", ")", "and", "'speed'", "not", "in", "os", ".", "path", ".", "basename", "(", "f", ")", ",", "files", ")", ")", ")", "\n", "for", "file", "in", "files", ":", "\n", "                ", "print", "(", "'process: {}====>'", ".", "format", "(", "file", ")", ")", "\n", "ua_file", "=", "os", ".", "path", ".", "join", "(", "ua_threshold_folder", ",", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "file", ")", ")", "[", "0", "]", ")", "+", "\"_{}.txt\"", "\n", "data", "=", "np", ".", "loadtxt", "(", "file", ",", "dtype", "=", "int", ")", "\n", "if", "len", "(", "data", ")", "==", "0", ":", "\n", "                    ", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'LX'", ")", ",", "[", "]", ",", "fmt", "=", "'%i'", ")", "\n", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'LY'", ")", ",", "[", "]", ",", "fmt", "=", "'%i'", ",", ")", "\n", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'W'", ")", ",", "[", "]", ",", "fmt", "=", "'%i'", ")", "\n", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'H'", ")", ",", "[", "]", ",", "fmt", "=", "'%i'", ")", "\n", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'speed'", ")", ",", "[", "]", ",", "fmt", "=", "'%f'", ")", "\n", "continue", "\n", "", "if", "len", "(", "data", ".", "shape", ")", "==", "1", ":", "\n", "                    ", "data", "=", "np", ".", "expand_dims", "(", "data", ",", "axis", "=", "0", ")", "\n", "\n", "", "data", "[", ":", ",", "0", "]", "=", "data", "[", ":", ",", "0", "]", "-", "1", "\n", "data", "[", ":", ",", "1", "]", "=", "data", "[", ":", ",", "1", "]", "-", "1", "\n", "# max_f = max(data[:, 0])+1", "\n", "max_f", "=", "frame_number", "[", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "file", ")", ")", "[", "0", "]", "]", "\n", "time", "=", "np", ".", "loadtxt", "(", "os", ".", "path", ".", "splitext", "(", "file", ")", "[", "0", "]", "+", "'-speed.txt'", ",", "dtype", "=", "float", ")", "\n", "if", "time", "==", "0", ":", "\n", "                    ", "speed", "=", "0", "\n", "", "else", ":", "\n", "                    ", "speed", "=", "max_f", "/", "time", "\n", "", "max_id", "=", "max", "(", "data", "[", ":", ",", "1", "]", ")", "+", "1", "\n", "ua_data_LX", "=", "np", ".", "zeros", "(", "(", "max_f", ",", "max_id", ")", ",", "dtype", "=", "int", ")", "\n", "ua_data_LY", "=", "np", ".", "zeros", "(", "(", "max_f", ",", "max_id", ")", ",", "dtype", "=", "int", ")", "\n", "ua_data_H", "=", "np", ".", "zeros", "(", "(", "max_f", ",", "max_id", ")", ",", "dtype", "=", "int", ")", "\n", "ua_data_W", "=", "np", ".", "zeros", "(", "(", "max_f", ",", "max_id", ")", ",", "dtype", "=", "int", ")", "\n", "\n", "for", "row", "in", "data", ":", "\n", "                    ", "r", "=", "row", "[", "0", "]", "\n", "c", "=", "row", "[", "1", "]", "\n", "ua_data_LX", "[", "r", ",", "c", "]", "=", "row", "[", "2", "]", "\n", "ua_data_LY", "[", "r", ",", "c", "]", "=", "row", "[", "3", "]", "\n", "ua_data_W", "[", "r", ",", "c", "]", "=", "row", "[", "4", "]", "\n", "ua_data_H", "[", "r", ",", "c", "]", "=", "row", "[", "5", "]", "\n", "# if len(data) > 1:", "\n", "#     ua_data_LX[0, :] = ua_data_LX[1, :]", "\n", "#     ua_data_LY[0, :] = ua_data_LY[1, :]", "\n", "#     ua_data_W[0, :] = ua_data_W[1, :]", "\n", "#     ua_data_H[0, :] = ua_data_H[1, :]", "\n", "\n", "", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'LX'", ")", ",", "ua_data_LX", ",", "fmt", "=", "'%i'", ")", "\n", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'LY'", ")", ",", "ua_data_LY", ",", "fmt", "=", "'%i'", ",", ")", "\n", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'W'", ")", ",", "ua_data_W", ",", "fmt", "=", "'%i'", ")", "\n", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'H'", ")", ",", "ua_data_H", ",", "fmt", "=", "'%i'", ")", "\n", "np", ".", "savetxt", "(", "ua_file", ".", "format", "(", "'speed'", ")", ",", "[", "speed", "]", ",", "fmt", "=", "'%f'", ")", "\n", "\n", "# save sequence name file", "\n", "", "", "sequenceNames", "=", "[", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "f", ")", ")", "[", "0", "]", "for", "f", "in", "os", ".", "listdir", "(", "threshold_folder", "[", "0", "]", ")", "]", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "ua_folder", ",", "'sequences.txt'", ")", ",", "sequenceNames", ",", "fmt", "=", "'%s'", ",", "delimiter", "=", "'\\n'", ")", "\n", "\n", "# save threshold file name", "\n", "threshold", "=", "os", ".", "listdir", "(", "mot_folder", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "ua_folder", ",", "'thresh.txt'", ")", ",", "threshold", ",", "fmt", "=", "'%s'", ",", "delimiter", "=", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_remove_ignr_rect.isInIgnore": [[25, 43], ["None"], "function", ["None"], ["def", "isInIgnore", "(", "rect", ",", "ignoreRect", ")", ":", "\n", "    ", "'''\n    judge whether rect in ignore region\n    :param rect: rectangle\n    :return: true if in ignore, or false if not\n    '''", "\n", "for", "irec", "in", "ignore_rects", ":", "\n", "        ", "iL", "=", "irec", "[", "0", "]", "\n", "iT", "=", "irec", "[", "1", "]", "\n", "iR", "=", "irec", "[", "0", "]", "+", "irec", "[", "2", "]", "\n", "iB", "=", "irec", "[", "1", "]", "+", "irec", "[", "3", "]", "\n", "if", "rect", "[", "0", "]", ">", "iL", "and", "rect", "[", "0", "]", "<", "iR", "and", "rect", "[", "1", "]", ">", "iT", "and", "rect", "[", "1", "]", "<", "iB", "and", "rect", "[", "0", "]", "+", "rect", "[", "2", "]", ">", "iL", "and", "rect", "[", "0", "]", "+", "rect", "[", "2", "]", "<", "iR", "and", "rect", "[", "1", "]", "+", "rect", "[", "3", "]", ">", "iT", "and", "rect", "[", "1", "]", "+", "rect", "[", "3", "]", "<", "iB", ":", "\n", "            ", "return", "True", "\n", "\n", "", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Track.__init__": [[76, 81], ["list", "tuple", "numpy.random.rand"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "id", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "boxes", "=", "list", "(", ")", "\n", "self", ".", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "self", ".", "id", "=", "id", "\n", "self", ".", "age", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Track.add_box": [[82, 88], ["kitti_track_player.Track.boxes.append", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "add_box", "(", "self", ",", "b", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "boxes", ")", "==", "args", ".", "max_boxes", ":", "\n", "            ", "del", "self", ".", "boxes", "[", "0", "]", "\n", "\n", "", "self", ".", "boxes", ".", "append", "(", "b", ")", "\n", "self", ".", "age", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Track.one_frame_pass": [[89, 91], ["None"], "methods", ["None"], ["", "def", "one_frame_pass", "(", "self", ")", ":", "\n", "        ", "self", ".", "age", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Track.show": [[92, 105], ["zip", "cv2.rectangle", "len", "tuple", "tuple", "cv2.line", "tuple", "tuple", "tuple", "tuple"], "methods", ["None"], ["", "def", "show", "(", "self", ",", "image", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "boxes", ")", "==", "0", ":", "\n", "            ", "return", "image", "\n", "\n", "", "for", "b_next", ",", "b_pre", "in", "zip", "(", "self", ".", "boxes", "[", "1", ":", "]", ",", "self", ".", "boxes", ")", ":", "\n", "            ", "p_pre", "=", "tuple", "(", "(", "(", "b_pre", "[", ":", "2", "]", "+", "b_pre", "[", "2", ":", "]", ")", "/", "2", ")", ".", "astype", "(", "int", ")", ")", "\n", "p_next", "=", "tuple", "(", "(", "(", "b_next", "[", ":", "2", "]", "+", "b_next", "[", "2", ":", "]", ")", "/", "2", ")", ".", "astype", "(", "int", ")", ")", "\n", "image", "=", "cv2", ".", "line", "(", "image", ",", "tuple", "(", "p_pre", ")", ",", "tuple", "(", "p_next", ")", ",", "self", ".", "color", ",", "2", ")", "\n", "\n", "", "b", "=", "self", ".", "boxes", "[", "-", "1", "]", "\n", "image", "=", "cv2", ".", "rectangle", "(", "image", ",", "tuple", "(", "b", "[", ":", "2", "]", ")", ",", "tuple", "(", "b", "[", "2", ":", "4", "]", ")", ",", "self", ".", "color", ",", "2", ")", "\n", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.__init__": [[108, 110], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "tracks", "=", "list", "(", ")", "\n", "", "def", "show", "(", "self", ",", "image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.show": [[110, 115], ["t.show"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show"], ["", "def", "show", "(", "self", ",", "image", ")", ":", "\n", "        ", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "age", "==", "1", ":", "\n", "                ", "image", "=", "t", ".", "show", "(", "image", ")", "\n", "", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.add_box": [[116, 127], ["kitti_track_player.Track", "kitti_track_player.Track.add_box", "kitti_track_player.Tracks.tracks.append", "kitti_track_player.Track.add_box"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.add_box", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.add_box"], ["", "def", "add_box", "(", "self", ",", "box", ",", "id", ")", ":", "\n", "        ", "box_add", "=", "False", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "id", "==", "id", ":", "\n", "                ", "t", ".", "add_box", "(", "box", ")", "\n", "box_add", "=", "True", "\n", "break", "\n", "", "", "if", "not", "box_add", ":", "\n", "            ", "t", "=", "Track", "(", "id", ")", "\n", "t", ".", "add_box", "(", "box", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.one_frame_pass": [[128, 137], ["list", "enumerate", "reversed", "t.one_frame_pass", "list.append"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.one_frame_pass", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "", "def", "one_frame_pass", "(", "self", ")", ":", "\n", "        ", "del_indexes", "=", "list", "(", ")", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "            ", "t", ".", "one_frame_pass", "(", ")", "\n", "if", "t", ".", "age", ">", "args", ".", "max_age", ":", "\n", "                ", "del_indexes", ".", "append", "(", "i", ")", "\n", "\n", "", "", "for", "i", "in", "reversed", "(", "del_indexes", ")", ":", "\n", "            ", "del", "self", ".", "tracks", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.play": [[21, 72], ["print", "print", "print", "os.path.join", "sorted", "os.path.join", "sorted", "zip", "os.path.join", "data.kitti_tracking_data_reader.KITTITrackingDataReader", "kitti_track_player.Tracks", "range", "os.path.join", "os.path.join", "len", "data[].astype", "zip", "kitti_track_player.Tracks.one_frame_pass", "kitti_track_player.Tracks.show", "cv2.imshow", "cv2.waitKey", "os.listdir", "os.listdir", "os.path.exists", "os.path.exists", "kitti_track_player.Tracks.add_box"], "function", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.one_frame_pass", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show", "home.repos.pwc.inspect_result.shijieS_SST.tools.kitti_track_player.Tracks.add_box"], ["def", "play", "(", ")", ":", "\n", "# 1. show the information", "\n", "    ", "print", "(", "'====================='", ")", "\n", "print", "(", "'play the the tracking result now.'", ")", "\n", "print", "(", "'====================='", ")", "\n", "\n", "# 2. read all folders in image_root", "\n", "image_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "kitti_image_root", ",", "args", ".", "type", ",", "'image_02'", ")", "\n", "all_image_folders", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "d", ")", "for", "d", "in", "os", ".", "listdir", "(", "image_root", ")", "]", "\n", ")", "\n", "\n", "# 3. read all files in detection_root", "\n", "detection_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "kitti_detection_root", ",", "args", ".", "type", ",", "'label_02'", ")", "\n", "all_detection_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "detection_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "detection_root", ")", "]", "\n", ")", "\n", "\n", "# 4. for each item in image_root create a reader", "\n", "for", "image_folder", ",", "detection_file", "in", "zip", "(", "all_image_folders", ",", "all_detection_files", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "image_folder", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "detection_file", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "image_file_format", "=", "os", ".", "path", ".", "join", "(", "image_folder", ",", "'{0:04}.png'", ")", "\n", "\n", "# 4.1 create a reader", "\n", "reader", "=", "KITTITrackingDataReader", "(", "image_folder", ",", "detection_file", ")", "\n", "trackers", "=", "Tracks", "(", ")", "\n", "# 4.2 read all the item from the reader", "\n", "for", "i", "in", "range", "(", "len", "(", "reader", ")", ")", ":", "\n", "# 4.2.1 read the detection", "\n", "            ", "image", ",", "data", "=", "reader", "[", "i", "]", "\n", "if", "data", "is", "None", "or", "image", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "# 4.2.2 update tracks", "\n", "", "dets", "=", "data", "[", ":", ",", "6", ":", "10", "]", ".", "astype", "(", "int", ")", "\n", "ids", "=", "data", "[", ":", ",", "1", "]", "\n", "\n", "for", "id", ",", "d", "in", "zip", "(", "ids", ",", "dets", ")", ":", "\n", "                ", "if", "id", "==", "-", "1", ":", "\n", "                    ", "continue", "\n", "", "trackers", ".", "add_box", "(", "d", ",", "id", ")", "\n", "\n", "", "trackers", ".", "one_frame_pass", "(", ")", "\n", "\n", "# 4.2.3 show the trackers", "\n", "image", "=", "trackers", ".", "show", "(", "image", ")", "\n", "\n", "cv2", ".", "imshow", "(", "'kitti tracking player'", ",", "image", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.ua_detection_player.play": [[20, 80], ["print", "print", "print", "os.path.join", "sorted", "os.path.join", "sorted", "os.path.join", "sorted", "ignore_file_base_name.index", "detection_file_base_name.index", "print", "data.ua_detection_data_reader.UADetectionDataReader", "range", "os.path.join", "os.path.join", "os.path.join", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "len", "data[].astype", "cv2.imshow", "cv2.waitKey", "os.listdir", "os.listdir", "os.listdir", "os.path.exists", "os.path.exists", "os.path.exists", "cv2.rectangle", "tuple", "cv2.rectangle", "int", "int", "int", "int", "numpy.random.rand"], "function", ["None"], ["def", "play", "(", ")", ":", "\n", "# 1. show the information", "\n", "    ", "print", "(", "'====================='", ")", "\n", "print", "(", "'play the the tracking result now.'", ")", "\n", "print", "(", "'====================='", ")", "\n", "\n", "# 2. read all folders in image_root", "\n", "image_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "args", ".", "image_folder_name", ")", "\n", "all_image_folders", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "d", ")", "for", "d", "in", "os", ".", "listdir", "(", "image_root", ")", "]", "\n", ")", "\n", "\n", "# 3. read all files in detection_root", "\n", "detection_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "args", ".", "detection_folder_name", ")", "\n", "all_detection_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "detection_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "detection_root", ")", "if", "'MVI_'", "in", "f", "]", "\n", ")", "\n", "\n", "# 3.1 read all ignore files in igrs_root", "\n", "ignore_root", "=", "os", ".", "path", ".", "join", "(", "args", ".", "root", ",", "args", ".", "ignore_folder_name", ")", "\n", "all_ignore_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "ignore_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "ignore_root", ")", "]", "\n", ")", "\n", "\n", "ignore_file_base_name", "=", "[", "os", ".", "path", ".", "basename", "(", "f", ")", "[", ":", "-", "8", "]", "for", "f", "in", "all_ignore_files", "]", "\n", "detection_file_base_name", "=", "[", "os", ".", "path", ".", "basename", "(", "f", ")", "[", ":", "9", "]", "for", "f", "in", "all_detection_files", "]", "\n", "# 4. for each item in image_root create a reader", "\n", "for", "image_folder", "in", "all_image_folders", ":", "\n", "\n", "        ", "i", "=", "ignore_file_base_name", ".", "index", "(", "os", ".", "path", ".", "basename", "(", "image_folder", ")", ")", "\n", "ignore_file", "=", "all_ignore_files", "[", "i", "]", "\n", "\n", "j", "=", "detection_file_base_name", ".", "index", "(", "os", ".", "path", ".", "basename", "(", "image_folder", ")", ")", "\n", "detection_file", "=", "all_detection_files", "[", "j", "]", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "image_folder", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "detection_file", ")", "or", "not", "os", ".", "path", ".", "exists", "(", "ignore_file", ")", ":", "\n", "            ", "continue", "\n", "", "print", "(", "'processing '", ",", "image_folder", ",", "'>>>>>>>>>>>>>>>>>>'", ")", "\n", "# 4.1 create a reader", "\n", "reader", "=", "UADetectionDataReader", "(", "image_folder", ",", "detection_file", ",", "ignore_file", "if", "args", ".", "use_ignore", "else", "None", ",", "args", ".", "detection_threshold", ")", "\n", "# 4.2 read all the item from the reader", "\n", "for", "i", "in", "range", "(", "len", "(", "reader", ")", ")", ":", "\n", "# 4.2.1 read the detection", "\n", "            ", "image", ",", "data", "=", "reader", "[", "i", "]", "\n", "if", "data", "is", "None", "or", "image", "is", "None", ":", "\n", "                ", "continue", "\n", "\n", "# 4.2.2 show the result", "\n", "", "dets", "=", "data", "[", ":", ",", "2", ":", "6", "]", ".", "astype", "(", "int", ")", "\n", "\n", "for", "det", "in", "dets", ":", "\n", "                ", "cv2", ".", "rectangle", "(", "image", ",", "(", "det", "[", "0", "]", ",", "det", "[", "1", "]", ")", ",", "(", "det", "[", "2", "]", ",", "det", "[", "3", "]", ")", ",", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", ",", "2", ",", ")", "\n", "\n", "", "if", "args", ".", "show_ignore_rect", ":", "\n", "                ", "if", "not", "reader", ".", "ignore", "is", "None", ":", "\n", "                    ", "for", "r", "in", "reader", ".", "ignore", ":", "\n", "                        ", "image", "=", "cv2", ".", "rectangle", "(", "image", ",", "(", "int", "(", "r", "[", "0", "]", ")", ",", "int", "(", "r", "[", "1", "]", ")", ")", ",", "(", "int", "(", "r", "[", "2", "]", ")", ",", "int", "(", "r", "[", "3", "]", ")", ")", ",", "(", "255", ",", "255", ",", "255", ")", ",", "2", ")", "\n", "\n", "", "", "", "cv2", ".", "imshow", "(", "'ua tracking player'", ",", "image", ")", "\n", "cv2", ".", "waitKey", "(", "25", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.tools.mot17_summary.MOT17Summary.__init__": [[13, 29], ["os.path.join", "os.path.join", "os.path.join.format", "pandas.read_csv", "print", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mot_root", ")", ":", "\n", "        ", "self", ".", "mot_root", "=", "mot_root", "\n", "self", ".", "train_indexes", "=", "[", "2", ",", "4", ",", "5", ",", "9", ",", "10", ",", "11", ",", "13", "]", "\n", "self", ".", "test_indexes", "=", "[", "1", ",", "3", ",", "6", ",", "7", ",", "8", ",", "12", ",", "14", "]", "\n", "self", ".", "detectors", "=", "[", "'-DPM'", ",", "'-FRCNN'", ",", "'-SDP'", "]", "\n", "\n", "# get all train det file name", "\n", "train_full_name_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "mot_root", ",", "'train'", "+", "'/MOT17'", "+", "'-{:02}{}/det/det.txt'", ")", "\n", "test_full_name_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "mot_root", ",", "'test'", "+", "'/MOT17'", "+", "'-{:02}{}/det/det.txt'", ")", "\n", "\n", "for", "i", "in", "self", ".", "train_indexes", ":", "\n", "            ", "for", "d", "in", "self", ".", "detectors", ":", "\n", "                ", "det_file", "=", "train_full_name_format", ".", "format", "(", "i", ",", "d", ")", "\n", "det", "=", "pd", ".", "read_csv", "(", "det_file", ",", "header", "=", "None", ")", "\n", "det", "=", "det", "[", "det", "[", "6", "]", ">", "0.3", "]", "\n", "print", "(", "'{}\\t{}\\t{}'", ".", "format", "(", "i", ",", "d", ",", "len", "(", "det", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config.init_test_mot17": [[70, 80], ["None"], "function", ["None"], ["def", "init_test_mot17", "(", ")", ":", "\n", "    ", "config", "[", "'resume'", "]", "=", "'./weights/sst300_0712_83000.pth'", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT17'", "\n", "config", "[", "'save_folder'", "]", "=", "'/media/ssm/seagate/weights0326-I50k-M80-G30'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/logs/1008-age-node'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'write_file'", "]", "=", "True", "\n", "config", "[", "'tensorboard'", "]", "=", "True", "\n", "config", "[", "'save_combine'", "]", "=", "False", "\n", "config", "[", "'type'", "]", "=", "'test'", "# can be 'test' or 'train'. 'test' represents 'test dataset'. while 'train\\ represents 'train dataset'", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config.init_train_mot17": [[85, 109], ["None"], "function", ["None"], ["def", "init_train_mot17", "(", ")", ":", "\n", "    ", "config", "[", "'epoch_size'", "]", "=", "664", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT17'", "\n", "config", "[", "'base_net_folder'", "]", "=", "'./weights/vgg16_reducedfc.pth'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/weights/MOT17/1031-E120-M80-G30-log'", "\n", "config", "[", "'save_folder'", "]", "=", "'/media/ssm/seagate/weights/MOT17/1031-E120-M80-G30-weights'", "\n", "config", "[", "'save_images_folder'", "]", "=", "'/media/ssm/seagate/weights/MOT17/1031-E120-M80-G30-images'", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'resume'", "]", "=", "None", "# None means training from sketch.", "\n", "config", "[", "'detector'", "]", "=", "'DPM'", "\n", "config", "[", "'start_iter'", "]", "=", "0", "\n", "config", "[", "'iteration_epoch_num'", "]", "=", "120", "\n", "config", "[", "'iterations'", "]", "=", "config", "[", "'start_iter'", "]", "+", "config", "[", "'epoch_size'", "]", "*", "config", "[", "'iteration_epoch_num'", "]", "+", "50", "\n", "config", "[", "'batch_size'", "]", "=", "4", "\n", "config", "[", "'learning_rate'", "]", "=", "1e-2", "\n", "config", "[", "'learning_rate_decay_by_epoch'", "]", "=", "(", "50", ",", "80", ",", "100", ",", "110", ")", "\n", "config", "[", "'save_weight_every_epoch_num'", "]", "=", "5", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "# randomly select pair frames with the [min_gap_frame, max_gap_frame]", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'num_workers'", "]", "=", "16", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'min_visibility'", "]", "=", "0.3", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config.init_train_mot15": [[115, 141], ["int"], "function", ["None"], ["def", "init_train_mot15", "(", ")", ":", "\n", "    ", "config", "[", "'epoch_size'", "]", "=", "664", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT15/2DMOT2015'", "\n", "config", "[", "'base_net_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT17/vgg16_reducedfc.pth'", "\n", "config", "[", "'log_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT15/1004-E120-M80-G30-log'", "\n", "config", "[", "'save_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT15/1004-E120-M80-G30-weights'", "\n", "config", "[", "'save_images_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT15/1004-E120-M80-G30-images'", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'dataset_type'", "]", "=", "'train'", "\n", "config", "[", "'resume'", "]", "=", "None", "\n", "config", "[", "'video_name_list'", "]", "=", "[", "'ADL-Rundle-6'", ",", "'ADL-Rundle-8'", ",", "'ETH-Bahnhof'", ",", "'ETH-Pedcross2'", ",", "'ETH-Sunnyday'", ",", "'KITTI-13'", ",", "'KITTI-17'", ",", "'PETS09-S2L1'", ",", "'TUD-Campus'", ",", "'TUD-Stadtmitte'", ",", "'Venice-2'", "]", "\n", "config", "[", "'start_iter'", "]", "=", "0", "\n", "config", "[", "'iteration_epoch_num'", "]", "=", "120", "\n", "config", "[", "'iterations'", "]", "=", "config", "[", "'start_iter'", "]", "+", "config", "[", "'epoch_size'", "]", "*", "config", "[", "'iteration_epoch_num'", "]", "+", "50", "\n", "config", "[", "'batch_size'", "]", "=", "8", "\n", "config", "[", "'learning_rate'", "]", "=", "1e-2", "\n", "config", "[", "'learning_rate_decay_by_epoch'", "]", "=", "(", "50", ",", "80", ",", "100", ",", "110", ")", "\n", "config", "[", "'save_weight_every_epoch_num'", "]", "=", "5", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'num_workers'", "]", "=", "16", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'min_visibility'", "]", "=", "0.3", "\n", "config", "[", "'final_net'", "]", "[", "'900'", "]", "=", "[", "int", "(", "config", "[", "'final_net'", "]", "[", "'900'", "]", "[", "0", "]", ")", ",", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config.init_test_mot15": [[144, 156], ["None"], "function", ["None"], ["def", "init_test_mot15", "(", ")", ":", "\n", "    ", "config", "[", "'resume'", "]", "=", "'/media/ssm/seagate/weights/MOT17/0601-E120-M80-G30-weights/sst300_0712_83000.pth'", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT15/2DMOT2015'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/logs/1005-mot15-test-5'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'write_file'", "]", "=", "True", "\n", "config", "[", "'tensorboard'", "]", "=", "True", "\n", "config", "[", "'save_combine'", "]", "=", "False", "\n", "config", "[", "'type'", "]", "=", "'test'", "\n", "config", "[", "'dataset_type'", "]", "=", "'test'", "\n", "config", "[", "'video_name_list'", "]", "=", "[", "'ADL-Rundle-1'", ",", "'ADL-Rundle-3'", ",", "'AVG-TownCentre'", ",", "'ETH-Crossing'", ",", "'ETH-Jelmoli'", ",", "\n", "'ETH-Linthescher'", ",", "'KITTI-16'", ",", "'KITTI-19'", ",", "'PETS09-S2L2'", ",", "'TUD-Crossing'", ",", "'Venice-1'", "]", "\n", "", "all_functions", "+=", "[", "init_test_mot15", "]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config.init_test_mot15_train_dataset": [[159, 171], ["None"], "function", ["None"], ["def", "init_test_mot15_train_dataset", "(", ")", ":", "\n", "    ", "config", "[", "'resume'", "]", "=", "'/media/ssm/seagate/weights/MOT17/0601-E120-M80-G30-weights/sst300_0712_83000.pth'", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT15/2DMOT2015'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/logs/1005-mot15-test-train-dataset-1'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'write_file'", "]", "=", "True", "\n", "config", "[", "'tensorboard'", "]", "=", "True", "\n", "config", "[", "'save_combine'", "]", "=", "False", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'dataset_type'", "]", "=", "'train'", "\n", "config", "[", "'video_name_list'", "]", "=", "[", "'ADL-Rundle-6'", ",", "'ADL-Rundle-8'", ",", "'ETH-Bahnhof'", ",", "'ETH-Pedcross2'", ",", "'ETH-Sunnyday'", ",", "'KITTI-13'", ",", "\n", "'KITTI-17'", ",", "'PETS09-S2L1'", ",", "'TUD-Campus'", ",", "'TUD-Stadtmitte'", ",", "'Venice-2'", "]", "\n", "# config['video_name_list'] = ['KITTI-13']", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config.init_train_ua": [[177, 203], ["None"], "function", ["None"], ["def", "init_train_ua", "(", ")", ":", "\n", "    ", "config", "[", "'epoch_size'", "]", "=", "10430", "\n", "\n", "config", "[", "'base_net_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/vgg16_reducedfc.pth'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-log'", "\n", "config", "[", "'save_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-weight'", "\n", "config", "[", "'save_images_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-images'", "\n", "config", "[", "'ua_image_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/Insight-MVT_Annotation_Train'", "\n", "config", "[", "\n", "'ua_detection_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/gt'", "\n", "config", "[", "\n", "'ua_ignore_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/DETRAC-MOT-toolkit/evaluation/igrs'", "\n", "config", "[", "'resume'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-weight/sst300_0712_62580.pth'", "\n", "config", "[", "'start_iter'", "]", "=", "62581", "\n", "config", "[", "'iteration_epoch_num'", "]", "=", "10", "\n", "config", "[", "'iterations'", "]", "=", "config", "[", "'start_iter'", "]", "+", "config", "[", "'epoch_size'", "]", "*", "config", "[", "'iteration_epoch_num'", "]", "+", "50", "\n", "config", "[", "'batch_size'", "]", "=", "8", "\n", "config", "[", "'learning_rate'", "]", "=", "1e-3", "\n", "config", "[", "'learning_rate_decay_by_epoch'", "]", "=", "(", "5", ",", "7", ",", "8", ",", "9", ")", "\n", "config", "[", "'save_weight_every_epoch_num'", "]", "=", "1", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "15", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'num_workers'", "]", "=", "16", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config.init_test_ua": [[208, 222], ["None"], "function", ["None"], ["def", "init_test_ua", "(", ")", ":", "\n", "    ", "config", "[", "'save_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/1006-E25-M80-G30-TestSet-EB-1'", "\n", "config", "[", "'ua_image_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/Insight-MVT_Annotation_Test'", "\n", "config", "[", "'ua_detection_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/EB'", "\n", "config", "[", "'ua_ignore_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/DETRAC-MOT-toolkit/evaluation/igrs'", "\n", "config", "[", "'resume'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-weight/sst300_0712_114730.pth'", "\n", "config", "[", "'detector_name'", "]", "=", "'EB'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "", "all_functions", "+=", "[", "init_test_ua", "]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_test_mot16": [[75, 86], ["None"], "function", ["None"], ["def", "init_test_mot16", "(", ")", ":", "\n", "    ", "'''\n    ssm\n    '''", "\n", "config", "[", "'resume'", "]", "=", "'/home/ssm/ssj/weights/MOT17/weights0326-I50k-M80-G30/ssj300_0712_80000.pth'", "\n", "config", "[", "'mot_root'", "]", "=", "'/home/ssm/ssj/dataset/MOT16'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'write_file'", "]", "=", "True", "\n", "config", "[", "'tensorboard'", "]", "=", "True", "\n", "config", "[", "'save_combine'", "]", "=", "False", "\n", "config", "[", "'type'", "]", "=", "'test'", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_test_mot17": [[91, 103], ["None"], "function", ["None"], ["def", "init_test_mot17", "(", ")", ":", "\n", "    ", "'''\n    ssm\n    '''", "\n", "config", "[", "'resume'", "]", "=", "'/media/ssm/seagate/weights/MOT17/0601-E120-M80-G30-weights/sst300_0712_83000.pth'", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT17'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/logs/1008-age-node'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'write_file'", "]", "=", "True", "\n", "config", "[", "'tensorboard'", "]", "=", "True", "\n", "config", "[", "'save_combine'", "]", "=", "False", "\n", "config", "[", "'type'", "]", "=", "'test'", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_train_mot17": [[108, 133], ["None"], "function", ["None"], ["def", "init_train_mot17", "(", ")", ":", "\n", "    ", "config", "[", "'epoch_size'", "]", "=", "664", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT17'", "\n", "config", "[", "'base_net_folder'", "]", "=", "'/media/ssm/seagate/ssj/weights/MOT17/vgg16_reducedfc.pth'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/weights/MOT17/0601-E120-M80-G30-log'", "\n", "config", "[", "'save_folder'", "]", "=", "'/media/ssm/seagate/weights/MOT17/0601-E120-M80-G30-weights'", "\n", "config", "[", "'save_images_folder'", "]", "=", "'/media/ssm/seagate/weights/MOT17/0601-E120-M80-G30-images'", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'dataset_type'", "]", "=", "'train'", "\n", "config", "[", "'resume'", "]", "=", "None", "\n", "config", "[", "'detector'", "]", "=", "'DPM'", "\n", "config", "[", "'start_iter'", "]", "=", "0", "\n", "config", "[", "'iteration_epoch_num'", "]", "=", "120", "\n", "config", "[", "'iterations'", "]", "=", "config", "[", "'start_iter'", "]", "+", "config", "[", "'epoch_size'", "]", "*", "config", "[", "'iteration_epoch_num'", "]", "+", "50", "\n", "config", "[", "'batch_size'", "]", "=", "8", "\n", "config", "[", "'learning_rate'", "]", "=", "1e-2", "\n", "config", "[", "'learning_rate_decay_by_epoch'", "]", "=", "(", "50", ",", "80", ",", "100", ",", "110", ")", "\n", "config", "[", "'save_weight_every_epoch_num'", "]", "=", "5", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'num_workers'", "]", "=", "16", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'min_visibility'", "]", "=", "0.3", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.exp_train_mot17_final_net": [[138, 164], ["int"], "function", ["None"], ["def", "exp_train_mot17_final_net", "(", ")", ":", "\n", "    ", "config", "[", "'epoch_size'", "]", "=", "664", "\n", "config", "[", "'mot_root'", "]", "=", "'/home/ssm/ssj/dataset/MOT17'", "\n", "config", "[", "'base_net_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT17/vgg16_reducedfc.pth'", "\n", "config", "[", "'log_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT17/0528-E120-M80-G30-log'", "\n", "config", "[", "'save_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT17/0528-E120-M80-G30-weights'", "\n", "config", "[", "'save_images_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT17/0528-E120-M80-G30-images'", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'dataset_type'", "]", "=", "'train'", "\n", "config", "[", "'resume'", "]", "=", "None", "\n", "config", "[", "'detector'", "]", "=", "'FRCNN'", "\n", "config", "[", "'start_iter'", "]", "=", "0", "\n", "config", "[", "'iteration_epoch_num'", "]", "=", "120", "\n", "config", "[", "'iterations'", "]", "=", "config", "[", "'start_iter'", "]", "+", "config", "[", "'epoch_size'", "]", "*", "config", "[", "'iteration_epoch_num'", "]", "+", "50", "\n", "config", "[", "'batch_size'", "]", "=", "8", "\n", "config", "[", "'learning_rate'", "]", "=", "1e-2", "\n", "config", "[", "'learning_rate_decay_by_epoch'", "]", "=", "(", "50", ",", "80", ",", "100", ",", "110", ")", "\n", "config", "[", "'save_weight_every_epoch_num'", "]", "=", "5", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'num_workers'", "]", "=", "16", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'min_visibility'", "]", "=", "0.3", "\n", "config", "[", "'final_net'", "]", "[", "'900'", "]", "=", "[", "int", "(", "config", "[", "'final_net'", "]", "[", "'900'", "]", "[", "0", "]", ")", ",", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.exp_test_mot17_final_net": [[169, 178], ["None"], "function", ["None"], ["def", "exp_test_mot17_final_net", "(", ")", ":", "\n", "    ", "config", "[", "'resume'", "]", "=", "'/media/jianliu/Data/ssj/github/SST/weights/sst300_0712_83000.pth'", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/jianliu/Data/ssj/dataset/MOT17'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/jianliu/Data/ssj/logs/sst/log0903-2'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'write_file'", "]", "=", "True", "\n", "config", "[", "'tensorboard'", "]", "=", "True", "\n", "config", "[", "'save_combine'", "]", "=", "False", "\n", "config", "[", "'type'", "]", "=", "'test'", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.exp_train_mot17_final_net_lab": [[183, 207], ["None"], "function", ["None"], ["def", "exp_train_mot17_final_net_lab", "(", ")", ":", "\n", "    ", "config", "[", "'mot_root'", "]", "=", "'/media/jianliu/ssm/dataset/dataset/MOT/17/MOT17'", "\n", "config", "[", "'base_net_folder'", "]", "=", "'/media/jianliu/ssm/ssj/github/weights/vgg16_reducedfc.pth'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/jianliu/ssm/ssj/train/0601-E120-M80-G30-log'", "\n", "config", "[", "'save_folder'", "]", "=", "'/media/jianliu/ssm/ssj/train/0601-E120-M80-G30-weights'", "\n", "config", "[", "'save_images_folder'", "]", "=", "'/media/jianliu/ssm/ssj/train/0601-E120-M80-G30-images'", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'dataset_type'", "]", "=", "'train'", "\n", "config", "[", "'resume'", "]", "=", "None", "\n", "config", "[", "'detector'", "]", "=", "'FRCNN'", "\n", "config", "[", "'start_iter'", "]", "=", "0", "\n", "config", "[", "'iteration_epoch_num'", "]", "=", "120", "\n", "config", "[", "'iterations'", "]", "=", "config", "[", "'start_iter'", "]", "+", "config", "[", "'epoch_size'", "]", "*", "config", "[", "'iteration_epoch_num'", "]", "+", "50", "\n", "config", "[", "'batch_size'", "]", "=", "8", "\n", "config", "[", "'learning_rate'", "]", "=", "1e-2", "\n", "config", "[", "'learning_rate_decay_by_epoch'", "]", "=", "(", "50", ",", "80", ",", "100", ",", "110", ")", "\n", "config", "[", "'save_weight_every_epoch_num'", "]", "=", "5", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'num_workers'", "]", "=", "16", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'min_visibility'", "]", "=", "0.3", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_train_mot15": [[212, 238], ["int"], "function", ["None"], ["def", "init_train_mot15", "(", ")", ":", "\n", "    ", "config", "[", "'epoch_size'", "]", "=", "664", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT15/2DMOT2015'", "\n", "config", "[", "'base_net_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT17/vgg16_reducedfc.pth'", "\n", "config", "[", "'log_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT15/1004-E120-M80-G30-log'", "\n", "config", "[", "'save_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT15/1004-E120-M80-G30-weights'", "\n", "config", "[", "'save_images_folder'", "]", "=", "'/home/ssm/ssj/weights/MOT15/1004-E120-M80-G30-images'", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'dataset_type'", "]", "=", "'train'", "\n", "config", "[", "'resume'", "]", "=", "None", "\n", "config", "[", "'video_name_list'", "]", "=", "[", "'ADL-Rundle-6'", ",", "'ADL-Rundle-8'", ",", "'ETH-Bahnhof'", ",", "'ETH-Pedcross2'", ",", "'ETH-Sunnyday'", ",", "'KITTI-13'", ",", "'KITTI-17'", ",", "'PETS09-S2L1'", ",", "'TUD-Campus'", ",", "'TUD-Stadtmitte'", ",", "'Venice-2'", "]", "\n", "config", "[", "'start_iter'", "]", "=", "0", "\n", "config", "[", "'iteration_epoch_num'", "]", "=", "120", "\n", "config", "[", "'iterations'", "]", "=", "config", "[", "'start_iter'", "]", "+", "config", "[", "'epoch_size'", "]", "*", "config", "[", "'iteration_epoch_num'", "]", "+", "50", "\n", "config", "[", "'batch_size'", "]", "=", "8", "\n", "config", "[", "'learning_rate'", "]", "=", "1e-2", "\n", "config", "[", "'learning_rate_decay_by_epoch'", "]", "=", "(", "50", ",", "80", ",", "100", ",", "110", ")", "\n", "config", "[", "'save_weight_every_epoch_num'", "]", "=", "5", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'num_workers'", "]", "=", "16", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'min_visibility'", "]", "=", "0.3", "\n", "config", "[", "'final_net'", "]", "[", "'900'", "]", "=", "[", "int", "(", "config", "[", "'final_net'", "]", "[", "'900'", "]", "[", "0", "]", ")", ",", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_test_mot15": [[241, 253], ["None"], "function", ["None"], ["def", "init_test_mot15", "(", ")", ":", "\n", "    ", "config", "[", "'resume'", "]", "=", "'/media/ssm/seagate/weights/MOT17/0601-E120-M80-G30-weights/sst300_0712_83000.pth'", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT15/2DMOT2015'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/logs/1005-mot15-test-5'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'write_file'", "]", "=", "True", "\n", "config", "[", "'tensorboard'", "]", "=", "True", "\n", "config", "[", "'save_combine'", "]", "=", "False", "\n", "config", "[", "'type'", "]", "=", "'test'", "\n", "config", "[", "'dataset_type'", "]", "=", "'test'", "\n", "config", "[", "'video_name_list'", "]", "=", "[", "'ADL-Rundle-1'", ",", "'ADL-Rundle-3'", ",", "'AVG-TownCentre'", ",", "'ETH-Crossing'", ",", "'ETH-Jelmoli'", ",", "\n", "'ETH-Linthescher'", ",", "'KITTI-16'", ",", "'KITTI-19'", ",", "'PETS09-S2L2'", ",", "'TUD-Crossing'", ",", "'Venice-1'", "]", "\n", "", "all_functions", "+=", "[", "init_test_mot15", "]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_test_mot15_train_dataset": [[256, 268], ["None"], "function", ["None"], ["def", "init_test_mot15_train_dataset", "(", ")", ":", "\n", "    ", "config", "[", "'resume'", "]", "=", "'/media/ssm/seagate/weights/MOT17/0601-E120-M80-G30-weights/sst300_0712_83000.pth'", "\n", "config", "[", "'mot_root'", "]", "=", "'/media/ssm/seagate/dataset/MOT15/2DMOT2015'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/logs/1005-mot15-test-train-dataset-1'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'write_file'", "]", "=", "True", "\n", "config", "[", "'tensorboard'", "]", "=", "True", "\n", "config", "[", "'save_combine'", "]", "=", "False", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'dataset_type'", "]", "=", "'train'", "\n", "config", "[", "'video_name_list'", "]", "=", "[", "'ADL-Rundle-6'", ",", "'ADL-Rundle-8'", ",", "'ETH-Bahnhof'", ",", "'ETH-Pedcross2'", ",", "'ETH-Sunnyday'", ",", "'KITTI-13'", ",", "\n", "'KITTI-17'", ",", "'PETS09-S2L1'", ",", "'TUD-Campus'", ",", "'TUD-Stadtmitte'", ",", "'Venice-2'", "]", "\n", "# config['video_name_list'] = ['KITTI-13']", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_train_kitti": [[273, 292], ["None"], "function", ["None"], ["def", "init_train_kitti", "(", ")", ":", "\n", "    ", "config", "[", "'kitti_image_root'", "]", "=", "'/home/ssm/ssj/dataset/KITTI/tracking/image_2'", "\n", "config", "[", "'kitti_detection_root'", "]", "=", "'/home/ssm/ssj/dataset/KITTI/tracking/tracking_label_2'", "\n", "config", "[", "'base_net_folder'", "]", "=", "'/home/ssm/ssj/weights/KITTI/vgg16_reducedfc.pth'", "\n", "config", "[", "'log_folder'", "]", "=", "'/home/ssm/ssj/weights/KITTI/log0518-I60k-M80-G30-C10-Pedestrian-Resume'", "\n", "config", "[", "'save_folder'", "]", "=", "'/home/ssm/ssj/weights/KITTI/weights0518-I60k-M80-G30-C10-Pedestrian-Resume'", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'dataset_type'", "]", "=", "'training'", "\n", "config", "[", "'resume'", "]", "=", "'/home/ssm/ssj/weights/KITTI/weights0406-I60k-M80-G5-C10-All-Continue/ssj300_0712_140000.pth'", "#None", "\n", "config", "[", "'start_iter'", "]", "=", "0", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'batch_size'", "]", "=", "8", "\n", "config", "[", "'num_workers'", "]", "=", "16", "\n", "config", "[", "'iterations'", "]", "=", "30050", "\n", "config", "[", "'learning_rate'", "]", "=", "1e-2", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_test_kitti": [[297, 307], ["None"], "function", ["None"], ["def", "init_test_kitti", "(", ")", ":", "\n", "    ", "config", "[", "'kitti_image_root'", "]", "=", "'/home/ssm/ssj/dataset/KITTI/tracking/image_2'", "\n", "config", "[", "'kitti_detection_root'", "]", "=", "'/home/ssm/ssj/dataset/KITTI/tracking/det_2_lsvm'", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "config", "[", "'dataset_type'", "]", "=", "'training'", "\n", "config", "[", "'resume'", "]", "=", "'/home/ssm/ssj/weights/KITTI/weights0406-I60k-M80-G5-C10-All-Continue/ssj300_0712_140000.pth'", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_train_ua": [[312, 338], ["None"], "function", ["None"], ["def", "init_train_ua", "(", ")", ":", "\n", "    ", "config", "[", "'epoch_size'", "]", "=", "10430", "\n", "\n", "config", "[", "'base_net_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/vgg16_reducedfc.pth'", "\n", "config", "[", "'log_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-log'", "\n", "config", "[", "'save_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-weight'", "\n", "config", "[", "'save_images_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-images'", "\n", "config", "[", "'ua_image_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/Insight-MVT_Annotation_Train'", "\n", "config", "[", "\n", "'ua_detection_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/gt'", "\n", "config", "[", "\n", "'ua_ignore_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/DETRAC-MOT-toolkit/evaluation/igrs'", "\n", "config", "[", "'resume'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-weight/sst300_0712_62580.pth'", "\n", "config", "[", "'start_iter'", "]", "=", "62581", "\n", "config", "[", "'iteration_epoch_num'", "]", "=", "10", "\n", "config", "[", "'iterations'", "]", "=", "config", "[", "'start_iter'", "]", "+", "config", "[", "'epoch_size'", "]", "*", "config", "[", "'iteration_epoch_num'", "]", "+", "50", "\n", "config", "[", "'batch_size'", "]", "=", "8", "\n", "config", "[", "'learning_rate'", "]", "=", "1e-3", "\n", "config", "[", "'learning_rate_decay_by_epoch'", "]", "=", "(", "5", ",", "7", ",", "8", ",", "9", ")", "\n", "config", "[", "'save_weight_every_epoch_num'", "]", "=", "1", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "15", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'num_workers'", "]", "=", "16", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.init_test_ua": [[343, 357], ["None"], "function", ["None"], ["def", "init_test_ua", "(", ")", ":", "\n", "    ", "config", "[", "'save_folder'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/1006-E25-M80-G30-TestSet-EB-1'", "\n", "config", "[", "'ua_image_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/Insight-MVT_Annotation_Test'", "\n", "config", "[", "'ua_detection_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/EB'", "\n", "config", "[", "'ua_ignore_root'", "]", "=", "'/media/ssm/seagate/dataset/UA-DETRAC/DETRAC-MOT-toolkit/evaluation/igrs'", "\n", "config", "[", "'resume'", "]", "=", "'/media/ssm/seagate/weights/UA-DETRAC/0621-0728-E25-M80-G30-weight/sst300_0712_114730.pth'", "\n", "config", "[", "'detector_name'", "]", "=", "'EB'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "", "all_functions", "+=", "[", "init_test_ua", "]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.config.config_backup.exp_init_test_ua": [[359, 374], ["None"], "function", ["None"], ["def", "exp_init_test_ua", "(", ")", ":", "\n", "    ", "config", "[", "'log_folder'", "]", "=", "'/media/jianliu/Data/ssj/logs/sst/ua-log-0905-1'", "\n", "config", "[", "'save_folder'", "]", "=", "'/media/jianliu/Data/ssj/logs/sst/ua-log-0905-1'", "\n", "config", "[", "'ua_image_root'", "]", "=", "'/media/jianliu/Data/ssj/dataset/ua-detrac/Insight-MVT_Annotation_Test'", "\n", "config", "[", "'ua_detection_root'", "]", "=", "'/media/jianliu/Data/ssj/dataset/ua-detrac/EB'", "\n", "config", "[", "'ua_ignore_root'", "]", "=", "'/media/jianliu/Data/ssj/dataset/ua-detrac/DETRAC-MOT-toolkit/evaluation/igrs'", "\n", "config", "[", "'resume'", "]", "=", "'/media/jianliu/Data/ssj/weights/ua/ua-sst300_0712_114730.pth'", "\n", "config", "[", "'detector_name'", "]", "=", "'EB'", "\n", "config", "[", "'batch_size'", "]", "=", "1", "\n", "config", "[", "'min_gap_frame'", "]", "=", "0", "\n", "config", "[", "'max_gap_frame'", "]", "=", "30", "\n", "config", "[", "'false_constant'", "]", "=", "10", "\n", "config", "[", "'cuda'", "]", "=", "True", "\n", "config", "[", "'max_object'", "]", "=", "80", "\n", "config", "[", "'type'", "]", "=", "'train'", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Node.__init__": [[22, 27], ["None"], "methods", ["None"], ["center", "=", "torch", ".", "from_numpy", "(", "center", ".", "astype", "(", "float", ")", ")", ".", "float", "(", ")", "\n", "center", ".", "unsqueeze_", "(", "0", ")", "\n", "center", ".", "unsqueeze_", "(", "2", ")", "\n", "center", ".", "unsqueeze_", "(", "3", ")", "\n", "\n", "if", "TrackerConfig", ".", "cuda", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Node.deactiviate": [[27, 34], ["None"], "methods", ["None"], ["if", "TrackerConfig", ".", "cuda", ":", "\n", "            ", "return", "Variable", "(", "center", ".", "cuda", "(", ")", ")", "\n", "", "return", "Variable", "(", "center", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "convert_image", "(", "image", ")", ":", "\n", "        "]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Node.inherit_features_": [[35, 37], ["None"], "methods", ["None"], ["\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Node.__del__": [[38, 40], ["None"], "methods", ["None"], ["image", "=", "cv2", ".", "resize", "(", "image", ",", "TrackerConfig", ".", "image_size", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image", "-=", "TrackerConfig", ".", "mean_pixel", "\n", "image", "=", "torch", ".", "FloatTensor", "(", "image", ")", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Track.__init__": [[61, 67], ["list", "tuple", "numpy.random.rand"], "methods", ["None"], ["delta_h", "=", "min", "(", "b1", "[", "2", "]", ",", "b2", "[", "2", "]", ")", "-", "max", "(", "b1", "[", "0", "]", ",", "b2", "[", "0", "]", ")", "\n", "delta_w", "=", "min", "(", "b1", "[", "3", "]", ",", "b2", "[", "3", "]", ")", "-", "max", "(", "b1", "[", "1", "]", ",", "b2", "[", "1", "]", ")", "\n", "if", "delta_h", "<", "0", "or", "delta_w", "<", "0", ":", "\n", "                    ", "expand_area", "=", "(", "max", "(", "b1", "[", "2", "]", ",", "b2", "[", "2", "]", ")", "-", "min", "(", "b1", "[", "0", "]", ",", "b2", "[", "0", "]", ")", ")", "*", "(", "max", "(", "b1", "[", "3", "]", ",", "b2", "[", "3", "]", ")", "-", "min", "(", "b1", "[", "1", "]", ",", "b2", "[", "1", "]", ")", ")", "\n", "area", "=", "(", "b1", "[", "2", "]", "-", "b1", "[", "0", "]", ")", "*", "(", "b1", "[", "3", "]", "-", "b1", "[", "1", "]", ")", "+", "(", "b2", "[", "2", "]", "-", "b2", "[", "0", "]", ")", "*", "(", "b2", "[", "3", "]", "-", "b2", "[", "1", "]", ")", "\n", "iou", "[", "i", ",", "j", "]", "=", "-", "(", "expand_area", "-", "area", ")", "/", "area", "\n", "", "else", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Track.__del__": [[68, 71], ["None"], "methods", ["None"], ["                    ", "overlap", "=", "delta_h", "*", "delta_w", "\n", "area", "=", "(", "b1", "[", "2", "]", "-", "b1", "[", "0", "]", ")", "*", "(", "b1", "[", "3", "]", "-", "b1", "[", "1", "]", ")", "+", "(", "b2", "[", "2", "]", "-", "b2", "[", "0", "]", ")", "*", "(", "b2", "[", "3", "]", "-", "b2", "[", "1", "]", ")", "-", "max", "(", "overlap", ",", "0", ")", "\n", "iou", "[", "i", ",", "j", "]", "=", "overlap", "/", "area", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Track.add_age": [[72, 74], ["None"], "methods", ["None"], ["", "", "", "return", "iou", "\n", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Track.reset_age": [[75, 77], ["None"], "methods", ["None"], ["def", "get_node_similarity", "(", "n1", ",", "n2", ",", "frame_index", ",", "recorder", ")", ":", "\n", "        ", "if", "n1", ".", "frame_index", ">", "n2", ".", "frame_index", ":", "\n", "            ", "n_max", "=", "n1", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Track.add_node": [[78, 84], ["tracker.Track.nodes.append", "tracker.Track.reset_age", "tracker.Track._volatile_memory", "len", "tracker.Track.nodes[].deactiviate"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.reset_age", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Track._volatile_memory", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Node.deactiviate"], ["n_min", "=", "n2", "\n", "", "elif", "n1", ".", "frame_index", "<", "n2", ".", "frame_index", ":", "\n", "            ", "n_max", "=", "n2", "\n", "n_min", "=", "n1", "\n", "", "else", ":", "# in the same frame_index", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Track._volatile_memory": [[85, 89], ["len", "range", "int"], "methods", ["None"], ["", "f_max", "=", "n_max", ".", "frame_index", "\n", "f_min", "=", "n_min", ".", "frame_index", "\n", "\n", "# not recorded in recorder", "\n", "if", "frame_index", "-", "f_min", ">=", "TrackerConfig", ".", "max_track_node", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Track.get_feature": [[90, 94], ["len"], "methods", ["None"], ["            ", "return", "None", "\n", "\n", "", "return", "recorder", ".", "all_similarity", "[", "f_max", "]", "[", "f_min", "]", "[", "n_min", ".", "id", ",", "n_max", ".", "id", "]", "\n", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.__init__": [[101, 104], ["list"], "methods", ["None"], ["\n", "merge_value", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.__getitem__": [[105, 107], ["None"], "methods", ["None"], ["if", "t1", "is", "t2", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append": [[108, 111], ["tracker.Tracks.tracks.append", "tracker.Tracks.volatile_tracks"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.volatile_tracks"], ["", "all_f1", "=", "[", "n", ".", "frame_index", "for", "n", "in", "t1", ".", "nodes", "]", "\n", "all_f2", "=", "[", "n", ".", "frame_index", "for", "n", "in", "t2", ".", "nodes", "]", "\n", "\n", "for", "i", ",", "f1", "in", "enumerate", "(", "all_f1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.volatile_tracks": [[112, 118], ["len", "numpy.argmax"], "methods", ["None"], ["            ", "for", "j", ",", "f2", "in", "enumerate", "(", "all_f2", ")", ":", "\n", "                ", "compare_f", "=", "[", "f1", "+", "1", ",", "f1", "-", "1", "]", "\n", "for", "f", "in", "compare_f", ":", "\n", "                    ", "if", "f", "not", "in", "all_f1", "and", "f", "==", "f2", ":", "\n", "                        ", "n1", "=", "t1", ".", "nodes", "[", "i", "]", "\n", "n2", "=", "t2", ".", "nodes", "[", "j", "]", "\n", "s", "=", "TrackUtil", ".", "get_node_similarity", "(", "n1", ",", "n2", ",", "frame_index", ",", "recorder", ")", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.get_track_by_id": [[119, 124], ["None"], "methods", ["None"], ["if", "s", "is", "None", ":", "\n", "                            ", "continue", "\n", "", "merge_value", "+=", "[", "s", "]", "\n", "\n", "", "", "", "", "if", "len", "(", "merge_value", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.get_features": [[125, 143], ["list", "list", "t.get_feature", "list.append", "list.append", "len", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_feature", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "return", "np", ".", "mean", "(", "np", ".", "array", "(", "merge_value", ")", ")", "\n", "\n", "", "@", "staticmethod", "\n", "def", "merge", "(", "t1", ",", "t2", ")", ":", "\n", "        ", "'''\n        merge t2 to t1, after that t2 is set invalid\n        :param t1: track 1\n        :param t2: track 2\n        :return: None\n        '''", "\n", "all_f1", "=", "[", "n", ".", "frame_index", "for", "n", "in", "t1", ".", "nodes", "]", "\n", "all_f2", "=", "[", "n", ".", "frame_index", "for", "n", "in", "t2", ".", "nodes", "]", "\n", "\n", "for", "i", ",", "f2", "in", "enumerate", "(", "all_f2", ")", ":", "\n", "            ", "if", "f2", "not", "in", "all_f1", ":", "\n", "                ", "insert_pos", "=", "0", "\n", "for", "j", ",", "f1", "in", "enumerate", "(", "all_f1", ")", ":", "\n", "                    ", "if", "f2", "<", "f1", ":", "\n", "                        ", "break", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.get_all_features": [[144, 158], ["list", "list", "range", "tracker.Tracks.get_features", "list.append", "list.append", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_features", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "insert_pos", "+=", "1", "\n", "", "t1", ".", "nodes", ".", "insert", "(", "insert_pos", ",", "t2", ".", "nodes", "[", "i", "]", ")", "\n", "\n", "# remove some nodes in t1 in order to keep t1 satisfy the max nodes", "\n", "", "", "if", "len", "(", "t1", ".", "nodes", ")", ">", "TrackerConfig", ".", "max_track_node", ":", "\n", "            ", "t1", ".", "nodes", "=", "t1", ".", "nodes", "[", "-", "TrackerConfig", ".", "max_track_node", ":", "]", "\n", "", "t1", ".", "age", "=", "min", "(", "t1", ".", "age", ",", "t2", ".", "age", ")", "\n", "t2", ".", "valid", "=", "False", "\n", "\n", "", "", "class", "TrackerConfig", ":", "\n", "    ", "max_record_frame", "=", "30", "\n", "max_track_age", "=", "30", "\n", "max_track_node", "=", "30", "\n", "max_draw_track_node", "=", "30", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.one_frame_pass": [[159, 167], ["list", "enumerate", "t.add_age", "list.append"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.add_age", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["max_object", "=", "config", "[", "'max_object'", "]", "\n", "sst_model_path", "=", "config", "[", "'resume'", "]", "\n", "cuda", "=", "config", "[", "'cuda'", "]", "\n", "mean_pixel", "=", "config", "[", "'mean_pixel'", "]", "\n", "image_size", "=", "(", "config", "[", "'sst_dim'", "]", ",", "config", "[", "'sst_dim'", "]", ")", "\n", "\n", "min_iou_frame_gap", "=", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", "\n", "min_iou", "=", "[", "0.3", ",", "0.0", ",", "-", "1.0", ",", "-", "2.0", ",", "-", "3.0", ",", "-", "4.0", ",", "-", "5.0", ",", "-", "6.0", ",", "-", "7.0", ",", "-", "7.0", "]", "\n", "# min_iou = [pow(0.3, i) for i in min_iou_frame_gap]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.show": [[169, 193], ["zip", "cv2.putText", "cv2.rectangle", "len", "cv2.line", "len", "str", "len", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["None"], ["min_merge_threshold", "=", "0.9", "\n", "\n", "max_bad_node", "=", "0.9", "\n", "\n", "decay", "=", "0.995", "\n", "\n", "roi_verify_max_iteration", "=", "2", "\n", "roi_verify_punish_rate", "=", "0.6", "\n", "\n", "@", "staticmethod", "\n", "def", "set_configure", "(", "all_choice", ")", ":", "\n", "\n", "        ", "min_iou_frame_gaps", "=", "[", "\n", "# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", "]", ",", "\n", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", "]", "\n", "]", "\n", "min_ious", "=", "[", "\n", "# [0.4, 0.3, 0.25, 0.2, 0.1, 0.0, -1.0, -2.0, -3.0, -4.0, -4.5, -5.0, -5.5, -6.0, -6.5, -7.0],", "\n", "[", "0.3", ",", "0.1", ",", "0.0", ",", "-", "1.0", ",", "-", "2.0", ",", "-", "3.0", ",", "-", "4.0", ",", "-", "5.0", ",", "-", "6.0", ",", "-", "7.0", "]", ",", "\n", "[", "0.3", ",", "0.0", ",", "-", "1.0", ",", "-", "2.0", ",", "-", "3.0", ",", "-", "4.0", ",", "-", "5.0", ",", "-", "6.0", ",", "-", "7.0", ",", "-", "7.0", "]", ",", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.__init__": [[198, 212], ["tracker.SSTTracker.load_model", "tracker.Tracks"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.load_model"], ["]", "\n", "\n", "decays", "=", "[", "1", "-", "0.01", "*", "i", "for", "i", "in", "range", "(", "11", ")", "]", "\n", "\n", "roi_verify_max_iterations", "=", "[", "2", ",", "3", ",", "4", ",", "5", ",", "6", "]", "\n", "\n", "roi_verify_punish_rates", "=", "[", "0.6", ",", "0.4", ",", "0.2", ",", "0.1", ",", "0.0", ",", "1.0", "]", "\n", "\n", "max_track_ages", "=", "[", "i", "*", "3", "for", "i", "in", "range", "(", "1", ",", "11", ")", "]", "\n", "max_track_nodes", "=", "[", "i", "*", "3", "for", "i", "in", "range", "(", "1", ",", "11", ")", "]", "\n", "\n", "if", "all_choice", "is", "None", ":", "\n", "            ", "return", "\n", "", "TrackerConfig", ".", "min_iou_frame_gap", "=", "min_iou_frame_gaps", "[", "all_choice", "[", "0", "]", "]", "\n", "TrackerConfig", ".", "min_iou", "=", "min_ious", "[", "all_choice", "[", "0", "]", "]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.load_model": [[213, 223], ["layer.sst.build_sst", "tracker.SSTTracker.sst.eval", "tracker.SSTTracker.sst.load_state_dict", "tracker.SSTTracker.sst.cuda", "tracker.SSTTracker.sst.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst.build_sst"], ["TrackerConfig", ".", "decay", "=", "decays", "[", "all_choice", "[", "1", "]", "]", "\n", "TrackerConfig", ".", "roi_verify_max_iteration", "=", "roi_verify_max_iterations", "[", "all_choice", "[", "2", "]", "]", "\n", "TrackerConfig", ".", "roi_verify_punish_rate", "=", "roi_verify_punish_rates", "[", "all_choice", "[", "3", "]", "]", "\n", "TrackerConfig", ".", "max_track_age", "=", "max_track_ages", "[", "all_choice", "[", "4", "]", "]", "\n", "TrackerConfig", ".", "max_track_node", "=", "max_track_nodes", "[", "all_choice", "[", "5", "]", "]", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_configure_str", "(", "all_choice", ")", ":", "\n", "        ", "return", "\"{}_{}_{}_{}_{}_{}\"", ".", "format", "(", "all_choice", "[", "0", "]", ",", "all_choice", "[", "1", "]", ",", "all_choice", "[", "2", "]", ",", "all_choice", "[", "3", "]", ",", "all_choice", "[", "4", "]", ",", "all_choice", "[", "5", "]", ")", "\n", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker._transform_image": [[224, 238], ["cv2.resize().astype", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "image.permute.permute.permute", "image.permute.permute.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cv2.resize", "image.permute.permute.cuda"], "methods", ["None"], ["def", "get_all_choices", "(", ")", ":", "\n", "# return [(1, 1, 0, 0, 4, 2)]", "\n", "        ", "return", "[", "(", "i1", ",", "i2", ",", "i3", ",", "i4", ",", "i5", ",", "i6", ")", "for", "i1", "in", "range", "(", "5", ")", "for", "i2", "in", "range", "(", "5", ")", "for", "i3", "in", "range", "(", "5", ")", "for", "i4", "in", "range", "(", "5", ")", "for", "i5", "in", "range", "(", "5", ")", "for", "i6", "in", "range", "(", "5", ")", "]", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_all_choices_decay", "(", ")", ":", "\n", "        ", "return", "[", "(", "1", ",", "i2", ",", "0", ",", "0", ",", "4", ",", "2", ")", "for", "i2", "in", "range", "(", "11", ")", "]", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_all_choices_max_track_node", "(", ")", ":", "\n", "        ", "return", "[", "(", "1", ",", "i2", ",", "0", ",", "0", ",", "4", ",", "2", ")", "for", "i2", "in", "range", "(", "11", ")", "]", "\n", "\n", "", "@", "staticmethod", "\n", "def", "get_choices_age_node", "(", ")", ":", "\n", "        ", "return", "[", "(", "0", ",", "0", ",", "0", ",", "0", ",", "a", ",", "n", ")", "for", "a", "in", "range", "(", "10", ")", "for", "n", "in", "range", "(", "10", ")", "]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker._transform_detection": [[239, 261], ["torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().float.cuda", "torch.from_numpy().float.cuda", "torch.from_numpy().float.astype", "torch.from_numpy().float.astype"], "methods", ["None"], ["\n", "", "@", "staticmethod", "\n", "def", "get_ua_choice", "(", ")", ":", "\n", "        ", "return", "(", "5", ",", "0", ",", "4", ",", "1", ",", "5", ",", "5", ")", "\n", "", "", "class", "FeatureRecorder", ":", "\n", "    ", "'''\n    Record features and boxes every frame\n    '''", "\n", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "max_record_frame", "=", "TrackerConfig", ".", "max_record_frame", "\n", "self", ".", "all_frame_index", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "int", ")", "\n", "self", ".", "all_features", "=", "{", "}", "\n", "self", ".", "all_boxes", "=", "{", "}", "\n", "self", ".", "all_similarity", "=", "{", "}", "\n", "self", ".", "all_iou", "=", "{", "}", "\n", "\n", "", "def", "update", "(", "self", ",", "sst", ",", "frame_index", ",", "features", ",", "boxes", ")", ":", "\n", "# if the coming frame in the new frame", "\n", "        ", "if", "frame_index", "not", "in", "self", ".", "all_frame_index", ":", "\n", "# if the recorder have reached the max_record_frame.", "\n", "            ", "if", "len", "(", "self", ".", "all_frame_index", ")", "==", "self", ".", "max_record_frame", ":", "\n", "                ", "del_frame", "=", "self", ".", "all_frame_index", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.iou": [[262, 276], ["numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum"], "methods", ["None"], ["del", "self", ".", "all_features", "[", "del_frame", "]", "\n", "del", "self", ".", "all_boxes", "[", "del_frame", "]", "\n", "del", "self", ".", "all_similarity", "[", "del_frame", "]", "\n", "del", "self", ".", "all_iou", "[", "del_frame", "]", "\n", "self", ".", "all_frame_index", "=", "self", ".", "all_frame_index", "[", "1", ":", "]", "\n", "\n", "# add new item for all_frame_index, all_features and all_boxes. Besides, also add new similarity", "\n", "", "self", ".", "all_frame_index", "=", "np", ".", "append", "(", "self", ".", "all_frame_index", ",", "frame_index", ")", "\n", "self", ".", "all_features", "[", "frame_index", "]", "=", "features", "\n", "self", ".", "all_boxes", "[", "frame_index", "]", "=", "boxes", "\n", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "=", "{", "}", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "-", "1", "]", ":", "\n", "                ", "delta", "=", "pow", "(", "TrackerConfig", ".", "decay", ",", "(", "frame_index", "-", "pre_index", ")", "/", "3.0", ")", "\n", "pre_similarity", "=", "sst", ".", "forward_stacker_features", "(", "Variable", "(", "self", ".", "all_features", "[", "pre_index", "]", ")", ",", "Variable", "(", "features", ")", ",", "fill_up_column", "=", "False", ")", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.custom_iou": [[277, 286], ["numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum"], "methods", ["None"], ["self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "pre_similarity", "*", "delta", "\n", "\n", "", "self", ".", "all_iou", "[", "frame_index", "]", "=", "{", "}", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "-", "1", "]", ":", "\n", "                ", "iou", "=", "TrackUtil", ".", "get_iou", "(", "self", ".", "all_boxes", "[", "pre_index", "]", ",", "boxes", ")", "\n", "self", ".", "all_iou", "[", "frame_index", "]", "[", "pre_index", "]", "=", "iou", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "all_features", "[", "frame_index", "]", "=", "features", "\n", "self", ".", "all_boxes", "[", "frame_index", "]", "=", "boxes", "\n", "index", "=", "self", ".", "all_frame_index", ".", "__index__", "(", "frame_index", ")", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.convert2bbox": [[288, 290], ["numpy.array"], "methods", ["None"], ["for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "index", "+", "1", "]", ":", "\n", "                ", "if", "pre_index", "==", "self", ".", "all_frame_index", "[", "-", "1", "]", ":", "\n", "                    ", "continue", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.get_y": [[291, 309], ["zip", "list", "res.keys", "range", "sum", "list.append", "numpy.array", "list", "len", "res.setdefault().append", "sum", "len", "res.setdefault", "id.index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["\n", "", "pre_similarity", "=", "sst", ".", "forward_stacker_features", "(", "Variable", "(", "self", ".", "all_features", "[", "pre_index", "]", ")", ",", "Variable", "(", "self", ".", "all_features", "[", "-", "1", "]", ")", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "pre_similarity", "\n", "\n", "iou", "=", "TrackUtil", ".", "get_iou", "(", "self", ".", "all_boxes", "[", "pre_index", "]", ",", "boxes", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "iou", "\n", "\n", "", "", "", "def", "get_feature", "(", "self", ",", "frame_index", ",", "detection_index", ")", ":", "\n", "        ", "'''\n        get the feature by the specified frame index and detection index\n        :param frame_index: start from 0\n        :param detection_index: start from 0\n        :return: the corresponding feature at frame index and detection index\n        '''", "\n", "\n", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "features", "=", "self", ".", "all_features", "[", "frame_index", "]", "\n", "if", "len", "(", "features", ")", "==", "0", ":", "\n", "                ", "return", "None", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.update": [[311, 389], ["tracker.SSTTracker._transform_image", "tracker.SSTTracker._transform_detection", "tracker.SSTTracker.sst.forward_feature_extracter", "tracker.SSTTracker.tracks.get_all_features", "list", "tracker.SSTTracker.get_y", "scipy.optimize.linear_sum_assignment", "range", "tracker.SSTTracker.tracks.one_frame_pass", "range", "tracker.SSTTracker.tracks.one_frame_pass", "tracker.SSTTracker.sst.forward_stacker_features", "list.append", "tracker.SSTTracker.tracks.get_track_by_id", "tracker.Node", "tracker.Track.add_node", "len", "tracker.SSTTracker.tracks.show", "tracker.Track", "tracker.Node", "tracker.Track.add_node", "tracker.SSTTracker.tracks.append", "torch.autograd.Variable", "torch.autograd.Variable", "tracker.Node", "tracker.Track", "tracker.Track.add_node", "tracker.SSTTracker.tracks.append"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker._transform_image", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker._transform_detection", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_feature_extracter", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.get_all_features", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.SSTTracker.get_y", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.one_frame_pass", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.one_frame_pass", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker_features", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.get_track_by_id", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["                ", "return", "features", "[", "detection_index", "]", "\n", "\n", "", "", "return", "None", "\n", "\n", "", "def", "get_box", "(", "self", ",", "frame_index", ",", "detection_index", ")", ":", "\n", "        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "boxes", "=", "self", ".", "all_boxes", "[", "frame_index", "]", "\n", "if", "len", "(", "boxes", ")", "==", "0", ":", "\n", "                ", "return", "None", "\n", "\n", "", "if", "detection_index", "<", "len", "(", "boxes", ")", ":", "\n", "                ", "return", "boxes", "[", "detection_index", "]", "\n", "", "", "return", "None", "\n", "\n", "", "def", "get_features", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "features", "=", "self", ".", "all_features", "[", "frame_index", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "", "if", "len", "(", "features", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "features", "\n", "\n", "", "def", "get_boxes", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "boxes", "=", "self", ".", "all_boxes", "[", "frame_index", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n", "", "if", "len", "(", "boxes", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "boxes", "\n", "\n", "", "", "class", "Node", ":", "\n", "    ", "'''\n    The Node is the basic element of a track. it contains the following information:\n    1) extracted feature (it'll get removed when it isn't active\n    2) box (a box (l, t, r, b)\n    3) label (active label indicating keeping the features)\n    4) detection, the formated box\n    '''", "\n", "def", "__init__", "(", "self", ",", "frame_index", ",", "id", ")", ":", "\n", "        ", "self", ".", "frame_index", "=", "frame_index", "\n", "self", ".", "id", "=", "id", "\n", "\n", "", "def", "get_box", "(", "self", ",", "frame_index", ",", "recoder", ")", ":", "\n", "        ", "if", "frame_index", "-", "self", ".", "frame_index", ">=", "TrackerConfig", ".", "max_record_frame", ":", "\n", "            ", "return", "None", "\n", "", "return", "recoder", ".", "all_boxes", "[", "self", ".", "frame_index", "]", "[", "self", ".", "id", ",", ":", "]", "\n", "\n", "", "def", "get_iou", "(", "self", ",", "frame_index", ",", "recoder", ",", "box_id", ")", ":", "\n", "        ", "if", "frame_index", "-", "self", ".", "frame_index", ">=", "TrackerConfig", ".", "max_track_node", ":", "\n", "            ", "return", "None", "\n", "", "return", "recoder", ".", "all_iou", "[", "frame_index", "]", "[", "self", ".", "frame_index", "]", "[", "self", ".", "id", ",", "box_id", "]", "\n", "\n", "", "", "class", "Track", ":", "\n", "    ", "'''\n    Track is the class of track. it contains all the node and manages the node. it contains the following information:\n    1) all the nodes\n    2) track id. it is unique it identify each track\n    3) track pool id. it is a number to give a new id to a new track\n    4) age. age indicates how old is the track\n    5) max_age. indicates the dead age of this track\n    '''", "\n", "_id_pool", "=", "0", "\n", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "nodes", "=", "list", "(", ")", "\n", "self", ".", "id", "=", "Track", ".", "_id_pool", "\n", "Track", ".", "_id_pool", "+=", "1", "\n", "self", ".", "age", "=", "0", "\n", "self", ".", "valid", "=", "True", "# indicate this track is merged", "\n", "self", ".", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "\n", "", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "for", "n", "in", "self", ".", "nodes", ":", "\n", "            ", "del", "n", "\n", "\n", "", "", "def", "add_age", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.__init__": [[38, 45], ["numpy.array"], "methods", ["None"], ["        ", "self", ".", "max_record_frame", "=", "TrackerConfig", ".", "max_record_frame", "\n", "self", ".", "all_frame_index", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "int", ")", "\n", "self", ".", "all_features", "=", "{", "}", "\n", "self", ".", "all_boxes", "=", "{", "}", "\n", "self", ".", "all_similarity", "=", "{", "}", "\n", "self", ".", "all_iou", "=", "{", "}", "\n", "\n", "", "def", "update", "(", "self", ",", "sst", ",", "frame_index", ",", "features", ",", "boxes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.update": [[46, 87], ["numpy.append", "sst_tracker.FeatureRecorder.all_frame_index.__index__", "len", "pow", "sst.forward_stacker_features", "sst_tracker.TrackUtil.get_iou", "sst.forward_stacker_features", "sst_tracker.TrackUtil.get_iou", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker_features", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_iou", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_stacker_features", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_iou"], ["# if the coming frame in the new frame", "\n", "        ", "if", "frame_index", "not", "in", "self", ".", "all_frame_index", ":", "\n", "# if the recorder have reached the max_record_frame.", "\n", "            ", "if", "len", "(", "self", ".", "all_frame_index", ")", "==", "self", ".", "max_record_frame", ":", "\n", "                ", "del_frame", "=", "self", ".", "all_frame_index", "[", "0", "]", "\n", "del", "self", ".", "all_features", "[", "del_frame", "]", "\n", "del", "self", ".", "all_boxes", "[", "del_frame", "]", "\n", "del", "self", ".", "all_similarity", "[", "del_frame", "]", "\n", "del", "self", ".", "all_iou", "[", "del_frame", "]", "\n", "self", ".", "all_frame_index", "=", "self", ".", "all_frame_index", "[", "1", ":", "]", "\n", "\n", "# add new item for all_frame_index, all_features and all_boxes. Besides, also add new similarity", "\n", "", "self", ".", "all_frame_index", "=", "np", ".", "append", "(", "self", ".", "all_frame_index", ",", "frame_index", ")", "\n", "self", ".", "all_features", "[", "frame_index", "]", "=", "features", "\n", "self", ".", "all_boxes", "[", "frame_index", "]", "=", "boxes", "\n", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "=", "{", "}", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "-", "1", "]", ":", "\n", "                ", "delta", "=", "pow", "(", "TrackerConfig", ".", "decay", ",", "frame_index", "-", "pre_index", ")", "\n", "pre_similarity", "=", "sst", ".", "forward_stacker_features", "(", "Variable", "(", "self", ".", "all_features", "[", "pre_index", "]", ")", ",", "Variable", "(", "features", ")", ",", "fill_up_column", "=", "False", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "pre_similarity", "*", "delta", "\n", "\n", "", "self", ".", "all_iou", "[", "frame_index", "]", "=", "{", "}", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "-", "1", "]", ":", "\n", "                ", "iou", "=", "TrackUtil", ".", "get_iou", "(", "self", ".", "all_boxes", "[", "pre_index", "]", ",", "boxes", ")", "\n", "self", ".", "all_iou", "[", "frame_index", "]", "[", "pre_index", "]", "=", "iou", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "all_features", "[", "frame_index", "]", "=", "features", "\n", "self", ".", "all_boxes", "[", "frame_index", "]", "=", "boxes", "\n", "index", "=", "self", ".", "all_frame_index", ".", "__index__", "(", "frame_index", ")", "\n", "\n", "for", "pre_index", "in", "self", ".", "all_frame_index", "[", ":", "index", "+", "1", "]", ":", "\n", "                ", "if", "pre_index", "==", "self", ".", "all_frame_index", "[", "-", "1", "]", ":", "\n", "                    ", "continue", "\n", "\n", "", "pre_similarity", "=", "sst", ".", "forward_stacker_features", "(", "Variable", "(", "self", ".", "all_features", "[", "pre_index", "]", ")", ",", "Variable", "(", "self", ".", "all_features", "[", "-", "1", "]", ")", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "pre_similarity", "\n", "\n", "iou", "=", "TrackUtil", ".", "get_iou", "(", "self", ".", "all_boxes", "[", "pre_index", "]", ",", "boxes", ")", "\n", "self", ".", "all_similarity", "[", "frame_index", "]", "[", "pre_index", "]", "=", "iou", "\n", "\n", "", "", "", "def", "get_feature", "(", "self", ",", "frame_index", ",", "detection_index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_feature": [[88, 104], ["len", "len"], "methods", ["None"], ["        ", "'''\n        get the feature by the specified frame index and detection index\n        :param frame_index: start from 0\n        :param detection_index: start from 0\n        :return: the corresponding feature at frame index and detection index\n        '''", "\n", "\n", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "features", "=", "self", ".", "all_features", "[", "frame_index", "]", "\n", "if", "len", "(", "features", ")", "==", "0", ":", "\n", "                ", "return", "None", "\n", "", "if", "detection_index", "<", "len", "(", "features", ")", ":", "\n", "                ", "return", "features", "[", "detection_index", "]", "\n", "\n", "", "", "return", "None", "\n", "\n", "", "def", "get_box", "(", "self", ",", "frame_index", ",", "detection_index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_box": [[105, 114], ["len", "len"], "methods", ["None"], ["        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "boxes", "=", "self", ".", "all_boxes", "[", "frame_index", "]", "\n", "if", "len", "(", "boxes", ")", "==", "0", ":", "\n", "                ", "return", "None", "\n", "\n", "", "if", "detection_index", "<", "len", "(", "boxes", ")", ":", "\n", "                ", "return", "boxes", "[", "detection_index", "]", "\n", "", "", "return", "None", "\n", "\n", "", "def", "get_features", "(", "self", ",", "frame_index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_features": [[115, 123], ["len"], "methods", ["None"], ["        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "features", "=", "self", ".", "all_features", "[", "frame_index", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "", "if", "len", "(", "features", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "features", "\n", "\n", "", "def", "get_boxes", "(", "self", ",", "frame_index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.FeatureRecorder.get_boxes": [[124, 133], ["len"], "methods", ["None"], ["        ", "if", "frame_index", "in", "self", ".", "all_frame_index", ":", "\n", "            ", "boxes", "=", "self", ".", "all_boxes", "[", "frame_index", "]", "\n", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n", "", "if", "len", "(", "boxes", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "boxes", "\n", "\n", "", "", "class", "Node", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Node.__init__": [[135, 140], ["None"], "methods", ["None"], ["        ", "self", ".", "frame_index", "=", "frame_index", "\n", "self", ".", "feature_index", "=", "feature_index", "\n", "self", ".", "detection_index", "=", "detection_index", "\n", "self", ".", "active", "=", "True", "\n", "\n", "", "", "class", "Track", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.__init__": [[144, 156], ["numpy.zeros", "range", "numpy.array", "numpy.zeros", "tuple", "len", "numpy.random.rand"], "methods", ["None"], ["        ", "self", ".", "s", "=", "np", ".", "zeros", "(", "(", "TrackerConfig", ".", "max_track_node", ",", "TrackerConfig", ".", "max_track_node", ")", ",", "dtype", "=", "np", ".", "float", ")", "# similarity score", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "s", ")", ")", ":", "\n", "            ", "self", ".", "s", "[", "i", ",", "i", "]", "=", "-", "1", "\n", "\n", "", "self", ".", "f", "=", "np", ".", "array", "(", "[", "]", ",", "dtype", "=", "int", ")", "# recorded frame", "\n", "self", ".", "uv", "=", "np", ".", "zeros", "(", "(", "TrackerConfig", ".", "max_track_node", ",", "TrackerConfig", ".", "max_track_node", ")", ",", "dtype", "=", "int", ")", "# the box index", "\n", "self", ".", "id", "=", "Track", ".", "_id_pool", "\n", "Track", ".", "_id_pool", "+=", "1", "\n", "self", ".", "age", "=", "0", "\n", "self", ".", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "self", ".", "valid", "=", "True", "\n", "\n", "", "def", "update", "(", "self", ",", "frame_index", ",", "similarity", ",", "index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.update": [[157, 174], ["numpy.append", "len", "numpy.zeros", "range", "numpy.zeros", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["        ", "if", "len", "(", "self", ".", "f", ")", "==", "TrackerConfig", ".", "max_track_node", ":", "\n", "# remove the first item", "\n", "            ", "self", ".", "f", "=", "self", ".", "f", "[", "1", ":", "]", "\n", "s", "=", "np", ".", "zeros", "(", "(", "TrackerConfig", ".", "max_track_node", ",", "TrackerConfig", ".", "max_track_node", ")", ",", "dtype", "=", "np", ".", "float", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "s", ")", ")", ":", "\n", "                ", "self", ".", "s", "[", "i", ",", "i", "]", "=", "-", "1", "\n", "", "s", "[", ":", "-", "1", ",", ":", "-", "1", "]", "=", "self", ".", "s", "[", "1", ":", ",", "1", ":", "]", "\n", "self", ".", "s", "=", "s", "\n", "uv", "=", "np", ".", "zeros", "(", "(", "TrackerConfig", ".", "max_track_node", ",", "TrackerConfig", ".", "max_track_node", ")", ",", "dtype", "=", "int", ")", "\n", "uv", "[", ":", "-", "1", ",", ":", "-", "1", "]", "=", "self", ".", "uv", "[", "1", ":", ",", "1", ":", "]", "\n", "self", ".", "uv", "=", "uv", "\n", "\n", "", "self", ".", "f", "=", "np", ".", "append", "(", "self", ".", "f", ",", "frame_index", ")", "\n", "i", "=", "len", "(", "self", ".", "f", ")", "-", "1", "\n", "self", ".", "s", "[", ":", "len", "(", "similarity", ")", ",", "i", "]", "=", "similarity", "\n", "self", ".", "uv", "[", ":", "len", "(", "index", ")", ",", "i", "]", "=", "index", "\n", "\n", "", "def", "add_age", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.add_age": [[175, 177], ["None"], "methods", ["None"], ["        ", "self", ".", "age", "+=", "1", "\n", "\n", "", "def", "reset_age", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.reset_age": [[178, 180], ["None"], "methods", ["None"], ["        ", "self", ".", "age", "=", "0", "\n", "\n", "", "def", "get_all_nodes", "(", "self", ",", "recorder", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_all_nodes": [[181, 190], ["enumerate", "all_nodes.append"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["        ", "all_nodes", "=", "[", "]", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "self", ".", "f", ")", ":", "\n", "            ", "id", "=", "self", ".", "uv", "[", "i", ",", "i", "]", "\n", "if", "id", "==", "-", "1", ":", "\n", "                ", "continue", "\n", "", "all_nodes", ".", "append", "(", "recorder", ".", "all_boxes", "[", "f", "]", "[", "id", ",", ":", "]", ")", "\n", "\n", "", "return", "all_nodes", "\n", "\n", "", "def", "get_current_box", "(", "self", ",", "recorder", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_current_box": [[191, 199], ["len", "len"], "methods", ["None"], ["        ", "if", "len", "(", "self", ".", "f", ")", ">", "0", "and", "self", ".", "age", "==", "0", ":", "\n", "            ", "frame_index", "=", "self", ".", "f", "[", "-", "1", "]", "\n", "i", "=", "len", "(", "self", ".", "f", ")", "-", "1", "\n", "id", "=", "self", ".", "uv", "[", "i", ",", "i", "]", "\n", "if", "id", "!=", "-", "1", ":", "\n", "                ", "return", "recorder", ".", "all_boxes", "[", "frame_index", "]", "[", "id", ",", ":", "]", "\n", "", "", "return", "None", "\n", "\n", "", "def", "get_total_similarity", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_total_similarity": [[200, 212], ["enumerate", "numpy.min"], "methods", ["None"], ["        ", "total_similarity", "=", "[", "]", "\n", "total_count", "=", "0", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "self", ".", "f", ")", ":", "\n", "            ", "if", "self", ".", "s", "[", "i", ",", "i", "]", ">", "0", ":", "\n", "                ", "total_similarity", "+=", "[", "self", ".", "s", "[", "i", ",", "i", "]", "]", "\n", "total_count", "+=", "1", "\n", "\n", "", "", "if", "total_count", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "else", ":", "\n", "            ", "return", "np", ".", "min", "(", "total_similarity", ")", "\n", "\n", "", "", "def", "remove_similarity_node", "(", "self", ",", "t", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.remove_similarity_node": [[213, 243], ["enumerate", "enumerate", "len", "min", "numpy.where"], "methods", ["None"], ["# Remove all the node with same id compared with t.", "\n", "        ", "remove_frame", "=", "[", "]", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "t", ".", "f", ")", ":", "\n", "            ", "if", "f", "in", "self", ".", "f", "and", "t", ".", "uv", "[", "i", ",", "i", "]", "!=", "-", "1", ":", "\n", "                ", "id1", "=", "t", ".", "uv", "[", "i", ",", "i", "]", "\n", "index", "=", "np", ".", "where", "(", "self", ".", "f", "==", "f", ")", "[", "0", "]", "[", "0", "]", "\n", "id", "=", "self", ".", "uv", "[", "index", ",", "index", "]", "\n", "if", "id", "==", "id1", ":", "\n", "                    ", "remove_frame", "+=", "[", "index", "]", "\n", "self", ".", "uv", "[", "index", ",", "index", "]", "=", "-", "1", "\n", "\n", "# Remove extra one node which is the cause of wrong matching.", "\n", "", "", "", "if", "len", "(", "remove_frame", ")", ">", "0", ":", "\n", "            ", "min_index", "=", "min", "(", "remove_frame", ")", "\n", "min_index", "-=", "1", "\n", "while", "min_index", ">", "0", ":", "\n", "                ", "if", "self", ".", "uv", "[", "min_index", ",", "min_index", "]", "!=", "-", "1", ":", "\n", "                    ", "self", ".", "uv", "[", "min_index", ",", "min_index", "]", "=", "-", "1", "\n", "", "min_index", "-=", "1", "\n", "\n", "\n", "# if remove all the nodes, then remove this track", "\n", "", "", "is_valid", "=", "False", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "self", ".", "f", ")", ":", "\n", "            ", "if", "self", ".", "uv", "[", "i", ",", "i", "]", "!=", "-", "1", ":", "\n", "                ", "is_valid", "=", "True", "\n", "break", "\n", "\n", "", "", "self", ".", "valid", "=", "is_valid", "\n", "\n", "", "def", "get_bad_probability", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_bad_probability": [[244, 254], ["enumerate", "len", "len"], "methods", ["None"], ["        ", "if", "len", "(", "self", ".", "f", ")", "==", "0", ":", "\n", "            ", "return", "0.0", "\n", "\n", "", "bad_num", "=", "0", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "self", ".", "f", ")", ":", "\n", "            ", "if", "self", ".", "uv", "[", "i", ",", "i", "]", "==", "-", "1", ":", "\n", "                ", "bad_num", "+=", "1.0", "\n", "\n", "", "", "return", "bad_num", "/", "len", "(", "self", ".", "f", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_detection": [[258, 275], ["torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.from_numpy().float.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy().float.cuda", "torch.from_numpy().float.cuda", "torch.from_numpy().float.astype", "torch.from_numpy().float.astype"], "methods", ["None"], ["def", "convert_detection", "(", "detection", ")", ":", "\n", "        ", "'''\n        transform the current detection center to [-1, 1]\n        :param detection: detection\n        :return: translated detection\n        '''", "\n", "# get the center, and format it in (-1, 1)", "\n", "center", "=", "(", "2", "*", "detection", "[", ":", ",", "0", ":", "2", "]", "+", "detection", "[", ":", ",", "2", ":", "4", "]", ")", "-", "1.0", "\n", "center", "=", "torch", ".", "from_numpy", "(", "center", ".", "astype", "(", "float", ")", ")", ".", "float", "(", ")", "\n", "center", ".", "unsqueeze_", "(", "0", ")", "\n", "center", ".", "unsqueeze_", "(", "2", ")", "\n", "center", ".", "unsqueeze_", "(", "3", ")", "\n", "\n", "if", "TrackerConfig", ".", "cuda", ":", "\n", "            ", "return", "Variable", "(", "center", ".", "cuda", "(", ")", ")", "\n", "", "return", "Variable", "(", "center", ")", "\n", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_image": [[276, 291], ["cv2.resize().astype", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "image.permute.permute.permute", "image.permute.permute.unsqueeze_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "cv2.resize", "image.permute.permute.cuda"], "methods", ["None"], ["def", "convert_image", "(", "image", ")", ":", "\n", "        ", "'''\n        transform image to the FloatTensor (1, 3,size, size)\n        :param image: same as update parameter\n        :return: the transformed image FloatTensor (i.e. 1x3x900x900)\n        '''", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "TrackerConfig", ".", "image_size", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "image", "-=", "TrackerConfig", ".", "mean_pixel", "\n", "image", "=", "torch", ".", "FloatTensor", "(", "image", ")", "\n", "image", "=", "image", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "image", ".", "unsqueeze_", "(", "dim", "=", "0", ")", "\n", "if", "TrackerConfig", ".", "cuda", ":", "\n", "            ", "return", "Variable", "(", "image", ".", "cuda", "(", ")", ")", "\n", "", "return", "Variable", "(", "image", ")", "\n", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_iou": [[292, 311], ["len", "len", "numpy.zeros", "range", "numpy.copy", "range", "numpy.copy", "max", "max", "min", "max", "min", "max"], "methods", ["None"], ["def", "get_iou", "(", "pre_boxes", ",", "next_boxes", ")", ":", "\n", "        ", "h", "=", "len", "(", "pre_boxes", ")", "\n", "w", "=", "len", "(", "next_boxes", ")", "\n", "if", "h", "==", "0", "or", "w", "==", "0", ":", "\n", "            ", "return", "[", "]", "\n", "\n", "", "iou", "=", "np", ".", "zeros", "(", "(", "h", ",", "w", ")", ",", "dtype", "=", "float", ")", "\n", "for", "i", "in", "range", "(", "h", ")", ":", "\n", "            ", "b1", "=", "np", ".", "copy", "(", "pre_boxes", "[", "i", ",", ":", "]", ")", "\n", "b1", "[", "2", ":", "]", "=", "b1", "[", ":", "2", "]", "+", "b1", "[", "2", ":", "]", "\n", "for", "j", "in", "range", "(", "w", ")", ":", "\n", "                ", "b2", "=", "np", ".", "copy", "(", "next_boxes", "[", "j", ",", ":", "]", ")", "\n", "b2", "[", "2", ":", "]", "=", "b2", "[", ":", "2", "]", "+", "b2", "[", "2", ":", "]", "\n", "overlap", "=", "max", "(", "min", "(", "b1", "[", "2", "]", ",", "b2", "[", "2", "]", ")", "-", "max", "(", "b1", "[", "0", "]", ",", "b2", "[", "0", "]", ")", ",", "0", ")", "*", "max", "(", "min", "(", "b1", "[", "3", "]", ",", "b2", "[", "3", "]", ")", "-", "max", "(", "b1", "[", "1", "]", ",", "b2", "[", "1", "]", ")", ",", "0", ")", "\n", "area", "=", "(", "b1", "[", "2", "]", "-", "b1", "[", "0", "]", ")", "*", "(", "b1", "[", "3", "]", "-", "b1", "[", "1", "]", ")", "+", "(", "b2", "[", "2", "]", "-", "b2", "[", "0", "]", ")", "*", "(", "b2", "[", "3", "]", "-", "b2", "[", "1", "]", ")", "-", "overlap", "\n", "iou", "[", "i", ",", "j", "]", "=", "overlap", "/", "area", "\n", "\n", "", "", "return", "iou", "\n", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_merge_value": [[312, 323], ["enumerate", "enumerate", "float"], "methods", ["None"], ["def", "get_merge_value", "(", "t1", ",", "t2", ")", ":", "\n", "        ", "merge_value", "=", "0", "\n", "if", "t1", "is", "t2", ":", "\n", "            ", "return", "merge_value", "\n", "\n", "", "for", "i", ",", "f1", "in", "enumerate", "(", "t1", ".", "f", ")", ":", "\n", "            ", "for", "j", ",", "f2", "in", "enumerate", "(", "t2", ".", "f", ")", ":", "\n", "                ", "if", "f1", "==", "f2", "and", "t1", ".", "uv", "[", "i", ",", "i", "]", "==", "t2", ".", "uv", "[", "j", ",", "j", "]", "and", "t1", ".", "uv", "[", "i", ",", "i", "]", "!=", "-", "1", ":", "\n", "                    ", "merge_value", "+=", "1", "\n", "", "", "", "return", "merge_value", "/", "float", "(", "TrackerConfig", ".", "max_track_node", ")", "\n", "\n", "", "@", "staticmethod", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.merge": [[324, 343], ["t1.get_total_similarity", "t2.get_total_similarity", "t1.remove_similarity_node", "t2.remove_similarity_node"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_total_similarity", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_total_similarity", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.remove_similarity_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.remove_similarity_node"], ["def", "merge", "(", "t1", ",", "t2", ")", ":", "\n", "# keep the track with the highest matching probability.", "\n", "# remove the overlapped node of the bad one", "\n", "        ", "s1", "=", "t1", ".", "get_total_similarity", "(", ")", "\n", "s2", "=", "t2", ".", "get_total_similarity", "(", ")", "\n", "\n", "is_t1", "=", "False", "\n", "if", "s1", "==", "0", "and", "s2", "==", "0", ":", "\n", "            ", "if", "t1", ".", "id", ">", "t2", ".", "id", ":", "\n", "                ", "is_t1", "=", "True", "\n", "", "", "else", ":", "\n", "            ", "if", "s1", "<", "s2", ":", "\n", "                ", "is_t1", "=", "True", "\n", "\n", "", "", "if", "is_t1", ":", "\n", "            ", "t1", ".", "remove_similarity_node", "(", "t2", ")", "\n", "", "else", ":", "\n", "            ", "t2", ".", "remove_similarity_node", "(", "t1", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.__init__": [[346, 364], ["list", "sst_tracker.FeatureRecorder", "layer.sst.build_sst", "sst_tracker.TrackSet.sst.eval", "sst_tracker.TrackSet.sst.load_state_dict", "sst_tracker.TrackSet.sst.cuda", "sst_tracker.TrackSet.sst.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.layer.sst.build_sst"], ["        ", "self", ".", "tracks", "=", "list", "(", ")", "\n", "self", ".", "max_drawing_track", "=", "TrackerConfig", ".", "max_draw_track_node", "\n", "self", ".", "cuda", "=", "TrackerConfig", ".", "cuda", "\n", "self", ".", "recorder", "=", "FeatureRecorder", "(", ")", "\n", "self", ".", "frame_index", "=", "0", "\n", "\n", "# load the model", "\n", "self", ".", "sst", "=", "build_sst", "(", "'test'", ",", "900", ")", "\n", "if", "self", ".", "cuda", ":", "\n", "            ", "cudnn", ".", "benchmark", "=", "True", "\n", "self", ".", "sst", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "TrackerConfig", ".", "sst_model_path", ")", "\n", ")", "\n", "self", ".", "sst", "=", "self", ".", "sst", ".", "cuda", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "sst", ".", "load_state_dict", "(", "torch", ".", "load", "(", "config", "[", "'resume'", "]", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "", "self", ".", "sst", ".", "eval", "(", ")", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.__getitem__": [[365, 367], ["None"], "methods", ["None"], ["        ", "return", "self", ".", "tracks", "[", "item", "]", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.__len__": [[368, 370], ["len"], "methods", ["None"], ["        ", "return", "len", "(", "self", ".", "tracks", ")", "\n", "\n", "", "def", "get_similarity_uv_by_linear_assignment", "(", "self", ",", "t", ",", "frame_index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.get_similarity_uv_by_linear_assignment": [[371, 374], ["None"], "methods", ["None"], ["        ", "res_similarity", "=", "[", "]", "\n", "res_uv", "=", "[", "]", "\n", "\n", "# for i, f in enumerate(t.f):", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.get_similarity_uv": [[378, 434], ["enumerate", "zip", "numpy.copy", "numpy.argmax", "len", "max", "TrackerConfig.min_iou_frame_gap.index", "numpy.append", "int", "float", "res.keys", "res.keys", "len", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["        ", "res_similarity", "=", "[", "]", "\n", "res_uv", "=", "[", "]", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "t", ".", "f", ")", ":", "\n", "            ", "if", "len", "(", "t", ".", "f", ")", "==", "TrackerConfig", ".", "max_track_node", "and", "i", "==", "0", ":", "\n", "                ", "continue", "\n", "\n", "", "all_iou", "=", "self", ".", "recorder", ".", "all_iou", "[", "frame_index", "]", "[", "f", "]", "\n", "all_similarity", "=", "self", ".", "recorder", ".", "all_similarity", "[", "frame_index", "]", "[", "f", "]", "\n", "selected_box_index", "=", "t", ".", "uv", "[", "i", ",", "i", "]", "\n", "if", "selected_box_index", "==", "-", "1", ":", "# cannot find box in f frame.", "\n", "                ", "res_similarity", "+=", "[", "0", "]", "\n", "res_uv", "+=", "[", "-", "1", "]", "\n", "continue", "\n", "\n", "# combine the similarity with the iou", "\n", "", "selected_similarity", "=", "np", ".", "copy", "(", "all_similarity", "[", "selected_box_index", ",", ":", "]", ")", "\n", "delta_f", "=", "frame_index", "-", "f", "\n", "if", "delta_f", "in", "TrackerConfig", ".", "min_iou_frame_gap", ":", "\n", "                ", "iou_index", "=", "TrackerConfig", ".", "min_iou_frame_gap", ".", "index", "(", "delta_f", ")", "\n", "selected_iou", "=", "(", "all_iou", "[", "selected_box_index", ",", ":", "]", ">=", "TrackerConfig", ".", "min_iou", "[", "iou_index", "]", ")", ".", "astype", "(", "float", ")", "\n", "selected_iou", "=", "np", ".", "append", "(", "selected_iou", ",", "1.0", ")", "\n", "selected_similarity", "=", "selected_similarity", "*", "selected_iou", "\n", "\n", "", "max_index", "=", "np", ".", "argmax", "(", "selected_similarity", ")", "\n", "max_value", "=", "all_similarity", "[", "selected_box_index", ",", "max_index", "]", "\n", "\n", "if", "max_index", "==", "all_similarity", ".", "shape", "[", "1", "]", "-", "1", ":", "# new node", "\n", "                ", "max_index", "=", "-", "1", "\n", "", "res_uv", "+=", "[", "int", "(", "max_index", ")", "]", "\n", "res_similarity", "+=", "[", "float", "(", "max_value", ")", "]", "\n", "\n", "# get the representation box of this frame.", "\n", "", "res", "=", "{", "}", "\n", "for", "uv", ",", "s", "in", "zip", "(", "res_uv", ",", "res_similarity", ")", ":", "\n", "# if s < 0.5:", "\n", "#     continue", "\n", "            ", "if", "uv", "not", "in", "res", ":", "\n", "                ", "res", "[", "uv", "]", "=", "[", "s", "]", "\n", "", "else", ":", "\n", "                ", "res", "[", "uv", "]", "+=", "[", "s", "]", "\n", "\n", "", "", "if", "len", "(", "res", ".", "keys", "(", ")", ")", ">", "0", ":", "\n", "            ", "max_uv", "=", "max", "(", "res", ".", "keys", "(", ")", ",", "key", "=", "(", "lambda", "k", ":", "np", ".", "sum", "(", "res", "[", "k", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "max_uv", "=", "-", "1", "\n", "\n", "", "res_similarity", "+=", "[", "1", "]", "\n", "res_uv", "+=", "[", "max_uv", "]", "\n", "\n", "if", "max_uv", "==", "-", "1", ":", "\n", "            ", "t", ".", "age", "+=", "1", "\n", "", "else", ":", "\n", "            ", "t", ".", "age", "=", "0", "\n", "\n", "", "return", "res_similarity", ",", "res_uv", "\n", "\n", "", "def", "show", "(", "self", ",", "image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show": [[435, 463], ["t.get_current_box", "t.get_all_nodes", "zip", "cv2.putText", "cv2.rectangle", "len", "cv2.line", "str", "len", "int", "int", "int", "int", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_current_box", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_all_nodes"], ["        ", "h", ",", "w", ",", "_", "=", "image", ".", "shape", "\n", "\n", "# draw rectangle", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "b", "=", "t", ".", "get_current_box", "(", "self", ".", "recorder", ")", "\n", "if", "not", "b", "is", "None", ":", "\n", "                ", "image", "=", "cv2", ".", "putText", "(", "image", ",", "str", "(", "t", ".", "id", ")", ",", "(", "int", "(", "b", "[", "0", "]", "*", "w", ")", ",", "int", "(", "(", "b", "[", "1", "]", ")", "*", "h", ")", ")", ",", "cv2", ".", "FONT_HERSHEY_SIMPLEX", ",", "1", ",", "\n", "t", ".", "color", ",", "3", ")", "\n", "image", "=", "cv2", ".", "rectangle", "(", "image", ",", "(", "int", "(", "b", "[", "0", "]", "*", "w", ")", ",", "int", "(", "(", "b", "[", "1", "]", ")", "*", "h", ")", ")", ",", "\n", "(", "int", "(", "(", "b", "[", "0", "]", "+", "b", "[", "2", "]", ")", "*", "w", ")", ",", "int", "(", "(", "b", "[", "1", "]", "+", "b", "[", "3", "]", ")", "*", "h", ")", ")", ",", "t", ".", "color", ",", "2", ")", "\n", "\n", "# draw line", "\n", "", "", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "age", ">", "1", ":", "\n", "                ", "continue", "\n", "", "nodes", "=", "t", ".", "get_all_nodes", "(", "self", ".", "recorder", ")", "\n", "if", "len", "(", "nodes", ")", ">", "self", ".", "max_drawing_track", ":", "\n", "                ", "start", "=", "len", "(", "nodes", ")", "-", "self", ".", "max_drawing_track", "\n", "", "else", ":", "\n", "                ", "start", "=", "0", "\n", "\n", "", "for", "n1", ",", "n2", "in", "zip", "(", "nodes", "[", "start", ":", "]", ",", "nodes", "[", "start", "+", "1", ":", "]", ")", ":", "\n", "                ", "c1", "=", "(", "int", "(", "(", "n1", "[", "0", "]", "+", "n1", "[", "2", "]", "/", "2.0", ")", "*", "w", ")", ",", "int", "(", "(", "n1", "[", "1", "]", "+", "n1", "[", "3", "]", ")", "*", "h", ")", ")", "\n", "c2", "=", "(", "int", "(", "(", "n2", "[", "0", "]", "+", "n2", "[", "2", "]", "/", "2.0", ")", "*", "w", ")", ",", "int", "(", "(", "n2", "[", "1", "]", "+", "n2", "[", "3", "]", ")", "*", "h", ")", ")", "\n", "image", "=", "cv2", ".", "line", "(", "image", ",", "c1", ",", "c2", ",", "t", ".", "color", ",", "2", ")", "\n", "\n", "", "", "return", "image", "\n", "\n", "", "def", "update", "(", "self", ",", "image", ",", "detection", ",", "show_image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update": [[464, 527], ["sst_tracker.TrackUtil.convert_image", "sst_tracker.TrackUtil.convert_detection", "sst_tracker.TrackSet.sst.forward_feature_extracter", "sst_tracker.TrackSet.recorder.update", "len", "range", "range", "numpy.zeros", "enumerate", "sst_tracker.TrackSet.show", "len", "sst_tracker.Track", "sst_tracker.Track.update", "sst_tracker.TrackSet.tracks.append", "sst_tracker.TrackSet.get_similarity_uv", "sst_tracker.Track.update", "len", "enumerate", "sum", "range", "sst_tracker.Track", "sst_tracker.Track.update", "sst_tracker.TrackSet.tracks.append", "sst_tracker.TrackUtil.get_merge_value", "sum", "range", "sst_tracker.Track.get_bad_probability", "sst_tracker.TrackUtil.merge"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_image", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.convert_detection", "home.repos.pwc.inspect_result.shijieS_SST.layer.sst.SST.forward_feature_extracter", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.show", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.get_similarity_uv", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackSet.update", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.get_merge_value", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.Track.get_bad_probability", "home.repos.pwc.inspect_result.shijieS_SST.backup.sst_tracker.TrackUtil.merge"], ["        ", "'''\n        1. get all the detection features and update the feature recorder\n        2. according the features update trackset\n        :param image: the current frame\n        :param detection: the detected boxes\n        :return: update current track according to the extracted features\n        '''", "\n", "frame_index", "=", "self", ".", "frame_index", "\n", "input_image", "=", "TrackUtil", ".", "convert_image", "(", "image", ")", "\n", "input_detection", "=", "TrackUtil", ".", "convert_detection", "(", "detection", ")", "\n", "\n", "features", "=", "self", ".", "sst", ".", "forward_feature_extracter", "(", "input_image", ",", "input_detection", ")", "\n", "self", ".", "recorder", ".", "update", "(", "self", ".", "sst", ",", "frame_index", ",", "features", ".", "data", ",", "detection", ")", "\n", "\n", "if", "frame_index", "==", "0", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "detection", ")", ")", ":", "\n", "                ", "t", "=", "Track", "(", ")", "\n", "t", ".", "update", "(", "0", ",", "[", "1", "]", ",", "[", "i", "]", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "\n", "", "", "else", ":", "\n", "# get all similarity between each frame", "\n", "            ", "record_id", "=", "[", "]", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "# get every boxes in current frame's similarity.", "\n", "                ", "similarity", ",", "uv", "=", "self", ".", "get_similarity_uv", "(", "t", ",", "frame_index", ")", "\n", "record_id", "+=", "uv", "[", "-", "1", ":", "]", "# record the representation", "\n", "t", ".", "update", "(", "frame_index", ",", "similarity", ",", "uv", ")", "\n", "\n", "# add new tracks", "\n", "", "for", "i", "in", "range", "(", "len", "(", "detection", ")", ")", ":", "\n", "                ", "if", "i", "not", "in", "record_id", ":", "\n", "                    ", "t", "=", "Track", "(", ")", "\n", "t", ".", "update", "(", "frame_index", ",", "[", "1", "]", ",", "[", "i", "]", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "\n", "# merge tracks", "\n", "", "", "", "l_track", "=", "len", "(", "self", ".", "tracks", ")", "\n", "if", "l_track", "!=", "0", ":", "\n", "            ", "merge_matrix", "=", "np", ".", "zeros", "(", "(", "l_track", ",", "l_track", ")", ",", "dtype", "=", "float", ")", "\n", "for", "i", ",", "t1", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "                ", "for", "j", ",", "t2", "in", "enumerate", "(", "self", ".", "tracks", ")", ":", "\n", "                    ", "merge_matrix", "[", "i", ",", "j", "]", "=", "TrackUtil", ".", "get_merge_value", "(", "t1", ",", "t2", ")", "\n", "\n", "", "", "merge_matrix", "=", "merge_matrix", ">", "TrackerConfig", ".", "min_merge_threshold", "\n", "if", "sum", "(", "sum", "(", "merge_matrix", ")", ")", ">", "0", ":", "\n", "                ", "for", "i", "in", "range", "(", "l_track", ")", ":", "\n", "                    ", "if", "self", ".", "tracks", "[", "i", "]", ".", "valid", ":", "\n", "                        ", "for", "j", "in", "range", "(", "l_track", ")", ":", "\n", "                            ", "if", "self", ".", "tracks", "[", "j", "]", ".", "valid", "and", "merge_matrix", "[", "i", ",", "j", "]", ":", "\n", "                                ", "TrackUtil", ".", "merge", "(", "self", ".", "tracks", "[", "i", "]", ",", "self", ".", "tracks", "[", "j", "]", ")", "\n", "\n", "", "", "", "", "", "self", ".", "tracks", "=", "[", "t", "for", "t", "in", "self", ".", "tracks", "if", "t", ".", "valid", "]", "\n", "\n", "# remove older track", "\n", "", "self", ".", "tracks", "=", "[", "t", "for", "t", "in", "self", ".", "tracks", "if", "t", ".", "age", "<", "TrackerConfig", ".", "max_track_age", "and", "t", ".", "get_bad_probability", "(", ")", "<", "TrackerConfig", ".", "max_bad_node", "]", "\n", "\n", "self", ".", "frame_index", "+=", "1", "\n", "\n", "if", "show_image", ":", "\n", "            ", "image", "=", "self", ".", "show", "(", "image", ")", "\n", "return", "image", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.Node.__init__": [[15, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "box", ",", "frame_id", ",", "next_fram_id", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "box", "=", "box", "\n", "self", ".", "frame_id", "=", "frame_id", "\n", "self", ".", "next_frame_id", "=", "next_fram_id", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.Track.__init__": [[22, 25], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "id", ")", ":", "\n", "        ", "self", ".", "nodes", "=", "list", "(", ")", "\n", "self", ".", "id", "=", "id", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.Track.add_node": [[26, 30], ["mot.Track.nodes.append", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "add_node", "(", "self", ",", "n", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "nodes", ")", ">", "0", ":", "\n", "            ", "self", ".", "nodes", "[", "-", "1", "]", ".", "next_frame_id", "=", "n", ".", "frame_id", "\n", "", "self", ".", "nodes", ".", "append", "(", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.Track.get_node_by_index": [[31, 33], ["None"], "methods", ["None"], ["", "def", "get_node_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "nodes", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.Tracks.__init__": [[36, 38], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "tracks", "=", "list", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.Tracks.add_node": [[39, 58], ["mot.Track", "mot.Track.add_node", "mot.Tracks.tracks.append", "mot.Tracks.tracks.index", "Track.nodes.index", "mot.Track.add_node", "mot.Tracks.tracks.index", "Track.nodes.index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node"], ["", "def", "add_node", "(", "self", ",", "node", ",", "id", ")", ":", "\n", "        ", "node_add", "=", "False", "\n", "track_index", "=", "0", "\n", "node_index", "=", "0", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "id", "==", "id", ":", "\n", "                ", "t", ".", "add_node", "(", "node", ")", "\n", "node_add", "=", "True", "\n", "track_index", "=", "self", ".", "tracks", ".", "index", "(", "t", ")", "\n", "node_index", "=", "t", ".", "nodes", ".", "index", "(", "node", ")", "\n", "break", "\n", "", "", "if", "not", "node_add", ":", "\n", "            ", "t", "=", "Track", "(", "id", ")", "\n", "t", ".", "add_node", "(", "node", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "track_index", "=", "self", ".", "tracks", ".", "index", "(", "t", ")", "\n", "node_index", "=", "t", ".", "nodes", ".", "index", "(", "node", ")", "\n", "\n", "", "return", "track_index", ",", "node_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.Tracks.get_track_by_index": [[59, 61], ["None"], "methods", ["None"], ["", "def", "get_track_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "tracks", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.GTSingleParser.__init__": [[64, 97], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.read_csv", "pandas.read_csv.groupby", "pd.read_csv.groupby.indices.keys", "max", "mot.Tracks", "numpy.array().astype", "numpy.array", "list", "zip", "pd.read_csv.groupby.get_group", "mot.Node", "mot.GTSingleParser.tracks.add_node", "mot.GTSingleParser.recorder[].append", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["    ", "def", "__init__", "(", "self", ",", "folder", ",", "\n", "detector", "=", "config", "[", "'detector'", "]", ",", "\n", "min_visibility", "=", "config", "[", "'min_visibility'", "]", ",", "\n", "min_gap", "=", "config", "[", "'min_gap_frame'", "]", ",", "\n", "max_gap", "=", "config", "[", "'max_gap_frame'", "]", ")", ":", "\n", "        ", "self", ".", "min_gap", "=", "min_gap", "\n", "self", ".", "max_gap", "=", "max_gap", "\n", "# 1. get the gt path and image folder", "\n", "gt_file_path", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'gt/gt.txt'", ")", "\n", "self", ".", "folder", "=", "folder", "\n", "\n", "# 2. read the gt data", "\n", "gt_file", "=", "pd", ".", "read_csv", "(", "gt_file_path", ",", "header", "=", "None", ")", "\n", "gt_file", "=", "gt_file", "[", "gt_file", "[", "6", "]", "==", "1", "]", "\n", "gt_file", "=", "gt_file", "[", "gt_file", "[", "8", "]", ">", "min_visibility", "]", "\n", "gt_group", "=", "gt_file", ".", "groupby", "(", "0", ")", "\n", "gt_group_keys", "=", "gt_group", ".", "indices", ".", "keys", "(", ")", "\n", "self", ".", "max_frame_index", "=", "max", "(", "gt_group_keys", ")", "\n", "# 3. update tracks", "\n", "self", ".", "tracks", "=", "Tracks", "(", ")", "\n", "self", ".", "recorder", "=", "{", "}", "\n", "for", "key", "in", "gt_group_keys", ":", "\n", "            ", "det", "=", "gt_group", ".", "get_group", "(", "key", ")", ".", "values", "\n", "ids", "=", "np", ".", "array", "(", "det", "[", ":", ",", "1", "]", ")", ".", "astype", "(", "int", ")", "\n", "det", "=", "np", ".", "array", "(", "det", "[", ":", ",", "2", ":", "6", "]", ")", "\n", "det", "[", ":", ",", "2", ":", "4", "]", "+=", "det", "[", ":", ",", ":", "2", "]", "\n", "\n", "self", ".", "recorder", "[", "key", "-", "1", "]", "=", "list", "(", ")", "\n", "# 3.1 update tracks", "\n", "for", "id", ",", "d", "in", "zip", "(", "ids", ",", "det", ")", ":", "\n", "                ", "node", "=", "Node", "(", "d", ",", "key", "-", "1", ")", "\n", "track_index", ",", "node_index", "=", "self", ".", "tracks", ".", "add_node", "(", "node", ",", "id", ")", "\n", "self", ".", "recorder", "[", "key", "-", "1", "]", ".", "append", "(", "(", "track_index", ",", "node_index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.GTSingleParser._getimage": [[98, 101], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "cv2.imread"], "methods", ["None"], ["", "", "", "def", "_getimage", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "folder", ",", "'img1/{0:06}.jpg'", ".", "format", "(", "frame_index", ")", ")", "\n", "return", "cv2", ".", "imread", "(", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.GTSingleParser.get_item": [[102, 172], ["mot.GTSingleParser._getimage", "list", "list", "list", "mot.GTSingleParser._getimage", "list", "list", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "mot.GTSingleParser.tracks.get_track_by_index", "mot.GTSingleParser.get_node_by_index", "numpy.array.append", "numpy.array.append", "len", "len", "max", "bool", "mot.GTSingleParser.tracks.get_track_by_index", "numpy.array.append", "mot.GTSingleParser.get_node_by_index", "numpy.array.append", "numpy.repeat", "numpy.repeat", "list.append", "random.getrandbits", "random.choice", "random.randint", "list", "numpy.expand_dims", "len", "numpy.expand_dims", "len", "range", "list.append", "random.choice", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser._getimage", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser._getimage", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.get_track_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.get_node_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.get_track_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.get_node_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "get_item", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "'''\n        get the current_image, current_boxes, next_image, next_boxes, labels from the frame_index\n        :param frame_index:\n        :return: current_image, current_boxes, next_image, next_boxes, labels\n        '''", "\n", "if", "not", "frame_index", "in", "self", ".", "recorder", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "# get current_image, current_box, next_image, next_box and labels", "\n", "", "current_image", "=", "self", ".", "_getimage", "(", "frame_index", ")", "\n", "current_boxes", "=", "list", "(", ")", "\n", "current", "=", "self", ".", "recorder", "[", "frame_index", "]", "\n", "next_frame_indexes", "=", "list", "(", ")", "\n", "current_track_indexes", "=", "list", "(", ")", "\n", "# 1. get current box", "\n", "for", "track_index", ",", "node_index", "in", "current", ":", "\n", "            ", "t", "=", "self", ".", "tracks", ".", "get_track_by_index", "(", "track_index", ")", "\n", "n", "=", "t", ".", "get_node_by_index", "(", "node_index", ")", "\n", "current_boxes", ".", "append", "(", "n", ".", "box", ")", "\n", "\n", "current_track_indexes", ".", "append", "(", "track_index", ")", "\n", "if", "n", ".", "next_frame_id", "!=", "-", "1", ":", "\n", "                ", "next_frame_indexes", ".", "append", "(", "n", ".", "next_frame_id", ")", "\n", "\n", "# 2. decide the next frame (0.5 probability to choose the farest ones, and other probability to choose the frame between them)", "\n", "", "", "if", "len", "(", "next_frame_indexes", ")", "==", "0", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "", "if", "len", "(", "next_frame_indexes", ")", "==", "1", ":", "\n", "            ", "next_frame_index", "=", "next_frame_indexes", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "max_next_frame_index", "=", "max", "(", "next_frame_indexes", ")", "\n", "is_choose_farest", "=", "bool", "(", "random", ".", "getrandbits", "(", "1", ")", ")", "\n", "if", "is_choose_farest", ":", "\n", "               ", "next_frame_index", "=", "max_next_frame_index", "\n", "", "else", ":", "\n", "                ", "next_frame_index", "=", "random", ".", "choice", "(", "next_frame_indexes", ")", "\n", "gap_frame", "=", "random", ".", "randint", "(", "self", ".", "min_gap", ",", "self", ".", "max_gap", ")", "\n", "temp_frame_index", "=", "next_frame_index", "+", "gap_frame", "\n", "choice_gap", "=", "list", "(", "range", "(", "self", ".", "min_gap", ",", "self", ".", "max_gap", ")", ")", "\n", "if", "self", ".", "min_gap", "!=", "0", ":", "\n", "                    ", "choice_gap", ".", "append", "(", "0", ")", "\n", "", "while", "not", "temp_frame_index", "in", "self", ".", "recorder", ":", "\n", "                    ", "gap_frame", "=", "random", ".", "choice", "(", "choice_gap", ")", "\n", "temp_frame_index", "=", "next_frame_index", "+", "gap_frame", "\n", "", "next_frame_index", "=", "temp_frame_index", "\n", "\n", "# 3. get next image", "\n", "", "", "next_image", "=", "self", ".", "_getimage", "(", "next_frame_index", ")", "\n", "\n", "# 4. get next frame boxes", "\n", "next", "=", "self", ".", "recorder", "[", "next_frame_index", "]", "\n", "next_boxes", "=", "list", "(", ")", "\n", "next_track_indexes", "=", "list", "(", ")", "\n", "for", "track_index", ",", "node_index", "in", "next", ":", "\n", "            ", "t", "=", "self", ".", "tracks", ".", "get_track_by_index", "(", "track_index", ")", "\n", "next_track_indexes", ".", "append", "(", "track_index", ")", "\n", "n", "=", "t", ".", "get_node_by_index", "(", "node_index", ")", "\n", "next_boxes", ".", "append", "(", "n", ".", "box", ")", "\n", "\n", "# 5. get the labels", "\n", "", "current_track_indexes", "=", "np", ".", "array", "(", "current_track_indexes", ")", "\n", "next_track_indexes", "=", "np", ".", "array", "(", "next_track_indexes", ")", "\n", "labels", "=", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "array", "(", "current_track_indexes", ")", ",", "axis", "=", "1", ")", ",", "len", "(", "next_track_indexes", ")", ",", "axis", "=", "1", ")", "==", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "array", "(", "next_track_indexes", ")", ",", "axis", "=", "0", ")", ",", "len", "(", "current_track_indexes", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# 6. return all values", "\n", "# 6.1 change boxes format", "\n", "current_boxes", "=", "np", ".", "array", "(", "current_boxes", ")", "\n", "next_boxes", "=", "np", ".", "array", "(", "next_boxes", ")", "\n", "# 6.2 return the corresponding values", "\n", "return", "current_image", ",", "current_boxes", ",", "next_image", ",", "next_boxes", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.GTSingleParser.__len__": [[173, 175], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "max_frame_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.GTParser.__init__": [[177, 194], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "sorted", "sum", "mot.GTSingleParser", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "i.find"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mot_root", "=", "config", "[", "'mot_root'", "]", ",", "\n", "detector", "=", "config", "[", "'detector'", "]", ",", "\n", "type", "=", "config", "[", "'type'", "]", ")", ":", "\n", "# analsis all the folder in mot_root", "\n", "# 1. get all the folders", "\n", "        ", "mot_root", "=", "os", ".", "path", ".", "join", "(", "mot_root", ",", "type", ")", "\n", "all_folders", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "mot_root", ",", "i", ")", "for", "i", "in", "os", ".", "listdir", "(", "mot_root", ")", "\n", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "mot_root", ",", "i", ")", ")", "\n", "and", "i", ".", "find", "(", "detector", ")", "!=", "-", "1", "]", "\n", ")", "\n", "# 2. create single parser", "\n", "self", ".", "parsers", "=", "[", "GTSingleParser", "(", "folder", ")", "for", "folder", "in", "all_folders", "]", "\n", "\n", "# 3. get some basic information", "\n", "self", ".", "lens", "=", "[", "len", "(", "p", ")", "for", "p", "in", "self", ".", "parsers", "]", "\n", "self", ".", "len", "=", "sum", "(", "self", ".", "lens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.GTParser.__len__": [[195, 198], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "# get the length of all the matching frame", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.GTParser.__getitem__": [[199, 218], ["mot.GTParser.parsers[].get_item", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser.get_item"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "<", "0", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "# 1. find the parser", "\n", "", "total_len", "=", "0", "\n", "index", "=", "0", "\n", "current_item", "=", "item", "\n", "for", "l", "in", "self", ".", "lens", ":", "\n", "            ", "total_len", "+=", "l", "\n", "if", "item", "<", "total_len", ":", "\n", "                ", "break", "\n", "", "else", ":", "\n", "                ", "index", "+=", "1", "\n", "current_item", "-=", "l", "\n", "\n", "# 2. get items", "\n", "", "", "if", "index", ">=", "len", "(", "self", ".", "parsers", ")", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "", "return", "self", ".", "parsers", "[", "index", "]", ".", "get_item", "(", "current_item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.MOTTrainDataset.__init__": [[224, 242], ["mot.GTParser"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "mot_root", "=", "config", "[", "'mot_root'", "]", ",", "\n", "transform", "=", "None", ",", "\n", "type", "=", "config", "[", "'type'", "]", ",", "\n", "detector", "=", "config", "[", "'detector'", "]", ",", "\n", "max_object", "=", "config", "[", "'max_object'", "]", ",", "\n", "dataset_name", "=", "'MOT17'", "\n", ")", ":", "\n", "# 1. init all the variables", "\n", "        ", "self", ".", "mot_root", "=", "mot_root", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "type", "=", "type", "\n", "self", ".", "detector", "=", "detector", "\n", "self", ".", "max_object", "=", "max_object", "\n", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n", "# 2. init GTParser", "\n", "self", ".", "parser", "=", "GTParser", "(", "self", ".", "mot_root", ",", "self", ".", "detector", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.MOTTrainDataset.__getitem__": [[243, 260], ["numpy.pad", "mot.MOTTrainDataset.transform", "print", "random.randint"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.DataTransform.transform"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "item", "]", "\n", "\n", "while", "current_image", "is", "None", ":", "\n", "            ", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "item", "+", "random", ".", "randint", "(", "-", "config", "[", "'max_gap_frame'", "]", ",", "config", "[", "'max_gap_frame'", "]", ")", "]", "\n", "print", "(", "'None processing.'", ")", "\n", "\n", "", "if", "self", ".", "transform", "is", "None", ":", "\n", "            ", "return", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "\n", "\n", "# change the label to max_object x max_object", "\n", "", "labels", "=", "np", ".", "pad", "(", "labels", ",", "\n", "[", "(", "0", ",", "self", ".", "max_object", "-", "labels", ".", "shape", "[", "0", "]", ")", ",", "\n", "(", "0", ",", "self", ".", "max_object", "-", "labels", ".", "shape", "[", "1", "]", ")", "]", ",", "\n", "mode", "=", "'constant'", ",", "\n", "constant_values", "=", "0", ")", "\n", "return", "self", ".", "transform", "(", "current_image", ",", "next_image", ",", "current_box", ",", "next_box", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.MOTTrainDataset.__len__": [[261, 263], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "parser", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot.test_dataset": [[265, 294], ["mot.MOTTrainDataset", "print", "len", "range", "len", "print", "enumerate", "numpy.concatenate", "cv2.resize", "cv2.imshow", "cv2.waitKey", "b1.astype.astype", "np.array.astype", "cv2.rectangle", "cv2.rectangle", "sum", "numpy.array", "tuple", "sum", "EnvironmentError", "tuple", "tuple", "tuple", "tuple", "numpy.random.rand"], "function", ["None"], ["", "", "def", "test_dataset", "(", ")", ":", "\n", "# 1. test init function", "\n", "    ", "dataset", "=", "MOTTrainDataset", "(", ")", "\n", "print", "(", "len", "(", "dataset", ")", ")", "\n", "\n", "# 2. test get item", "\n", "l", "=", "len", "(", "dataset", ")", "\n", "for", "i", "in", "range", "(", "l", ")", ":", "\n", "        ", "print", "(", "i", ")", "\n", "current_image", ",", "current_boxes", ",", "next_image", ",", "next_boxes", ",", "labels", "=", "dataset", "[", "i", "]", "\n", "if", "current_image", "is", "None", ":", "\n", "            ", "continue", "\n", "", "for", "i", ",", "b1", "in", "enumerate", "(", "current_boxes", ")", ":", "\n", "            ", "color", "=", "(", "0", ",", "0", ",", "255", ")", "\n", "if", "sum", "(", "labels", "[", "i", ",", ":", "]", ")", "==", "0", ":", "\n", "                ", "b2", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "b2", "=", "next_boxes", "[", "labels", "[", "i", ",", ":", "]", "]", "[", "0", "]", "\n", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "", "if", "sum", "(", "labels", "[", "i", ",", ":", "]", ")", ">", "1", ":", "\n", "                ", "raise", "EnvironmentError", "(", "'label error'", ")", "\n", "", "b1", "=", "b1", ".", "astype", "(", "int", ")", "\n", "b2", "=", "b2", ".", "astype", "(", "int", ")", "\n", "cv2", ".", "rectangle", "(", "current_image", ",", "tuple", "(", "b1", "[", ":", "2", "]", ")", ",", "tuple", "(", "b1", "[", "2", ":", "]", ")", ",", "color", ",", "2", ")", "\n", "cv2", ".", "rectangle", "(", "next_image", ",", "tuple", "(", "b2", "[", ":", "2", "]", ")", ",", "tuple", "(", "b2", "[", "2", ":", "]", ")", ",", "color", ",", "2", ")", "\n", "", "image", "=", "np", ".", "concatenate", "(", "[", "current_image", ",", "next_image", "]", ",", "axis", "=", "0", ")", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "1900", ",", "1000", ")", ")", "\n", "cv2", ".", "imshow", "(", "'res'", ",", "image", ")", "\n", "cv2", ".", "waitKey", "(", "25", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_detection_data_reader.UADetectionDataReader.__init__": [[16, 61], ["os.path.join", "pandas.read_csv", "ua_detection_data_reader.UADetectionDataReader.detection.groupby", "list", "len", "pandas.read_csv", "numpy.array", "ua_detection_data_reader.UADetectionDataReader.detection_group.indices.keys", "numpy.logical_and", "os.stat", "numpy.logical_and", "numpy.logical_and", "numpy.logical_or", "numpy.logical_not"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_folder", ",", "detection_file_name", ",", "ignore_file_name", ",", "detection_threshold", "=", "0.0", ")", ":", "\n", "        ", "datatype", "=", "{", "0", ":", "int", ",", "1", ":", "int", ",", "2", ":", "float", ",", "3", ":", "float", ",", "4", ":", "float", ",", "5", ":", "float", ",", "6", ":", "float", "}", "\n", "datatype_ignore", "=", "{", "0", ":", "float", ",", "1", ":", "float", ",", "2", ":", "float", ",", "3", ":", "float", "}", "\n", "\n", "self", ".", "image_folder", "=", "image_folder", "\n", "self", ".", "detection_file_name", "=", "detection_file_name", "\n", "self", ".", "ignore_file_name", "=", "ignore_file_name", "\n", "self", ".", "image_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "'img{0:05d}.jpg'", ")", "\n", "self", ".", "detection", "=", "pd", ".", "read_csv", "(", "self", ".", "detection_file_name", ",", "sep", "=", "','", ",", "header", "=", "None", ",", "dtype", "=", "datatype", ")", "\n", "\n", "# self.detection.iloc[:, 4] += self.detection.iloc[:, 2]", "\n", "# self.detection.iloc[:, 5] += self.detection.iloc[:, 3]", "\n", "\n", "# read ignore file", "\n", "mask", "=", "None", "\n", "self", ".", "ignore", "=", "None", "\n", "if", "ignore_file_name", "is", "not", "None", "and", "os", ".", "stat", "(", "self", ".", "ignore_file_name", ")", ".", "st_size", ">", "0", ":", "\n", "            ", "self", ".", "ignore", "=", "pd", ".", "read_csv", "(", "self", ".", "ignore_file_name", ",", "sep", "=", "','", ",", "header", "=", "None", ",", "dtype", "=", "datatype_ignore", ")", "\n", "self", ".", "ignore", "=", "self", ".", "ignore", ".", "values", "\n", "cx", "=", "(", "2", "*", "self", ".", "detection", ".", "iloc", "[", ":", ",", "2", "]", ".", "values", "+", "self", ".", "detection", ".", "iloc", "[", ":", ",", "4", "]", ".", "values", ")", "/", "2.0", "\n", "cy", "=", "(", "2", "*", "self", ".", "detection", ".", "iloc", "[", ":", ",", "3", "]", ".", "values", "+", "self", ".", "detection", ".", "iloc", "[", ":", ",", "5", "]", ".", "values", ")", "/", "2.0", "\n", "self", ".", "ignore", "=", "np", ".", "array", "(", "[", "[", "r", "[", "0", "]", ",", "r", "[", "1", "]", ",", "r", "[", "0", "]", "+", "r", "[", "2", "]", ",", "r", "[", "1", "]", "+", "r", "[", "3", "]", "]", "for", "r", "in", "self", ".", "ignore", "]", ")", "\n", "for", "rect", "in", "self", ".", "ignore", ":", "\n", "                ", "l", "=", "rect", "[", "0", "]", "\n", "t", "=", "rect", "[", "1", "]", "\n", "r", "=", "rect", "[", "2", "]", "\n", "b", "=", "rect", "[", "3", "]", "\n", "\n", "res", "=", "np", ".", "logical_and", "(", "\n", "np", ".", "logical_and", "(", "l", "<=", "cx", ",", "cx", "<=", "r", ")", ",", "\n", "np", ".", "logical_and", "(", "t", "<=", "cy", ",", "cy", "<=", "b", ")", "\n", ")", "\n", "if", "mask", "is", "None", ":", "\n", "                    ", "mask", "=", "res", "\n", "", "else", ":", "\n", "                    ", "mask", "=", "np", ".", "logical_or", "(", "mask", ",", "res", ")", "\n", "", "", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "detection", "=", "self", ".", "detection", "[", "np", ".", "logical_not", "(", "mask", ")", "]", "\n", "\n", "", "self", ".", "detection", "=", "self", ".", "detection", "[", "self", ".", "detection", ".", "iloc", "[", ":", ",", "6", "]", ">=", "detection_threshold", "]", "\n", "\n", "self", ".", "detection_group", "=", "self", ".", "detection", ".", "groupby", "(", "0", ")", "\n", "self", ".", "detection_group_keys", "=", "list", "(", "self", ".", "detection_group", ".", "indices", ".", "keys", "(", ")", ")", "\n", "\n", "self", ".", "length", "=", "len", "(", "self", ")", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_detection_data_reader.UADetectionDataReader.__len__": [[61, 63], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "detection_group_keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_detection_data_reader.UADetectionDataReader.get_detection_by_index": [[64, 68], ["ua_detection_data_reader.UADetectionDataReader.detection_group.get_group", "len", "ua_detection_data_reader.UADetectionDataReader.detection_group_keys.count"], "methods", ["None"], ["", "def", "get_detection_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", "or", "self", ".", "detection_group_keys", ".", "count", "(", "index", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "self", ".", "detection_group", ".", "get_group", "(", "index", ")", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_detection_data_reader.UADetectionDataReader.get_image_by_index": [[69, 74], ["cv2.imread", "len", "ua_detection_data_reader.UADetectionDataReader.image_format.format"], "methods", ["None"], ["", "def", "get_image_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "", "return", "cv2", ".", "imread", "(", "self", ".", "image_format", ".", "format", "(", "index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_detection_data_reader.UADetectionDataReader.__getitem__": [[75, 80], ["IndexError", "ua_detection_data_reader.UADetectionDataReader.get_image_by_index", "ua_detection_data_reader.UADetectionDataReader.get_detection_by_index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_image_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_detection_by_index"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", ">=", "self", ".", "length", ":", "\n", "            ", "raise", "IndexError", "(", ")", "\n", "", "return", "(", "self", ".", "get_image_by_index", "(", "item", "+", "1", ")", ",", "\n", "self", ".", "get_detection_by_index", "(", "item", "+", "1", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.Node.__init__": [[12, 16], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "box", ",", "frame_id", ",", "next_fram_id", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "box", "=", "box", "\n", "self", ".", "frame_id", "=", "frame_id", "\n", "self", ".", "next_frame_id", "=", "next_fram_id", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.Track.__init__": [[19, 22], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "id", ")", ":", "\n", "        ", "self", ".", "nodes", "=", "list", "(", ")", "\n", "self", ".", "id", "=", "id", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.Track.add_node": [[23, 27], ["ua.Track.nodes.append", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "add_node", "(", "self", ",", "n", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "nodes", ")", ">", "0", ":", "\n", "            ", "self", ".", "nodes", "[", "-", "1", "]", ".", "next_frame_id", "=", "n", ".", "frame_id", "\n", "", "self", ".", "nodes", ".", "append", "(", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.Track.get_node_by_index": [[28, 30], ["None"], "methods", ["None"], ["", "def", "get_node_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "nodes", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.Tracks.__init__": [[33, 35], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "tracks", "=", "list", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.Tracks.add_node": [[36, 55], ["ua.Track", "ua.Track.add_node", "ua.Tracks.tracks.append", "ua.Tracks.tracks.index", "Track.nodes.index", "ua.Track.add_node", "ua.Tracks.tracks.index", "Track.nodes.index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node"], ["", "def", "add_node", "(", "self", ",", "node", ",", "id", ")", ":", "\n", "        ", "node_add", "=", "False", "\n", "track_index", "=", "0", "\n", "node_index", "=", "0", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "id", "==", "id", ":", "\n", "                ", "t", ".", "add_node", "(", "node", ")", "\n", "node_add", "=", "True", "\n", "track_index", "=", "self", ".", "tracks", ".", "index", "(", "t", ")", "\n", "node_index", "=", "t", ".", "nodes", ".", "index", "(", "node", ")", "\n", "break", "\n", "", "", "if", "not", "node_add", ":", "\n", "            ", "t", "=", "Track", "(", "id", ")", "\n", "t", ".", "add_node", "(", "node", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "track_index", "=", "self", ".", "tracks", ".", "index", "(", "t", ")", "\n", "node_index", "=", "t", ".", "nodes", ".", "index", "(", "node", ")", "\n", "\n", "", "return", "track_index", ",", "node_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.Tracks.get_track_by_index": [[56, 58], ["None"], "methods", ["None"], ["", "def", "get_track_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "tracks", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.GTSingleParser.__init__": [[61, 132], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.read_csv", "ua.Tracks", "ua.GTSingleParser.detection.groupby", "list", "pandas.read_csv", "numpy.array", "len", "ua.GTSingleParser.detection_group.indices.keys", "len", "max", "numpy.array().astype", "numpy.array", "list", "zip", "numpy.logical_and", "ua.GTSingleParser.detection_group.get_group", "ua.Node", "ua.GTSingleParser.tracks.add_node", "ua.GTSingleParser.recorder[].append", "os.stat", "os.stat", "os.stat", "os.stat", "numpy.logical_and", "numpy.logical_and", "numpy.logical_or", "numpy.logical_not", "numpy.array", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["    ", "def", "__init__", "(", "self", ",", "image_folder", ",", "detection_file_name", ",", "ignore_file_name", ",", "\n", "min_gap", "=", "config", "[", "'min_gap_frame'", "]", ",", "\n", "max_gap", "=", "config", "[", "'max_gap_frame'", "]", ")", ":", "\n", "        ", "datatype", "=", "{", "0", ":", "int", ",", "1", ":", "int", ",", "2", ":", "float", ",", "3", ":", "float", ",", "4", ":", "float", ",", "5", ":", "float", "}", "\n", "datatype_ignore", "=", "{", "0", ":", "float", ",", "1", ":", "float", ",", "2", ":", "float", ",", "3", ":", "float", "}", "\n", "\n", "self", ".", "min_gap", "=", "min_gap", "\n", "self", ".", "max_gap", "=", "max_gap", "\n", "\n", "# 1. get the gt path and image folder", "\n", "self", ".", "image_folder", "=", "image_folder", "\n", "self", ".", "detection_file_name", "=", "detection_file_name", "\n", "self", ".", "ignore_file_name", "=", "ignore_file_name", "\n", "\n", "# 2. read the gt data", "\n", "self", ".", "image_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "'img{0:05d}.jpg'", ")", "\n", "self", ".", "detection", "=", "pd", ".", "read_csv", "(", "self", ".", "detection_file_name", ",", "sep", "=", "','", ",", "header", "=", "None", ",", "dtype", "=", "datatype", ")", "\n", "\n", "# 3. filter detection by the ignore region", "\n", "mask", "=", "None", "\n", "if", "ignore_file_name", "is", "not", "None", "and", "os", ".", "stat", "(", "self", ".", "ignore_file_name", ")", ".", "st_size", ">", "0", ":", "\n", "            ", "self", ".", "ignore", "=", "pd", ".", "read_csv", "(", "self", ".", "ignore_file_name", ",", "sep", "=", "','", ",", "header", "=", "None", ",", "dtype", "=", "datatype_ignore", ")", "\n", "self", ".", "ignore", "=", "self", ".", "ignore", ".", "values", "\n", "ls", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "2", "]", ".", "values", "\n", "ts", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "3", "]", ".", "values", "\n", "rs", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "4", "]", ".", "values", "\n", "bs", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "5", "]", ".", "values", "\n", "\n", "self", ".", "ignore", "=", "np", ".", "array", "(", "[", "[", "r", "[", "0", "]", ",", "r", "[", "1", "]", ",", "r", "[", "0", "]", "+", "r", "[", "2", "]", ",", "r", "[", "1", "]", "+", "r", "[", "3", "]", "]", "for", "r", "in", "self", ".", "ignore", "]", ")", "\n", "for", "rect", "in", "self", ".", "ignore", ":", "\n", "                ", "l", "=", "rect", "[", "0", "]", "\n", "t", "=", "rect", "[", "1", "]", "\n", "r", "=", "rect", "[", "2", "]", "\n", "b", "=", "rect", "[", "3", "]", "\n", "res", "=", "np", ".", "logical_and", "(", "\n", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "l", "<", "ls", ",", "ls", "<", "r", ")", ",", "np", ".", "logical_and", "(", "l", "<", "rs", ",", "rs", "<", "r", ")", ")", ",", "\n", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "t", "<", "ts", ",", "ts", "<", "b", ")", ",", "np", ".", "logical_and", "(", "t", "<", "bs", ",", "bs", "<", "b", ")", ")", "\n", ")", "\n", "if", "mask", "is", "None", ":", "\n", "                    ", "mask", "=", "res", "\n", "", "else", ":", "\n", "                    ", "mask", "=", "np", ".", "logical_or", "(", "mask", ",", "res", ")", "\n", "", "", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "detection", "=", "self", ".", "detection", "[", "np", ".", "logical_not", "(", "mask", ")", "]", "\n", "\n", "", "self", ".", "tracks", "=", "Tracks", "(", ")", "\n", "self", ".", "recorder", "=", "{", "}", "\n", "\n", "if", "len", "(", "self", ".", "detection", ")", "==", "0", ":", "\n", "            ", "self", ".", "max_frame_index", "=", "0", "\n", "return", "\n", "\n", "", "self", ".", "detection_group", "=", "self", ".", "detection", ".", "groupby", "(", "0", ")", "\n", "self", ".", "detection_group_keys", "=", "list", "(", "self", ".", "detection_group", ".", "indices", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "self", ".", "detection_group_keys", ")", "==", "0", ":", "\n", "            ", "self", ".", "max_frame_index", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "max_frame_index", "=", "max", "(", "self", ".", "detection_group_keys", ")", "\n", "\n", "# 3. update tracks", "\n", "", "for", "key", "in", "self", ".", "detection_group_keys", ":", "\n", "            ", "det", "=", "self", ".", "detection_group", ".", "get_group", "(", "key", ")", ".", "values", "\n", "ids", "=", "np", ".", "array", "(", "det", "[", ":", ",", "1", "]", ")", ".", "astype", "(", "int", ")", "\n", "det", "=", "np", ".", "array", "(", "det", "[", ":", ",", "2", ":", "6", "]", ")", "\n", "\n", "self", ".", "recorder", "[", "key", "]", "=", "list", "(", ")", "\n", "# 3.1 update tracks", "\n", "for", "id", ",", "d", "in", "zip", "(", "ids", ",", "det", ")", ":", "\n", "                ", "node", "=", "Node", "(", "d", ",", "key", ")", "\n", "track_index", ",", "node_index", "=", "self", ".", "tracks", ".", "add_node", "(", "node", ",", "id", ")", "\n", "self", ".", "recorder", "[", "key", "]", ".", "append", "(", "(", "track_index", ",", "node_index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.GTSingleParser._getimage": [[133, 136], ["ua.GTSingleParser.image_format.format", "cv2.imread"], "methods", ["None"], ["", "", "", "def", "_getimage", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "image_path", "=", "self", ".", "image_format", ".", "format", "(", "frame_index", ")", "\n", "return", "cv2", ".", "imread", "(", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.GTSingleParser.get_item": [[137, 210], ["ua.GTSingleParser._getimage", "list", "list", "list", "ua.GTSingleParser._getimage", "list", "list", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "ua.GTSingleParser.tracks.get_track_by_index", "ua.GTSingleParser.get_node_by_index", "numpy.array.append", "numpy.array.append", "len", "len", "max", "bool", "ua.GTSingleParser.tracks.get_track_by_index", "numpy.array.append", "ua.GTSingleParser.get_node_by_index", "numpy.array.append", "numpy.repeat", "numpy.repeat", "list.append", "random.getrandbits", "random.choice", "random.randint", "list", "numpy.expand_dims", "len", "numpy.expand_dims", "len", "range", "list.append", "random.choice", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser._getimage", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser._getimage", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.get_track_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.get_node_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.get_track_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.get_node_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "get_item", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "'''\n        get the current_image, current_boxes, next_image, next_boxes, labels from the frame_index\n        :param frame_index:\n        :return: current_image, current_boxes, next_image, next_boxes, labels\n        '''", "\n", "if", "frame_index", "not", "in", "self", ".", "recorder", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "\n", "# get current_image, current_box, next_image, next_box and labels", "\n", "", "current_image", "=", "self", ".", "_getimage", "(", "frame_index", ")", "\n", "current_boxes", "=", "list", "(", ")", "\n", "current", "=", "self", ".", "recorder", "[", "frame_index", "]", "\n", "next_frame_indexes", "=", "list", "(", ")", "\n", "current_track_indexes", "=", "list", "(", ")", "\n", "# 1. get current box", "\n", "for", "track_index", ",", "node_index", "in", "current", ":", "\n", "            ", "t", "=", "self", ".", "tracks", ".", "get_track_by_index", "(", "track_index", ")", "\n", "n", "=", "t", ".", "get_node_by_index", "(", "node_index", ")", "\n", "current_boxes", ".", "append", "(", "n", ".", "box", ")", "\n", "\n", "current_track_indexes", ".", "append", "(", "track_index", ")", "\n", "if", "n", ".", "next_frame_id", "!=", "-", "1", ":", "\n", "                ", "next_frame_indexes", ".", "append", "(", "n", ".", "next_frame_id", ")", "\n", "\n", "# 2. decide the next frame (0.5 probability to choose the farest ones, and other probability to choose the frame between them)", "\n", "", "", "if", "len", "(", "next_frame_indexes", ")", "==", "0", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "", "if", "len", "(", "next_frame_indexes", ")", "==", "1", ":", "\n", "            ", "next_frame_index", "=", "next_frame_indexes", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "max_next_frame_index", "=", "max", "(", "next_frame_indexes", ")", "\n", "is_choose_farest", "=", "bool", "(", "random", ".", "getrandbits", "(", "1", ")", ")", "\n", "if", "is_choose_farest", ":", "\n", "                ", "next_frame_index", "=", "max_next_frame_index", "\n", "", "else", ":", "\n", "                ", "next_frame_index", "=", "random", ".", "choice", "(", "next_frame_indexes", ")", "\n", "gap_frame", "=", "random", ".", "randint", "(", "self", ".", "min_gap", ",", "self", ".", "max_gap", ")", "\n", "temp_frame_index", "=", "next_frame_index", "+", "gap_frame", "\n", "choice_gap", "=", "list", "(", "range", "(", "self", ".", "min_gap", ",", "self", ".", "max_gap", ")", ")", "\n", "if", "self", ".", "min_gap", "!=", "0", ":", "\n", "                    ", "choice_gap", ".", "append", "(", "0", ")", "\n", "", "while", "not", "temp_frame_index", "in", "self", ".", "recorder", ":", "\n", "                    ", "gap_frame", "=", "random", ".", "choice", "(", "choice_gap", ")", "\n", "temp_frame_index", "=", "next_frame_index", "+", "gap_frame", "\n", "", "next_frame_index", "=", "temp_frame_index", "\n", "\n", "# 3. get next image", "\n", "", "", "next_image", "=", "self", ".", "_getimage", "(", "next_frame_index", ")", "\n", "\n", "# 4. get next frame boxes", "\n", "next", "=", "self", ".", "recorder", "[", "next_frame_index", "]", "\n", "next_boxes", "=", "list", "(", ")", "\n", "next_track_indexes", "=", "list", "(", ")", "\n", "for", "track_index", ",", "node_index", "in", "next", ":", "\n", "            ", "t", "=", "self", ".", "tracks", ".", "get_track_by_index", "(", "track_index", ")", "\n", "next_track_indexes", ".", "append", "(", "track_index", ")", "\n", "n", "=", "t", ".", "get_node_by_index", "(", "node_index", ")", "\n", "next_boxes", ".", "append", "(", "n", ".", "box", ")", "\n", "\n", "# 5. get the labels", "\n", "", "current_track_indexes", "=", "np", ".", "array", "(", "current_track_indexes", ")", "\n", "next_track_indexes", "=", "np", ".", "array", "(", "next_track_indexes", ")", "\n", "labels", "=", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "array", "(", "current_track_indexes", ")", ",", "axis", "=", "1", ")", ",", "len", "(", "next_track_indexes", ")", ",", "\n", "axis", "=", "1", ")", "==", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "array", "(", "next_track_indexes", ")", ",", "axis", "=", "0", ")", ",", "\n", "len", "(", "current_track_indexes", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# 6. return all values", "\n", "# 6.1 change boxes format", "\n", "current_boxes", "=", "np", ".", "array", "(", "current_boxes", ")", "\n", "next_boxes", "=", "np", ".", "array", "(", "next_boxes", ")", "\n", "# 6.2 return the corresponding values", "\n", "return", "current_image", ",", "current_boxes", ",", "next_image", ",", "next_boxes", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.GTSingleParser.__len__": [[211, 213], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "max_frame_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.GTParser.__init__": [[216, 249], ["sorted", "sorted", "sorted", "zip", "sum", "print", "ignore_file_base_name.index", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "os.path.basename", "ua.GTSingleParser", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ua_image_root", "=", "config", "[", "'ua_image_root'", "]", ",", "\n", "ua_detection_root", "=", "config", "[", "'ua_detection_root'", "]", ",", "\n", "ignore_root", "=", "config", "[", "'ua_ignore_root'", "]", "\n", ")", ":", "\n", "# analsis all the folder in mot_root", "\n", "# 1. get all the folders", "\n", "        ", "image_root", "=", "ua_image_root", "\n", "all_image_folders", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "d", ")", "for", "d", "in", "os", ".", "listdir", "(", "image_root", ")", "]", "\n", ")", "\n", "\n", "detection_root", "=", "ua_detection_root", "\n", "all_detection_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "detection_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "detection_root", ")", "]", "\n", ")", "\n", "\n", "all_ignore_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "ignore_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "ignore_root", ")", "]", "\n", ")", "\n", "\n", "ignore_file_base_name", "=", "[", "os", ".", "path", ".", "basename", "(", "f", ")", "[", ":", "-", "8", "]", "for", "f", "in", "all_ignore_files", "]", "\n", "\n", "# 2. create single parser", "\n", "self", ".", "parsers", "=", "[", "]", "\n", "for", "image_folder", ",", "detection_folder", "in", "zip", "(", "all_image_folders", ",", "all_detection_files", ")", ":", "\n", "            ", "print", "(", "'loading '", ",", "os", ".", "path", ".", "basename", "(", "detection_folder", ")", ",", "'>>>'", ")", "\n", "i", "=", "ignore_file_base_name", ".", "index", "(", "os", ".", "path", ".", "basename", "(", "image_folder", ")", ")", "\n", "ignore_file", "=", "all_ignore_files", "[", "i", "]", "\n", "self", ".", "parsers", "+=", "[", "GTSingleParser", "(", "image_folder", ",", "detection_folder", ",", "ignore_file", ")", "]", "\n", "\n", "# 3. get some basic information", "\n", "", "self", ".", "lens", "=", "[", "len", "(", "p", ")", "for", "p", "in", "self", ".", "parsers", "]", "\n", "self", ".", "len", "=", "sum", "(", "self", ".", "lens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.GTParser.__len__": [[250, 253], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "# get the length of all the matching frame", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.GTParser.__getitem__": [[254, 273], ["ua.GTParser.parsers[].get_item", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser.get_item"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "<", "0", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "# 1. find the parser", "\n", "", "total_len", "=", "0", "\n", "index", "=", "0", "\n", "current_item", "=", "item", "\n", "for", "l", "in", "self", ".", "lens", ":", "\n", "            ", "total_len", "+=", "l", "\n", "if", "item", "<", "total_len", ":", "\n", "                ", "break", "\n", "", "else", ":", "\n", "                ", "index", "+=", "1", "\n", "current_item", "-=", "l", "\n", "\n", "# 2. get items", "\n", "", "", "if", "index", ">=", "len", "(", "self", ".", "parsers", ")", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "", "return", "self", ".", "parsers", "[", "index", "]", ".", "get_item", "(", "current_item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.UATrainDataset.__init__": [[281, 304], ["print", "numpy.array().flatten", "ua.GTParser", "print", "numpy.array", "len", "range"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "ua_image_root", "=", "config", "[", "'ua_image_root'", "]", ",", "\n", "ua_detection_root", "=", "config", "[", "'ua_detection_root'", "]", ",", "\n", "ua_ignore_root", "=", "config", "[", "'ua_ignore_root'", "]", ",", "\n", "transform", "=", "None", ",", "\n", "max_object", "=", "config", "[", "'max_object'", "]", ",", "\n", "dataset_name", "=", "'UA-DETRAC'", "\n", ")", ":", "\n", "        ", "print", "(", "'start loading dataset '", ",", "dataset_name", ",", "'>>>>>>>>'", ")", "\n", "# 1. init all the variables", "\n", "self", ".", "ua_image_root", "=", "ua_image_root", "\n", "self", ".", "ua_detection_root", "=", "ua_detection_root", "\n", "self", ".", "ua_ignore_root", "=", "ua_ignore_root", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "max_object", "=", "max_object", "\n", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n", "self", ".", "frame_gap_range", "=", "np", ".", "array", "(", "[", "[", "i", ",", "-", "i", "]", "for", "i", "in", "range", "(", "1", ",", "30", ")", "]", ")", ".", "flatten", "(", ")", "\n", "\n", "# 2. init GTParser", "\n", "self", ".", "parser", "=", "GTParser", "(", "self", ".", "ua_image_root", ",", "self", ".", "ua_detection_root", ",", "self", ".", "ua_ignore_root", ")", "\n", "\n", "print", "(", "'have loaded {} items, well done'", ".", "format", "(", "len", "(", "self", ")", ")", ",", "dataset_name", ",", "'<<<<<<<<'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.UATrainDataset.__getitem__": [[305, 330], ["numpy.pad", "ua.UATrainDataset.transform", "print", "print", "random.randint", "random.randint", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.DataTransform.transform"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "item", "]", "\n", "\n", "if", "current_image", "is", "None", "or", "labels", "is", "None", ":", "\n", "            ", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "\n", "item", "+", "random", ".", "randint", "(", "-", "config", "[", "'max_gap_frame'", "]", ",", "config", "[", "'max_gap_frame'", "]", ")", "\n", "]", "\n", "print", "(", "'None processing.'", ")", "\n", "\n", "", "if", "self", ".", "transform", "is", "None", ":", "\n", "            ", "return", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "\n", "\n", "# change the label to max_object x max_object", "\n", "", "while", "labels", "is", "None", "or", "current_image", "is", "None", "or", "next_image", "is", "None", ":", "\n", "            ", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "\n", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ")", ")", "\n", "]", "\n", "print", "(", "'None processing.'", ")", "\n", "\n", "", "labels", "=", "np", ".", "pad", "(", "labels", ",", "\n", "[", "(", "0", ",", "self", ".", "max_object", "-", "labels", ".", "shape", "[", "0", "]", ")", ",", "\n", "(", "0", ",", "self", ".", "max_object", "-", "labels", ".", "shape", "[", "1", "]", ")", "]", ",", "\n", "mode", "=", "'constant'", ",", "\n", "constant_values", "=", "0", ")", "\n", "return", "self", ".", "transform", "(", "current_image", ",", "next_image", ",", "current_box", ",", "next_box", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.UATrainDataset.__len__": [[331, 333], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "parser", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua.test_dataset": [[335, 365], ["ua.UATrainDataset", "print", "len", "range", "len", "print", "enumerate", "numpy.concatenate", "cv2.resize", "cv2.imshow", "cv2.waitKey", "b1.astype.astype", "np.array.astype", "cv2.rectangle", "cv2.rectangle", "sum", "numpy.array", "tuple", "sum", "EnvironmentError", "tuple", "tuple", "tuple", "tuple", "numpy.random.rand"], "function", ["None"], ["", "", "def", "test_dataset", "(", ")", ":", "\n", "# 1. test init function", "\n", "    ", "dataset", "=", "UATrainDataset", "(", ")", "\n", "print", "(", "len", "(", "dataset", ")", ")", "\n", "\n", "# 2. test get item", "\n", "l", "=", "len", "(", "dataset", ")", "\n", "for", "i", "in", "range", "(", "l", ")", ":", "\n", "        ", "print", "(", "i", ")", "\n", "current_image", ",", "current_boxes", ",", "next_image", ",", "next_boxes", ",", "labels", "=", "dataset", "[", "i", "]", "\n", "if", "current_image", "is", "None", ":", "\n", "            ", "continue", "\n", "", "for", "i", ",", "b1", "in", "enumerate", "(", "current_boxes", ")", ":", "\n", "            ", "color", "=", "(", "0", ",", "0", ",", "255", ")", "\n", "if", "sum", "(", "labels", "[", "i", ",", ":", "]", ")", "==", "0", ":", "\n", "                ", "b2", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "b2", "=", "next_boxes", "[", "labels", "[", "i", ",", ":", "]", "]", "[", "0", "]", "\n", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "", "if", "sum", "(", "labels", "[", "i", ",", ":", "]", ")", ">", "1", ":", "\n", "                ", "raise", "EnvironmentError", "(", "'label error'", ")", "\n", "", "b1", "=", "b1", ".", "astype", "(", "int", ")", "\n", "b2", "=", "b2", ".", "astype", "(", "int", ")", "\n", "cv2", ".", "rectangle", "(", "current_image", ",", "tuple", "(", "b1", "[", ":", "2", "]", ")", ",", "tuple", "(", "b1", "[", "2", ":", "]", ")", ",", "color", ",", "2", ")", "\n", "cv2", ".", "rectangle", "(", "next_image", ",", "tuple", "(", "b2", "[", ":", "2", "]", ")", ",", "tuple", "(", "b2", "[", "2", ":", "]", ")", ",", "color", ",", "2", ")", "\n", "", "image", "=", "np", ".", "concatenate", "(", "[", "current_image", ",", "next_image", "]", ",", "axis", "=", "0", ")", "\n", "h", ",", "w", ",", "_", "=", "image", ".", "shape", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "w", "//", "2", ",", "h", "//", "2", ")", ")", "\n", "cv2", ".", "imshow", "(", "'res'", ",", "image", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.Node.__init__": [[15, 19], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "box", ",", "frame_id", ",", "next_fram_id", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "box", "=", "box", "\n", "self", ".", "frame_id", "=", "frame_id", "\n", "self", ".", "next_frame_id", "=", "next_fram_id", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.Track.__init__": [[22, 25], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "id", ")", ":", "\n", "        ", "self", ".", "nodes", "=", "list", "(", ")", "\n", "self", ".", "id", "=", "id", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.Track.add_node": [[26, 30], ["mot15.Track.nodes.append", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "add_node", "(", "self", ",", "n", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "nodes", ")", ">", "0", ":", "\n", "            ", "self", ".", "nodes", "[", "-", "1", "]", ".", "next_frame_id", "=", "n", ".", "frame_id", "\n", "", "self", ".", "nodes", ".", "append", "(", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.Track.get_node_by_index": [[31, 33], ["None"], "methods", ["None"], ["", "def", "get_node_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "nodes", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.Tracks.__init__": [[36, 38], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "tracks", "=", "list", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.Tracks.add_node": [[39, 58], ["mot15.Track", "mot15.Track.add_node", "mot15.Tracks.tracks.append", "mot15.Tracks.tracks.index", "Track.nodes.index", "mot15.Track.add_node", "mot15.Tracks.tracks.index", "Track.nodes.index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node"], ["", "def", "add_node", "(", "self", ",", "node", ",", "id", ")", ":", "\n", "        ", "node_add", "=", "False", "\n", "track_index", "=", "0", "\n", "node_index", "=", "0", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "id", "==", "id", ":", "\n", "                ", "t", ".", "add_node", "(", "node", ")", "\n", "node_add", "=", "True", "\n", "track_index", "=", "self", ".", "tracks", ".", "index", "(", "t", ")", "\n", "node_index", "=", "t", ".", "nodes", ".", "index", "(", "node", ")", "\n", "break", "\n", "", "", "if", "not", "node_add", ":", "\n", "            ", "t", "=", "Track", "(", "id", ")", "\n", "t", ".", "add_node", "(", "node", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "track_index", "=", "self", ".", "tracks", ".", "index", "(", "t", ")", "\n", "node_index", "=", "t", ".", "nodes", ".", "index", "(", "node", ")", "\n", "\n", "", "return", "track_index", ",", "node_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.Tracks.get_track_by_index": [[59, 61], ["None"], "methods", ["None"], ["", "def", "get_track_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "tracks", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.GTSingleParser.__init__": [[64, 96], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.read_csv", "pandas.read_csv.groupby", "pd.read_csv.groupby.indices.keys", "max", "mot15.Tracks", "numpy.array().astype", "numpy.array", "list", "zip", "pd.read_csv.groupby.get_group", "mot15.Node", "mot15.GTSingleParser.tracks.add_node", "mot15.GTSingleParser.recorder[].append", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["    ", "def", "__init__", "(", "self", ",", "folder", ",", "\n", "min_visibility", "=", "config", "[", "'min_visibility'", "]", ",", "\n", "min_gap", "=", "config", "[", "'min_gap_frame'", "]", ",", "\n", "max_gap", "=", "config", "[", "'max_gap_frame'", "]", ")", ":", "\n", "        ", "self", ".", "min_gap", "=", "min_gap", "\n", "self", ".", "max_gap", "=", "max_gap", "\n", "# 1. get the gt path and image folder", "\n", "\n", "# 2. read the gt data", "\n", "gt_file_path", "=", "os", ".", "path", ".", "join", "(", "folder", ",", "'gt/gt.txt'", ")", "\n", "self", ".", "folder", "=", "folder", "\n", "gt_file", "=", "pd", ".", "read_csv", "(", "gt_file_path", ",", "header", "=", "None", ")", "\n", "gt_file", "=", "gt_file", "[", "gt_file", "[", "6", "]", "==", "1", "]", "\n", "# gt_file = gt_file[np.logical_or(gt_file[8] > min_visibility, gt_file[8] == -1)]", "\n", "gt_group", "=", "gt_file", ".", "groupby", "(", "0", ")", "\n", "gt_group_keys", "=", "gt_group", ".", "indices", ".", "keys", "(", ")", "\n", "self", ".", "max_frame_index", "=", "max", "(", "gt_group_keys", ")", "\n", "# 3. update tracks", "\n", "self", ".", "tracks", "=", "Tracks", "(", ")", "\n", "self", ".", "recorder", "=", "{", "}", "\n", "for", "key", "in", "gt_group_keys", ":", "\n", "            ", "det", "=", "gt_group", ".", "get_group", "(", "key", ")", ".", "values", "\n", "ids", "=", "np", ".", "array", "(", "det", "[", ":", ",", "1", "]", ")", ".", "astype", "(", "int", ")", "\n", "det", "=", "np", ".", "array", "(", "det", "[", ":", ",", "2", ":", "6", "]", ")", "\n", "det", "[", ":", ",", "2", ":", "4", "]", "+=", "det", "[", ":", ",", ":", "2", "]", "\n", "\n", "self", ".", "recorder", "[", "key", "-", "1", "]", "=", "list", "(", ")", "\n", "# 3.1 update tracks", "\n", "for", "id", ",", "d", "in", "zip", "(", "ids", ",", "det", ")", ":", "\n", "                ", "node", "=", "Node", "(", "d", ",", "key", "-", "1", ")", "\n", "track_index", ",", "node_index", "=", "self", ".", "tracks", ".", "add_node", "(", "node", ",", "id", ")", "\n", "self", ".", "recorder", "[", "key", "-", "1", "]", ".", "append", "(", "(", "track_index", ",", "node_index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.GTSingleParser._getimage": [[97, 100], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "cv2.imread"], "methods", ["None"], ["", "", "", "def", "_getimage", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "image_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "folder", ",", "'img1/{0:06}.jpg'", ".", "format", "(", "frame_index", ")", ")", "\n", "return", "cv2", ".", "imread", "(", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.GTSingleParser.get_item": [[101, 171], ["mot15.GTSingleParser._getimage", "list", "list", "list", "mot15.GTSingleParser._getimage", "list", "list", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "mot15.GTSingleParser.tracks.get_track_by_index", "mot15.GTSingleParser.get_node_by_index", "numpy.array.append", "numpy.array.append", "len", "len", "max", "bool", "mot15.GTSingleParser.tracks.get_track_by_index", "numpy.array.append", "mot15.GTSingleParser.get_node_by_index", "numpy.array.append", "numpy.repeat", "numpy.repeat", "list.append", "random.getrandbits", "random.choice", "random.randint", "list", "numpy.expand_dims", "len", "numpy.expand_dims", "len", "range", "list.append", "random.choice", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser._getimage", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser._getimage", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.get_track_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.get_node_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.get_track_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.get_node_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "get_item", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "'''\n        get the current_image, current_boxes, next_image, next_boxes, labels from the frame_index\n        :param frame_index:\n        :return: current_image, current_boxes, next_image, next_boxes, labels\n        '''", "\n", "if", "not", "frame_index", "in", "self", ".", "recorder", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "# get current_image, current_box, next_image, next_box and labels", "\n", "", "current_image", "=", "self", ".", "_getimage", "(", "frame_index", "+", "1", ")", "\n", "current_boxes", "=", "list", "(", ")", "\n", "current", "=", "self", ".", "recorder", "[", "frame_index", "]", "\n", "next_frame_indexes", "=", "list", "(", ")", "\n", "current_track_indexes", "=", "list", "(", ")", "\n", "# 1. get current box", "\n", "for", "track_index", ",", "node_index", "in", "current", ":", "\n", "            ", "t", "=", "self", ".", "tracks", ".", "get_track_by_index", "(", "track_index", ")", "\n", "n", "=", "t", ".", "get_node_by_index", "(", "node_index", ")", "\n", "current_boxes", ".", "append", "(", "n", ".", "box", ")", "\n", "\n", "current_track_indexes", ".", "append", "(", "track_index", ")", "\n", "if", "n", ".", "next_frame_id", "!=", "-", "1", ":", "\n", "                ", "next_frame_indexes", ".", "append", "(", "n", ".", "next_frame_id", ")", "\n", "\n", "# 2. decide the next frame (0.5 probability to choose the farest ones, and other probability to choose the frame between them)", "\n", "", "", "if", "len", "(", "next_frame_indexes", ")", "==", "0", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "", "if", "len", "(", "next_frame_indexes", ")", "==", "1", ":", "\n", "            ", "next_frame_index", "=", "next_frame_indexes", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "max_next_frame_index", "=", "max", "(", "next_frame_indexes", ")", "\n", "is_choose_farest", "=", "bool", "(", "random", ".", "getrandbits", "(", "1", ")", ")", "\n", "if", "is_choose_farest", ":", "\n", "               ", "next_frame_index", "=", "max_next_frame_index", "\n", "", "else", ":", "\n", "                ", "next_frame_index", "=", "random", ".", "choice", "(", "next_frame_indexes", ")", "\n", "gap_frame", "=", "random", ".", "randint", "(", "self", ".", "min_gap", ",", "self", ".", "max_gap", ")", "\n", "temp_frame_index", "=", "next_frame_index", "+", "gap_frame", "\n", "choice_gap", "=", "list", "(", "range", "(", "self", ".", "min_gap", ",", "self", ".", "max_gap", ")", ")", "\n", "if", "self", ".", "min_gap", "!=", "0", ":", "\n", "                    ", "choice_gap", ".", "append", "(", "0", ")", "\n", "", "while", "not", "temp_frame_index", "in", "self", ".", "recorder", ":", "\n", "                    ", "gap_frame", "=", "random", ".", "choice", "(", "choice_gap", ")", "\n", "temp_frame_index", "=", "next_frame_index", "+", "gap_frame", "\n", "", "next_frame_index", "=", "temp_frame_index", "\n", "\n", "# 3. get next image", "\n", "", "", "next_image", "=", "self", ".", "_getimage", "(", "next_frame_index", ")", "\n", "\n", "# 4. get next frame boxes", "\n", "next", "=", "self", ".", "recorder", "[", "next_frame_index", "]", "\n", "next_boxes", "=", "list", "(", ")", "\n", "next_track_indexes", "=", "list", "(", ")", "\n", "for", "track_index", ",", "node_index", "in", "next", ":", "\n", "            ", "t", "=", "self", ".", "tracks", ".", "get_track_by_index", "(", "track_index", ")", "\n", "next_track_indexes", ".", "append", "(", "track_index", ")", "\n", "n", "=", "t", ".", "get_node_by_index", "(", "node_index", ")", "\n", "next_boxes", ".", "append", "(", "n", ".", "box", ")", "\n", "\n", "# 5. get the labels", "\n", "", "current_track_indexes", "=", "np", ".", "array", "(", "current_track_indexes", ")", "\n", "next_track_indexes", "=", "np", ".", "array", "(", "next_track_indexes", ")", "\n", "labels", "=", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "array", "(", "current_track_indexes", ")", ",", "axis", "=", "1", ")", ",", "len", "(", "next_track_indexes", ")", ",", "axis", "=", "1", ")", "==", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "array", "(", "next_track_indexes", ")", ",", "axis", "=", "0", ")", ",", "len", "(", "current_track_indexes", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# 6. return all values", "\n", "# 6.1 change boxes format", "\n", "current_boxes", "=", "np", ".", "array", "(", "current_boxes", ")", "\n", "next_boxes", "=", "np", ".", "array", "(", "next_boxes", ")", "\n", "# 6.2 return the corresponding values", "\n", "return", "current_image", ",", "next_image", ",", "current_boxes", ",", "next_boxes", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.GTSingleParser.__len__": [[172, 174], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "max_frame_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.GTParser.__init__": [[176, 197], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "sorted", "sum", "mot15.GTSingleParser", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.exists", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mot_root", "=", "config", "[", "'mot_root'", "]", ",", "\n", "video_name_list", "=", "config", "[", "'video_name_list'", "]", ",", "\n", "type", "=", "config", "[", "'type'", "]", ")", ":", "\n", "# analsis all the folder in mot_root", "\n", "# 1. get all the folders", "\n", "        ", "mot_root", "=", "os", ".", "path", ".", "join", "(", "mot_root", ",", "type", ")", "\n", "all_folders", "=", "sorted", "(", "[", "\n", "os", ".", "path", ".", "join", "(", "mot_root", ",", "v", ")", "for", "v", "in", "video_name_list", "\n", "if", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "mot_root", ",", "v", ")", ")", "\n", "]", ")", "\n", "# all_folders = sorted(", "\n", "#     [os.path.join(mot_root, i) for i in os.listdir(mot_root)", "\n", "#      if os.path.isdir(os.path.join(mot_root, i))", "\n", "#      and i.find(detector) != -1]", "\n", "# )", "\n", "# 2. create single parser", "\n", "self", ".", "parsers", "=", "[", "GTSingleParser", "(", "folder", ")", "for", "folder", "in", "all_folders", "]", "\n", "\n", "# 3. get some basic information", "\n", "self", ".", "lens", "=", "[", "len", "(", "p", ")", "for", "p", "in", "self", ".", "parsers", "]", "\n", "self", ".", "len", "=", "sum", "(", "self", ".", "lens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.GTParser.__len__": [[198, 201], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "# get the length of all the matching frame", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.GTParser.__getitem__": [[202, 221], ["mot15.GTParser.parsers[].get_item", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser.get_item"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "<", "0", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "# 1. find the parser", "\n", "", "total_len", "=", "0", "\n", "index", "=", "0", "\n", "current_item", "=", "item", "\n", "for", "l", "in", "self", ".", "lens", ":", "\n", "            ", "total_len", "+=", "l", "\n", "if", "item", "<", "total_len", ":", "\n", "                ", "break", "\n", "", "else", ":", "\n", "                ", "index", "+=", "1", "\n", "current_item", "-=", "l", "\n", "\n", "# 2. get items", "\n", "", "", "if", "index", ">=", "len", "(", "self", ".", "parsers", ")", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "", "return", "self", ".", "parsers", "[", "index", "]", ".", "get_item", "(", "current_item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.MOTTrainDataset.__init__": [[227, 245], ["mot15.GTParser"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "mot_root", "=", "config", "[", "'mot_root'", "]", ",", "\n", "transform", "=", "None", ",", "\n", "type", "=", "config", "[", "'dataset_type'", "]", ",", "\n", "video_name_list", "=", "config", "[", "'video_name_list'", "]", ",", "\n", "max_object", "=", "config", "[", "'max_object'", "]", ",", "\n", "dataset_name", "=", "'MOT17'", "\n", ")", ":", "\n", "# 1. init all the variables", "\n", "        ", "self", ".", "mot_root", "=", "mot_root", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "type", "=", "type", "\n", "self", ".", "video_name_list", "=", "video_name_list", "\n", "self", ".", "max_object", "=", "max_object", "\n", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n", "# 2. init GTParser", "\n", "self", ".", "parser", "=", "GTParser", "(", "self", ".", "mot_root", ",", "self", ".", "video_name_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.MOTTrainDataset.__getitem__": [[246, 263], ["numpy.pad", "mot15.MOTTrainDataset.transform", "print", "random.randint"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.DataTransform.transform"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "current_image", ",", "next_image", ",", "current_box", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "item", "]", "\n", "\n", "while", "current_image", "is", "None", ":", "\n", "            ", "current_image", ",", "next_image", ",", "current_box", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "item", "+", "random", ".", "randint", "(", "-", "config", "[", "'max_gap_frame'", "]", ",", "config", "[", "'max_gap_frame'", "]", ")", "]", "\n", "print", "(", "'None processing.'", ")", "\n", "\n", "", "if", "self", ".", "transform", "is", "None", ":", "\n", "            ", "return", "current_image", ",", "next_image", ",", "current_box", ",", "next_box", ",", "labels", "\n", "\n", "# change the label to max_object x max_object", "\n", "", "labels", "=", "np", ".", "pad", "(", "labels", ",", "\n", "[", "(", "0", ",", "self", ".", "max_object", "-", "labels", ".", "shape", "[", "0", "]", ")", ",", "\n", "(", "0", ",", "self", ".", "max_object", "-", "labels", ".", "shape", "[", "1", "]", ")", "]", ",", "\n", "mode", "=", "'constant'", ",", "\n", "constant_values", "=", "0", ")", "\n", "return", "self", ".", "transform", "(", "current_image", ",", "next_image", ",", "current_box", ",", "next_box", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.MOTTrainDataset.__len__": [[264, 266], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "parser", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15.test_dataset": [[268, 298], ["mot15.MOTTrainDataset", "print", "len", "print", "range", "len", "print", "enumerate", "numpy.concatenate", "cv2.resize", "cv2.imshow", "cv2.waitKey", "b1.astype.astype", "np.array.astype", "cv2.rectangle", "cv2.rectangle", "sum", "numpy.array", "tuple", "sum", "EnvironmentError", "tuple", "tuple", "tuple", "tuple", "numpy.random.rand"], "function", ["None"], ["", "", "def", "test_dataset", "(", ")", ":", "\n", "# 1. test init function", "\n", "    ", "dataset", "=", "MOTTrainDataset", "(", ")", "\n", "print", "(", "len", "(", "dataset", ")", ")", "\n", "\n", "# 2. test get item", "\n", "l", "=", "len", "(", "dataset", ")", "\n", "print", "(", "l", ")", "\n", "for", "i", "in", "range", "(", "l", ")", ":", "\n", "        ", "print", "(", "i", ")", "\n", "current_image", ",", "next_image", ",", "current_boxes", ",", "next_boxes", ",", "labels", "=", "dataset", "[", "i", "]", "\n", "if", "current_image", "is", "None", ":", "\n", "            ", "continue", "\n", "", "for", "i", ",", "b1", "in", "enumerate", "(", "current_boxes", ")", ":", "\n", "            ", "color", "=", "(", "0", ",", "0", ",", "255", ")", "\n", "if", "sum", "(", "labels", "[", "i", ",", ":", "]", ")", "==", "0", ":", "\n", "                ", "b2", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "b2", "=", "next_boxes", "[", "labels", "[", "i", ",", ":", "]", "]", "[", "0", "]", "\n", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "", "if", "sum", "(", "labels", "[", "i", ",", ":", "]", ")", ">", "1", ":", "\n", "                ", "raise", "EnvironmentError", "(", "'label error'", ")", "\n", "", "b1", "=", "b1", ".", "astype", "(", "int", ")", "\n", "b2", "=", "b2", ".", "astype", "(", "int", ")", "\n", "cv2", ".", "rectangle", "(", "current_image", ",", "tuple", "(", "b1", "[", ":", "2", "]", ")", ",", "tuple", "(", "b1", "[", "2", ":", "]", ")", ",", "color", ",", "2", ")", "\n", "cv2", ".", "rectangle", "(", "next_image", ",", "tuple", "(", "b2", "[", ":", "2", "]", ")", ",", "tuple", "(", "b2", "[", "2", ":", "]", ")", ",", "color", ",", "2", ")", "\n", "", "image", "=", "np", ".", "concatenate", "(", "[", "current_image", ",", "next_image", "]", ",", "axis", "=", "0", ")", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "1900", ",", "1000", ")", ")", "\n", "cv2", ".", "imshow", "(", "'res'", ",", "image", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot_data_reader.MOTDataReader.__init__": [[8, 17], ["os.path.join", "pandas.read_csv", "mot_data_reader.MOTDataReader.detection.groupby", "list", "mot_data_reader.MOTDataReader.detection_group.indices.keys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_folder", ",", "detection_file_name", ",", "min_confidence", "=", "None", ")", ":", "\n", "        ", "self", ".", "image_folder", "=", "image_folder", "\n", "self", ".", "detection_file_name", "=", "detection_file_name", "\n", "self", ".", "image_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "'{0:06d}.jpg'", ")", "\n", "self", ".", "detection", "=", "pd", ".", "read_csv", "(", "self", ".", "detection_file_name", ",", "header", "=", "None", ")", "\n", "if", "min_confidence", "is", "not", "None", ":", "\n", "            ", "self", ".", "detection", "=", "self", ".", "detection", "[", "self", ".", "detection", "[", "6", "]", ">", "min_confidence", "]", "\n", "", "self", ".", "detection_group", "=", "self", ".", "detection", ".", "groupby", "(", "0", ")", "\n", "self", ".", "detection_group_keys", "=", "list", "(", "self", ".", "detection_group", ".", "indices", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot_data_reader.MOTDataReader.__len__": [[18, 20], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "detection_group_keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot_data_reader.MOTDataReader.get_detection_by_index": [[21, 25], ["mot_data_reader.MOTDataReader.detection_group.get_group", "len", "mot_data_reader.MOTDataReader.detection_group_keys.count"], "methods", ["None"], ["", "def", "get_detection_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", "or", "self", ".", "detection_group_keys", ".", "count", "(", "index", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "self", ".", "detection_group", ".", "get_group", "(", "index", ")", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot_data_reader.MOTDataReader.get_image_by_index": [[26, 31], ["cv2.imread", "len", "mot_data_reader.MOTDataReader.image_format.format"], "methods", ["None"], ["", "def", "get_image_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "", "return", "cv2", ".", "imread", "(", "self", ".", "image_format", ".", "format", "(", "index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot_data_reader.MOTDataReader.__getitem__": [[32, 35], ["mot_data_reader.MOTDataReader.get_image_by_index", "mot_data_reader.MOTDataReader.get_detection_by_index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_image_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_detection_by_index"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "(", "self", ".", "get_image_by_index", "(", "item", "+", "1", ")", ",", "\n", "self", ".", "get_detection_by_index", "(", "item", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot_data_reader.DataTransform.transform": [[38, 54], ["cv2.resize.astype", "cv2.resize"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "transform", "(", "image", ",", "detection", ",", "size", ",", "mean", ")", ":", "\n", "        ", "'''\n        transform image and detection to the sst input format\n        :param image:\n        :param detection:\n        :param size:\n        :param mean:\n        :return:\n        '''", "\n", "h", ",", "w", ",", "c", "=", "image", ".", "shape", "\n", "image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "detection", "[", "[", "4", ",", "5", "]", "]", "+=", "detection", "[", "2", ",", "3", "]", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "size", ")", "\n", "image", "-=", "mean", "\n", "new_h", ",", "new_w", ",", "new_c", "=", "image", ".", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_tracking_data_reader.KITTITrackingDataReader.__init__": [[30, 49], ["os.path.join", "pandas.read_csv", "kitti_tracking_data_reader.KITTITrackingDataReader.detection.groupby", "list", "kitti_tracking_data_reader.KITTITrackingDataReader.detection_group.indices.keys"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "image_folder", ",", "detection_file_name", ")", ":", "\n", "        ", "datatype", "=", "{", "0", ":", "int", ",", "1", ":", "int", ",", "2", ":", "str", ",", "3", ":", "int", ",", "4", ":", "int", ",", "5", ":", "float", ",", "\n", "6", ":", "float", ",", "7", ":", "float", ",", "8", ":", "float", ",", "9", ":", "float", ",", "\n", "10", ":", "float", ",", "11", ":", "float", ",", "12", ":", "float", ",", "13", ":", "float", ",", "14", ":", "float", ",", "\n", "15", ":", "float", ",", "16", ":", "float", "}", "\n", "self", ".", "image_folder", "=", "image_folder", "\n", "self", ".", "detection_file_name", "=", "detection_file_name", "\n", "self", ".", "image_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "'{0:06d}.png'", ")", "\n", "self", ".", "detection", "=", "pd", ".", "read_csv", "(", "self", ".", "detection_file_name", ",", "sep", "=", "' '", ",", "header", "=", "None", ",", "dtype", "=", "datatype", ")", "\n", "\n", "self", ".", "detection", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "0", ":", "17", "]", "\n", "select_type_row", "=", "[", "not", "t", "in", "(", "'DontCare'", ")", "for", "t", "in", "self", ".", "detection", "[", "2", "]", "]", "\n", "# select_score_row = [t > 0 for t in self.detection[17]]", "\n", "select_occluded_row", "=", "[", "t", "in", "[", "0", ",", "1", "]", "for", "t", "in", "self", ".", "detection", "[", "4", "]", "]", "\n", "select_row", "=", "select_type_row", "and", "select_occluded_row", "# and select_score_row", "\n", "\n", "self", ".", "detection", "=", "self", ".", "detection", "[", "select_row", "]", "\n", "self", ".", "detection_group", "=", "self", ".", "detection", ".", "groupby", "(", "0", ")", "\n", "self", ".", "detection_group_keys", "=", "list", "(", "self", ".", "detection_group", ".", "indices", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_tracking_data_reader.KITTITrackingDataReader.__len__": [[50, 52], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "detection_group_keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_tracking_data_reader.KITTITrackingDataReader.get_detection_by_index": [[53, 57], ["kitti_tracking_data_reader.KITTITrackingDataReader.detection_group.get_group", "len", "kitti_tracking_data_reader.KITTITrackingDataReader.detection_group_keys.count"], "methods", ["None"], ["", "def", "get_detection_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", "or", "self", ".", "detection_group_keys", ".", "count", "(", "index", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "self", ".", "detection_group", ".", "get_group", "(", "index", ")", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_tracking_data_reader.KITTITrackingDataReader.get_image_by_index": [[58, 63], ["cv2.imread", "len", "kitti_tracking_data_reader.KITTITrackingDataReader.image_format.format"], "methods", ["None"], ["", "def", "get_image_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "", "return", "cv2", ".", "imread", "(", "self", ".", "image_format", ".", "format", "(", "index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_tracking_data_reader.KITTITrackingDataReader.__getitem__": [[64, 67], ["kitti_tracking_data_reader.KITTITrackingDataReader.get_image_by_index", "kitti_tracking_data_reader.KITTITrackingDataReader.get_detection_by_index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_image_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_detection_by_index"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "(", "self", ".", "get_image_by_index", "(", "item", ")", ",", "\n", "self", ".", "get_detection_by_index", "(", "item", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_tracking_data_reader.DataTransform.transform": [[70, 86], ["cv2.resize.astype", "cv2.resize"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "transform", "(", "image", ",", "detection", ",", "size", ",", "mean", ")", ":", "\n", "        ", "'''\n        transform image and detection to the sst input format\n        :param image:\n        :param detection:\n        :param size:\n        :param mean:\n        :return:\n        '''", "\n", "h", ",", "w", ",", "c", "=", "image", ".", "shape", "\n", "image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "detection", "[", "[", "4", ",", "5", "]", "]", "+=", "detection", "[", "2", ",", "3", "]", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "size", ")", "\n", "image", "-=", "mean", "\n", "new_h", ",", "new_w", ",", "new_c", "=", "image", ".", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_tracking_data_reader.UADataReader.__init__": [[15, 54], ["os.path.join", "pandas.read_csv", "ua_tracking_data_reader.UADataReader.detection.groupby", "list", "pandas.read_csv", "numpy.array", "ua_tracking_data_reader.UADataReader.detection_group.indices.keys", "numpy.logical_and", "os.stat", "numpy.logical_and", "numpy.logical_and", "numpy.logical_or", "numpy.logical_not", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_folder", ",", "gt_file_name", ",", "ignore_file_name", ")", ":", "\n", "        ", "datatype", "=", "{", "0", ":", "int", ",", "1", ":", "int", ",", "2", ":", "float", ",", "3", ":", "float", ",", "4", ":", "float", ",", "5", ":", "float", "}", "\n", "datatype_ignore", "=", "{", "0", ":", "float", ",", "1", ":", "float", ",", "2", ":", "float", ",", "3", ":", "float", "}", "\n", "\n", "self", ".", "image_folder", "=", "image_folder", "\n", "self", ".", "gt_file_name", "=", "gt_file_name", "\n", "self", ".", "ignore_file_name", "=", "ignore_file_name", "\n", "self", ".", "image_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "'img{0:05d}.jpg'", ")", "\n", "self", ".", "detection", "=", "pd", ".", "read_csv", "(", "self", ".", "gt_file_name", ",", "sep", "=", "','", ",", "header", "=", "None", ",", "dtype", "=", "datatype", ")", "\n", "\n", "# read ignore file", "\n", "mask", "=", "None", "\n", "if", "ignore_file_name", "is", "not", "None", "and", "os", ".", "stat", "(", "self", ".", "ignore_file_name", ")", ".", "st_size", ">", "0", ":", "\n", "            ", "self", ".", "ignore", "=", "pd", ".", "read_csv", "(", "self", ".", "ignore_file_name", ",", "sep", "=", "','", ",", "header", "=", "None", ",", "dtype", "=", "datatype_ignore", ")", "\n", "self", ".", "ignore", "=", "self", ".", "ignore", ".", "values", "\n", "ls", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "2", "]", ".", "values", "\n", "ts", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "3", "]", ".", "values", "\n", "rs", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "4", "]", ".", "values", "\n", "bs", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "5", "]", ".", "values", "\n", "\n", "self", ".", "ignore", "=", "np", ".", "array", "(", "[", "[", "r", "[", "0", "]", ",", "r", "[", "1", "]", ",", "r", "[", "0", "]", "+", "r", "[", "2", "]", ",", "r", "[", "1", "]", "+", "r", "[", "3", "]", "]", "for", "r", "in", "self", ".", "ignore", "]", ")", "\n", "for", "rect", "in", "self", ".", "ignore", ":", "\n", "                ", "l", "=", "rect", "[", "0", "]", "\n", "t", "=", "rect", "[", "1", "]", "\n", "r", "=", "rect", "[", "2", "]", "\n", "b", "=", "rect", "[", "3", "]", "\n", "res", "=", "np", ".", "logical_and", "(", "\n", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "l", "<", "ls", ",", "ls", "<", "r", ")", ",", "np", ".", "logical_and", "(", "l", "<", "rs", ",", "rs", "<", "r", ")", ")", ",", "\n", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "t", "<", "ts", ",", "ts", "<", "b", ")", ",", "np", ".", "logical_and", "(", "t", "<", "bs", ",", "bs", "<", "b", ")", ")", "\n", ")", "\n", "if", "mask", "is", "None", ":", "\n", "                    ", "mask", "=", "res", "\n", "", "else", ":", "\n", "                    ", "mask", "=", "np", ".", "logical_or", "(", "mask", ",", "res", ")", "\n", "", "", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "self", ".", "detection", "=", "self", ".", "detection", "[", "np", ".", "logical_not", "(", "mask", ")", "]", "\n", "\n", "", "self", ".", "detection_group", "=", "self", ".", "detection", ".", "groupby", "(", "0", ")", "\n", "self", ".", "detection_group_keys", "=", "list", "(", "self", ".", "detection_group", ".", "indices", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_tracking_data_reader.UADataReader.__len__": [[55, 57], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "detection_group_keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_tracking_data_reader.UADataReader.get_detection_by_index": [[58, 62], ["ua_tracking_data_reader.UADataReader.detection_group.get_group", "len", "ua_tracking_data_reader.UADataReader.detection_group_keys.count"], "methods", ["None"], ["", "def", "get_detection_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", "or", "self", ".", "detection_group_keys", ".", "count", "(", "index", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "self", ".", "detection_group", ".", "get_group", "(", "index", ")", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_tracking_data_reader.UADataReader.get_image_by_index": [[63, 68], ["cv2.imread", "len", "ua_tracking_data_reader.UADataReader.image_format.format"], "methods", ["None"], ["", "def", "get_image_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "", "return", "cv2", ".", "imread", "(", "self", ".", "image_format", ".", "format", "(", "index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_tracking_data_reader.UADataReader.__getitem__": [[69, 72], ["ua_tracking_data_reader.UADataReader.get_image_by_index", "ua_tracking_data_reader.UADataReader.get_detection_by_index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_image_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_detection_by_index"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "(", "self", ".", "get_image_by_index", "(", "item", ")", ",", "\n", "self", ".", "get_detection_by_index", "(", "item", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.ua_tracking_data_reader.DataTransform.transform": [[75, 91], ["cv2.resize.astype", "cv2.resize"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "transform", "(", "image", ",", "detection", ",", "size", ",", "mean", ")", ":", "\n", "        ", "'''\n        transform image and detection to the sst input format\n        :param image:\n        :param detection:\n        :param size:\n        :param mean:\n        :return:\n        '''", "\n", "h", ",", "w", ",", "c", "=", "image", ".", "shape", "\n", "image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "detection", "[", "[", "4", ",", "5", "]", "]", "+=", "detection", "[", "2", ",", "3", "]", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "size", ")", "\n", "image", "-=", "mean", "\n", "new_h", ",", "new_w", ",", "new_c", "=", "image", ".", "shape", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Node.__init__": [[17, 21], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "box", ",", "frame_id", ",", "next_fram_id", "=", "-", "1", ")", ":", "\n", "        ", "self", ".", "box", "=", "box", "\n", "self", ".", "frame_id", "=", "frame_id", "\n", "self", ".", "next_frame_id", "=", "next_fram_id", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.__init__": [[24, 27], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "id", ")", ":", "\n", "        ", "self", ".", "nodes", "=", "list", "(", ")", "\n", "self", ".", "id", "=", "id", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.add_node": [[28, 32], ["kitti.Track.nodes.append", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "add_node", "(", "self", ",", "n", ")", ":", "\n", "        ", "if", "len", "(", "self", ".", "nodes", ")", ">", "0", ":", "\n", "            ", "self", ".", "nodes", "[", "-", "1", "]", ".", "next_frame_id", "=", "n", ".", "frame_id", "\n", "", "self", ".", "nodes", ".", "append", "(", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.get_node_by_index": [[33, 35], ["None"], "methods", ["None"], ["", "def", "get_node_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "nodes", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.__init__": [[38, 40], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "tracks", "=", "list", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node": [[41, 60], ["kitti.Track", "kitti.Track.add_node", "kitti.Tracks.tracks.append", "kitti.Tracks.tracks.index", "Track.nodes.index", "kitti.Track.add_node", "kitti.Tracks.tracks.index", "Track.nodes.index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node"], ["", "def", "add_node", "(", "self", ",", "node", ",", "id", ")", ":", "\n", "        ", "node_add", "=", "False", "\n", "track_index", "=", "0", "\n", "node_index", "=", "0", "\n", "for", "t", "in", "self", ".", "tracks", ":", "\n", "            ", "if", "t", ".", "id", "==", "id", ":", "\n", "                ", "t", ".", "add_node", "(", "node", ")", "\n", "node_add", "=", "True", "\n", "track_index", "=", "self", ".", "tracks", ".", "index", "(", "t", ")", "\n", "node_index", "=", "t", ".", "nodes", ".", "index", "(", "node", ")", "\n", "break", "\n", "", "", "if", "not", "node_add", ":", "\n", "            ", "t", "=", "Track", "(", "id", ")", "\n", "t", ".", "add_node", "(", "node", ")", "\n", "self", ".", "tracks", ".", "append", "(", "t", ")", "\n", "track_index", "=", "self", ".", "tracks", ".", "index", "(", "t", ")", "\n", "node_index", "=", "t", ".", "nodes", ".", "index", "(", "node", ")", "\n", "\n", "", "return", "track_index", ",", "node_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.get_track_by_index": [[61, 63], ["None"], "methods", ["None"], ["", "def", "get_track_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "tracks", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser.__init__": [[66, 124], ["pandas.read_csv", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "pandas.read_csv", "kitti.Tracks", "kitti.GTSingleParser.detection.groupby", "list", "len", "kitti.GTSingleParser.detection_group.indices.keys", "len", "max", "numpy.array().astype", "numpy.array", "list", "zip", "kitti.GTSingleParser.detection_group.get_group", "kitti.Node", "kitti.GTSingleParser.tracks.add_node", "kitti.GTSingleParser.recorder[].append", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.add_node", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["    ", "def", "__init__", "(", "self", ",", "image_folder", "=", "config", "[", "'kitti_image_root'", "]", ",", "\n", "detection_file_name", "=", "config", "[", "'kitti_detection_root'", "]", ",", "\n", "min_gap", "=", "config", "[", "'min_gap_frame'", "]", ",", "\n", "max_gap", "=", "config", "[", "'max_gap_frame'", "]", ")", ":", "\n", "        ", "datatype", "=", "{", "0", ":", "int", ",", "1", ":", "int", ",", "2", ":", "str", ",", "3", ":", "int", ",", "4", ":", "int", ",", "5", ":", "float", ",", "\n", "6", ":", "float", ",", "7", ":", "float", ",", "8", ":", "float", ",", "9", ":", "float", ",", "\n", "10", ":", "float", ",", "11", ":", "float", ",", "12", ":", "float", ",", "13", ":", "float", ",", "14", ":", "float", ",", "\n", "15", ":", "float", ",", "16", ":", "float", "}", "\n", "\n", "self", ".", "min_gap", "=", "min_gap", "\n", "self", ".", "max_gap", "=", "max_gap", "\n", "# 1. get the gt path and image folder", "\n", "self", ".", "image_folder", "=", "image_folder", "\n", "self", ".", "detection_file_name", "=", "detection_file_name", "\n", "\n", "# 2. read the gt data", "\n", "detection", "=", "pd", ".", "read_csv", "(", "self", ".", "detection_file_name", ",", "header", "=", "None", ")", "\n", "self", ".", "image_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "'{0:06d}.png'", ")", "\n", "self", ".", "detection", "=", "pd", ".", "read_csv", "(", "self", ".", "detection_file_name", ",", "sep", "=", "' '", ",", "header", "=", "None", ",", "dtype", "=", "datatype", ")", "\n", "\n", "self", ".", "detection", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "0", ":", "17", "]", "\n", "# select_type_row = [t in ('Van', 'Car', 'Pedestrian', 'Tram', 'Cyclist', 'Truck') for t in self.detection[2]]", "\n", "select_type_row", "=", "[", "t", "in", "(", "'Pedestrian'", ",", "''", ")", "for", "t", "in", "self", ".", "detection", "[", "2", "]", "]", "\n", "\n", "self", ".", "detection", "=", "self", ".", "detection", "[", "select_type_row", "]", "\n", "select_occluded_row", "=", "[", "t", "in", "[", "0", ",", "1", "]", "for", "t", "in", "self", ".", "detection", "[", "4", "]", "]", "\n", "self", ".", "detection", "=", "self", ".", "detection", "[", "select_occluded_row", "]", "\n", "self", ".", "tracks", "=", "Tracks", "(", ")", "\n", "self", ".", "recorder", "=", "{", "}", "\n", "if", "len", "(", "self", ".", "detection", ")", "==", "0", ":", "\n", "            ", "self", ".", "max_frame_index", "=", "0", "\n", "return", "\n", "\n", "\n", "", "select_truncation_row", "=", "[", "t", "<", "0.7", "for", "t", "in", "self", ".", "detection", "[", "3", "]", "]", "\n", "self", ".", "detection", "=", "self", ".", "detection", "[", "select_truncation_row", "]", "\n", "# select_row = select_type_row and select_occluded_row", "\n", "\n", "# self.detection = self.detection[select_row]", "\n", "self", ".", "detection_group", "=", "self", ".", "detection", ".", "groupby", "(", "0", ")", "\n", "self", ".", "detection_group_keys", "=", "list", "(", "self", ".", "detection_group", ".", "indices", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "self", ".", "detection_group_keys", ")", "==", "0", ":", "\n", "            ", "self", ".", "max_frame_index", "=", "0", "\n", "", "else", ":", "\n", "            ", "self", ".", "max_frame_index", "=", "max", "(", "self", ".", "detection_group_keys", ")", "\n", "\n", "# 3. update tracks", "\n", "", "for", "key", "in", "self", ".", "detection_group_keys", ":", "\n", "            ", "det", "=", "self", ".", "detection_group", ".", "get_group", "(", "key", ")", ".", "values", "\n", "ids", "=", "np", ".", "array", "(", "det", "[", ":", ",", "1", "]", ")", ".", "astype", "(", "int", ")", "\n", "det", "=", "np", ".", "array", "(", "det", "[", ":", ",", "6", ":", "10", "]", ")", "\n", "\n", "self", ".", "recorder", "[", "key", "]", "=", "list", "(", ")", "\n", "# 3.1 update tracks", "\n", "for", "id", ",", "d", "in", "zip", "(", "ids", ",", "det", ")", ":", "\n", "                ", "node", "=", "Node", "(", "d", ",", "key", ")", "\n", "track_index", ",", "node_index", "=", "self", ".", "tracks", ".", "add_node", "(", "node", ",", "id", ")", "\n", "self", ".", "recorder", "[", "key", "]", ".", "append", "(", "(", "track_index", ",", "node_index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser._getimage": [[125, 128], ["kitti.GTSingleParser.image_format.format", "cv2.imread"], "methods", ["None"], ["", "", "", "def", "_getimage", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "image_path", "=", "self", ".", "image_format", ".", "format", "(", "frame_index", ")", "\n", "return", "cv2", ".", "imread", "(", "image_path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser.get_item": [[129, 201], ["kitti.GTSingleParser._getimage", "list", "list", "list", "kitti.GTSingleParser._getimage", "list", "list", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "kitti.GTSingleParser.tracks.get_track_by_index", "kitti.GTSingleParser.get_node_by_index", "numpy.array.append", "numpy.array.append", "len", "len", "max", "bool", "kitti.GTSingleParser.tracks.get_track_by_index", "numpy.array.append", "kitti.GTSingleParser.get_node_by_index", "numpy.array.append", "numpy.repeat", "numpy.repeat", "list.append", "random.getrandbits", "random.choice", "random.randint", "list", "numpy.expand_dims", "len", "numpy.expand_dims", "len", "range", "list.append", "random.choice", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser._getimage", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser._getimage", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.get_track_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.get_node_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Tracks.get_track_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.Track.get_node_by_index", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append", "home.repos.pwc.inspect_result.shijieS_SST.backup.tracker.Tracks.append"], ["", "def", "get_item", "(", "self", ",", "frame_index", ")", ":", "\n", "        ", "'''\n        get the current_image, current_boxes, next_image, next_boxes, labels from the frame_index\n        :param frame_index:\n        :return: current_image, current_boxes, next_image, next_boxes, labels\n        '''", "\n", "if", "not", "frame_index", "in", "self", ".", "recorder", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "# get current_image, current_box, next_image, next_box and labels", "\n", "", "current_image", "=", "self", ".", "_getimage", "(", "frame_index", ")", "\n", "current_boxes", "=", "list", "(", ")", "\n", "current", "=", "self", ".", "recorder", "[", "frame_index", "]", "\n", "next_frame_indexes", "=", "list", "(", ")", "\n", "current_track_indexes", "=", "list", "(", ")", "\n", "# 1. get current box", "\n", "for", "track_index", ",", "node_index", "in", "current", ":", "\n", "            ", "t", "=", "self", ".", "tracks", ".", "get_track_by_index", "(", "track_index", ")", "\n", "n", "=", "t", ".", "get_node_by_index", "(", "node_index", ")", "\n", "current_boxes", ".", "append", "(", "n", ".", "box", ")", "\n", "\n", "current_track_indexes", ".", "append", "(", "track_index", ")", "\n", "if", "n", ".", "next_frame_id", "!=", "-", "1", ":", "\n", "                ", "next_frame_indexes", ".", "append", "(", "n", ".", "next_frame_id", ")", "\n", "\n", "# 2. decide the next frame (0.5 probability to choose the farest ones, and other probability to choose the frame between them)", "\n", "", "", "if", "len", "(", "next_frame_indexes", ")", "==", "0", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "", "if", "len", "(", "next_frame_indexes", ")", "==", "1", ":", "\n", "            ", "next_frame_index", "=", "next_frame_indexes", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "max_next_frame_index", "=", "max", "(", "next_frame_indexes", ")", "\n", "is_choose_farest", "=", "bool", "(", "random", ".", "getrandbits", "(", "1", ")", ")", "\n", "if", "is_choose_farest", ":", "\n", "                ", "next_frame_index", "=", "max_next_frame_index", "\n", "", "else", ":", "\n", "                ", "next_frame_index", "=", "random", ".", "choice", "(", "next_frame_indexes", ")", "\n", "gap_frame", "=", "random", ".", "randint", "(", "self", ".", "min_gap", ",", "self", ".", "max_gap", ")", "\n", "temp_frame_index", "=", "next_frame_index", "+", "gap_frame", "\n", "choice_gap", "=", "list", "(", "range", "(", "self", ".", "min_gap", ",", "self", ".", "max_gap", ")", ")", "\n", "if", "self", ".", "min_gap", "!=", "0", ":", "\n", "                    ", "choice_gap", ".", "append", "(", "0", ")", "\n", "", "while", "not", "temp_frame_index", "in", "self", ".", "recorder", ":", "\n", "                    ", "gap_frame", "=", "random", ".", "choice", "(", "choice_gap", ")", "\n", "temp_frame_index", "=", "next_frame_index", "+", "gap_frame", "\n", "", "next_frame_index", "=", "temp_frame_index", "\n", "\n", "# 3. get next image", "\n", "", "", "next_image", "=", "self", ".", "_getimage", "(", "next_frame_index", ")", "\n", "\n", "# 4. get next frame boxes", "\n", "next", "=", "self", ".", "recorder", "[", "next_frame_index", "]", "\n", "next_boxes", "=", "list", "(", ")", "\n", "next_track_indexes", "=", "list", "(", ")", "\n", "for", "track_index", ",", "node_index", "in", "next", ":", "\n", "            ", "t", "=", "self", ".", "tracks", ".", "get_track_by_index", "(", "track_index", ")", "\n", "next_track_indexes", ".", "append", "(", "track_index", ")", "\n", "n", "=", "t", ".", "get_node_by_index", "(", "node_index", ")", "\n", "next_boxes", ".", "append", "(", "n", ".", "box", ")", "\n", "\n", "# 5. get the labels", "\n", "", "current_track_indexes", "=", "np", ".", "array", "(", "current_track_indexes", ")", "\n", "next_track_indexes", "=", "np", ".", "array", "(", "next_track_indexes", ")", "\n", "labels", "=", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "array", "(", "current_track_indexes", ")", ",", "axis", "=", "1", ")", ",", "len", "(", "next_track_indexes", ")", ",", "\n", "axis", "=", "1", ")", "==", "np", ".", "repeat", "(", "np", ".", "expand_dims", "(", "np", ".", "array", "(", "next_track_indexes", ")", ",", "axis", "=", "0", ")", ",", "\n", "len", "(", "current_track_indexes", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# 6. return all values", "\n", "# 6.1 change boxes format", "\n", "current_boxes", "=", "np", ".", "array", "(", "current_boxes", ")", "\n", "next_boxes", "=", "np", ".", "array", "(", "next_boxes", ")", "\n", "# 6.2 return the corresponding values", "\n", "return", "current_image", ",", "current_boxes", ",", "next_image", ",", "next_boxes", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser.__len__": [[202, 204], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "max_frame_index", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTParser.__init__": [[207, 227], ["os.path.join", "os.path.join", "os.path.join", "os.path.join", "sorted", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "sorted", "sum", "kitti.GTSingleParser", "len", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "zip", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.listdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "kitti_image_root", "=", "config", "[", "'kitti_image_root'", "]", ",", "\n", "kitti_detection_root", "=", "config", "[", "'kitti_detection_root'", "]", ",", "\n", "type", "=", "config", "[", "'dataset_type'", "]", ")", ":", "\n", "# analsis all the folder in mot_root", "\n", "# 1. get all the folders", "\n", "        ", "image_root", "=", "os", ".", "path", ".", "join", "(", "kitti_image_root", ",", "type", ",", "'image_02'", ")", "\n", "all_image_folders", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "image_root", ",", "d", ")", "for", "d", "in", "os", ".", "listdir", "(", "image_root", ")", "]", "\n", ")", "\n", "\n", "detection_root", "=", "os", ".", "path", ".", "join", "(", "kitti_detection_root", ",", "type", ",", "'label_02'", ")", "\n", "all_detection_files", "=", "sorted", "(", "\n", "[", "os", ".", "path", ".", "join", "(", "detection_root", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "detection_root", ")", "]", "\n", ")", "\n", "# 2. create single parser", "\n", "self", ".", "parsers", "=", "[", "GTSingleParser", "(", "image_folder", ",", "detection_folder", ")", "for", "image_folder", ",", "detection_folder", "in", "zip", "(", "all_image_folders", ",", "all_detection_files", ")", "]", "\n", "\n", "# 3. get some basic information", "\n", "self", ".", "lens", "=", "[", "len", "(", "p", ")", "for", "p", "in", "self", ".", "parsers", "]", "\n", "self", ".", "len", "=", "sum", "(", "self", ".", "lens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTParser.__len__": [[228, 231], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "# get the length of all the matching frame", "\n", "        ", "return", "self", ".", "len", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTParser.__getitem__": [[232, 251], ["kitti.GTParser.parsers[].get_item", "len"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.kitti.GTSingleParser.get_item"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "<", "0", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "# 1. find the parser", "\n", "", "total_len", "=", "0", "\n", "index", "=", "0", "\n", "current_item", "=", "item", "\n", "for", "l", "in", "self", ".", "lens", ":", "\n", "            ", "total_len", "+=", "l", "\n", "if", "item", "<", "total_len", ":", "\n", "                ", "break", "\n", "", "else", ":", "\n", "                ", "index", "+=", "1", "\n", "current_item", "-=", "l", "\n", "\n", "# 2. get items", "\n", "", "", "if", "index", ">=", "len", "(", "self", ".", "parsers", ")", ":", "\n", "            ", "return", "None", ",", "None", ",", "None", ",", "None", ",", "None", "\n", "", "return", "self", ".", "parsers", "[", "index", "]", ".", "get_item", "(", "current_item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.KITTITrainDataset.__init__": [[259, 282], ["numpy.array().flatten", "kitti.GTParser", "numpy.array", "range"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "kitti_image_root", "=", "config", "[", "'kitti_image_root'", "]", ",", "\n", "kitti_detection_root", "=", "config", "[", "'kitti_detection_root'", "]", ",", "\n", "transform", "=", "None", ",", "\n", "type", "=", "config", "[", "'dataset_type'", "]", ",", "\n", "max_object", "=", "config", "[", "'max_object'", "]", ",", "\n", "dataset_name", "=", "'KITTI'", "\n", ")", ":", "\n", "# 1. init all the variables", "\n", "        ", "self", ".", "kitti_image_root", "=", "kitti_image_root", "\n", "self", ".", "kitti_detection_root", "=", "kitti_detection_root", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "type", "=", "type", "\n", "self", ".", "max_object", "=", "max_object", "\n", "self", ".", "dataset_name", "=", "dataset_name", "\n", "\n", "self", ".", "frame_gap_range", "=", "np", ".", "array", "(", "[", "[", "i", ",", "-", "i", "]", "for", "i", "in", "range", "(", "1", ",", "30", ")", "]", ")", ".", "flatten", "(", ")", ";", "\n", "\n", "# 2. init GTParser", "\n", "self", ".", "parser", "=", "GTParser", "(", "self", ".", "kitti_image_root", ",", "self", ".", "kitti_detection_root", ")", "\n", "\n", "# 3. map", "\n", "self", ".", "map_frame", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.KITTITrainDataset.__getitem__": [[283, 338], ["numpy.pad", "kitti.KITTITrainDataset.transform", "kitti.KITTITrainDataset.map_frame.keys"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.DataTransform.transform"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "item", "]", "\n", "\n", "new_item", "=", "item", "\n", "move_forward", "=", "True", "\n", "\n", "use_map", "=", "item", "in", "self", ".", "map_frame", ".", "keys", "(", ")", "\n", "if", "use_map", ":", "\n", "            ", "new_item", "=", "self", ".", "map_frame", "[", "item", "]", "\n", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "new_item", "]", "\n", "", "else", ":", "\n", "            ", "while", "current_image", "is", "None", "and", "not", "use_map", ":", "\n", "                ", "if", "move_forward", ":", "\n", "                    ", "new_item", "+=", "1", "\n", "if", "new_item", ">=", "self", ".", "parser", ".", "len", ":", "\n", "                        ", "move_forward", "=", "False", "\n", "new_item", "=", "item", "-", "1", "\n", "continue", "\n", "", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "new_item", "]", "\n", "", "else", ":", "\n", "                    ", "new_item", "-=", "1", "\n", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "=", "self", ".", "parser", "[", "new_item", "]", "\n", "", "", "self", ".", "map_frame", "[", "item", "]", "=", "new_item", "\n", "\n", "\n", "# none data process", "\n", "", "'''\n        wait_time = 0\n        current_index_gap = 0\n        while current_image is None:\n            current_image, current_box, next_image, next_box, labels = self.parser[item]\n\n            if current_index_gap < len(self.frame_gap_range):\n                current_image, current_box, next_image, next_box, labels = self.parser[max(item+self.frame_gap_range[current_index_gap], 0)]\n            elif current_index_gap < 100:\n                current_image, current_box, next_image, next_box, labels = self.parser[\n                    max(item + random.choice(list(range(30, 100))+list(range(-100, -30))), 0)]\n            else:\n                # cannot find item any more\n\n                current_image, current_box, next_image, next_box, labels = self.parser[\n                    max(item + random.choice(list(range(100, 200)) + list(range(-200, -100))), 0)]\n            current_index_gap += 1\n            # print('None processing.')\n        '''", "\n", "if", "self", ".", "transform", "is", "None", "or", "current_image", "is", "None", ":", "\n", "            ", "return", "current_image", ",", "current_box", ",", "next_image", ",", "next_box", ",", "labels", "\n", "\n", "# change the label to max_object x max_object", "\n", "", "labels", "=", "np", ".", "pad", "(", "labels", ",", "\n", "[", "(", "0", ",", "self", ".", "max_object", "-", "labels", ".", "shape", "[", "0", "]", ")", ",", "\n", "(", "0", ",", "self", ".", "max_object", "-", "labels", ".", "shape", "[", "1", "]", ")", "]", ",", "\n", "mode", "=", "'constant'", ",", "\n", "constant_values", "=", "0", ")", "\n", "return", "self", ".", "transform", "(", "current_image", ",", "next_image", ",", "current_box", ",", "next_box", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.KITTITrainDataset.__len__": [[339, 341], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "parser", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti.test_dataset": [[343, 372], ["kitti.KITTITrainDataset", "print", "len", "range", "len", "print", "enumerate", "numpy.concatenate", "cv2.resize", "cv2.imshow", "cv2.waitKey", "b1.astype.astype", "np.array.astype", "cv2.rectangle", "cv2.rectangle", "sum", "numpy.array", "tuple", "sum", "EnvironmentError", "tuple", "tuple", "tuple", "tuple", "numpy.random.rand"], "function", ["None"], ["", "", "def", "test_dataset", "(", ")", ":", "\n", "# 1. test init function", "\n", "    ", "dataset", "=", "KITTITrainDataset", "(", ")", "\n", "print", "(", "len", "(", "dataset", ")", ")", "\n", "\n", "# 2. test get item", "\n", "l", "=", "len", "(", "dataset", ")", "\n", "for", "i", "in", "range", "(", "l", ")", ":", "\n", "        ", "print", "(", "i", ")", "\n", "current_image", ",", "current_boxes", ",", "next_image", ",", "next_boxes", ",", "labels", "=", "dataset", "[", "i", "]", "\n", "if", "current_image", "is", "None", ":", "\n", "            ", "continue", "\n", "", "for", "i", ",", "b1", "in", "enumerate", "(", "current_boxes", ")", ":", "\n", "            ", "color", "=", "(", "0", ",", "0", ",", "255", ")", "\n", "if", "sum", "(", "labels", "[", "i", ",", ":", "]", ")", "==", "0", ":", "\n", "                ", "b2", "=", "np", ".", "array", "(", "[", "0", ",", "0", ",", "0", ",", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "b2", "=", "next_boxes", "[", "labels", "[", "i", ",", ":", "]", "]", "[", "0", "]", "\n", "color", "=", "tuple", "(", "(", "np", ".", "random", ".", "rand", "(", "3", ")", "*", "255", ")", ".", "astype", "(", "int", ")", ".", "tolist", "(", ")", ")", "\n", "", "if", "sum", "(", "labels", "[", "i", ",", ":", "]", ")", ">", "1", ":", "\n", "                ", "raise", "EnvironmentError", "(", "'label error'", ")", "\n", "", "b1", "=", "b1", ".", "astype", "(", "int", ")", "\n", "b2", "=", "b2", ".", "astype", "(", "int", ")", "\n", "cv2", ".", "rectangle", "(", "current_image", ",", "tuple", "(", "b1", "[", ":", "2", "]", ")", ",", "tuple", "(", "b1", "[", "2", ":", "]", ")", ",", "color", ",", "2", ")", "\n", "cv2", ".", "rectangle", "(", "next_image", ",", "tuple", "(", "b2", "[", ":", "2", "]", ")", ",", "tuple", "(", "b2", "[", "2", ":", "]", ")", ",", "color", ",", "2", ")", "\n", "", "image", "=", "np", ".", "concatenate", "(", "[", "current_image", ",", "next_image", "]", ",", "axis", "=", "0", ")", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "(", "1900", ",", "1000", ")", ")", "\n", "cv2", ".", "imshow", "(", "'res'", ",", "image", ")", "\n", "cv2", ".", "waitKey", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_detection_data_reader.KITTIDataReader.__init__": [[27, 47], ["os.path.join", "pandas.read_csv", "kitti_detection_data_reader.KITTIDataReader.detection.groupby", "list", "kitti_detection_data_reader.KITTIDataReader.detection_group.indices.keys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_folder", ",", "detection_file_name", ")", ":", "\n", "        ", "datatype", "=", "{", "0", ":", "int", ",", "1", ":", "int", ",", "2", ":", "str", ",", "3", ":", "int", ",", "4", ":", "int", ",", "5", ":", "float", ",", "\n", "6", ":", "float", ",", "7", ":", "float", ",", "8", ":", "float", ",", "9", ":", "float", ",", "\n", "10", ":", "int", ",", "11", ":", "int", ",", "12", ":", "int", ",", "13", ":", "int", ",", "14", ":", "int", ",", "\n", "15", ":", "int", ",", "16", ":", "int", ",", "17", ":", "float", "}", "\n", "self", ".", "image_folder", "=", "image_folder", "\n", "self", ".", "detection_file_name", "=", "detection_file_name", "\n", "self", ".", "image_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "'{0:06d}.png'", ")", "\n", "self", ".", "detection", "=", "pd", ".", "read_csv", "(", "self", ".", "detection_file_name", ",", "sep", "=", "' '", ",", "header", "=", "None", ",", "dtype", "=", "datatype", ")", "\n", "\n", "self", ".", "detection", "=", "self", ".", "detection", ".", "iloc", "[", ":", ",", "0", ":", "18", "]", "\n", "select_type_row", "=", "[", "t", "in", "(", "'Van'", ",", "'Car'", ",", "'Pedestrian'", ",", "'Tram'", ",", "'Cyclist'", ",", "'Truck'", ")", "for", "t", "in", "self", ".", "detection", "[", "2", "]", "]", "#Pedestrian", "\n", "self", ".", "detection", "=", "self", ".", "detection", "[", "select_type_row", "]", "\n", "select_score_row", "=", "[", "t", ">=", "0", "for", "t", "in", "self", ".", "detection", "[", "17", "]", "]", "\n", "self", ".", "detection", "=", "self", ".", "detection", "[", "select_score_row", "]", "\n", "select_occluded_row", "=", "[", "t", "in", "[", "0", ",", "1", "]", "for", "t", "in", "self", ".", "detection", "[", "4", "]", "]", "\n", "self", ".", "detection", "=", "self", ".", "detection", "[", "select_occluded_row", "]", "\n", "\n", "self", ".", "detection_group", "=", "self", ".", "detection", ".", "groupby", "(", "0", ")", "\n", "self", ".", "detection_group_keys", "=", "list", "(", "self", ".", "detection_group", ".", "indices", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_detection_data_reader.KITTIDataReader.__len__": [[48, 50], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "detection_group_keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_detection_data_reader.KITTIDataReader.get_detection_by_index": [[51, 55], ["kitti_detection_data_reader.KITTIDataReader.detection_group.get_group", "len", "kitti_detection_data_reader.KITTIDataReader.detection_group_keys.count"], "methods", ["None"], ["", "def", "get_detection_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", "or", "self", ".", "detection_group_keys", ".", "count", "(", "index", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "self", ".", "detection_group", ".", "get_group", "(", "index", ")", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_detection_data_reader.KITTIDataReader.get_image_by_index": [[56, 61], ["cv2.imread", "len", "kitti_detection_data_reader.KITTIDataReader.image_format.format"], "methods", ["None"], ["", "def", "get_image_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "", "return", "cv2", ".", "imread", "(", "self", ".", "image_format", ".", "format", "(", "index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_detection_data_reader.KITTIDataReader.__getitem__": [[62, 65], ["kitti_detection_data_reader.KITTIDataReader.get_image_by_index", "kitti_detection_data_reader.KITTIDataReader.get_detection_by_index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_image_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_detection_by_index"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "(", "self", ".", "get_image_by_index", "(", "item", ")", ",", "\n", "self", ".", "get_detection_by_index", "(", "item", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.kitti_detection_data_reader.DataTransform.transform": [[68, 84], ["cv2.resize.astype", "cv2.resize"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "transform", "(", "image", ",", "detection", ",", "size", ",", "mean", ")", ":", "\n", "        ", "'''\n        transform image and detection to the sst input format\n        :param image:\n        :param detection:\n        :param size:\n        :param mean:\n        :return:\n        '''", "\n", "h", ",", "w", ",", "c", "=", "image", ".", "shape", "\n", "image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "detection", "[", "[", "4", ",", "5", "]", "]", "+=", "detection", "[", "2", ",", "3", "]", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "size", ")", "\n", "image", "-=", "mean", "\n", "new_h", ",", "new_w", ",", "new_c", "=", "image", ".", "shape", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.__init__": [[8, 16], ["os.path.join", "pandas.read_csv", "mot15_data_reader.MOTDataReader.detection.groupby", "list", "mot15_data_reader.MOTDataReader.detection_group.indices.keys"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_folder", ",", "detection_file_name", ")", ":", "\n", "        ", "self", ".", "image_folder", "=", "image_folder", "\n", "self", ".", "detection_file_name", "=", "detection_file_name", "\n", "self", ".", "image_format", "=", "os", ".", "path", ".", "join", "(", "self", ".", "image_folder", ",", "'{0:06d}.jpg'", ")", "\n", "self", ".", "detection", "=", "pd", ".", "read_csv", "(", "self", ".", "detection_file_name", ",", "header", "=", "None", ")", "\n", "# self.detection = self.detection[self.detection[6] > 0.3]", "\n", "self", ".", "detection_group", "=", "self", ".", "detection", ".", "groupby", "(", "0", ")", "\n", "self", ".", "detection_group_keys", "=", "list", "(", "self", ".", "detection_group", ".", "indices", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.__len__": [[17, 19], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "detection_group_keys", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_detection_by_index": [[20, 24], ["mot15_data_reader.MOTDataReader.detection_group.get_group", "len", "mot15_data_reader.MOTDataReader.detection_group_keys.count"], "methods", ["None"], ["", "def", "get_detection_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", "or", "self", ".", "detection_group_keys", ".", "count", "(", "index", ")", "==", "0", ":", "\n", "            ", "return", "None", "\n", "", "return", "self", ".", "detection_group", ".", "get_group", "(", "index", ")", ".", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_image_by_index": [[25, 30], ["cv2.imread", "len", "mot15_data_reader.MOTDataReader.image_format.format"], "methods", ["None"], ["", "def", "get_image_by_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "index", ">", "len", "(", "self", ".", "detection_group_keys", ")", ":", "\n", "            ", "return", "None", "\n", "\n", "", "return", "cv2", ".", "imread", "(", "self", ".", "image_format", ".", "format", "(", "index", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.__getitem__": [[31, 34], ["mot15_data_reader.MOTDataReader.get_image_by_index", "mot15_data_reader.MOTDataReader.get_detection_by_index"], "methods", ["home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_image_by_index", "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.MOTDataReader.get_detection_by_index"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "return", "(", "self", ".", "get_image_by_index", "(", "item", "+", "1", ")", ",", "\n", "self", ".", "get_detection_by_index", "(", "item", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shijieS_SST.data.mot15_data_reader.DataTransform.transform": [[37, 53], ["cv2.resize.astype", "cv2.resize"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "transform", "(", "image", ",", "detection", ",", "size", ",", "mean", ")", ":", "\n", "        ", "'''\n        transform image and detection to the sst input format\n        :param image:\n        :param detection:\n        :param size:\n        :param mean:\n        :return:\n        '''", "\n", "h", ",", "w", ",", "c", "=", "image", ".", "shape", "\n", "image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "detection", "[", "[", "4", ",", "5", "]", "]", "+=", "detection", "[", "2", ",", "3", "]", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "size", ")", "\n", "image", "-=", "mean", "\n", "new_h", ",", "new_w", ",", "new_c", "=", "image", ".", "shape", "\n", "\n"]]}