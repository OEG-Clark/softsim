{"home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.main._init_": [[27, 38], ["os.system", "os.system", "os.system", "os.system", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs", "os.path.exists", "os.makedirs"], "function", ["None"], ["def", "_init_", "(", ")", ":", "\n", "    ", "if", "not", "os", ".", "path", ".", "exists", "(", "'checkpoints'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'checkpoints'", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'checkpoints/'", "+", "args", ".", "exp_name", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'checkpoints/'", "+", "args", ".", "exp_name", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "'checkpoints/'", "+", "args", ".", "exp_name", "+", "'/'", "+", "'models'", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "'checkpoints/'", "+", "args", ".", "exp_name", "+", "'/'", "+", "'models'", ")", "\n", "", "os", ".", "system", "(", "'cp main.py checkpoints'", "+", "'/'", "+", "args", ".", "exp_name", "+", "'/'", "+", "'main.py.backup'", ")", "\n", "os", ".", "system", "(", "'cp model.py checkpoints'", "+", "'/'", "+", "args", ".", "exp_name", "+", "'/'", "+", "'model.py.backup'", ")", "\n", "os", ".", "system", "(", "'cp util.py checkpoints'", "+", "'/'", "+", "args", ".", "exp_name", "+", "'/'", "+", "'util.py.backup'", ")", "\n", "os", ".", "system", "(", "'cp data.py checkpoints'", "+", "'/'", "+", "args", ".", "exp_name", "+", "'/'", "+", "'data.py.backup'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.main.train": [[39, 163], ["torch.device", "torch.device", "torch.device", "torch.device", "print", "torch.DataParallel", "print", "torch.optim.lr_scheduler.CosineAnnealingLR", "range", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "str", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "print", "torch.SGD", "print", "torch.Adam", "torch.optim.lr_scheduler.CosineAnnealingLR.step", "GBNet().to.train", "numpy.concatenate", "numpy.concatenate", "io.cprint", "GBNet().to.eval", "numpy.concatenate", "numpy.concatenate", "sklearn.accuracy_score", "sklearn.balanced_accuracy_score", "io.cprint", "data.ModelNet40", "data.ModelNet40", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "Exception", "model.PointNet().to", "GBNet().to.parameters", "GBNet().to.parameters", "data.permute.permute", "optim.Adam.zero_grad", "GBNet().to.", "criterion", "criterion.backward", "optim.Adam.step", "np.concatenate.append", "np.concatenate.append", "data.permute.permute", "GBNet().to.", "criterion", "np.concatenate.append", "np.concatenate.append", "io.cprint", "torch.save", "torch.save", "torch.save", "torch.save", "data.ScanObjectNN", "data.ScanObjectNN", "model.PointNet().to", "Exception", "model.DGCNN().to", "Exception", "data.permute.to", "label.to().squeeze", "data.permute.size", "model.max", "criterion.item", "label.cpu().numpy", "preds.detach().cpu().numpy", "sklearn.accuracy_score", "sklearn.balanced_accuracy_score", "data.permute.to", "label.to().squeeze", "data.permute.size", "model.max", "criterion.item", "label.cpu().numpy", "preds.detach().cpu().numpy", "GBNet().to.state_dict", "model.PointNet", "model.DGCNN().to", "Exception", "model.GBNet().to", "model.PointNet", "model.DGCNN", "model.GBNet().to", "Exception", "label.to", "label.cpu", "preds.detach().cpu", "label.to", "label.cpu", "preds.detach().cpu", "model.DGCNN", "model.GBNet", "model.GBNet", "preds.detach", "preds.detach"], "function", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.main.train", "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.cprint", "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.cprint", "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.cprint"], ["", "def", "train", "(", "args", ",", "io", ")", ":", "\n", "    ", "if", "args", ".", "dataset", "==", "'modelnet40'", ":", "\n", "        ", "train_loader", "=", "DataLoader", "(", "ModelNet40", "(", "partition", "=", "'train'", ",", "num_points", "=", "args", ".", "num_points", ")", ",", "num_workers", "=", "8", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "test_loader", "=", "DataLoader", "(", "ModelNet40", "(", "partition", "=", "'test'", ",", "num_points", "=", "args", ".", "num_points", ")", ",", "num_workers", "=", "8", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'ScanObjectNN'", ":", "\n", "        ", "train_loader", "=", "DataLoader", "(", "ScanObjectNN", "(", "partition", "=", "'training'", ",", "num_points", "=", "args", ".", "num_points", ")", ",", "num_workers", "=", "8", ",", "\n", "batch_size", "=", "args", ".", "batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "True", ")", "\n", "test_loader", "=", "DataLoader", "(", "ScanObjectNN", "(", "partition", "=", "'test'", ",", "num_points", "=", "args", ".", "num_points", ")", ",", "num_workers", "=", "8", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Dataset Not supported\"", ")", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "args", ".", "cuda", "else", "\"cpu\"", ")", "\n", "\n", "#Try to load models", "\n", "if", "args", ".", "model", "==", "'pointnet'", ":", "\n", "        ", "if", "args", ".", "dataset", "==", "'modelnet40'", ":", "\n", "            ", "model", "=", "PointNet", "(", "args", ",", "output_channels", "=", "40", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'ScanObjectNN'", ":", "\n", "            ", "model", "=", "PointNet", "(", "args", ",", "output_channels", "=", "15", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Dataset Not supported\"", ")", "\n", "", "", "elif", "args", ".", "model", "==", "'dgcnn'", ":", "\n", "        ", "if", "args", ".", "dataset", "==", "'modelnet40'", ":", "\n", "            ", "model", "=", "DGCNN", "(", "args", ",", "output_channels", "=", "40", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'ScanObjectNN'", ":", "\n", "            ", "model", "=", "DGCNN", "(", "args", ",", "output_channels", "=", "15", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Dataset Not supported\"", ")", "\n", "", "", "elif", "args", ".", "model", "==", "'gbnet'", ":", "\n", "        ", "if", "args", ".", "dataset", "==", "'modelnet40'", ":", "\n", "            ", "model", "=", "GBNet", "(", "args", ",", "output_channels", "=", "40", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'ScanObjectNN'", ":", "\n", "            ", "model", "=", "GBNet", "(", "args", ",", "output_channels", "=", "15", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Dataset Not supported\"", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Not implemented\"", ")", "\n", "", "print", "(", "str", "(", "model", ")", ")", "\n", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "print", "(", "\"Let's use\"", ",", "torch", ".", "cuda", ".", "device_count", "(", ")", ",", "\"GPUs!\"", ")", "\n", "\n", "if", "args", ".", "use_sgd", ":", "\n", "        ", "print", "(", "\"Use SGD\"", ")", "\n", "opt", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", "*", "100", ",", "momentum", "=", "args", ".", "momentum", ",", "weight_decay", "=", "1e-4", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Use Adam\"", ")", "\n", "opt", "=", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ",", "weight_decay", "=", "1e-4", ")", "\n", "\n", "", "scheduler", "=", "CosineAnnealingLR", "(", "opt", ",", "args", ".", "epochs", ",", "eta_min", "=", "args", ".", "lr", ")", "\n", "\n", "criterion", "=", "cal_loss", "\n", "\n", "best_test_acc", "=", "0", "\n", "for", "epoch", "in", "range", "(", "args", ".", "epochs", ")", ":", "\n", "        ", "scheduler", ".", "step", "(", ")", "\n", "####################", "\n", "# Train", "\n", "####################", "\n", "train_loss", "=", "0.0", "\n", "count", "=", "0.0", "\n", "model", ".", "train", "(", ")", "\n", "train_pred", "=", "[", "]", "\n", "train_true", "=", "[", "]", "\n", "for", "data", ",", "label", "in", "train_loader", ":", "\n", "            ", "data", ",", "label", "=", "data", ".", "to", "(", "device", ")", ",", "label", ".", "to", "(", "device", ")", ".", "squeeze", "(", ")", "\n", "data", "=", "data", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "batch_size", "=", "data", ".", "size", "(", ")", "[", "0", "]", "\n", "opt", ".", "zero_grad", "(", ")", "\n", "logits", "=", "model", "(", "data", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "label", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "opt", ".", "step", "(", ")", "\n", "preds", "=", "logits", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "count", "+=", "batch_size", "\n", "train_loss", "+=", "loss", ".", "item", "(", ")", "*", "batch_size", "\n", "train_true", ".", "append", "(", "label", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "train_pred", ".", "append", "(", "preds", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "train_true", "=", "np", ".", "concatenate", "(", "train_true", ")", "\n", "train_pred", "=", "np", ".", "concatenate", "(", "train_pred", ")", "\n", "outstr", "=", "'Train %d, loss: %.6f, train acc: %.6f, train avg acc: %.6f'", "%", "(", "epoch", ",", "\n", "train_loss", "*", "1.0", "/", "count", ",", "\n", "metrics", ".", "accuracy_score", "(", "\n", "train_true", ",", "train_pred", ")", ",", "\n", "metrics", ".", "balanced_accuracy_score", "(", "\n", "train_true", ",", "train_pred", ")", ")", "\n", "io", ".", "cprint", "(", "outstr", ")", "\n", "\n", "####################", "\n", "# Test", "\n", "####################", "\n", "test_loss", "=", "0.0", "\n", "count", "=", "0.0", "\n", "model", ".", "eval", "(", ")", "\n", "test_pred", "=", "[", "]", "\n", "test_true", "=", "[", "]", "\n", "for", "data", ",", "label", "in", "test_loader", ":", "\n", "            ", "data", ",", "label", "=", "data", ".", "to", "(", "device", ")", ",", "label", ".", "to", "(", "device", ")", ".", "squeeze", "(", ")", "\n", "data", "=", "data", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "batch_size", "=", "data", ".", "size", "(", ")", "[", "0", "]", "\n", "logits", "=", "model", "(", "data", ")", "\n", "loss", "=", "criterion", "(", "logits", ",", "label", ")", "\n", "preds", "=", "logits", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "count", "+=", "batch_size", "\n", "test_loss", "+=", "loss", ".", "item", "(", ")", "*", "batch_size", "\n", "test_true", ".", "append", "(", "label", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "test_pred", ".", "append", "(", "preds", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "test_true", "=", "np", ".", "concatenate", "(", "test_true", ")", "\n", "test_pred", "=", "np", ".", "concatenate", "(", "test_pred", ")", "\n", "test_acc", "=", "metrics", ".", "accuracy_score", "(", "test_true", ",", "test_pred", ")", "\n", "avg_per_class_acc", "=", "metrics", ".", "balanced_accuracy_score", "(", "test_true", ",", "test_pred", ")", "\n", "outstr", "=", "'Test %d, loss: %.6f, test acc: %.6f, test avg acc: %.6f'", "%", "(", "epoch", ",", "\n", "test_loss", "*", "1.0", "/", "count", ",", "\n", "test_acc", ",", "\n", "avg_per_class_acc", ")", "\n", "io", ".", "cprint", "(", "outstr", ")", "\n", "if", "test_acc", ">=", "best_test_acc", ":", "\n", "            ", "best_test_acc", "=", "test_acc", "\n", "outstr", "=", "'Current Best: %.6f'", "%", "best_test_acc", "\n", "io", ".", "cprint", "(", "outstr", ")", "\n", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "'checkpoints/%s/models/model.t7'", "%", "args", ".", "exp_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.main.test": [[165, 224], ["torch.device", "torch.device", "torch.device", "torch.device", "print", "torch.DataParallel", "GBNet().to.load_state_dict", "GBNet().to.eval", "numpy.concatenate", "numpy.concatenate", "sklearn.accuracy_score", "sklearn.balanced_accuracy_score", "io.cprint", "torch.utils.data.DataLoader", "str", "torch.load", "torch.load", "torch.load", "torch.load", "data.permute.permute", "GBNet().to.", "np.concatenate.append", "np.concatenate.append", "data.ModelNet40", "torch.utils.data.DataLoader", "Exception", "model.PointNet().to", "data.permute.to", "label.to().squeeze", "data.permute.size", "model.max", "label.cpu().numpy", "preds.detach().cpu().numpy", "data.ScanObjectNN", "model.PointNet().to", "Exception", "model.DGCNN().to", "Exception", "model.PointNet", "model.DGCNN().to", "Exception", "model.GBNet().to", "label.to", "label.cpu", "preds.detach().cpu", "model.PointNet", "model.DGCNN", "model.GBNet().to", "Exception", "model.DGCNN", "model.GBNet", "preds.detach", "model.GBNet"], "function", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.cprint"], ["", "", "", "def", "test", "(", "args", ",", "io", ")", ":", "\n", "    ", "if", "args", ".", "dataset", "==", "'modelnet40'", ":", "\n", "        ", "test_loader", "=", "DataLoader", "(", "ModelNet40", "(", "partition", "=", "'test'", ",", "num_points", "=", "args", ".", "num_points", ")", ",", "num_workers", "=", "8", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'ScanObjectNN'", ":", "\n", "        ", "test_loader", "=", "DataLoader", "(", "ScanObjectNN", "(", "partition", "=", "'test'", ",", "num_points", "=", "args", ".", "num_points", ")", ",", "num_workers", "=", "8", ",", "\n", "batch_size", "=", "args", ".", "test_batch_size", ",", "shuffle", "=", "True", ",", "drop_last", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Dataset Not supported\"", ")", "\n", "\n", "", "device", "=", "torch", ".", "device", "(", "\"cuda\"", "if", "args", ".", "cuda", "else", "\"cpu\"", ")", "\n", "\n", "#Try to load models", "\n", "if", "args", ".", "model", "==", "'pointnet'", ":", "\n", "        ", "if", "args", ".", "dataset", "==", "'modelnet40'", ":", "\n", "            ", "model", "=", "PointNet", "(", "args", ",", "output_channels", "=", "40", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'ScanObjectNN'", ":", "\n", "            ", "model", "=", "PointNet", "(", "args", ",", "output_channels", "=", "15", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Dataset Not supported\"", ")", "\n", "", "", "elif", "args", ".", "model", "==", "'dgcnn'", ":", "\n", "        ", "if", "args", ".", "dataset", "==", "'modelnet40'", ":", "\n", "            ", "model", "=", "DGCNN", "(", "args", ",", "output_channels", "=", "40", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'ScanObjectNN'", ":", "\n", "            ", "model", "=", "DGCNN", "(", "args", ",", "output_channels", "=", "15", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Dataset Not supported\"", ")", "\n", "", "", "elif", "args", ".", "model", "==", "'gbnet'", ":", "\n", "        ", "if", "args", ".", "dataset", "==", "'modelnet40'", ":", "\n", "            ", "model", "=", "GBNet", "(", "args", ",", "output_channels", "=", "40", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "args", ".", "dataset", "==", "'ScanObjectNN'", ":", "\n", "            ", "model", "=", "GBNet", "(", "args", ",", "output_channels", "=", "15", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Dataset Not supported\"", ")", "\n", "", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"Not implemented\"", ")", "\n", "", "print", "(", "str", "(", "model", ")", ")", "\n", "model", "=", "nn", ".", "DataParallel", "(", "model", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "model_path", ")", ")", "\n", "model", "=", "model", ".", "eval", "(", ")", "\n", "test_acc", "=", "0.0", "\n", "count", "=", "0.0", "\n", "test_true", "=", "[", "]", "\n", "test_pred", "=", "[", "]", "\n", "for", "data", ",", "label", "in", "test_loader", ":", "\n", "\n", "        ", "data", ",", "label", "=", "data", ".", "to", "(", "device", ")", ",", "label", ".", "to", "(", "device", ")", ".", "squeeze", "(", ")", "\n", "data", "=", "data", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "batch_size", "=", "data", ".", "size", "(", ")", "[", "0", "]", "\n", "logits", "=", "model", "(", "data", ")", "\n", "preds", "=", "logits", ".", "max", "(", "dim", "=", "1", ")", "[", "1", "]", "\n", "test_true", ".", "append", "(", "label", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "test_pred", ".", "append", "(", "preds", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "test_true", "=", "np", ".", "concatenate", "(", "test_true", ")", "\n", "test_pred", "=", "np", ".", "concatenate", "(", "test_pred", ")", "\n", "test_acc", "=", "metrics", ".", "accuracy_score", "(", "test_true", ",", "test_pred", ")", "\n", "avg_per_class_acc", "=", "metrics", ".", "balanced_accuracy_score", "(", "test_true", ",", "test_pred", ")", "\n", "outstr", "=", "'Test :: test acc: %.6f, test avg acc: %.6f'", "%", "(", "test_acc", ",", "avg_per_class_acc", ")", "\n", "io", ".", "cprint", "(", "outstr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.ModelNet40.__init__": [[83, 87], ["data.load_data"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.load_data"], ["    ", "def", "__init__", "(", "self", ",", "num_points", ",", "partition", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "data", ",", "self", ".", "label", "=", "load_data", "(", "partition", ")", "\n", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "partition", "=", "partition", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.ModelNet40.__getitem__": [[88, 95], ["data.translate_pointcloud", "numpy.random.shuffle"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.translate_pointcloud"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "pointcloud", "=", "self", ".", "data", "[", "item", "]", "[", ":", "self", ".", "num_points", "]", "\n", "label", "=", "self", ".", "label", "[", "item", "]", "\n", "if", "self", ".", "partition", "==", "'train'", ":", "\n", "            ", "pointcloud", "=", "translate_pointcloud", "(", "pointcloud", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "pointcloud", ")", "\n", "", "return", "pointcloud", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.ModelNet40.__len__": [[96, 98], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "data", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.ScanObjectNN.__init__": [[101, 105], ["data.load_scanobjectnn_data"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.load_scanobjectnn_data"], ["    ", "def", "__init__", "(", "self", ",", "num_points", ",", "partition", "=", "'training'", ")", ":", "\n", "        ", "self", ".", "data", ",", "self", ".", "label", "=", "load_scanobjectnn_data", "(", "partition", ")", "\n", "self", ".", "num_points", "=", "num_points", "\n", "self", ".", "partition", "=", "partition", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.ScanObjectNN.__getitem__": [[106, 113], ["data.translate_pointcloud", "numpy.random.shuffle"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.translate_pointcloud"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "        ", "pointcloud", "=", "self", ".", "data", "[", "item", "]", "[", ":", "self", ".", "num_points", "]", "\n", "label", "=", "self", ".", "label", "[", "item", "]", "\n", "if", "self", ".", "partition", "==", "'training'", ":", "\n", "            ", "pointcloud", "=", "translate_pointcloud", "(", "pointcloud", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "pointcloud", ")", "\n", "", "return", "pointcloud", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.ScanObjectNN.__len__": [[114, 116], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "data", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.download": [[19, 30], ["os.path.dirname", "os.path.join", "os.path.abspath", "os.path.exists", "os.mkdir", "os.path.exists", "os.path.basename", "os.system", "os.system", "os.system", "os.path.join"], "function", ["None"], ["def", "download", "(", ")", ":", "\n", "    ", "BASE_DIR", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "DATA_DIR", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'data'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "DATA_DIR", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "DATA_DIR", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "DATA_DIR", ",", "'modelnet40_ply_hdf5_2048'", ")", ")", ":", "\n", "        ", "www", "=", "'https://shapenet.cs.stanford.edu/media/modelnet40_ply_hdf5_2048.zip'", "\n", "zipfile", "=", "os", ".", "path", ".", "basename", "(", "www", ")", "\n", "os", ".", "system", "(", "'wget %s; unzip %s'", "%", "(", "www", ",", "zipfile", ")", ")", "\n", "os", ".", "system", "(", "'mv %s %s'", "%", "(", "zipfile", "[", ":", "-", "4", "]", ",", "DATA_DIR", ")", ")", "\n", "os", ".", "system", "(", "'rm %s'", "%", "(", "zipfile", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.load_data": [[32, 48], ["data.download", "os.path.dirname", "os.path.join", "glob.glob", "numpy.concatenate", "numpy.concatenate", "os.path.abspath", "os.path.join", "h5py.File", "[].astype", "[].astype", "h5py.File.close", "np.concatenate.append", "np.concatenate.append"], "function", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.download", "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.close"], ["", "", "def", "load_data", "(", "partition", ")", ":", "\n", "    ", "download", "(", ")", "\n", "BASE_DIR", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "DATA_DIR", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'data'", ")", "\n", "all_data", "=", "[", "]", "\n", "all_label", "=", "[", "]", "\n", "for", "h5_name", "in", "glob", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "DATA_DIR", ",", "'modelnet40_ply_hdf5_2048'", ",", "'ply_data_%s*.h5'", "%", "partition", ")", ")", ":", "\n", "        ", "f", "=", "h5py", ".", "File", "(", "h5_name", ")", "\n", "data", "=", "f", "[", "'data'", "]", "[", ":", "]", ".", "astype", "(", "'float32'", ")", "\n", "label", "=", "f", "[", "'label'", "]", "[", ":", "]", ".", "astype", "(", "'int64'", ")", "\n", "f", ".", "close", "(", ")", "\n", "all_data", ".", "append", "(", "data", ")", "\n", "all_label", ".", "append", "(", "label", ")", "\n", "", "all_data", "=", "np", ".", "concatenate", "(", "all_data", ",", "axis", "=", "0", ")", "\n", "all_label", "=", "np", ".", "concatenate", "(", "all_label", ",", "axis", "=", "0", ")", "\n", "return", "all_data", ",", "all_label", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.load_scanobjectnn_data": [[50, 66], ["os.path.dirname", "os.path.join", "h5py.File", "[].astype", "[].astype", "h5py.File.close", "np.concatenate.append", "np.concatenate.append", "numpy.concatenate", "numpy.concatenate", "os.path.abspath"], "function", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.close"], ["", "def", "load_scanobjectnn_data", "(", "partition", ")", ":", "\n", "    ", "BASE_DIR", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "DATA_DIR", "=", "os", ".", "path", ".", "join", "(", "BASE_DIR", ",", "'data'", ")", "\n", "all_data", "=", "[", "]", "\n", "all_label", "=", "[", "]", "\n", "\n", "h5_name", "=", "BASE_DIR", "+", "'/data/'", "+", "partition", "+", "'_objectdataset_augmentedrot_scale75.h5'", "\n", "f", "=", "h5py", ".", "File", "(", "h5_name", ")", "\n", "data", "=", "f", "[", "'data'", "]", "[", ":", "]", ".", "astype", "(", "'float32'", ")", "\n", "label", "=", "f", "[", "'label'", "]", "[", ":", "]", ".", "astype", "(", "'int64'", ")", "\n", "f", ".", "close", "(", ")", "\n", "all_data", ".", "append", "(", "data", ")", "\n", "all_label", ".", "append", "(", "label", ")", "\n", "all_data", "=", "np", ".", "concatenate", "(", "all_data", ",", "axis", "=", "0", ")", "\n", "all_label", "=", "np", ".", "concatenate", "(", "all_label", ",", "axis", "=", "0", ")", "\n", "return", "all_data", ",", "all_label", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.translate_pointcloud": [[68, 74], ["numpy.random.uniform", "numpy.random.uniform", "numpy.add().astype", "numpy.add", "numpy.multiply"], "function", ["None"], ["", "def", "translate_pointcloud", "(", "pointcloud", ")", ":", "\n", "    ", "xyz1", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "2.", "/", "3.", ",", "high", "=", "3.", "/", "2.", ",", "size", "=", "[", "3", "]", ")", "\n", "xyz2", "=", "np", ".", "random", ".", "uniform", "(", "low", "=", "-", "0.2", ",", "high", "=", "0.2", ",", "size", "=", "[", "3", "]", ")", "\n", "\n", "translated_pointcloud", "=", "np", ".", "add", "(", "np", ".", "multiply", "(", "pointcloud", ",", "xyz1", ")", ",", "xyz2", ")", ".", "astype", "(", "'float32'", ")", "\n", "return", "translated_pointcloud", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.data.jitter_pointcloud": [[76, 80], ["numpy.clip", "numpy.random.randn"], "function", ["None"], ["", "def", "jitter_pointcloud", "(", "pointcloud", ",", "sigma", "=", "0.01", ",", "clip", "=", "0.02", ")", ":", "\n", "    ", "N", ",", "C", "=", "pointcloud", ".", "shape", "\n", "pointcloud", "+=", "np", ".", "clip", "(", "sigma", "*", "np", ".", "random", ".", "randn", "(", "N", ",", "C", ")", ",", "-", "1", "*", "clip", ",", "clip", ")", "\n", "return", "pointcloud", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.CAA_Module.__init__": [[97, 116], ["torch.Module.__init__", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ")", ":", "\n", "        ", "super", "(", "CAA_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "1024", "//", "8", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "1024", "//", "8", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "in_dim", ")", "\n", "\n", "self", ".", "query_conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv1d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "1024", "//", "8", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn1", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "key_conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv1d", "(", "in_channels", "=", "1024", ",", "out_channels", "=", "1024", "//", "8", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn2", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "value_conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv1d", "(", "in_channels", "=", "in_dim", ",", "out_channels", "=", "in_dim", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn3", ",", "\n", "nn", ".", "ReLU", "(", ")", ")", "\n", "\n", "self", ".", "alpha", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ")", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "-", "1", ")", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.CAA_Module.forward": [[116, 139], ["x.permute", "model.CAA_Module.query_conv", "model.CAA_Module.key_conv().permute", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "model.CAA_Module.softmax", "model.CAA_Module.value_conv", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "[].expand_as", "model.CAA_Module.key_conv", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n            inputs :\n                x : input feature maps( B X C X N )\n            returns :\n                out : output feature maps( B X C X N )\n        \"\"\"", "\n", "\n", "# Compact Channel-wise Comparator block", "\n", "x_hat", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "proj_query", "=", "self", ".", "query_conv", "(", "x_hat", ")", "\n", "proj_key", "=", "self", ".", "key_conv", "(", "x_hat", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ")", "\n", "similarity_mat", "=", "torch", ".", "bmm", "(", "proj_key", ",", "proj_query", ")", "\n", "\n", "# Channel Affinity Estimator block", "\n", "affinity_mat", "=", "torch", ".", "max", "(", "similarity_mat", ",", "-", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", ".", "expand_as", "(", "similarity_mat", ")", "-", "similarity_mat", "\n", "affinity_mat", "=", "self", ".", "softmax", "(", "affinity_mat", ")", "\n", "\n", "proj_value", "=", "self", ".", "value_conv", "(", "x", ")", "\n", "out", "=", "torch", ".", "bmm", "(", "affinity_mat", ",", "proj_value", ")", "\n", "# residual connection with a learnable weight", "\n", "out", "=", "self", ".", "alpha", "*", "out", "+", "x", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.ABEM_Module.__init__": [[143, 170], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.CAA_Module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.CAA_Module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.__init__"], ["def", "__init__", "(", "self", ",", "in_dim", ",", "out_dim", ",", "k", ")", ":", "\n", "        ", "super", "(", "ABEM_Module", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "out_dim", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_dim", "*", "2", ",", "out_dim", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn1", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "in_dim", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "out_dim", ",", "in_dim", ",", "kernel_size", "=", "[", "1", ",", "self", ".", "k", "]", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn2", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "out_dim", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_dim", "*", "2", ",", "out_dim", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn3", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "\n", "self", ".", "caa1", "=", "CAA_Module", "(", "out_dim", ")", "\n", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "out_dim", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "in_dim", "*", "2", ",", "out_dim", ",", "kernel_size", "=", "[", "1", ",", "self", ".", "k", "]", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn4", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "\n", "self", ".", "caa2", "=", "CAA_Module", "(", "out_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.ABEM_Module.forward": [[171, 198], ["model.get_graph_feature", "model.ABEM_Module.conv1", "model.ABEM_Module.conv2", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "model.get_graph_feature", "model.ABEM_Module.conv3", "model.ABEM_Module.caa1", "model.ABEM_Module.conv4", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "model.ABEM_Module.caa2", "model.ABEM_Module.max"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.get_graph_feature", "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.get_graph_feature"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# Prominent Feature Encoding", "\n", "        ", "x1", "=", "x", "# input", "\n", "input_edge", "=", "get_graph_feature", "(", "x", ",", "k", "=", "self", ".", "k", ")", "\n", "x", "=", "self", ".", "conv1", "(", "input_edge", ")", "\n", "x2", "=", "x", "# EdgeConv for input", "\n", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "# LFC", "\n", "x", "=", "torch", ".", "squeeze", "(", "x", ",", "-", "1", ")", "\n", "x3", "=", "x", "# Back-projection signal", "\n", "\n", "delta", "=", "x3", "-", "x1", "# Error signal", "\n", "\n", "x", "=", "get_graph_feature", "(", "delta", ",", "k", "=", "self", ".", "k", ")", "# EdgeConv for Error signal", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x4", "=", "x", "\n", "\n", "x", "=", "x2", "+", "x4", "# Attentional feedback", "\n", "x", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "\n", "x", "=", "self", ".", "caa1", "(", "x", ")", "# B,out_dim,N", "\n", "\n", "# Fine-grained Feature Encoding", "\n", "x_local", "=", "self", ".", "conv4", "(", "input_edge", ")", "\n", "x_local", "=", "torch", ".", "squeeze", "(", "x_local", ",", "-", "1", ")", "\n", "x_local", "=", "self", ".", "caa2", "(", "x_local", ")", "# B,out_dim,N", "\n", "\n", "return", "x", ",", "x_local", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.PointNet.__init__": [[201, 218], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "output_channels", "=", "40", ")", ":", "\n", "        ", "super", "(", "PointNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv1d", "(", "3", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv1d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv1d", "(", "64", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Conv1d", "(", "64", ",", "128", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Conv1d", "(", "128", ",", "args", ".", "emb_dims", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm1d", "(", "64", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm1d", "(", "128", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "args", ".", "emb_dims", ")", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "args", ".", "emb_dims", ",", "512", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn6", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "dp1", "=", "nn", ".", "Dropout", "(", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "512", ",", "output_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.PointNet.forward": [[219, 230], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.adaptive_max_pool1d().squeeze", "torch.adaptive_max_pool1d().squeeze", "torch.adaptive_max_pool1d().squeeze", "torch.relu", "torch.relu", "torch.relu", "model.PointNet.dp1", "model.PointNet.linear2", "model.PointNet.bn1", "model.PointNet.bn2", "model.PointNet.bn3", "model.PointNet.bn4", "model.PointNet.bn5", "model.PointNet.bn6", "model.PointNet.conv1", "model.PointNet.conv2", "model.PointNet.conv3", "model.PointNet.conv4", "model.PointNet.conv5", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "model.PointNet.linear1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn4", "(", "self", ".", "conv4", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn5", "(", "self", ".", "conv5", "(", "x", ")", ")", ")", "\n", "x", "=", "F", ".", "adaptive_max_pool1d", "(", "x", ",", "1", ")", ".", "squeeze", "(", ")", "\n", "x", "=", "F", ".", "relu", "(", "self", ".", "bn6", "(", "self", ".", "linear1", "(", "x", ")", ")", ")", "\n", "x", "=", "self", ".", "dp1", "(", "x", ")", "\n", "x", "=", "self", ".", "linear2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.DGCNN.__init__": [[233, 266], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "output_channels", "=", "40", ")", ":", "\n", "        ", "super", "(", "DGCNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "k", "=", "args", ".", "k", "\n", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", "self", ".", "bn4", "=", "nn", ".", "BatchNorm2d", "(", "256", ")", "\n", "self", ".", "bn5", "=", "nn", ".", "BatchNorm1d", "(", "args", ".", "emb_dims", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "6", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn1", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "64", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn2", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "64", "*", "2", ",", "128", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn3", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv4", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv2d", "(", "128", "*", "2", ",", "256", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn4", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "conv5", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv1d", "(", "512", ",", "args", ".", "emb_dims", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn5", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "args", ".", "emb_dims", "*", "2", ",", "512", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn6", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "dp1", "=", "nn", ".", "Dropout", "(", "p", "=", "args", ".", "dropout", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "512", ",", "256", ")", "\n", "self", ".", "bn7", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "self", ".", "dp2", "=", "nn", ".", "Dropout", "(", "p", "=", "args", ".", "dropout", ")", "\n", "self", ".", "linear3", "=", "nn", ".", "Linear", "(", "256", ",", "output_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.DGCNN.forward": [[267, 298], ["model.DGCNN.size", "model.get_graph_feature", "model.DGCNN.conv1", "model.get_graph_feature", "model.DGCNN.conv2", "model.get_graph_feature", "model.DGCNN.conv3", "model.get_graph_feature", "model.DGCNN.conv4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.DGCNN.conv5", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.DGCNN.dp1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.DGCNN.dp2", "model.DGCNN.linear3", "model.DGCNN.max", "model.DGCNN.max", "model.DGCNN.max", "model.DGCNN.max", "model.DGCNN.bn6", "model.DGCNN.bn7", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_avg_pool1d", "torch.adaptive_avg_pool1d", "torch.adaptive_avg_pool1d", "model.DGCNN.linear1", "model.DGCNN.linear2"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.get_graph_feature", "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.get_graph_feature", "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.get_graph_feature", "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.get_graph_feature"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "get_graph_feature", "(", "x", ",", "k", "=", "self", ".", "k", ")", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x1", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "\n", "\n", "x", "=", "get_graph_feature", "(", "x1", ",", "k", "=", "self", ".", "k", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x2", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "\n", "\n", "x", "=", "get_graph_feature", "(", "x2", ",", "k", "=", "self", ".", "k", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x3", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "\n", "\n", "x", "=", "get_graph_feature", "(", "x3", ",", "k", "=", "self", ".", "k", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x4", "=", "x", ".", "max", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "False", ")", "[", "0", "]", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ",", "x3", ",", "x4", ")", ",", "dim", "=", "1", ")", "\n", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "x1", "=", "F", ".", "adaptive_max_pool1d", "(", "x", ",", "1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "x2", "=", "F", ".", "adaptive_avg_pool1d", "(", "x", ",", "1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x2", ")", ",", "1", ")", "\n", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "bn6", "(", "self", ".", "linear1", "(", "x", ")", ")", ",", "negative_slope", "=", "0.2", ")", "\n", "x", "=", "self", ".", "dp1", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "bn7", "(", "self", ".", "linear2", "(", "x", ")", ")", ",", "negative_slope", "=", "0.2", ")", "\n", "x", "=", "self", ".", "dp2", "(", "x", ")", "\n", "x", "=", "self", ".", "linear3", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.GBNet.__init__": [[301, 325], ["torch.Module.__init__", "model.ABEM_Module", "model.ABEM_Module", "model.ABEM_Module", "model.ABEM_Module", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "model.CAA_Module", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "output_channels", "=", "40", ")", ":", "\n", "        ", "super", "(", "GBNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "args", "=", "args", "\n", "self", ".", "k", "=", "args", ".", "k", "\n", "\n", "self", ".", "abem1", "=", "ABEM_Module", "(", "14", ",", "64", ",", "self", ".", "k", ")", "\n", "self", ".", "abem2", "=", "ABEM_Module", "(", "64", ",", "64", ",", "self", ".", "k", ")", "\n", "self", ".", "abem3", "=", "ABEM_Module", "(", "64", ",", "128", ",", "self", ".", "k", ")", "\n", "self", ".", "abem4", "=", "ABEM_Module", "(", "128", ",", "256", ",", "self", ".", "k", ")", "\n", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm1d", "(", "args", ".", "emb_dims", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "nn", ".", "Conv1d", "(", "1024", ",", "args", ".", "emb_dims", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "self", ".", "bn", ",", "\n", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ")", ")", "\n", "\n", "self", ".", "caa", "=", "CAA_Module", "(", "1024", ")", "\n", "\n", "self", ".", "linear1", "=", "nn", ".", "Linear", "(", "args", ".", "emb_dims", "*", "2", ",", "512", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn_linear1", "=", "nn", ".", "BatchNorm1d", "(", "512", ")", "\n", "self", ".", "dp1", "=", "nn", ".", "Dropout", "(", "p", "=", "args", ".", "dropout", ")", "\n", "self", ".", "linear2", "=", "nn", ".", "Linear", "(", "512", ",", "256", ")", "\n", "self", ".", "bn_linear2", "=", "nn", ".", "BatchNorm1d", "(", "256", ")", "\n", "self", ".", "dp2", "=", "nn", ".", "Dropout", "(", "p", "=", "args", ".", "dropout", ")", "\n", "self", ".", "linear3", "=", "nn", ".", "Linear", "(", "256", ",", "output_channels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.GBNet.forward": [[326, 363], ["model.GBNet.size", "model.geometric_point_descriptor", "model.GBNet.abem1", "model.GBNet.abem2", "model.GBNet.abem3", "model.GBNet.abem4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.GBNet.conv", "model.GBNet.caa", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_max_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.adaptive_avg_pool1d().view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.GBNet.dp1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "model.GBNet.dp2", "model.GBNet.linear3", "model.GBNet.bn_linear1", "model.GBNet.bn_linear2", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_max_pool1d", "torch.adaptive_avg_pool1d", "torch.adaptive_avg_pool1d", "torch.adaptive_avg_pool1d", "model.GBNet.linear1", "model.GBNet.linear2"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.geometric_point_descriptor"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# x: B,3,N", "\n", "        ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "# Geometric Point Descriptor:", "\n", "x", "=", "geometric_point_descriptor", "(", "x", ")", "# B,14,N", "\n", "\n", "# 1st Attentional Back-projection Edge Features Module (ABEM):", "\n", "x1", ",", "x1_local", "=", "self", ".", "abem1", "(", "x", ")", "\n", "\n", "# 2nd Attentional Back-projection Edge Features Module (ABEM):", "\n", "x2", ",", "x2_local", "=", "self", ".", "abem2", "(", "x1", ")", "\n", "\n", "# 3rd Attentional Back-projection Edge Features Module (ABEM):", "\n", "x3", ",", "x3_local", "=", "self", ".", "abem3", "(", "x2", ")", "\n", "\n", "# 4th Attentional Back-projection Edge Features Module (ABEM):", "\n", "x4", ",", "x4_local", "=", "self", ".", "abem4", "(", "x3", ")", "\n", "\n", "# Concatenate both prominent and fine-grained outputs of 4 ABEMs:", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x1", ",", "x1_local", ",", "x2", ",", "x2_local", ",", "x3", ",", "x3_local", ",", "x4", ",", "x4_local", ")", ",", "dim", "=", "1", ")", "# B,(64+64+128+256)x2,N", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "caa", "(", "x", ")", "# B,1024,N", "\n", "\n", "# global embedding", "\n", "global_max", "=", "F", ".", "adaptive_max_pool1d", "(", "x", ",", "1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "global_avg", "=", "F", ".", "adaptive_avg_pool1d", "(", "x", ",", "1", ")", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "global_max", ",", "global_avg", ")", ",", "1", ")", "# B,2048", "\n", "\n", "# FC layers with dropout", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "bn_linear1", "(", "self", ".", "linear1", "(", "x", ")", ")", ",", "negative_slope", "=", "0.2", ")", "# B,512", "\n", "x", "=", "self", ".", "dp1", "(", "x", ")", "\n", "x", "=", "F", ".", "leaky_relu", "(", "self", ".", "bn_linear2", "(", "self", ".", "linear2", "(", "x", ")", ")", ",", "negative_slope", "=", "0.2", ")", "# B,256", "\n", "x", "=", "self", ".", "dp2", "(", "x", ")", "\n", "x", "=", "self", ".", "linear3", "(", "x", ")", "# B,C", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.knn": [[21, 28], ["torch.sum", "torch.sum", "torch.sum", "torch.matmul", "torch.matmul", "torch.matmul", "torch.sum.transpose", "pairwise_distance.topk", "x.transpose", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor"], "function", ["None"], ["def", "knn", "(", "x", ",", "k", ")", ":", "\n", "    ", "inner", "=", "-", "2", "*", "torch", ".", "matmul", "(", "x", ".", "transpose", "(", "2", ",", "1", ")", ",", "x", ")", "\n", "xx", "=", "torch", ".", "sum", "(", "x", "**", "2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "pairwise_distance", "=", "-", "xx", "-", "inner", "-", "xx", ".", "transpose", "(", "2", ",", "1", ")", "\n", "\n", "idx", "=", "pairwise_distance", ".", "topk", "(", "k", "=", "k", ",", "dim", "=", "-", "1", ")", "[", "1", "]", "# (batch_size, num_points, k)", "\n", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.geometric_point_descriptor": [[30, 67], ["x.transpose().contiguous.size", "x.transpose().contiguous.size", "x.transpose().contiguous.view", "torch.device", "torch.device", "torch.device", "idx_base.type.type", "knn.type", "knn.view", "x.transpose().contiguous.size", "x.transpose().contiguous.transpose().contiguous", "neighbors.permute.view", "neighbors.permute.permute", "torch.index_select", "torch.index_select", "torch.index_select", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.index_select", "torch.index_select", "torch.index_select", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.cross", "torch.cross", "torch.cross", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.cat", "torch.cat", "torch.cat", "model.knn", "torch.arange().view", "torch.arange().view", "torch.arange().view", "x.transpose().contiguous.view", "x.transpose().contiguous.transpose", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.cuda.LongTensor", "torch.arange", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.knn"], ["", "def", "geometric_point_descriptor", "(", "x", ",", "k", "=", "3", ",", "idx", "=", "None", ")", ":", "\n", "# x: B,3,N", "\n", "    ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "num_points", "=", "x", ".", "size", "(", "2", ")", "\n", "org_x", "=", "x", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "-", "1", ",", "num_points", ")", "\n", "if", "idx", "is", "None", ":", "\n", "        ", "idx", "=", "knn", "(", "x", ",", "k", "=", "k", ")", "# (batch_size, num_points, k)", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "\n", "idx_base", "=", "torch", ".", "arange", "(", "0", ",", "batch_size", ",", "device", "=", "device", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "*", "num_points", "\n", "idx_base", "=", "idx_base", ".", "type", "(", "torch", ".", "cuda", ".", "LongTensor", ")", "\n", "idx", "=", "idx", ".", "type", "(", "torch", ".", "cuda", ".", "LongTensor", ")", "\n", "idx", "=", "idx", "+", "idx_base", "\n", "idx", "=", "idx", ".", "view", "(", "-", "1", ")", "\n", "\n", "_", ",", "num_dims", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", "# (batch_size, num_points, num_dims)  -> (batch_size*num_points, num_dims) #   batch_size * num_points * k + range(0, batch_size*num_points)", "\n", "neighbors", "=", "x", ".", "view", "(", "batch_size", "*", "num_points", ",", "-", "1", ")", "[", "idx", ",", ":", "]", "\n", "neighbors", "=", "neighbors", ".", "view", "(", "batch_size", ",", "num_points", ",", "k", ",", "num_dims", ")", "\n", "\n", "neighbors", "=", "neighbors", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "# B,C,N,k", "\n", "neighbor_1st", "=", "torch", ".", "index_select", "(", "neighbors", ",", "dim", "=", "-", "1", ",", "index", "=", "torch", ".", "cuda", ".", "LongTensor", "(", "[", "1", "]", ")", ")", "# B,C,N,1", "\n", "neighbor_1st", "=", "torch", ".", "squeeze", "(", "neighbor_1st", ",", "-", "1", ")", "# B,3,N", "\n", "neighbor_2nd", "=", "torch", ".", "index_select", "(", "neighbors", ",", "dim", "=", "-", "1", ",", "index", "=", "torch", ".", "cuda", ".", "LongTensor", "(", "[", "2", "]", ")", ")", "# B,C,N,1", "\n", "neighbor_2nd", "=", "torch", ".", "squeeze", "(", "neighbor_2nd", ",", "-", "1", ")", "# B,3,N", "\n", "\n", "edge1", "=", "neighbor_1st", "-", "org_x", "\n", "edge2", "=", "neighbor_2nd", "-", "org_x", "\n", "normals", "=", "torch", ".", "cross", "(", "edge1", ",", "edge2", ",", "dim", "=", "1", ")", "# B,3,N", "\n", "dist1", "=", "torch", ".", "norm", "(", "edge1", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# B,1,N", "\n", "dist2", "=", "torch", ".", "norm", "(", "edge2", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# B,1,N", "\n", "\n", "new_pts", "=", "torch", ".", "cat", "(", "(", "org_x", ",", "normals", ",", "dist1", ",", "dist2", ",", "edge1", ",", "edge2", ")", ",", "1", ")", "# B,14,N", "\n", "\n", "return", "new_pts", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.get_graph_feature": [[69, 93], ["x.view().repeat.size", "x.view().repeat.size", "x.view().repeat.view", "torch.device", "torch.device", "torch.device", "idx_base.type.type", "knn.type", "knn.view", "x.view().repeat.size", "x.view().repeat.transpose().contiguous", "torch.cat().permute.view", "x.view().repeat.view().repeat", "torch.cat().permute", "torch.cat().permute", "torch.cat().permute", "model.knn", "torch.arange().view", "torch.arange().view", "torch.arange().view", "x.view().repeat.view", "x.view().repeat.transpose", "x.view().repeat.view", "torch.cat", "torch.cat", "torch.cat", "torch.arange", "torch.arange", "torch.arange"], "function", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.model.knn"], ["", "def", "get_graph_feature", "(", "x", ",", "k", "=", "20", ",", "idx", "=", "None", ")", ":", "\n", "    ", "batch_size", "=", "x", ".", "size", "(", "0", ")", "\n", "num_points", "=", "x", ".", "size", "(", "2", ")", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "-", "1", ",", "num_points", ")", "\n", "if", "idx", "is", "None", ":", "\n", "        ", "idx", "=", "knn", "(", "x", ",", "k", "=", "k", ")", "# (batch_size, num_points, k)", "\n", "", "device", "=", "torch", ".", "device", "(", "'cuda'", ")", "\n", "\n", "idx_base", "=", "torch", ".", "arange", "(", "0", ",", "batch_size", ",", "device", "=", "device", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "*", "num_points", "\n", "idx_base", "=", "idx_base", ".", "type", "(", "torch", ".", "cuda", ".", "LongTensor", ")", "\n", "idx", "=", "idx", ".", "type", "(", "torch", ".", "cuda", ".", "LongTensor", ")", "\n", "idx", "=", "idx", "+", "idx_base", "\n", "idx", "=", "idx", ".", "view", "(", "-", "1", ")", "\n", "\n", "_", ",", "num_dims", ",", "_", "=", "x", ".", "size", "(", ")", "\n", "\n", "x", "=", "x", ".", "transpose", "(", "2", ",", "1", ")", ".", "contiguous", "(", ")", "# (batch_size, num_points, num_dims)  -> (batch_size*num_points, num_dims) #   batch_size * num_points * k + range(0, batch_size*num_points)", "\n", "feature", "=", "x", ".", "view", "(", "batch_size", "*", "num_points", ",", "-", "1", ")", "[", "idx", ",", ":", "]", "\n", "feature", "=", "feature", ".", "view", "(", "batch_size", ",", "num_points", ",", "k", ",", "num_dims", ")", "\n", "x", "=", "x", ".", "view", "(", "batch_size", ",", "num_points", ",", "1", ",", "num_dims", ")", ".", "repeat", "(", "1", ",", "1", ",", "k", ",", "1", ")", "\n", "\n", "feature", "=", "torch", ".", "cat", "(", "(", "feature", "-", "x", ",", "x", ")", ",", "dim", "=", "3", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "\n", "return", "feature", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.__init__": [[37, 39], ["open"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "f", "=", "open", "(", "path", ",", "'a'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.cprint": [[40, 44], ["print", "util.IOStream.f.write", "util.IOStream.f.flush"], "methods", ["None"], ["", "def", "cprint", "(", "self", ",", "text", ")", ":", "\n", "        ", "print", "(", "text", ")", "\n", "self", ".", "f", ".", "write", "(", "text", "+", "'\\n'", ")", "\n", "self", ".", "f", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.close": [[45, 47], ["util.IOStream.f.close"], "methods", ["home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.IOStream.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "f", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ShiQiu0419_GBNet.None.util.cal_loss": [[16, 34], ["gold.contiguous().view.contiguous().view", "pred.size", "torch.zeros_like().scatter", "torch.zeros_like().scatter", "torch.log_softmax", "torch.cross_entropy", "gold.contiguous().view.contiguous", "gold.contiguous().view.view", "torch.zeros_like", "torch.zeros_like"], "function", ["None"], ["def", "cal_loss", "(", "pred", ",", "gold", ",", "smoothing", "=", "True", ")", ":", "\n", "    ", "''' Calculate cross entropy loss, apply label smoothing if needed. '''", "\n", "\n", "gold", "=", "gold", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", "\n", "\n", "if", "smoothing", ":", "\n", "        ", "eps", "=", "0.2", "\n", "n_class", "=", "pred", ".", "size", "(", "1", ")", "\n", "\n", "one_hot", "=", "torch", ".", "zeros_like", "(", "pred", ")", ".", "scatter", "(", "1", ",", "gold", ".", "view", "(", "-", "1", ",", "1", ")", ",", "1", ")", "\n", "one_hot", "=", "one_hot", "*", "(", "1", "-", "eps", ")", "+", "(", "1", "-", "one_hot", ")", "*", "eps", "/", "(", "n_class", "-", "1", ")", "\n", "log_prb", "=", "F", ".", "log_softmax", "(", "pred", ",", "dim", "=", "1", ")", "\n", "\n", "loss", "=", "-", "(", "one_hot", "*", "log_prb", ")", ".", "sum", "(", "dim", "=", "1", ")", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "        ", "loss", "=", "F", ".", "cross_entropy", "(", "pred", ",", "gold", ",", "reduction", "=", "'mean'", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]]}