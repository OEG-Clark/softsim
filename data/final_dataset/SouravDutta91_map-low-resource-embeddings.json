{"home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.clean_token": [[10, 13], ["re.sub", "re.sub.strip"], "function", ["None"], ["def", "clean_token", "(", "token", ")", ":", "\n", "    ", "token", "=", "re", ".", "sub", "(", "r'[)(}{)\\[\\]:;,`.!?*+=#\\-\\'\\\"0-9/\\\\&$]'", ",", "''", ",", "token", ")", "\n", "return", "token", ".", "strip", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.load_data": [[18, 34], ["print", "open", "line.lower().split", "utilities.clean_token", "len", "data.append", "line.lower", "sentence.append", "utilities.clean_token"], "function", ["home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.clean_token", "home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.clean_token"], ["", "def", "load_data", "(", "path", ")", ":", "\n", "    ", "data", "=", "[", "]", "\n", "\n", "with", "open", "(", "path", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "file", ":", "\n", "        ", "for", "line", "in", "file", ":", "\n", "            ", "sentence", "=", "[", "]", "\n", "for", "word", "in", "line", ".", "lower", "(", ")", ".", "split", "(", ")", ":", "\n", "                ", "word", "=", "clean_token", "(", "word", ")", "\n", "if", "word", "!=", "''", ":", "\n", "                    ", "sentence", ".", "append", "(", "clean_token", "(", "word", ")", ")", "\n", "", "", "if", "len", "(", "sentence", ")", "!=", "0", ":", "\n", "                ", "data", ".", "append", "(", "sentence", ")", "\n", "\n", "", "", "", "print", "(", "'Data loaded.'", ")", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.get_words": [[38, 44], ["set", "list", "set.add", "word.lower"], "function", ["None"], ["", "def", "get_words", "(", "sentences", ")", ":", "\n", "    ", "words", "=", "set", "(", ")", "\n", "for", "sentence", "in", "sentences", ":", "\n", "        ", "for", "word", "in", "sentence", ":", "\n", "            ", "words", ".", "add", "(", "word", ".", "lower", "(", ")", ")", "\n", "", "", "return", "list", "(", "words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.create_w2v": [[49, 69], ["multiprocessing.cpu_count", "w2v.", "print"], "function", ["None"], ["", "def", "create_w2v", "(", "data", ",", "\n", "emb_dim", "=", "300", ",", "\n", "window", "=", "5", ",", "\n", "min_count", "=", "5", ",", "\n", "negative", "=", "5", ",", "\n", "iterations", "=", "10", ")", ":", "\n", "\n", "    ", "from", "gensim", ".", "models", "import", "Word2Vec", "as", "w2v", "\n", "workers", "=", "multiprocessing", ".", "cpu_count", "(", ")", "\n", "\n", "w2v", "=", "w2v", "(", "data", ",", "\n", "size", "=", "emb_dim", ",", "\n", "window", "=", "window", ",", "\n", "min_count", "=", "min_count", ",", "\n", "negative", "=", "negative", ",", "\n", "iter", "=", "iterations", ",", "\n", "workers", "=", "workers", ")", "\n", "\n", "print", "(", "'Word2Vec model created.'", ")", "\n", "return", "w2v", "\n", "\n"]], "home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.prepare_embeddings": [[73, 86], ["print", "open", "file.write", "str", "str"], "function", ["None"], ["", "def", "prepare_embeddings", "(", "emb_file_path", ",", "w2v_file", ",", "words", ")", ":", "\n", "    ", "with", "open", "(", "emb_file_path", ",", "'w'", ")", "as", "file", ":", "\n", "        ", "count", "=", "0", "\n", "total_string", "=", "''", "\n", "for", "word_en", "in", "words", ":", "\n", "            ", "if", "word_en", "in", "w2v_file", ":", "\n", "                ", "count", "+=", "1", "\n", "string", "=", "word_en", "+", "' '", "\n", "emb", "=", "' '", ".", "join", "(", "str", "(", "x", ")", "for", "x", "in", "w2v_file", ".", "wv", "[", "word_en", "]", ")", "\n", "total_string", "+=", "string", "+", "emb", "+", "'\\n'", "\n", "", "", "total_string", "=", "str", "(", "count", ")", "+", "' 300\\n'", "+", "total_string", "\n", "file", ".", "write", "(", "total_string", ")", "\n", "", "print", "(", "'Embeddings file saved to disk.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.save_pickle_file": [[90, 94], ["print", "open", "pickle.dump"], "function", ["None"], ["", "def", "save_pickle_file", "(", "data", ",", "file_path", ")", ":", "\n", "    ", "with", "open", "(", "file_path", ",", "'wb'", ")", "as", "file", ":", "\n", "        ", "pkl", ".", "dump", "(", "data", ",", "file", ")", "\n", "", "print", "(", "'Saved to local disk.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.load_pickle_file": [[98, 101], ["open", "pickle.load"], "function", ["None"], ["", "def", "load_pickle_file", "(", "file_path", ")", ":", "\n", "    ", "with", "open", "(", "file_path", ",", "'rb'", ")", "as", "file", ":", "\n", "        ", "return", "pkl", ".", "load", "(", "file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SouravDutta91_map-low-resource-embeddings.None.utilities.translate": [[106, 117], ["json.loads", "requests.post"], "function", ["None"], ["", "", "def", "translate", "(", "text", ",", "source", ",", "target", ")", ":", "\n", "    ", "api_url", "=", "\"https://translate.yandex.net/api/v1.5/tr.json/translate\"", "\n", "\n", "# Please use your own Yandex translation API key", "\n", "api_key", "=", "\"xxxxxxxxxxxxxxxxxxxxxxxxxx\"", "\n", "\n", "data", "=", "{", "'key'", ":", "api_key", ",", "\n", "'text'", ":", "text", ",", "\n", "'lang'", ":", "source", "+", "'-'", "+", "target", "}", "\n", "translated", "=", "json", ".", "loads", "(", "requests", ".", "post", "(", "url", "=", "api_url", ",", "data", "=", "data", ")", ".", "text", ")", "\n", "return", "translated", "\n", "", ""]]}