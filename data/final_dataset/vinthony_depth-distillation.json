{"home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.AverageMeter.__init__": [[101, 103], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.AverageMeter.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.AverageMeter.reset": [[104, 109], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.AverageMeter.update": [[110, 115], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils._sigmoid": [[13, 15], ["numpy.exp"], "function", ["None"], ["def", "_sigmoid", "(", "x", ")", ":", "\n", "    ", "return", "1", "/", "(", "1", "+", "np", ".", "exp", "(", "-", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.crf_refine": [[16, 51], ["dcrf.DenseCRF2D", "numpy.zeros", "n_energy.flatten", "p_energy.flatten", "dcrf.DenseCRF2D.setUnaryEnergy", "dcrf.DenseCRF2D.addPairwiseGaussian", "dcrf.DenseCRF2D.addPairwiseBilateral", "numpy.array().astype", "res.reshape.reshape", "res.reshape.astype", "numpy.log", "utils._sigmoid", "numpy.log", "utils._sigmoid", "numpy.array", "dcrf.DenseCRF2D.inference"], "function", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils._sigmoid", "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils._sigmoid"], ["", "def", "crf_refine", "(", "img", ",", "annos", ")", ":", "\n", "    ", "assert", "img", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "annos", ".", "dtype", "==", "np", ".", "uint8", "\n", "assert", "img", ".", "shape", "[", ":", "2", "]", "==", "annos", ".", "shape", "\n", "\n", "# img and annos should be np array with data type uint8", "\n", "\n", "EPSILON", "=", "1e-8", "\n", "\n", "M", "=", "2", "# salient or not", "\n", "tau", "=", "1.05", "\n", "# Setup the CRF model", "\n", "d", "=", "dcrf", ".", "DenseCRF2D", "(", "img", ".", "shape", "[", "1", "]", ",", "img", ".", "shape", "[", "0", "]", ",", "M", ")", "\n", "\n", "anno_norm", "=", "annos", "/", "255.", "\n", "\n", "n_energy", "=", "-", "np", ".", "log", "(", "(", "1.0", "-", "anno_norm", "+", "EPSILON", ")", ")", "/", "(", "tau", "*", "_sigmoid", "(", "1", "-", "anno_norm", ")", ")", "\n", "p_energy", "=", "-", "np", ".", "log", "(", "anno_norm", "+", "EPSILON", ")", "/", "(", "tau", "*", "_sigmoid", "(", "anno_norm", ")", ")", "\n", "\n", "U", "=", "np", ".", "zeros", "(", "(", "M", ",", "img", ".", "shape", "[", "0", "]", "*", "img", ".", "shape", "[", "1", "]", ")", ",", "dtype", "=", "'float32'", ")", "\n", "U", "[", "0", ",", ":", "]", "=", "n_energy", ".", "flatten", "(", ")", "\n", "U", "[", "1", ",", ":", "]", "=", "p_energy", ".", "flatten", "(", ")", "\n", "\n", "d", ".", "setUnaryEnergy", "(", "U", ")", "\n", "\n", "d", ".", "addPairwiseGaussian", "(", "sxy", "=", "3", ",", "compat", "=", "3", ")", "\n", "d", ".", "addPairwiseBilateral", "(", "sxy", "=", "60", ",", "srgb", "=", "5", ",", "rgbim", "=", "img", ",", "compat", "=", "5", ")", "\n", "\n", "# Do the inference", "\n", "infer", "=", "np", ".", "array", "(", "d", ".", "inference", "(", "1", ")", ")", ".", "astype", "(", "'float32'", ")", "\n", "res", "=", "infer", "[", "1", ",", ":", "]", "\n", "\n", "res", "=", "res", "*", "255", "\n", "res", "=", "res", ".", "reshape", "(", "img", ".", "shape", "[", ":", "2", "]", ")", "\n", "return", "res", ".", "astype", "(", "'uint8'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.to_numpy": [[53, 55], ["tesor.cpu().data.numpy", "tesor.cpu"], "function", ["None"], ["", "def", "to_numpy", "(", "tesor", ")", ":", "\n", "    ", "return", "tesor", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.to_tensor": [[56, 58], ["torch.from_numpy", "torch.from_numpy"], "function", ["None"], ["", "def", "to_tensor", "(", "npy", ")", ":", "\n", "    ", "return", "torch", ".", "from_numpy", "(", "npy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.get_cm": [[60, 65], ["numpy.where().ravel", "numpy.where().ravel", "sklearn.metrics.confusion_matrix().ravel", "numpy.where", "numpy.where", "sklearn.metrics.confusion_matrix", "numpy.full_like", "numpy.zeros_like", "numpy.full_like", "numpy.zeros_like"], "function", ["None"], ["", "def", "get_cm", "(", "impredictm", ",", "maskgt", ")", ":", "\n", "# torch to numpy", "\n", "    ", "maskgt_ravel", "=", "np", ".", "where", "(", "maskgt", ">", "128", ",", "np", ".", "full_like", "(", "maskgt", ",", "255", ")", ",", "np", ".", "zeros_like", "(", "maskgt", ")", ")", ".", "ravel", "(", ")", "\n", "impred_ravel", "=", "np", ".", "where", "(", "impredictm", ">", "128", ",", "np", ".", "full_like", "(", "impredictm", ",", "255", ")", ",", "np", ".", "zeros_like", "(", "impredictm", ")", ")", ".", "ravel", "(", ")", "\n", "return", "confusion_matrix", "(", "maskgt_ravel", ",", "impred_ravel", ",", "labels", "=", "[", "0", ",", "255", "]", ")", ".", "ravel", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.resize_to_match": [[66, 70], ["torch.interpolate", "to.size"], "function", ["None"], ["", "def", "resize_to_match", "(", "fm", ",", "to", ")", ":", "\n", "# just use interpolate", "\n", "# [1,3] = (h,w)", "\n", "    ", "return", "F", ".", "interpolate", "(", "fm", ",", "to", ".", "size", "(", ")", "[", "-", "2", ":", "]", ",", "mode", "=", "'bilinear'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.cal_ber": [[71, 83], ["numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum"], "function", ["None"], ["", "def", "cal_ber", "(", "fps", ",", "tps", ",", "tns", ",", "fns", ")", ":", "\n", "\n", "    ", "FP", "=", "np", ".", "sum", "(", "fps", ")", "\n", "TP", "=", "np", ".", "sum", "(", "tps", ")", "\n", "TN", "=", "np", ".", "sum", "(", "tns", ")", "\n", "FN", "=", "np", ".", "sum", "(", "fns", ")", "\n", "\n", "BER_NS", "=", "FP", "/", "(", "TN", "+", "FP", ")", "\n", "BER_S", "=", "FN", "/", "(", "FN", "+", "TP", ")", "\n", "BER", "=", "0.5", "*", "(", "BER_S", "+", "BER_NS", ")", "\n", "\n", "return", "BER", ",", "BER_S", ",", "BER_NS", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.save_checkpoint": [[85, 87], ["torch.save", "torch.save", "generator.state_dict"], "function", ["None"], ["", "def", "save_checkpoint", "(", "generator", ",", "dataset_name", ",", "epoch", ",", "is_best", "=", "False", ",", "per", "=", "'generator'", ")", ":", "\n", "    ", "torch", ".", "save", "(", "generator", ".", "state_dict", "(", ")", ",", "\"saved_models/%s/%s_%d.pth\"", "%", "(", "dataset_name", ",", "per", ",", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.add_image": [[90, 98], ["tens.view().repeat.squeeze", "writer.add_image", "len", "tens.view().repeat.view().repeat", "tens.view().repeat.size", "tens.view().repeat.view", "tens.view().repeat.size", "tens.view().repeat.size"], "function", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.None.utils.add_image"], ["", "def", "add_image", "(", "writer", ",", "name", ",", "tens", ",", "iter", ")", ":", "\n", "\n", "    ", "tens", "=", "tens", ".", "squeeze", "(", ")", "\n", "\n", "if", "len", "(", "tens", ".", "size", "(", ")", ")", "==", "2", ":", "\n", "        ", "tens", "=", "tens", ".", "view", "(", "(", "1", ",", "tens", ".", "size", "(", "0", ")", ",", "tens", ".", "size", "(", "1", ")", ")", ")", ".", "repeat", "(", "(", "3", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "writer", ".", "add_image", "(", "name", ",", "tens", ",", "iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.datasets.DefocusDataset.__init__": [[10, 35], ["torchvision.Compose", "print", "sorted", "open", "sorted", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "len", "os.path.join", "s.strip", "os.path.join", "os.path.join", "f.readlines", "os.listdir", "os.path.join", "os.path.join", "os.listdir", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "root", "=", "'./datasets/CUHKDefocus/'", ",", "mode", "=", "\"train\"", ")", ":", "\n", "\n", "        ", "self", ".", "root", "=", "root", "\n", "self", ".", "is_train", "=", "True", "if", "mode", "==", "'train'", "else", "False", "\n", "\n", "if", "'CUHKDefocus'", "in", "self", ".", "root", ":", "\n", "            ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'test.txt'", ")", ")", "as", "f", ":", "\n", "                ", "test_images", "=", "[", "s", ".", "strip", "(", ")", "for", "s", "in", "f", ".", "readlines", "(", ")", "]", "\n", "\n", "", "", "if", "self", ".", "is_train", ":", "\n", "            ", "self", ".", "images", "=", "sorted", "(", "[", "os", ".", "path", ".", "join", "(", "root", ",", "'image'", ",", "x", ")", "for", "x", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'image'", ")", ")", "if", "x", "not", "in", "test_images", "]", ")", "\n", "", "else", ":", "\n", "            ", "if", "'CUHKDefocus'", "in", "self", ".", "root", ":", "\n", "                ", "self", ".", "images", "=", "[", "os", ".", "path", ".", "join", "(", "root", ",", "'image'", ",", "x", ")", "for", "x", "in", "test_images", "]", "\n", "", "else", ":", "\n", "                ", "self", ".", "images", "=", "sorted", "(", "[", "os", ".", "path", ".", "join", "(", "root", ",", "'image'", ",", "x", ")", "for", "x", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "root", ",", "'image'", ")", ")", "]", ")", "\n", "\n", "\n", "", "", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "320", ",", "320", ")", ",", "Image", ".", "BICUBIC", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n", "\n", "print", "(", "'Dataset:%s'", "%", "(", "len", "(", "self", ".", "images", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.datasets.DefocusDataset.__getitem__": [[36, 49], ["PIL.Image.open().convert", "PIL.Image.open().convert", "datasets.DefocusDataset.transform", "numpy.array", "numpy.asarray", "numpy.array", "PIL.Image.open", "PIL.Image.open", "datasets.DefocusDataset.images[].split", "datasets.DefocusDataset.images[].replace().replace", "datasets.DefocusDataset.images[].replace"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "imgo", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "index", "]", ")", ".", "convert", "(", "'RGB'", ")", "\n", "mask", "=", "Image", ".", "open", "(", "self", ".", "images", "[", "index", "]", ".", "replace", "(", "'image'", ",", "'gt'", ")", ".", "replace", "(", "'jpg'", ",", "'png'", ")", ")", ".", "convert", "(", "'L'", ")", "\n", "\n", "img", "=", "self", ".", "transform", "(", "imgo", ")", "\n", "mask", "=", "np", ".", "asarray", "(", "mask", ")", "/", "255.", "\n", "imgo", "=", "np", ".", "array", "(", "imgo", ")", "\n", "\n", "if", "'CUHKDefocus'", "in", "self", ".", "root", ":", "\n", "            ", "mask", "=", "1", "-", "mask", "\n", "\n", "", "return", "{", "\"A\"", ":", "img", ",", "'Ao'", ":", "np", ".", "array", "(", "imgo", ")", ",", "'M'", ":", "mask", ",", "'name'", ":", "self", ".", "images", "[", "index", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.None.datasets.DefocusDataset.__len__": [[50, 52], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.vgg.VGGNet.__init__": [[13, 30], ["torchvision.models.vgg.VGG.__init__", "vgg.make_layers", "exec", "super().parameters", "vgg.VGGNet.named_parameters", "print", "param.size"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__", "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.vgg.make_layers"], ["    ", "def", "__init__", "(", "self", ",", "pretrained", "=", "True", ",", "model", "=", "'vgg16'", ",", "requires_grad", "=", "True", ",", "remove_fc", "=", "True", ",", "show_params", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "make_layers", "(", "cfg", "[", "model", "]", ")", ")", "\n", "self", ".", "ranges", "=", "ranges", "[", "model", "]", "\n", "\n", "if", "pretrained", ":", "\n", "            ", "exec", "(", "\"self.load_state_dict(models.%s(pretrained=True).state_dict())\"", "%", "model", ")", "\n", "\n", "", "if", "not", "requires_grad", ":", "\n", "            ", "for", "param", "in", "super", "(", ")", ".", "parameters", "(", ")", ":", "\n", "                ", "param", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "if", "remove_fc", ":", "# delete redundant fully-connected layer params, can save memory", "\n", "            ", "del", "self", ".", "classifier", "\n", "\n", "", "if", "show_params", ":", "\n", "            ", "for", "name", ",", "param", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "                ", "print", "(", "name", ",", "param", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.vgg.VGGNet.forward": [[31, 41], ["range", "len", "range"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "{", "}", "\n", "\n", "# get the output of each maxpooling layer (5 maxpool in VGG net)", "\n", "for", "idx", "in", "range", "(", "len", "(", "self", ".", "ranges", ")", ")", ":", "\n", "            ", "for", "layer", "in", "range", "(", "self", ".", "ranges", "[", "idx", "]", "[", "0", "]", ",", "self", ".", "ranges", "[", "idx", "]", "[", "1", "]", ")", ":", "\n", "                ", "x", "=", "self", ".", "features", "[", "layer", "]", "(", "x", ")", "\n", "", "output", "[", "\"x%d\"", "%", "(", "idx", "+", "1", ")", "]", "=", "x", "\n", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.vgg.make_layers": [[58, 72], ["torch.Sequential", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "function", ["None"], ["def", "make_layers", "(", "cfg", ",", "batch_norm", "=", "False", ")", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "v", "in", "cfg", ":", "\n", "        ", "if", "v", "==", "'M'", ":", "\n", "            ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "            ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "v", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "v", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "v", "\n", "", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "", "", ""]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.fcn.ResNextDecoderAtt.__init__": [[14, 44], ["torch.Module.__init__", "decoder", "decoder", "decoder", "decoder", "decoder", "side", "side", "side", "side", "side", "att", "att", "att", "att", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pretrained_net", ",", "n_class", "=", "1", ",", "type", "=", "'res'", ",", "decoder", "=", "UpsampleSKConv", ",", "side", "=", "SideClassifer", ",", "att", "=", "MergeAndConv", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_class", "=", "n_class", "\n", "self", ".", "pretrained_net", "=", "pretrained_net", "\n", "if", "type", "==", "'res'", ":", "\n", "            ", "inlist", "=", "[", "2048", ",", "1024", ",", "512", ",", "256", ",", "64", "]", "\n", "olist", "=", "[", "1024", ",", "512", ",", "256", ",", "64", ",", "32", "]", "\n", "", "else", ":", "\n", "            ", "inlist", "=", "[", "512", ",", "512", ",", "256", ",", "128", ",", "64", "]", "\n", "olist", "=", "[", "512", ",", "256", ",", "128", ",", "64", ",", "32", "]", "\n", "\n", "", "self", ".", "deconv1", "=", "decoder", "(", "inlist", "[", "0", "]", ",", "olist", "[", "0", "]", ")", "\n", "self", ".", "deconv2", "=", "decoder", "(", "inlist", "[", "1", "]", ",", "olist", "[", "1", "]", ")", "\n", "self", ".", "deconv3", "=", "decoder", "(", "inlist", "[", "2", "]", ",", "olist", "[", "2", "]", ")", "\n", "self", ".", "deconv4", "=", "decoder", "(", "inlist", "[", "3", "]", ",", "olist", "[", "3", "]", ")", "\n", "self", ".", "deconv5", "=", "decoder", "(", "inlist", "[", "4", "]", ",", "olist", "[", "4", "]", ")", "\n", "\n", "self", ".", "classifier1", "=", "side", "(", "olist", "[", "0", "]", ",", "n_class", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "classifier2", "=", "side", "(", "olist", "[", "1", "]", ",", "n_class", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "classifier3", "=", "side", "(", "olist", "[", "2", "]", ",", "n_class", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "classifier4", "=", "side", "(", "olist", "[", "3", "]", ",", "n_class", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "classifier5", "=", "side", "(", "olist", "[", "4", "]", ",", "n_class", ",", "kernel_size", "=", "1", ")", "\n", "\n", "self", ".", "sideatt1", "=", "att", "(", "2", ",", "1", ")", "\n", "self", ".", "sideatt2", "=", "att", "(", "2", ",", "1", ")", "\n", "self", ".", "sideatt3", "=", "att", "(", "2", ",", "1", ")", "\n", "self", ".", "sideatt4", "=", "att", "(", "2", ",", "1", ")", "\n", "\n", "self", ".", "fusion", "=", "nn", ".", "Conv2d", "(", "5", ",", "n_class", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "fusiond", "=", "nn", ".", "Conv2d", "(", "5", ",", "n_class", ",", "kernel_size", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.fcn.ResNextDecoderAtt.forward": [[46, 84], ["fcn.ResNextDecoderAtt.pretrained_net", "fcn.ResNextDecoderAtt.deconv1", "fcn.ResNextDecoderAtt.classifier1", "fcn.ResNextDecoderAtt.deconv2", "fcn.ResNextDecoderAtt.classifier2", "fcn.ResNextDecoderAtt.deconv3", "fcn.ResNextDecoderAtt.classifier3", "fcn.ResNextDecoderAtt.deconv4", "fcn.ResNextDecoderAtt.classifier4", "fcn.ResNextDecoderAtt.deconv5", "fcn.ResNextDecoderAtt.classifier5", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "fcn.ResNextDecoderAtt.fusion", "fcn.ResNextDecoderAtt.fusiond", "fcn.ResNextDecoderAtt.sideatt1", "fcn.ResNextDecoderAtt.sideatt2", "fcn.ResNextDecoderAtt.sideatt3", "fcn.ResNextDecoderAtt.sideatt4", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "x.size", "x.size", "x.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "self", ".", "pretrained_net", "(", "x", ")", "\n", "x5", "=", "output", "[", "'x5'", "]", "# size=(N, 512, x.H/32, x.W/32)", "\n", "x4", "=", "output", "[", "'x4'", "]", "# size=(N, 512, x.H/16, x.W/16)", "\n", "x3", "=", "output", "[", "'x3'", "]", "# size=(N, 256, x.H/8,  x.W/8)", "\n", "x2", "=", "output", "[", "'x2'", "]", "# size=(N, 128, x.H/4,  x.W/4)", "\n", "x1", "=", "output", "[", "'x1'", "]", "# size=(N, 64, x.H/2,  x.W/2)", "\n", "\n", "score", "=", "self", ".", "deconv1", "(", "x5", ")", "# size=(N, 512, x.H/16, x.W/16)", "\n", "side1", ",", "d1", "=", "self", ".", "classifier1", "(", "score", ")", "# utilized the features as the att of the main stream", "\n", "score", "=", "score", "*", "self", ".", "sideatt1", "(", "torch", ".", "cat", "(", "[", "side1", ",", "d1", "]", ",", "1", ")", ")", "\n", "\n", "score", "=", "score", "+", "x4", "# element-wise add, size=(N, 512, x.H/16, x.W/16)", "\n", "score", "=", "self", ".", "deconv2", "(", "score", ")", "# size=(N, 256, x.H/8, x.W/8)", "\n", "side2", ",", "d2", "=", "self", ".", "classifier2", "(", "score", ")", "\n", "score", "=", "score", "*", "self", ".", "sideatt2", "(", "torch", ".", "cat", "(", "[", "side2", ",", "d2", "]", ",", "1", ")", ")", "\n", "\n", "score", "=", "score", "+", "x3", "# element-wise add, size=(N, 256, x.H/8, x.W/8)", "\n", "score", "=", "self", ".", "deconv3", "(", "score", ")", "# size=(N, 128, x.H/4, x.W/4)", "\n", "side3", ",", "d3", "=", "self", ".", "classifier3", "(", "score", ")", "\n", "score", "=", "score", "*", "self", ".", "sideatt3", "(", "torch", ".", "cat", "(", "[", "side3", ",", "d3", "]", ",", "1", ")", ")", "\n", "\n", "score", "=", "score", "+", "x2", "# element-wise add, size=(N, 128, x.H/4, x.W/4)", "\n", "score", "=", "self", ".", "deconv4", "(", "score", ")", "# size=(N, 64, x.H/2, x.W/2)", "\n", "side4", ",", "d4", "=", "self", ".", "classifier4", "(", "score", ")", "\n", "score", "=", "score", "*", "self", ".", "sideatt4", "(", "torch", ".", "cat", "(", "[", "side4", ",", "d4", "]", ",", "1", ")", ")", "\n", "\n", "score", "=", "score", "+", "x1", "# element-wise add, size=(N, 64, x.H/2, x.W/2)", "\n", "score", "=", "self", ".", "deconv5", "(", "score", ")", "# size=(N, 32, x.H, x.W)", "\n", "side5", ",", "d5", "=", "self", ".", "classifier5", "(", "score", ")", "# size=(N, n_class, x.H/1, x.W/1)", "\n", "\n", "sides", "=", "torch", ".", "cat", "(", "[", "F", ".", "interpolate", "(", "i", ",", "size", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "mode", "=", "'bilinear'", ")", "for", "i", "in", "(", "side1", ",", "side2", ",", "side3", ",", "side4", ",", "side5", ")", "]", ",", "1", ")", "\n", "depths", "=", "torch", ".", "cat", "(", "[", "F", ".", "interpolate", "(", "i", ",", "size", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "mode", "=", "'bilinear'", ")", "for", "i", "in", "(", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ")", "]", ",", "1", ")", "\n", "\n", "score", "=", "self", ".", "fusion", "(", "sides", ")", "\n", "ds", "=", "self", ".", "fusiond", "(", "depths", ")", "\n", "\n", "return", "(", "score", ",", "side1", ",", "side2", ",", "side3", ",", "side4", ",", "side5", ")", ",", "(", "ds", ",", "d1", ",", "d2", ",", "d3", ",", "d4", ",", "d5", ")", "# size=(N, n_class, x.H/1, x.W/1)", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.blocks.MergeAndConv.__init__": [[10, 17], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ic", ",", "oc", ",", "inner", "=", "32", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "ic", ",", "inner", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "inner", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "inner", ",", "oc", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.blocks.MergeAndConv.forward": [[18, 22], ["blocks.MergeAndConv.conv2", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "blocks.MergeAndConv.bn", "blocks.MergeAndConv.relu", "blocks.MergeAndConv.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv2", "(", "self", ".", "bn", "(", "self", ".", "relu", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", ")", "\n", "x", "=", "torch", ".", "sigmoid", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.blocks.SideClassifer.__init__": [[25, 33], ["torch.Module.__init__", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "sides.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__"], ["    ", "def", "__init__", "(", "self", ",", "ic", ",", "n_class", "=", "1", ",", "M", "=", "2", ",", "kernel_size", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "sides", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "M", ")", ":", "\n", "            ", "sides", ".", "append", "(", "nn", ".", "Conv2d", "(", "ic", ",", "n_class", ",", "kernel_size", "=", "kernel_size", ")", ")", "\n", "\n", "", "self", ".", "sides", "=", "nn", ".", "ModuleList", "(", "sides", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.blocks.SideClassifer.forward": [[34, 36], ["fn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "[", "fn", "(", "x", ")", "for", "fn", "in", "self", ".", "sides", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.blocks.UpsampleSKConv.__init__": [[41, 52], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "blocks.SKSPP"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__"], ["def", "__init__", "(", "self", ",", "ic", ",", "oc", ",", "reduce", "=", "4", ")", ":", "\n", "        ", "super", "(", "UpsampleSKConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "prev", "=", "nn", ".", "Conv2d", "(", "ic", ",", "ic", "//", "reduce", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "ic", "//", "reduce", ")", "\n", "\n", "self", ".", "next", "=", "nn", ".", "Conv2d", "(", "ic", "//", "reduce", ",", "oc", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "oc", ")", "\n", "\n", "self", ".", "sk", "=", "SKSPP", "(", "ic", "//", "reduce", ",", "ic", "//", "reduce", ",", "M", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.blocks.UpsampleSKConv.forward": [[53, 63], ["torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.interpolate", "blocks.UpsampleSKConv.bn", "blocks.UpsampleSKConv.sk", "blocks.UpsampleSKConv.bn2", "blocks.UpsampleSKConv.relu", "blocks.UpsampleSKConv.relu", "blocks.UpsampleSKConv.prev", "blocks.UpsampleSKConv.next"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "F", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ")", "\n", "\n", "x", "=", "self", ".", "bn", "(", "self", ".", "relu", "(", "self", ".", "prev", "(", "x", ")", ")", ")", "\n", "\n", "x", "=", "self", ".", "sk", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "bn2", "(", "self", ".", "relu", "(", "self", ".", "next", "(", "x", ")", ")", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.blocks.SKSPP.__init__": [[65, 97], ["torch.Module.__init__", "max", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.Softmax", "int", "blocks.SKSPP.convs.append", "blocks.SKSPP.fcs.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__"], ["    ", "def", "__init__", "(", "self", ",", "features", ",", "WH", ",", "M", "=", "2", ",", "G", "=", "1", ",", "r", "=", "16", ",", "stride", "=", "1", ",", "L", "=", "32", ")", ":", "\n", "        ", "\"\"\" Constructor\n        Args:\n            features: input channel dimensionality.\n            WH: input spatial dimensionality, used for GAP kernel size.\n            M: the number of branchs.\n            G: num of convolution groups.\n            r: the radio for compute d, the length of z.\n            stride: stride, default 1.\n            L: the minimum dim of the vector z in paper, default 32.\n        \"\"\"", "\n", "super", "(", "SKSPP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "d", "=", "max", "(", "int", "(", "features", "/", "r", ")", ",", "L", ")", "\n", "self", ".", "M", "=", "M", "# original  ", "\n", "self", ".", "features", "=", "features", "\n", "self", ".", "convs", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "\n", "# 1,3,5,7 padding:[0,1,2,3]", "\n", "for", "i", "in", "range", "(", "1", ",", "M", ")", ":", "\n", "            ", "self", ".", "convs", ".", "append", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "features", ",", "features", ",", "kernel_size", "=", "1", "+", "i", "*", "2", ",", "dilation", "=", "1", "+", "i", "*", "2", ",", "stride", "=", "stride", ",", "padding", "=", "(", "(", "1", "+", "i", "*", "2", ")", "*", "(", "i", "*", "2", ")", "+", "1", ")", "//", "2", ",", "groups", "=", "G", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "features", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", ")", ")", "\n", "# self.gap = nn.AvgPool2d(int(WH/stride))", "\n", "", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "features", ",", "d", ")", "\n", "self", ".", "fcs", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "for", "i", "in", "range", "(", "M", ")", ":", "\n", "            ", "self", ".", "fcs", ".", "append", "(", "\n", "nn", ".", "Linear", "(", "d", ",", "features", ")", "\n", ")", "\n", "", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.blocks.SKSPP.forward": [[98, 126], ["torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "enumerate", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum.mean().mean", "torch.sum.mean().mean", "torch.sum.mean().mean", "torch.sum.mean().mean", "blocks.SKSPP.fc", "enumerate", "blocks.SKSPP.softmax", "torch.cat.unsqueeze().unsqueeze", "torch.cat.unsqueeze().unsqueeze", "torch.cat.unsqueeze().unsqueeze", "torch.cat.unsqueeze().unsqueeze", "conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "fc().unsqueeze_", "torch.sum.mean", "torch.sum.mean", "torch.sum.mean", "torch.sum.mean", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "fc"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "        ", "feas", "=", "torch", ".", "unsqueeze", "(", "x", ",", "dim", "=", "1", ")", "\n", "\n", "# F->conv1x1->conv3x3->conv5x5->conv7x7", "\n", "\n", "for", "i", ",", "conv", "in", "enumerate", "(", "self", ".", "convs", ")", ":", "\n", "            ", "x", "=", "conv", "(", "x", ")", "\n", "# if i == 0:", "\n", "#     feas = fea", "\n", "# else:", "\n", "feas", "=", "torch", ".", "cat", "(", "[", "feas", ",", "torch", ".", "unsqueeze", "(", "x", ",", "dim", "=", "1", ")", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "fea_U", "=", "torch", ".", "sum", "(", "feas", ",", "dim", "=", "1", ")", "\n", "fea_s", "=", "fea_U", ".", "mean", "(", "-", "1", ")", ".", "mean", "(", "-", "1", ")", "\n", "fea_z", "=", "self", ".", "fc", "(", "fea_s", ")", "\n", "\n", "for", "i", ",", "fc", "in", "enumerate", "(", "self", ".", "fcs", ")", ":", "\n", "            ", "vector", "=", "fc", "(", "fea_z", ")", ".", "unsqueeze_", "(", "dim", "=", "1", ")", "\n", "if", "i", "==", "0", ":", "\n", "                ", "attention_vectors", "=", "vector", "\n", "", "else", ":", "\n", "                ", "attention_vectors", "=", "torch", ".", "cat", "(", "[", "attention_vectors", ",", "vector", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "", "attention_vectors", "=", "self", ".", "softmax", "(", "attention_vectors", ")", "\n", "attention_vectors", "=", "attention_vectors", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "fea_v", "=", "(", "feas", "*", "attention_vectors", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "return", "fea_v", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.__init__.resskspp": [[5, 7], ["models.fcn.ResNextDecoderAtt", "models.resnext.resnext101_regular.ResNeXt101"], "function", ["None"], ["def", "resskspp", "(", ")", ":", "\n", "    ", "return", "ResNextDecoderAtt", "(", "pretrained_net", "=", "ResNeXt101", "(", ")", ",", "type", "=", "'res'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.models.__init__.vggskspp": [[8, 10], ["models.fcn.ResNextDecoderAtt", "models.vgg.VGGNet"], "function", ["None"], ["", "def", "vggskspp", "(", ")", ":", "\n", "    ", "return", "ResNextDecoderAtt", "(", "pretrained_net", "=", "VGGNet", "(", ")", ",", "type", "=", "'vgg'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext_101_32x4d_.LambdaBase.__init__": [[7, 10], ["torch.Sequential.__init__"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__"], ["    ", "def", "__init__", "(", "self", ",", "fn", ",", "*", "args", ")", ":", "\n", "        ", "super", "(", "LambdaBase", ",", "self", ")", ".", "__init__", "(", "*", "args", ")", "\n", "self", ".", "lambda_func", "=", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext_101_32x4d_.LambdaBase.forward_prepare": [[11, 16], ["resnext_101_32x4d_.LambdaBase._modules.values", "output.append", "module"], "methods", ["None"], ["", "def", "forward_prepare", "(", "self", ",", "input", ")", ":", "\n", "        ", "output", "=", "[", "]", "\n", "for", "module", "in", "self", ".", "_modules", ".", "values", "(", ")", ":", "\n", "            ", "output", ".", "append", "(", "module", "(", "input", ")", ")", "\n", "", "return", "output", "if", "output", "else", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext_101_32x4d_.Lambda.forward": [[19, 21], ["resnext_101_32x4d_.Lambda.lambda_func", "resnext_101_32x4d_.Lambda.forward_prepare"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext_101_32x4d_.LambdaBase.forward_prepare"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "self", ".", "lambda_func", "(", "self", ".", "forward_prepare", "(", "input", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext_101_32x4d_.LambdaMap.forward": [[24, 26], ["list", "map", "resnext_101_32x4d_.LambdaMap.forward_prepare"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext_101_32x4d_.LambdaBase.forward_prepare"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "list", "(", "map", "(", "self", ".", "lambda_func", ",", "self", ".", "forward_prepare", "(", "input", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext_101_32x4d_.LambdaReduce.forward": [[29, 31], ["functools.reduce", "resnext_101_32x4d_.LambdaReduce.forward_prepare"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext_101_32x4d_.LambdaBase.forward_prepare"], ["    ", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "reduce", "(", "self", ".", "lambda_func", ",", "self", ".", "forward_prepare", "(", "input", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_scratch.ResNeXt101.__init__": [[9, 20], ["torch.nn.Module.__init__", "list", "torch.nn.Sequential", "torch.nn.Sequential", "list.children"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNeXt101", ",", "self", ")", ".", "__init__", "(", ")", "\n", "net", "=", "resnext_101_32x4d_", ".", "resnext_101_32x4d", "\n", "# net.load_state_dict(torch.load(resnext_101_32_path))", "\n", "\n", "net", "=", "list", "(", "net", ".", "children", "(", ")", ")", "\n", "self", ".", "layer0", "=", "nn", ".", "Sequential", "(", "*", "net", "[", ":", "3", "]", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "*", "net", "[", "3", ":", "5", "]", ")", "\n", "self", ".", "layer2", "=", "net", "[", "5", "]", "\n", "self", ".", "layer3", "=", "net", "[", "6", "]", "\n", "self", ".", "layer4", "=", "net", "[", "7", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_scratch.ResNeXt101.forward": [[21, 28], ["resnext101_regular_scratch.ResNeXt101.layer0", "resnext101_regular_scratch.ResNeXt101.layer1", "resnext101_regular_scratch.ResNeXt101.layer2", "resnext101_regular_scratch.ResNeXt101.layer3", "resnext101_regular_scratch.ResNeXt101.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layer0", "=", "self", ".", "layer0", "(", "x", ")", "\n", "layer1", "=", "self", ".", "layer1", "(", "layer0", ")", "\n", "layer2", "=", "self", ".", "layer2", "(", "layer1", ")", "\n", "layer3", "=", "self", ".", "layer3", "(", "layer2", ")", "\n", "layer4", "=", "self", ".", "layer4", "(", "layer3", ")", "\n", "return", "layer4", "\n", "", "", ""]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular.ResNeXt101.__init__": [[9, 20], ["torch.nn.Module.__init__", "list.load_state_dict", "list", "torch.nn.Sequential", "torch.nn.Sequential", "torch.load", "list.children"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNeXt101", ",", "self", ")", ".", "__init__", "(", ")", "\n", "net", "=", "resnext_101_32x4d_", ".", "resnext_101_32x4d", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "resnext_101_32_path", ")", ")", "\n", "\n", "net", "=", "list", "(", "net", ".", "children", "(", ")", ")", "\n", "self", ".", "layer0", "=", "nn", ".", "Sequential", "(", "*", "net", "[", ":", "3", "]", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "*", "net", "[", "3", ":", "5", "]", ")", "\n", "self", ".", "layer2", "=", "net", "[", "5", "]", "\n", "self", ".", "layer3", "=", "net", "[", "6", "]", "\n", "self", ".", "layer4", "=", "net", "[", "7", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular.ResNeXt101.forward": [[30, 46], ["resnext101_regular.ResNeXt101.layer0", "resnext101_regular.ResNeXt101.layer1", "resnext101_regular.ResNeXt101.layer2", "resnext101_regular.ResNeXt101.layer3", "resnext101_regular.ResNeXt101.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "output", "=", "{", "}", "\n", "\n", "layer0", "=", "self", ".", "layer0", "(", "x", ")", "\n", "layer1", "=", "self", ".", "layer1", "(", "layer0", ")", "\n", "layer2", "=", "self", ".", "layer2", "(", "layer1", ")", "\n", "layer3", "=", "self", ".", "layer3", "(", "layer2", ")", "\n", "layer4", "=", "self", ".", "layer4", "(", "layer3", ")", "\n", "\n", "output", "[", "'x1'", "]", "=", "layer0", "\n", "output", "[", "'x2'", "]", "=", "layer1", "\n", "output", "[", "'x3'", "]", "=", "layer2", "\n", "output", "[", "'x4'", "]", "=", "layer3", "\n", "output", "[", "'x5'", "]", "=", "layer4", "\n", "\n", "return", "output", "", "", "", ""]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__": [[9, 20], ["torch.nn.Module.__init__", "list.load_state_dict", "list", "torch.nn.Sequential", "torch.nn.Sequential", "torch.load", "list.children"], "methods", ["home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNeXt101", ",", "self", ")", ".", "__init__", "(", ")", "\n", "net", "=", "resnext_101_32x4d_", ".", "resnext_101_32x4d", "\n", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "resnext_101_32_path", ")", ")", "\n", "\n", "net", "=", "list", "(", "net", ".", "children", "(", ")", ")", "\n", "self", ".", "layer0", "=", "nn", ".", "Sequential", "(", "*", "net", "[", ":", "3", "]", ")", "\n", "self", ".", "layer1", "=", "nn", ".", "Sequential", "(", "*", "net", "[", "3", ":", "5", "]", ")", "\n", "self", ".", "layer2", "=", "net", "[", "5", "]", "\n", "self", ".", "layer3", "=", "net", "[", "6", "]", "\n", "self", ".", "layer4", "=", "net", "[", "7", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.vinthony_depth-distillation.resnext.resnext101_regular_sep.ResNeXt101.forward": [[21, 28], ["resnext101_regular_sep.ResNeXt101.layer0", "resnext101_regular_sep.ResNeXt101.layer1", "resnext101_regular_sep.ResNeXt101.layer2", "resnext101_regular_sep.ResNeXt101.layer3", "resnext101_regular_sep.ResNeXt101.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "layer0", "=", "self", ".", "layer0", "(", "x", ")", "\n", "layer1", "=", "self", ".", "layer1", "(", "layer0", ")", "\n", "layer2", "=", "self", ".", "layer2", "(", "layer1", ")", "\n", "layer3", "=", "self", ".", "layer3", "(", "layer2", ")", "\n", "layer4", "=", "self", ".", "layer4", "(", "layer3", ")", "\n", "return", "layer4", "\n", "", "", ""]]}