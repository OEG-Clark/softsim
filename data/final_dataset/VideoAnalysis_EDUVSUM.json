{"home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getOneHotClasses": [[16, 23], ["range", "numpy.array", "len", "numpy.zeros().astype", "oneHot.append", "numpy.zeros", "int"], "function", ["None"], ["def", "getOneHotClasses", "(", "gt", ",", "numClasses", ")", ":", "\n", "    ", "oneHot", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "gt", ")", ")", ":", "\n", "        ", "curr", "=", "np", ".", "zeros", "(", "numClasses", ")", ".", "astype", "(", "int", ")", "\n", "curr", "[", "int", "(", "gt", "[", "i", "]", "-", "1", ")", "]", "=", "1", "\n", "oneHot", ".", "append", "(", "curr", ")", "\n", "", "return", "np", ".", "array", "(", "oneHot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getVisualFeatures": [[24, 33], ["pickle.load", "videoFreatures.reshape.reshape", "numpy.mean", "open"], "function", ["None"], ["", "def", "getVisualFeatures", "(", "dataBase", ",", "visualFeatureTag", ",", "videoName", ",", "rsp", ",", "inShape", ")", ":", "\n", "#    featureDict={}", "\n", "#    featureDict[\"vgg16Features\"]=[7,7,512]", "\n", "#    featureDict[\"inceptionV3Features\"]=[8,8,2048]", "\n", "#    featureDict[\"efficientNetB0Features\"]=[7,7,1280]", "\n", "    ", "videoFreatures", "=", "pickle", ".", "load", "(", "open", "(", "dataBase", "+", "visualFeatureTag", "+", "\"/\"", "+", "videoName", "+", "\"_\"", "+", "visualFeatureTag", "+", "\".p\"", ",", "\"rb\"", ")", ")", "\n", "#    fts1=fts.reshape((videoFreatures.shape[0],featureDict[visualFeatureTag][0],featureDict[visualFeatureTag][1],featureDict[visualFeatureTag][2]))", "\n", "videoFreatures", "=", "videoFreatures", ".", "reshape", "(", "(", "videoFreatures", ".", "shape", "[", "0", "]", ",", "inShape", "[", "1", "]", ",", "rsp", ")", ")", "\n", "return", "np", ".", "mean", "(", "videoFreatures", ",", "axis", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getCombinedTxtFeatures": [[36, 44], ["textFreaturesAll2[].reshape", "range", "len", "textFreaturesAll2[].reshape", "numpy.concatenate", "int"], "function", ["None"], ["", "def", "getCombinedTxtFeatures", "(", "textFreaturesAll2", ")", ":", "\n", "    ", "textFreaturesAll2", "[", "0", "]", "=", "textFreaturesAll2", "[", "0", "]", ".", "reshape", "(", "(", "textFreaturesAll2", "[", "0", "]", ".", "shape", "[", "1", "]", ",", "textFreaturesAll2", "[", "0", "]", ".", "shape", "[", "2", "]", ")", ")", "\n", "stackedAll", "=", "textFreaturesAll2", "[", "0", "]", "#textFreaturesAll2[0][:-int(textFreaturesAll2[0].shape[0]*0.10)]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "textFreaturesAll2", ")", ")", ":", "\n", "        ", "textFreaturesAll2", "[", "i", "]", "=", "textFreaturesAll2", "[", "i", "]", ".", "reshape", "(", "(", "textFreaturesAll2", "[", "i", "]", ".", "shape", "[", "1", "]", ",", "textFreaturesAll2", "[", "i", "]", ".", "shape", "[", "2", "]", ")", ")", "\n", "part", "=", "textFreaturesAll2", "[", "i", "]", "[", "int", "(", "textFreaturesAll2", "[", "i", "]", ".", "shape", "[", "0", "]", "*", "0.10", ")", ":", "]", "#-int(textFreaturesAll2[i].shape[0]*0.10)", "\n", "stackedAll", "=", "np", ".", "concatenate", "(", "[", "stackedAll", ",", "part", "]", ",", "axis", "=", "0", ")", "\n", "", "return", "stackedAll", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getCorreshist": [[45, 48], ["math.floor"], "function", ["None"], ["", "def", "getCorreshist", "(", "hist", ",", "feature", ",", "featureDim", ",", "vidFps", ",", "vidFrs", ")", ":", "\n", "    ", "ttime", "=", "vidFrs", "/", "vidFps", "\n", "return", "math", ".", "floor", "(", "featureDim", "/", "ttime", ")", "\n", "#    if(feature==\"v\"):", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getClassesFromOneHot": [[56, 63], ["range", "len", "yc.append", "yHatc.append", "numpy.array", "numpy.array", "numpy.argmax", "numpy.argmax"], "function", ["None"], ["", "def", "getClassesFromOneHot", "(", "y", ",", "yHat", ")", ":", "\n", "    ", "yc", "=", "[", "]", "\n", "yHatc", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "y", ")", ")", ":", "\n", "        ", "yc", ".", "append", "(", "np", ".", "argmax", "(", "y", "[", "i", "]", ")", ")", "\n", "yHatc", ".", "append", "(", "np", ".", "argmax", "(", "yHat", "[", "i", "]", ")", ")", "\n", "", "return", "np", ".", "array", "(", "yc", ")", ",", "np", ".", "array", "(", "yHatc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getAccuracy": [[64, 74], ["range", "len", "len", "len"], "function", ["None"], ["", "def", "getAccuracy", "(", "y", ",", "yHat", ")", ":", "\n", "    ", "accCnt", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "y", ")", ")", ":", "\n", "        ", "if", "(", "y", "[", "i", "]", "==", "yHat", "[", "i", "]", ")", ":", "\n", "            ", "accCnt", "=", "+", "1", "\n", "", "", "total", "=", "len", "(", "y", ")", "\n", "if", "(", "len", "(", "y", ")", "==", "0", ")", ":", "\n", "        ", "total", "=", "999999999999", "\n", "", "acc", "=", "accCnt", "/", "total", "\n", "return", "acc", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getUniformSampled": [[75, 86], ["numpy.arange", "numpy.random.choice"], "function", ["None"], ["", "def", "getUniformSampled", "(", "visualFeatures", ",", "otherFeatures", ",", "vidFps", ",", "mod", "=", "\"\"", ")", ":", "\n", "    ", "nm", "=", "visualFeatures", ".", "shape", "[", "0", "]", "//", "vidFps", "\n", "anm", "=", "otherFeatures", ".", "shape", "[", "0", "]", "//", "nm", "\n", "asmpr", "=", "anm", "*", "nm", "\n", "if", "(", "mod", "==", "\"a\"", ")", ":", "\n", "        ", "asmpr", "=", "visualFeatures", ".", "shape", "[", "0", "]", "*", "10", "\n", "", "if", "(", "mod", "==", "\"t\"", ")", ":", "\n", "        ", "asmpr", "=", "visualFeatures", ".", "shape", "[", "0", "]", "\n", "", "otherFeaturesArange", "=", "np", ".", "arange", "(", "otherFeatures", ".", "shape", "[", "0", "]", ")", "\n", "otherFeaturesSmp", "=", "otherFeatures", "[", "np", ".", "random", ".", "choice", "(", "otherFeaturesArange", ",", "asmpr", ")", "]", "\n", "return", "otherFeaturesSmp", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getTestResults": [[87, 173], ["range", "len", "pickle.load", "visualFeatures.reshape.reshape", "pickle.load", "canonicalTrainTestMultimod.getOneHotClasses", "pickle.load", "audioFeatures[].reshape", "canonicalTrainTestMultimod.getUniformSampled", "pickle.load", "canonicalTrainTestMultimod.getCombinedTxtFeatures", "canonicalTrainTestMultimod.getUniformSampled", "range", "canonicalTrainTestMultimod.getClassesFromOneHot", "numpy.square().mean", "tMseLs.append", "canonicalTrainTestMultimod.getAccuracy", "accLs.append", "sklearn.metrics.precision_recall_fscore_support", "sklearn.metrics.precision_recall_fscore_support", "sklearn.metrics.precision_recall_fscore_support", "allMetric.append", "yNyhatByVideo.append", "open", "open", "open", "open", "range", "model.predict", "yhatLs.append", "Y.append", "scipy.stats.spearmanr", "scipy.stats.kendalltau", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.square", "numpy.array", "numpy.array", "scipy.stats.rankdata", "scipy.stats.rankdata", "len", "vInput.reshape.reshape", "np.array().reshape.append", "aInput.reshape.reshape", "np.array().reshape.append", "tInput.reshape.reshape", "np.array().reshape.append", "len", "len", "len", "len", "len", "numpy.array", "numpy.array", "numpy.array", "len", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getOneHotClasses", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getUniformSampled", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getCombinedTxtFeatures", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getUniformSampled", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getClassesFromOneHot", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.None.canonicalTrainTestMultimod.getAccuracy"], ["", "def", "getTestResults", "(", "model", ",", "allFilesTvSumTest", ",", "histV", ",", "histA", ",", "histT", ",", "gtbase", ",", "modelName", ",", "params", ")", ":", "\n", "    ", "testMetricsout", "=", "[", "]", "\n", "yNyhatByVideo", "=", "[", "]", "\n", "testMaeLossLs", "=", "[", "]", "\n", "tMseLs", "=", "[", "]", "\n", "accLs", "=", "[", "]", "\n", "prcLs", "=", "[", "]", "\n", "recLs", "=", "[", "]", "\n", "fscoreLs", "=", "[", "]", "\n", "allMetric", "=", "[", "]", "\n", "vidFps", "=", "params", "[", "\"vidFps\"", "]", "\n", "visualIndicator", "=", "params", "[", "\"visualIndicator\"", "]", "\n", "audioIndicator", "=", "params", "[", "\"audioIndicator\"", "]", "\n", "textIndicator", "=", "params", "[", "\"textIndicator\"", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "allFilesTvSumTest", ")", ")", ":", "\n", "#        visualFeatures=getVisualFeatures(dataBase,visualFeatureTag,allFilesTvSumTest[j],rsp,inShape)", "\n", "        ", "visualFeatures", "=", "pickle", ".", "load", "(", "open", "(", "dataBase", "+", "visualFeatureTag", "+", "\"/\"", "+", "allFilesTvSumTest", "[", "j", "]", "+", "\"_\"", "+", "visualFeatureTag", "+", "\".p\"", ",", "\"rb\"", ")", ")", "\n", "visualFeatures", "=", "visualFeatures", ".", "reshape", "(", "(", "visualFeatures", ".", "shape", "[", "0", "]", ",", "visualFeatures", ".", "shape", "[", "2", "]", ")", ")", "\n", "gt", "=", "pickle", ".", "load", "(", "open", "(", "gtbase", "+", "allFilesTvSumTest", "[", "j", "]", "+", "gtpostfix", ",", "\"rb\"", ")", ")", "\n", "gtoH", "=", "getOneHotClasses", "(", "gt", ",", "numClasses", ")", "\n", "audioFeatures", "=", "pickle", ".", "load", "(", "open", "(", "dataBase", "+", "audioFeatureTag", "+", "\"/\"", "+", "allFilesTvSumTest", "[", "j", "]", "+", "\"_0.05_0.025_\"", "+", "audioFeatureTag", "+", "\".p\"", ",", "\"rb\"", ")", ")", "\n", "audioFeatures", "[", "0", "]", "=", "audioFeatures", "[", "0", "]", ".", "reshape", "(", "(", "audioFeatures", "[", "0", "]", ".", "shape", "[", "1", "]", ",", "audioFeatures", "[", "0", "]", ".", "shape", "[", "0", "]", ")", ")", "\n", "audFeatures", "=", "audioFeatures", "[", "0", "]", "\n", "audFeatures", "=", "getUniformSampled", "(", "visualFeatures", ",", "audFeatures", ",", "vidFps", ",", "mod", "=", "\"a\"", ")", "\n", "\n", "textFreaturesAll2", "=", "pickle", ".", "load", "(", "open", "(", "dataBase", "+", "textFeatureTag", "+", "\"/\"", "+", "allFilesTvSumTest", "[", "j", "]", "+", "\"_\"", "+", "textFeatureTag", "+", "\".p\"", ",", "\"rb\"", ")", ")", "\n", "txtFeatures", "=", "getCombinedTxtFeatures", "(", "textFreaturesAll2", ")", "\n", "txtFeatures", "=", "getUniformSampled", "(", "visualFeatures", ",", "txtFeatures", ",", "vidFps", ",", "mod", "=", "\"t\"", ")", "\n", "yhatLs", "=", "[", "]", "\n", "Y", "=", "[", "]", "\n", "maxPoss", "=", "(", "visualFeatures", ".", "shape", "[", "0", "]", "//", "vidFps", ")", "*", "vidFps", "\n", "batch", "=", "1", "\n", "#        maxPoss=(maxPoss//(histV*batch))*(histV*batch)", "\n", "#        yOrg=0", "\n", "for", "h", "in", "range", "(", "histV", ",", "maxPoss", ",", "histV", ")", ":", "\n", "            ", "xtest", "=", "[", "]", "\n", "b", "=", "0", "\n", "vInputbatch", "=", "[", "]", "\n", "aInputbatch", "=", "[", "]", "\n", "tInputbatch", "=", "[", "]", "\n", "for", "b", "in", "range", "(", "batch", ")", ":", "\n", "                ", "if", "(", "h", "+", "b", "-", "1", ">=", "len", "(", "gtoH", ")", ")", ":", "\n", "                    ", "break", "\n", "", "if", "(", "visualIndicator", "in", "modelName", ")", ":", "\n", "                    ", "vInput", "=", "visualFeatures", "[", "h", "+", "b", "-", "histV", ":", "h", "+", "b", "]", "\n", "vInput", "=", "vInput", ".", "reshape", "(", "(", "1", ",", "vInput", ".", "shape", "[", "0", "]", ",", "vInput", ".", "shape", "[", "1", "]", ")", ")", "\n", "vInputbatch", ".", "append", "(", "vInput", ")", "\n", "", "if", "(", "audioIndicator", "in", "modelName", ")", ":", "\n", "                    ", "aInput", "=", "audFeatures", "[", "(", "(", "h", "//", "histV", ")", "*", "histA", ")", "+", "b", "-", "histA", ":", "(", "(", "h", "//", "histV", ")", "*", "histA", ")", "+", "b", "]", "\n", "aInput", "=", "aInput", ".", "reshape", "(", "(", "1", ",", "aInput", ".", "shape", "[", "0", "]", ",", "aInput", ".", "shape", "[", "1", "]", ")", ")", "\n", "aInputbatch", ".", "append", "(", "aInput", ")", "\n", "", "if", "(", "textIndicator", "in", "modelName", ")", ":", "\n", "                    ", "tInput", "=", "txtFeatures", "[", "(", "(", "h", "//", "histV", ")", "*", "histT", ")", "+", "b", "-", "histT", ":", "(", "(", "h", "//", "histV", ")", "*", "histT", ")", "+", "b", "]", "\n", "tInput", "=", "tInput", ".", "reshape", "(", "(", "1", ",", "tInput", ".", "shape", "[", "0", "]", ",", "tInput", ".", "shape", "[", "1", "]", ")", ")", "\n", "tInputbatch", ".", "append", "(", "tInput", ")", "\n", "", "", "if", "(", "len", "(", "vInputbatch", ")", "==", "0", "and", "len", "(", "aInputbatch", ")", "==", "0", "and", "len", "(", "tInputbatch", ")", "==", "0", ")", ":", "\n", "                ", "break", "\n", "", "if", "(", "visualIndicator", "in", "modelName", ")", ":", "\n", "                ", "vInputbatch", "=", "np", ".", "array", "(", "vInputbatch", ")", ".", "reshape", "(", "(", "batch", ",", "vInput", ".", "shape", "[", "1", "]", ",", "vInput", ".", "shape", "[", "2", "]", ")", ")", "\n", "", "if", "(", "audioIndicator", "in", "modelName", ")", ":", "\n", "                ", "aInputbatch", "=", "np", ".", "array", "(", "aInputbatch", ")", ".", "reshape", "(", "(", "batch", ",", "aInput", ".", "shape", "[", "1", "]", ",", "aInput", ".", "shape", "[", "2", "]", ")", ")", "\n", "", "if", "(", "textIndicator", "in", "modelName", ")", ":", "\n", "                ", "tInputbatch", "=", "np", ".", "array", "(", "tInputbatch", ")", ".", "reshape", "(", "(", "batch", ",", "tInput", ".", "shape", "[", "1", "]", ",", "tInput", ".", "shape", "[", "2", "]", ")", ")", "\n", "", "allInputs", "=", "[", "vInputbatch", ",", "aInputbatch", ",", "tInputbatch", "]", "\n", "xtest", "=", "[", "x", "for", "x", "in", "allInputs", "if", "len", "(", "x", ")", ">", "0", "]", "\n", "if", "(", "h", "+", "b", "-", "1", ">=", "len", "(", "gtoH", ")", "or", "len", "(", "xtest", ")", "==", "0", ")", ":", "\n", "                ", "break", "\n", "", "yOrg", "=", "gtoH", "[", "h", "+", "b", "-", "1", "]", "\n", "yhat", "=", "model", ".", "predict", "(", "xtest", ")", "\n", "yhatLs", ".", "append", "(", "yhat", "[", "0", "]", ")", "\n", "\n", "Y", ".", "append", "(", "yOrg", ")", "\n", "#    print(\"test: \",j,\" name: \",allFilesTvSumTest[j])", "\n", "", "y_true", ",", "y_pred", "=", "getClassesFromOneHot", "(", "Y", ",", "yhatLs", ")", "\n", "tMse", "=", "(", "np", ".", "square", "(", "np", ".", "array", "(", "y_true", ")", "-", "np", ".", "array", "(", "y_pred", ")", ")", ")", ".", "mean", "(", "axis", "=", "0", ")", "\n", "tMseLs", ".", "append", "(", "tMse", ")", "\n", "acc", "=", "getAccuracy", "(", "y_true", ",", "y_pred", ")", "\n", "accLs", ".", "append", "(", "acc", ")", "\n", "macRes", "=", "precision_recall_fscore_support", "(", "y_true", ",", "y_pred", ",", "average", "=", "'macro'", ")", "\n", "micRes", "=", "precision_recall_fscore_support", "(", "y_true", ",", "y_pred", ",", "average", "=", "'micro'", ")", "\n", "wRes", "=", "precision_recall_fscore_support", "(", "y_true", ",", "y_pred", ",", "average", "=", "'weighted'", ")", "\n", "pS", "=", "spearmanr", "(", "np", ".", "array", "(", "y_true", ")", ",", "np", ".", "array", "(", "y_pred", ")", ")", "[", "0", "]", "\n", "kT", "=", "kendalltau", "(", "rankdata", "(", "-", "np", ".", "array", "(", "y_true", ")", ")", ",", "rankdata", "(", "-", "np", ".", "array", "(", "y_pred", ")", ")", ")", "[", "0", "]", "\n", "allMetric", ".", "append", "(", "[", "tMse", ",", "acc", ",", "macRes", "[", "0", "]", ",", "macRes", "[", "1", "]", ",", "macRes", "[", "2", "]", ",", "micRes", "[", "0", "]", ",", "micRes", "[", "1", "]", ",", "micRes", "[", "2", "]", ",", "wRes", "[", "0", "]", ",", "wRes", "[", "1", "]", ",", "wRes", "[", "2", "]", ",", "kT", ",", "pS", "]", ")", "\n", "yNyhatByVideo", ".", "append", "(", "[", "allFilesTvSumTest", "[", "j", "]", ",", "Y", ",", "yhatLs", "]", ")", "\n", "", "return", "allMetric", ",", "yNyhatByVideo", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getModel": [[19, 28], ["models.getLstmMultiModelTriFusion2", "models.getLstmMultiModelBiTriFusion", "models.getLstmMultiModelTriFusion2reg"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLstmMultiModelTriFusion2", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLstmMultiModelBiTriFusion", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLstmMultiModelTriFusion2reg"], ["def", "getModel", "(", "params", ",", "modelName", ",", "inputShapeV", ",", "inputShapeT", ",", "inputShapeA", ",", "opt", ",", "actf", ",", "acth", ",", "classes", ")", ":", "\n", "#    if(modelName == \"triFusion_v_a_t\"):", "\n", "    ", "if", "(", "\"triFusion\"", "in", "modelName", ")", ":", "\n", "        ", "return", "getLstmMultiModelTriFusion2", "(", "params", ",", "modelName", ",", "inputShapeV", ",", "inputShapeT", ",", "inputShapeA", ",", "opt", ",", "actf", ",", "acth", ",", "classes", ")", "\n", "", "elif", "(", "\"triRegFusion\"", "in", "modelName", ")", ":", "\n", "        ", "return", "getLstmMultiModelTriFusion2reg", "(", "params", ",", "modelName", ",", "inputShapeV", ",", "inputShapeT", ",", "inputShapeA", ",", "opt", ",", "actf", ",", "acth", ",", "classes", ")", "\n", "#        return getLstmMultiModelTriFusion_v_a_t(params,modelName,inputShapeV,inputShapeT,inputShapeA,opt,actf,acth,classes)", "\n", "", "if", "(", "modelName", "==", "\"biTriFusion\"", ")", ":", "\n", "        ", "return", "getLstmMultiModelBiTriFusion", "(", "params", ",", "modelName", ",", "inputShapeV", ",", "inputShapeT", ",", "inputShapeA", ",", "opt", ",", "actf", ",", "acth", ",", "classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLstmMultiModelTriFusion_v_a_t": [[30, 50], ["print", "keras.layers.Input", "keras.layers.Input", "keras.layers.Input", "keras.layers.concatenate", "keras.models.Model", "keras.models.Model.compile", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM"], "function", ["None"], ["", "", "def", "getLstmMultiModelTriFusion_v_a_t", "(", "params", ",", "modelName", ",", "inputShapeV", ",", "inputShapeT", ",", "inputShapeA", ",", "opt", ",", "actf", ",", "acth", ",", "classes", ")", ":", "\n", "    ", "print", "(", "'Build model...'", ")", "\n", "lstmLayers", "=", "[", "64", ",", "64", "]", "\n", "denseLayers", "=", "[", "32", ",", "16", ",", "classes", "]", "\n", "inputV", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeV", "[", "0", "]", ",", "inputShapeV", "[", "1", "]", ")", ")", "\n", "inputA", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeA", "[", "0", "]", ",", "inputShapeA", "[", "1", "]", ")", ")", "\n", "inputT", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeT", "[", "0", "]", ",", "inputShapeT", "[", "1", "]", ")", ")", "\n", "lstmT", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputT", ")", "#,return_sequences=True", "\n", "lstmA", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputA", ")", "\n", "lstmV", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputV", ")", "\n", "lstOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmT", ",", "lstmA", ",", "lstmV", "]", ",", "axis", "=", "1", ")", "\n", "lstmTAV", "=", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", "(", "lstOutTAV", ")", "# another variation to apply bidirectional after fusion as well", "\n", "d1", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "0", "]", ",", "activation", "=", "acth", ")", "(", "lstmTAV", ")", "\n", "d2", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "1", "]", ",", "activation", "=", "acth", ")", "(", "d1", ")", "\n", "#    out = keras.layers.Dense(denseLayers[2], activation=actf)(d2)", "\n", "out", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "2", "]", ",", "activation", "=", "actf", ")", "(", "d2", ")", "\n", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputV", ",", "inputA", ",", "inputT", "]", ",", "outputs", "=", "out", ")", "\n", "#    model.compile(loss='mean_squared_error',optimizer=opt,metrics=['mse'])", "\n", "model", ".", "compile", "(", "loss", "=", "'categorical_crossentropy'", ",", "optimizer", "=", "opt", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "#categorical_crossentropy #mean_squared_error #accuracy #mse", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLstmMultiModelTriFusion2": [[51, 88], ["print", "keras.layers.Input", "keras.layers.Input", "keras.layers.Input", "keras.layers.concatenate", "keras.models.Model", "keras.models.Model.compile", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.concatenate", "keras.layers.Bidirectional", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.models.Model", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.concatenate", "keras.layers.LSTM", "keras.models.Model", "keras.layers.concatenate", "keras.models.Model"], "function", ["None"], ["", "def", "getLstmMultiModelTriFusion2", "(", "params", ",", "modelName", ",", "inputShapeV", ",", "inputShapeT", ",", "inputShapeA", ",", "opt", ",", "actf", ",", "acth", ",", "classes", ")", ":", "\n", "    ", "print", "(", "'Build model...'", ")", "\n", "visualIndicator", "=", "params", "[", "\"visualIndicator\"", "]", "\n", "audioIndicator", "=", "params", "[", "\"audioIndicator\"", "]", "\n", "textIndicator", "=", "params", "[", "\"textIndicator\"", "]", "\n", "lstmLayers", "=", "[", "64", ",", "64", "]", "\n", "denseLayers", "=", "[", "32", ",", "16", ",", "classes", "]", "\n", "inputV", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeV", "[", "0", "]", ",", "inputShapeV", "[", "1", "]", ")", ")", "\n", "inputA", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeA", "[", "0", "]", ",", "inputShapeA", "[", "1", "]", ")", ")", "\n", "inputT", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeT", "[", "0", "]", ",", "inputShapeT", "[", "1", "]", ")", ")", "\n", "lstmT", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputT", ")", "#,return_sequences=True", "\n", "lstmA", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputA", ")", "\n", "lstmV", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputV", ")", "\n", "lstOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmV", ",", "lstmA", ",", "lstmT", "]", ",", "axis", "=", "1", ")", "\n", "if", "(", "not", "visualIndicator", "in", "modelName", ")", ":", "\n", "        ", "lstOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmA", ",", "lstmT", "]", ",", "axis", "=", "1", ")", "\n", "", "elif", "(", "not", "audioIndicator", "in", "modelName", ")", ":", "\n", "        ", "lstOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmV", ",", "lstmT", "]", ",", "axis", "=", "1", ")", "\n", "", "elif", "(", "not", "textIndicator", "in", "modelName", ")", ":", "\n", "        ", "lstOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmV", ",", "lstmA", "]", ",", "axis", "=", "1", ")", "\n", "#    else:", "\n", "\n", "", "lstmTAV", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "lstOutTAV", ")", "\n", "d1", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "0", "]", ",", "activation", "=", "acth", ")", "(", "lstmTAV", ")", "\n", "d2", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "1", "]", ",", "activation", "=", "acth", ")", "(", "d1", ")", "\n", "#    out = keras.layers.Dense(denseLayers[2], activation=actf)(d2)", "\n", "out", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "2", "]", ",", "activation", "=", "actf", ")", "(", "d2", ")", "\n", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputV", ",", "inputA", ",", "inputT", "]", ",", "outputs", "=", "out", ")", "\n", "if", "(", "not", "visualIndicator", "in", "modelName", ")", ":", "\n", "        ", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputA", ",", "inputT", "]", ",", "outputs", "=", "out", ")", "\n", "", "elif", "(", "not", "audioIndicator", "in", "modelName", ")", ":", "\n", "        ", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputV", ",", "inputT", "]", ",", "outputs", "=", "out", ")", "\n", "", "elif", "(", "not", "textIndicator", "in", "modelName", ")", ":", "\n", "        ", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputV", ",", "inputA", "]", ",", "outputs", "=", "out", ")", "\n", "#    model.compile(loss='mean_squared_error',optimizer=opt,metrics=['mse'])", "\n", "", "model", ".", "compile", "(", "loss", "=", "'categorical_crossentropy'", ",", "optimizer", "=", "opt", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "#categorical_crossentropy #mean_squared_error #accuracy #mse", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLstmMultiModelTriFusion2reg": [[89, 126], ["print", "keras.layers.Input", "keras.layers.Input", "keras.layers.Input", "keras.layers.concatenate", "keras.models.Model", "keras.models.Model.compile", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.concatenate", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.models.Model", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.concatenate", "keras.models.Model", "keras.layers.concatenate", "keras.models.Model"], "function", ["None"], ["", "def", "getLstmMultiModelTriFusion2reg", "(", "params", ",", "modelName", ",", "inputShapeV", ",", "inputShapeT", ",", "inputShapeA", ",", "opt", ",", "actf", ",", "acth", ",", "classes", ")", ":", "\n", "    ", "print", "(", "'Build model...'", ")", "\n", "visualIndicator", "=", "params", "[", "\"visualIndicator\"", "]", "\n", "audioIndicator", "=", "params", "[", "\"audioIndicator\"", "]", "\n", "textIndicator", "=", "params", "[", "\"textIndicator\"", "]", "\n", "lstmLayers", "=", "[", "64", ",", "64", "]", "\n", "denseLayers", "=", "[", "32", ",", "16", ",", "1", "]", "# here no classes concppt", "\n", "inputV", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeV", "[", "0", "]", ",", "inputShapeV", "[", "1", "]", ")", ")", "\n", "inputA", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeA", "[", "0", "]", ",", "inputShapeA", "[", "1", "]", ")", ")", "\n", "inputT", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeT", "[", "0", "]", ",", "inputShapeT", "[", "1", "]", ")", ")", "\n", "lstmT", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputT", ")", "#,return_sequences=True", "\n", "lstmA", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputA", ")", "\n", "lstmV", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputV", ")", "\n", "lstOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmV", ",", "lstmA", ",", "lstmT", "]", ",", "axis", "=", "1", ")", "\n", "if", "(", "not", "visualIndicator", "in", "modelName", ")", ":", "\n", "        ", "lstOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmA", ",", "lstmT", "]", ",", "axis", "=", "1", ")", "\n", "", "elif", "(", "not", "audioIndicator", "in", "modelName", ")", ":", "\n", "        ", "lstOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmV", ",", "lstmT", "]", ",", "axis", "=", "1", ")", "\n", "", "elif", "(", "not", "textIndicator", "in", "modelName", ")", ":", "\n", "        ", "lstOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmV", ",", "lstmA", "]", ",", "axis", "=", "1", ")", "\n", "#    else:", "\n", "\n", "", "lstmTAV", "=", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", "(", "lstOutTAV", ")", "\n", "d1", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "0", "]", ",", "activation", "=", "acth", ")", "(", "lstmTAV", ")", "\n", "d2", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "1", "]", ",", "activation", "=", "acth", ")", "(", "d1", ")", "\n", "#    out = keras.layers.Dense(denseLayers[2], activation=actf)(d2)", "\n", "out", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "2", "]", ",", "activation", "=", "actf", ")", "(", "d2", ")", "\n", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputV", ",", "inputA", ",", "inputT", "]", ",", "outputs", "=", "out", ")", "\n", "if", "(", "not", "visualIndicator", "in", "modelName", ")", ":", "\n", "        ", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputA", ",", "inputT", "]", ",", "outputs", "=", "out", ")", "\n", "", "elif", "(", "not", "audioIndicator", "in", "modelName", ")", ":", "\n", "        ", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputV", ",", "inputT", "]", ",", "outputs", "=", "out", ")", "\n", "", "elif", "(", "not", "textIndicator", "in", "modelName", ")", ":", "\n", "        ", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputV", ",", "inputA", "]", ",", "outputs", "=", "out", ")", "\n", "#    model.compile(loss='mean_squared_error',optimizer=opt,metrics=['mse'])", "\n", "", "model", ".", "compile", "(", "loss", "=", "'mean_squared_error'", ",", "optimizer", "=", "opt", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "#categorical_crossentropy #mean_squared_error #accuracy #mse", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLstmMultiModelTriFusion": [[128, 163], ["print", "keras.layers.concatenate", "keras.models.Model", "keras.models.Model.compile", "keras.layers.Input", "keras.layers.Input", "keras.layers.Input", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM"], "function", ["None"], ["", "def", "getLstmMultiModelTriFusion", "(", "params", ",", "modelName", ",", "inputShapeV", ",", "inputShapeT", ",", "inputShapeA", ",", "opt", ",", "actf", ",", "acth", ",", "classes", ")", ":", "\n", "    ", "print", "(", "'Build model...'", ")", "\n", "visualIndicator", "=", "params", "[", "\"visualIndicator\"", "]", "\n", "audioIndicator", "=", "params", "[", "\"audioIndicator\"", "]", "\n", "textIndicator", "=", "params", "[", "\"textIndicator\"", "]", "\n", "lstmLayers", "=", "[", "64", ",", "64", "]", "\n", "denseLayers", "=", "[", "32", ",", "16", ",", "classes", "]", "\n", "inputV", "=", "0", "\n", "inputA", "=", "0", "\n", "inputT", "=", "0", "\n", "lstmV", "=", "0", "\n", "lstmA", "=", "0", "\n", "lstmT", "=", "0", "\n", "if", "(", "visualIndicator", "in", "modelName", ")", ":", "\n", "        ", "inputV", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeV", "[", "0", "]", ",", "inputShapeV", "[", "1", "]", ")", ")", "\n", "lstmV", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputV", ")", "\n", "", "if", "(", "audioIndicator", "in", "modelName", ")", ":", "\n", "        ", "inputA", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeA", "[", "0", "]", ",", "inputShapeA", "[", "1", "]", ")", ")", "\n", "lstmA", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputA", ")", "\n", "", "if", "(", "textIndicator", "in", "modelName", ")", ":", "\n", "        ", "inputT", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeT", "[", "0", "]", ",", "inputShapeT", "[", "1", "]", ")", ")", "\n", "lstmT", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputT", ")", "#,return_sequences=True", "\n", "\n", "", "inputToConcat", "=", "[", "x", "for", "x", "in", "[", "lstmT", ",", "lstmA", ",", "lstmV", "]", "if", "x", "!=", "0", "]", "#[lstmT,lstmA,lstmV]", "\n", "concatInputs", "=", "keras", ".", "layers", ".", "concatenate", "(", "inputToConcat", ",", "axis", "=", "1", ")", "\n", "lstmInputs", "=", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", "(", "concatInputs", ")", "\n", "d1", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "0", "]", ",", "activation", "=", "acth", ")", "(", "lstmInputs", ")", "\n", "d2", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "1", "]", ",", "activation", "=", "acth", ")", "(", "d1", ")", "\n", "#    out = keras.layers.Dense(denseLayers[2], activation=actf)(d2)", "\n", "out", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "2", "]", ",", "activation", "=", "actf", ")", "(", "d2", ")", "\n", "inputToModel", "=", "[", "x", "for", "x", "in", "[", "inputV", ",", "inputA", ",", "inputT", "]", "if", "x", "!=", "0", "]", "#[inputV,inputA,inputT]", "\n", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "inputToModel", ",", "outputs", "=", "out", ")", "\n", "#    model.compile(loss='mean_squared_error',optimizer=opt,metrics=['mse'])", "\n", "model", ".", "compile", "(", "loss", "=", "'categorical_crossentropy'", ",", "optimizer", "=", "opt", ",", "metrics", "=", "[", "'accuracy'", "]", ")", "#categorical_crossentropy #mean_squared_error #accuracy #mse", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLstmMultiModelBiTriFusion": [[187, 210], ["print", "keras.layers.Input", "keras.layers.Input", "keras.layers.Input", "keras.layers.concatenate", "keras.layers.concatenate", "keras.layers.concatenate", "keras.layers.concatenate", "keras.models.Model", "keras.models.Model.compile", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.LSTM"], "function", ["None"], ["", "def", "getLstmMultiModelBiTriFusion", "(", "params", ",", "inputShapeV", ",", "inputShapeT", ",", "inputShapeA", ",", "opt", ",", "actf", ",", "acth", ")", ":", "\n", "    ", "print", "(", "'Build model...'", ")", "\n", "lstmLayers", "=", "[", "64", ",", "64", "]", "\n", "denseLayers", "=", "[", "32", ",", "16", ",", "1", "]", "\n", "inputV", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeV", "[", "0", "]", ",", "inputShapeV", "[", "1", "]", ")", ")", "\n", "inputA", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeA", "[", "0", "]", ",", "inputShapeA", "[", "1", "]", ")", ")", "\n", "inputT", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShapeT", "[", "0", "]", ",", "inputShapeT", "[", "1", "]", ")", ")", "\n", "lstmT", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputT", ")", "#,return_sequences=True", "\n", "lstmA", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputA", ")", "\n", "lstmV", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "inputV", ")", "\n", "lstmOutTA", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmT", ",", "lstmA", "]", ",", "axis", "=", "-", "1", ")", "\n", "lstmOutTV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmT", ",", "lstmV", "]", ",", "axis", "=", "-", "1", ")", "\n", "lstmOutAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmA", ",", "lstmV", "]", ",", "axis", "=", "-", "1", ")", "\n", "lstmTA", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "lstmOutTA", ")", "\n", "lstmTV", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "lstmOutTV", ")", "\n", "lstmAV", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "lstmOutAV", ")", "\n", "lstmOutTAV", "=", "keras", ".", "layers", ".", "concatenate", "(", "[", "lstmTA", ",", "lstmTV", ",", "lstmAV", "]", ",", "axis", "=", "-", "1", ")", "\n", "d1", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "0", "]", ",", "activation", "=", "acth", ")", "(", "lstmOutTAV", ")", "\n", "d2", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "1", "]", ",", "activation", "=", "acth", ")", "(", "d1", ")", "\n", "out", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "2", "]", ",", "activation", "=", "actf", ")", "(", "d2", ")", "\n", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "inputV", ",", "inputA", ",", "inputT", "]", ",", "outputs", "=", "out", ")", "\n", "model", ".", "compile", "(", "loss", "=", "'mean_squared_error'", ",", "optimizer", "=", "opt", ",", "metrics", "=", "[", "'mae'", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLSTMmodel": [[212, 225], ["print", "keras.layers.Input", "keras.models.Model", "keras.models.Model.compile", "keras.layers.LSTM", "keras.layers.LSTM", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense"], "function", ["None"], ["", "def", "getLSTMmodel", "(", "inputShape", ",", "optimizerName", ",", "activationName", ")", ":", "\n", "    ", "print", "(", "'Build model...'", ")", "\n", "lstmLayers", "=", "[", "64", ",", "64", "]", "\n", "denseLayers", "=", "[", "32", ",", "16", ",", "1", "]", "\n", "input1", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShape", "[", "0", "]", ",", "inputShape", "[", "1", "]", ")", ")", "\n", "ls1", "=", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", "(", "input1", ")", "\n", "ls2", "=", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", "(", "ls1", ")", "\n", "d1", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "0", "]", ",", "activation", "=", "activationName", ")", "(", "ls2", ")", "\n", "d2", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "1", "]", ",", "activation", "=", "activationName", ")", "(", "d1", ")", "\n", "out", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "2", "]", ",", "activation", "=", "activationName", ")", "(", "d2", ")", "\n", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "input1", "]", ",", "outputs", "=", "out", ")", "\n", "model", ".", "compile", "(", "loss", "=", "'mean_squared_error'", ",", "optimizer", "=", "optimizerName", ",", "metrics", "=", "[", "'mae'", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getBiLSTMmodel": [[227, 240], ["print", "keras.layers.Input", "keras.models.Model", "keras.models.Model.compile", "keras.layers.Bidirectional", "keras.layers.Bidirectional", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.LSTM", "keras.layers.LSTM"], "function", ["None"], ["", "def", "getBiLSTMmodel", "(", "inputShape", ",", "optimizerName", ",", "activationName", ")", ":", "\n", "    ", "print", "(", "'Build model...'", ")", "\n", "lstmLayers", "=", "[", "64", ",", "64", "]", "\n", "denseLayers", "=", "[", "32", ",", "16", ",", "1", "]", "\n", "input1", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "(", "inputShape", "[", "0", "]", ",", "inputShape", "[", "1", "]", ")", ")", "\n", "ls1", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "return_sequences", "=", "True", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "input1", ")", "\n", "ls2", "=", "Bidirectional", "(", "keras", ".", "layers", ".", "LSTM", "(", "lstmLayers", "[", "0", "]", ",", "dropout", "=", "0.2", ",", "recurrent_dropout", "=", "0.2", ")", ")", "(", "ls1", ")", "\n", "d1", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "0", "]", ",", "activation", "=", "activationName", ")", "(", "ls2", ")", "\n", "d2", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "1", "]", ",", "activation", "=", "activationName", ")", "(", "d1", ")", "\n", "out", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "2", "]", ")", "(", "d2", ")", "\n", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "input1", "]", ",", "outputs", "=", "out", ")", "\n", "model", ".", "compile", "(", "loss", "=", "'mean_squared_error'", ",", "optimizer", "=", "optimizerName", ",", "metrics", "=", "[", "'mae'", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getMLPmodel": [[241, 258], ["print", "keras.models.Sequential", "keras.models.Sequential.compile", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense"], "function", ["None"], ["", "def", "getMLPmodel", "(", "inShape", ",", "opt", ",", "actf", ")", ":", "\n", "    ", "print", "(", "'Build model...'", ")", "\n", "denseLayers", "=", "[", "64", ",", "64", ",", "32", ",", "16", ",", "1", "]", "\n", "model", "=", "Sequential", "(", "[", "\n", "Dense", "(", "denseLayers", "[", "0", "]", ",", "activation", "=", "actf", ",", "input_shape", "=", "(", "inShape", "[", "0", "]", "*", "inShape", "[", "1", "]", ",", ")", ")", ",", "\n", "Dense", "(", "denseLayers", "[", "1", "]", ",", "activation", "=", "actf", ")", ",", "\n", "Dense", "(", "denseLayers", "[", "2", "]", ",", "activation", "=", "actf", ")", ",", "\n", "Dense", "(", "denseLayers", "[", "3", "]", ",", "activation", "=", "actf", ")", ",", "\n", "Dense", "(", "denseLayers", "[", "4", "]", ",", "activation", "=", "actf", ")", ",", "\n", "]", ")", "\n", "\n", "model", ".", "compile", "(", "\n", "optimizer", "=", "opt", ",", "\n", "loss", "=", "'mean_squared_error'", ",", "\n", "metrics", "=", "[", "'mse'", "]", ",", "\n", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.models.getLstmModelConvLstmWoPool": [[259, 280], ["print", "keras.layers.Input", "keras.models.Model", "keras.models.Model.compile", "keras.layers.convolutional_recurrent.ConvLSTM2D", "keras.layers.normalization.BatchNormalization", "keras.layers.convolutional_recurrent.ConvLSTM2D", "keras.layers.normalization.BatchNormalization", "keras.layers.Flatten", "keras.layers.Dense", "keras.layers.Dense", "keras.layers.Dense"], "function", ["None"], ["", "def", "getLstmModelConvLstmWoPool", "(", "inputShape", ",", "optimizerName", ",", "activationName", ")", ":", "\n", "    ", "print", "(", "'Build model...'", ")", "\n", "filters", "=", "[", "40", ",", "40", "]", "\n", "denseLayers", "=", "[", "32", ",", "16", ",", "1", "]", "\n", "input1", "=", "keras", ".", "layers", ".", "Input", "(", "shape", "=", "inputShape", ")", "\n", "ls1", "=", "ConvLSTM2D", "(", "filters", "=", "filters", "[", "0", "]", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "input_shape", "=", "inputShape", ",", "#(None, 40, 40, 1)", "\n", "padding", "=", "'same'", ",", "return_sequences", "=", "True", ")", "(", "input1", ")", "\n", "bn1", "=", "BatchNormalization", "(", ")", "(", "ls1", ")", "\n", "\n", "ls2", "=", "ConvLSTM2D", "(", "filters", "=", "filters", "[", "1", "]", ",", "kernel_size", "=", "(", "3", ",", "3", ")", ",", "\n", "padding", "=", "'same'", ")", "(", "bn1", ")", "\n", "bn2", "=", "BatchNormalization", "(", ")", "(", "ls2", ")", "\n", "\n", "flat_layer", "=", "keras", ".", "layers", ".", "Flatten", "(", ")", "(", "bn2", ")", "\n", "d1", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "0", "]", ",", "activation", "=", "activationName", ")", "(", "flat_layer", ")", "\n", "d2", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "1", "]", ",", "activation", "=", "activationName", ")", "(", "d1", ")", "\n", "out", "=", "keras", ".", "layers", ".", "Dense", "(", "denseLayers", "[", "2", "]", ")", "(", "d2", ")", "\n", "model", "=", "keras", ".", "models", ".", "Model", "(", "inputs", "=", "[", "input1", "]", ",", "outputs", "=", "out", ")", "\n", "model", ".", "compile", "(", "loss", "=", "'mean_squared_error'", ",", "optimizer", "=", "optimizerName", ",", "metrics", "=", "[", "'mse'", "]", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateVisualFeatures.getVidFramesAndFpsDur": [[16, 22], ["moviepy.editor.VideoFileClip", "list", "moviepy.editor.VideoFileClip.iter_frames"], "function", ["None"], ["def", "getVidFramesAndFpsDur", "(", "vidName", ")", ":", "\n", "    ", "video_clip", "=", "VideoFileClip", "(", "vidName", ")", "\n", "frmAll", "=", "list", "(", "video_clip", ".", "iter_frames", "(", "with_times", "=", "False", ")", ")", "\n", "frmAll", ",", "fps", ",", "duration", "=", "frmAll", ",", "video_clip", ".", "fps", ",", "video_clip", ".", "duration", "\n", "del", "video_clip", "\n", "return", "frmAll", ",", "fps", ",", "duration", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateVisualFeatures.getVisualFeatures": [[23, 42], ["generateVisualFeatures.getVidFramesAndFpsDur", "int", "int", "range", "range", "numpy.array", "int", "numpy.sort", "len", "cv2.resize", "torch.Tensor", "visualModel.extract_features", "visualModel.extract_features.detach().numpy", "featuresArr.reshape.reshape", "np.array.append", "numpy.random.choice", "sampledFrames.append", "cv2.resize.reshape", "numpy.arange", "visualModel.extract_features.detach"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidFramesAndFpsDur"], ["", "def", "getVisualFeatures", "(", "vid", ",", "visualModel", ",", "sampleRate", ")", ":", "\n", "    ", "frmAll", ",", "fps", ",", "duration", "=", "getVidFramesAndFpsDur", "(", "vid", ")", "\n", "fps", "=", "int", "(", "fps", ")", "\n", "sampledFrames", "=", "[", "]", "\n", "nSamples", "=", "int", "(", "fps", "*", ".10", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "duration", ")", ")", ":", "\n", "            ", "smpl", "=", "np", ".", "sort", "(", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "fps", ")", ",", "nSamples", ",", "replace", "=", "False", ")", ")", "\n", "for", "idx", "in", "smpl", ":", "\n", "                ", "sampledFrames", ".", "append", "(", "frmAll", "[", "i", "*", "fps", ":", "(", "i", "+", "1", ")", "*", "fps", "]", "[", "idx", "]", ")", "\n", "", "", "featuresArrMain", "=", "[", "]", "\n", "for", "f", "in", "range", "(", "len", "(", "sampledFrames", ")", ")", ":", "\n", "        ", "frmRz", "=", "cv2", ".", "resize", "(", "sampledFrames", "[", "f", "]", ",", "(", "224", ",", "224", ")", ")", "\n", "frmRzPyTensor", "=", "torch", ".", "Tensor", "(", "frmRz", ".", "reshape", "(", "[", "1", ",", "3", ",", "224", ",", "224", "]", ")", ")", "\n", "features", "=", "visualModel", ".", "extract_features", "(", "frmRzPyTensor", ")", "\n", "featuresArr", "=", "features", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "featuresArr", "=", "featuresArr", ".", "reshape", "(", "(", "1280", ",", "7", ",", "7", ")", ")", "\n", "featuresArrMain", ".", "append", "(", "featuresArr", ")", "\n", "", "featuresArrMain", "=", "np", ".", "array", "(", "featuresArrMain", ")", "\n", "return", "featuresArrMain", ",", "fps", ",", "duration", ",", "nSamples", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateVisualFeatures.getVisualFramesResizeSample": [[43, 58], ["generateVisualFeatures.getVidFramesAndFpsDur", "int", "int", "range", "range", "numpy.array", "int", "numpy.sort", "len", "cv2.resize", "np.array.append", "numpy.random.choice", "sampledFrames.append", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidFramesAndFpsDur"], ["", "def", "getVisualFramesResizeSample", "(", "vid", ",", "sampleRate", ",", "frameSize", "=", "(", "224", ",", "224", ")", ")", ":", "\n", "    ", "frmAll", ",", "fps", ",", "duration", "=", "getVidFramesAndFpsDur", "(", "vid", ")", "\n", "fps", "=", "int", "(", "fps", ")", "\n", "sampledFrames", "=", "[", "]", "\n", "nSamples", "=", "int", "(", "fps", "*", ".10", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "duration", ")", ")", ":", "\n", "            ", "smpl", "=", "np", ".", "sort", "(", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "fps", ")", ",", "nSamples", ",", "replace", "=", "False", ")", ")", "\n", "for", "idx", "in", "smpl", ":", "\n", "                ", "sampledFrames", ".", "append", "(", "frmAll", "[", "i", "*", "fps", ":", "(", "i", "+", "1", ")", "*", "fps", "]", "[", "idx", "]", ")", "\n", "", "", "framesMain", "=", "[", "]", "\n", "for", "f", "in", "range", "(", "len", "(", "sampledFrames", ")", ")", ":", "\n", "        ", "frmRz", "=", "cv2", ".", "resize", "(", "sampledFrames", "[", "f", "]", ",", "frameSize", ")", "\n", "framesMain", ".", "append", "(", "frmRz", ")", "\n", "", "framesMain", "=", "np", ".", "array", "(", "framesMain", ")", "\n", "return", "framesMain", ",", "fps", ",", "duration", ",", "nSamples", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateVisualFeatures.getAvgGt": [[60, 69], ["range", "numpy.array", "allUserArr.astype.astype", "allUserArr.astype.mean", "len", "allUserArr.astype.append", "subGt.iloc[].split"], "function", ["None"], ["", "def", "getAvgGt", "(", "gtDf", ",", "vidName", ")", ":", "\n", "    ", "subGt", "=", "gtDf", ".", "loc", "[", "vidName", "]", "\n", "allUserArr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "subGt", ")", ")", ":", "\n", "        ", "allUserArr", ".", "append", "(", "subGt", ".", "iloc", "[", "i", ",", "-", "1", "]", ".", "split", "(", "\",\"", ")", ")", "\n", "", "allUserArr", "=", "np", ".", "array", "(", "allUserArr", ")", "\n", "allUserArr", "=", "allUserArr", ".", "astype", "(", "int", ")", "\n", "meanGt", "=", "allUserArr", ".", "mean", "(", "axis", "=", "0", ")", "\n", "return", "meanGt", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateVisualFeatures.writeVisualFeaturesAlongGtForTvSum": [[72, 108], ["pandas.read_csv", "glob.glob", "range", "len", "generateVisualFeatures.getAvgGt", "generateVisualFeatures.getVidFramesAndFpsDur", "int", "int", "range", "range", "numpy.array", "numpy.array", "numpy.array", "pickle.dump", "pickle.dump", "pickle.dump", "print", "print", "[].split", "int", "numpy.sort", "len", "cv2.resize", "torch.Tensor", "model.extract_features", "model.extract_features.detach().numpy", "featuresArr.reshape.reshape", "np.array.append", "np.array.append", "print", "open", "open", "open", "numpy.random.choice", "sampledFrames.append", "np.array.append", "cv2.resize.reshape", "numpy.arange", "model.extract_features.detach", "vid.split", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getAvgGt", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidFramesAndFpsDur"], ["", "def", "writeVisualFeaturesAlongGtForTvSum", "(", "groundTruth", ",", "basedir", ",", "baseOut", ",", "model", ",", "sampleRate", "=", "0.10", ")", ":", "\n", "    ", "gtDf", "=", "pd", ".", "read_csv", "(", "groundTruth", ",", "sep", "=", "\"\\t\"", ",", "header", "=", "None", ",", "index_col", "=", "0", ")", "\n", "allVideos", "=", "glob", ".", "glob", "(", "basedir", ")", "\n", "for", "v", "in", "range", "(", "len", "(", "allVideos", ")", ")", ":", "\n", "        ", "vid", "=", "allVideos", "[", "v", "]", "\n", "vidName", "=", "vid", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "meanGt", "=", "getAvgGt", "(", "gtDf", ",", "vidName", ")", "\n", "frmAll", ",", "fps", ",", "duration", "=", "getVidFramesAndFpsDur", "(", "vid", ")", "\n", "fps", "=", "int", "(", "fps", ")", "\n", "sampledFrames", "=", "[", "]", "\n", "sampledFramesGt", "=", "[", "]", "\n", "nSamples", "=", "int", "(", "fps", "*", "sampleRate", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "duration", ")", ")", ":", "\n", "            ", "smpl", "=", "np", ".", "sort", "(", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "fps", ")", ",", "nSamples", ",", "replace", "=", "False", ")", ")", "\n", "for", "idx", "in", "smpl", ":", "\n", "                ", "sampledFrames", ".", "append", "(", "frmAll", "[", "i", "*", "fps", ":", "(", "i", "+", "1", ")", "*", "fps", "]", "[", "idx", "]", ")", "\n", "sampledFramesGt", ".", "append", "(", "meanGt", "[", "i", "*", "fps", ":", "(", "i", "+", "1", ")", "*", "fps", "]", "[", "idx", "]", ")", "\n", "", "", "featuresArrMain", "=", "[", "]", "\n", "featuresArrMainAvgFrames", "=", "[", "]", "\n", "for", "f", "in", "range", "(", "len", "(", "sampledFrames", ")", ")", ":", "\n", "            ", "frmRz", "=", "cv2", ".", "resize", "(", "sampledFrames", "[", "f", "]", ",", "(", "224", ",", "224", ")", ")", "\n", "frmRzPyTensor", "=", "torch", ".", "Tensor", "(", "frmRz", ".", "reshape", "(", "[", "1", ",", "3", ",", "224", ",", "224", "]", ")", ")", "\n", "features", "=", "model", ".", "extract_features", "(", "frmRzPyTensor", ")", "\n", "featuresArr", "=", "features", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "featuresArr", "=", "featuresArr", ".", "reshape", "(", "(", "1280", ",", "7", ",", "7", ")", ")", "\n", "featuresArrMain", ".", "append", "(", "featuresArr", ")", "\n", "featuresArrMainAvgFrames", ".", "append", "(", "frmRz", ")", "\n", "print", "(", "\"visual feature for frame: \"", ",", "f", ",", "\" in: \"", ",", "vidName", ")", "\n", "", "featuresArrMain", "=", "np", ".", "array", "(", "featuresArrMain", ")", "\n", "sampledFramesGt", "=", "np", ".", "array", "(", "sampledFramesGt", ")", "\n", "featuresArrMainAvgFrames", "=", "np", ".", "array", "(", "featuresArrMainAvgFrames", ")", "\n", "pickle", ".", "dump", "(", "featuresArrMain", ",", "open", "(", "baseOut", "+", "vidName", "+", "\"_\"", "+", "str", "(", "nSamples", ")", "+", "\"_featuresArrMain.p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "sampledFramesGt", ",", "open", "(", "baseOut", "+", "vidName", "+", "\"_\"", "+", "str", "(", "nSamples", ")", "+", "\"_sampledFramesGt.p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "featuresArrMainAvgFrames", ",", "open", "(", "baseOut", "+", "vidName", "+", "\"_\"", "+", "str", "(", "nSamples", ")", "+", "\"_featuresArrMainAvgFrames.p\"", ",", "\"wb\"", ")", ")", "\n", "print", "(", "\"features and gt written for: \"", ",", "vidName", ")", "\n", "print", "(", "\"frames and gt written for: \"", ",", "vidName", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateVisualFeatures.writeVisualFeaturesAlongGtTvSumForAllExtractors": [[111, 175], ["pandas.read_csv", "glob.glob", "range", "len", "generateVisualFeatures.getAvgGt", "generateVisualFeatures.getVidFramesAndFpsDur", "int", "range", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "print", "print", "[].split", "int", "numpy.sort", "len", "cv2.resize", "cv2.resize", "torch.Tensor", "modelEff.extract_features", "modelEff.extract_features.detach().numpy", "featuresArrEff.reshape.reshape", "np.array.append", "numpy.expand_dims", "numpy.expand_dims", "keras.applications.vgg16.preprocess_input", "modelVgg.predict", "modelInceptionV3.predict", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "open", "open", "open", "open", "open", "open", "open", "open", "numpy.random.choice", "sampledFrames.append", "np.array.append", "keras.applications.vgg16.preprocess_input.reshape", "numpy.arange", "modelEff.extract_features.detach", "vid.split"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getAvgGt", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidFramesAndFpsDur"], ["", "", "def", "writeVisualFeaturesAlongGtTvSumForAllExtractors", "(", "basedir", ",", "groundTruth", ",", "baseOutEff", ",", "baseOutVgg", ",", "baseOutIncepV3", ",", "modelEff", ",", "modelVgg", ",", "modelInceptionV3", ",", "nSamples", "=", "2", ",", "strt", "=", "0", ")", ":", "\n", "    ", "gtDf", "=", "pd", ".", "read_csv", "(", "groundTruth", ",", "sep", "=", "\"\\t\"", ",", "header", "=", "None", ",", "index_col", "=", "0", ")", "\n", "allVideos", "=", "glob", ".", "glob", "(", "basedir", ")", "\n", "for", "v", "in", "range", "(", "strt", ",", "len", "(", "allVideos", ")", ")", ":", "\n", "        ", "vid", "=", "allVideos", "[", "v", "]", "\n", "vidName", "=", "vid", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "meanGt", "=", "getAvgGt", "(", "gtDf", ",", "vidName", ")", "\n", "frmAll", ",", "fps", ",", "duration", "=", "getVidFramesAndFpsDur", "(", "vid", ")", "\n", "sampledFrames", "=", "[", "]", "\n", "sampledFramesGt", "=", "[", "]", "\n", "fps", "=", "int", "(", "fps", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "duration", ")", ")", ":", "\n", "            ", "smpl", "=", "np", ".", "sort", "(", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "fps", ")", ",", "nSamples", ",", "replace", "=", "False", ")", ")", "\n", "for", "idx", "in", "smpl", ":", "\n", "                ", "sampledFrames", ".", "append", "(", "frmAll", "[", "i", "*", "fps", ":", "(", "i", "+", "1", ")", "*", "fps", "]", "[", "idx", "-", "1", "]", ")", "\n", "sampledFramesGt", ".", "append", "(", "meanGt", "[", "i", "*", "fps", ":", "(", "i", "+", "1", ")", "*", "fps", "]", "[", "idx", "-", "1", "]", ")", "\n", "", "", "featuresArrMainVGG", "=", "[", "]", "\n", "featuresArrMainIncepV3", "=", "[", "]", "\n", "featuresArrMainAvgFrames299", "=", "[", "]", "\n", "featuresArrMainAvgFrames224", "=", "[", "]", "\n", "featuresArrMainEff", "=", "[", "]", "\n", "for", "f", "in", "range", "(", "len", "(", "sampledFrames", ")", ")", ":", "\n", "            ", "frmRz224", "=", "cv2", ".", "resize", "(", "sampledFrames", "[", "f", "]", ",", "(", "224", ",", "224", ")", ")", "\n", "frmRz299", "=", "cv2", ".", "resize", "(", "sampledFrames", "[", "f", "]", ",", "(", "299", ",", "299", ")", ")", "\n", "frmRzPyTensor", "=", "torch", ".", "Tensor", "(", "frmRz224", ".", "reshape", "(", "[", "1", ",", "3", ",", "224", ",", "224", "]", ")", ")", "\n", "featuresEff", "=", "modelEff", ".", "extract_features", "(", "frmRzPyTensor", ")", "\n", "featuresArrEff", "=", "featuresEff", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "featuresArrEff", "=", "featuresArrEff", ".", "reshape", "(", "(", "1280", ",", "7", ",", "7", ")", ")", "\n", "featuresArrMainEff", ".", "append", "(", "featuresArrEff", ")", "\n", "frmRz299Org", "=", "frmRz299", "\n", "frmRz224Org", "=", "frmRz224", "\n", "frmRz299", "=", "np", ".", "expand_dims", "(", "frmRz299", ",", "axis", "=", "0", ")", "\n", "frmRz224", "=", "np", ".", "expand_dims", "(", "frmRz224", ",", "axis", "=", "0", ")", "\n", "frmRz224", "=", "preprocess_input", "(", "frmRz224", ")", "\n", "vgg16_feature", "=", "modelVgg", ".", "predict", "(", "frmRz224", ")", "\n", "inceptionv3_feature", "=", "modelInceptionV3", ".", "predict", "(", "frmRz299", ")", "\n", "featuresArrVgg", "=", "vgg16_feature", "\n", "featuresArrIncepV3", "=", "inceptionv3_feature", "\n", "featuresArrMainVGG", ".", "append", "(", "featuresArrVgg", ")", "\n", "featuresArrMainIncepV3", ".", "append", "(", "featuresArrIncepV3", ")", "\n", "featuresArrMainAvgFrames299", ".", "append", "(", "frmRz299Org", ")", "\n", "featuresArrMainAvgFrames224", ".", "append", "(", "frmRz224Org", ")", "\n", "", "featuresArrMainVGG", "=", "np", ".", "array", "(", "featuresArrMainVGG", ")", "\n", "featuresArrMainIncepV3", "=", "np", ".", "array", "(", "featuresArrMainIncepV3", ")", "\n", "featuresArrMainEff", "=", "np", ".", "array", "(", "featuresArrMainEff", ")", "\n", "featuresArrMainAvgFrames299", "=", "np", ".", "array", "(", "featuresArrMainAvgFrames299", ")", "\n", "featuresArrMainAvgFrames224", "=", "np", ".", "array", "(", "featuresArrMainAvgFrames224", ")", "\n", "sampledFramesGt", "=", "np", ".", "array", "(", "sampledFramesGt", ")", "\n", "\n", "pickle", ".", "dump", "(", "featuresArrMainEff", ",", "open", "(", "baseOutEff", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "baseOutEff", "[", "1", "]", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "featuresArrMainVGG", ",", "open", "(", "baseOutVgg", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "baseOutVgg", "[", "1", "]", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "featuresArrMainIncepV3", ",", "open", "(", "baseOutIncepV3", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "baseOutIncepV3", "[", "1", "]", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "featuresArrMainAvgFrames224", ",", "open", "(", "baseOutVgg", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "baseOutVgg", "[", "1", "]", "+", "\"Frames.p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "featuresArrMainAvgFrames299", ",", "open", "(", "baseOutIncepV3", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "baseOutIncepV3", "[", "1", "]", "+", "\"Frames.p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "sampledFramesGt", ",", "open", "(", "baseOutEff", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "\"smpGt\"", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "sampledFramesGt", ",", "open", "(", "baseOutVgg", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "\"smpGt\"", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "sampledFramesGt", ",", "open", "(", "baseOutIncepV3", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "\"smpGt\"", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "print", "(", "\"features and gt written for: \"", ",", "vidName", ",", "\" vid:\"", ",", "v", ")", "\n", "print", "(", "\"frames and gt written for: \"", ",", "vidName", ",", "\" vid:\"", ",", "v", ")", "\n", "del", "featuresArrMainVGG", "\n", "del", "featuresArrMainIncepV3", "\n", "del", "featuresArrMainEff", "\n", "del", "featuresArrMainAvgFrames224", "\n", "del", "featuresArrMainAvgFrames299", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.multiModalFeaturesForVideosAll.getSecFromTimeStr": [[32, 39], ["tm.split", "int", "int", "float"], "function", ["None"], ["def", "getSecFromTimeStr", "(", "tm", ")", ":", "\n", "    ", "tmTkn", "=", "tm", ".", "split", "(", "\":\"", ")", "\n", "hr", "=", "int", "(", "tmTkn", "[", "0", "]", ")", "\n", "mtn", "=", "int", "(", "tmTkn", "[", "1", "]", ")", "\n", "sec", "=", "float", "(", "tmTkn", "[", "2", "]", ")", "\n", "finSecs", "=", "(", "hr", "*", "3600", ")", "+", "(", "mtn", "*", "60", ")", "+", "(", "sec", ")", "\n", "return", "finSecs", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.multiModalFeaturesForVideosAll.getTextBertPerSecSampleArr": [[40, 56], ["webvtt.read", "range", "range", "range", "numpy.array", "allTextPerSec.append", "len", "int", "int", "range", "len", "bert_embedding", "range", "multiModalFeaturesForVideosAll.getSecFromTimeStr", "multiModalFeaturesForVideosAll.getSecFromTimeStr", "allTextPerSec[].append", "allTextSampleBert.append"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr"], ["", "def", "getTextBertPerSecSampleArr", "(", "sub", ",", "durationA", ",", "nSample", ",", "bert_embedding", ")", ":", "\n", "    ", "caption", "=", "webvtt", ".", "read", "(", "sub", ")", "\n", "allTextPerSec", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "durationA", ")", ":", "\n", "        ", "allTextPerSec", ".", "append", "(", "[", "\"\"", "]", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "caption", ")", ")", ":", "\n", "        ", "strt", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "start", ")", ")", "\n", "ed", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "end", ")", ")", "\n", "for", "x", "in", "range", "(", "strt", ",", "ed", "+", "1", ")", ":", "\n", "            ", "allTextPerSec", "[", "x", "-", "1", "]", ".", "append", "(", "caption", "[", "i", "]", ".", "text", ")", "\n", "", "", "allTextSampleBert", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "allTextPerSec", ")", ")", ":", "\n", "        ", "bert_i", "=", "bert_embedding", "(", "allTextPerSec", "[", "i", "]", ")", "\n", "for", "n", "in", "range", "(", "nSample", ")", ":", "\n", "            ", "allTextSampleBert", ".", "append", "(", "bert_i", ")", "\n", "", "", "return", "np", ".", "array", "(", "allTextSampleBert", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.multiModalFeaturesForVideosAll.getVidFramesAndFpsDur": [[57, 63], ["moviepy.editor.VideoFileClip", "list", "moviepy.editor.VideoFileClip.iter_frames"], "function", ["None"], ["", "def", "getVidFramesAndFpsDur", "(", "vidName", ",", "nSamples", "=", "2", ")", ":", "\n", "    ", "video_clip", "=", "VideoFileClip", "(", "vidName", ")", "\n", "frmAll", "=", "list", "(", "video_clip", ".", "iter_frames", "(", "fps", "=", "nSamples", ",", "with_times", "=", "False", ")", ")", "\n", "frmAll", ",", "fps", ",", "duration", "=", "frmAll", ",", "video_clip", ".", "fps", ",", "video_clip", ".", "duration", "\n", "del", "video_clip", "\n", "return", "frmAll", ",", "fps", ",", "duration", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.multiModalFeaturesForVideosAll.getAudioFramesAndFpsDur": [[64, 71], ["moviepy.editor.VideoFileClip", "list", "audioclip.iter_frames"], "function", ["None"], ["", "def", "getAudioFramesAndFpsDur", "(", "vidName", ")", ":", "\n", "    ", "video_clip", "=", "VideoFileClip", "(", "vidName", ")", "\n", "audioclip", "=", "video_clip", ".", "audio", "\n", "frmAll", "=", "list", "(", "audioclip", ".", "iter_frames", "(", "with_times", "=", "False", ")", ")", "\n", "frmAll", ",", "fps", ",", "duration", "=", "frmAll", ",", "audioclip", ".", "fps", ",", "audioclip", ".", "duration", "\n", "del", "video_clip", "\n", "return", "frmAll", ",", "fps", ",", "duration", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.multiModalFeaturesForVideosAll.getGtForVideo": [[74, 93], ["range", "numpy.array().mean", "len", "vidGtDict[].append", "numpy.full().tolist", "numpy.full().tolist", "numpy.array", "len", "numpy.full", "numpy.full"], "function", ["None"], ["", "def", "getGtForVideo", "(", "baseGtAnnotateData", ",", "vidName", ",", "users", ",", "nScorePerSeg", ",", "nFrames", ")", ":", "\n", "    ", "vidGtDict", "=", "{", "}", "\n", "vidGtDictAvg", "=", "{", "}", "\n", "vidName", "=", "vidName", "+", "\".mp4\"", "\n", "for", "u", "in", "users", ":", "\n", "        ", "scores", "=", "baseGtAnnotateData", "[", "u", "]", "[", "vidName", "]", "\n", "processedScore", "=", "[", "]", "\n", "for", "s", "in", "range", "(", "len", "(", "scores", ")", ")", ":", "\n", "            ", "if", "(", "s", "<", "(", "len", "(", "scores", ")", "-", "1", ")", ")", ":", "\n", "                ", "processedScore", "+=", "np", ".", "full", "(", "nScorePerSeg", ",", "scores", "[", "s", "]", ")", ".", "tolist", "(", ")", "\n", "", "else", ":", "\n", "                ", "processedScore", "+=", "np", ".", "full", "(", "nFrames", "%", "nScorePerSeg", ",", "scores", "[", "s", "]", ")", ".", "tolist", "(", ")", "\n", "", "", "if", "(", "vidName", "in", "vidGtDict", ")", ":", "\n", "            ", "vidGtDict", "[", "vidName", "]", ".", "append", "(", "processedScore", ")", "\n", "", "else", ":", "\n", "            ", "vidGtDict", "[", "vidName", "]", "=", "[", "processedScore", "]", "\n", "", "", "for", "k", "in", "vidGtDict", ":", "\n", "        ", "vidGtDictAvg", "[", "k", "]", "=", "np", ".", "array", "(", "vidGtDict", "[", "k", "]", ")", ".", "mean", "(", "axis", "=", "0", ")", "\n", "", "return", "vidGtDictAvg", "[", "k", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.multiModalFeaturesForVideosAll.writeVisualFeaturesAlongGtTvSumForAllExtractorsMulti": [[94, 160], ["glob.glob", "range", "len", "multiModalFeaturesForVideosAll.getVidFramesAndFpsDur", "len", "multiModalFeaturesForVideosAll.getGtForVideo", "int", "pickle.dump", "print", "print", "print", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "pickle.dump", "pickle.dump", "pickle.dump", "pickle.dump", "open", "vid.split", "len", "print", "cv2.resize", "cv2.resize", "numpy.expand_dims", "numpy.expand_dims", "keras.applications.vgg16.preprocess_input", "modelVgg.predict", "modelResNet50.predict", "modelInceptionV3.predict", "modelXception.predict", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "open", "open", "open", "open"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidFramesAndFpsDur", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.multiModalFeaturesForVideosAll.getGtForVideo"], ["", "def", "writeVisualFeaturesAlongGtTvSumForAllExtractorsMulti", "(", "basedir", ",", "justGt", ",", "baseOutGt", ",", "baseGtAnnotateData", ",", "baseOutEff", ",", "baseOutVgg", ",", "baseOutIncepV3", ",", "baseOutXception", ",", "baseOuResNet50", ",", "modelXception", ",", "modelResNet50", ",", "modelVgg", ",", "modelInceptionV3", ",", "videoNames", ",", "nSamples", "=", "2", ",", "strt", "=", "0", ")", ":", "\n", "    ", "allVideos", "=", "glob", ".", "glob", "(", "basedir", ")", "\n", "for", "v", "in", "range", "(", "strt", ",", "len", "(", "allVideos", ")", ")", ":", "\n", "        ", "vid", "=", "allVideos", "[", "v", "]", "\n", "vidName", "=", "vid", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "[", ":", "-", "4", "]", "\n", "nameShowLimit", "=", "25", "\n", "if", "(", "not", "vidName", "in", "videoNames", ")", ":", "#check for already done videos", "\n", "            ", "print", "(", "\"video num: \"", ",", "v", ",", "\" name: \"", ",", "vidName", "[", ":", "nameShowLimit", "]", ",", "\" not found labeled\"", ")", "\n", "continue", "\n", "", "sampledFrames", ",", "fps", ",", "duration", "=", "getVidFramesAndFpsDur", "(", "vid", ",", "nSamples", ")", "\n", "nFrames", "=", "len", "(", "sampledFrames", ")", "\n", "segSize", "=", "5", "\n", "nScorePerSeg", "=", "segSize", "*", "nSamples", "\n", "users", "=", "[", "\"junaid\"", "]", "\n", "vidGt", "=", "getGtForVideo", "(", "baseGtAnnotateData", ",", "vidName", ",", "users", ",", "nScorePerSeg", ",", "nFrames", ")", "\n", "\n", "\n", "sampledFramesGt", "=", "vidGt", "\n", "fps", "=", "int", "(", "fps", ")", "\n", "\n", "if", "(", "not", "justGt", ")", ":", "\n", "            ", "featuresArrMainVGG", "=", "[", "]", "\n", "featuresArrMainIncepV3", "=", "[", "]", "\n", "featuresArrMainXception", "=", "[", "]", "\n", "featuresArrMainResNet50", "=", "[", "]", "\n", "#            featuresArrMainEff=[]", "\n", "for", "f", "in", "range", "(", "len", "(", "sampledFrames", ")", ")", ":", "\n", "                ", "print", "(", "\"video num: \"", ",", "v", ",", "\" name: \"", ",", "vidName", "[", ":", "nameShowLimit", "]", ",", "\" at frame: \"", ",", "f", ")", "\n", "frmRz224", "=", "cv2", ".", "resize", "(", "sampledFrames", "[", "f", "]", ",", "(", "224", ",", "224", ")", ")", "\n", "frmRz299", "=", "cv2", ".", "resize", "(", "sampledFrames", "[", "f", "]", ",", "(", "299", ",", "299", ")", ")", "\n", "\n", "frmRz299", "=", "np", ".", "expand_dims", "(", "frmRz299", ",", "axis", "=", "0", ")", "\n", "frmRz224", "=", "np", ".", "expand_dims", "(", "frmRz224", ",", "axis", "=", "0", ")", "\n", "frmRz224Pi", "=", "preprocess_input", "(", "frmRz224", ")", "\n", "vgg16_feature", "=", "modelVgg", ".", "predict", "(", "frmRz224Pi", ")", "\n", "resnet50_feature", "=", "modelResNet50", ".", "predict", "(", "frmRz224", ")", "\n", "inceptionv3_feature", "=", "modelInceptionV3", ".", "predict", "(", "frmRz299", ")", "\n", "xception_feature", "=", "modelXception", ".", "predict", "(", "frmRz299", ")", "\n", "\n", "featuresArrVgg", "=", "vgg16_feature", "\n", "featuresArrIncepV3", "=", "inceptionv3_feature", "\n", "featuresArrXception", "=", "xception_feature", "\n", "featuresArrResNet50", "=", "resnet50_feature", "\n", "featuresArrMainVGG", ".", "append", "(", "featuresArrVgg", ")", "\n", "featuresArrMainIncepV3", ".", "append", "(", "featuresArrIncepV3", ")", "\n", "featuresArrMainXception", ".", "append", "(", "featuresArrXception", ")", "\n", "featuresArrMainResNet50", ".", "append", "(", "featuresArrResNet50", ")", "\n", "", "featuresArrMainVGG", "=", "np", ".", "array", "(", "featuresArrMainVGG", ")", "\n", "featuresArrMainIncepV3", "=", "np", ".", "array", "(", "featuresArrMainIncepV3", ")", "\n", "featuresArrMainXception", "=", "np", ".", "array", "(", "featuresArrMainXception", ")", "\n", "featuresArrMainResNet50", "=", "np", ".", "array", "(", "featuresArrMainResNet50", ")", "\n", "\n", "sampledFramesGt", "=", "np", ".", "array", "(", "sampledFramesGt", ")", "\n", "\n", "pickle", ".", "dump", "(", "featuresArrMainVGG", ",", "open", "(", "baseOutVgg", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "baseOutVgg", "[", "1", "]", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "featuresArrMainIncepV3", ",", "open", "(", "baseOutIncepV3", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "baseOutIncepV3", "[", "1", "]", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "featuresArrMainXception", ",", "open", "(", "baseOutXception", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "baseOutXception", "[", "1", "]", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "featuresArrMainResNet50", ",", "open", "(", "baseOuResNet50", "[", "0", "]", "+", "vidName", "+", "\"_\"", "+", "baseOuResNet50", "[", "1", "]", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "del", "featuresArrMainVGG", "\n", "del", "featuresArrMainIncepV3", "\n", "del", "featuresArrMainXception", "\n", "del", "featuresArrMainResNet50", "\n", "del", "sampledFrames", "\n", "", "pickle", ".", "dump", "(", "sampledFramesGt", ",", "open", "(", "baseOutGt", "+", "vidName", "+", "\"_\"", "+", "\"smpGt\"", "+", "\".p\"", ",", "\"wb\"", ")", ")", "\n", "print", "(", "\"features and gt written for: \"", ",", "vidName", ",", "\" vid:\"", ",", "v", ")", "\n", "print", "(", "\"frames and gt written for: \"", ",", "vidName", ",", "\" vid:\"", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateAudioFeatures.getSecFromTimeStr": [[15, 22], ["tm.split", "int", "int", "float"], "function", ["None"], ["def", "getSecFromTimeStr", "(", "tm", ")", ":", "\n", "    ", "tmTkn", "=", "tm", ".", "split", "(", "\":\"", ")", "\n", "hr", "=", "int", "(", "tmTkn", "[", "0", "]", ")", "\n", "mtn", "=", "int", "(", "tmTkn", "[", "1", "]", ")", "\n", "sec", "=", "float", "(", "tmTkn", "[", "2", "]", ")", "\n", "finSecs", "=", "(", "hr", "*", "3600", ")", "+", "(", "mtn", "*", "60", ")", "+", "(", "sec", ")", "\n", "return", "finSecs", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateAudioFeatures.getTextPerSecsArr": [[23, 34], ["webvtt.read", "range", "range", "numpy.array", "allTextPerSec.append", "len", "int", "int", "range", "generateAudioFeatures.getSecFromTimeStr", "generateAudioFeatures.getSecFromTimeStr", "allTextPerSec[].append"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr"], ["", "def", "getTextPerSecsArr", "(", "vidName", ",", "durationA", ")", ":", "\n", "    ", "caption", "=", "webvtt", ".", "read", "(", "vidName", ")", "\n", "allTextPerSec", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "durationA", ")", ":", "\n", "        ", "allTextPerSec", ".", "append", "(", "[", "\"\"", "]", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "caption", ")", ")", ":", "\n", "        ", "strt", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "start", ")", ")", "\n", "ed", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "end", ")", ")", "\n", "for", "x", "in", "range", "(", "strt", ",", "ed", "+", "1", ")", ":", "\n", "            ", "allTextPerSec", "[", "x", "-", "1", "]", ".", "append", "(", "caption", "[", "i", "]", ".", "text", ")", "\n", "", "", "return", "np", ".", "array", "(", "allTextPerSec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateAudioFeatures.getTextPerSecsArrByChunks": [[35, 46], ["webvtt.read", "range", "range", "numpy.array", "allTextPerSecByChunk.append", "len", "int", "int", "allTextPerSecByChunk[].append", "allTextPerSecByChunk[].append", "generateAudioFeatures.getSecFromTimeStr", "generateAudioFeatures.getSecFromTimeStr"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr"], ["", "def", "getTextPerSecsArrByChunks", "(", "vidName", ",", "durationA", ",", "chunk", ")", ":", "\n", "    ", "caption", "=", "webvtt", ".", "read", "(", "vidName", ")", "\n", "allTextPerSecByChunk", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "durationA", "//", "chunk", ")", ":", "\n", "        ", "allTextPerSecByChunk", ".", "append", "(", "[", "\"\"", "]", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "caption", ")", ")", ":", "\n", "        ", "strt", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "start", ")", ")", "\n", "ed", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "end", ")", ")", "\n", "allTextPerSecByChunk", "[", "strt", "//", "chunk", "]", ".", "append", "(", "caption", "[", "i", "]", ".", "text", ")", "\n", "allTextPerSecByChunk", "[", "ed", "//", "chunk", "]", ".", "append", "(", "caption", "[", "i", "]", ".", "text", ")", "\n", "", "return", "np", ".", "array", "(", "allTextPerSecByChunk", ")", "\n", "#for caption in webvtt.read(allVideosSubs[0]):", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateAudioFeatures.getAvgGt": [[52, 61], ["range", "numpy.array", "allUserArr.astype.astype", "allUserArr.astype.mean", "len", "allUserArr.astype.append", "subGt.iloc[].split"], "function", ["None"], ["", "def", "getAvgGt", "(", "gtDf", ",", "vidName", ")", ":", "\n", "    ", "subGt", "=", "gtDf", ".", "loc", "[", "vidName", "]", "\n", "allUserArr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "subGt", ")", ")", ":", "\n", "        ", "allUserArr", ".", "append", "(", "subGt", ".", "iloc", "[", "i", ",", "-", "1", "]", ".", "split", "(", "\",\"", ")", ")", "\n", "", "allUserArr", "=", "np", ".", "array", "(", "allUserArr", ")", "\n", "allUserArr", "=", "allUserArr", ".", "astype", "(", "int", ")", "\n", "meanGt", "=", "allUserArr", ".", "mean", "(", "axis", "=", "0", ")", "\n", "return", "meanGt", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateAudioFeatures.getAudioDataFromVideo": [[62, 73], ["common.videoLoading.getAudioFramesAndFpsDur", "int", "int", "range", "int", "numpy.sort", "numpy.random.choice", "sampledFramesA.append", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getAudioFramesAndFpsDur"], ["", "def", "getAudioDataFromVideo", "(", "vid", ",", "audioSamplingRate", ")", ":", "\n", "    ", "frmAll", ",", "fps", ",", "durationA", "=", "videoLoading", ".", "getAudioFramesAndFpsDur", "(", "vid", ")", "\n", "fps", "=", "int", "(", "fps", ")", "\n", "sampledFramesA", "=", "[", "]", "\n", "nSamples", "=", "int", "(", "fps", "*", "audioSamplingRate", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "durationA", ")", ")", ":", "\n", "        ", "smpl", "=", "np", ".", "sort", "(", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "fps", ")", ",", "nSamples", ",", "replace", "=", "False", ")", ")", "\n", "for", "idx", "in", "smpl", ":", "\n", "            ", "sampledFramesA", ".", "append", "(", "frmAll", "[", "i", "*", "fps", ":", "(", "i", "+", "1", ")", "*", "fps", "]", "[", "idx", "]", ")", "\n", "#        print(\"on duration: \",i,\" sith sample: \",nSamples)", "\n", "", "", "return", "sampledFramesA", ",", "fps", ",", "durationA", ",", "nSamples", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateAudioFeatures.getAudioDataAll": [[79, 96], ["glob.glob", "range", "len", "common.videoLoading.getAudioFramesAndFpsDur", "int", "int", "range", "numpy.array", "pickle.dump", "print", "[].split", "int", "numpy.sort", "print", "open", "numpy.random.choice", "np.array.append", "numpy.arange", "vid.split", "str"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getAudioFramesAndFpsDur"], ["def", "getAudioDataAll", "(", "basedir", ",", "baseOut", ",", "chunk", ",", "audioSamplingRate", ")", ":", "\n", "    ", "allVideos", "=", "glob", ".", "glob", "(", "basedir", ")", "\n", "for", "v", "in", "range", "(", "len", "(", "allVideos", ")", ")", ":", "\n", "        ", "vid", "=", "allVideos", "[", "v", "]", "\n", "vidName", "=", "vid", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "frmAll", ",", "fps", ",", "durationA", "=", "videoLoading", ".", "getAudioFramesAndFpsDur", "(", "vid", ")", "\n", "fps", "=", "int", "(", "fps", ")", "\n", "sampledFramesA", "=", "[", "]", "\n", "nSamples", "=", "int", "(", "fps", "*", "audioSamplingRate", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "durationA", ")", ")", ":", "\n", "            ", "smpl", "=", "np", ".", "sort", "(", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "fps", ")", ",", "nSamples", ",", "replace", "=", "False", ")", ")", "\n", "for", "idx", "in", "smpl", ":", "\n", "                ", "sampledFramesA", ".", "append", "(", "frmAll", "[", "i", "*", "fps", ":", "(", "i", "+", "1", ")", "*", "fps", "]", "[", "idx", "]", ")", "\n", "", "print", "(", "\"on duration: \"", ",", "i", ",", "\" sith sample: \"", ",", "nSamples", ")", "\n", "", "sampledFramesA", "=", "np", ".", "array", "(", "sampledFramesA", ")", "\n", "pickle", ".", "dump", "(", "sampledFramesA", ",", "open", "(", "baseOut", "+", "vidName", "+", "\"_\"", "+", "str", "(", "nSamples", ")", "+", "\"_sampledFramesAudio.p\"", ",", "\"wb\"", ")", ")", "\n", "print", "(", "\"audio and text written for: \"", ",", "vidName", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateAudioFeatures.getAudioDataWithFeaturesAll": [[99, 132], ["glob.glob", "range", "len", "os.system", "time.sleep", "print", "os.system", "time.sleep", "print", "common.videoLoading.getAudioFramesAndFpsDur", "print", "int", "int", "range", "numpy.array", "pyAudioAnalysis.audioBasicIO.read_audio_file", "pyAudioAnalysis.ShortTermFeatures.feature_extraction", "pickle.dump", "pickle.dump", "print", "print", "int", "numpy.sort", "open", "open", "vid.split", "numpy.random.choice", "np.array.append", "str", "numpy.arange", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getAudioFramesAndFpsDur"], ["", "", "def", "getAudioDataWithFeaturesAll", "(", "basedir", ",", "baseOut", ",", "audioSamplingRate", ",", "annotatedVideos", ",", "doneAudioList", ")", ":", "\n", "    ", "allVideos", "=", "glob", ".", "glob", "(", "basedir", "+", "\"*.mp4\"", ")", "\n", "for", "v", "in", "range", "(", "len", "(", "allVideos", ")", ")", ":", "\n", "        ", "vid", "=", "allVideos", "[", "v", "]", "\n", "vidName", "=", "vid", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", "[", ":", "-", "4", "]", "\n", "nameShowLimit", "=", "25", "\n", "if", "(", "(", "not", "vidName", "in", "annotatedVideos", ")", "or", "vidName", "in", "doneAudioList", ")", ":", "#check for already done videos", "\n", "            ", "print", "(", "\"video num: \"", ",", "v", ",", "\" name: \"", ",", "vidName", "[", ":", "nameShowLimit", "]", ",", "\" not found labeled\"", ")", "\n", "continue", "\n", "", "os", ".", "system", "(", "\"nohup ffmpeg -i '\"", "+", "vid", "+", "\"' \"", "+", "baseOut", "+", "str", "(", "v", ")", "+", "\".wav &\"", ")", "\n", "time", ".", "sleep", "(", "5", ")", "\n", "print", "(", "\"wait after audio.wav ..\"", ")", "\n", "os", ".", "system", "(", "\"nohup ffmpeg -i \"", "+", "baseOut", "+", "str", "(", "v", ")", "+", "\".wav -ar 24000 -ac 1 '\"", "+", "baseOut", "+", "vidName", "+", "\"_24K_mono.wav' &\"", ")", "\n", "time", ".", "sleep", "(", "5", ")", "\n", "print", "(", "\"wait after 24k_mono.wav ..\"", ")", "\n", "frmAll", ",", "fps", ",", "durationA", "=", "videoLoading", ".", "getAudioFramesAndFpsDur", "(", "vid", ")", "\n", "print", "(", "\"read video and audio processing..\"", ")", "\n", "fps", "=", "int", "(", "fps", ")", "\n", "sampledFramesA", "=", "[", "]", "\n", "nSamples", "=", "int", "(", "fps", "*", "audioSamplingRate", ")", "\n", "for", "i", "in", "range", "(", "int", "(", "durationA", ")", ")", ":", "\n", "            ", "smpl", "=", "np", ".", "sort", "(", "np", ".", "random", ".", "choice", "(", "np", ".", "arange", "(", "fps", ")", ",", "nSamples", ",", "replace", "=", "False", ")", ")", "\n", "for", "idx", "in", "smpl", ":", "\n", "                ", "sampledFramesA", ".", "append", "(", "frmAll", "[", "i", "*", "fps", ":", "(", "i", "+", "1", ")", "*", "fps", "]", "[", "idx", "]", ")", "\n", "", "", "sampledFramesA", "=", "np", ".", "array", "(", "sampledFramesA", ")", "\n", "audio_data", "=", "baseOut", "+", "vidName", "+", "\"_24K_mono.wav\"", "\n", "[", "Fs", ",", "x", "]", "=", "audioBasicIO", ".", "read_audio_file", "(", "audio_data", ")", "\n", "windowSz", "=", "0.050", "\n", "stepSz", "=", "0.025", "\n", "F", ",", "f_names", "=", "ShortTermFeatures", ".", "feature_extraction", "(", "x", ",", "Fs", ",", "windowSz", "*", "Fs", ",", "stepSz", "*", "Fs", ")", "\n", "pickle", ".", "dump", "(", "[", "F", ",", "f_names", "]", ",", "open", "(", "baseOut", "+", "vidName", "+", "\"_\"", "+", "str", "(", "windowSz", ")", "+", "\"_\"", "+", "str", "(", "stepSz", ")", "+", "\"_featuresAudio.p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "sampledFramesA", ",", "open", "(", "baseOut", "+", "vidName", "+", "\"_\"", "+", "str", "(", "nSamples", ")", "+", "\"_sampledFramesAudio.p\"", ",", "\"wb\"", ")", ")", "\n", "print", "(", "\"video num: \"", ",", "v", ",", "\" audio written for: \"", ",", "vidName", "[", ":", "nameShowLimit", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateAudioFeatures.energy_entropy": [[136, 155], ["numpy.sum", "len", "int", "frame.reshape().copy", "numpy.floor", "numpy.sum", "numpy.sum", "frame.reshape", "numpy.log2"], "function", ["None"], ["", "", "def", "energy_entropy", "(", "frame", ",", "n_short_blocks", "=", "20", ")", ":", "\n", "    ", "\"\"\"Computes entropy of energy\"\"\"", "\n", "# total frame energy", "\n", "eps", "=", "0.00000001", "\n", "frame_energy", "=", "np", ".", "sum", "(", "frame", "**", "2", ")", "\n", "frame_length", "=", "len", "(", "frame", ")", "\n", "sub_win_len", "=", "int", "(", "np", ".", "floor", "(", "frame_length", "/", "n_short_blocks", ")", ")", "\n", "if", "frame_length", "!=", "sub_win_len", "*", "n_short_blocks", ":", "\n", "        ", "frame", "=", "frame", "[", "0", ":", "sub_win_len", "*", "n_short_blocks", "]", "\n", "\n", "# sub_wins is of size [n_short_blocks x L]", "\n", "", "sub_wins", "=", "frame", ".", "reshape", "(", "sub_win_len", ",", "n_short_blocks", ",", "order", "=", "'F'", ")", ".", "copy", "(", ")", "\n", "\n", "# Compute normalized sub-frame energies:", "\n", "s", "=", "np", ".", "sum", "(", "sub_wins", "**", "2", ",", "axis", "=", "0", ")", "/", "(", "frame_energy", "+", "eps", ")", "\n", "\n", "# Compute entropy of the normalized sub-frame energies:", "\n", "entropy", "=", "-", "np", ".", "sum", "(", "s", "*", "np", ".", "log2", "(", "s", "+", "eps", ")", ")", "\n", "return", "entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr": [[20, 27], ["tm.split", "int", "int", "float"], "function", ["None"], ["def", "getSecFromTimeStr", "(", "tm", ")", ":", "\n", "    ", "tmTkn", "=", "tm", ".", "split", "(", "\":\"", ")", "\n", "hr", "=", "int", "(", "tmTkn", "[", "0", "]", ")", "\n", "mtn", "=", "int", "(", "tmTkn", "[", "1", "]", ")", "\n", "sec", "=", "float", "(", "tmTkn", "[", "2", "]", ")", "\n", "finSecs", "=", "(", "hr", "*", "3600", ")", "+", "(", "mtn", "*", "60", ")", "+", "(", "sec", ")", "\n", "return", "finSecs", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getTextPerSecsArr": [[31, 42], ["webvtt.read", "range", "range", "numpy.array", "int", "allTextPerSec.append", "len", "int", "int", "range", "generateTextFeatures.getSecFromTimeStr", "generateTextFeatures.getSecFromTimeStr", "allTextPerSec[].append"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr"], ["", "def", "getTextPerSecsArr", "(", "sub", ",", "durationA", ")", ":", "\n", "    ", "caption", "=", "webvtt", ".", "read", "(", "sub", ")", "\n", "allTextPerSec", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "int", "(", "durationA", ")", ")", ":", "\n", "        ", "allTextPerSec", ".", "append", "(", "[", "\"\"", "]", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "caption", ")", ")", ":", "\n", "        ", "strt", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "start", ")", ")", "\n", "ed", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "end", ")", ")", "\n", "for", "x", "in", "range", "(", "strt", ",", "ed", "+", "1", ")", ":", "\n", "            ", "allTextPerSec", "[", "x", "-", "1", "]", ".", "append", "(", "caption", "[", "i", "]", ".", "text", ")", "\n", "", "", "return", "np", ".", "array", "(", "allTextPerSec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getAllTextInSubs": [[43, 49], ["webvtt.read", "range", "len", "listofTexts.append"], "function", ["None"], ["", "def", "getAllTextInSubs", "(", "sub", ")", ":", "\n", "    ", "caption", "=", "webvtt", ".", "read", "(", "sub", ")", "\n", "listofTexts", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "caption", ")", ")", ":", "\n", "        ", "listofTexts", ".", "append", "(", "caption", "[", "i", "]", ".", "text", ")", "\n", "", "return", "listofTexts", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getTextPerSecsArrByChunks": [[50, 61], ["webvtt.read", "range", "range", "numpy.array", "allTextPerSecByChunk.append", "len", "int", "int", "allTextPerSecByChunk[].append", "allTextPerSecByChunk[].append", "generateTextFeatures.getSecFromTimeStr", "generateTextFeatures.getSecFromTimeStr"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getSecFromTimeStr"], ["", "def", "getTextPerSecsArrByChunks", "(", "sub", ",", "durationA", ",", "chunk", ")", ":", "\n", "    ", "caption", "=", "webvtt", ".", "read", "(", "sub", ")", "\n", "allTextPerSecByChunk", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "durationA", "//", "chunk", ")", ":", "\n", "        ", "allTextPerSecByChunk", ".", "append", "(", "[", "\"\"", "]", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "caption", ")", ")", ":", "\n", "        ", "strt", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "start", ")", ")", "\n", "ed", "=", "int", "(", "getSecFromTimeStr", "(", "caption", "[", "i", "]", ".", "end", ")", ")", "\n", "allTextPerSecByChunk", "[", "strt", "//", "chunk", "]", ".", "append", "(", "caption", "[", "i", "]", ".", "text", ")", "\n", "allTextPerSecByChunk", "[", "ed", "//", "chunk", "]", ".", "append", "(", "caption", "[", "i", "]", ".", "text", ")", "\n", "", "return", "np", ".", "array", "(", "allTextPerSecByChunk", ")", "\n", "#for caption in webvtt.read(allVideosSubs[0]):", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getAvgGt": [[67, 76], ["range", "numpy.array", "allUserArr.astype.astype", "allUserArr.astype.mean", "len", "allUserArr.astype.append", "subGt.iloc[].split"], "function", ["None"], ["", "def", "getAvgGt", "(", "gtDf", ",", "vidName", ")", ":", "\n", "    ", "subGt", "=", "gtDf", ".", "loc", "[", "vidName", "]", "\n", "allUserArr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "subGt", ")", ")", ":", "\n", "        ", "allUserArr", ".", "append", "(", "subGt", ".", "iloc", "[", "i", ",", "-", "1", "]", ".", "split", "(", "\",\"", ")", ")", "\n", "", "allUserArr", "=", "np", ".", "array", "(", "allUserArr", ")", "\n", "allUserArr", "=", "allUserArr", ".", "astype", "(", "int", ")", "\n", "meanGt", "=", "allUserArr", ".", "mean", "(", "axis", "=", "0", ")", "\n", "return", "meanGt", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getTextDataFromVideoPerSec": [[77, 81], ["common.videoLoading.getAudioFramesAndFpsDur", "generateTextFeatures.getTextPerSecsArr"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getAudioFramesAndFpsDur", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getTextPerSecsArr"], ["", "def", "getTextDataFromVideoPerSec", "(", "baseDir", ",", "vid", ",", "subs", ")", ":", "\n", "    ", "frmAll", ",", "fps", ",", "durationA", "=", "videoLoading", ".", "getAudioFramesAndFpsDur", "(", "vid", ")", "\n", "allTextPerSec", "=", "getTextPerSecsArr", "(", "baseDir", "+", "subs", ",", "durationA", ")", "\n", "return", "allTextPerSec", ",", "fps", ",", "durationA", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getTextDataFromVideoPerChunk": [[82, 86], ["common.videoLoading.getAudioFramesAndFpsDur", "generateTextFeatures.getTextPerSecsArrByChunks"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getAudioFramesAndFpsDur", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getTextPerSecsArrByChunks"], ["", "def", "getTextDataFromVideoPerChunk", "(", "vid", ",", "sub", ",", "chunk", "=", "5", ")", ":", "\n", "    ", "frmAll", ",", "fps", ",", "durationA", "=", "videoLoading", ".", "getAudioFramesAndFpsDur", "(", "vid", ")", "\n", "allTextPerSecByChunk", "=", "getTextPerSecsArrByChunks", "(", "sub", ",", "durationA", ",", "chunk", ")", "\n", "return", "allTextPerSecByChunk", ",", "fps", ",", "durationA", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getTxtDataAll": [[89, 100], ["glob.glob", "range", "len", "common.videoLoading.getAudioFramesAndFpsDur", "generateTextFeatures.getTextPerSecsArr", "generateTextFeatures.getTextPerSecsArrByChunks", "pickle.dump", "pickle.dump", "print", "[].split", "open", "open", "vid.split", "str"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getAudioFramesAndFpsDur", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getTextPerSecsArr", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getTextPerSecsArrByChunks"], ["", "def", "getTxtDataAll", "(", "basedir", ",", "baseOut", ",", "chunk", ")", ":", "\n", "    ", "allVideos", "=", "glob", ".", "glob", "(", "basedir", ")", "\n", "for", "v", "in", "range", "(", "len", "(", "allVideos", ")", ")", ":", "\n", "        ", "vid", "=", "allVideos", "[", "v", "]", "\n", "vidName", "=", "vid", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "frmAll", ",", "fps", ",", "durationA", "=", "videoLoading", ".", "getAudioFramesAndFpsDur", "(", "vid", ")", "\n", "allTextPerSec", "=", "getTextPerSecsArr", "(", "vid", ",", "durationA", ")", "\n", "allTextPerSecByChunk", "=", "getTextPerSecsArrByChunks", "(", "vid", ",", "durationA", ",", "chunk", ")", "\n", "pickle", ".", "dump", "(", "allTextPerSec", ",", "open", "(", "baseOut", "+", "vidName", "+", "\"_persec_allTextPerSec.p\"", ",", "\"wb\"", ")", ")", "\n", "pickle", ".", "dump", "(", "allTextPerSecByChunk", ",", "open", "(", "baseOut", "+", "vidName", "+", "\"_\"", "+", "str", "(", "chunk", ")", "+", "\"_persec_allTextPerSecByChunk.p\"", ",", "\"wb\"", ")", ")", "\n", "print", "(", "\"audio and text written for: \"", ",", "vidName", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.generateTextFeaturesForAllSec2": [[103, 118], ["range", "len", "bert_embedding", "bert_embedding2nlp", "generateTextFeatures.getFeatureArrayFromTokens", "print", "berstFeaturePerSec.append", "berstTokensPerSec.append", "berstFeaturePerSec2.append", "berstTokensPerSec2.append", "numpy.array", "numpy.array", "numpy.array", "generateTextFeatures.getAllTokenize", "numpy.array"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getFeatureArrayFromTokens", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getAllTokenize"], ["", "", "def", "generateTextFeaturesForAllSec2", "(", "bert_embedding", ",", "bert_embedding2nlp", ",", "allTextPerSec", ",", "fps", ",", "durationA", ",", "baseOut", ",", "vidName", ")", ":", "\n", "    ", "berstFeaturePerSec", "=", "[", "]", "\n", "berstFeaturePerSec2", "=", "[", "]", "\n", "berstTokensPerSec2", "=", "[", "]", "\n", "berstTokensPerSec", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "allTextPerSec", ")", ")", ":", "\n", "        ", "resultBert", "=", "bert_embedding", "(", "getAllTokenize", "(", "allTextPerSec", "[", "i", "]", ")", ")", "\n", "resultBert2", "=", "bert_embedding2nlp", "(", "\" \"", ".", "join", "(", "allTextPerSec", "[", "i", "]", ")", ")", "\n", "tokenArr", ",", "featureArr", "=", "getFeatureArrayFromTokens", "(", "resultBert", ")", "\n", "print", "(", "\"at video :\"", ",", "vidName", ",", "\" on sec: \"", ",", "i", ")", "\n", "berstFeaturePerSec", ".", "append", "(", "featureArr", ")", "\n", "berstTokensPerSec", ".", "append", "(", "tokenArr", ")", "\n", "berstFeaturePerSec2", ".", "append", "(", "np", ".", "array", "(", "resultBert2", ")", ")", "\n", "berstTokensPerSec2", ".", "append", "(", "\" \"", ".", "join", "(", "allTextPerSec", "[", "i", "]", ")", ")", "\n", "", "return", "np", ".", "array", "(", "berstTokensPerSec", ")", ",", "np", ".", "array", "(", "berstFeaturePerSec", ")", ",", "np", ".", "array", "(", "berstTokensPerSec2", ")", ",", "berstFeaturePerSec2", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.generateTextFeaturesForAllSec3": [[119, 132], ["range", "len", "generateTextFeatures.getAllTokenize", "bert_embedding", "bert_embedding2nlp", "generateTextFeatures.getFeatureArrayFromTokens", "print", "berstFeaturePerSec.append", "berstTokensPerSec.append", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getAllTokenize", "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getFeatureArrayFromTokens"], ["", "def", "generateTextFeaturesForAllSec3", "(", "bert_embedding", ",", "bert_embedding2nlp", ",", "allTextPerSec", ",", "fps", ",", "durationA", ",", "baseOut", ",", "vidName", ")", ":", "\n", "    ", "berstFeaturePerSec", "=", "[", "]", "\n", "berstTokensPerSec", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "allTextPerSec", ")", ")", ":", "\n", "        ", "alltokens", "=", "getAllTokenize", "(", "allTextPerSec", "[", "i", "]", ")", "\n", "\n", "resultBert", "=", "bert_embedding", "(", "alltokens", ")", "\n", "resultBert2", "=", "bert_embedding2nlp", "(", "\" \"", ".", "join", "(", "allTextPerSec", "[", "i", "]", ")", ")", "\n", "tokenArr", ",", "featureArr", "=", "getFeatureArrayFromTokens", "(", "resultBert", ")", "\n", "print", "(", "\"at video :\"", ",", "vidName", ",", "\" on sec: \"", ",", "i", ")", "\n", "berstFeaturePerSec", ".", "append", "(", "featureArr", ")", "\n", "berstTokensPerSec", ".", "append", "(", "tokenArr", ")", "\n", "", "return", "np", ".", "array", "(", "berstTokensPerSec", ")", ",", "np", ".", "array", "(", "berstFeaturePerSec", ")", ",", "np", ".", "array", "(", "resultBert2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.combineStrList": [[134, 139], ["None"], "function", ["None"], ["", "def", "combineStrList", "(", "strLs", ")", ":", "\n", "    ", "finalStr", "=", "\"\"", "\n", "for", "st", "in", "strls", ":", "\n", "        ", "if", "(", "st", "!=", "\"\"", "and", "st", "!=", "\" \"", ")", ":", "\n", "            ", "finalStr", "+=", "st", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getAllTokenize": [[140, 149], ["v.replace().split", "tokenize.append", "v.replace", "e.isalnum"], "function", ["None"], ["", "", "", "def", "getAllTokenize", "(", "lst", ")", ":", "\n", "    ", "tokenize", "=", "[", "]", "\n", "for", "v", "in", "lst", ":", "\n", "        ", "if", "(", "v", "!=", "\"\"", "and", "v", "!=", "\" \"", "and", "v", "!=", "''", "and", "v", "!=", "' '", ")", ":", "\n", "            ", "tokenize2", "=", "v", ".", "replace", "(", "\"\\n\"", ",", "\" \"", ")", ".", "split", "(", "\" \"", ")", "\n", "for", "tk", "in", "tokenize2", ":", "\n", "                ", "tkRefine", "=", "''", ".", "join", "(", "e", "for", "e", "in", "tk", "if", "e", ".", "isalnum", "(", ")", ")", "\n", "tokenize", ".", "append", "(", "tkRefine", ")", "\n", "", "", "", "return", "tokenize", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getFeatureArrayFromTokens": [[150, 157], ["range", "len", "tokenls.append", "featureLs.append", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "getFeatureArrayFromTokens", "(", "resultBert", ")", ":", "\n", "    ", "tokenls", "=", "[", "]", "\n", "featureLs", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "resultBert", ")", ")", ":", "\n", "        ", "tokenls", ".", "append", "(", "resultBert", "[", "i", "]", "[", "0", "]", ")", "\n", "featureLs", ".", "append", "(", "resultBert", "[", "i", "]", "[", "1", "]", ")", "\n", "", "return", "np", ".", "array", "(", "tokenls", ")", ",", "np", ".", "array", "(", "featureLs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.generateTextFeatures.getparts": [[160, 169], ["range", "int", "parts.append", "len"], "function", ["None"], ["", "def", "getparts", "(", "oneLinerText", ",", "size", "=", "1600", ",", "ol", "=", "160", ")", ":", "\n", "    ", "parts", "=", "[", "]", "\n", "poss", "=", "int", "(", "len", "(", "oneLinerText", ")", "/", "size", ")", "+", "1", "\n", "lag", "=", "0", "\n", "for", "i", "in", "range", "(", "poss", ")", ":", "\n", "        ", "if", "(", "i", ">", "0", ")", ":", "\n", "            ", "lag", "=", "ol", "\n", "", "parts", ".", "append", "(", "oneLinerText", "[", "i", "*", "size", "-", "lag", ":", "(", "(", "i", "+", "1", ")", "*", "size", ")", "]", ")", "\n", "", "return", "parts", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getOneHotClasses": [[16, 23], ["range", "numpy.array", "len", "numpy.zeros().astype", "oneHot.append", "numpy.zeros", "int"], "function", ["None"], ["def", "getOneHotClasses", "(", "gt", ",", "numClasses", ")", ":", "\n", "    ", "oneHot", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "gt", ")", ")", ":", "\n", "        ", "curr", "=", "np", ".", "zeros", "(", "numClasses", ")", ".", "astype", "(", "int", ")", "\n", "curr", "[", "int", "(", "gt", "[", "i", "]", "-", "1", ")", "]", "=", "1", "\n", "oneHot", ".", "append", "(", "curr", ")", "\n", "", "return", "np", ".", "array", "(", "oneHot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getFtsFinal": [[24, 30], ["fts.reshape", "numpy.mean"], "function", ["None"], ["", "def", "getFtsFinal", "(", "fts", ",", "inShape", ",", "rsp", ",", "modelName", ")", ":", "\n", "    ", "if", "(", "modelName", "==", "\"ConvLSTM\"", ")", ":", "\n", "        ", "return", "fts", "\n", "", "else", ":", "\n", "        ", "fts1", "=", "fts", ".", "reshape", "(", "(", "fts", ".", "shape", "[", "0", "]", ",", "inShape", "[", "1", "]", ",", "rsp", ")", ")", "\n", "return", "np", ".", "mean", "(", "fts1", ",", "axis", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getFileName": [[31, 38], ["None"], "function", ["None"], ["", "", "def", "getFileName", "(", "featureTag", ")", ":", "\n", "    ", "if", "(", "featureTag", "==", "\"299\"", ")", ":", "\n", "        ", "return", "\"InceptionV3Featues\"", ",", "\"InceptionV3FeatuesFrames\"", "\n", "", "elif", "(", "featureTag", "==", "\"224\"", ")", ":", "\n", "        ", "return", "\"vgg16Featues\"", ",", "\"vgg16FeatuesFrames\"", "\n", "", "else", ":", "\n", "        ", "return", "featureTag", ",", "featureTag", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getTimeElapsed": [[39, 42], ["time.time"], "function", ["None"], ["", "", "def", "getTimeElapsed", "(", "strTime", ")", ":", "\n", "    ", "totalTime", "=", "time", ".", "time", "(", ")", "-", "strTime", "\n", "return", "[", "totalTime", ",", "totalTime", "/", "60", ",", "totalTime", "/", "3600", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getFeatureShape": [[43, 54], ["None"], "function", ["None"], ["", "def", "getFeatureShape", "(", "featureTag", ",", "hist", ")", ":", "\n", "    ", "if", "(", "featureTag", "==", "\"efficientNetB0Featues\"", ")", ":", "\n", "        ", "return", "7", "*", "7", ",", "1280", ",", "(", "hist", ",", "1280", ")", "\n", "", "if", "(", "featureTag", "==", "\"vgg16Featues\"", ")", ":", "\n", "        ", "return", "7", "*", "7", ",", "512", ",", "(", "hist", ",", "512", ")", "\n", "", "if", "(", "featureTag", "==", "\"inceptionV3Featues\"", ")", ":", "\n", "        ", "return", "5", "*", "5", ",", "2048", ",", "(", "hist", ",", "2048", ")", "\n", "", "if", "(", "featureTag", "==", "\"299\"", ")", ":", "\n", "        ", "return", "7", "*", "7", ",", "299", ",", "(", "hist", ",", "299", ",", "299", ",", "3", ")", "\n", "", "if", "(", "featureTag", "==", "\"224\"", ")", ":", "\n", "        ", "return", "7", "*", "7", ",", "299", ",", "(", "hist", ",", "224", ",", "224", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getReshape": [[55, 62], ["fts.reshape", "fts.reshape", "fts.reshape"], "function", ["None"], ["", "", "def", "getReshape", "(", "fts", ",", "inShape", ",", "modelName", ",", "batch", ")", ":", "\n", "    ", "if", "(", "modelName", "==", "\"LSTM\"", "or", "modelName", "==", "\"BiLSTM\"", ")", ":", "\n", "        ", "return", "fts", ".", "reshape", "(", "(", "batch", ",", "inShape", "[", "0", "]", ",", "inShape", "[", "1", "]", ")", ")", "\n", "", "if", "(", "modelName", "==", "\"MLP\"", ")", ":", "\n", "        ", "return", "fts", ".", "reshape", "(", "(", "batch", ",", "inShape", "[", "0", "]", "*", "inShape", "[", "1", "]", ")", ")", "\n", "", "if", "(", "modelName", "==", "\"ConvLSTM\"", ")", ":", "\n", "        ", "return", "fts", ".", "reshape", "(", "(", "batch", ",", "inShape", "[", "0", "]", ",", "inShape", "[", "1", "]", ",", "inShape", "[", "2", "]", ",", "inShape", "[", "3", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getVideoList": [[63, 69], ["pandas.read_csv().values.tolist", "allFilesTvSum.append", "pandas.read_csv"], "function", ["None"], ["", "", "def", "getVideoList", "(", "videoList", ")", ":", "\n", "    ", "dfArr", "=", "pd", ".", "read_csv", "(", "videoList", ",", "header", "=", "None", ",", "sep", "=", "\"JUNAID\"", ")", ".", "values", ".", "tolist", "(", ")", "\n", "allFilesTvSum", "=", "[", "]", "\n", "for", "v", "in", "dfArr", ":", "\n", "        ", "allFilesTvSum", ".", "append", "(", "v", "[", "0", "]", ")", "\n", "", "return", "allFilesTvSum", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getLossAndResults": [[70, 95], ["range", "len", "pickle.load", "pickle.load.reshape", "numpy.mean", "pickle.load", "range", "numpy.square().mean", "numpy.abs().mean", "yNyhatByVideo.append", "testLossLs.append", "testMaeLossLs.append", "numpy.array().mean", "open", "open", "len", "utils.getReshape", "model.predict", "yhatLs.append", "Y.append", "scipy.stats.spearmanr", "scipy.stats.kendalltau", "numpy.square", "numpy.array", "numpy.array", "scipy.stats.rankdata", "scipy.stats.rankdata", "numpy.abs", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getReshape"], ["", "def", "getLossAndResults", "(", "model", ",", "allFilesTvSumTest", ",", "hist", ",", "fbase", ",", "gtbase", ",", "inShape", ",", "rsp", ",", "tvSumBase", ",", "modelName", ")", ":", "\n", "    ", "testLossLs", "=", "[", "]", "\n", "yNyhatByVideo", "=", "[", "]", "\n", "testMaeLossLs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "allFilesTvSumTest", ")", ")", ":", "\n", "        ", "Y", "=", "[", "]", "\n", "yhatLs", "=", "[", "]", "\n", "fts", "=", "pickle", ".", "load", "(", "open", "(", "tvSumBase", "+", "allFilesTvSumTest", "[", "j", "]", "+", "fbase", ",", "\"rb\"", ")", ")", "\n", "fts1", "=", "fts", ".", "reshape", "(", "(", "fts", ".", "shape", "[", "0", "]", ",", "inShape", "[", "1", "]", ",", "rsp", ")", ")", "\n", "fts2", "=", "np", ".", "mean", "(", "fts1", ",", "axis", "=", "2", ")", "\n", "gt", "=", "pickle", ".", "load", "(", "open", "(", "tvSumBase", "+", "allFilesTvSumTest", "[", "j", "]", "+", "gtbase", ",", "\"rb\"", ")", ")", "\n", "for", "h", "in", "range", "(", "hist", ",", "len", "(", "gt", ")", ")", ":", "\n", "            ", "xtest", "=", "getReshape", "(", "fts2", "[", "h", "-", "hist", ":", "h", "]", ",", "inShape", ",", "modelName", ",", "1", ")", "\n", "yhat", "=", "model", ".", "predict", "(", "xtest", ")", "\n", "yhatLs", ".", "append", "(", "yhat", "[", "0", "]", "[", "0", "]", ")", "\n", "Y", ".", "append", "(", "gt", "[", "h", "-", "1", "]", ")", "\n", "", "tMse", "=", "(", "np", ".", "square", "(", "np", ".", "array", "(", "Y", ")", "-", "np", ".", "array", "(", "yhatLs", ")", ")", ")", ".", "mean", "(", "axis", "=", "0", ")", "\n", "pS", "=", "spearmanr", "(", "np", ".", "array", "(", "Y", ")", ",", "np", ".", "array", "(", "yhatLs", ")", ")", "[", "0", "]", "\n", "kT", "=", "kendalltau", "(", "rankdata", "(", "-", "np", ".", "array", "(", "Y", ")", ")", ",", "rankdata", "(", "-", "np", ".", "array", "(", "yhatLs", ")", ")", ")", "[", "0", "]", "\n", "tMae", "=", "(", "np", ".", "abs", "(", "np", ".", "array", "(", "Y", ")", "-", "np", ".", "array", "(", "yhatLs", ")", ")", ")", ".", "mean", "(", "axis", "=", "0", ")", "\n", "yNyhatByVideo", ".", "append", "(", "[", "allFilesTvSumTest", "[", "j", "]", ",", "Y", ",", "yhatLs", "]", ")", "\n", "testLossLs", ".", "append", "(", "[", "tMse", ",", "pS", ",", "kT", "]", ")", "\n", "testMaeLossLs", ".", "append", "(", "tMae", ")", "\n", "testLossMean", "=", "np", ".", "array", "(", "testLossLs", ")", ".", "mean", "(", "axis", "=", "0", ")", "\n", "", "return", "testLossMean", ",", "testLossLs", ",", "yNyhatByVideo", ",", "testMaeLossLs", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.src.utils.getMseLossConvLstm": [[97, 117], ["range", "len", "pickle.load", "pickle.load", "range", "yNyhatByVideo.append", "numpy.square().mean", "numpy.abs().mean", "testLossLsMae.append", "testLossLs.append", "numpy.mean", "open", "open", "len", "fts[].reshape", "model.predict", "yhatLs.append", "Y.append", "numpy.square", "numpy.abs", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "getMseLossConvLstm", "(", "model", ",", "allFilesTvSumTest", ",", "hist", ",", "fbase", ",", "gtbase", ",", "inShape", ",", "rsp", ",", "tvSumBase", ")", ":", "\n", "    ", "testLossLs", "=", "[", "]", "\n", "testLossLsMae", "=", "[", "]", "\n", "yNyhatByVideo", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "allFilesTvSumTest", ")", ")", ":", "\n", "        ", "Y", "=", "[", "]", "\n", "yhatLs", "=", "[", "]", "\n", "fts", "=", "pickle", ".", "load", "(", "open", "(", "tvSumBase", "+", "allFilesTvSumTest", "[", "j", "]", "+", "fbase", ",", "\"rb\"", ")", ")", "\n", "gt", "=", "pickle", ".", "load", "(", "open", "(", "tvSumBase", "+", "allFilesTvSumTest", "[", "j", "]", "+", "gtbase", ",", "\"rb\"", ")", ")", "\n", "for", "h", "in", "range", "(", "hist", ",", "len", "(", "gt", ")", ")", ":", "\n", "            ", "xtest", "=", "fts", "[", "h", "-", "hist", ":", "h", "]", ".", "reshape", "(", "(", "1", ",", "inShape", "[", "0", "]", ",", "inShape", "[", "1", "]", ",", "inShape", "[", "2", "]", ",", "inShape", "[", "3", "]", ")", ")", "\n", "yhat", "=", "model", ".", "predict", "(", "xtest", ")", "\n", "yhatLs", ".", "append", "(", "yhat", "[", "0", "]", "[", "0", "]", ")", "\n", "Y", ".", "append", "(", "gt", "[", "h", "-", "1", "]", ")", "\n", "", "yNyhatByVideo", ".", "append", "(", "[", "allFilesTvSumTest", "[", "j", "]", ",", "Y", ",", "yhatLs", "]", ")", "\n", "tMse", "=", "(", "np", ".", "square", "(", "np", ".", "array", "(", "Y", ")", "-", "np", ".", "array", "(", "yhatLs", ")", ")", ")", ".", "mean", "(", "axis", "=", "0", ")", "\n", "tMae", "=", "(", "np", ".", "abs", "(", "np", ".", "array", "(", "Y", ")", "-", "np", ".", "array", "(", "yhatLs", ")", ")", ")", ".", "mean", "(", "axis", "=", "0", ")", "\n", "testLossLsMae", ".", "append", "(", "tMae", ")", "\n", "testLossLs", ".", "append", "(", "tMse", ")", "\n", "", "return", "np", ".", "mean", "(", "testLossLs", ")", ",", "testLossLs", ",", "yNyhatByVideo", ",", "testLossLsMae", "", "", ""]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidsLists": [[16, 25], ["dataList[].append", "min", "random.sample", "random.sample", "len", "len"], "function", ["None"], ["def", "getVidsLists", "(", "metaData", ",", "balance", "=", "True", ")", ":", "\n", "    ", "dataList", "=", "[", "[", "]", ",", "[", "]", "]", "# 0==real, 1==fake", "\n", "for", "k", "in", "metaData", ":", "\n", "        ", "dataList", "[", "configDict", "[", "metaData", "[", "k", "]", "[", "\"label\"", "]", "]", "]", ".", "append", "(", "k", ")", "\n", "", "if", "(", "balance", ")", ":", "\n", "        ", "minV", "=", "min", "(", "[", "len", "(", "dataList", "[", "configDict", "[", "\"REAL\"", "]", "]", ")", ",", "len", "(", "dataList", "[", "configDict", "[", "\"FAKE\"", "]", "]", ")", "]", ")", "\n", "dataList", "[", "configDict", "[", "\"REAL\"", "]", "]", "=", "random", ".", "sample", "(", "dataList", "[", "configDict", "[", "\"REAL\"", "]", "]", ",", "minV", ")", "\n", "dataList", "[", "configDict", "[", "\"FAKE\"", "]", "]", "=", "random", ".", "sample", "(", "dataList", "[", "configDict", "[", "\"FAKE\"", "]", "]", ",", "minV", ")", "\n", "", "return", "dataList", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.get1DVidLst": [[26, 33], ["videoLoading.getVidsLists", "range", "len", "trainDir.append", "trainDir.append"], "function", ["home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidsLists"], ["", "def", "get1DVidLst", "(", "metaData", ",", "balance", "=", "True", ")", ":", "\n", "    ", "dataList", "=", "getVidsLists", "(", "metaData", ",", "balance", "=", "True", ")", "\n", "trainDir", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "dataList", "[", "configDict", "[", "\"REAL\"", "]", "]", ")", ")", ":", "\n", "        ", "trainDir", ".", "append", "(", "[", "dataList", "[", "configDict", "[", "\"REAL\"", "]", "]", "[", "i", "]", ",", "configDict", "[", "\"REAL\"", "]", "]", ")", "\n", "trainDir", ".", "append", "(", "[", "dataList", "[", "configDict", "[", "\"FAKE\"", "]", "]", "[", "i", "]", ",", "configDict", "[", "\"FAKE\"", "]", "]", ")", "\n", "", "return", "trainDir", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidDirs": [[34, 37], ["glob.glob"], "function", ["None"], ["", "def", "getVidDirs", "(", "rootBase", ")", ":", "\n", "    ", "vidDirs", "=", "glob", ".", "glob", "(", "rootBase", ")", "\n", "return", "vidDirs", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getMetaData": [[38, 41], ["eval", "open().read", "open"], "function", ["None"], ["", "def", "getMetaData", "(", "vidDir", ")", ":", "\n", "    ", "metaData", "=", "eval", "(", "open", "(", "vidDir", "+", "\"metadata.json\"", ",", "\"r\"", ")", ".", "read", "(", ")", ")", "\n", "return", "metaData", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidFrames": [[42, 47], ["moviepy.editor.VideoFileClip", "list", "moviepy.editor.VideoFileClip.iter_frames"], "function", ["None"], ["", "def", "getVidFrames", "(", "vidName", ")", ":", "\n", "    ", "video_clip", "=", "VideoFileClip", "(", "vidName", ")", "\n", "frmAll", "=", "list", "(", "video_clip", ".", "iter_frames", "(", "with_times", "=", "False", ")", ")", "\n", "del", "video_clip", "\n", "return", "frmAll", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVidFramesAndFpsDur": [[48, 54], ["moviepy.editor.VideoFileClip", "list", "moviepy.editor.VideoFileClip.iter_frames"], "function", ["None"], ["", "def", "getVidFramesAndFpsDur", "(", "vidName", ")", ":", "\n", "    ", "video_clip", "=", "VideoFileClip", "(", "vidName", ")", "\n", "frmAll", "=", "list", "(", "video_clip", ".", "iter_frames", "(", "with_times", "=", "False", ")", ")", "\n", "frmAll", ",", "fps", ",", "duration", "=", "frmAll", ",", "video_clip", ".", "fps", ",", "video_clip", ".", "duration", "\n", "del", "video_clip", "\n", "return", "frmAll", ",", "fps", ",", "duration", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getVideoAudio": [[55, 60], ["moviepy.editor.VideoFileClip"], "function", ["None"], ["", "def", "getVideoAudio", "(", "vidName", ")", ":", "\n", "    ", "video_clip", "=", "VideoFileClip", "(", "vidName", ")", "\n", "audioclip", "=", "video_clip", ".", "audio", "\n", "del", "video_clip", "\n", "return", "audioclip", "\n", "\n"]], "home.repos.pwc.inspect_result.VideoAnalysis_EDUVSUM.common.videoLoading.getAudioFramesAndFpsDur": [[61, 68], ["moviepy.editor.VideoFileClip", "list", "audioclip.iter_frames"], "function", ["None"], ["", "def", "getAudioFramesAndFpsDur", "(", "vidName", ")", ":", "\n", "    ", "video_clip", "=", "VideoFileClip", "(", "vidName", ")", "\n", "audioclip", "=", "video_clip", ".", "audio", "\n", "frmAll", "=", "list", "(", "audioclip", ".", "iter_frames", "(", "with_times", "=", "False", ")", ")", "\n", "frmAll", ",", "fps", ",", "duration", "=", "frmAll", ",", "audioclip", ".", "fps", ",", "audioclip", ".", "duration", "\n", "del", "video_clip", "\n", "return", "frmAll", ",", "fps", ",", "duration", "\n", "\n"]]}