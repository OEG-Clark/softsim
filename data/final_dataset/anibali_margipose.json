{"home.repos.pwc.inspect_result.anibali_margipose.margipose.cli.Subcommand.__init__": [[28, 32], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "func", ",", "help", "=", "None", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "help", "=", "help", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.cli.Subcommand.run": [[33, 39], ["cli.Subcommand.func", "cli.common_args_to_opts"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.cli.common_args_to_opts"], ["", "def", "run", "(", "self", ",", "argv", "=", "None", ",", "common_args", "=", "None", ")", ":", "\n", "        ", "if", "argv", "is", "None", ":", "\n", "            ", "argv", "=", "sys", ".", "argv", "\n", "", "if", "common_args", "is", "None", ":", "\n", "            ", "common_args", "=", "Default_Common_Args", "\n", "", "return", "self", ".", "func", "(", "argv", ",", "common_args_to_opts", "(", "common_args", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.cli.create_common_arg_parser": [[7, 14], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "create_common_arg_parser", "(", ")", ":", "\n", "    ", "\"\"\"Create an argument parser for the root CLI command shared by subcommands.\"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "prog", "=", "'margipose'", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "'--device'", ",", "help", "=", "'primary computation device, eg \"cpu\" or \"cuda:0\"'", ",", "\n", "default", "=", "'cuda:0'", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.cli.common_args_to_opts": [[19, 25], ["dict", "torch.device"], "function", ["None"], ["def", "common_args_to_opts", "(", "common_args", ")", ":", "\n", "    ", "\"\"\"Parse common_args into a dict of Python objects.\"\"\"", "\n", "opts", "=", "dict", "(", "\n", "device", "=", "torch", ".", "device", "(", "common_args", ".", "device", ")", ",", "\n", ")", "\n", "return", "opts", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.model_factory.ModelFactory.__init__": [[6, 10], ["abc.ABC.__init__", "semantic_version.Spec"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model_type", ",", "version_spec", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_type", "=", "model_type", "\n", "self", ".", "version_spec", "=", "Spec", "(", "version_spec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.model_factory.ModelFactory.is_for": [[11, 14], ["None"], "methods", ["None"], ["", "def", "is_for", "(", "self", ",", "model_type", ":", "str", ",", "version", ":", "Version", ")", ":", "\n", "        ", "\"\"\"Check if this factory is responsible for the given model type and version.\"\"\"", "\n", "return", "model_type", "==", "self", ".", "model_type", "and", "version", "in", "self", ".", "version_spec", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.model_factory.ModelFactory.create": [[15, 19], ["model_factory.ModelFactory.is_for"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.model_factory.ModelFactory.is_for"], ["", "@", "abstractmethod", "\n", "def", "create", "(", "self", ",", "model_desc", ":", "dict", ")", ":", "\n", "        ", "assert", "self", ".", "is_for", "(", "model_desc", "[", "'type'", "]", ",", "model_desc", "[", "'version'", "]", ")", ",", "'model_desc does not match this factory'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.visualise_predictions": [[15, 36], ["range", "torch.cat.size", "torch.cat", "len", "dataset.input_to_pil_image", "dataset.to_image_space", "margipose.utils.draw_skeleton_2d", "images.append", "torch.ones_like", "torch.cat.narrow", "torch.cat.size"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.input_to_pil_image", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.to_image_space", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.draw_skeleton_2d"], ["def", "visualise_predictions", "(", "preds", ",", "batch", ",", "dataset", ")", ":", "\n", "    ", "\"\"\"Create images with overlaid predictions (for visualisation purposes).\n\n    Args:\n        preds: The predicted skeletons.\n        batch (dict): The sample batch corresponding to the predictions.\n        dataset (PoseDataset): The dataset from which the sample batch originates.\n\n    Returns:\n        A list of images with predicted poses overlaid.\n    \"\"\"", "\n", "if", "preds", ".", "size", "(", "-", "1", ")", "<", "4", ":", "\n", "        ", "preds", "=", "torch", ".", "cat", "(", "[", "preds", ",", "torch", ".", "ones_like", "(", "preds", ".", "narrow", "(", "-", "1", ",", "0", ",", "4", "-", "preds", ".", "size", "(", "-", "1", ")", ")", ")", "]", ",", "-", "1", ")", "\n", "", "images", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "batch", "[", "'input'", "]", ")", ")", ":", "\n", "        ", "img", "=", "dataset", ".", "input_to_pil_image", "(", "batch", "[", "'input'", "]", "[", "i", "]", ")", "\n", "camera_intrinsics", "=", "batch", "[", "'camera_intrinsic'", "]", "[", "i", "]", "\n", "skel", "=", "dataset", ".", "to_image_space", "(", "batch", "[", "'index'", "]", "[", "i", "]", ",", "preds", "[", "i", "]", ",", "camera_intrinsics", ")", "\n", "draw_skeleton_2d", "(", "img", ",", "skel", ",", "dataset", ".", "skeleton_desc", ")", "\n", "images", ".", "append", "(", "img", ")", "\n", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.progress_iter": [[38, 40], ["tqdm.tqdm"], "function", ["None"], ["", "def", "progress_iter", "(", "iterable", ",", "name", ")", ":", "\n", "    ", "return", "tqdm", "(", "iterable", ",", "desc", "=", "'{:10s}'", ".", "format", "(", "name", ")", ",", "leave", "=", "True", ",", "ascii", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.create_showoff_notebook": [[42, 55], ["pyshowoff.Client", "pyshowoff.Client.add_notebook().result", "os.environ.get", "os.environ.get", "os.environ.get", "open", "f.read().strip", "notebook.add_tag().result", "pyshowoff.Client.add_notebook", "f.read", "notebook.add_tag"], "function", ["None"], ["", "def", "create_showoff_notebook", "(", "title", ",", "extra_tags", ")", "->", "pyshowoff", ".", "Notebook", ":", "\n", "    ", "client", "=", "pyshowoff", ".", "Client", "(", "\n", "environ", ".", "get", "(", "'SHOWOFF_URL'", ")", ",", "\n", "environ", ".", "get", "(", "'SHOWOFF_KEY_ID'", ")", ",", "\n", "environ", ".", "get", "(", "'SHOWOFF_SECRET_KEY'", ")", ",", "\n", ")", "\n", "notebook", ":", "pyshowoff", ".", "Notebook", "=", "client", ".", "add_notebook", "(", "title", ")", ".", "result", "(", ")", "\n", "with", "open", "(", "'/etc/hostname'", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "hostname", "=", "f", ".", "read", "(", ")", ".", "strip", "(", ")", "\n", "", "tags", "=", "[", "hostname", "]", "+", "extra_tags", "\n", "for", "tag", "in", "tags", ":", "\n", "        ", "notebook", ".", "add_tag", "(", "tag", ")", ".", "result", "(", ")", "\n", "", "return", "notebook", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.learning_schedule": [[57, 79], ["torch.optim.lr_scheduler.MultiStepLR", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.RMSprop", "Exception"], "function", ["None"], ["", "def", "learning_schedule", "(", "params", ",", "optim_algorithm", ",", "lr", ",", "milestones", ",", "gamma", ")", ":", "\n", "    ", "\"\"\"Creates an optimizer and learning rate scheduler.\n\n    Args:\n        params: Model parameters\n        optim_algorithm (str): Name of the optimisation algorithm\n        lr: Initial learning rate\n        milestones: Schedule milestones\n        gamma: Learning rate decay factor\n\n    Returns:\n        optim.lr_scheduler._LRScheduler: Learning rate scheduler\n    \"\"\"", "\n", "if", "optim_algorithm", "==", "'sgd'", ":", "\n", "        ", "optimiser", "=", "optim", ".", "SGD", "(", "params", ",", "lr", "=", "lr", ")", "\n", "", "elif", "optim_algorithm", "==", "'nesterov'", ":", "\n", "        ", "optimiser", "=", "optim", ".", "SGD", "(", "params", ",", "lr", "=", "lr", ",", "momentum", "=", "0.8", ",", "nesterov", "=", "True", ")", "\n", "", "elif", "optim_algorithm", "==", "'rmsprop'", ":", "\n", "        ", "optimiser", "=", "optim", ".", "RMSprop", "(", "params", ",", "lr", "=", "lr", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'unrecognised optimisation algorithm: '", "+", "optim_algorithm", ")", "\n", "", "return", "optim", ".", "lr_scheduler", ".", "MultiStepLR", "(", "optimiser", ",", "milestones", "=", "milestones", ",", "gamma", "=", "gamma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers._create_dataloader": [[81, 94], ["margipose.data.make_dataloader", "margipose.data.get_dataset.get_dataset", "len", "len", "margipose.data.mixed.MixedPoseDataset", "margipose.data.mixed.MixedPoseDataset.sampler"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.make_dataloader", "home.repos.pwc.inspect_result.anibali_margipose.data.get_dataset.get_dataset", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.sampler"], ["", "def", "_create_dataloader", "(", "dataset_names", ",", "data_specs", ",", "batch_size", ",", "examples_per_epoch", ",", "use_aug", ")", ":", "\n", "    ", "datasets", "=", "[", "get_dataset", "(", "name", ",", "data_specs", ",", "use_aug", "=", "use_aug", ")", "for", "name", "in", "dataset_names", "]", "\n", "assert", "len", "(", "datasets", ")", ">", "0", ",", "'at least one dataset must be specified'", "\n", "if", "len", "(", "datasets", ")", "==", "1", ":", "\n", "        ", "dataset", "=", "datasets", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "dataset", "=", "MixedPoseDataset", "(", "datasets", ")", "\n", "", "return", "make_dataloader", "(", "\n", "dataset", ",", "\n", "sampler", "=", "dataset", ".", "sampler", "(", "examples_per_epoch", "=", "examples_per_epoch", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "drop_last", "=", "True", ",", "\n", "num_workers", "=", "4", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.create_train_dataloader": [[97, 101], ["train_helpers._create_dataloader"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers._create_dataloader"], ["", "def", "create_train_dataloader", "(", "dataset_names", ",", "data_specs", ",", "batch_size", ",", "examples_per_epoch", ",", "\n", "use_aug", "=", "True", ")", ":", "\n", "    ", "return", "_create_dataloader", "(", "dataset_names", ",", "data_specs", ",", "batch_size", ",", "examples_per_epoch", ",", "\n", "use_aug", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.create_val_dataloader": [[103, 106], ["train_helpers._create_dataloader"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers._create_dataloader"], ["", "def", "create_val_dataloader", "(", "dataset_names", ",", "data_specs", ",", "batch_size", ",", "examples_per_epoch", ")", ":", "\n", "    ", "return", "_create_dataloader", "(", "dataset_names", ",", "data_specs", ",", "batch_size", ",", "examples_per_epoch", ",", "\n", "use_aug", "=", "False", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.mpjpe": [[9, 14], ["margipose.dsntnn.euclidean_losses", "dists.gather.mean().item", "dists.gather.gather", "torch.LongTensor", "dists.gather.mean"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.euclidean_losses"], ["def", "mpjpe", "(", "actual", ",", "expected", ",", "included_joints", "=", "None", ")", ":", "\n", "    ", "dists", "=", "euclidean_losses", "(", "actual", ",", "expected", ")", "\n", "if", "included_joints", "is", "not", "None", ":", "\n", "        ", "dists", "=", "dists", ".", "gather", "(", "-", "1", ",", "torch", ".", "LongTensor", "(", "included_joints", ")", ")", "\n", "", "return", "dists", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.pck": [[16, 21], ["margipose.dsntnn.euclidean_losses", "dists.gather.gather", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.euclidean_losses"], ["", "def", "pck", "(", "actual", ",", "expected", ",", "included_joints", "=", "None", ",", "threshold", "=", "150", ")", ":", "\n", "    ", "dists", "=", "euclidean_losses", "(", "actual", ",", "expected", ")", "\n", "if", "included_joints", "is", "not", "None", ":", "\n", "        ", "dists", "=", "dists", ".", "gather", "(", "-", "1", ",", "torch", ".", "LongTensor", "(", "included_joints", ")", ")", "\n", "", "return", "(", "dists", "<", "threshold", ")", ".", "double", "(", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.auc": [[23, 32], ["torch.linspace().tolist", "torch.DoubleTensor", "enumerate", "torch.DoubleTensor.mean().item", "len", "eval.pck", "torch.linspace", "torch.DoubleTensor.mean"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.pck"], ["", "def", "auc", "(", "actual", ",", "expected", ",", "included_joints", "=", "None", ")", ":", "\n", "# This range of thresholds mimics `mpii_compute_3d_pck.m`, which is provided as part of the", "\n", "# MPI-INF-3DHP test data release.", "\n", "    ", "thresholds", "=", "torch", ".", "linspace", "(", "0", ",", "150", ",", "31", ")", ".", "tolist", "(", ")", "\n", "\n", "pck_values", "=", "torch", ".", "DoubleTensor", "(", "len", "(", "thresholds", ")", ")", "\n", "for", "i", ",", "threshold", "in", "enumerate", "(", "thresholds", ")", ":", "\n", "        ", "pck_values", "[", "i", "]", "=", "pck", "(", "actual", ",", "expected", ",", "included_joints", ",", "threshold", "=", "threshold", ")", "\n", "", "return", "pck_values", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.prepare_for_3d_evaluation": [[34, 68], ["dataset.untransform_skeleton", "margipose.data.skeleton.absolute_to_root_relative", "margipose.data.skeleton.absolute_to_root_relative", "dataset.denormalise_with_depth", "dataset.denormalise_with_skeleton_height", "dataset.to_canonical_skeleton", "dataset.to_canonical_skeleton", "pose3d_utils.coords.ensure_cartesian", "pose3d_utils.coords.ensure_cartesian"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.untransform_skeleton", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_root_relative", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_root_relative", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise_with_depth", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise_with_skeleton_height", "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.to_canonical_skeleton", "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.to_canonical_skeleton"], ["", "def", "prepare_for_3d_evaluation", "(", "original_skel", ",", "norm_pred", ",", "dataset", ",", "camera_intrinsics", ",", "transform_opts", ",", "\n", "known_depth", "=", "False", ")", ":", "\n", "    ", "\"\"\"Process predictions and ground truth into root-relative original skeleton space.\n\n    Args:\n        original_skel (torch.Tensor): Ground truth skeleton joint locations in the original\n                                      coordinate space.\n        norm_pred (torch.Tensor): Normalised predictions for skeleton joints.\n        dataset:\n        camera_intrinsics:\n        transform_opts:\n        known_depth (bool): If true, use the ground truth depth of the root joint. If false,\n                            use skeleton height of 92cm knee-neck to infer depth.\n\n    Returns:\n        Expected and actual skeletons in original coordinate space.\n    \"\"\"", "\n", "if", "known_depth", ":", "\n", "        ", "z_ref", "=", "original_skel", "[", "dataset", ".", "skeleton_desc", ".", "root_joint_id", "]", "[", "2", "]", "\n", "denorm_skel", "=", "dataset", ".", "denormalise_with_depth", "(", "norm_pred", ",", "z_ref", ",", "camera_intrinsics", ")", "\n", "", "else", ":", "\n", "        ", "denorm_skel", "=", "dataset", ".", "denormalise_with_skeleton_height", "(", "\n", "norm_pred", ",", "camera_intrinsics", ",", "transform_opts", "\n", ")", "\n", "", "pred_skel", "=", "dataset", ".", "untransform_skeleton", "(", "denorm_skel", ",", "transform_opts", ")", "\n", "actual", "=", "absolute_to_root_relative", "(", "\n", "dataset", ".", "to_canonical_skeleton", "(", "ensure_cartesian", "(", "pred_skel", ",", "d", "=", "3", ")", ")", ",", "\n", "CanonicalSkeletonDesc", ".", "root_joint_id", "\n", ")", "\n", "expected", "=", "absolute_to_root_relative", "(", "\n", "dataset", ".", "to_canonical_skeleton", "(", "ensure_cartesian", "(", "original_skel", ",", "d", "=", "3", ")", ")", ",", "\n", "CanonicalSkeletonDesc", ".", "root_joint_id", "\n", ")", "\n", "return", "expected", ",", "actual", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.gather_3d_metrics": [[70, 85], ["eval.mpjpe", "eval.pck", "eval.auc", "margipose.data.skeleton.apply_rigid_alignment", "eval.mpjpe", "eval.pck", "eval.auc", "dict"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.mpjpe", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.pck", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.auc", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.apply_rigid_alignment", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.mpjpe", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.pck", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.auc"], ["", "def", "gather_3d_metrics", "(", "expected", ",", "actual", ",", "included_joints", "=", "None", ")", ":", "\n", "    ", "unaligned_mpjpe", "=", "mpjpe", "(", "actual", ",", "expected", ",", "included_joints", ")", "\n", "unaligned_pck", "=", "pck", "(", "actual", ",", "expected", ",", "included_joints", ")", "\n", "unaligned_auc", "=", "auc", "(", "actual", ",", "expected", ",", "included_joints", ")", "\n", "aligned", "=", "apply_rigid_alignment", "(", "actual", ",", "expected", ")", "\n", "aligned_mpjpe", "=", "mpjpe", "(", "aligned", ",", "expected", ",", "included_joints", ")", "\n", "aligned_pck", "=", "pck", "(", "aligned", ",", "expected", ",", "included_joints", ")", "\n", "aligned_auc", "=", "auc", "(", "aligned", ",", "expected", ",", "included_joints", ")", "\n", "return", "dict", "(", "\n", "mpjpe", "=", "unaligned_mpjpe", ",", "\n", "pck", "=", "unaligned_pck", ",", "\n", "auc", "=", "unaligned_auc", ",", "\n", "aligned_mpjpe", "=", "aligned_mpjpe", ",", "\n", "aligned_pck", "=", "aligned_pck", ",", "\n", "aligned_auc", "=", "aligned_auc", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.calculate_pckh_distance": [[88, 90], ["torch.dist"], "function", ["None"], ["", "def", "calculate_pckh_distance", "(", "pred", ",", "target", ",", "head_length", ")", ":", "\n", "    ", "return", "torch", ".", "dist", "(", "target", ",", "pred", ")", "/", "head_length", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.ImageSpecs.__init__": [[30, 37], ["isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "resolution", ",", "mean", "=", "None", ",", "stddev", "=", "None", ")", ":", "\n", "        ", "if", "isinstance", "(", "resolution", ",", "Sequence", ")", ":", "\n", "            ", "self", ".", "height", ",", "self", ".", "width", "=", "resolution", "\n", "", "else", ":", "\n", "            ", "self", ".", "height", "=", "self", ".", "width", "=", "resolution", "\n", "", "self", ".", "mean", "=", "mean", "\n", "self", ".", "stddev", "=", "stddev", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.ImageSpecs.convert": [[38, 40], ["data_specs.normalize_pixels", "torchvision.to_tensor"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.normalize_pixels"], ["", "def", "convert", "(", "self", ",", "img", ":", "PIL", ".", "Image", ".", "Image", ")", ":", "\n", "        ", "return", "normalize_pixels", "(", "tr", ".", "to_tensor", "(", "img", ")", ",", "self", ".", "mean", ",", "self", ".", "stddev", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.ImageSpecs.unconvert": [[41, 43], ["torchvision.to_pil_image", "data_specs.denormalize_pixels", "tensor.clone"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.denormalize_pixels"], ["", "def", "unconvert", "(", "self", ",", "tensor", ")", ":", "\n", "        ", "return", "tr", ".", "to_pil_image", "(", "denormalize_pixels", "(", "tensor", ".", "clone", "(", ")", ",", "self", ".", "mean", ",", "self", ".", "stddev", ")", ",", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.JointsSpecs.__init__": [[46, 49], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "skeleton_desc", ",", "n_dims", "=", "3", ")", ":", "\n", "        ", "self", ".", "skeleton_desc", "=", "skeleton_desc", "\n", "self", ".", "n_dims", "=", "n_dims", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.DataSpecs.__init__": [[54, 57], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "input_specs", ",", "output_specs", ")", ":", "\n", "        ", "self", ".", "_input_specs", "=", "input_specs", "\n", "self", ".", "_output_specs", "=", "output_specs", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.DataSpecs.input_specs": [[58, 61], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "input_specs", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_input_specs", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.DataSpecs.output_specs": [[62, 65], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "output_specs", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_output_specs", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.normalize_pixels": [[6, 14], ["zip", "zip", "t.sub_", "t.div_"], "function", ["None"], ["def", "normalize_pixels", "(", "tensor", ",", "mean", ",", "std", ")", ":", "\n", "    ", "if", "mean", "is", "not", "None", ":", "\n", "        ", "for", "t", ",", "m", "in", "zip", "(", "tensor", ",", "mean", ")", ":", "\n", "            ", "t", ".", "sub_", "(", "m", ")", "\n", "", "", "if", "std", "is", "not", "None", ":", "\n", "        ", "for", "t", ",", "s", "in", "zip", "(", "tensor", ",", "std", ")", ":", "\n", "            ", "t", ".", "div_", "(", "s", ")", "\n", "", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.denormalize_pixels": [[16, 24], ["zip", "zip", "t.mul_", "t.add_"], "function", ["None"], ["", "def", "denormalize_pixels", "(", "tensor", ",", "mean", ",", "std", ")", ":", "\n", "    ", "if", "std", "is", "not", "None", ":", "\n", "        ", "for", "t", ",", "s", "in", "zip", "(", "tensor", ",", "std", ")", ":", "\n", "            ", "t", ".", "mul_", "(", "s", ")", "\n", "", "", "if", "mean", "is", "not", "None", ":", "\n", "        ", "for", "t", ",", "m", "in", "zip", "(", "tensor", ",", "mean", ")", ":", "\n", "            ", "t", ".", "add_", "(", "m", ")", "\n", "", "", "return", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.hyperparam_scheduler.HyperparameterScheduler.__init__": [[25, 36], ["hyperparam_milestones.items", "numpy.array", "numpy.array", "len", "len", "len", "hyperparam_milestones.items"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "ts", ",", "hyperparam_milestones", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "hyperparam_milestones", ".", "items", "(", ")", ":", "\n", "            ", "assert", "len", "(", "v", ")", "==", "len", "(", "ts", ")", ",", "'expected {} milestones for hyperparameter \"{}\"'", ".", "format", "(", "len", "(", "ts", ")", ",", "k", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "                ", "assert", "k", "in", "param_group", ",", "'\"{}\" is not an optimizer hyperparameter'", ".", "format", "(", "k", ")", "\n", "", "", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "ts", "=", "np", ".", "array", "(", "ts", ")", "\n", "self", ".", "hyperparam_milestones", "=", "{", "k", ":", "np", ".", "array", "(", "v", ")", "for", "k", ",", "v", "in", "hyperparam_milestones", ".", "items", "(", ")", "}", "\n", "self", ".", "batch_count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.hyperparam_scheduler.HyperparameterScheduler.batch_step": [[37, 43], ["hyperparam_scheduler.HyperparameterScheduler.hyperparam_milestones.items", "float", "numpy.interp"], "methods", ["None"], ["", "def", "batch_step", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch_count", "+=", "1", "\n", "for", "hyperparam_name", ",", "milestones", "in", "self", ".", "hyperparam_milestones", ".", "items", "(", ")", ":", "\n", "            ", "value", "=", "float", "(", "np", ".", "interp", "(", "self", ".", "batch_count", ",", "self", ".", "ts", ",", "milestones", ")", ")", "\n", "for", "param_group", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "                ", "param_group", "[", "hyperparam_name", "]", "=", "value", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.hyperparam_scheduler.make_1cycle": [[6, 20], ["min", "hyperparam_scheduler.HyperparameterScheduler"], "function", ["None"], ["def", "make_1cycle", "(", "optimizer", ",", "max_iters", ",", "lr_max", ",", "momentum", "=", "0", ")", ":", "\n", "    ", "lr_min", "=", "lr_max", "*", "1e-1", "\n", "lr_nihil", "=", "lr_min", "*", "1e-3", "\n", "t3", "=", "max_iters", "\n", "t2", "=", "0.9", "*", "t3", "\n", "t1", "=", "t2", "/", "2", "\n", "m_max", "=", "momentum", "\n", "m_min", "=", "min", "(", "m_max", ",", "0.85", ")", "\n", "return", "HyperparameterScheduler", "(", "\n", "optimizer", ",", "\n", "ts", "=", "[", "1", ",", "t1", ",", "t2", ",", "t3", "]", ",", "\n", "hyperparam_milestones", "=", "{", "\n", "'lr'", ":", "[", "lr_min", ",", "lr_max", ",", "lr_min", ",", "lr_nihil", "]", ",", "\n", "'momentum'", ":", "[", "m_max", ",", "m_min", ",", "m_max", ",", "m_max", "]", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.nn_helpers.init_parameters": [[7, 22], ["net.modules", "isinstance", "torch.nn.init.kaiming_normal_", "isinstance", "torch.nn.init.constant_", "torch.nn.init.normal_", "isinstance", "math.sqrt", "torch.nn.init.normal_", "torch.nn.init.constant_", "math.sqrt", "torch.nn.init.constant_", "m.weight.size", "m.bias.size"], "function", ["None"], ["def", "init_parameters", "(", "net", ")", ":", "\n", "    ", "for", "m", "in", "net", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "_ConvNd", ")", ":", "\n", "            ", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "0", ",", "'fan_out'", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "# Kaiming initialisation for linear layers", "\n", "            ", "init", ".", "normal_", "(", "m", ".", "weight", ",", "0", ",", "sqrt", "(", "2.0", "/", "m", ".", "weight", ".", "size", "(", "0", ")", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "init", ".", "normal_", "(", "m", ".", "bias", ",", "0", ",", "sqrt", "(", "2.0", "/", "m", ".", "bias", ".", "size", "(", "0", ")", ")", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                ", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._normalized_linspace": [[12, 37], ["isinstance", "length.to.to", "torch.arange", "torch.arange"], "function", ["None"], ["def", "_normalized_linspace", "(", "length", ",", "dtype", "=", "None", ",", "device", "=", "None", ")", ":", "\n", "    ", "\"\"\"Generate a vector with values ranging from -1 to 1.\n\n    Note that the values correspond to the \"centre\" of each cell, so\n    -1 and 1 are always conceptually outside the bounds of the vector.\n    For example, if length = 4, the following vector is generated:\n\n    ```text\n     [ -0.75, -0.25,  0.25,  0.75 ]\n     ^              ^             ^\n    -1              0             1\n    ```\n\n    Args:\n        length: The length of the vector\n        dtype: Data type of vector elements\n        device: Device to store vector on\n\n    Returns:\n        The generated vector\n    \"\"\"", "\n", "if", "isinstance", "(", "length", ",", "torch", ".", "Tensor", ")", ":", "\n", "        ", "length", "=", "length", ".", "to", "(", "device", ",", "dtype", ")", "\n", "", "first", "=", "-", "(", "length", "-", "1.0", ")", "/", "length", "\n", "return", "torch", ".", "arange", "(", "length", ",", "dtype", "=", "dtype", ",", "device", "=", "device", ")", "*", "(", "2.0", "/", "length", ")", "+", "first", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._coord_expectation": [[39, 63], ["dsntnn._normalized_linspace", "heatmaps.view", "range", "summed.sum.view", "summed.sum.mul().sum", "expectations.view.view", "heatmaps.size", "transform", "summed.sum.size", "heatmaps.dim", "summed.sum.sum", "summed.sum.mul", "heatmaps.size", "transform.view", "heatmaps.size", "transform.size"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._normalized_linspace"], ["", "def", "_coord_expectation", "(", "heatmaps", ",", "dim", ",", "transform", "=", "None", ")", ":", "\n", "    ", "\"\"\"Calculate the coordinate expected value along an axis.\n\n    Args:\n        heatmaps: Normalized heatmaps (probabilities)\n        dim: Dimension of the coordinate axis\n        transform: Coordinate transformation function, defaults to identity\n\n    Returns:\n        The coordinate expected value, `E[transform(X)]`\n    \"\"\"", "\n", "\n", "dim_size", "=", "heatmaps", ".", "size", "(", ")", "[", "dim", "]", "\n", "own_coords", "=", "_normalized_linspace", "(", "dim_size", ",", "dtype", "=", "heatmaps", ".", "dtype", ",", "device", "=", "heatmaps", ".", "device", ")", "\n", "if", "transform", ":", "\n", "        ", "own_coords", "=", "transform", "(", "own_coords", ")", "\n", "", "summed", "=", "heatmaps", ".", "view", "(", "-", "1", ",", "*", "heatmaps", ".", "size", "(", ")", "[", "2", ":", "]", ")", "\n", "for", "i", "in", "range", "(", "2", "-", "heatmaps", ".", "dim", "(", ")", ",", "0", ")", ":", "\n", "        ", "if", "i", "!=", "dim", ":", "\n", "            ", "summed", "=", "summed", ".", "sum", "(", "i", ",", "keepdim", "=", "True", ")", "\n", "", "", "summed", "=", "summed", ".", "view", "(", "summed", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "expectations", "=", "summed", ".", "mul", "(", "own_coords", ".", "view", "(", "-", "1", ",", "own_coords", ".", "size", "(", "-", "1", ")", ")", ")", ".", "sum", "(", "-", "1", ")", "\n", "expectations", "=", "expectations", ".", "view", "(", "*", "heatmaps", ".", "size", "(", ")", "[", ":", "2", "]", ")", "\n", "return", "expectations", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._coord_variance": [[65, 82], ["dsntnn._coord_expectation", "dsntnn._coord_expectation"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._coord_expectation", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._coord_expectation"], ["", "def", "_coord_variance", "(", "heatmaps", ",", "dim", ")", ":", "\n", "    ", "\"\"\"Calculate the coordinate variance along an axis.\n\n    Args:\n        heatmaps: Normalized heatmaps (probabilities)\n        dim: Dimension of the coordinate axis\n\n    Returns:\n        The coordinate variance, `Var[X] =  E[(X - E[x])^2]`\n    \"\"\"", "\n", "\n", "# mu_x = E[X]", "\n", "mu_x", "=", "_coord_expectation", "(", "heatmaps", ",", "dim", ")", "\n", "# var_x = E[(X - mu_x)^2]", "\n", "var_x", "=", "_coord_expectation", "(", "heatmaps", ",", "dim", ",", "transform", "=", "lambda", "x", ":", "(", "x", "-", "mu_x", ")", "**", "2", ")", "\n", "\n", "return", "var_x", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.dsnt": [[84, 97], ["range", "torch.stack", "torch.stack", "heatmaps.dim", "dsntnn._coord_expectation"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._coord_expectation"], ["", "def", "dsnt", "(", "heatmaps", ")", ":", "\n", "    ", "\"\"\"Differentiable spatial to numerical transform.\n\n    Args:\n        heatmaps (torch.Tensor): Spatial representation of locations\n\n    Returns:\n        Numerical coordinates corresponding to the locations in the heatmaps.\n    \"\"\"", "\n", "\n", "dim_range", "=", "range", "(", "-", "1", ",", "1", "-", "heatmaps", ".", "dim", "(", ")", ",", "-", "1", ")", "\n", "mu", "=", "torch", ".", "stack", "(", "[", "_coord_expectation", "(", "heatmaps", ",", "dim", ")", "for", "dim", "in", "dim_range", "]", ",", "-", "1", ")", "\n", "return", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.average_loss": [[99, 122], ["isinstance", "mask.sum", "losses.numel", "max", "denom.clamp.clamp", "losses.sum", "mask.size", "losses.size"], "function", ["None"], ["", "def", "average_loss", "(", "losses", ",", "mask", "=", "None", ")", ":", "\n", "    ", "\"\"\"Calculate the average of per-location losses.\n\n    Args:\n        losses (Tensor): Predictions (B x L)\n        mask (Tensor, optional): Mask of points to include in the loss calculation\n            (B x L), defaults to including everything\n    \"\"\"", "\n", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "assert", "mask", ".", "size", "(", ")", "==", "losses", ".", "size", "(", ")", ",", "'mask must be the same size as losses'", "\n", "losses", "=", "losses", "*", "mask", "\n", "denom", "=", "mask", ".", "sum", "(", ")", "\n", "", "else", ":", "\n", "        ", "denom", "=", "losses", ".", "numel", "(", ")", "\n", "\n", "# Prevent division by zero", "\n", "", "if", "isinstance", "(", "denom", ",", "int", ")", ":", "\n", "        ", "denom", "=", "max", "(", "denom", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "denom", "=", "denom", ".", "clamp", "(", "1", ")", "\n", "\n", "", "return", "losses", ".", "sum", "(", ")", "/", "denom", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.flat_softmax": [[124, 131], ["inp.size", "inp.view", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax.view", "functools.reduce"], "function", ["None"], ["", "def", "flat_softmax", "(", "inp", ")", ":", "\n", "    ", "\"\"\"Compute the softmax with all but the first two tensor dimensions combined.\"\"\"", "\n", "\n", "orig_size", "=", "inp", ".", "size", "(", ")", "\n", "flat", "=", "inp", ".", "view", "(", "-", "1", ",", "reduce", "(", "mul", ",", "orig_size", "[", "2", ":", "]", ")", ")", "\n", "flat", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "flat", ",", "-", "1", ")", "\n", "return", "flat", ".", "view", "(", "*", "orig_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.euclidean_losses": [[133, 152], ["diff.pow().sum", "diff.pow().sum.sqrt", "actual.size", "target.size", "diff.pow"], "function", ["None"], ["", "def", "euclidean_losses", "(", "actual", ",", "target", ")", ":", "\n", "    ", "\"\"\"Calculate the average Euclidean loss for multi-point samples.\n\n    Each sample must contain `n` points, each with `d` dimensions. For example,\n    in the MPII human pose estimation task n=16 (16 joint locations) and\n    d=2 (locations are 2D).\n\n    Args:\n        actual (Tensor): Predictions (B x L x D)\n        target (Tensor): Ground truth target (B x L x D)\n    \"\"\"", "\n", "\n", "assert", "actual", ".", "size", "(", ")", "==", "target", ".", "size", "(", ")", ",", "'input tensors must have the same size'", "\n", "\n", "# Calculate Euclidean distances between actual and target locations", "\n", "diff", "=", "actual", "-", "target", "\n", "dist_sq", "=", "diff", ".", "pow", "(", "2", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "False", ")", "\n", "dist", "=", "dist_sq", ".", "sqrt", "(", ")", "\n", "return", "dist", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.make_gauss": [[154, 196], ["range", "functools.reduce", "dsntnn._normalized_linspace", "functools.reduce", "reversed", "zip", "reversed", "zip", "functools.reduce", "len", "means.split", "filter", "zip", "t.sum", "t.unsqueeze"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._normalized_linspace"], ["", "def", "make_gauss", "(", "means", ",", "size", ",", "sigma", ",", "normalize", "=", "True", ")", ":", "\n", "    ", "\"\"\"Draw Gaussians.\n\n    This function is differential with respect to means.\n\n    Note on ordering: `size` expects [..., depth, height, width], whereas\n    `means` expects x, y, z, ...\n\n    Args:\n        means: coordinates containing the Gaussian means (units: normalized coordinates)\n        size: size of the generated images (units: pixels)\n        sigma: standard deviation of the Gaussian (units: pixels)\n        normalize: when set to True, the returned Gaussians will be normalized\n    \"\"\"", "\n", "\n", "dim_range", "=", "range", "(", "-", "1", ",", "-", "(", "len", "(", "size", ")", "+", "1", ")", ",", "-", "1", ")", "\n", "coords_list", "=", "[", "_normalized_linspace", "(", "s", ",", "dtype", "=", "means", ".", "dtype", ",", "device", "=", "means", ".", "device", ")", "\n", "for", "s", "in", "reversed", "(", "size", ")", "]", "\n", "\n", "# PDF = exp(-(x - \\mu)^2 / (2 \\sigma^2))", "\n", "\n", "# dists <- (x - \\mu)^2", "\n", "dists", "=", "[", "(", "x", "-", "mean", ")", "**", "2", "for", "x", ",", "mean", "in", "zip", "(", "coords_list", ",", "means", ".", "split", "(", "1", ",", "-", "1", ")", ")", "]", "\n", "\n", "# ks <- -1 / (2 \\sigma^2)", "\n", "stddevs", "=", "[", "2", "*", "sigma", "/", "s", "for", "s", "in", "reversed", "(", "size", ")", "]", "\n", "ks", "=", "[", "-", "0.5", "*", "(", "1", "/", "stddev", ")", "**", "2", "for", "stddev", "in", "stddevs", "]", "\n", "\n", "exps", "=", "[", "(", "dist", "*", "k", ")", ".", "exp", "(", ")", "for", "k", ",", "dist", "in", "zip", "(", "ks", ",", "dists", ")", "]", "\n", "\n", "# Combine dimensions of the Gaussian", "\n", "gauss", "=", "reduce", "(", "mul", ",", "[", "\n", "reduce", "(", "lambda", "t", ",", "d", ":", "t", ".", "unsqueeze", "(", "d", ")", ",", "filter", "(", "lambda", "d", ":", "d", "!=", "dim", ",", "dim_range", ")", ",", "dist", ")", "\n", "for", "dim", ",", "dist", "in", "zip", "(", "dim_range", ",", "exps", ")", "\n", "]", ")", "\n", "\n", "if", "not", "normalize", ":", "\n", "        ", "return", "gauss", "\n", "\n", "# Normalize the Gaussians", "\n", "", "val_sum", "=", "reduce", "(", "lambda", "t", ",", "dim", ":", "t", ".", "sum", "(", "dim", ",", "keepdim", "=", "True", ")", ",", "dim_range", ",", "gauss", ")", "+", "1e-24", "\n", "return", "gauss", "/", "val_sum", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._kl": [[198, 203], ["functools.reduce", "range", "t.sum"], "function", ["None"], ["", "def", "_kl", "(", "p", ",", "q", ",", "ndims", ")", ":", "\n", "    ", "eps", "=", "1e-24", "\n", "unsummed_kl", "=", "p", "*", "(", "(", "p", "+", "eps", ")", ".", "log", "(", ")", "-", "(", "q", "+", "eps", ")", ".", "log", "(", ")", ")", "\n", "kl_values", "=", "reduce", "(", "lambda", "t", ",", "_", ":", "t", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "False", ")", ",", "range", "(", "ndims", ")", ",", "unsummed_kl", ")", "\n", "return", "kl_values", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._js": [[205, 208], ["dsntnn._kl", "dsntnn._kl"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._kl", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._kl"], ["", "def", "_js", "(", "p", ",", "q", ",", "ndims", ")", ":", "\n", "    ", "m", "=", "0.5", "*", "(", "p", "+", "q", ")", "\n", "return", "0.5", "*", "_kl", "(", "p", ",", "m", ",", "ndims", ")", "+", "0.5", "*", "_kl", "(", "q", ",", "m", ",", "ndims", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._divergence_reg_losses": [[210, 218], ["mu_t.size", "dsntnn.make_gauss", "heatmaps.dim", "heatmaps.size", "mu_t.size", "heatmaps.size", "dsntnn._js"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.make_gauss", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._js"], ["", "def", "_divergence_reg_losses", "(", "heatmaps", ",", "mu_t", ",", "sigma_t", ",", "divergence", ")", ":", "\n", "    ", "ndims", "=", "mu_t", ".", "size", "(", "-", "1", ")", "\n", "assert", "heatmaps", ".", "dim", "(", ")", "==", "ndims", "+", "2", ",", "'expected heatmaps to be a {}D tensor'", ".", "format", "(", "ndims", "+", "2", ")", "\n", "assert", "heatmaps", ".", "size", "(", ")", "[", ":", "-", "ndims", "]", "==", "mu_t", ".", "size", "(", ")", "[", ":", "-", "1", "]", "\n", "\n", "gauss", "=", "make_gauss", "(", "mu_t", ",", "heatmaps", ".", "size", "(", ")", "[", "2", ":", "]", ",", "sigma_t", ")", "\n", "divergences", "=", "divergence", "(", "heatmaps", ",", "gauss", ",", "ndims", ")", "\n", "return", "divergences", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.js_reg_losses": [[220, 233], ["dsntnn._divergence_reg_losses"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn._divergence_reg_losses"], ["", "def", "js_reg_losses", "(", "heatmaps", ",", "mu_t", ",", "sigma_t", ")", ":", "\n", "    ", "\"\"\"Calculate Jensen-Shannon divergences between heatmaps and target Gaussians.\n\n    Args:\n        heatmaps (torch.Tensor): Heatmaps generated by the model\n        mu_t (torch.Tensor): Centers of the target Gaussians (in normalized units)\n        sigma_t (float): Standard deviation of the target Gaussians (in pixels)\n\n    Returns:\n        Per-location JS divergences.\n    \"\"\"", "\n", "\n", "return", "_divergence_reg_losses", "(", "heatmaps", ",", "mu_t", ",", "sigma_t", ",", "_js", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.seed_all": [[12, 17], ["random.seed", "numpy.random.seed", "torch.manual_seed"], "function", ["None"], ["def", "seed_all", "(", "seed", ")", ":", "\n", "    ", "\"\"\"Seed all random number generators.\"\"\"", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.init_algorithms": [[19, 25], ["None"], "function", ["None"], ["", "def", "init_algorithms", "(", "deterministic", "=", "False", ")", ":", "\n", "    ", "if", "deterministic", ":", "\n", "        ", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "", "else", ":", "\n", "        ", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "False", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils._make_joint_metadata_fn": [[27, 39], ["skel_desc.joint_names[].startswith", "skel_desc.joint_names[].startswith"], "function", ["None"], ["", "", "def", "_make_joint_metadata_fn", "(", "skel_desc", ")", ":", "\n", "    ", "def", "joint_metadata_fn", "(", "joint_id", ")", ":", "\n", "        ", "group", "=", "'centre'", "\n", "if", "skel_desc", ".", "joint_names", "[", "joint_id", "]", ".", "startswith", "(", "'left_'", ")", ":", "\n", "            ", "group", "=", "'left'", "\n", "", "if", "skel_desc", ".", "joint_names", "[", "joint_id", "]", ".", "startswith", "(", "'right_'", ")", ":", "\n", "            ", "group", "=", "'right'", "\n", "", "return", "{", "\n", "'parent'", ":", "skel_desc", ".", "joint_tree", "[", "joint_id", "]", ",", "\n", "'group'", ":", "group", "\n", "}", "\n", "", "return", "joint_metadata_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.plotly_skeleton_figure": [[41, 122], ["utils._make_joint_metadata_fn", "list", "list", "list", "enumerate", "plotly.Scatter3d", "plotly.Scatter3d", "plotly.Scatter3d", "plotly.Scatter3d", "plotly.Layout", "plotly.Figure", "_make_joint_metadata_fn.", "list", "list", "list", "dict", "dict", "dict", "dict", "plotly.Margin", "plotly.Scene", "plotly.YAxis", "plotly.ZAxis"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils._make_joint_metadata_fn"], ["", "def", "plotly_skeleton_figure", "(", "skel3d", ",", "skel_desc", ")", ":", "\n", "    ", "meta_fn", "=", "_make_joint_metadata_fn", "(", "skel_desc", ")", "\n", "\n", "cxs", "=", "[", "]", "\n", "cys", "=", "[", "]", "\n", "czs", "=", "[", "]", "\n", "\n", "lxs", "=", "[", "]", "\n", "lys", "=", "[", "]", "\n", "lzs", "=", "[", "]", "\n", "\n", "rxs", "=", "[", "]", "\n", "rys", "=", "[", "]", "\n", "rzs", "=", "[", "]", "\n", "\n", "xt", "=", "list", "(", "skel3d", "[", ":", ",", "0", "]", ")", "\n", "zt", "=", "list", "(", "-", "skel3d", "[", ":", ",", "1", "]", ")", "\n", "yt", "=", "list", "(", "skel3d", "[", ":", ",", "2", "]", ")", "\n", "\n", "for", "j", ",", "p", "in", "enumerate", "(", "skel_desc", ".", "joint_tree", ")", ":", "\n", "        ", "metadata", "=", "meta_fn", "(", "j", ")", "\n", "if", "metadata", "[", "'group'", "]", "==", "'left'", ":", "\n", "            ", "xs", ",", "ys", ",", "zs", "=", "lxs", ",", "lys", ",", "lzs", "\n", "", "elif", "metadata", "[", "'group'", "]", "==", "'right'", ":", "\n", "            ", "xs", ",", "ys", ",", "zs", "=", "rxs", ",", "rys", ",", "rzs", "\n", "", "else", ":", "\n", "            ", "xs", ",", "ys", ",", "zs", "=", "cxs", ",", "cys", ",", "czs", "\n", "\n", "", "xs", "+=", "[", "xt", "[", "j", "]", ",", "xt", "[", "p", "]", ",", "None", "]", "\n", "ys", "+=", "[", "yt", "[", "j", "]", ",", "yt", "[", "p", "]", ",", "None", "]", "\n", "zs", "+=", "[", "zt", "[", "j", "]", ",", "zt", "[", "p", "]", ",", "None", "]", "\n", "\n", "", "points", "=", "go", ".", "Scatter3d", "(", "\n", "x", "=", "list", "(", "skel3d", "[", ":", ",", "0", "]", ")", ",", "\n", "z", "=", "list", "(", "-", "skel3d", "[", ":", ",", "1", "]", ")", ",", "\n", "y", "=", "list", "(", "skel3d", "[", ":", ",", "2", "]", ")", ",", "\n", "text", "=", "skel_desc", ".", "joint_names", ",", "\n", "mode", "=", "'markers'", ",", "\n", "marker", "=", "dict", "(", "color", "=", "'grey'", ",", "size", "=", "3", ",", "opacity", "=", "0.8", ")", ",", "\n", ")", "\n", "\n", "centre_lines", "=", "go", ".", "Scatter3d", "(", "\n", "x", "=", "cxs", ",", "\n", "y", "=", "cys", ",", "\n", "z", "=", "czs", ",", "\n", "mode", "=", "'lines'", ",", "\n", "line", "=", "dict", "(", "color", "=", "'magenta'", ",", "width", "=", "1", ")", ",", "\n", "hoverinfo", "=", "'none'", ",", "\n", ")", "\n", "\n", "left_lines", "=", "go", ".", "Scatter3d", "(", "\n", "x", "=", "lxs", ",", "\n", "y", "=", "lys", ",", "\n", "z", "=", "lzs", ",", "\n", "mode", "=", "'lines'", ",", "\n", "line", "=", "dict", "(", "color", "=", "'blue'", ",", "width", "=", "1", ")", ",", "\n", "hoverinfo", "=", "'none'", ",", "\n", ")", "\n", "\n", "right_lines", "=", "go", ".", "Scatter3d", "(", "\n", "x", "=", "rxs", ",", "\n", "y", "=", "rys", ",", "\n", "z", "=", "rzs", ",", "\n", "mode", "=", "'lines'", ",", "\n", "line", "=", "dict", "(", "color", "=", "'red'", ",", "width", "=", "1", ")", ",", "\n", "hoverinfo", "=", "'none'", ",", "\n", ")", "\n", "\n", "layout", "=", "go", ".", "Layout", "(", "\n", "margin", "=", "go", ".", "Margin", "(", "l", "=", "20", ",", "r", "=", "20", ",", "b", "=", "20", ",", "t", "=", "20", ",", "pad", "=", "0", ")", ",", "\n", "hovermode", "=", "'closest'", ",", "\n", "scene", "=", "go", ".", "Scene", "(", "\n", "aspectmode", "=", "'data'", ",", "\n", "yaxis", "=", "go", ".", "YAxis", "(", "title", "=", "'z'", ")", ",", "\n", "zaxis", "=", "go", ".", "ZAxis", "(", "title", "=", "'y'", ")", ",", "\n", ")", ",", "\n", "showlegend", "=", "False", ",", "\n", ")", "\n", "fig", "=", "go", ".", "Figure", "(", "data", "=", "[", "points", ",", "centre_lines", ",", "left_lines", ",", "right_lines", "]", ",", "layout", "=", "layout", ")", "\n", "\n", "return", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.plot_skeleton_on_axes3d": [[124, 170], ["ax.set_xlabel", "ax.set_ylabel", "ax.set_zlabel", "skel.narrow().numpy", "skel.narrow().numpy", "skel.narrow().numpy", "ax.set_xlim", "ax.set_ylim", "ax.set_zlim", "ax.set_aspect", "ax.view_init", "utils._make_joint_metadata_fn", "enumerate", "ax.scatter", "numpy.array().max", "ax.invert_zaxis", "_make_joint_metadata_fn.", "ax.quiver", "skel.narrow", "skel.narrow", "skel.narrow", "skel.narrow().numpy.max", "skel.narrow().numpy.min", "skel.narrow().numpy.max", "skel.narrow().numpy.min", "skel.narrow().numpy.max", "skel.narrow().numpy.min", "numpy.array", "skel.narrow().numpy.max", "skel.narrow().numpy.min", "skel.narrow().numpy.max", "skel.narrow().numpy.min", "skel.narrow().numpy.max", "skel.narrow().numpy.min"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils._make_joint_metadata_fn"], ["", "def", "plot_skeleton_on_axes3d", "(", "skel", ",", "skel_desc", ",", "ax", ":", "Axes3D", ",", "invert", "=", "True", ",", "alpha", "=", "1.0", ")", ":", "\n", "    ", "ax", ".", "set_xlabel", "(", "'x'", ")", "\n", "ax", ".", "set_ylabel", "(", "'z'", ")", "\n", "ax", ".", "set_zlabel", "(", "'y'", ")", "\n", "\n", "# NOTE: y and z axes are swapped", "\n", "xs", "=", "skel", ".", "narrow", "(", "-", "1", ",", "0", ",", "1", ")", ".", "numpy", "(", ")", "\n", "ys", "=", "skel", ".", "narrow", "(", "-", "1", ",", "2", ",", "1", ")", ".", "numpy", "(", ")", "\n", "zs", "=", "skel", ".", "narrow", "(", "-", "1", ",", "1", ",", "1", ")", ".", "numpy", "(", ")", "\n", "\n", "# Correct aspect ratio (https://stackoverflow.com/a/21765085)", "\n", "max_range", "=", "np", ".", "array", "(", "[", "\n", "xs", ".", "max", "(", ")", "-", "xs", ".", "min", "(", ")", ",", "ys", ".", "max", "(", ")", "-", "ys", ".", "min", "(", ")", ",", "zs", ".", "max", "(", ")", "-", "zs", ".", "min", "(", ")", "\n", "]", ")", ".", "max", "(", ")", "/", "2.0", "\n", "mid_x", "=", "(", "xs", ".", "max", "(", ")", "+", "xs", ".", "min", "(", ")", ")", "*", "0.5", "\n", "mid_y", "=", "(", "ys", ".", "max", "(", ")", "+", "ys", ".", "min", "(", ")", ")", "*", "0.5", "\n", "mid_z", "=", "(", "zs", ".", "max", "(", ")", "+", "zs", ".", "min", "(", ")", ")", "*", "0.5", "\n", "ax", ".", "set_xlim", "(", "mid_x", "-", "max_range", ",", "mid_x", "+", "max_range", ")", "\n", "ax", ".", "set_ylim", "(", "mid_y", "-", "max_range", ",", "mid_y", "+", "max_range", ")", "\n", "ax", ".", "set_zlim", "(", "mid_z", "-", "max_range", ",", "mid_z", "+", "max_range", ")", "\n", "ax", ".", "set_aspect", "(", "'equal'", ")", "\n", "\n", "if", "invert", ":", "\n", "        ", "ax", ".", "invert_zaxis", "(", ")", "\n", "\n", "# Set starting view", "\n", "", "ax", ".", "view_init", "(", "elev", "=", "20", ",", "azim", "=", "-", "100", ")", "\n", "\n", "get_joint_metadata", "=", "_make_joint_metadata_fn", "(", "skel_desc", ")", "\n", "for", "joint_id", ",", "joint", "in", "enumerate", "(", "skel", ")", ":", "\n", "        ", "meta", "=", "get_joint_metadata", "(", "joint_id", ")", "\n", "color", "=", "'magenta'", "\n", "if", "meta", "[", "'group'", "]", "==", "'left'", ":", "\n", "            ", "color", "=", "'blue'", "\n", "", "if", "meta", "[", "'group'", "]", "==", "'right'", ":", "\n", "            ", "color", "=", "'red'", "\n", "", "parent", "=", "skel", "[", "meta", "[", "'parent'", "]", "]", "\n", "offset", "=", "parent", "-", "joint", "\n", "ax", ".", "quiver", "(", "\n", "[", "joint", "[", "0", "]", "]", ",", "[", "joint", "[", "2", "]", "]", ",", "[", "joint", "[", "1", "]", "]", ",", "\n", "[", "offset", "[", "0", "]", "]", ",", "[", "offset", "[", "2", "]", "]", ",", "[", "offset", "[", "1", "]", "]", ",", "\n", "color", "=", "color", ",", "\n", "alpha", "=", "alpha", ",", "\n", ")", "\n", "\n", "", "ax", ".", "scatter", "(", "xs", ",", "ys", ",", "zs", ",", "color", "=", "'grey'", ",", "alpha", "=", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.plot_skeleton_on_axes": [[172, 196], ["utils._make_joint_metadata_fn", "enumerate", "skel.narrow().numpy", "skel.narrow().numpy", "ax.scatter", "_make_joint_metadata_fn.", "offset.norm", "ax.arrow", "skel.narrow", "skel.narrow"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils._make_joint_metadata_fn"], ["", "def", "plot_skeleton_on_axes", "(", "skel", ",", "skel_desc", ",", "ax", ",", "alpha", "=", "1.0", ")", ":", "\n", "    ", "get_joint_metadata", "=", "_make_joint_metadata_fn", "(", "skel_desc", ")", "\n", "for", "joint_id", ",", "joint", "in", "enumerate", "(", "skel", ")", ":", "\n", "        ", "meta", "=", "get_joint_metadata", "(", "joint_id", ")", "\n", "color", "=", "'magenta'", "\n", "if", "meta", "[", "'group'", "]", "==", "'left'", ":", "\n", "            ", "color", "=", "'blue'", "\n", "", "if", "meta", "[", "'group'", "]", "==", "'right'", ":", "\n", "            ", "color", "=", "'red'", "\n", "", "parent", "=", "skel", "[", "meta", "[", "'parent'", "]", "]", "\n", "offset", "=", "parent", "-", "joint", "\n", "if", "offset", ".", "norm", "(", "2", ")", ">=", "1", ":", "\n", "            ", "ax", ".", "arrow", "(", "\n", "joint", "[", "0", "]", ",", "joint", "[", "1", "]", ",", "\n", "offset", "[", "0", "]", ",", "offset", "[", "1", "]", ",", "\n", "color", "=", "color", ",", "\n", "alpha", "=", "alpha", ",", "\n", "head_width", "=", "2", ",", "\n", "length_includes_head", "=", "True", ",", "\n", ")", "\n", "\n", "", "", "xs", "=", "skel", ".", "narrow", "(", "-", "1", ",", "0", ",", "1", ")", ".", "numpy", "(", ")", "\n", "ys", "=", "skel", ".", "narrow", "(", "-", "1", ",", "1", ",", "1", ")", ".", "numpy", "(", ")", "\n", "ax", ".", "scatter", "(", "xs", ",", "ys", ",", "color", "=", "'grey'", ",", "alpha", "=", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.draw_skeleton_2d": [[198, 215], ["PIL.ImageDraw.Draw", "utils._make_joint_metadata_fn", "range", "skel2d.size", "_make_joint_metadata_fn.", "ImageDraw.Draw.line"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils._make_joint_metadata_fn"], ["", "def", "draw_skeleton_2d", "(", "img", ",", "skel2d", ",", "skel_desc", ",", "mask", "=", "None", ",", "width", "=", "1", ")", ":", "\n", "    ", "assert", "skel2d", ".", "size", "(", "-", "1", ")", "==", "2", ",", "'coordinates must be 2D'", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "img", ")", "\n", "get_joint_metadata", "=", "_make_joint_metadata_fn", "(", "skel_desc", ")", "\n", "for", "joint_id", "in", "range", "(", "skel_desc", ".", "n_joints", ")", ":", "\n", "        ", "meta", "=", "get_joint_metadata", "(", "joint_id", ")", "\n", "color", "=", "(", "255", ",", "0", ",", "255", ")", "\n", "if", "meta", "[", "'group'", "]", "==", "'left'", ":", "\n", "            ", "color", "=", "(", "0", ",", "0", ",", "255", ")", "\n", "", "if", "meta", "[", "'group'", "]", "==", "'right'", ":", "\n", "            ", "color", "=", "(", "255", ",", "0", ",", "0", ")", "\n", "", "if", "mask", "is", "not", "None", ":", "\n", "            ", "if", "mask", "[", "joint_id", "]", "==", "0", "or", "mask", "[", "meta", "[", "'parent'", "]", "]", "==", "0", ":", "\n", "                ", "color", "=", "(", "128", ",", "128", ",", "128", ")", "\n", "", "", "draw", ".", "line", "(", "\n", "[", "*", "skel2d", "[", "joint_id", "]", ",", "*", "skel2d", "[", "meta", "[", "'parent'", "]", "]", "]", ",", "\n", "color", ",", "width", "=", "width", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.timer": [[218, 224], ["time.perf_counter", "meter.add", "time.perf_counter"], "function", ["None"], ["", "", "@", "contextmanager", "\n", "def", "timer", "(", "meter", ",", "n", "=", "1", ")", ":", "\n", "    ", "start_time", "=", "perf_counter", "(", ")", "\n", "yield", "\n", "time_elapsed", "=", "perf_counter", "(", ")", "-", "start_time", "\n", "meter", ".", "add", "(", "time_elapsed", "/", "n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.generator_timer": [[226, 235], ["iter", "utils.timer", "next"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.timer"], ["", "def", "generator_timer", "(", "iterable", ",", "meter", ")", ":", "\n", "    ", "iterator", "=", "iter", "(", "iterable", ")", "\n", "while", "True", ":", "\n", "        ", "try", ":", "\n", "            ", "with", "timer", "(", "meter", ")", ":", "\n", "                ", "vals", "=", "next", "(", "iterator", ")", "\n", "", "yield", "vals", "\n", "", "except", "StopIteration", ":", "\n", "            ", "return", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.bin.export_model.parse_args": [[16, 30], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args"], ["def", "parse_args", "(", "argv", ")", ":", "\n", "    ", "\"\"\"Parse command-line arguments.\"\"\"", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'3D pose estimation model exporter'", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--input'", ",", "type", "=", "str", ",", "metavar", "=", "'FILE'", ",", "required", "=", "True", ",", "\n", "help", "=", "'path to input model file'", ")", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--output'", ",", "type", "=", "str", ",", "metavar", "=", "'FILE'", ",", "required", "=", "True", ",", "\n", "help", "=", "'desired path to output model file'", ")", "\n", "parser", ".", "add_argument", "(", "'-f'", ",", "'--format'", ",", "type", "=", "str", ",", "default", "=", "'pytorch'", ",", "choices", "=", "[", "'pytorch'", ",", "'onnx'", "]", ",", "\n", "help", "=", "'format of output model'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", "[", "1", ":", "]", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.export_model.main": [[32, 58], ["export_model.parse_args", "margipose.utils.seed_all", "margipose.utils.init_algorithms", "torch.load", "margipose.models.create_model", "margipose.models.create_model.load_state_dict", "margipose.models.create_model.eval", "torch.save", "margipose.models.create_model.state_dict", "torch.load.get", "torch.randn", "torch.onnx.export", "Exception"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.seed_all", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.init_algorithms", "home.repos.pwc.inspect_result.anibali_margipose.models.__init__.create_model"], ["", "def", "main", "(", "argv", "=", "sys", ".", "argv", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", "argv", ")", "\n", "seed_all", "(", "12345", ")", "\n", "init_algorithms", "(", "deterministic", "=", "True", ")", "\n", "\n", "# Load the model into system memory (CPU, not GPU)", "\n", "model_state", "=", "torch", ".", "load", "(", "args", ".", "input", ",", "map_location", "=", "'cpu'", ")", "\n", "model_desc", "=", "model_state", "[", "'model_desc'", "]", "\n", "model", "=", "create_model", "(", "model_desc", ")", "\n", "model", ".", "load_state_dict", "(", "model_state", "[", "'state_dict'", "]", ")", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "if", "args", ".", "format", "==", "'pytorch'", ":", "\n", "        ", "new_model_state", "=", "{", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'model_desc'", ":", "model_desc", ",", "\n", "'train_datasets'", ":", "model_state", ".", "get", "(", "'train_datasets'", ",", "[", "]", ")", ",", "\n", "}", "\n", "torch", ".", "save", "(", "new_model_state", ",", "args", ".", "output", ")", "\n", "", "elif", "args", ".", "format", "==", "'onnx'", ":", "\n", "        ", "image_height", "=", "model", ".", "data_specs", ".", "input_specs", ".", "height", "\n", "image_width", "=", "model", ".", "data_specs", ".", "input_specs", ".", "width", "\n", "dummy_input", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "image_height", ",", "image_width", ")", "\n", "onnx", ".", "export", "(", "model", ",", "(", "dummy_input", ",", ")", ",", "args", ".", "output", ",", "verbose", "=", "False", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "'Unrecognised model format: {}'", ".", "format", "(", "args", ".", "format", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.__init__": [[39, 44], ["numpy.zeros", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "bins", ")", ":", "\n", "        ", "self", ".", "bins", "=", "bins", "\n", "self", ".", "bincounts", "=", "np", ".", "zeros", "(", "len", "(", "bins", ")", "+", "1", ")", "\n", "self", ".", "min", "=", "np", ".", "inf", "\n", "self", ".", "max", "=", "-", "np", ".", "inf", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples": [[45, 52], ["min", "max", "numpy.digitize", "numpy.bincount", "samples.min", "samples.max", "len"], "methods", ["None"], ["", "def", "add_samples", "(", "self", ",", "samples", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "assert", "samples", ".", "ndim", "==", "1", "\n", "self", ".", "min", "=", "min", "(", "self", ".", "min", ",", "samples", ".", "min", "(", ")", ")", "\n", "self", ".", "max", "=", "max", "(", "self", ".", "max", ",", "samples", ".", "max", "(", ")", ")", "\n", "indices", "=", "np", ".", "digitize", "(", "samples", ",", "self", ".", "bins", ")", "\n", "counts", "=", "np", ".", "bincount", "(", "indices", ")", "\n", "self", ".", "bincounts", "[", ":", "len", "(", "counts", ")", "]", "+=", "counts", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist": [[53, 60], ["calc_dataloader_stats.StatTracker.bincounts.sum", "ax.plot"], "methods", ["None"], ["", "def", "plot_hist", "(", "self", ",", "ax", ",", "**", "kwargs", ")", ":", "\n", "        ", "n", "=", "self", ".", "bincounts", ".", "sum", "(", ")", "\n", "if", "n", ">", "0", ":", "\n", "            ", "freqs", "=", "self", ".", "bincounts", "/", "n", "\n", "", "else", ":", "\n", "            ", "freqs", "=", "self", ".", "bincounts", "\n", "", "return", "ax", ".", "plot", "(", "self", ".", "bins", ",", "freqs", "[", ":", "-", "1", "]", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.__repr__": [[61, 68], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "fields", "=", "[", "\n", "f'min={self.min:0.4f}'", ",", "\n", "f'max={self.max:0.4f}'", ",", "\n", "]", "\n", "summary", "=", "', '", ".", "join", "(", "fields", ")", "\n", "return", "f'StatTracker[{summary}]'", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.parse_args": [[15, 19], ["parser.parse_args"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args"], ["def", "parse_args", "(", "parser", ":", "argparse", ".", "ArgumentParser", ",", "argv", ")", ":", "\n", "    ", "if", "argv", "is", "None", ":", "\n", "        ", "argv", "=", "sys", ".", "argv", "[", "1", ":", "]", "\n", "", "return", "parser", ".", "parse_args", "(", "argv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.init_argument_parser": [[21, 36], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["", "def", "init_argument_parser", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--batch-size'", ",", "type", "=", "int", ",", "default", "=", "32", ",", "\n", "help", "=", "'number of examples per batch'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "10", ",", "\n", "help", "=", "'number of passes through the training dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "default", "=", "'mpi3d-train'", ",", "\n", "help", "=", "'dataset to draw examples from'", ")", "\n", "parser", ".", "add_argument", "(", "'--examples-per-epoch'", ",", "type", "=", "int", ",", "default", "=", "32000", ",", "\n", "help", "=", "'number of examples to draw per epoch'", ")", "\n", "parser", ".", "add_argument", "(", "'--with-image'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'load images'", ")", "\n", "parser", ".", "add_argument", "(", "'--output'", ",", "type", "=", "str", ",", "\n", "help", "=", "'output file to save figure to'", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.calculate_stats": [[70, 95], ["margipose.models.create_model", "margipose.train_helpers.create_train_dataloader", "range", "tqdm.tqdm.write", "tqdm.tqdm", "tqdm.tqdm.write", "tqdm.tqdm.write", "numpy.asarray", "stats[].add_samples", "stats[].add_samples", "stats[].add_samples", "stats[].add_samples", "stats[].add_samples", "stats[].add_samples", "stats[].add_samples", "repr", "len", "numpy.asarray", "stats[].add_samples", "stats[].add_samples", "stats[].add_samples", "image[].ravel", "image[].ravel", "image[].ravel", "numpy.asarray", "len", "skeleton.joint_names.index", "skeleton.joint_names.index", "skeleton.joint_names.index"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.models.__init__.create_model", "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.create_train_dataloader", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.add_samples"], ["", "", "def", "calculate_stats", "(", "stats", ",", "opts", ")", ":", "\n", "    ", "model_desc", "=", "Default_MargiPose_Desc", "\n", "model", "=", "create_model", "(", "model_desc", ")", "\n", "skeleton", "=", "CanonicalSkeletonDesc", "\n", "loader", "=", "create_train_dataloader", "(", "\n", "[", "opts", ".", "dataset", "]", ",", "model", ".", "data_specs", ",", "opts", ".", "batch_size", ",", "opts", ".", "examples_per_epoch", ",", "False", ")", "\n", "loader", ".", "dataset", ".", "without_image", "=", "not", "opts", ".", "with_image", "\n", "for", "epoch", "in", "range", "(", "opts", ".", "epochs", ")", ":", "\n", "        ", "for", "batch", "in", "tqdm", "(", "loader", ",", "total", "=", "len", "(", "loader", ")", ",", "leave", "=", "False", ",", "ascii", "=", "True", ")", ":", "\n", "            ", "joints_3d", "=", "np", ".", "asarray", "(", "batch", "[", "'target'", "]", ")", "\n", "stats", "[", "'root_x'", "]", ".", "add_samples", "(", "joints_3d", "[", ":", ",", "skeleton", ".", "root_joint_id", ",", "0", "]", ")", "\n", "stats", "[", "'root_y'", "]", ".", "add_samples", "(", "joints_3d", "[", ":", ",", "skeleton", ".", "root_joint_id", ",", "1", "]", ")", "\n", "stats", "[", "'root_z'", "]", ".", "add_samples", "(", "joints_3d", "[", ":", ",", "skeleton", ".", "root_joint_id", ",", "2", "]", ")", "\n", "stats", "[", "'lankle_x'", "]", ".", "add_samples", "(", "joints_3d", "[", ":", ",", "skeleton", ".", "joint_names", ".", "index", "(", "'left_ankle'", ")", ",", "0", "]", ")", "\n", "stats", "[", "'lankle_y'", "]", ".", "add_samples", "(", "joints_3d", "[", ":", ",", "skeleton", ".", "joint_names", ".", "index", "(", "'left_ankle'", ")", ",", "1", "]", ")", "\n", "stats", "[", "'lankle_z'", "]", ".", "add_samples", "(", "joints_3d", "[", ":", ",", "skeleton", ".", "joint_names", ".", "index", "(", "'left_ankle'", ")", ",", "2", "]", ")", "\n", "if", "opts", ".", "with_image", ":", "\n", "                ", "image", "=", "np", ".", "asarray", "(", "batch", "[", "'input'", "]", ")", "\n", "stats", "[", "'red'", "]", ".", "add_samples", "(", "image", "[", ":", ",", "0", "]", ".", "ravel", "(", ")", ")", "\n", "stats", "[", "'green'", "]", ".", "add_samples", "(", "image", "[", ":", ",", "1", "]", ".", "ravel", "(", ")", ")", "\n", "stats", "[", "'blue'", "]", ".", "add_samples", "(", "image", "[", ":", ",", "2", "]", ".", "ravel", "(", ")", ")", "\n", "", "stats", "[", "'index'", "]", ".", "add_samples", "(", "np", ".", "asarray", "(", "batch", "[", "'index'", "]", ",", "dtype", "=", "np", ".", "float32", ")", "/", "(", "len", "(", "loader", ".", "dataset", ")", "-", "1", ")", ")", "\n", "", "tqdm", ".", "write", "(", "f'Epoch {epoch + 1:3d}'", ")", "\n", "tqdm", ".", "write", "(", "repr", "(", "stats", ")", ")", "\n", "", "tqdm", ".", "write", "(", "'Done.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.main": [[97, 150], ["calc_dataloader_stats.parse_args", "matplotlib.figure", "plt.figure.add_subplot", "plt.figure.add_subplot", "plt.figure.add_subplot", "plt.figure.add_subplot", "threading.Thread", "threading.Thread.start", "calc_dataloader_stats.init_argument_parser", "calc_dataloader_stats.StatTracker", "calc_dataloader_stats.StatTracker", "calc_dataloader_stats.StatTracker", "calc_dataloader_stats.StatTracker", "calc_dataloader_stats.StatTracker", "calc_dataloader_stats.StatTracker", "calc_dataloader_stats.StatTracker", "calc_dataloader_stats.StatTracker", "calc_dataloader_stats.StatTracker", "calc_dataloader_stats.StatTracker", "fig.add_subplot.clear", "stats[].plot_hist", "stats[].plot_hist", "fig.add_subplot.legend", "fig.add_subplot.clear", "stats[].plot_hist", "stats[].plot_hist", "stats[].plot_hist", "fig.add_subplot.legend", "fig.add_subplot.clear", "stats[].plot_hist", "stats[].plot_hist", "stats[].plot_hist", "fig.add_subplot.legend", "fig.add_subplot.clear", "stats[].plot_hist", "fig.add_subplot.legend", "threading.Thread.join", "calc_dataloader_stats.main.draw_plots"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.init_argument_parser", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist", "home.repos.pwc.inspect_result.anibali_margipose.bin.calc_dataloader_stats.StatTracker.plot_hist"], ["", "def", "main", "(", "argv", "=", "None", ")", ":", "\n", "    ", "opts", "=", "parse_args", "(", "init_argument_parser", "(", ")", ",", "argv", ")", "\n", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "8", ",", "8", ")", ")", "\n", "ax1", "=", "fig", ".", "add_subplot", "(", "4", ",", "1", ",", "1", ")", "\n", "ax2", "=", "fig", ".", "add_subplot", "(", "4", ",", "1", ",", "2", ")", "\n", "ax3", "=", "fig", ".", "add_subplot", "(", "4", ",", "1", ",", "3", ")", "\n", "ax4", "=", "fig", ".", "add_subplot", "(", "4", ",", "1", ",", "4", ")", "\n", "\n", "# TODO: Add histogram for example index", "\n", "stats", "=", "{", "\n", "'root_x'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "'root_y'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "'root_z'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "'lankle_x'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "'lankle_y'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "'lankle_z'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "-", "1.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "'red'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "-", "3.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "'green'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "-", "3.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "'blue'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "-", "3.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "'index'", ":", "StatTracker", "(", "np", ".", "linspace", "(", "0.0", ",", "1.0", ",", "100", ")", ")", ",", "\n", "}", "\n", "\n", "thread", "=", "threading", ".", "Thread", "(", "target", "=", "calculate_stats", ",", "args", "=", "(", "stats", ",", "opts", ")", ",", "daemon", "=", "True", ")", "\n", "thread", ".", "start", "(", ")", "\n", "\n", "def", "draw_plots", "(", "_", ")", ":", "\n", "        ", "ax1", ".", "clear", "(", ")", "\n", "stats", "[", "'root_x'", "]", ".", "plot_hist", "(", "ax1", ",", "label", "=", "'root_x'", ")", "\n", "stats", "[", "'root_y'", "]", ".", "plot_hist", "(", "ax1", ",", "label", "=", "'root_y'", ")", "\n", "# stats['root_z'].plot_hist(ax1, label='root_z')", "\n", "ax1", ".", "legend", "(", ")", "\n", "ax2", ".", "clear", "(", ")", "\n", "stats", "[", "'lankle_x'", "]", ".", "plot_hist", "(", "ax2", ",", "label", "=", "'lankle_x'", ")", "\n", "stats", "[", "'lankle_y'", "]", ".", "plot_hist", "(", "ax2", ",", "label", "=", "'lankle_y'", ")", "\n", "stats", "[", "'lankle_z'", "]", ".", "plot_hist", "(", "ax2", ",", "label", "=", "'lankle_z'", ")", "\n", "ax2", ".", "legend", "(", ")", "\n", "ax3", ".", "clear", "(", ")", "\n", "stats", "[", "'red'", "]", ".", "plot_hist", "(", "ax3", ",", "label", "=", "'red'", ",", "c", "=", "'red'", ")", "\n", "stats", "[", "'green'", "]", ".", "plot_hist", "(", "ax3", ",", "label", "=", "'green'", ",", "c", "=", "'green'", ")", "\n", "stats", "[", "'blue'", "]", ".", "plot_hist", "(", "ax3", ",", "label", "=", "'blue'", ",", "c", "=", "'blue'", ")", "\n", "ax3", ".", "legend", "(", ")", "\n", "ax4", ".", "clear", "(", ")", "\n", "stats", "[", "'index'", "]", ".", "plot_hist", "(", "ax4", ",", "label", "=", "'index'", ")", "\n", "ax4", ".", "legend", "(", ")", "\n", "\n", "", "if", "opts", ".", "output", ":", "\n", "        ", "thread", ".", "join", "(", ")", "\n", "draw_plots", "(", "None", ")", "\n", "plt", ".", "savefig", "(", "opts", ".", "output", ")", "\n", "", "else", ":", "\n", "        ", "anim", "=", "animation", ".", "FuncAnimation", "(", "fig", ",", "draw_plots", ",", "interval", "=", "200", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.preprocess_mpi3d.parse_args": [[17, 32], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args"], ["def", "parse_args", "(", "argv", ")", ":", "\n", "    ", "\"\"\"Parse command-line arguments.\"\"\"", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Preprocess data from the MPI-INF-3DHP dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'-i'", ",", "'--input-dir'", ",", "type", "=", "str", ",", "metavar", "=", "'DIR'", ",", "\n", "help", "=", "'path to directory containing S1, S2, ...'", ")", "\n", "parser", ".", "add_argument", "(", "'-t'", ",", "'--input-test-dir'", ",", "type", "=", "str", ",", "metavar", "=", "'DIR'", ",", "\n", "help", "=", "'path to directory containing TS1, TS2, ...'", ")", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--out-dir'", ",", "type", "=", "str", ",", "metavar", "=", "'DIR'", ",", "required", "=", "True", ",", "\n", "default", "=", "'/data/fast/mpi_inf_3dhp'", ",", "\n", "help", "=", "'directory to write preprocessed data to'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", "[", "1", ":", "]", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.preprocess_mpi3d.assert_listing_contains": [[34, 38], ["os.listdir", "os.path.join"], "function", ["None"], ["", "def", "assert_listing_contains", "(", "dir", ",", "expected", ")", ":", "\n", "    ", "listing", "=", "listdir", "(", "dir", ")", "\n", "for", "child", "in", "expected", ":", "\n", "        ", "assert", "child", "in", "listing", ",", "'{} does not exist'", ".", "format", "(", "path", ".", "join", "(", "dir", ",", "child", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.preprocess_mpi3d.main": [[40, 85], ["preprocess_mpi3d.parse_args", "os.path.join", "os.path.join", "os.path.join", "print", "print", "preprocess_mpi3d.assert_listing_contains", "preprocess_mpi3d.assert_listing_contains", "print", "print", "print", "print", "margipose.data.mpi_inf_3dhp.preprocess.preprocess_training_data", "print", "print", "print", "margipose.data.mpi_inf_3dhp.preprocess.preprocess_validation_data", "print", "print", "print", "margipose.data.mpi_inf_3dhp.preprocess.preprocess_test_data", "print", "print", "print", "print", "print", "margipose.data.mpi_inf_3dhp.preprocess.preprocess_training_masks", "print", "print", "print", "margipose.data.mpi_inf_3dhp.preprocess.preprocess_validation_masks", "print"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args", "home.repos.pwc.inspect_result.anibali_margipose.bin.preprocess_mpi3d.assert_listing_contains", "home.repos.pwc.inspect_result.anibali_margipose.bin.preprocess_mpi3d.assert_listing_contains", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_training_data", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_validation_data", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_test_data", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_training_masks", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_validation_masks"], ["", "", "def", "main", "(", "argv", "=", "sys", ".", "argv", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", "argv", ")", "\n", "\n", "if", "args", ".", "input_dir", ":", "\n", "        ", "assert_listing_contains", "(", "args", ".", "input_dir", ",", "[", "'S1'", ",", "'S2'", ",", "'S3'", ",", "'S4'", ",", "'S5'", ",", "'S6'", ",", "'S7'", ",", "'S8'", "]", ")", "\n", "\n", "", "if", "args", ".", "input_test_dir", ":", "\n", "        ", "assert_listing_contains", "(", "args", ".", "input_test_dir", ",", "[", "'TS1'", ",", "'TS2'", ",", "'TS3'", ",", "'TS4'", ",", "'TS5'", ",", "'TS6'", "]", ")", "\n", "\n", "", "train_out_dir", "=", "path", ".", "join", "(", "args", ".", "out_dir", ",", "'train'", ")", "\n", "val_out_dir", "=", "path", ".", "join", "(", "args", ".", "out_dir", ",", "'val'", ")", "\n", "test_out_dir", "=", "path", ".", "join", "(", "args", ".", "out_dir", ",", "'test'", ")", "\n", "\n", "if", "args", ".", "input_dir", ":", "\n", "        ", "print", "(", "'Starting data preprocessing.'", ")", "\n", "print", "(", "'This may take several hours to complete.'", ")", "\n", "print", "(", ")", "\n", "print", "(", "'Training set'", ")", "\n", "preprocess_training_data", "(", "args", ".", "input_dir", ",", "train_out_dir", ")", "\n", "print", "(", "'Done'", ")", "\n", "print", "(", ")", "\n", "print", "(", "'Validation set'", ")", "\n", "preprocess_validation_data", "(", "args", ".", "input_dir", ",", "val_out_dir", ")", "\n", "print", "(", "'Done'", ")", "\n", "print", "(", ")", "\n", "\n", "", "if", "args", ".", "input_test_dir", ":", "\n", "        ", "print", "(", "'Test set'", ")", "\n", "preprocess_test_data", "(", "args", ".", "input_test_dir", ",", "test_out_dir", ")", "\n", "print", "(", "'Done'", ")", "\n", "print", "(", ")", "\n", "\n", "", "if", "args", ".", "input_dir", ":", "\n", "        ", "print", "(", "'Starting mask preprocessing.'", ")", "\n", "print", "(", ")", "\n", "print", "(", "'Training set'", ")", "\n", "preprocess_training_masks", "(", "train_out_dir", ")", "\n", "print", "(", "'Done'", ")", "\n", "print", "(", ")", "\n", "print", "(", "'Validation set'", ")", "\n", "preprocess_validation_masks", "(", "val_out_dir", ")", "\n", "print", "(", "'Done'", ")", "\n", "\n", "", "print", "(", ")", "\n", "print", "(", "'All preprocessing has completed.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.eval_3d.parse_args": [[29, 46], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args"], ["def", "parse_args", "(", "argv", ")", ":", "\n", "    ", "\"\"\"Parse command-line arguments.\"\"\"", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "prog", "=", "'margipose-eval'", ",", "\n", "description", "=", "'3D human pose model evaluator'", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "metavar", "=", "'FILE'", ",", "default", "=", "argparse", ".", "SUPPRESS", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "'path to model file'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "metavar", "=", "'DS'", ",", "default", "=", "'mpi3d-test'", ",", "\n", "help", "=", "'dataset to evaluate on'", ")", "\n", "parser", ".", "add_argument", "(", "'--multicrop'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'enable the use of multiple crops'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", "[", "1", ":", "]", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.eval_3d.obtain_predictions": [[48, 95], ["model.eval", "tqdm.tqdm", "batch[].to", "batch[].to", "time.perf_counter", "model", "margipose.dsntnn.average_loss", "pose3d_utils.coords.ensure_homogeneous", "enumerate", "torch.stack().mean", "dict", "time.perf_counter", "model.forward_3d_losses", "model.to", "margipose.eval.prepare_for_3d_evaluation", "actuals.append", "batch[].to.narrow", "torch.stack", "margipose.dsntnn.average_loss.sum().item", "margipose.dsntnn.average_loss.sum"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.average_loss", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_3d_losses", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.prepare_for_3d_evaluation"], ["", "def", "obtain_predictions", "(", "model", ",", "device", ",", "loader", ",", "known_depth", "=", "False", ",", "print_progress", "=", "False", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "\n", "iterable", "=", "loader", "\n", "if", "print_progress", ":", "\n", "        ", "iterable", "=", "tqdm", "(", "loader", ",", "leave", "=", "True", ",", "ascii", "=", "True", ")", "\n", "\n", "", "for", "batch", "in", "iterable", ":", "\n", "        ", "in_var", "=", "batch", "[", "'input'", "]", ".", "to", "(", "device", ",", "torch", ".", "float32", ")", "\n", "target_var", "=", "batch", "[", "'target'", "]", ".", "to", "(", "device", ",", "torch", ".", "float32", ")", "\n", "\n", "# Calculate predictions and loss", "\n", "start_time", "=", "perf_counter", "(", ")", "\n", "out_var", "=", "model", "(", "in_var", ")", "\n", "inference_time", "=", "perf_counter", "(", ")", "-", "start_time", "\n", "loss", "=", "average_loss", "(", "model", ".", "forward_3d_losses", "(", "out_var", ",", "target_var", ".", "narrow", "(", "-", "1", ",", "0", ",", "3", ")", ")", ")", "\n", "\n", "norm_preds", "=", "ensure_homogeneous", "(", "out_var", ".", "to", "(", "CPU", ",", "torch", ".", "float64", ")", ",", "d", "=", "3", ")", "\n", "\n", "actuals", "=", "[", "]", "\n", "expected", "=", "None", "\n", "for", "i", ",", "norm_pred", "in", "enumerate", "(", "norm_preds", ")", ":", "\n", "            ", "expected_i", ",", "actual_i", "=", "prepare_for_3d_evaluation", "(", "batch", "[", "'original_skel'", "]", "[", "i", "]", ",", "norm_pred", ",", "\n", "loader", ".", "dataset", ",", "batch", "[", "'camera_intrinsic'", "]", "[", "i", "]", ",", "\n", "batch", "[", "'transform_opts'", "]", "[", "i", "]", ",", "known_depth", "=", "known_depth", ")", "\n", "if", "expected", "is", "not", "None", ":", "\n", "                ", "assert", "(", "expected_i", "-", "expected", ")", ".", "abs", "(", ")", ".", "gt", "(", "1e-6", ")", ".", "sum", "(", ")", "==", "0", ",", "\"Expected all examples in batch to have the same target\"", "\n", "", "expected", "=", "expected_i", "\n", "actuals", ".", "append", "(", "actual_i", ")", "\n", "", "actual", "=", "torch", ".", "stack", "(", "actuals", ",", "0", ")", ".", "mean", "(", "0", ")", "\n", "\n", "try", ":", "\n", "            ", "frame_ref", "=", "batch", "[", "'frame_ref'", "]", "[", "0", "]", "\n", "", "except", "KeyError", ":", "\n", "            ", "frame_ref", "=", "None", "\n", "\n", "", "prediction", "=", "dict", "(", "\n", "expected", "=", "expected", ",", "\n", "actual", "=", "actual", ",", "\n", "frame_ref", "=", "frame_ref", ",", "\n", "inference_time", "=", "inference_time", ",", "\n", "loss", "=", "loss", ".", "sum", "(", ")", ".", "item", "(", ")", ",", "\n", ")", "\n", "\n", "yield", "prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.eval_3d.run_evaluation_3d": [[97, 119], ["tele.meter.MeanValueMeter", "tele.meter.MedianValueMeter", "dict", "eval_3d.obtain_predictions", "pandas.DataFrame", "tele.meter.MedianValueMeter.add", "tele.meter.MeanValueMeter.add", "margipose.eval.gather_3d_metrics", "margipose.eval.gather_3d_metrics.items", "d[].append", "d[].append", "d[].append", "d[].append", "d[].append"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.bin.eval_3d.obtain_predictions", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.gather_3d_metrics"], ["", "", "def", "run_evaluation_3d", "(", "model", ",", "device", ",", "loader", ",", "included_joints", ",", "known_depth", "=", "False", ",", "\n", "print_progress", "=", "False", ")", ":", "\n", "    ", "loss_meter", "=", "MeanValueMeter", "(", ")", "\n", "time_meter", "=", "MedianValueMeter", "(", ")", "\n", "\n", "d", "=", "dict", "(", "seq_id", "=", "[", "]", ",", "activity_id", "=", "[", "]", ",", "aligned_auc", "=", "[", "]", ",", "aligned_mpjpe", "=", "[", "]", ",", "aligned_pck", "=", "[", "]", ",", "\n", "auc", "=", "[", "]", ",", "mpjpe", "=", "[", "]", ",", "pck", "=", "[", "]", ")", "\n", "\n", "for", "pred", "in", "obtain_predictions", "(", "model", ",", "device", ",", "loader", ",", "known_depth", ",", "print_progress", ")", ":", "\n", "        ", "time_meter", ".", "add", "(", "pred", "[", "'inference_time'", "]", ")", "\n", "loss_meter", ".", "add", "(", "pred", "[", "'loss'", "]", ")", "\n", "metrics", "=", "gather_3d_metrics", "(", "pred", "[", "'expected'", "]", ",", "pred", "[", "'actual'", "]", ",", "included_joints", ")", "\n", "if", "pred", "[", "'frame_ref'", "]", ":", "\n", "            ", "d", "[", "'seq_id'", "]", ".", "append", "(", "f'TS{pred[\"frame_ref\"][\"subject_id\"]}/Seq{pred[\"frame_ref\"][\"sequence_id\"]}'", ")", "\n", "d", "[", "'activity_id'", "]", ".", "append", "(", "pred", "[", "'frame_ref'", "]", "[", "'activity_id'", "]", ")", "\n", "", "else", ":", "\n", "            ", "d", "[", "'seq_id'", "]", ".", "append", "(", "'-'", ")", "\n", "d", "[", "'activity_id'", "]", ".", "append", "(", "'-'", ")", "\n", "", "for", "metric_name", ",", "metric_value", "in", "metrics", ".", "items", "(", ")", ":", "\n", "            ", "d", "[", "metric_name", "]", ".", "append", "(", "metric_value", ")", "\n", "\n", "", "", "return", "pd", ".", "DataFrame", "(", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.eval_3d.main": [[121, 164], ["eval_3d.parse_args", "margipose.utils.seed_all", "margipose.utils.init_algorithms", "torch.set_grad_enabled", "margipose.models.load_model().to().eval", "margipose.data.get_dataset.get_dataset", "parse_args.dataset.startswith", "print", "print", "eval_3d.run_evaluation_3d", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "print", "margipose.data.make_unbatched_dataloader", "margipose.data.make_dataloader", "list", "tabulate.tabulate", "tabulate.tabulate", "tabulate.tabulate", "margipose.models.load_model().to", "range", "margipose.data.skeleton.CanonicalSkeletonDesc.joint_names.index", "len", "run_evaluation_3d.drop().groupby().mean", "run_evaluation_3d.drop().groupby().mean", "run_evaluation_3d.drop().mean().to_frame", "margipose.models.load_model", "run_evaluation_3d.drop().groupby", "run_evaluation_3d.drop().groupby", "run_evaluation_3d.drop().mean", "run_evaluation_3d.drop", "run_evaluation_3d.drop", "run_evaluation_3d.drop"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.seed_all", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.init_algorithms", "home.repos.pwc.inspect_result.anibali_margipose.data.get_dataset.get_dataset", "home.repos.pwc.inspect_result.anibali_margipose.bin.eval_3d.run_evaluation_3d", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.make_unbatched_dataloader", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.make_dataloader", "home.repos.pwc.inspect_result.anibali_margipose.models.__init__.load_model"], ["", "def", "main", "(", "argv", ",", "common_opts", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", "argv", ")", "\n", "seed_all", "(", "12345", ")", "\n", "init_algorithms", "(", "deterministic", "=", "True", ")", "\n", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n", "device", "=", "common_opts", "[", "'device'", "]", "\n", "\n", "model", "=", "load_model", "(", "args", ".", "model", ")", ".", "to", "(", "device", ")", ".", "eval", "(", ")", "\n", "dataset", "=", "get_dataset", "(", "args", ".", "dataset", ",", "model", ".", "data_specs", ",", "use_aug", "=", "False", ")", "\n", "\n", "if", "args", ".", "multicrop", ":", "\n", "        ", "dataset", ".", "multicrop", "=", "True", "\n", "loader", "=", "make_unbatched_dataloader", "(", "dataset", ")", "\n", "", "else", ":", "\n", "        ", "loader", "=", "make_dataloader", "(", "dataset", ",", "batch_size", "=", "1", ")", "\n", "\n", "", "if", "args", ".", "dataset", ".", "startswith", "(", "'h36m-'", ")", ":", "\n", "        ", "known_depth", "=", "True", "\n", "included_joints", "=", "list", "(", "range", "(", "CanonicalSkeletonDesc", ".", "n_joints", ")", ")", "\n", "", "else", ":", "\n", "        ", "known_depth", "=", "False", "\n", "included_joints", "=", "[", "\n", "CanonicalSkeletonDesc", ".", "joint_names", ".", "index", "(", "joint_name", ")", "\n", "for", "joint_name", "in", "VNect_Common_Skeleton", "\n", "]", "\n", "", "print", "(", "'Use ground truth root joint depth? {}'", ".", "format", "(", "known_depth", ")", ")", "\n", "print", "(", "'Number of joints in evaluation: {}'", ".", "format", "(", "len", "(", "included_joints", ")", ")", ")", "\n", "\n", "df", "=", "run_evaluation_3d", "(", "model", ",", "device", ",", "loader", ",", "included_joints", ",", "known_depth", "=", "known_depth", ",", "\n", "print_progress", "=", "True", ")", "\n", "\n", "print", "(", "'### By sequence'", ")", "\n", "print", "(", ")", "\n", "print", "(", "tabulate", "(", "df", ".", "drop", "(", "columns", "=", "[", "'activity_id'", "]", ")", ".", "groupby", "(", "'seq_id'", ")", ".", "mean", "(", ")", ",", "headers", "=", "'keys'", ",", "tablefmt", "=", "'pipe'", ")", ")", "\n", "print", "(", ")", "\n", "print", "(", "'### By activity'", ")", "\n", "print", "(", ")", "\n", "print", "(", "tabulate", "(", "df", ".", "drop", "(", "columns", "=", "[", "'seq_id'", "]", ")", ".", "groupby", "(", "'activity_id'", ")", ".", "mean", "(", ")", ",", "headers", "=", "'keys'", ",", "tablefmt", "=", "'pipe'", ")", ")", "\n", "print", "(", ")", "\n", "print", "(", "'### Overall'", ")", "\n", "print", "(", ")", "\n", "print", "(", "tabulate", "(", "df", ".", "drop", "(", "columns", "=", "[", "'activity_id'", ",", "'seq_id'", "]", ")", ".", "mean", "(", ")", ".", "to_frame", "(", ")", ".", "T", ",", "headers", "=", "'keys'", ",", "tablefmt", "=", "'pipe'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.__init__": [[104, 144], ["tkinter.Tk.__init__", "run_gui.MainGUIApp.wm_title", "run_gui.MainGUIApp.geometry", "tkinter.StringVar", "tkinter.StringVar", "tkinter.IntVar", "tkinter.IntVar", "tkinter.IntVar", "tkinter.IntVar", "tkinter.StringVar", "tkinter.StringVar", "tkinter.StringVar", "tkinter.StringVar", "tkinter.IntVar", "tkinter.IntVar", "tkinter.StringVar", "tkinter.StringVar", "run_gui.MainGUIApp._make_global_toolbar", "run_gui.MainGUIApp.pack", "tkinter.ttk.Notebook", "tkinter.ttk.Notebook", "run_gui.MainGUIApp.notebook.pack", "run_gui.MainGUIApp.notebook.bind", "run_gui.MainGUIApp.var_pred_visible.set", "run_gui.MainGUIApp.update_current_tab", "run_gui.MainGUIApp._make_overview_tab", "run_gui.MainGUIApp._make_heatmap_tab"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp._make_global_toolbar", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.update_current_tab", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp._make_overview_tab", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp._make_heatmap_tab"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "device", ",", "model", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "model", "=", "model", "\n", "\n", "self", ".", "wm_title", "(", "'3D pose estimation'", ")", "\n", "self", ".", "geometry", "(", "'1280x800'", ")", "\n", "\n", "matplotlib", ".", "rcParams", "[", "'savefig.format'", "]", "=", "'svg'", "\n", "matplotlib", ".", "rcParams", "[", "'savefig.directory'", "]", "=", "os", ".", "curdir", "\n", "\n", "# Variables", "\n", "self", ".", "var_cur_example", "=", "tk", ".", "StringVar", "(", ")", "\n", "self", ".", "var_pred_visible", "=", "tk", ".", "IntVar", "(", "value", "=", "0", ")", "\n", "self", ".", "var_gt_visible", "=", "tk", ".", "IntVar", "(", "value", "=", "1", ")", "\n", "self", ".", "var_mpjpe", "=", "tk", ".", "StringVar", "(", "value", "=", "'??'", ")", "\n", "self", ".", "var_pck", "=", "tk", ".", "StringVar", "(", "value", "=", "'??'", ")", "\n", "self", ".", "var_aligned", "=", "tk", ".", "IntVar", "(", "value", "=", "0", ")", "\n", "self", ".", "var_joint", "=", "tk", ".", "StringVar", "(", "value", "=", "'pelvis'", ")", "\n", "\n", "if", "self", ".", "model", "is", "not", "None", ":", "\n", "            ", "self", ".", "var_pred_visible", ".", "set", "(", "1", ")", "\n", "\n", "", "global_toolbar", "=", "self", ".", "_make_global_toolbar", "(", "self", ")", "\n", "global_toolbar", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "X", ")", "\n", "\n", "self", ".", "notebook", "=", "ttk", ".", "Notebook", "(", "self", ")", "\n", "self", ".", "notebook", ".", "pack", "(", "side", "=", "tk", ".", "BOTTOM", ",", "fill", "=", "tk", ".", "BOTH", ",", "expand", "=", "True", ",", "padx", "=", "4", ",", "pady", "=", "4", ")", "\n", "def", "on_change_tab", "(", "event", ")", ":", "\n", "            ", "self", ".", "update_current_tab", "(", ")", "\n", "", "self", ".", "notebook", ".", "bind", "(", "'<<NotebookTabChanged>>'", ",", "on_change_tab", ")", "\n", "\n", "self", ".", "tab_update_funcs", "=", "[", "\n", "self", ".", "_make_overview_tab", "(", "self", ".", "notebook", ")", ",", "\n", "self", ".", "_make_heatmap_tab", "(", "self", ".", "notebook", ")", ",", "\n", "]", "\n", "\n", "self", ".", "current_example_index", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.current_example_index": [[149, 153], ["run_gui.MainGUIApp.var_cur_example.set", "run_gui.MainGUIApp.on_change_example", "str"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.on_change_example"], ["", "@", "current_example_index", ".", "setter", "\n", "def", "current_example_index", "(", "self", ",", "value", ")", ":", "\n", "        ", "self", ".", "var_cur_example", ".", "set", "(", "str", "(", "value", ")", ")", "\n", "self", ".", "on_change_example", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.pred_visible": [[154, 157], ["run_gui.MainGUIApp.var_pred_visible.get"], "methods", ["None"], ["", "@", "property", "\n", "def", "pred_visible", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "var_pred_visible", ".", "get", "(", ")", "!=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.gt_visible": [[158, 161], ["run_gui.MainGUIApp.var_gt_visible.get"], "methods", ["None"], ["", "@", "property", "\n", "def", "gt_visible", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "var_gt_visible", ".", "get", "(", ")", "!=", "0", "and", "self", ".", "current_example", "[", "'gt_skel'", "]", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.is_aligned": [[162, 165], ["run_gui.MainGUIApp.var_aligned.get"], "methods", ["None"], ["", "@", "property", "\n", "def", "is_aligned", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "var_aligned", ".", "get", "(", ")", "!=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.update_current_tab": [[166, 184], ["run_gui.MainGUIApp.notebook.index", "run_gui.root_relative", "run_gui.root_relative", "run_gui.MainGUIApp.var_mpjpe.set", "run_gui.MainGUIApp.var_pck.set", "margipose.data.skeleton.apply_rigid_alignment", "margipose.data.skeleton.CanonicalSkeletonDesc.joint_names.index", "margipose.eval.mpjpe", "margipose.eval.pck"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.root_relative", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.root_relative", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.apply_rigid_alignment", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.mpjpe", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.pck"], ["", "def", "update_current_tab", "(", "self", ")", ":", "\n", "        ", "cur_tab_index", "=", "self", ".", "notebook", ".", "index", "(", "'current'", ")", "\n", "\n", "if", "self", ".", "model", "is", "not", "None", "and", "self", ".", "current_example", "[", "'gt_skel'", "]", ":", "\n", "            ", "actual", "=", "root_relative", "(", "self", ".", "current_example", "[", "'pred_skel'", "]", "[", "'camera_space'", "]", ")", "\n", "expected", "=", "root_relative", "(", "self", ".", "current_example", "[", "'gt_skel'", "]", "[", "'original'", "]", ")", "\n", "\n", "if", "self", ".", "is_aligned", ":", "\n", "                ", "actual", "=", "apply_rigid_alignment", "(", "actual", ",", "expected", ")", "\n", "\n", "", "included_joints", "=", "[", "\n", "CanonicalSkeletonDesc", ".", "joint_names", ".", "index", "(", "joint_name", ")", "\n", "for", "joint_name", "in", "VNect_Common_Skeleton", "\n", "]", "\n", "self", ".", "var_mpjpe", ".", "set", "(", "'{:0.4f}'", ".", "format", "(", "mpjpe", "(", "actual", ",", "expected", ",", "included_joints", ")", ")", ")", "\n", "self", ".", "var_pck", ".", "set", "(", "'{:0.4f}'", ".", "format", "(", "pck", "(", "actual", ",", "expected", ",", "included_joints", ")", ")", ")", "\n", "\n", "", "self", ".", "tab_update_funcs", "[", "cur_tab_index", "]", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp._make_global_toolbar": [[185, 216], ["tkinter.Frame", "tkinter.Frame", "run_gui.MainGUIApp._make_global_toolbar.add_label"], "methods", ["None"], ["", "def", "_make_global_toolbar", "(", "self", ",", "master", ")", ":", "\n", "        ", "toolbar", "=", "tk", ".", "Frame", "(", "master", ",", "bd", "=", "1", ",", "relief", "=", "tk", ".", "RAISED", ")", "\n", "\n", "def", "add_label", "(", "text", ")", ":", "\n", "            ", "opts", "=", "dict", "(", "text", "=", "text", ")", "if", "isinstance", "(", "text", ",", "str", ")", "else", "dict", "(", "textvariable", "=", "text", ")", "\n", "label", "=", "tk", ".", "Label", "(", "toolbar", ",", "**", "opts", ")", "\n", "label", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "Y", ",", "padx", "=", "2", ",", "pady", "=", "2", ")", "\n", "return", "label", "\n", "\n", "", "add_label", "(", "'Example index:'", ")", "\n", "txt_cur_example", "=", "tk", ".", "Spinbox", "(", "\n", "toolbar", ",", "textvariable", "=", "self", ".", "var_cur_example", ",", "command", "=", "self", ".", "on_change_example", ",", "\n", "wrap", "=", "True", ",", "from_", "=", "0", ",", "to", "=", "len", "(", "self", ".", "dataset", ")", "-", "1", ",", "font", "=", "tk", ".", "font", ".", "Font", "(", "size", "=", "12", ")", ")", "\n", "def", "on_key_cur_example", "(", "event", ")", ":", "\n", "            ", "if", "event", ".", "keysym", "==", "'Return'", ":", "\n", "                ", "self", ".", "on_change_example", "(", ")", "\n", "", "", "txt_cur_example", ".", "bind", "(", "'<Key>'", ",", "on_key_cur_example", ")", "\n", "txt_cur_example", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "Y", ",", "padx", "=", "2", ",", "pady", "=", "2", ")", "\n", "\n", "if", "self", ".", "model", "is", "not", "None", ":", "\n", "            ", "add_label", "(", "'MPJPE:'", ")", "\n", "add_label", "(", "self", ".", "var_mpjpe", ")", "\n", "add_label", "(", "'PCK@150mm:'", ")", "\n", "add_label", "(", "self", ".", "var_pck", ")", "\n", "\n", "chk_aligned", "=", "tk", ".", "Checkbutton", "(", "\n", "toolbar", ",", "text", "=", "'Procrustes alignment'", ",", "variable", "=", "self", ".", "var_aligned", ",", "\n", "command", "=", "lambda", ":", "self", ".", "update_current_tab", "(", ")", ")", "\n", "chk_aligned", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "Y", ",", "padx", "=", "2", ",", "pady", "=", "2", ")", "\n", "\n", "", "return", "toolbar", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp._make_overview_tab": [[217, 281], ["tkinter.Frame", "tkinter.Frame", "notebook.add", "tkinter.Frame", "tkinter.Frame", "tkinter.Frame.pack", "tkinter.Checkbutton", "tkinter.Checkbutton", "tkinter.Checkbutton.pack", "tkinter.Checkbutton", "tkinter.Checkbutton", "tkinter.Checkbutton.pack", "matplotlib.figure.Figure", "matplotlib.figure.Figure", "matplotlib.figure.Figure.subplots_adjust", "matplotlib.figure.Figure.subplots_adjust", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.draw", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.draw", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.get_tk_widget().pack", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.get_tk_widget().pack", "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk", "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk", "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk.update", "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk.update", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg._tkcanvas.pack", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg._tkcanvas.pack", "run_gui.MainGUIApp.var_pred_visible.set", "tkinter.Checkbutton.configure", "hasattr", "run_gui.MainGUIApp.var_gt_visible.set", "tkinter.Checkbutton.configure", "matplotlib.figure.Figure.clf", "matplotlib.figure.Figure.clf", "matplotlib.figure.Figure.add_subplot", "matplotlib.figure.Figure.add_subplot", "matplotlib.figure.Figure.add_subplot", "matplotlib.figure.Figure.add_subplot", "matplotlib.figure.Figure.add_subplot.imshow", "run_gui.root_relative", "enumerate", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.draw", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.draw", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.get_tk_widget", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.get_tk_widget", "skels.append", "skels.append", "run_gui.root_relative", "margipose.utils.plot_skeleton_on_axes3d", "margipose.utils.plot_skeleton_on_axes", "ax1.view_init", "run_gui.MainGUIApp.update_current_tab", "run_gui.MainGUIApp.update_current_tab", "margipose.data.skeleton.apply_rigid_alignment"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.root_relative", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.root_relative", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.plot_skeleton_on_axes3d", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.plot_skeleton_on_axes", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.update_current_tab", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.update_current_tab", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.apply_rigid_alignment"], ["", "def", "_make_overview_tab", "(", "self", ",", "notebook", ":", "ttk", ".", "Notebook", ")", ":", "\n", "        ", "tab", "=", "tk", ".", "Frame", "(", "notebook", ")", "\n", "notebook", ".", "add", "(", "tab", ",", "text", "=", "'Overview'", ")", "\n", "\n", "toolbar", "=", "tk", ".", "Frame", "(", "tab", ",", "bd", "=", "1", ",", "relief", "=", "tk", ".", "RAISED", ")", "\n", "toolbar", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "X", ")", "\n", "chk_pred_visible", "=", "tk", ".", "Checkbutton", "(", "\n", "toolbar", ",", "text", "=", "'Show prediction'", ",", "variable", "=", "self", ".", "var_pred_visible", ",", "\n", "command", "=", "lambda", ":", "self", ".", "update_current_tab", "(", ")", ")", "\n", "chk_pred_visible", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "Y", ",", "padx", "=", "2", ",", "pady", "=", "2", ")", "\n", "if", "self", ".", "model", "is", "None", ":", "\n", "            ", "self", ".", "var_pred_visible", ".", "set", "(", "0", ")", "\n", "chk_pred_visible", ".", "configure", "(", "state", "=", "'disabled'", ")", "\n", "", "chk_gt_visible", "=", "tk", ".", "Checkbutton", "(", "\n", "toolbar", ",", "text", "=", "'Show ground truth'", ",", "variable", "=", "self", ".", "var_gt_visible", ",", "\n", "command", "=", "lambda", ":", "self", ".", "update_current_tab", "(", ")", ")", "\n", "if", "hasattr", "(", "self", ".", "dataset", ",", "'subset'", ")", "and", "self", ".", "dataset", ".", "subset", "==", "'test'", ":", "\n", "            ", "self", ".", "var_gt_visible", ".", "set", "(", "0", ")", "\n", "chk_gt_visible", ".", "configure", "(", "state", "=", "'disabled'", ")", "\n", "", "chk_gt_visible", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "Y", ",", "padx", "=", "2", ",", "pady", "=", "2", ")", "\n", "\n", "fig", "=", "Figure", "(", ")", "\n", "fig", ".", "subplots_adjust", "(", "0.05", ",", "0.10", ",", "0.95", ",", "0.95", ",", "0.05", ",", "0.05", ")", "\n", "canvas", "=", "FigureCanvasTkAgg", "(", "fig", ",", "tab", ")", "\n", "canvas", ".", "draw", "(", ")", "\n", "canvas", ".", "get_tk_widget", "(", ")", ".", "pack", "(", "side", "=", "tk", ".", "BOTTOM", ",", "fill", "=", "tk", ".", "BOTH", ",", "expand", "=", "True", ")", "\n", "nav_toolbar", "=", "NavigationToolbar2Tk", "(", "canvas", ",", "tab", ")", "\n", "nav_toolbar", ".", "update", "(", ")", "\n", "canvas", ".", "_tkcanvas", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "BOTH", ",", "expand", "=", "True", ")", "\n", "\n", "prev_ax1", ":", "Axes3D", "=", "None", "\n", "\n", "def", "update_tab", "(", ")", ":", "\n", "            ", "fig", ".", "clf", "(", ")", "\n", "\n", "skels", "=", "[", "]", "\n", "if", "self", ".", "pred_visible", ":", "\n", "                ", "skels", ".", "append", "(", "self", ".", "current_example", "[", "'pred_skel'", "]", ")", "\n", "", "if", "self", ".", "gt_visible", ":", "\n", "                ", "skels", ".", "append", "(", "self", ".", "current_example", "[", "'gt_skel'", "]", ")", "\n", "\n", "", "ax1", ":", "Axes3D", "=", "fig", ".", "add_subplot", "(", "1", ",", "2", ",", "1", ",", "projection", "=", "'3d'", ")", "\n", "ax2", "=", "fig", ".", "add_subplot", "(", "1", ",", "2", ",", "2", ")", "\n", "ax2", ".", "imshow", "(", "self", ".", "current_example", "[", "'input_image'", "]", ")", "\n", "\n", "ground_truth", "=", "root_relative", "(", "self", ".", "current_example", "[", "'gt_skel'", "]", "[", "'original'", "]", ")", "\n", "for", "i", ",", "skel", "in", "enumerate", "(", "skels", ")", ":", "\n", "                ", "alpha", "=", "1", "/", "(", "3", "**", "i", ")", "\n", "skel3d", "=", "root_relative", "(", "skel", "[", "'camera_space'", "]", ")", "\n", "if", "self", ".", "is_aligned", ":", "\n", "                    ", "skel3d", "=", "apply_rigid_alignment", "(", "skel3d", ",", "ground_truth", ")", "\n", "", "plot_skeleton_on_axes3d", "(", "skel3d", ",", "CanonicalSkeletonDesc", ",", "\n", "ax1", ",", "invert", "=", "True", ",", "alpha", "=", "alpha", ")", "\n", "plot_skeleton_on_axes", "(", "skel", "[", "'image_space'", "]", ",", "CanonicalSkeletonDesc", ",", "ax2", ",", "alpha", "=", "alpha", ")", "\n", "\n", "# Preserve 3D axes view", "\n", "", "nonlocal", "prev_ax1", "\n", "if", "prev_ax1", "is", "not", "None", ":", "\n", "                ", "ax1", ".", "view_init", "(", "prev_ax1", ".", "elev", ",", "prev_ax1", ".", "azim", ")", "\n", "", "prev_ax1", "=", "ax1", "\n", "\n", "canvas", ".", "draw", "(", ")", "\n", "\n", "", "return", "update_tab", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp._make_heatmap_tab": [[282, 369], ["tkinter.Frame", "tkinter.Frame", "len", "notebook.add", "tkinter.Frame", "tkinter.Frame", "tkinter.Frame.pack", "list", "tkinter.OptionMenu", "tkinter.OptionMenu", "tkinter.OptionMenu.pack", "tkinter.IntVar", "tkinter.IntVar", "tkinter.Checkbutton", "tkinter.Checkbutton", "tkinter.Checkbutton.pack", "tkinter.IntVar", "tkinter.IntVar", "tkinter.Checkbutton", "tkinter.Checkbutton", "tkinter.Checkbutton.pack", "matplotlib.figure.Figure", "matplotlib.figure.Figure", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.draw", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.draw", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.get_tk_widget().pack", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.get_tk_widget().pack", "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk", "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk", "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk.update", "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk.update", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg._tkcanvas.pack", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg._tkcanvas.pack", "notebook.tabs", "notebook.tab", "sorted", "matplotlib.figure.Figure.clf", "matplotlib.figure.Figure.clf", "run_gui.MainGUIApp.dataset.skeleton_desc.joint_names.index", "matplotlib.get_cmap", "matplotlib.get_cmap", "[].size", "matplotlib.figure.Figure.add_subplot", "matplotlib.figure.Figure.add_subplot", "margipose.utils.plot_skeleton_on_axes3d", "matplotlib.figure.Figure.add_subplot.set_xlim", "matplotlib.figure.Figure.add_subplot.set_ylim", "matplotlib.figure.Figure.add_subplot.set_zlim", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.draw", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.draw", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.get_tk_widget", "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg.get_tk_widget", "run_gui.MainGUIApp.var_joint.get", "matplotlib.figure.Figure.add_subplot", "matplotlib.figure.Figure.add_subplot", "matplotlib.figure.Figure.add_subplot.set_xlabel", "matplotlib.figure.Figure.add_subplot.set_ylabel", "matplotlib.figure.Figure.add_subplot.imshow", "matplotlib.figure.Figure.add_subplot.view_init", "run_gui.MainGUIApp.update_current_tab", "run_gui.MainGUIApp.update_current_tab", "run_gui.MainGUIApp.update_current_tab", "hm.size", "hm.size", "matplotlib.figure.Figure.add_subplot.imshow", "tkinter.IntVar.get", "matplotlib.figure.Figure.add_subplot.axvline", "matplotlib.figure.Figure.add_subplot.axhline", "tkinter.IntVar.get", "numpy.average", "numpy.average", "numpy.arange", "numpy.arange", "run_gui.root_relative", "hm.size", "numpy.array", "hm.size", "numpy.array", "hm.sum", "hm.sum"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.plot_skeleton_on_axes3d", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.update_current_tab", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.update_current_tab", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.update_current_tab", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.root_relative"], ["", "def", "_make_heatmap_tab", "(", "self", ",", "notebook", ":", "ttk", ".", "Notebook", ")", ":", "\n", "        ", "tab", "=", "tk", ".", "Frame", "(", "notebook", ")", "\n", "tab_index", "=", "len", "(", "notebook", ".", "tabs", "(", ")", ")", "\n", "notebook", ".", "add", "(", "tab", ",", "text", "=", "'Heatmaps'", ")", "\n", "\n", "if", "self", ".", "model", "is", "None", ":", "\n", "            ", "notebook", ".", "tab", "(", "tab_index", ",", "state", "=", "'disabled'", ")", "\n", "\n", "", "toolbar", "=", "tk", ".", "Frame", "(", "tab", ",", "bd", "=", "1", ",", "relief", "=", "tk", ".", "RAISED", ")", "\n", "toolbar", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "X", ")", "\n", "\n", "joint_names", "=", "list", "(", "sorted", "(", "self", ".", "dataset", ".", "skeleton_desc", ".", "joint_names", ")", ")", "\n", "\n", "opt_joint", "=", "tk", ".", "OptionMenu", "(", "\n", "toolbar", ",", "self", ".", "var_joint", ",", "*", "joint_names", ",", "\n", "command", "=", "lambda", "event", ":", "self", ".", "update_current_tab", "(", ")", ")", "\n", "opt_joint", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "Y", ",", "padx", "=", "2", ",", "pady", "=", "2", ")", "\n", "\n", "var_image_visible", "=", "tk", ".", "IntVar", "(", "value", "=", "1", ")", "\n", "chk_image_visible", "=", "tk", ".", "Checkbutton", "(", "\n", "toolbar", ",", "text", "=", "'Show image overlay'", ",", "variable", "=", "var_image_visible", ",", "\n", "command", "=", "lambda", ":", "self", ".", "update_current_tab", "(", ")", ")", "\n", "chk_image_visible", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "Y", ",", "padx", "=", "2", ",", "pady", "=", "2", ")", "\n", "\n", "var_mean_crosshairs", "=", "tk", ".", "IntVar", "(", "value", "=", "1", ")", "\n", "chk_mean_crosshairs", "=", "tk", ".", "Checkbutton", "(", "\n", "toolbar", ",", "text", "=", "'Show mean'", ",", "variable", "=", "var_mean_crosshairs", ",", "\n", "command", "=", "lambda", ":", "self", ".", "update_current_tab", "(", ")", ")", "\n", "chk_mean_crosshairs", ".", "pack", "(", "side", "=", "tk", ".", "LEFT", ",", "fill", "=", "tk", ".", "Y", ",", "padx", "=", "2", ",", "pady", "=", "2", ")", "\n", "\n", "fig", "=", "Figure", "(", ")", "\n", "canvas", "=", "FigureCanvasTkAgg", "(", "fig", ",", "tab", ")", "\n", "canvas", ".", "draw", "(", ")", "\n", "canvas", ".", "get_tk_widget", "(", ")", ".", "pack", "(", "side", "=", "tk", ".", "BOTTOM", ",", "fill", "=", "tk", ".", "BOTH", ",", "expand", "=", "True", ")", "\n", "nav_toolbar", "=", "NavigationToolbar2Tk", "(", "canvas", ",", "tab", ")", "\n", "nav_toolbar", ".", "update", "(", ")", "\n", "canvas", ".", "_tkcanvas", ".", "pack", "(", "side", "=", "tk", ".", "TOP", ",", "fill", "=", "tk", ".", "BOTH", ",", "expand", "=", "True", ")", "\n", "\n", "prev_ax3d", ":", "Axes3D", "=", "None", "\n", "\n", "def", "update_tab", "(", ")", ":", "\n", "            ", "fig", ".", "clf", "(", ")", "\n", "joint_index", "=", "self", ".", "dataset", ".", "skeleton_desc", ".", "joint_names", ".", "index", "(", "self", ".", "var_joint", ".", "get", "(", ")", ")", "\n", "\n", "cmap", "=", "plt", ".", "get_cmap", "(", "'gist_yarg'", ")", "\n", "img", "=", "self", ".", "current_example", "[", "'input_image'", "]", "\n", "hms", "=", "[", "\n", "(", "3", ",", "self", ".", "current_example", "[", "'xy_heatmaps'", "]", "[", "-", "1", "]", "[", "joint_index", "]", ",", "(", "'x'", ",", "'y'", ")", ")", ",", "\n", "(", "1", ",", "self", ".", "current_example", "[", "'xz_heatmaps'", "]", "[", "-", "1", "]", "[", "joint_index", "]", ",", "(", "'x'", ",", "'z'", ")", ")", ",", "\n", "(", "4", ",", "self", ".", "current_example", "[", "'zy_heatmaps'", "]", "[", "-", "1", "]", "[", "joint_index", "]", ",", "(", "'z'", ",", "'y'", ")", ")", ",", "\n", "]", "\n", "\n", "for", "subplot_id", ",", "hm", ",", "(", "xlabel", ",", "ylabel", ")", "in", "hms", ":", "\n", "                ", "ax", "=", "fig", ".", "add_subplot", "(", "2", ",", "2", ",", "subplot_id", ")", "\n", "ax", ".", "set_xlabel", "(", "xlabel", ")", "\n", "ax", ".", "set_ylabel", "(", "ylabel", ")", "\n", "extent", "=", "[", "0", ",", "hm", ".", "size", "(", "-", "1", ")", ",", "hm", ".", "size", "(", "-", "2", ")", ",", "0", "]", "\n", "ax", ".", "imshow", "(", "hm", ",", "cmap", "=", "cmap", ",", "extent", "=", "extent", ")", "\n", "if", "subplot_id", "==", "3", "and", "var_image_visible", ".", "get", "(", ")", "!=", "0", ":", "\n", "                    ", "ax", ".", "imshow", "(", "img", ",", "extent", "=", "extent", ",", "alpha", "=", "0.5", ")", "\n", "", "if", "var_mean_crosshairs", ".", "get", "(", ")", "!=", "0", ":", "\n", "                    ", "ax", ".", "axvline", "(", "\n", "np", ".", "average", "(", "np", ".", "arange", "(", "0", ",", "hm", ".", "size", "(", "-", "1", ")", ")", ",", "weights", "=", "np", ".", "array", "(", "hm", ".", "sum", "(", "-", "2", ")", ")", ")", ",", "\n", "ls", "=", "'dashed'", ",", "\n", ")", "\n", "ax", ".", "axhline", "(", "\n", "np", ".", "average", "(", "np", ".", "arange", "(", "0", ",", "hm", ".", "size", "(", "-", "2", ")", ")", ",", "weights", "=", "np", ".", "array", "(", "hm", ".", "sum", "(", "-", "1", ")", ")", ")", ",", "\n", "ls", "=", "'dashed'", ",", "\n", ")", "\n", "\n", "", "", "size", "=", "self", ".", "current_example", "[", "'xy_heatmaps'", "]", "[", "-", "1", "]", ".", "size", "(", "-", "1", ")", "\n", "ax", ":", "Axes3D", "=", "fig", ".", "add_subplot", "(", "2", ",", "2", ",", "2", ",", "projection", "=", "'3d'", ")", "\n", "plot_skeleton_on_axes3d", "(", "\n", "(", "root_relative", "(", "self", ".", "current_example", "[", "'pred_skel'", "]", "[", "'normalised'", "]", ")", "+", "1", ")", "*", "0.5", "*", "size", ",", "\n", "self", ".", "dataset", ".", "skeleton_desc", ",", "ax", ",", "invert", "=", "True", ")", "\n", "ax", ".", "set_xlim", "(", "0", ",", "size", ")", "\n", "ax", ".", "set_ylim", "(", "0", ",", "size", ")", "\n", "ax", ".", "set_zlim", "(", "size", ",", "0", ")", "\n", "# Preserve 3D axes view", "\n", "nonlocal", "prev_ax3d", "\n", "if", "prev_ax3d", "is", "not", "None", ":", "\n", "                ", "ax", ".", "view_init", "(", "prev_ax3d", ".", "elev", ",", "prev_ax3d", ".", "azim", ")", "\n", "", "prev_ax3d", "=", "ax", "\n", "\n", "canvas", ".", "draw", "(", ")", "\n", "\n", "", "return", "update_tab", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.on_change_example": [[370, 375], ["run_gui.load_and_process_example", "run_gui.MainGUIApp.update_current_tab"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.load_and_process_example", "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.MainGUIApp.update_current_tab"], ["", "def", "on_change_example", "(", "self", ")", ":", "\n", "        ", "self", ".", "current_example", "=", "load_and_process_example", "(", "\n", "self", ".", "dataset", ",", "self", ".", "current_example_index", ",", "self", ".", "device", ",", "self", ".", "model", ")", "\n", "\n", "self", ".", "update_current_tab", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.parse_args": [[32, 46], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args"], ["def", "parse_args", "(", "argv", ")", ":", "\n", "    ", "\"\"\"Parse command-line arguments.\"\"\"", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "prog", "=", "'margipose-gui'", ",", "\n", "description", "=", "'3D human pose browser GUI'", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "metavar", "=", "'FILE'", ",", "\n", "help", "=", "'path to model file'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "type", "=", "str", ",", "metavar", "=", "'STR'", ",", "default", "=", "'mpi3d-test'", ",", "\n", "help", "=", "'dataset name'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", "[", "1", ":", "]", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.load_example": [[48, 68], ["functools.lru_cache", "dataset.input_to_pil_image", "dict", "dict", "pose3d_utils.coords.ensure_homogeneous", "dataset.denormalise_with_skeleton_height", "camera.project_cartesian", "dataset.untransform_skeleton"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.input_to_pil_image", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise_with_skeleton_height", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.untransform_skeleton"], ["", "@", "lru_cache", "(", "maxsize", "=", "32", ")", "\n", "def", "load_example", "(", "dataset", ",", "example_index", ")", ":", "\n", "    ", "example", "=", "dataset", "[", "example_index", "]", "\n", "input", "=", "example", "[", "'input'", "]", "\n", "input_image", "=", "dataset", ".", "input_to_pil_image", "(", "input", ")", "\n", "camera", "=", "example", "[", "'camera_intrinsic'", "]", "\n", "transform_opts", "=", "example", "[", "'transform_opts'", "]", "\n", "gt_skel", "=", "None", "\n", "if", "'target'", "in", "example", ":", "\n", "        ", "gt_skel", "=", "dict", "(", "original", "=", "example", "[", "'original_skel'", "]", ")", "\n", "gt_skel_norm", "=", "ensure_homogeneous", "(", "example", "[", "'target'", "]", ",", "d", "=", "3", ")", "\n", "gt_skel_denorm", "=", "dataset", ".", "denormalise_with_skeleton_height", "(", "gt_skel_norm", ",", "camera", ",", "transform_opts", ")", "\n", "gt_skel", "[", "'image_space'", "]", "=", "camera", ".", "project_cartesian", "(", "gt_skel_denorm", ")", "\n", "gt_skel", "[", "'camera_space'", "]", "=", "dataset", ".", "untransform_skeleton", "(", "gt_skel_denorm", ",", "transform_opts", ")", "\n", "", "return", "dict", "(", "\n", "input", "=", "input", ",", "\n", "input_image", "=", "input_image", ",", "\n", "camera", "=", "camera", ",", "\n", "transform_opts", "=", "transform_opts", ",", "\n", "gt_skel", "=", "gt_skel", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.load_and_process_example": [[71, 93], ["functools.lru_cache", "run_gui.load_example", "example[].unsqueeze().to", "model", "pose3d_utils.coords.ensure_homogeneous", "dataset.denormalise_with_skeleton_height", "example[].project_cartesian", "dataset.untransform_skeleton", "dict", "model.squeeze().to", "example[].unsqueeze", "dict", "model.squeeze", "hm.squeeze().to", "hm.squeeze().to", "hm.squeeze().to", "hm.squeeze", "hm.squeeze", "hm.squeeze"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.load_example", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise_with_skeleton_height", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.untransform_skeleton"], ["", "@", "lru_cache", "(", "maxsize", "=", "32", ")", "\n", "def", "load_and_process_example", "(", "dataset", ",", "example_index", ",", "device", ",", "model", ")", ":", "\n", "    ", "example", "=", "load_example", "(", "dataset", ",", "example_index", ")", "\n", "if", "model", "is", "None", ":", "\n", "        ", "return", "example", "\n", "", "in_var", "=", "example", "[", "'input'", "]", ".", "unsqueeze", "(", "0", ")", ".", "to", "(", "device", ",", "torch", ".", "float32", ")", "\n", "out_var", "=", "model", "(", "in_var", ")", "\n", "pred_skel_norm", "=", "ensure_homogeneous", "(", "out_var", ".", "squeeze", "(", "0", ")", ".", "to", "(", "CPU", ",", "torch", ".", "float64", ")", ",", "d", "=", "3", ")", "\n", "pred_skel_denorm", "=", "dataset", ".", "denormalise_with_skeleton_height", "(", "\n", "pred_skel_norm", ",", "example", "[", "'camera'", "]", ",", "example", "[", "'transform_opts'", "]", ")", "\n", "pred_skel_image_space", "=", "example", "[", "'camera'", "]", ".", "project_cartesian", "(", "pred_skel_denorm", ")", "\n", "pred_skel_camera_space", "=", "dataset", ".", "untransform_skeleton", "(", "pred_skel_denorm", ",", "example", "[", "'transform_opts'", "]", ")", "\n", "return", "dict", "(", "\n", "pred_skel", "=", "dict", "(", "\n", "normalised", "=", "pred_skel_norm", ",", "\n", "camera_space", "=", "pred_skel_camera_space", ",", "\n", "image_space", "=", "pred_skel_image_space", ",", "\n", ")", ",", "\n", "xy_heatmaps", "=", "[", "hm", ".", "squeeze", "(", "0", ")", ".", "to", "(", "CPU", ",", "torch", ".", "float32", ")", "for", "hm", "in", "model", ".", "xy_heatmaps", "]", ",", "\n", "zy_heatmaps", "=", "[", "hm", ".", "squeeze", "(", "0", ")", ".", "to", "(", "CPU", ",", "torch", ".", "float32", ")", "for", "hm", "in", "model", ".", "zy_heatmaps", "]", ",", "\n", "xz_heatmaps", "=", "[", "hm", ".", "squeeze", "(", "0", ")", ".", "to", "(", "CPU", ",", "torch", ".", "float32", ")", "for", "hm", "in", "model", ".", "xz_heatmaps", "]", ",", "\n", "**", "example", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.root_relative": [[96, 100], ["margipose.data.skeleton.absolute_to_root_relative", "pose3d_utils.coords.ensure_cartesian"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_root_relative"], ["", "def", "root_relative", "(", "skel", ")", ":", "\n", "    ", "return", "absolute_to_root_relative", "(", "\n", "ensure_cartesian", "(", "skel", ",", "d", "=", "3", ")", ",", "\n", "CanonicalSkeletonDesc", ".", "root_joint_id", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.run_gui.main": [[377, 399], ["run_gui.parse_args", "margipose.utils.seed_all", "margipose.utils.init_algorithms", "torch.set_grad_enabled", "margipose.data.get_dataset.get_dataset", "run_gui.MainGUIApp", "MainGUIApp.mainloop", "margipose.models.load_model().to().eval", "margipose.data_specs.DataSpecs", "margipose.data_specs.ImageSpecs", "margipose.data_specs.JointsSpecs", "margipose.models.load_model().to", "margipose.models.load_model"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.seed_all", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.init_algorithms", "home.repos.pwc.inspect_result.anibali_margipose.data.get_dataset.get_dataset", "home.repos.pwc.inspect_result.anibali_margipose.models.__init__.load_model"], ["", "", "def", "main", "(", "argv", ",", "common_opts", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", "argv", ")", "\n", "seed_all", "(", "12345", ")", "\n", "init_algorithms", "(", "deterministic", "=", "True", ")", "\n", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n", "device", "=", "common_opts", "[", "'device'", "]", "\n", "\n", "if", "args", ".", "model", ":", "\n", "        ", "model", "=", "load_model", "(", "args", ".", "model", ")", ".", "to", "(", "device", ")", ".", "eval", "(", ")", "\n", "data_specs", "=", "model", ".", "data_specs", "\n", "", "else", ":", "\n", "        ", "model", "=", "None", "\n", "data_specs", "=", "DataSpecs", "(", "\n", "ImageSpecs", "(", "224", ",", "mean", "=", "ImageSpecs", ".", "IMAGENET_MEAN", ",", "stddev", "=", "ImageSpecs", ".", "IMAGENET_STDDEV", ")", ",", "\n", "JointsSpecs", "(", "CanonicalSkeletonDesc", ",", "n_dims", "=", "3", ")", ",", "\n", ")", "\n", "\n", "", "dataset", "=", "get_dataset", "(", "args", ".", "dataset", ",", "data_specs", ",", "use_aug", "=", "False", ")", "\n", "\n", "app", "=", "MainGUIApp", "(", "dataset", ",", "device", ",", "model", ")", "\n", "app", ".", "mainloop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.hyperparam_search.forward_loss": [[37, 53], ["target_var.narrow.narrow", "margipose.dsntnn.average_loss", "model.forward_3d_losses", "model.forward_2d_losses", "model.forward_3d_losses", "model.forward_2d_losses", "torch.stack", "enumerate"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.average_loss", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_3d_losses", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_2d_losses", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_3d_losses", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_2d_losses"], ["def", "forward_loss", "(", "model", ",", "out_var", ",", "target_var", ",", "mask_var", ",", "valid_depth", ")", ":", "\n", "    ", "target_var", "=", "target_var", ".", "narrow", "(", "-", "1", ",", "0", ",", "3", ")", "\n", "\n", "if", "not", "0", "in", "valid_depth", ":", "\n", "        ", "losses", "=", "model", ".", "forward_3d_losses", "(", "out_var", ",", "target_var", ")", "\n", "", "elif", "not", "1", "in", "valid_depth", ":", "\n", "        ", "losses", "=", "model", ".", "forward_2d_losses", "(", "out_var", ",", "target_var", ")", "\n", "", "else", ":", "\n", "        ", "losses_3d", "=", "model", ".", "forward_3d_losses", "(", "out_var", ",", "target_var", ")", "\n", "losses_2d", "=", "model", ".", "forward_2d_losses", "(", "out_var", ",", "target_var", ")", "\n", "losses", "=", "torch", ".", "stack", "(", "[", "\n", "(", "losses_3d", "[", "i", "]", "if", "use_3d", "==", "1", "else", "losses_2d", "[", "i", "]", ")", "\n", "for", "i", ",", "use_3d", "in", "enumerate", "(", "valid_depth", ")", "\n", "]", ")", "\n", "\n", "", "return", "average_loss", "(", "losses", ",", "mask_var", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.hyperparam_search.sacred_main": [[72, 163], ["margipose.utils.seed_all", "margipose.utils.init_algorithms", "margipose.models.create_model().to", "margipose.train_helpers.create_train_dataloader", "iter", "print", "torch.optim.SGD", "tele.Telemetry", "tel[].set_value", "tel[].set_value", "numpy.geomspace", "enumerate", "hyperparam_search.sacred_main.set_progress"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.seed_all", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.init_algorithms", "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.create_train_dataloader"], ["@", "ex", ".", "main", "\n", "def", "sacred_main", "(", "_run", ":", "Run", ",", "seed", ",", "showoff", ",", "batch_size", ",", "model_desc", ",", "deterministic", ",", "train_datasets", ",", "\n", "lr_min", ",", "lr_max", ",", "max_iters", ",", "ema_beta", ",", "weight_decay", ",", "momentum", ")", ":", "\n", "    ", "seed_all", "(", "seed", ")", "\n", "init_algorithms", "(", "deterministic", "=", "deterministic", ")", "\n", "\n", "model", "=", "create_model", "(", "model_desc", ")", ".", "to", "(", "global_opts", "[", "'device'", "]", ")", "\n", "data_loader", "=", "create_train_dataloader", "(", "train_datasets", ",", "model", ".", "data_specs", ",", "batch_size", ",", "\n", "examples_per_epoch", "=", "(", "max_iters", "*", "batch_size", ")", ")", "\n", "data_iter", "=", "iter", "(", "data_loader", ")", "\n", "\n", "print", "(", "json", ".", "dumps", "(", "model_desc", ",", "sort_keys", "=", "True", ",", "indent", "=", "2", ")", ")", "\n", "\n", "def", "do_training_iteration", "(", "optimiser", ")", ":", "\n", "        ", "batch", "=", "next", "(", "data_iter", ")", "\n", "\n", "in_var", "=", "batch", "[", "'input'", "]", ".", "to", "(", "global_opts", "[", "'device'", "]", ",", "torch", ".", "float32", ")", "\n", "target_var", "=", "batch", "[", "'target'", "]", ".", "to", "(", "global_opts", "[", "'device'", "]", ",", "torch", ".", "float32", ")", "\n", "mask_var", "=", "batch", "[", "'joint_mask'", "]", ".", "to", "(", "global_opts", "[", "'device'", "]", ",", "torch", ".", "float32", ")", "\n", "\n", "# Calculate predictions and loss", "\n", "out_var", "=", "model", "(", "in_var", ")", "\n", "loss", "=", "forward_loss", "(", "model", ",", "out_var", ",", "target_var", ",", "mask_var", ",", "batch", "[", "'valid_depth'", "]", ")", "\n", "\n", "# Calculate gradients", "\n", "optimiser", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "# Update parameters", "\n", "optimiser", ".", "step", "(", ")", "\n", "\n", "return", "loss", ".", "item", "(", ")", "\n", "\n", "", "optimiser", "=", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "1", ",", "weight_decay", "=", "weight_decay", ",", "momentum", "=", "momentum", ")", "\n", "\n", "tel", "=", "tele", ".", "Telemetry", "(", "{", "\n", "'config'", ":", "ValueMeter", "(", "skip_reset", "=", "True", ")", ",", "\n", "'host_info'", ":", "ValueMeter", "(", "skip_reset", "=", "True", ")", ",", "\n", "'loss_lr_fig'", ":", "ValueMeter", "(", ")", ",", "\n", "}", ")", "\n", "\n", "notebook", "=", "None", "\n", "if", "showoff", ":", "\n", "        ", "title", "=", "'Hyperparameter search ({}@{})'", ".", "format", "(", "model_desc", "[", "'type'", "]", ",", "model_desc", "[", "'version'", "]", ")", "\n", "notebook", "=", "create_showoff_notebook", "(", "title", ",", "[", "'lrfinder'", "]", ")", "\n", "\n", "from", "tele", ".", "showoff", "import", "views", "\n", "\n", "tel", ".", "sink", "(", "tele", ".", "showoff", ".", "Conf", "(", "notebook", ")", ",", "[", "\n", "views", ".", "Inspect", "(", "[", "'config'", "]", ",", "'Experiment configuration'", ",", "flatten", "=", "True", ")", ",", "\n", "views", ".", "Inspect", "(", "[", "'host_info'", "]", ",", "'Host information'", ",", "flatten", "=", "True", ")", ",", "\n", "views", ".", "FrameContent", "(", "[", "'loss_lr_fig'", "]", ",", "'Loss vs learning rate graph'", ",", "'plotly'", ")", ",", "\n", "]", ")", "\n", "\n", "", "def", "set_progress", "(", "value", ")", ":", "\n", "        ", "if", "notebook", "is", "not", "None", ":", "\n", "            ", "notebook", ".", "set_progress", "(", "value", ")", "\n", "\n", "", "", "tel", "[", "'config'", "]", ".", "set_value", "(", "_run", ".", "config", ")", "\n", "tel", "[", "'host_info'", "]", ".", "set_value", "(", "get_host_info", "(", ")", ")", "\n", "\n", "lrs", "=", "np", ".", "geomspace", "(", "lr_min", ",", "lr_max", ",", "max_iters", ")", "\n", "losses", "=", "[", "]", "\n", "avg_loss", "=", "0", "\n", "min_loss", "=", "np", ".", "inf", "\n", "for", "i", ",", "lr", "in", "enumerate", "(", "tqdm", "(", "lrs", ",", "ascii", "=", "True", ")", ")", ":", "\n", "        ", "set_progress", "(", "i", "/", "len", "(", "lrs", ")", ")", "\n", "\n", "for", "param_group", "in", "optimiser", ".", "param_groups", ":", "\n", "            ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "loss", "=", "do_training_iteration", "(", "optimiser", ")", "\n", "avg_loss", "=", "ema_beta", "*", "avg_loss", "+", "(", "1", "-", "ema_beta", ")", "*", "loss", "\n", "smoothed_loss", "=", "avg_loss", "/", "(", "1", "-", "ema_beta", "**", "(", "i", "+", "1", ")", ")", "\n", "if", "min_loss", ">", "0", "and", "smoothed_loss", ">", "4", "*", "min_loss", ":", "\n", "            ", "break", "\n", "", "min_loss", "=", "min", "(", "smoothed_loss", ",", "min_loss", ")", "\n", "losses", ".", "append", "(", "smoothed_loss", ")", "\n", "\n", "if", "i", "%", "10", "==", "0", ":", "\n", "            ", "fig", "=", "go", ".", "Figure", "(", "\n", "data", "=", "[", "go", ".", "Scatter", "(", "x", "=", "lrs", "[", ":", "len", "(", "losses", ")", "]", ".", "tolist", "(", ")", ",", "y", "=", "losses", ",", "mode", "=", "'lines'", ")", "]", ",", "\n", "layout", "=", "go", ".", "Layout", "(", "\n", "margin", "=", "go", ".", "Margin", "(", "l", "=", "60", ",", "r", "=", "40", ",", "b", "=", "80", ",", "t", "=", "20", ",", "pad", "=", "4", ")", ",", "\n", "xaxis", "=", "go", ".", "XAxis", "(", "title", "=", "'Learning rate'", ",", "type", "=", "'log'", ",", "exponentformat", "=", "'power'", ")", ",", "\n", "yaxis", "=", "go", ".", "YAxis", "(", "title", "=", "'Training loss'", ")", ",", "\n", ")", "\n", ")", "\n", "tel", "[", "'loss_lr_fig'", "]", ".", "set_value", "(", "fig", ")", "\n", "tel", ".", "step", "(", ")", "\n", "\n", "", "", "set_progress", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.hyperparam_search.main": [[165, 168], ["global_opts.update", "ex.run_commandline"], "function", ["None"], ["", "def", "main", "(", "argv", ",", "common_opts", ")", ":", "\n", "    ", "global_opts", ".", "update", "(", "common_opts", ")", "\n", "ex", ".", "run_commandline", "(", "argv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.infer_single.parse_args": [[28, 46], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args"], ["def", "parse_args", "(", "argv", ")", ":", "\n", "    ", "\"\"\"Parse command-line arguments.\"\"\"", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "prog", "=", "'margipose-infer'", ",", "\n", "description", "=", "'3D human pose inference'", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "type", "=", "str", ",", "metavar", "=", "'FILE'", ",", "default", "=", "argparse", ".", "SUPPRESS", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "'path to model file'", ")", "\n", "parser", ".", "add_argument", "(", "'--image'", ",", "type", "=", "str", ",", "metavar", "=", "'FILE'", ",", "default", "=", "argparse", ".", "SUPPRESS", ",", "\n", "required", "=", "True", ",", "\n", "help", "=", "'image file to infer pose from'", ")", "\n", "parser", ".", "add_argument", "(", "'--multicrop'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'enable the use of multiple crops'", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", "argv", "[", "1", ":", "]", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.infer_single.main": [[48, 78], ["infer_single.parse_args", "margipose.utils.seed_all", "margipose.utils.init_algorithms", "torch.set_grad_enabled", "margipose.models.load_model().to().eval", "PIL.Image.open", "image.thumbnail", "input_specs.convert().to", "pose3d_utils.coords.ensure_cartesian", "matplotlib.figure", "plt.figure.add_subplot", "plt.figure.add_subplot", "fig.add_subplot.imshow", "margipose.utils.plot_skeleton_on_axes3d", "matplotlib.show", "load_model().to().eval.", "output.to", "input_specs.unconvert", "margipose.models.load_model().to", "input_specs.convert", "input_specs.convert().to.to", "margipose.models.load_model"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.seed_all", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.init_algorithms", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.plot_skeleton_on_axes3d", "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.ImageSpecs.unconvert", "home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.ImageSpecs.convert", "home.repos.pwc.inspect_result.anibali_margipose.models.__init__.load_model"], ["", "def", "main", "(", "argv", ",", "common_opts", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", "argv", ")", "\n", "seed_all", "(", "12345", ")", "\n", "init_algorithms", "(", "deterministic", "=", "True", ")", "\n", "torch", ".", "set_grad_enabled", "(", "False", ")", "\n", "\n", "device", "=", "common_opts", "[", "'device'", "]", "\n", "\n", "assert", "args", ".", "multicrop", "==", "False", ",", "'TODO: Implement multi-crop for single image inference.'", "\n", "\n", "model", "=", "load_model", "(", "args", ".", "model", ")", ".", "to", "(", "device", ")", ".", "eval", "(", ")", "\n", "\n", "input_specs", ":", "ImageSpecs", "=", "model", ".", "data_specs", ".", "input_specs", "\n", "\n", "image", ":", "PIL", ".", "Image", ".", "Image", "=", "PIL", ".", "Image", ".", "open", "(", "args", ".", "image", ",", "'r'", ")", "\n", "image", ".", "thumbnail", "(", "(", "input_specs", ".", "width", ",", "input_specs", ".", "height", ")", ")", "\n", "inp", "=", "input_specs", ".", "convert", "(", "image", ")", ".", "to", "(", "device", ",", "torch", ".", "float32", ")", "\n", "\n", "output", "=", "model", "(", "inp", "[", "None", ",", "...", "]", ")", "[", "0", "]", "\n", "\n", "norm_skel3d", "=", "ensure_cartesian", "(", "output", ".", "to", "(", "CPU", ",", "torch", ".", "float64", ")", ",", "d", "=", "3", ")", "\n", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "16", ",", "8", ")", ")", "\n", "ax1", "=", "fig", ".", "add_subplot", "(", "1", ",", "2", ",", "1", ")", "\n", "ax2", ":", "Axes3D", "=", "fig", ".", "add_subplot", "(", "1", ",", "2", ",", "2", ",", "projection", "=", "'3d'", ")", "\n", "\n", "ax1", ".", "imshow", "(", "input_specs", ".", "unconvert", "(", "inp", ".", "to", "(", "CPU", ")", ")", ")", "\n", "plot_skeleton_on_axes3d", "(", "norm_skel3d", ",", "CanonicalSkeletonDesc", ",", "ax2", ",", "invert", "=", "True", ")", "\n", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.__init__.main": [[24, 36], ["margipose.cli.create_common_arg_parser", "margipose.cli.create_common_arg_parser.add_subparsers", "Subcommands.values", "margipose.cli.create_common_arg_parser.parse_known_args", "parser.add_subparsers.add_parser", "Subcommands[].run", "margipose.cli.create_common_arg_parser.print_usage"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.cli.create_common_arg_parser", "home.repos.pwc.inspect_result.anibali_margipose.margipose.cli.Subcommand.run"], []], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.Reporter.__init__": [[39, 64], ["tele.Telemetry", "tele.meter.ValueMeter", "tele.meter.ValueMeter", "tele.meter.ValueMeter", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.ValueMeter", "meters.update", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.MeanValueMeter", "tele.meter.ValueMeter"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "with_val", "=", "True", ")", ":", "\n", "        ", "meters", "=", "{", "\n", "'config'", ":", "ValueMeter", "(", "skip_reset", "=", "True", ")", ",", "\n", "'host_info'", ":", "ValueMeter", "(", "skip_reset", "=", "True", ")", ",", "\n", "'epoch'", ":", "ValueMeter", "(", ")", ",", "\n", "'data_load_time'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'data_transfer_time'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'forward_time'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'backward_time'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'optim_time'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'eval_time'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'train_loss'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'train_mpjpe'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'train_pck'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'train_examples'", ":", "ValueMeter", "(", ")", ",", "\n", "}", "\n", "if", "with_val", ":", "\n", "            ", "meters", ".", "update", "(", "{", "\n", "'val_loss'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'val_mpjpe'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'val_pck'", ":", "MeanValueMeter", "(", ")", ",", "\n", "'val_examples'", ":", "ValueMeter", "(", ")", ",", "\n", "}", ")", "\n", "", "self", ".", "with_val", "=", "with_val", "\n", "self", ".", "telemetry", "=", "tele", ".", "Telemetry", "(", "meters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.Reporter.setup_console_output": [[65, 75], ["train_3d.Reporter.telemetry.sink", "tele.console.Conf", "views.KeyValue"], "methods", ["None"], ["", "def", "setup_console_output", "(", "self", ")", ":", "\n", "        ", "\"\"\"Setup stdout reporting output.\"\"\"", "\n", "\n", "from", "tele", ".", "console", "import", "views", "\n", "if", "self", ".", "with_val", ":", "\n", "            ", "meters_to_print", "=", "[", "'train_loss'", ",", "'val_loss'", ",", "'train_pck'", ",", "'val_pck'", ",", "'val_mpjpe'", "]", "\n", "", "else", ":", "\n", "            ", "meters_to_print", "=", "[", "'train_loss'", ",", "'train_pck'", "]", "\n", "", "self", ".", "telemetry", ".", "sink", "(", "tele", ".", "console", ".", "Conf", "(", ")", ",", "[", "\n", "views", ".", "KeyValue", "(", "[", "mn", "]", ")", "for", "mn", "in", "meters_to_print", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.Reporter.setup_folder_output": [[77, 80], ["None"], "methods", ["None"], ["", "def", "setup_folder_output", "(", "self", ",", "out_dir", ")", ":", "\n", "        ", "\"\"\"Setup file system reporting output.\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.Reporter.setup_showoff_output": [[81, 108], ["train_3d.Reporter.telemetry.sink", "tele.showoff.Conf", "views.Images", "views.PlotlyLineGraph", "views.PlotlyLineGraph", "views.PlotlyLineGraph", "views.PlotlyLineGraph", "views.PlotlyLineGraph", "views.PlotlyLineGraph", "views.Inspect", "views.Inspect", "views.Images", "views.PlotlyLineGraph"], "methods", ["None"], ["", "def", "setup_showoff_output", "(", "self", ",", "notebook", ")", ":", "\n", "        ", "\"\"\"Setup Showoff reporting output.\"\"\"", "\n", "\n", "from", "tele", ".", "showoff", "import", "views", "\n", "\n", "if", "self", ".", "with_val", ":", "\n", "            ", "maybe_val_views", "=", "[", "\n", "views", ".", "Images", "(", "[", "'val_examples'", "]", ",", "'Validation example images'", ",", "images_per_row", "=", "2", ")", ",", "\n", "views", ".", "PlotlyLineGraph", "(", "[", "'train_loss'", ",", "'val_loss'", "]", ",", "'Loss'", ")", ",", "\n", "views", ".", "PlotlyLineGraph", "(", "[", "'train_mpjpe'", ",", "'val_mpjpe'", "]", ",", "'3D MPJPE'", ")", ",", "\n", "views", ".", "PlotlyLineGraph", "(", "[", "'train_pck'", ",", "'val_pck'", "]", ",", "'3D PCK@150mm'", ")", ",", "\n", "]", "\n", "", "else", ":", "\n", "            ", "maybe_val_views", "=", "[", "\n", "views", ".", "PlotlyLineGraph", "(", "[", "'train_loss'", "]", ",", "'Loss'", ")", ",", "\n", "views", ".", "PlotlyLineGraph", "(", "[", "'train_mpjpe'", "]", ",", "'3D MPJPE'", ")", ",", "\n", "views", ".", "PlotlyLineGraph", "(", "[", "'train_pck'", "]", ",", "'3D PCK@150mm'", ")", ",", "\n", "]", "\n", "", "self", ".", "telemetry", ".", "sink", "(", "tele", ".", "showoff", ".", "Conf", "(", "notebook", ")", ",", "[", "\n", "views", ".", "Inspect", "(", "[", "'config'", "]", ",", "'Experiment configuration'", ",", "flatten", "=", "True", ")", ",", "\n", "views", ".", "Inspect", "(", "[", "'host_info'", "]", ",", "'Host information'", ",", "flatten", "=", "True", ")", ",", "\n", "views", ".", "Images", "(", "[", "'train_examples'", "]", ",", "'Training example images'", ",", "images_per_row", "=", "2", ")", ",", "\n", "*", "maybe_val_views", ",", "\n", "views", ".", "PlotlyLineGraph", "(", "\n", "[", "'data_load_time'", ",", "'data_transfer_time'", ",", "'forward_time'", ",", "\n", "'backward_time'", ",", "'optim_time'", ",", "'eval_time'", "]", ",", "\n", "'Training time breakdown'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.Reporter.setup_sacred_output": [[111, 117], ["train_3d.Reporter.telemetry.sink", "tele.sacred.Conf", "views.Scalar"], "methods", ["None"], ["", "def", "setup_sacred_output", "(", "self", ",", "run", ":", "Run", ")", ":", "\n", "        ", "from", "tele", ".", "sacred", "import", "views", "\n", "scalars", "=", "[", "'train_loss'", ",", "'train_mpjpe'", ",", "'train_pck'", "]", "\n", "if", "self", ".", "with_val", ":", "\n", "            ", "scalars", "+=", "[", "'val_loss'", ",", "'val_mpjpe'", ",", "'val_pck'", "]", "\n", "", "self", ".", "telemetry", ".", "sink", "(", "tele", ".", "sacred", ".", "Conf", "(", "run", ")", ",", "[", "views", ".", "Scalar", "(", "scalars", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.calculate_performance_metrics": [[119, 124], ["dataset.evaluate_3d_batch", "mpjpe_meter.add", "pck_meter.add"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.evaluate_3d_batch"], ["", "", "def", "calculate_performance_metrics", "(", "batch", ",", "dataset", ",", "norm_pred_skels", ",", "mpjpe_meter", ",", "pck_meter", ")", ":", "\n", "    ", "metrics", "=", "dataset", ".", "evaluate_3d_batch", "(", "batch", ",", "norm_pred_skels", ")", "\n", "for", "m", "in", "metrics", ":", "\n", "        ", "mpjpe_meter", ".", "add", "(", "m", "[", "'mpjpe'", "]", ")", "\n", "pck_meter", ".", "add", "(", "m", "[", "'pck'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.forward_loss": [[126, 143], ["target_var.narrow.narrow", "margipose.dsntnn.average_loss", "model.forward_3d_losses", "model.forward_2d_losses", "model.forward_3d_losses", "model.forward_2d_losses", "torch.stack", "enumerate"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.average_loss", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_3d_losses", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_2d_losses", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_3d_losses", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_2d_losses"], ["", "", "@", "ex", ".", "capture", "\n", "def", "forward_loss", "(", "model", ",", "out_var", ",", "target_var", ",", "mask_var", ",", "valid_depth", ")", ":", "\n", "    ", "target_var", "=", "target_var", ".", "narrow", "(", "-", "1", ",", "0", ",", "3", ")", "\n", "\n", "if", "not", "0", "in", "valid_depth", ":", "\n", "        ", "losses", "=", "model", ".", "forward_3d_losses", "(", "out_var", ",", "target_var", ")", "\n", "", "elif", "not", "1", "in", "valid_depth", ":", "\n", "        ", "losses", "=", "model", ".", "forward_2d_losses", "(", "out_var", ",", "target_var", ")", "\n", "", "else", ":", "\n", "        ", "losses_3d", "=", "model", ".", "forward_3d_losses", "(", "out_var", ",", "target_var", ")", "\n", "losses_2d", "=", "model", ".", "forward_2d_losses", "(", "out_var", ",", "target_var", ")", "\n", "losses", "=", "torch", ".", "stack", "(", "[", "\n", "(", "losses_3d", "[", "i", "]", "if", "use_3d", "==", "1", "else", "losses_2d", "[", "i", "]", ")", "\n", "for", "i", ",", "use_3d", "in", "enumerate", "(", "valid_depth", ")", "\n", "]", ")", "\n", "\n", "", "return", "average_loss", "(", "losses", ",", "mask_var", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.do_training_pass": [[145, 197], ["hasattr", "model.train", "margipose.utils.generator_timer", "tel[].set_value", "scheduler.step", "margipose.train_helpers.progress_iter", "hasattr", "len", "on_progress", "scheduler.batch_step", "margipose.utils.timer", "batch[].to", "batch[].to", "batch[].to", "margipose.utils.timer", "model", "train_3d.forward_loss", "tel[].add", "margipose.utils.timer", "train_3d.calculate_performance_metrics", "margipose.utils.timer", "optimiser.zero_grad", "forward_loss.backward", "margipose.utils.timer", "optimiser.step", "model.to().detach", "margipose.train_helpers.visualise_predictions", "forward_loss.sum().item", "pose3d_utils.coords.ensure_homogeneous", "model.to().detach", "model.to", "forward_loss.sum", "model.to"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.generator_timer", "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.progress_iter", "home.repos.pwc.inspect_result.anibali_margipose.margipose.hyperparam_scheduler.HyperparameterScheduler.batch_step", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.timer", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.timer", "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.forward_loss", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.timer", "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.calculate_performance_metrics", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.timer", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.timer", "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.visualise_predictions"], ["", "def", "do_training_pass", "(", "epoch", ",", "model", ",", "tel", ",", "loader", ",", "scheduler", ",", "on_progress", ")", ":", "\n", "    ", "if", "hasattr", "(", "scheduler", ",", "'step'", ")", ":", "\n", "        ", "scheduler", ".", "step", "(", "epoch", ")", "\n", "", "optimiser", "=", "scheduler", ".", "optimizer", "\n", "\n", "vis_images", "=", "None", "\n", "samples_processed", "=", "0", "\n", "\n", "model", ".", "train", "(", ")", "\n", "for", "batch", "in", "generator_timer", "(", "progress_iter", "(", "loader", ",", "'Training'", ")", ",", "tel", "[", "'data_load_time'", "]", ")", ":", "\n", "        ", "if", "hasattr", "(", "scheduler", ",", "'batch_step'", ")", ":", "\n", "            ", "scheduler", ".", "batch_step", "(", ")", "\n", "\n", "", "with", "timer", "(", "tel", "[", "'data_transfer_time'", "]", ")", ":", "\n", "            ", "in_var", "=", "batch", "[", "'input'", "]", ".", "to", "(", "global_opts", "[", "'device'", "]", ",", "torch", ".", "float32", ")", "\n", "target_var", "=", "batch", "[", "'target'", "]", ".", "to", "(", "global_opts", "[", "'device'", "]", ",", "torch", ".", "float32", ")", "\n", "mask_var", "=", "batch", "[", "'joint_mask'", "]", ".", "to", "(", "global_opts", "[", "'device'", "]", ",", "torch", ".", "float32", ")", "\n", "\n", "# Calculate predictions and loss", "\n", "", "with", "timer", "(", "tel", "[", "'forward_time'", "]", ")", ":", "\n", "            ", "out_var", "=", "model", "(", "in_var", ")", "\n", "loss", "=", "forward_loss", "(", "model", ",", "out_var", ",", "target_var", ",", "mask_var", ",", "batch", "[", "'valid_depth'", "]", ")", "\n", "tel", "[", "'train_loss'", "]", ".", "add", "(", "loss", ".", "sum", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "# Calculate accuracy metrics", "\n", "", "with", "timer", "(", "tel", "[", "'eval_time'", "]", ")", ":", "\n", "            ", "calculate_performance_metrics", "(", "\n", "batch", ",", "\n", "loader", ".", "dataset", ",", "\n", "ensure_homogeneous", "(", "out_var", ".", "to", "(", "CPU", ",", "torch", ".", "float64", ")", ".", "detach", "(", ")", ",", "d", "=", "3", ")", ",", "\n", "tel", "[", "'train_mpjpe'", "]", ",", "\n", "tel", "[", "'train_pck'", "]", "\n", ")", "\n", "\n", "# Calculate gradients", "\n", "", "with", "timer", "(", "tel", "[", "'backward_time'", "]", ")", ":", "\n", "            ", "optimiser", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "# Update parameters", "\n", "", "with", "timer", "(", "tel", "[", "'optim_time'", "]", ")", ":", "\n", "            ", "optimiser", ".", "step", "(", ")", "\n", "\n", "# Update progress", "\n", "", "samples_processed", "+=", "len", "(", "batch", "[", "'input'", "]", ")", "\n", "on_progress", "(", "samples_processed", ")", "\n", "\n", "if", "vis_images", "is", "None", ":", "\n", "            ", "preds", "=", "out_var", ".", "to", "(", "CPU", ",", "torch", ".", "float64", ")", ".", "detach", "(", ")", "\n", "vis_images", "=", "visualise_predictions", "(", "preds", ",", "batch", ",", "loader", ".", "dataset", ")", "\n", "\n", "", "", "tel", "[", "'train_examples'", "]", ".", "set_value", "(", "vis_images", "[", ":", "8", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.do_validation_pass": [[199, 227], ["model.eval", "tel[].set_value", "torch.no_grad", "margipose.train_helpers.progress_iter", "batch[].to", "batch[].to", "batch[].to", "model", "train_3d.forward_loss", "tel[].add", "train_3d.calculate_performance_metrics", "forward_loss.sum().item", "pose3d_utils.coords.ensure_homogeneous", "model.to().detach", "margipose.train_helpers.visualise_predictions", "model.to().detach", "forward_loss.sum", "model.to", "model.to"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.progress_iter", "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.forward_loss", "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.calculate_performance_metrics", "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.visualise_predictions"], ["", "def", "do_validation_pass", "(", "epoch", ",", "model", ",", "tel", ",", "loader", ")", ":", "\n", "    ", "vis_images", "=", "None", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch", "in", "progress_iter", "(", "loader", ",", "'Validation'", ")", ":", "\n", "            ", "in_var", "=", "batch", "[", "'input'", "]", ".", "to", "(", "global_opts", "[", "'device'", "]", ",", "torch", ".", "float32", ")", "\n", "target_var", "=", "batch", "[", "'target'", "]", ".", "to", "(", "global_opts", "[", "'device'", "]", ",", "torch", ".", "float32", ")", "\n", "mask_var", "=", "batch", "[", "'joint_mask'", "]", ".", "to", "(", "global_opts", "[", "'device'", "]", ",", "torch", ".", "float32", ")", "\n", "\n", "# Calculate predictions and loss", "\n", "out_var", "=", "model", "(", "in_var", ")", "\n", "loss", "=", "forward_loss", "(", "model", ",", "out_var", ",", "target_var", ",", "mask_var", ",", "batch", "[", "'valid_depth'", "]", ")", "\n", "tel", "[", "'val_loss'", "]", ".", "add", "(", "loss", ".", "sum", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "calculate_performance_metrics", "(", "\n", "batch", ",", "\n", "loader", ".", "dataset", ",", "\n", "ensure_homogeneous", "(", "out_var", ".", "to", "(", "CPU", ",", "torch", ".", "float64", ")", ".", "detach", "(", ")", ",", "d", "=", "3", ")", ",", "\n", "tel", "[", "'val_mpjpe'", "]", ",", "\n", "tel", "[", "'val_pck'", "]", "\n", ")", "\n", "\n", "if", "vis_images", "is", "None", ":", "\n", "                ", "preds", "=", "out_var", ".", "to", "(", "CPU", ",", "torch", ".", "float64", ")", ".", "detach", "(", ")", "\n", "vis_images", "=", "visualise_predictions", "(", "preds", ",", "batch", ",", "loader", ".", "dataset", ")", "\n", "\n", "", "", "", "tel", "[", "'val_examples'", "]", ".", "set_value", "(", "vis_images", "[", ":", "8", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.sacred_main": [[267, 392], ["margipose.utils.seed_all", "margipose.utils.init_algorithms", "print", "margipose.models.create_model.to", "print", "margipose.train_helpers.create_train_dataloader", "train_3d.Reporter", "train_3d.Reporter.setup_console_output", "train_3d.Reporter.setup_sacred_output", "tel[].set_value", "tel[].set_value", "range", "train_3d.sacred_main.set_progress"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.seed_all", "home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.init_algorithms", "home.repos.pwc.inspect_result.anibali_margipose.margipose.train_helpers.create_train_dataloader", "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.Reporter.setup_console_output", "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.Reporter.setup_sacred_output"], ["@", "ex", ".", "main", "\n", "def", "sacred_main", "(", "_run", ":", "Run", ",", "seed", ",", "showoff", ",", "out_dir", ",", "batch_size", ",", "epochs", ",", "tags", ",", "model_desc", ",", "\n", "experiment_id", ",", "weights", ",", "train_examples", ",", "val_examples", ",", "deterministic", ",", "\n", "train_datasets", ",", "val_datasets", ",", "lr", ",", "lr_milestones", ",", "lr_gamma", ",", "optim_algorithm", ",", "\n", "use_aug", ",", "preserve_root_joint_at_univ_scale", ")", ":", "\n", "    ", "seed_all", "(", "seed", ")", "\n", "init_algorithms", "(", "deterministic", "=", "deterministic", ")", "\n", "\n", "exp_out_dir", "=", "None", "\n", "if", "out_dir", ":", "\n", "        ", "exp_out_dir", "=", "path", ".", "join", "(", "out_dir", ",", "experiment_id", ")", "\n", "makedirs", "(", "exp_out_dir", ",", "exist_ok", "=", "True", ")", "\n", "", "print", "(", "f'Experiment ID: {experiment_id}'", ")", "\n", "\n", "####", "\n", "# Model", "\n", "####", "\n", "\n", "if", "weights", "is", "None", ":", "\n", "        ", "model", "=", "create_model", "(", "model_desc", ")", "\n", "", "else", ":", "\n", "        ", "details", "=", "torch", ".", "load", "(", "weights", ")", "\n", "model_desc", "=", "details", "[", "'model_desc'", "]", "\n", "model", "=", "create_model", "(", "model_desc", ")", "\n", "model", ".", "load_state_dict", "(", "details", "[", "'state_dict'", "]", ")", "\n", "", "model", ".", "to", "(", "global_opts", "[", "'device'", "]", ")", "\n", "\n", "print", "(", "json", ".", "dumps", "(", "model_desc", ",", "sort_keys", "=", "True", ",", "indent", "=", "2", ")", ")", "\n", "\n", "####", "\n", "# Data", "\n", "####", "\n", "\n", "MpiInf3dDataset", ".", "preserve_root_joint_at_univ_scale", "=", "preserve_root_joint_at_univ_scale", "\n", "\n", "train_loader", "=", "create_train_dataloader", "(", "\n", "train_datasets", ",", "model", ".", "data_specs", ",", "batch_size", ",", "train_examples", ",", "use_aug", ")", "\n", "if", "len", "(", "val_datasets", ")", ">", "0", ":", "\n", "        ", "val_loader", "=", "create_val_dataloader", "(", "\n", "val_datasets", ",", "model", ".", "data_specs", ",", "batch_size", ",", "val_examples", ")", "\n", "", "else", ":", "\n", "        ", "val_loader", "=", "None", "\n", "\n", "####", "\n", "# Reporting", "\n", "####", "\n", "\n", "", "reporter", "=", "Reporter", "(", "with_val", "=", "(", "val_loader", "is", "not", "None", ")", ")", "\n", "\n", "reporter", ".", "setup_console_output", "(", ")", "\n", "reporter", ".", "setup_sacred_output", "(", "_run", ")", "\n", "\n", "notebook", "=", "None", "\n", "if", "showoff", ":", "\n", "        ", "title", "=", "'3D pose model ({}@{})'", ".", "format", "(", "model_desc", "[", "'type'", "]", ",", "model_desc", "[", "'version'", "]", ")", "\n", "notebook", "=", "create_showoff_notebook", "(", "title", ",", "tags", ")", "\n", "reporter", ".", "setup_showoff_output", "(", "notebook", ")", "\n", "\n", "", "def", "set_progress", "(", "value", ")", ":", "\n", "        ", "if", "notebook", "is", "not", "None", ":", "\n", "            ", "notebook", ".", "set_progress", "(", "value", ")", "\n", "\n", "", "", "tel", "=", "reporter", ".", "telemetry", "\n", "\n", "tel", "[", "'config'", "]", ".", "set_value", "(", "_run", ".", "config", ")", "\n", "tel", "[", "'host_info'", "]", ".", "set_value", "(", "get_host_info", "(", ")", ")", "\n", "\n", "####", "\n", "# Optimiser", "\n", "####", "\n", "\n", "if", "optim_algorithm", "==", "'1cycle'", ":", "\n", "        ", "optimiser", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "0", ")", "\n", "scheduler", "=", "make_1cycle", "(", "optimiser", ",", "epochs", "*", "len", "(", "train_loader", ")", ",", "lr_max", "=", "lr", ",", "momentum", "=", "0.9", ")", "\n", "", "elif", "optim_algorithm", "==", "'sgd_simple'", ":", "\n", "        ", "optimiser", "=", "optim", ".", "SGD", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "momentum", "=", "0", ")", "\n", "DummyScheduler", "=", "namedtuple", "(", "'DummyScheduler'", ",", "'optimizer'", ")", "\n", "scheduler", "=", "DummyScheduler", "(", "optimizer", "=", "optimiser", ")", "\n", "", "else", ":", "\n", "        ", "scheduler", "=", "learning_schedule", "(", "\n", "model", ".", "parameters", "(", ")", ",", "optim_algorithm", ",", "lr", ",", "lr_milestones", ",", "lr_gamma", ")", "\n", "\n", "####", "\n", "# Training", "\n", "####", "\n", "\n", "", "model_file", "=", "None", "\n", "if", "exp_out_dir", ":", "\n", "        ", "model_file", "=", "path", ".", "join", "(", "exp_out_dir", ",", "'model-latest.pth'", ")", "\n", "with", "open", "(", "path", ".", "join", "(", "exp_out_dir", ",", "'config.json'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "json", ".", "dump", "(", "tel", "[", "'config'", "]", ".", "value", "(", ")", ",", "f", ",", "sort_keys", "=", "True", ",", "indent", "=", "2", ")", "\n", "\n", "", "", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "        ", "tel", "[", "'epoch'", "]", ".", "set_value", "(", "epoch", ")", "\n", "print", "(", "'> Epoch {:3d}/{:3d}'", ".", "format", "(", "epoch", "+", "1", ",", "epochs", ")", ")", "\n", "\n", "def", "on_train_progress", "(", "samples_processed", ")", ":", "\n", "            ", "so_far", "=", "epoch", "*", "len", "(", "train_loader", ".", "dataset", ")", "+", "samples_processed", "\n", "total", "=", "epochs", "*", "len", "(", "train_loader", ".", "dataset", ")", "\n", "set_progress", "(", "so_far", "/", "total", ")", "\n", "\n", "", "do_training_pass", "(", "epoch", ",", "model", ",", "tel", ",", "train_loader", ",", "scheduler", ",", "on_train_progress", ")", "\n", "if", "val_loader", ":", "\n", "            ", "do_validation_pass", "(", "epoch", ",", "model", ",", "tel", ",", "val_loader", ")", "\n", "\n", "", "_run", ".", "result", "=", "tel", "[", "'train_pck'", "]", ".", "value", "(", ")", "[", "0", "]", "\n", "\n", "if", "model_file", "is", "not", "None", ":", "\n", "            ", "state", "=", "{", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'model_desc'", ":", "model_desc", ",", "\n", "'train_datasets'", ":", "train_datasets", ",", "\n", "'optimizer'", ":", "scheduler", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "}", "\n", "torch", ".", "save", "(", "state", ",", "model_file", ")", "\n", "\n", "", "tel", ".", "step", "(", ")", "\n", "\n", "# Add the final model as a Sacred artifact", "\n", "", "if", "model_file", "is", "not", "None", "and", "path", ".", "isfile", "(", "model_file", ")", ":", "\n", "        ", "_run", ".", "add_artifact", "(", "model_file", ")", "\n", "\n", "", "set_progress", "(", "1.0", ")", "\n", "return", "_run", ".", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.bin.train_3d.main": [[394, 397], ["global_opts.update", "ex.run_commandline"], "function", ["None"], ["", "def", "main", "(", "argv", ",", "common_opts", ")", ":", "\n", "    ", "global_opts", ".", "update", "(", "common_opts", ")", "\n", "ex", ".", "run_commandline", "(", "argv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model.ResNetFeatureExtractor.__init__": [[37, 44], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "resnet", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "resnet", ".", "conv1", "\n", "self", ".", "bn1", "=", "resnet", ".", "bn1", "\n", "self", ".", "layer1", "=", "resnet", ".", "layer1", "\n", "self", ".", "layer2", "=", "resnet", ".", "layer2", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model.ResNetFeatureExtractor.forward": [[45, 54], ["chatterbox_model.ResNetFeatureExtractor.conv1", "chatterbox_model.ResNetFeatureExtractor.bn1", "torch.nn.functional.relu", "torch.nn.functional.max_pool2d", "chatterbox_model.ResNetFeatureExtractor.layer1", "chatterbox_model.ResNetFeatureExtractor.layer2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "x", "=", "inputs", "[", "0", "]", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "relu", "(", "x", ",", "True", ")", "\n", "x", "=", "max_pool2d", "(", "x", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model._XYCnn.__init__": [[57, 75], ["torch.nn.Module.__init__", "enumerate", "torch.nn.Conv2d", "margipose.nn_helpers.init_parameters", "layer.modules", "isinstance"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__", "home.repos.pwc.inspect_result.anibali_margipose.margipose.nn_helpers.init_parameters"], ["    ", "def", "__init__", "(", "self", ",", "resnet", ",", "n_joints", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "layers", "=", "[", "resnet", ".", "layer3", ",", "resnet", ".", "layer4", "]", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "layers", ")", ":", "\n", "            ", "dilx", "=", "dily", "=", "2", "**", "(", "i", "+", "1", ")", "\n", "for", "module", "in", "layer", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                    ", "if", "module", ".", "stride", "==", "(", "2", ",", "2", ")", ":", "\n", "                        ", "module", ".", "stride", "=", "(", "1", ",", "1", ")", "\n", "", "elif", "module", ".", "kernel_size", "==", "(", "3", ",", "3", ")", ":", "\n", "                        ", "kx", ",", "ky", "=", "module", ".", "kernel_size", "\n", "module", ".", "dilation", "=", "(", "dilx", ",", "dily", ")", "\n", "module", ".", "padding", "=", "(", "(", "dilx", "*", "(", "kx", "-", "1", ")", "+", "1", ")", "//", "2", ",", "(", "dily", "*", "(", "ky", "-", "1", ")", "+", "1", ")", "//", "2", ")", "\n", "", "", "", "", "self", ".", "layer1", ",", "self", ".", "layer2", "=", "layers", "\n", "\n", "self", ".", "hm_conv", "=", "nn", ".", "Conv2d", "(", "512", ",", "n_joints", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "init_parameters", "(", "self", ".", "hm_conv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model._XYCnn.forward": [[76, 84], ["chatterbox_model._XYCnn.layer1", "chatterbox_model._XYCnn.layer2", "chatterbox_model._XYCnn.hm_conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "t", "=", "inputs", "[", "0", "]", "\n", "\n", "t", "=", "self", ".", "layer1", "(", "t", ")", "\n", "t", "=", "self", ".", "layer2", "(", "t", ")", "\n", "t", "=", "self", ".", "hm_conv", "(", "t", ")", "\n", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model._ChatterboxCnn.__init__": [[87, 129], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "margipose.nn_helpers.init_parameters", "chatterbox_model._ChatterboxCnn._DownBlock", "chatterbox_model._ChatterboxCnn._DownBlock", "chatterbox_model._ChatterboxCnn._DownBlock", "chatterbox_model._ChatterboxCnn._DownBlock", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.ConvTranspose2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "chatterbox_model._ChatterboxCnn._UpBlock", "chatterbox_model._ChatterboxCnn._UpBlock", "chatterbox_model._ChatterboxCnn._UpBlock", "chatterbox_model._ChatterboxCnn._UpBlock", "torch.nn.Conv2d", "chatterbox_model._ChatterboxCnn.__init__.f"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__", "home.repos.pwc.inspect_result.anibali_margipose.margipose.nn_helpers.init_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_joints", ",", "shrink_width", "=", "True", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "def", "f", "(", "a", ",", "b", ")", ":", "\n", "            ", "if", "shrink_width", ":", "\n", "                ", "return", "(", "a", ",", "b", ")", "\n", "", "else", ":", "\n", "                ", "return", "(", "b", ",", "a", ")", "\n", "\n", "", "", "self", ".", "down_convs", "=", "nn", ".", "Sequential", "(", "\n", "# 128 x 32 x 32", "\n", "self", ".", "_DownBlock", "(", "128", ",", "256", ",", "stride", "=", "f", "(", "1", ",", "2", ")", ",", "dilation", "=", "f", "(", "2", ",", "1", ")", ",", "dilation_in", "=", "f", "(", "1", ",", "1", ")", ")", ",", "\n", "self", ".", "_DownBlock", "(", "256", ",", "256", ",", "dilation", "=", "f", "(", "2", ",", "1", ")", ")", ",", "\n", "# 256 x 32 x 16", "\n", "self", ".", "_DownBlock", "(", "256", ",", "512", ",", "stride", "=", "f", "(", "1", ",", "2", ")", ",", "dilation", "=", "f", "(", "4", ",", "1", ")", ",", "dilation_in", "=", "f", "(", "2", ",", "1", ")", ")", ",", "\n", "self", ".", "_DownBlock", "(", "512", ",", "512", ",", "dilation", "=", "f", "(", "4", ",", "1", ")", ")", ",", "\n", "# 512 x 32 x 8", "\n", "nn", ".", "Conv2d", "(", "512", ",", "1024", ",", "kernel_size", "=", "f", "(", "1", ",", "8", ")", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# 1024 x 32 x 1", "\n", ")", "\n", "\n", "self", ".", "up_convs", "=", "nn", ".", "Sequential", "(", "\n", "# 1024 x 32 x 1", "\n", "nn", ".", "ConvTranspose2d", "(", "1024", ",", "512", ",", "kernel_size", "=", "f", "(", "1", ",", "8", ")", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# 512 x 32 x 8", "\n", "self", ".", "_UpBlock", "(", "512", ",", "512", ",", "dilation", "=", "f", "(", "4", ",", "1", ")", ")", ",", "\n", "self", ".", "_UpBlock", "(", "512", ",", "256", ",", "stride", "=", "f", "(", "1", ",", "2", ")", ",", "dilation", "=", "f", "(", "2", ",", "1", ")", ",", "dilation_in", "=", "f", "(", "4", ",", "1", ")", ",", "\n", "output_padding", "=", "f", "(", "0", ",", "1", ")", ")", ",", "\n", "# 256 x 32 x 16", "\n", "self", ".", "_UpBlock", "(", "256", ",", "256", ",", "dilation", "=", "f", "(", "2", ",", "1", ")", ")", ",", "\n", "self", ".", "_UpBlock", "(", "256", ",", "128", ",", "stride", "=", "f", "(", "1", ",", "2", ")", ",", "dilation", "=", "f", "(", "1", ",", "1", ")", ",", "dilation_in", "=", "f", "(", "2", ",", "1", ")", ",", "\n", "output_padding", "=", "f", "(", "0", ",", "1", ")", ")", ",", "\n", "# 128 x 32 x 32", "\n", "nn", ".", "Conv2d", "(", "128", ",", "n_joints", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "# n x 32 x 32", "\n", ")", "\n", "\n", "init_parameters", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model._ChatterboxCnn.forward": [[213, 221], ["chatterbox_model._ChatterboxCnn.down_convs", "chatterbox_model._ChatterboxCnn.up_convs"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "t", "=", "inputs", "[", "0", "]", "\n", "\n", "t", "=", "self", ".", "down_convs", "(", "t", ")", "\n", "# At this point, t should have one of width/height set to 1", "\n", "t", "=", "self", ".", "up_convs", "(", "t", ")", "\n", "\n", "return", "t", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model.ChatterboxModel.__init__": [[224, 240], ["torch.nn.Module.__init__", "margipose.data_specs.DataSpecs", "torchvision.models.resnet.resnet34", "chatterbox_model.ResNetFeatureExtractor", "chatterbox_model._XYCnn", "chatterbox_model._ChatterboxCnn", "chatterbox_model._ChatterboxCnn", "margipose.data_specs.ImageSpecs", "margipose.data_specs.JointsSpecs"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "skel_desc", ",", "pixelwise_loss", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "data_specs", "=", "DataSpecs", "(", "\n", "ImageSpecs", "(", "256", ",", "mean", "=", "ImageSpecs", ".", "IMAGENET_MEAN", ",", "stddev", "=", "ImageSpecs", ".", "IMAGENET_STDDEV", ")", ",", "\n", "JointsSpecs", "(", "skel_desc", ",", "n_dims", "=", "3", ")", ",", "\n", ")", "\n", "\n", "self", ".", "pixelwise_loss", "=", "pixelwise_loss", "\n", "\n", "resnet", "=", "resnet34", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "in_cnn", "=", "ResNetFeatureExtractor", "(", "resnet", ")", "\n", "self", ".", "xy_hm_cnn", "=", "_XYCnn", "(", "resnet", ",", "skel_desc", ".", "n_joints", ")", "\n", "\n", "self", ".", "zy_hm_cnn", "=", "_ChatterboxCnn", "(", "skel_desc", ".", "n_joints", ",", "shrink_width", "=", "True", ")", "\n", "self", ".", "xz_hm_cnn", "=", "_ChatterboxCnn", "(", "skel_desc", ".", "n_joints", ",", "shrink_width", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model.ChatterboxModel._calculate_pixelwise_loss": [[241, 248], ["Exception", "margipose.dsntnn.js_reg_losses"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.js_reg_losses"], ["", "def", "_calculate_pixelwise_loss", "(", "self", ",", "hm", ",", "target_coords", ")", ":", "\n", "        ", "sigma", "=", "1.0", "\n", "if", "self", ".", "pixelwise_loss", "==", "'jsd'", ":", "\n", "            ", "return", "js_reg_losses", "(", "hm", ",", "target_coords", ",", "sigma", ")", "\n", "", "elif", "self", ".", "pixelwise_loss", "is", "None", ":", "\n", "            ", "return", "0", "\n", "", "raise", "Exception", "(", "'unrecognised pixelwise loss: {}'", ".", "format", "(", "self", ".", "pixelwise_loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model.ChatterboxModel.forward_2d_losses": [[249, 257], ["out_var.narrow", "target_var.narrow", "margipose.dsntnn.euclidean_losses", "chatterbox_model.ChatterboxModel._calculate_pixelwise_loss"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.euclidean_losses", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel._calculate_pixelwise_loss"], ["", "def", "forward_2d_losses", "(", "self", ",", "out_var", ",", "target_var", ")", ":", "\n", "        ", "out_xy", "=", "out_var", ".", "narrow", "(", "-", "1", ",", "0", ",", "2", ")", "\n", "target_xy", "=", "target_var", ".", "narrow", "(", "-", "1", ",", "0", ",", "2", ")", "\n", "\n", "losses", "=", "(", "euclidean_losses", "(", "out_xy", ",", "target_xy", ")", "+", "\n", "self", ".", "_calculate_pixelwise_loss", "(", "self", ".", "xy_heatmaps", "[", "-", "1", "]", ",", "target_xy", ")", ")", "\n", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model.ChatterboxModel.forward_3d_losses": [[258, 272], ["out_var.narrow", "target_var.narrow", "target_var.narrow.narrow", "torch.cat", "torch.cat", "chatterbox_model.ChatterboxModel._calculate_pixelwise_loss", "target_var.narrow.narrow", "target_var.narrow.narrow", "target_var.narrow.narrow", "target_var.narrow.narrow", "chatterbox_model.ChatterboxModel._calculate_pixelwise_loss", "margipose.dsntnn.euclidean_losses", "chatterbox_model.ChatterboxModel._calculate_pixelwise_loss"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel._calculate_pixelwise_loss", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel._calculate_pixelwise_loss", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.euclidean_losses", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel._calculate_pixelwise_loss"], ["", "def", "forward_3d_losses", "(", "self", ",", "out_var", ",", "target_var", ")", ":", "\n", "        ", "out_xyz", "=", "out_var", ".", "narrow", "(", "-", "1", ",", "0", ",", "3", ")", "\n", "target_xyz", "=", "target_var", ".", "narrow", "(", "-", "1", ",", "0", ",", "3", ")", "\n", "\n", "target_xy", "=", "target_xyz", ".", "narrow", "(", "-", "1", ",", "0", ",", "2", ")", "\n", "target_zy", "=", "torch", ".", "cat", "(", "[", "target_xyz", ".", "narrow", "(", "-", "1", ",", "2", ",", "1", ")", ",", "target_xyz", ".", "narrow", "(", "-", "1", ",", "1", ",", "1", ")", "]", ",", "-", "1", ")", "\n", "target_xz", "=", "torch", ".", "cat", "(", "[", "target_xyz", ".", "narrow", "(", "-", "1", ",", "0", ",", "1", ")", ",", "target_xyz", ".", "narrow", "(", "-", "1", ",", "2", ",", "1", ")", "]", ",", "-", "1", ")", "\n", "\n", "losses", "=", "(", "euclidean_losses", "(", "out_xyz", ",", "target_xyz", ")", "+", "\n", "self", ".", "_calculate_pixelwise_loss", "(", "self", ".", "xy_heatmaps", "[", "-", "1", "]", ",", "target_xy", ")", "+", "\n", "self", ".", "_calculate_pixelwise_loss", "(", "self", ".", "zy_heatmaps", "[", "-", "1", "]", ",", "target_zy", ")", "+", "\n", "self", ".", "_calculate_pixelwise_loss", "(", "self", ".", "xz_heatmaps", "[", "-", "1", "]", ",", "target_xz", ")", ")", "\n", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model.ChatterboxModel.forward": [[273, 290], ["chatterbox_model.ChatterboxModel.in_cnn", "margipose.dsntnn.dsnt", "margipose.dsntnn.dsnt", "margipose.dsntnn.dsnt", "margipose.dsntnn.dsnt.narrow", "margipose.dsntnn.dsnt.narrow", "torch.cat", "margipose.dsntnn.flat_softmax", "margipose.dsntnn.flat_softmax", "margipose.dsntnn.flat_softmax", "chatterbox_model.ChatterboxModel.xy_hm_cnn", "chatterbox_model.ChatterboxModel.zy_hm_cnn", "chatterbox_model.ChatterboxModel.xz_hm_cnn", "margipose.dsntnn.dsnt.narrow", "margipose.dsntnn.dsnt.narrow"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.dsnt", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.dsnt", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.dsnt", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.flat_softmax", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.flat_softmax", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.flat_softmax"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "t", "=", "inputs", "[", "0", "]", "\n", "t", "=", "self", ".", "in_cnn", "(", "t", ")", "\n", "\n", "self", ".", "xy_heatmaps", "=", "[", "flat_softmax", "(", "self", ".", "xy_hm_cnn", "(", "t", ")", ")", "]", "\n", "self", ".", "zy_heatmaps", "=", "[", "flat_softmax", "(", "self", ".", "zy_hm_cnn", "(", "t", ")", ")", "]", "\n", "self", ".", "xz_heatmaps", "=", "[", "flat_softmax", "(", "self", ".", "xz_hm_cnn", "(", "t", ")", ")", "]", "\n", "\n", "xy", "=", "dsnt", "(", "self", ".", "xy_heatmaps", "[", "-", "1", "]", ")", "\n", "zy", "=", "dsnt", "(", "self", ".", "zy_heatmaps", "[", "-", "1", "]", ")", "\n", "xz", "=", "dsnt", "(", "self", ".", "xz_heatmaps", "[", "-", "1", "]", ")", "\n", "\n", "x", "=", "xy", ".", "narrow", "(", "-", "1", ",", "0", ",", "1", ")", "\n", "y", "=", "xy", ".", "narrow", "(", "-", "1", ",", "1", ",", "1", ")", "\n", "z", "=", "0.5", "*", "(", "zy", ".", "narrow", "(", "-", "1", ",", "0", ",", "1", ")", "+", "xz", ".", "narrow", "(", "-", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "return", "torch", ".", "cat", "(", "[", "x", ",", "y", ",", "z", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model.ChatterboxModelFactory.__init__": [[293, 295], ["margipose.model_factory.ModelFactory.__init__"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "'chatterbox'", ",", "'^1.3.0'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model.ChatterboxModelFactory.create": [[296, 304], ["dict", "chatterbox_model.ChatterboxModel", "s.get"], "methods", ["None"], ["", "def", "create", "(", "self", ",", "model_desc", ")", ":", "\n", "        ", "super", "(", ")", "\n", "s", "=", "model_desc", "[", "'settings'", "]", "\n", "kwargs", "=", "dict", "(", "\n", "skel_desc", "=", "CanonicalSkeletonDesc", ",", "\n", "pixelwise_loss", "=", "s", ".", "get", "(", "'pixelwise_loss'", ",", "'jsd'", ")", ",", "\n", ")", "\n", "return", "ChatterboxModel", "(", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.models.chatterbox_model._make_block_group": [[22, 34], ["torch.nn.Sequential", "torch.nn.Sequential", "torchvision.models.resnet.BasicBlock", "torchvision.models.resnet.BasicBlock", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "range"], "function", ["None"], ["def", "_make_block_group", "(", "in_planes", ",", "out_planes", ",", "n_blocks", ",", "stride", "=", "1", ")", ":", "\n", "    ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "out_planes", ":", "\n", "        ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "BasicBlock", "(", "in_planes", ",", "out_planes", ",", "stride", ",", "downsample", ")", "]", "\n", "layers", "+=", "[", "BasicBlock", "(", "out_planes", ",", "out_planes", ")", "for", "_", "in", "range", "(", "n_blocks", ")", "]", "\n", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.ResidualBlock.__init__": [[26, 38], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "chans", ",", "main_conv_in", ",", "shortcut_conv_in", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "assert", "main_conv_in", ".", "in_channels", "==", "shortcut_conv_in", ".", "in_channels", "\n", "self", ".", "module", "=", "nn", ".", "Sequential", "(", "\n", "main_conv_in", ",", "\n", "nn", ".", "BatchNorm2d", "(", "chans", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "chans", ",", "chans", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "chans", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "shortcut_conv_in", ",", "nn", ".", "BatchNorm2d", "(", "chans", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.ResidualBlock.forward": [[39, 41], ["margipose_model.ResidualBlock.module", "margipose_model.ResidualBlock.shortcut"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "return", "self", ".", "module", "(", "inputs", "[", "0", "]", ")", "+", "self", ".", "shortcut", "(", "inputs", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn.__init__": [[44, 63], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "margipose.nn_helpers.init_parameters", "margipose_model.HeatmapColumn._regular_block", "margipose_model.HeatmapColumn._regular_block", "margipose_model.HeatmapColumn._down_stride_block", "margipose_model.HeatmapColumn._regular_block", "margipose_model.HeatmapColumn._regular_block", "margipose_model.HeatmapColumn._regular_block", "margipose_model.HeatmapColumn._regular_block", "margipose_model.HeatmapColumn._up_stride_block", "margipose_model.HeatmapColumn._regular_block", "margipose_model.HeatmapColumn._regular_block"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__", "home.repos.pwc.inspect_result.anibali_margipose.margipose.nn_helpers.init_parameters", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._regular_block", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._regular_block", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._down_stride_block", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._regular_block", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._regular_block", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._regular_block", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._regular_block", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._up_stride_block", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._regular_block", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._regular_block"], ["    ", "def", "__init__", "(", "self", ",", "n_joints", ",", "heatmap_space", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_joints", "=", "n_joints", "\n", "self", ".", "heatmap_space", "=", "heatmap_space", "\n", "self", ".", "down_layers", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "_regular_block", "(", "128", ",", "128", ")", ",", "\n", "self", ".", "_regular_block", "(", "128", ",", "128", ")", ",", "\n", "self", ".", "_down_stride_block", "(", "128", ",", "192", ")", ",", "\n", "self", ".", "_regular_block", "(", "192", ",", "192", ")", ",", "\n", "self", ".", "_regular_block", "(", "192", ",", "192", ")", ",", "\n", ")", "\n", "self", ".", "up_layers", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "_regular_block", "(", "192", ",", "192", ")", ",", "\n", "self", ".", "_regular_block", "(", "192", ",", "192", ")", ",", "\n", "self", ".", "_up_stride_block", "(", "192", ",", "128", ")", ",", "\n", "self", ".", "_regular_block", "(", "128", ",", "128", ")", ",", "\n", "self", ".", "_regular_block", "(", "128", ",", "self", ".", "n_joints", ")", ",", "\n", ")", "\n", "init_parameters", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._regular_block": [[64, 69], ["margipose_model.ResidualBlock", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["None"], ["", "def", "_regular_block", "(", "self", ",", "in_chans", ",", "out_chans", ")", ":", "\n", "        ", "return", "ResidualBlock", "(", "\n", "out_chans", ",", "\n", "nn", ".", "Conv2d", "(", "in_chans", ",", "out_chans", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_chans", ",", "out_chans", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._down_stride_block": [[70, 75], ["margipose_model.ResidualBlock", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["None"], ["", "def", "_down_stride_block", "(", "self", ",", "in_chans", ",", "out_chans", ")", ":", "\n", "        ", "return", "ResidualBlock", "(", "\n", "out_chans", ",", "\n", "nn", ".", "Conv2d", "(", "in_chans", ",", "out_chans", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_chans", ",", "out_chans", ",", "kernel_size", "=", "1", ",", "stride", "=", "2", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn._up_stride_block": [[76, 83], ["margipose_model.ResidualBlock", "torch.nn.ConvTranspose2d", "torch.nn.ConvTranspose2d"], "methods", ["None"], ["", "def", "_up_stride_block", "(", "self", ",", "in_chans", ",", "out_chans", ")", ":", "\n", "        ", "return", "ResidualBlock", "(", "\n", "out_chans", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "in_chans", ",", "out_chans", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "stride", "=", "2", ",", "\n", "output_padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ConvTranspose2d", "(", "in_chans", ",", "out_chans", ",", "kernel_size", "=", "1", ",", "stride", "=", "2", ",", "\n", "output_padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapColumn.forward": [[84, 101], ["margipose_model.HeatmapColumn.down_layers", "int", "margipose_model.HeatmapColumn.up_layers", "torch.cat", "torch.cat", "Exception", "t.permute", "margipose_model.HeatmapColumn.split", "t.permute", "margipose_model.HeatmapColumn.split"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "mid_in", "=", "self", ".", "down_layers", "(", "inputs", "[", "0", "]", ")", "\n", "# Spatial size (width = height = depth). Must divide evenly into # channels", "\n", "# FIXME: The conversion to int generates a warning during tracing, and is not necessary", "\n", "#        since PyTorch 1.5.0. However, it is required for tracing to work at all with prior", "\n", "#        PyTorch versions. When we upgrade to PyTorch 1.5.0, we should change this line.", "\n", "#        See: https://github.com/pytorch/pytorch/issues/27551", "\n", "size", "=", "int", "(", "mid_in", ".", "shape", "[", "-", "1", "]", ")", "\n", "if", "self", ".", "heatmap_space", "==", "'xy'", ":", "\n", "            ", "mid_out", "=", "mid_in", "\n", "", "elif", "self", ".", "heatmap_space", "==", "'zy'", ":", "\n", "            ", "mid_out", "=", "torch", ".", "cat", "(", "[", "t", ".", "permute", "(", "0", ",", "3", ",", "2", ",", "1", ")", "for", "t", "in", "mid_in", ".", "split", "(", "size", ",", "-", "3", ")", "]", ",", "-", "3", ")", "\n", "", "elif", "self", ".", "heatmap_space", "==", "'xz'", ":", "\n", "            ", "mid_out", "=", "torch", ".", "cat", "(", "[", "t", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ")", "for", "t", "in", "mid_in", ".", "split", "(", "size", ",", "-", "3", ")", "]", ",", "-", "3", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", ")", "\n", "", "return", "self", ".", "up_layers", "(", "mid_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapCombiner.__init__": [[143, 147], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "margipose.nn_helpers.init_parameters"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__", "home.repos.pwc.inspect_result.anibali_margipose.margipose.nn_helpers.init_parameters"], ["    ", "def", "__init__", "(", "self", ",", "n_joints", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_joints", "*", "3", ",", "128", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "init_parameters", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.HeatmapCombiner.forward": [[148, 151], ["margipose_model.HeatmapCombiner.conv", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "xy_hm", ",", "zy_hm", ",", "xz_hm", "=", "inputs", "\n", "return", "self", ".", "conv", "(", "torch", ".", "cat", "(", "[", "xy_hm", ",", "zy_hm", ",", "xz_hm", "]", ",", "-", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModelInner.__init__": [[154, 178], ["torch.nn.Module.__init__", "margipose_model.make_image_feature_extractor", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "torch.nn.ModuleList", "range", "margipose_model.MargiPoseModelInner.xy_hm_cnns.append", "margipose_model.MargiPoseModelInner.zy_hm_cnns.append", "margipose_model.MargiPoseModelInner.xz_hm_cnns.append", "margipose_model.MargiPoseModelInner.hm_combiners.append", "margipose_model.HeatmapColumn", "margipose_model.HeatmapColumn", "margipose_model.HeatmapColumn", "margipose_model.HeatmapCombiner"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.make_image_feature_extractor"], ["    ", "def", "__init__", "(", "self", ",", "n_joints", ",", "n_stages", ",", "axis_permutation", ",", "feature_extractor", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "n_stages", "=", "n_stages", "\n", "self", ".", "in_cnn", "=", "make_image_feature_extractor", "(", "feature_extractor", ")", "\n", "self", ".", "xy_hm_cnns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "zy_hm_cnns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "xz_hm_cnns", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "hm_combiners", "=", "nn", ".", "ModuleList", "(", ")", "\n", "\n", "xy", "=", "'xy'", "\n", "if", "axis_permutation", ":", "\n", "            ", "zy", "=", "'zy'", "\n", "xz", "=", "'xz'", "\n", "", "else", ":", "\n", "            ", "zy", "=", "'xy'", "\n", "xz", "=", "'xy'", "\n", "\n", "", "for", "t", "in", "range", "(", "self", ".", "n_stages", ")", ":", "\n", "            ", "if", "t", ">", "0", ":", "\n", "                ", "self", ".", "hm_combiners", ".", "append", "(", "HeatmapCombiner", "(", "n_joints", ")", ")", "\n", "", "self", ".", "xy_hm_cnns", ".", "append", "(", "HeatmapColumn", "(", "n_joints", ",", "heatmap_space", "=", "xy", ")", ")", "\n", "self", ".", "zy_hm_cnns", ".", "append", "(", "HeatmapColumn", "(", "n_joints", ",", "heatmap_space", "=", "zy", ")", ")", "\n", "self", ".", "xz_hm_cnns", ".", "append", "(", "HeatmapColumn", "(", "n_joints", ",", "heatmap_space", "=", "xz", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModelInner.forward": [[179, 201], ["margipose_model.MargiPoseModelInner.in_cnn", "range", "xy_heatmaps.append", "zy_heatmaps.append", "xz_heatmaps.append", "margipose.dsntnn.flat_softmax", "margipose.dsntnn.flat_softmax", "margipose.dsntnn.flat_softmax"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.flat_softmax", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.flat_softmax", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.flat_softmax"], ["", "", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "features", "=", "self", ".", "in_cnn", "(", "inputs", "[", "0", "]", ")", "\n", "\n", "# These lists will store the outputs from each stage", "\n", "xy_heatmaps", "=", "[", "]", "\n", "zy_heatmaps", "=", "[", "]", "\n", "xz_heatmaps", "=", "[", "]", "\n", "\n", "inp", "=", "features", "\n", "for", "t", "in", "range", "(", "self", ".", "n_stages", ")", ":", "\n", "            ", "if", "t", ">", "0", ":", "\n", "                ", "combined_hm_features", "=", "self", ".", "hm_combiners", "[", "t", "-", "1", "]", "(", "\n", "xy_heatmaps", "[", "t", "-", "1", "]", ",", "\n", "zy_heatmaps", "[", "t", "-", "1", "]", ",", "\n", "xz_heatmaps", "[", "t", "-", "1", "]", ",", "\n", ")", "\n", "inp", "=", "inp", "+", "combined_hm_features", "\n", "", "xy_heatmaps", ".", "append", "(", "flat_softmax", "(", "self", ".", "xy_hm_cnns", "[", "t", "]", "(", "inp", ")", ")", ")", "\n", "zy_heatmaps", ".", "append", "(", "flat_softmax", "(", "self", ".", "zy_hm_cnns", "[", "t", "]", "(", "inp", ")", ")", ")", "\n", "xz_heatmaps", ".", "append", "(", "flat_softmax", "(", "self", ".", "xz_hm_cnns", "[", "t", "]", "(", "inp", ")", ")", ")", "\n", "\n", "", "return", "xy_heatmaps", ",", "zy_heatmaps", ",", "xz_heatmaps", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.__init__": [[204, 214], ["torch.nn.Module.__init__", "margipose.data_specs.DataSpecs", "margipose_model.MargiPoseModelInner", "margipose.data_specs.ImageSpecs", "margipose.data_specs.JointsSpecs"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "skel_desc", ",", "n_stages", ",", "axis_permutation", ",", "feature_extractor", ",", "pixelwise_loss", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "data_specs", "=", "DataSpecs", "(", "\n", "ImageSpecs", "(", "256", ",", "mean", "=", "ImageSpecs", ".", "IMAGENET_MEAN", ",", "stddev", "=", "ImageSpecs", ".", "IMAGENET_STDDEV", ")", ",", "\n", "JointsSpecs", "(", "skel_desc", ",", "n_dims", "=", "3", ")", ",", "\n", ")", "\n", "self", ".", "pixelwise_loss", "=", "pixelwise_loss", "\n", "self", ".", "inner", "=", "MargiPoseModelInner", "(", "skel_desc", ".", "n_joints", ",", "n_stages", ",", "axis_permutation", ",", "\n", "feature_extractor", ")", "\n", "self", ".", "xy_heatmaps", "=", "self", ".", "zy_heatmaps", "=", "self", ".", "xz_heatmaps", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel._calculate_pixelwise_loss": [[215, 222], ["Exception", "margipose.dsntnn.js_reg_losses"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.js_reg_losses"], ["", "def", "_calculate_pixelwise_loss", "(", "self", ",", "hm", ",", "target_coords", ")", ":", "\n", "        ", "sigma", "=", "1.0", "\n", "if", "self", ".", "pixelwise_loss", "==", "'jsd'", ":", "\n", "            ", "return", "js_reg_losses", "(", "hm", ",", "target_coords", ",", "sigma", ")", "\n", "", "elif", "self", ".", "pixelwise_loss", "is", "None", ":", "\n", "            ", "return", "0", "\n", "", "raise", "Exception", "(", "'unrecognised pixelwise loss: {}'", ".", "format", "(", "self", ".", "pixelwise_loss", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_2d_losses": [[223, 235], ["target_var.narrow", "zip", "margipose_model.MargiPoseModel._calculate_pixelwise_loss", "margipose.dsntnn.euclidean_losses", "margipose_model.MargiPoseModel.heatmaps_to_coords"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel._calculate_pixelwise_loss", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.euclidean_losses", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.heatmaps_to_coords"], ["", "def", "forward_2d_losses", "(", "self", ",", "out_var", ",", "target_var", ")", ":", "\n", "        ", "target_xy", "=", "target_var", ".", "narrow", "(", "-", "1", ",", "0", ",", "2", ")", "\n", "losses", "=", "0", "\n", "\n", "for", "xy_hm", ",", "zy_hm", ",", "xz_hm", "in", "zip", "(", "self", ".", "xy_heatmaps", ",", "self", ".", "zy_heatmaps", ",", "self", ".", "xz_heatmaps", ")", ":", "\n", "# Pixelwise heatmap loss.", "\n", "            ", "losses", "+=", "self", ".", "_calculate_pixelwise_loss", "(", "xy_hm", ",", "target_xy", ")", "\n", "# Calculated coordinate loss.", "\n", "actual_xy", "=", "self", ".", "heatmaps_to_coords", "(", "xy_hm", ",", "zy_hm", ",", "xz_hm", ")", "[", "...", ",", ":", "2", "]", "\n", "losses", "+=", "euclidean_losses", "(", "actual_xy", ",", "target_xy", ")", "\n", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward_3d_losses": [[236, 253], ["target_var.narrow", "target_var.narrow.narrow", "torch.cat", "torch.cat", "zip", "margipose_model.MargiPoseModel._calculate_pixelwise_loss", "margipose_model.MargiPoseModel._calculate_pixelwise_loss", "margipose_model.MargiPoseModel._calculate_pixelwise_loss", "margipose_model.MargiPoseModel.heatmaps_to_coords", "margipose.dsntnn.euclidean_losses", "target_var.narrow.narrow", "target_var.narrow.narrow", "target_var.narrow.narrow", "target_var.narrow.narrow"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel._calculate_pixelwise_loss", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel._calculate_pixelwise_loss", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel._calculate_pixelwise_loss", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.heatmaps_to_coords", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.euclidean_losses"], ["", "def", "forward_3d_losses", "(", "self", ",", "out_var", ",", "target_var", ")", ":", "\n", "        ", "target_xyz", "=", "target_var", ".", "narrow", "(", "-", "1", ",", "0", ",", "3", ")", "\n", "losses", "=", "0", "\n", "\n", "target_xy", "=", "target_xyz", ".", "narrow", "(", "-", "1", ",", "0", ",", "2", ")", "\n", "target_zy", "=", "torch", ".", "cat", "(", "[", "target_xyz", ".", "narrow", "(", "-", "1", ",", "2", ",", "1", ")", ",", "target_xyz", ".", "narrow", "(", "-", "1", ",", "1", ",", "1", ")", "]", ",", "-", "1", ")", "\n", "target_xz", "=", "torch", ".", "cat", "(", "[", "target_xyz", ".", "narrow", "(", "-", "1", ",", "0", ",", "1", ")", ",", "target_xyz", ".", "narrow", "(", "-", "1", ",", "2", ",", "1", ")", "]", ",", "-", "1", ")", "\n", "for", "xy_hm", ",", "zy_hm", ",", "xz_hm", "in", "zip", "(", "self", ".", "xy_heatmaps", ",", "self", ".", "zy_heatmaps", ",", "self", ".", "xz_heatmaps", ")", ":", "\n", "# Pixelwise heatmap loss.", "\n", "            ", "losses", "+=", "self", ".", "_calculate_pixelwise_loss", "(", "xy_hm", ",", "target_xy", ")", "\n", "losses", "+=", "self", ".", "_calculate_pixelwise_loss", "(", "zy_hm", ",", "target_zy", ")", "\n", "losses", "+=", "self", ".", "_calculate_pixelwise_loss", "(", "xz_hm", ",", "target_xz", ")", "\n", "# Calculated coordinate loss.", "\n", "actual_xyz", "=", "self", ".", "heatmaps_to_coords", "(", "xy_hm", ",", "zy_hm", ",", "xz_hm", ")", "\n", "losses", "+=", "euclidean_losses", "(", "actual_xyz", ",", "target_xyz", ")", "\n", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.heatmaps_to_coords": [[254, 262], ["margipose.dsntnn.dsnt", "margipose.dsntnn.dsnt", "margipose.dsntnn.dsnt", "margipose.dsntnn.dsnt.split", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.dsnt", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.dsnt", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.dsnt"], ["", "@", "staticmethod", "\n", "def", "heatmaps_to_coords", "(", "xy_hm", ",", "zy_hm", ",", "xz_hm", ")", ":", "\n", "        ", "xy", "=", "dsnt", "(", "xy_hm", ")", "\n", "zy", "=", "dsnt", "(", "zy_hm", ")", "\n", "xz", "=", "dsnt", "(", "xz_hm", ")", "\n", "x", ",", "y", "=", "xy", ".", "split", "(", "1", ",", "-", "1", ")", "\n", "z", "=", "0.5", "*", "(", "zy", "[", ":", ",", ":", ",", "0", ":", "1", "]", "+", "xz", "[", ":", ",", ":", ",", "1", ":", "2", "]", ")", "\n", "return", "torch", ".", "cat", "(", "[", "x", ",", "y", ",", "z", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.forward": [[263, 268], ["margipose_model.MargiPoseModel.inner", "margipose_model.MargiPoseModel.heatmaps_to_coords"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.heatmaps_to_coords"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "self", ".", "xy_heatmaps", ",", "self", ".", "zy_heatmaps", ",", "self", ".", "xz_heatmaps", "=", "self", ".", "inner", "(", "*", "inputs", ")", "\n", "xyz", "=", "self", ".", "heatmaps_to_coords", "(", "self", ".", "xy_heatmaps", "[", "-", "1", "]", ",", "self", ".", "zy_heatmaps", "[", "-", "1", "]", ",", "\n", "self", ".", "xz_heatmaps", "[", "-", "1", "]", ")", "\n", "return", "xyz", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModelFactory.__init__": [[271, 273], ["margipose.model_factory.ModelFactory.__init__"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "'margipose'", ",", "'^6.0.0'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModelFactory.create": [[274, 285], ["dict", "margipose_model.MargiPoseModel", "s.get", "s.get", "s.get", "s.get"], "methods", ["None"], ["", "def", "create", "(", "self", ",", "model_desc", ")", ":", "\n", "        ", "super", "(", ")", "\n", "s", "=", "model_desc", "[", "'settings'", "]", "\n", "kwargs", "=", "dict", "(", "\n", "skel_desc", "=", "CanonicalSkeletonDesc", ",", "\n", "n_stages", "=", "s", ".", "get", "(", "'n_stages'", ",", "4", ")", ",", "\n", "axis_permutation", "=", "s", ".", "get", "(", "'axis_permutation'", ",", "True", ")", ",", "\n", "feature_extractor", "=", "s", ".", "get", "(", "'feature_extractor'", ",", "'inceptionv4'", ")", ",", "\n", "pixelwise_loss", "=", "s", ".", "get", "(", "'pixelwise_loss'", ",", "'jsd'", ")", ",", "\n", ")", "\n", "return", "MargiPoseModel", "(", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.make_image_feature_extractor": [[103, 140], ["Exception", "torch.nn.Sequential", "nn.Sequential.modules", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Sequential", "isinstance", "isinstance", "isinstance", "getattr", "tuple", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "range", "pretrainedmodels.models.inceptionv4.inceptionv4"], "function", ["None"], ["", "", "def", "make_image_feature_extractor", "(", "model_name", ")", ":", "\n", "    ", "if", "model_name", "==", "'inceptionv4'", ":", "\n", "        ", "net", "=", "nn", ".", "Sequential", "(", "\n", "*", "[", "inceptionv4", "(", ")", ".", "features", "[", "i", "]", "for", "i", "in", "range", "(", "7", ")", "]", ",", "\n", "nn", ".", "Conv2d", "(", "384", ",", "128", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n", "for", "module", "in", "net", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "module", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "module", ",", "nn", ".", "MaxPool2d", ")", ":", "\n", "                ", "kernel_size", "=", "module", ".", "kernel_size", "\n", "if", "isinstance", "(", "kernel_size", ",", "int", ")", ":", "\n", "                    ", "module", ".", "padding", "=", "kernel_size", "//", "2", "\n", "", "else", ":", "\n", "                    ", "module", ".", "padding", "=", "tuple", "(", "[", "k", "//", "2", "for", "k", "in", "kernel_size", "]", ")", "\n", "", "", "", "return", "net", "\n", "", "elif", "model_name", "in", "{", "'resnet18'", ",", "'resnet34'", ",", "'resnet50'", "}", ":", "\n", "        ", "resnet", "=", "getattr", "(", "torchvision", ".", "models", ",", "model_name", ")", "(", "pretrained", "=", "True", ")", "\n", "extra_modules", "=", "[", "]", "\n", "resnet_out_chans", "=", "resnet", ".", "layer3", "[", "0", "]", ".", "conv1", ".", "in_channels", "\n", "if", "resnet_out_chans", "!=", "128", ":", "\n", "            ", "extra_modules", "=", "[", "\n", "nn", ".", "Conv2d", "(", "resnet_out_chans", ",", "128", ",", "1", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "]", "\n", "", "net", "=", "nn", ".", "Sequential", "(", "\n", "resnet", ".", "conv1", ",", "\n", "resnet", ".", "bn1", ",", "\n", "resnet", ".", "relu", ",", "\n", "resnet", ".", "maxpool", ",", "\n", "resnet", ".", "layer1", ",", "\n", "resnet", ".", "layer2", ",", "\n", "*", "extra_modules", ",", "\n", ")", "\n", "return", "net", "\n", "", "raise", "Exception", "(", "'unsupported image feature extractor model name: '", "+", "model_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.models.__init__.create_model": [[16, 28], ["semantic_version.Version", "factory.is_for", "Exception", "factory.create", "str"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.model_factory.ModelFactory.is_for", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModelFactory.create"], []], "home.repos.pwc.inspect_result.anibali_margipose.models.__init__.load_model": [[30, 35], ["torch.load", "__init__.create_model", "create_model.load_state_dict"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.models.__init__.create_model"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.RoundRobinSampler.__init__": [[7, 11], ["torch.utils.data.sampler.Sampler.__init__"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], ["    ", "def", "__init__", "(", "self", ",", "index_lists", ",", "num_samples", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "None", ")", "\n", "self", ".", "index_lists", "=", "index_lists", "\n", "self", ".", "num_samples", "=", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.RoundRobinSampler.__iter__": [[12, 22], ["range", "list", "random.shuffle", "len", "len", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "shuffled_index_lists", "=", "[", "list", "(", "index_list", ")", "for", "index_list", "in", "self", ".", "index_lists", "]", "\n", "for", "l", "in", "shuffled_index_lists", ":", "\n", "            ", "random", ".", "shuffle", "(", "l", ")", "\n", "", "i", "=", "0", "\n", "js", "=", "[", "0", "]", "*", "len", "(", "shuffled_index_lists", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "self", ")", ")", ":", "\n", "            ", "yield", "shuffled_index_lists", "[", "i", "]", "[", "js", "[", "i", "]", "]", "\n", "js", "[", "i", "]", "+=", "1", "\n", "i", "=", "(", "i", "+", "1", ")", "%", "len", "(", "js", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.RoundRobinSampler.__len__": [[23, 25], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset.__init__": [[34, 52], ["margipose.data.PoseDataset.__init__", "sum", "range", "len", "len", "mixed.MixedPoseDataset._decompose_index", "mixed.MixedPoseDataset.per_dataset_indices[].append"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__", "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset._decompose_index"], ["def", "__init__", "(", "self", ",", "datasets", ",", "balanced_sampling", "=", "True", ")", ":", "\n", "# Enforce same data specs for all datasets", "\n", "        ", "data_specs", "=", "datasets", "[", "0", "]", ".", "data_specs", "\n", "for", "dataset", "in", "datasets", "[", "1", ":", "]", ":", "\n", "            ", "other_data_specs", "=", "dataset", ".", "data_specs", "\n", "assert", "other_data_specs", "==", "data_specs", ",", "'combined datasets must have same data specs'", "\n", "\n", "", "super", "(", ")", ".", "__init__", "(", "data_specs", ")", "\n", "\n", "self", ".", "datasets", "=", "datasets", "\n", "self", ".", "dataset_lengths", "=", "[", "len", "(", "d", ")", "for", "d", "in", "datasets", "]", "\n", "self", ".", "length", "=", "sum", "(", "self", ".", "dataset_lengths", ")", "\n", "self", ".", "balanced_sampling", "=", "balanced_sampling", "\n", "\n", "self", ".", "per_dataset_indices", "=", "[", "[", "]", "for", "_", "in", "datasets", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", ":", "\n", "            ", "dataset_index", ",", "_", "=", "self", ".", "_decompose_index", "(", "i", ")", "\n", "self", ".", "per_dataset_indices", "[", "dataset_index", "]", ".", "append", "(", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset._decompose_index": [[53, 61], ["enumerate", "Exception"], "methods", ["None"], ["", "", "def", "_decompose_index", "(", "self", ",", "index", ")", ":", "\n", "        ", "upper", "=", "0", "\n", "for", "i", ",", "length", "in", "enumerate", "(", "self", ".", "dataset_lengths", ")", ":", "\n", "            ", "offset", "=", "upper", "\n", "upper", "+=", "length", "\n", "if", "index", "<", "upper", ":", "\n", "                ", "return", "i", ",", "index", "-", "offset", "\n", "", "", "raise", "Exception", "(", "'index out of bounds'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset.sampler": [[62, 67], ["mixed.RoundRobinSampler", "super().sampler"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.sampler"], ["", "def", "sampler", "(", "self", ",", "examples_per_epoch", "=", "None", ")", ":", "\n", "# Use the normal sampler if balanced_sampling is False.", "\n", "        ", "if", "not", "self", ".", "balanced_sampling", ":", "\n", "            ", "return", "super", "(", ")", ".", "sampler", "(", "examples_per_epoch", ")", "\n", "", "return", "RoundRobinSampler", "(", "self", ".", "per_dataset_indices", ",", "examples_per_epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset._evaluate_3d": [[68, 72], ["mixed.MixedPoseDataset._decompose_index", "mixed.MixedPoseDataset.datasets[]._evaluate_3d"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset._decompose_index", "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._evaluate_3d"], ["", "def", "_evaluate_3d", "(", "self", ",", "index", ",", "original_skel", ",", "norm_pred", ",", "camera_intrinsics", ",", "transform_opts", ")", ":", "\n", "        ", "dataset_index", ",", "example_index", "=", "self", ".", "_decompose_index", "(", "index", ")", "\n", "return", "self", ".", "datasets", "[", "dataset_index", "]", ".", "_evaluate_3d", "(", "example_index", ",", "original_skel", ",", "norm_pred", ",", "\n", "camera_intrinsics", ",", "transform_opts", "[", "'opts'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset.to_image_space": [[73, 77], ["mixed.MixedPoseDataset._decompose_index", "dataset.to_image_space"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset._decompose_index", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.to_image_space"], ["", "def", "to_image_space", "(", "self", ",", "index", ",", "normalised", ",", "intrinsics", ")", ":", "\n", "        ", "dataset_index", ",", "example_index", "=", "self", ".", "_decompose_index", "(", "index", ")", "\n", "dataset", "=", "self", ".", "datasets", "[", "dataset_index", "]", "\n", "return", "dataset", ".", "to_image_space", "(", "example_index", ",", "normalised", ",", "intrinsics", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset.untransform_skeleton": [[78, 81], ["mixed.MixedPoseDataset.datasets[].untransform_skeleton"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.untransform_skeleton"], ["", "def", "untransform_skeleton", "(", "self", ",", "denorm_skel", ",", "trans_opts", ")", ":", "\n", "        ", "dataset_index", "=", "trans_opts", "[", "'dataset_index'", "]", "\n", "return", "self", ".", "datasets", "[", "dataset_index", "]", ".", "untransform_skeleton", "(", "denorm_skel", ",", "trans_opts", "[", "'opts'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset.to_canonical_skeleton": [[82, 84], ["mixed.MixedPoseDataset.datasets[].to_canonical_skeleton"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.to_canonical_skeleton"], ["", "def", "to_canonical_skeleton", "(", "self", ",", "skel", ")", ":", "\n", "        ", "return", "self", ".", "datasets", "[", "0", "]", ".", "to_canonical_skeleton", "(", "skel", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset.__len__": [[85, 87], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset.__getitem__": [[88, 111], ["mixed.MixedPoseDataset._decompose_index"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.mixed.MixedPoseDataset._decompose_index"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "dataset_index", ",", "example_index", "=", "self", ".", "_decompose_index", "(", "index", ")", "\n", "example", "=", "self", ".", "datasets", "[", "dataset_index", "]", "[", "example_index", "]", "\n", "\n", "sample", "=", "{", "\n", "'index'", ":", "index", ",", "\n", "'valid_depth'", ":", "example", "[", "'valid_depth'", "]", ",", "\n", "\n", "'original_skel'", ":", "example", "[", "'original_skel'", "]", ",", "\n", "\n", "'input'", ":", "example", "[", "'input'", "]", ",", "\n", "'camera_intrinsic'", ":", "example", "[", "'camera_intrinsic'", "]", ",", "\n", "'camera_extrinsic'", ":", "example", "[", "'camera_extrinsic'", "]", ",", "\n", "'target'", ":", "example", "[", "'target'", "]", ",", "\n", "'joint_mask'", ":", "example", "[", "'joint_mask'", "]", ",", "\n", "\n", "'transform_opts'", ":", "{", "\n", "'dataset_index'", ":", "dataset_index", ",", "\n", "'opts'", ":", "example", "[", "'transform_opts'", "]", ",", "\n", "}", ",", "\n", "}", "\n", "\n", "return", "sample", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.__init__": [[24, 27], ["pose3d_utils.skeleton_normaliser.SkeletonNormaliser"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.sampler": [[28, 40], ["len", "torch.utils.data.sampler.WeightedRandomSampler", "torch.ones().double", "torch.ones"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.input_to_pil_image": [[42, 44], ["__init__.PoseDataset.data_specs.input_specs.unconvert"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.ImageSpecs.unconvert"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.input_to_tensor": [[45, 47], ["__init__.PoseDataset.data_specs.input_specs.convert"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.ImageSpecs.convert"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.skeleton_desc": [[48, 51], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise_with_depth": [[52, 64], ["__init__.PoseDataset.skeleton_normaliser.denormalise_skeleton", "pose3d_utils.coords.ensure_homogeneous"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise": [[66, 81], ["pose3d_utils.coords.ensure_homogeneous", "__init__.PoseDataset.skeleton_normaliser.infer_depth", "__init__.PoseDataset.denormalise_with_depth"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise_with_depth"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise_with_reference": [[82, 86], ["margipose.data.skeleton.make_eval_scale_bone_lengths", "__init__.PoseDataset.denormalise", "__init__.PoseDataset.untransform_skeleton"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.make_eval_scale_bone_lengths", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.untransform_skeleton"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise_with_skeleton_height": [[87, 91], ["margipose.data.skeleton.make_eval_scale_skeleton_height", "__init__.PoseDataset.denormalise", "__init__.PoseDataset.untransform_skeleton"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.make_eval_scale_skeleton_height", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.untransform_skeleton"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.to_image_space": [[92, 96], ["__init__.PoseDataset.denormalise_with_depth", "intrinsics.project_cartesian"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.denormalise_with_depth"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.create_transformer_context": [[97, 109], ["pose3d_utils.transformers.TransformerContext", "pose3d_utils.transformers.TransformerContext.add", "pose3d_utils.transformers.TransformerContext.add", "pose3d_utils.transformers.TransformerContext.add", "pose3d_utils.transformers.TransformerContext.add", "pose3d_utils.transformers.TransformerContext.add", "pose3d_utils.transformers.TransformerContext.add", "pose3d_utils.transformers.TransformerContext.add", "pose3d_utils.PanImage", "pose3d_utils.RotateImage", "pose3d_utils.ZoomImage", "pose3d_utils.HorizontalFlip", "pose3d_utils.SquareCrop", "pose3d_utils.ChangeResolution", "pose3d_utils.AdjustColour"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.untransform_skeleton": [[110, 116], ["__init__.PoseDataset.create_transformer_context", "__init__.PoseDataset.point_transformer.untransform"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.create_transformer_context"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.to_canonical_skeleton": [[117, 131], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset._evaluate_3d": [[132, 134], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.evaluate_3d_batch": [[135, 146], ["__init__.PoseDataset._evaluate_3d", "range", "len"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._evaluate_3d"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.__len__": [[148, 151], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.__getitem__": [[152, 155], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.UnbatchedDataLoaderIter.__init__": [[203, 207], ["iter"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.UnbatchedDataLoaderIter.__len__": [[208, 210], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.UnbatchedDataLoaderIter.__next__": [[211, 214], ["next"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.UnbatchedDataLoaderIter.__iter__": [[215, 217], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.UnbatchedDataLoader.__init__": [[220, 223], ["torch.utils.data.sampler.SequentialSampler"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.UnbatchedDataLoader.__iter__": [[224, 226], ["__init__.UnbatchedDataLoaderIter"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.UnbatchedDataLoader.__len__": [[227, 229], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.collate": [[157, 187], ["type", "torch.is_tensor", "TypeError", "len", "torch.utils.data._utils.collate.default_collate", "error_msg.format", "torch.utils.data._utils.collate.default_collate", "isinstance", "type", "isinstance", "isinstance", "isinstance", "isinstance", "isinstance", "__init__.collate", "__init__.collate"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.collate", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.collate"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.worker_init": [[189, 191], ["margipose.utils.seed_all", "torch.initial_seed"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.utils.seed_all"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.make_dataloader": [[193, 199], ["torch.utils.data.dataloader.DataLoader"], "function", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.make_unbatched_dataloader": [[231, 233], ["__init__.UnbatchedDataLoader"], "function", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.data.get_dataset.get_dataset": [[17, 59], ["re.fullmatch", "re.match", "re.match", "Exception", "margipose.data.mpi_inf_3dhp.MpiInf3dDataset", "margipose.data.mixed.MixedPoseDataset", "margipose.data.h36m.H36MDataset", "margipose.data.mpii.MpiiDataset", "os.path.join", "os.path.join", "os.path.join", "get_dataset.get_dataset", "get_dataset.get_dataset", "subset.startswith"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.get_dataset.get_dataset", "home.repos.pwc.inspect_result.anibali_margipose.data.get_dataset.get_dataset"], ["def", "get_dataset", "(", "dataset_name", ",", "data_specs", "=", "None", ",", "use_aug", "=", "False", ")", "->", "PoseDataset", ":", "\n", "    ", "\"\"\"Get a dataset instance by name.\n\n    Args:\n        dataset_name (str): The name of the dataset (eg. mpi3d-train)\n        data_specs (DataSpecs): The data specs for examples\n        use_aug (bool): If true, use data augmentation\n\n    Returns:\n        The pose dataset instance.\n    \"\"\"", "\n", "\n", "# MPI-INF-3DHP", "\n", "mpi3d_match", "=", "re", ".", "fullmatch", "(", "'mpi3d-(train|val|test|test-uncorrected)'", ",", "dataset_name", ")", "\n", "if", "mpi3d_match", ":", "\n", "        ", "subset", "=", "mpi3d_match", "[", "1", "]", "\n", "return", "MpiInf3dDataset", "(", "path", ".", "join", "(", "Base_Data_Dir", ",", "'mpi3d'", ",", "subset", ")", ",", "\n", "data_specs", "=", "data_specs", ",", "\n", "use_aug", "=", "(", "use_aug", "and", "not", "subset", ".", "startswith", "(", "'test'", ")", ")", ")", "\n", "", "if", "dataset_name", "==", "'mpi3d-trainval'", ":", "\n", "        ", "return", "MixedPoseDataset", "(", "[", "\n", "get_dataset", "(", "'mpi3d-train'", ",", "data_specs", ",", "use_aug", ")", ",", "\n", "get_dataset", "(", "'mpi3d-val'", ",", "data_specs", ",", "use_aug", ")", ",", "\n", "]", ",", "balanced_sampling", "=", "False", ")", "\n", "\n", "# Human3.6M", "\n", "", "h36m_match", "=", "re", ".", "match", "(", "'h36m-(trainval|test)'", ",", "dataset_name", ")", "\n", "if", "h36m_match", ":", "\n", "        ", "subset", "=", "h36m_match", "[", "1", "]", "\n", "return", "H36MDataset", "(", "path", ".", "join", "(", "Base_Data_Dir", ",", "'h36m'", ")", ",", "\n", "data_specs", "=", "data_specs", ",", "subset", "=", "subset", ",", "\n", "use_aug", "=", "(", "use_aug", "and", "subset", "!=", "'test'", ")", ")", "\n", "\n", "# MPII Human Pose (2D)", "\n", "", "mpii_match", "=", "re", ".", "match", "(", "'mpii-(train|val|trainval|test)'", ",", "dataset_name", ")", "\n", "if", "mpii_match", ":", "\n", "        ", "subset", "=", "mpii_match", "[", "1", "]", "\n", "return", "MpiiDataset", "(", "path", ".", "join", "(", "Base_Data_Dir", ",", "'mpii'", ")", ",", "\n", "data_specs", "=", "data_specs", ",", "subset", "=", "subset", ",", "\n", "use_aug", "=", "(", "use_aug", "and", "subset", "!=", "'test'", ")", ")", "\n", "\n", "", "raise", "Exception", "(", "'unrecognised dataset: {}'", ".", "format", "(", "dataset_name", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.SkeletonDesc.__init__": [[20, 24], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "joint_names", ",", "joint_tree", ",", "hflip_indices", ")", ":", "\n", "        ", "self", ".", "joint_names", "=", "joint_names", "\n", "self", ".", "joint_tree", "=", "joint_tree", "\n", "self", ".", "hflip_indices", "=", "hflip_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.SkeletonDesc.n_joints": [[25, 28], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "n_joints", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "joint_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.SkeletonDesc.canonical": [[29, 34], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "canonical", "(", "self", ")", ":", "\n", "# NOTE: A more thorough check would be nice", "\n", "        ", "return", "self", ".", "n_joints", "==", "CanonicalSkeletonDesc", ".", "n_joints", "and", "self", ".", "joint_names", "==", "CanonicalSkeletonDesc", ".", "joint_names", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.SkeletonDesc.root_joint_id": [[35, 38], ["skeleton.SkeletonDesc.joint_names.index"], "methods", ["None"], ["", "@", "property", "\n", "def", "root_joint_id", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "joint_names", ".", "index", "(", "'pelvis'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.SkeletonDesc.to_dict": [[39, 44], ["None"], "methods", ["None"], ["", "def", "to_dict", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'joint_names'", ":", "self", ".", "joint_names", ",", "\n", "'joint_tree'", ":", "self", ".", "joint_tree", ",", "\n", "'hflip_indices'", ":", "self", ".", "hflip_indices", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.SkeletonDesc.from_dict": [[46, 49], ["cls"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "from_dict", "(", "cls", ",", "d", ")", ":", "\n", "        ", "return", "cls", "(", "d", "[", "'joint_names'", "]", ",", "d", "[", "'joint_tree'", "]", ",", "d", "[", "'hflip_indices'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_parent_relative": [[77, 81], ["torch.LongTensor().unsqueeze().expand_as", "joints.gather", "torch.LongTensor().unsqueeze", "torch.LongTensor"], "function", ["None"], ["def", "absolute_to_parent_relative", "(", "joints", ",", "joint_tree", ")", ":", "\n", "    ", "parent_indices", "=", "torch", ".", "LongTensor", "(", "joint_tree", ")", ".", "unsqueeze", "(", "-", "1", ")", ".", "expand_as", "(", "joints", ")", "\n", "parents", "=", "joints", ".", "gather", "(", "-", "2", ",", "parent_indices", ")", "\n", "return", "joints", "-", "parents", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.parent_relative_to_absolute": [[83, 91], ["relative.clone().zero_", "enumerate", "relative.clone", "relative.clone().zero_.narrow().add_", "relative.narrow", "relative.clone().zero_.narrow"], "function", ["None"], ["", "def", "parent_relative_to_absolute", "(", "relative", ",", "joint_tree", ")", ":", "\n", "    ", "absolute", "=", "relative", ".", "clone", "(", ")", ".", "zero_", "(", ")", "\n", "for", "j", ",", "parent", "in", "enumerate", "(", "joint_tree", ")", ":", "\n", "        ", "a", ",", "b", "=", "j", ",", "parent", "\n", "while", "a", "!=", "b", ":", "\n", "            ", "absolute", ".", "narrow", "(", "-", "2", ",", "j", ",", "1", ")", ".", "add_", "(", "relative", ".", "narrow", "(", "-", "2", ",", "a", ",", "1", ")", ")", "\n", "a", ",", "b", "=", "b", ",", "joint_tree", "[", "b", "]", "\n", "", "", "return", "absolute", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_root_relative": [[93, 96], ["joints.narrow"], "function", ["None"], ["", "def", "absolute_to_root_relative", "(", "joints", ",", "root_index", ")", ":", "\n", "    ", "root", "=", "joints", ".", "narrow", "(", "-", "2", ",", "root_index", ",", "1", ")", "\n", "return", "joints", "-", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.cartesian_to_spherical": [[98, 104], ["torch.atan2", "torch.stack", "t.squeeze", "cartesian.split"], "function", ["None"], ["", "def", "cartesian_to_spherical", "(", "cartesian", ")", ":", "\n", "    ", "x", ",", "y", ",", "z", "=", "[", "t", ".", "squeeze", "(", "-", "1", ")", "for", "t", "in", "cartesian", ".", "split", "(", "1", ",", "-", "1", ")", "]", "\n", "r", "=", "(", "cartesian", "**", "2", ")", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "False", ")", ".", "sqrt", "(", ")", "\n", "theta", "=", "(", "z", "/", "r", ")", ".", "acos", "(", ")", "\n", "phi", "=", "torch", ".", "atan2", "(", "y", ",", "x", ")", "\n", "return", "torch", ".", "stack", "(", "[", "r", ",", "theta", ",", "phi", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.spherical_to_cartesian": [[106, 113], ["theta.sin", "torch.stack", "t.squeeze", "phi.cos", "phi.sin", "theta.cos", "spherical.split"], "function", ["None"], ["", "def", "spherical_to_cartesian", "(", "spherical", ")", ":", "\n", "    ", "r", ",", "theta", ",", "phi", "=", "[", "t", ".", "squeeze", "(", "-", "1", ")", "for", "t", "in", "spherical", ".", "split", "(", "1", ",", "-", "1", ")", "]", "\n", "sin_theta", "=", "theta", ".", "sin", "(", ")", "\n", "x", "=", "r", "*", "sin_theta", "*", "phi", ".", "cos", "(", ")", "\n", "y", "=", "r", "*", "sin_theta", "*", "phi", ".", "sin", "(", ")", "\n", "z", "=", "r", "*", "theta", ".", "cos", "(", ")", "\n", "return", "torch", ".", "stack", "(", "[", "x", ",", "y", ",", "z", "]", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.calc_relative_scale": [[115, 136], ["bone_lengths.gt", "ratio.median().item", "skeleton.cartesian_to_spherical", "bone_lengths.gt.sum", "skeleton.absolute_to_parent_relative", "ratio.median", "pose3d_utils.coords.ensure_cartesian"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.cartesian_to_spherical", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_parent_relative"], ["", "def", "calc_relative_scale", "(", "skeleton", ",", "ref_bone_lengths", ",", "joint_tree", ")", "->", "(", "float", ",", "float", ")", ":", "\n", "    ", "\"\"\"Calculate the factor by which the reference is larger than the query skeleton.\n\n    Args:\n        skeleton (torch.DoubleTensor): The query skeleton.\n        ref_bone_lengths (torch.DoubleTensor): The reference skeleton bone lengths.\n        joint_tree (list of int):\n\n    Returns:\n        The average scale factor.\n    \"\"\"", "\n", "\n", "bone_lengths", "=", "cartesian_to_spherical", "(", "\n", "absolute_to_parent_relative", "(", "ensure_cartesian", "(", "skeleton", ",", "d", "=", "3", ")", ",", "joint_tree", ")", "\n", ")", "[", ":", ",", "0", "]", "\n", "\n", "non_zero", "=", "bone_lengths", ".", "gt", "(", "1e-6", ")", "\n", "if", "non_zero", ".", "sum", "(", ")", "==", "0", ":", "return", "0", "\n", "ratio", "=", "(", "ref_bone_lengths", "/", "bone_lengths", ")", ".", "masked_select", "(", "non_zero", ")", "\n", "\n", "return", "ratio", ".", "median", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.bone_path_length": [[138, 150], ["skeleton.bone_path_length", "skeleton.bone_path_length"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.bone_path_length", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.bone_path_length"], ["", "def", "bone_path_length", "(", "sph_rel_joints", ",", "joint_a", ",", "joint_b", ",", "joint_tree", ")", ":", "\n", "    ", "parent_a", "=", "joint_tree", "[", "joint_a", "]", "\n", "parent_b", "=", "joint_tree", "[", "joint_b", "]", "\n", "\n", "if", "parent_a", "!=", "joint_a", ":", "\n", "        ", "return", "sph_rel_joints", "[", "joint_a", ",", "0", "]", "+", "bone_path_length", "(", "sph_rel_joints", ",", "parent_a", ",", "joint_b", ",", "joint_tree", ")", "\n", "", "elif", "parent_b", "!=", "joint_b", ":", "\n", "        ", "return", "sph_rel_joints", "[", "joint_b", ",", "0", "]", "+", "bone_path_length", "(", "sph_rel_joints", ",", "joint_a", ",", "parent_b", ",", "joint_tree", ")", "\n", "", "else", ":", "\n", "        ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.calculate_knee_neck_height": [[152, 177], ["joint_names.index", "joint_names.index", "joint_names.index", "joint_names.index", "joint_names.index", "pose3d_utils.coords.ensure_cartesian", "sum"], "function", ["None"], ["", "", "def", "calculate_knee_neck_height", "(", "skel", ",", "joint_names", ")", ":", "\n", "    ", "\"\"\"Calculate skeleton height from left knee to neck via the spine joint.\n\n    This function is based on a code snippet provided courtesy of Dushyant Mehta.\n\n    Args:\n        skel (torch.Tensor): The skeleton.\n        joint_names (list): List of joint names for the skeleton.\n\n    Returns:\n        The knee-neck height of the skeleton.\n    \"\"\"", "\n", "\n", "left_knee", "=", "joint_names", ".", "index", "(", "'left_knee'", ")", "\n", "left_hip", "=", "joint_names", ".", "index", "(", "'left_hip'", ")", "\n", "spine", "=", "joint_names", ".", "index", "(", "'spine'", ")", "\n", "pelvis", "=", "joint_names", ".", "index", "(", "'pelvis'", ")", "\n", "neck", "=", "joint_names", ".", "index", "(", "'neck'", ")", "\n", "\n", "skel", "=", "ensure_cartesian", "(", "skel", ",", "d", "=", "3", ")", "\n", "\n", "return", "sum", "(", "[", "\n", "(", "skel", "[", "left_knee", "]", "-", "skel", "[", "left_hip", "]", ")", ".", "norm", "(", "2", ")", ".", "item", "(", ")", ",", "\n", "(", "skel", "[", "spine", "]", "-", "skel", "[", "pelvis", "]", ")", ".", "norm", "(", "2", ")", ".", "item", "(", ")", ",", "\n", "(", "skel", "[", "neck", "]", "-", "skel", "[", "spine", "]", ")", ".", "norm", "(", "2", ")", ".", "item", "(", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.apply_rigid_alignment": [[180, 194], ["numpy.array", "numpy.array", "scipy.spatial.procrustes", "numpy.mean", "numpy.linalg.norm", "torch.from_numpy"], "function", ["None"], ["", "def", "apply_rigid_alignment", "(", "skel", ",", "ref_skel", ")", ":", "\n", "    ", "\"\"\"Align a skeleton to a reference skeleton using only rigid transformations.\"\"\"", "\n", "\n", "skel", "=", "np", ".", "array", "(", "skel", ")", "\n", "ref_skel", "=", "np", ".", "array", "(", "ref_skel", ")", "\n", "\n", "_", ",", "mtx2", ",", "_", "=", "procrustes", "(", "ref_skel", ",", "skel", ")", "\n", "\n", "# De-normalize the aligned joints", "\n", "mean", "=", "np", ".", "mean", "(", "ref_skel", ",", "0", ")", "\n", "stddev", "=", "np", ".", "linalg", ".", "norm", "(", "ref_skel", "-", "mean", ")", "\n", "aligned", "=", "(", "mtx2", "*", "stddev", ")", "+", "mean", "\n", "\n", "return", "torch", ".", "from_numpy", "(", "aligned", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.make_eval_scale_skeleton_height": [[196, 203], ["untransform", "skeleton.calculate_knee_neck_height"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.calculate_knee_neck_height"], ["", "def", "make_eval_scale_skeleton_height", "(", "skel_desc", ",", "untransform", ")", ":", "\n", "    ", "target_sum", "=", "920", "# Desired skeleton height in mm (from knee to neck)", "\n", "joint_names", "=", "skel_desc", ".", "joint_names", "\n", "def", "eval_scale", "(", "test_skel", ")", ":", "\n", "        ", "skel", "=", "untransform", "(", "test_skel", ")", "\n", "return", "target_sum", "/", "(", "calculate_knee_neck_height", "(", "skel", ",", "joint_names", ")", "+", "1e-12", ")", "\n", "", "return", "eval_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.make_eval_scale_bone_lengths": [[205, 214], ["skeleton.cartesian_to_spherical", "untransform", "skeleton.calc_relative_scale", "skeleton.absolute_to_parent_relative", "pose3d_utils.coords.ensure_cartesian"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.cartesian_to_spherical", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.calc_relative_scale", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_parent_relative"], ["", "def", "make_eval_scale_bone_lengths", "(", "skel_desc", ",", "untransform", ",", "ref_skel", ")", ":", "\n", "    ", "joint_tree", "=", "skel_desc", ".", "joint_tree", "\n", "ref_bone_lengths", "=", "cartesian_to_spherical", "(", "\n", "absolute_to_parent_relative", "(", "ensure_cartesian", "(", "ref_skel", ",", "d", "=", "3", ")", ",", "joint_tree", ")", "\n", ")", "[", ":", ",", "0", "]", "\n", "def", "eval_scale", "(", "test_skel", ")", ":", "\n", "        ", "skel", "=", "untransform", "(", "test_skel", ")", "\n", "return", "calc_relative_scale", "(", "skel", ",", "ref_bone_lengths", ",", "joint_tree", ")", "\n", "", "return", "eval_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.canonicalise_orientation": [[216, 261], ["pose3d_utils.coords.ensure_homogeneous", "pose3d_utils.coords.homogeneous_to_cartesian", "torch.cross", "torch.cross", "torch.cross", "pose3d_utils.coords.ensure_homogeneous.new", "torch.matmul", "torch.cross.norm", "torch.cross.norm", "torch.cross.norm", "pose3d_utils.coords.ensure_homogeneous", "skel_desc.joint_names.index", "skel_desc.joint_names.index", "skel_desc.joint_names.index"], "function", ["None"], ["", "def", "canonicalise_orientation", "(", "skel_desc", ",", "skel", ")", ":", "\n", "    ", "\"\"\"Rotate the skeleton into a canonical orientation.\n\n    This is achieved by aligning the plane formed by the left shoulder, right shoulder,\n    and pelvis joints with the XY plane. The root joint is positioned at the origin.\n    The direction from the pelvis to the midpoint of the soldiers is aligned\n    with the negative Y direction. \"Forwards\" for the skeleton corresponds to\n    the negative Z direction.\n\n    Args:\n        skel_desc (SkeletonDesc): The skeleton description\n        skel (torch.Tensor): The skeleton\n\n    Returns:\n        The re-oriented skeleton\n    \"\"\"", "\n", "skel", "=", "ensure_homogeneous", "(", "skel", ",", "d", "=", "3", ")", "\n", "\n", "cart_skel", "=", "homogeneous_to_cartesian", "(", "skel", ")", "\n", "cart_skel", "=", "cart_skel", "-", "cart_skel", "[", "skel_desc", ".", "root_joint_id", "]", "\n", "rshoulder", "=", "cart_skel", "[", "skel_desc", ".", "joint_names", ".", "index", "(", "'right_shoulder'", ")", "]", "\n", "lshoulder", "=", "cart_skel", "[", "skel_desc", ".", "joint_names", ".", "index", "(", "'left_shoulder'", ")", "]", "\n", "pelvis", "=", "cart_skel", "[", "skel_desc", ".", "joint_names", ".", "index", "(", "'pelvis'", ")", "]", "\n", "\n", "v1", "=", "rshoulder", "-", "pelvis", "\n", "v2", "=", "lshoulder", "-", "pelvis", "\n", "forward", "=", "torch", ".", "cross", "(", "v1", ",", "v2", ")", "\n", "forward", "=", "forward", "/", "forward", ".", "norm", "(", "2", ")", "\n", "\n", "up", "=", "0.5", "*", "(", "v1", "+", "v2", ")", "\n", "up", "=", "up", "/", "up", ".", "norm", "(", "2", ")", "\n", "\n", "right", "=", "torch", ".", "cross", "(", "forward", ",", "up", ")", "\n", "right", "=", "right", "/", "right", ".", "norm", "(", "2", ")", "\n", "\n", "up", "=", "torch", ".", "cross", "(", "forward", ",", "right", ")", "\n", "\n", "look_at", "=", "skel", ".", "new", "(", "[", "\n", "[", "right", "[", "0", "]", ",", "up", "[", "0", "]", ",", "forward", "[", "0", "]", ",", "0", "]", ",", "\n", "[", "right", "[", "1", "]", ",", "up", "[", "1", "]", ",", "forward", "[", "1", "]", ",", "0", "]", ",", "\n", "[", "right", "[", "2", "]", ",", "up", "[", "2", "]", ",", "forward", "[", "2", "]", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", "]", ",", "\n", "]", ")", "\n", "\n", "return", "torch", ".", "matmul", "(", "ensure_homogeneous", "(", "cart_skel", ",", "d", "=", "3", ")", ",", "look_at", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.common.Annotations.__init__": [[74, 81], ["numpy.array_equal", "numpy.array_equal", "common.Annotations._reshape_annot", "common.Annotations._reshape_annot", "common.Annotations._reshape_annot", "annot[].flatten", "numpy.arange", "annot[].flatten", "numpy.arange"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.common.Annotations._reshape_annot", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.common.Annotations._reshape_annot", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.common.Annotations._reshape_annot"], ["    ", "def", "__init__", "(", "self", ",", "annot", ")", ":", "\n", "        ", "self", ".", "annot", "=", "annot", "\n", "assert", "np", ".", "array_equal", "(", "annot", "[", "'cameras'", "]", ".", "flatten", "(", ")", ",", "np", ".", "arange", "(", "Constants", "[", "'n_cameras'", "]", ")", ")", "\n", "assert", "np", ".", "array_equal", "(", "annot", "[", "'frames'", "]", ".", "flatten", "(", ")", ",", "np", ".", "arange", "(", "annot", "[", "'frames'", "]", ".", "shape", "[", "0", "]", ")", ")", "\n", "self", ".", "annot3", "=", "self", ".", "_reshape_annot", "(", "annot", "[", "'annot3'", "]", ",", "3", ")", "\n", "self", ".", "univ_annot3", "=", "self", ".", "_reshape_annot", "(", "annot", "[", "'univ_annot3'", "]", ",", "3", ")", "\n", "self", ".", "annot2", "=", "self", ".", "_reshape_annot", "(", "annot", "[", "'annot2'", "]", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.common.Annotations._reshape_annot": [[82, 86], ["numpy.stack", "numpy.stack.reshape", "numpy.stack.flatten"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_reshape_annot", "(", "arr", ",", "ndims", ")", ":", "\n", "        ", "arr", "=", "np", ".", "stack", "(", "arr", ".", "flatten", "(", ")", ")", "\n", "return", "arr", ".", "reshape", "(", "(", "arr", ".", "shape", "[", "0", "]", ",", "arr", ".", "shape", "[", "1", "]", ",", "28", ",", "ndims", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.common.parse_camera_calibration": [[88, 137], ["re.compile", "f.readline", "f.readlines", "camera_properties.items", "re.compile.fullmatch", "line.strip", "line_re.fullmatch.groups", "value.split", "pose3d_utils.camera.CameraIntrinsics", "torch.from_numpy", "int", "len", "numpy.array", "torch.from_numpy", "len", "numpy.array().reshape", "print", "float", "len", "numpy.array", "float"], "function", ["None"], ["", "", "def", "parse_camera_calibration", "(", "f", ")", ":", "\n", "    ", "line_re", "=", "re", ".", "compile", "(", "r'(\\w+)\\s+(.+)'", ")", "\n", "types", "=", "{", "\n", "'name'", ":", "'int'", ",", "\n", "'sensor'", ":", "'vec2'", ",", "\n", "'size'", ":", "'vec2'", ",", "\n", "'animated'", ":", "'int'", ",", "\n", "'intrinsic'", ":", "'mat4'", ",", "\n", "'extrinsic'", ":", "'mat4'", ",", "\n", "'radial'", ":", "'int'", ",", "\n", "}", "\n", "f", ".", "readline", "(", ")", "\n", "camera_properties", "=", "{", "}", "\n", "props", "=", "None", "\n", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "        ", "line_match", "=", "line_re", ".", "fullmatch", "(", "line", ".", "strip", "(", ")", ")", "\n", "if", "line_match", ":", "\n", "            ", "key", ",", "value", "=", "line_match", ".", "groups", "(", ")", "\n", "values", "=", "value", ".", "split", "(", "' '", ")", "\n", "value_type", "=", "types", "[", "key", "]", "\n", "if", "value_type", "==", "'int'", ":", "\n", "                ", "assert", "len", "(", "values", ")", "==", "1", "\n", "parsed_value", "=", "int", "(", "values", "[", "0", "]", ")", "\n", "", "elif", "value_type", "==", "'vec2'", ":", "\n", "                ", "assert", "len", "(", "values", ")", "==", "2", "\n", "parsed_value", "=", "np", ".", "array", "(", "[", "float", "(", "v", ")", "for", "v", "in", "values", "]", ")", "\n", "", "elif", "value_type", "==", "'mat4'", ":", "\n", "                ", "assert", "len", "(", "values", ")", "==", "4", "*", "4", "\n", "parsed_value", "=", "np", ".", "array", "(", "[", "float", "(", "v", ")", "for", "v", "in", "values", "]", ")", ".", "reshape", "(", "(", "4", ",", "4", ")", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Skipping unrecognized camera calibration field:'", ",", "key", ")", "\n", "continue", "\n", "\n", "", "if", "key", "==", "'name'", ":", "\n", "                ", "props", "=", "{", "}", "\n", "camera_properties", "[", "parsed_value", "]", "=", "props", "\n", "", "else", ":", "\n", "                ", "props", "[", "key", "]", "=", "parsed_value", "\n", "\n", "", "", "", "cameras", "=", "{", "}", "\n", "for", "i", ",", "props", "in", "camera_properties", ".", "items", "(", ")", ":", "\n", "        ", "cameras", "[", "i", "]", "=", "{", "\n", "'intrinsics'", ":", "CameraIntrinsics", "(", "torch", ".", "from_numpy", "(", "props", "[", "'intrinsic'", "]", ")", "[", ":", "3", "]", ")", ",", "\n", "'extrinsics'", ":", "torch", ".", "from_numpy", "(", "props", "[", "'extrinsic'", "]", ")", ",", "\n", "'image_width'", ":", "props", "[", "'size'", "]", "[", "0", "]", ",", "\n", "'image_height'", ":", "props", "[", "'size'", "]", "[", "1", "]", ",", "\n", "}", "\n", "\n", "", "return", "cameras", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.raw.RawMpiTestSeqDataset.__init__": [[13, 27], ["os.path.join", "h5py.File", "os.path.join", "list", "list", "range", "numpy.where", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "seq_id", ",", "valid_only", "=", "True", ")", ":", "\n", "        ", "frame_indices", "=", "[", "]", "\n", "\n", "with", "h5py", ".", "File", "(", "path", ".", "join", "(", "data_dir", ",", "seq_id", ",", "'annot_data.mat'", ")", ",", "'r'", ")", "as", "annot", ":", "\n", "            ", "if", "valid_only", ":", "\n", "                ", "new_frame_indices", "=", "list", "(", "np", ".", "where", "(", "annot", "[", "'valid_frame'", "]", ")", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "new_frame_indices", "=", "list", "(", "range", "(", "len", "(", "annot", "[", "'valid_frame'", "]", ")", ")", ")", "\n", "", "", "frame_indices", "+=", "new_frame_indices", "\n", "\n", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "frame_indices", "=", "frame_indices", "\n", "self", ".", "seq_id", "=", "seq_id", "\n", "self", ".", "annot_file", "=", "path", ".", "join", "(", "self", ".", "data_dir", ",", "self", ".", "seq_id", ",", "'annot_data.mat'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.raw.RawMpiTestSeqDataset.__len__": [[28, 30], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "frame_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.raw.RawMpiTestSeqDataset.__getitem__": [[31, 46], ["os.path.join", "h5py.File", "int", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "frame_index", "=", "self", ".", "frame_indices", "[", "index", "]", "\n", "image_id", "=", "frame_index", "+", "1", "\n", "image_file", "=", "path", ".", "join", "(", "\n", "self", ".", "data_dir", ",", "self", ".", "seq_id", ",", "'imageSequence'", ",", "'img_%06d.jpg'", "%", "image_id", ")", "\n", "\n", "with", "h5py", ".", "File", "(", "self", ".", "annot_file", ",", "'r'", ")", "as", "annot", ":", "\n", "            ", "return", "{", "\n", "'image_file'", ":", "image_file", ",", "\n", "'seq_id'", ":", "self", ".", "seq_id", ",", "\n", "'frame_index'", ":", "frame_index", ",", "\n", "'valid'", ":", "int", "(", "annot", "[", "'valid_frame'", "]", "[", "frame_index", "]", "[", "0", "]", ")", ",", "\n", "'annot2'", ":", "torch", ".", "from_numpy", "(", "annot", "[", "'annot2'", "]", "[", "frame_index", "]", "[", "0", "]", ")", ",", "\n", "'annot3'", ":", "torch", ".", "from_numpy", "(", "annot", "[", "'annot3'", "]", "[", "frame_index", "]", "[", "0", "]", ")", ",", "\n", "'univ_annot3'", ":", "torch", ".", "from_numpy", "(", "annot", "[", "'univ_annot3'", "]", "[", "frame_index", "]", "[", "0", "]", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.raw.RawMpiTestDataset.__init__": [[53, 71], ["enumerate", "raw.RawMpiTestSeqDataset", "len", "list", "range", "len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "data_dir", ",", "valid_only", "=", "True", ")", ":", "\n", "        ", "self", ".", "seq_datasets", "=", "[", "\n", "RawMpiTestSeqDataset", "(", "data_dir", ",", "seq_id", ",", "valid_only", "=", "valid_only", ")", "\n", "for", "seq_id", "in", "self", ".", "SEQ_IDS", "\n", "]", "\n", "\n", "seq_indices", "=", "[", "]", "\n", "frame_indices", "=", "[", "]", "\n", "seq_start_indices", "=", "{", "}", "\n", "for", "seq_index", ",", "seq_dataset", "in", "enumerate", "(", "self", ".", "seq_datasets", ")", ":", "\n", "            ", "seq_start_indices", "[", "seq_dataset", ".", "seq_id", "]", "=", "len", "(", "frame_indices", ")", "\n", "frame_indices", "+=", "list", "(", "range", "(", "len", "(", "seq_dataset", ")", ")", ")", "\n", "seq_indices", "+=", "[", "seq_index", "]", "*", "len", "(", "seq_dataset", ")", "\n", "\n", "", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "frame_indices", "=", "frame_indices", "\n", "self", ".", "seq_indices", "=", "seq_indices", "\n", "self", ".", "seq_start_indices", "=", "seq_start_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.raw.RawMpiTestDataset.__len__": [[72, 74], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "frame_indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.raw.RawMpiTestDataset.__getitem__": [[75, 77], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "seq_datasets", "[", "self", ".", "seq_indices", "[", "index", "]", "]", "[", "self", ".", "frame_indices", "[", "index", "]", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._progress": [[21, 23], ["tqdm.tqdm"], "function", ["None"], ["def", "_progress", "(", "iterator", ",", "name", ")", ":", "\n", "    ", "return", "tqdm", "(", "iterator", ",", "desc", "=", "'{:10s}'", ".", "format", "(", "name", ")", ",", "ascii", "=", "True", ",", "leave", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.is_image_ok": [[25, 37], ["PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "numpy.array().mean", "numpy.array"], "function", ["None"], ["", "def", "is_image_ok", "(", "image_file", ")", ":", "\n", "    ", "\"\"\"Test whether a camera frame image is usable.\"\"\"", "\n", "\n", "img", "=", "PIL", ".", "Image", ".", "open", "(", "image_file", ")", "\n", "grey", "=", "np", ".", "array", "(", "img", ")", ".", "mean", "(", "axis", "=", "-", "1", ")", "\n", "\n", "# If over 1/3 of the image is white, the flash probably went off in", "\n", "# this frame, washing out the image and making it unusable.", "\n", "if", "(", "grey", ">", "250", ")", ".", "sum", "(", ")", ">", "(", "img", ".", "height", "*", "img", ".", "width", ")", "/", "3.0", ":", "\n", "        ", "return", "False", "\n", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.process_camera_video": [[39, 76], ["preprocess._progress", "os.path.join", "os.makedirs", "os.path.join", "tempfile.TemporaryDirectory", "subprocess.call", "os.listdir", "Exception", "shutil.move", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._progress"], ["", "def", "process_camera_video", "(", "in_dir", ",", "out_dir", ",", "camera_id", ",", "frame_indices", ")", ":", "\n", "    ", "subdirs", "=", "[", "(", "'imageSequence'", ",", "'jpg'", ")", ",", "(", "'ChairMasks'", ",", "'png'", ")", ",", "(", "'FGmasks'", ",", "'jpg'", ")", "]", "\n", "\n", "for", "subdir", ",", "ext", "in", "_progress", "(", "subdirs", ",", "'Videos'", ")", ":", "\n", "        ", "frames_dir", "=", "path", ".", "join", "(", "out_dir", ",", "subdir", ",", "'video_%d'", "%", "camera_id", ")", "\n", "os", ".", "makedirs", "(", "frames_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "existing_files", "=", "{", "f", "for", "f", "in", "os", ".", "listdir", "(", "frames_dir", ")", "}", "\n", "skip", "=", "True", "\n", "for", "i", "in", "frame_indices", ":", "\n", "            ", "filename", "=", "'img_%06d.%s'", "%", "(", "i", "+", "1", ",", "ext", ")", "\n", "if", "filename", "not", "in", "existing_files", ":", "\n", "                ", "skip", "=", "False", "\n", "break", "\n", "", "", "if", "skip", ":", "\n", "            ", "continue", "\n", "\n", "", "video_file", "=", "path", ".", "join", "(", "in_dir", ",", "subdir", ",", "'video_%d.avi'", "%", "camera_id", ")", "\n", "\n", "with", "TemporaryDirectory", "(", "prefix", "=", "'tmp_'", ",", "dir", "=", "path", ".", "join", "(", "out_dir", ")", ")", "as", "tmp_dir", ":", "\n", "            ", "retcode", "=", "call", "(", "[", "\n", "'ffmpeg'", ",", "\n", "'-nostats'", ",", "'-loglevel'", ",", "'16'", ",", "\n", "'-i'", ",", "video_file", ",", "\n", "'-vf'", ",", "'scale=768:768'", ",", "\n", "'-qscale:v'", ",", "'3'", ",", "\n", "path", ".", "join", "(", "tmp_dir", ",", "'img_%06d.{}'", ".", "format", "(", "ext", ")", ")", "\n", "]", ")", "\n", "\n", "if", "retcode", "!=", "0", ":", "\n", "                ", "raise", "Exception", "(", "f'failed to extract frames from \"{video_file}\"'", ")", "\n", "\n", "", "for", "i", "in", "frame_indices", ":", "\n", "                ", "filename", "=", "'img_%06d.%s'", "%", "(", "i", "+", "1", ",", "ext", ")", "\n", "move", "(", "\n", "path", ".", "join", "(", "tmp_dir", ",", "filename", ")", ",", "\n", "path", ".", "join", "(", "frames_dir", ",", "filename", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.interesting_frame_indices": [[79, 103], ["torch.from_numpy", "torch.from_numpy", "range", "frame_indices.append", "annot2[].min().item", "annot2[].max().item", "annot2[].min", "annot2[].max"], "function", ["None"], ["", "", "", "", "def", "interesting_frame_indices", "(", "annot", ",", "camera_id", ",", "n_frames", ")", ":", "\n", "    ", "\"\"\"Use the annotations to find interesting training poses.\n\n    A pose is \"interesting\" if it is sufficiently different from previously seen\n    poses, and is within the image bounds.\n    \"\"\"", "\n", "\n", "univ_annot3", "=", "torch", ".", "from_numpy", "(", "annot", ".", "univ_annot3", "[", "camera_id", "]", ")", "\n", "annot2", "=", "torch", ".", "from_numpy", "(", "annot", ".", "annot2", "[", "camera_id", "]", ")", "\n", "\n", "frame_indices", "=", "[", "]", "\n", "prev_joints3d", "=", "None", "\n", "threshold", "=", "200", "**", "2", "# Require a joint to move at least 200mm since the previous pose", "\n", "for", "i", "in", "range", "(", "n_frames", ")", ":", "\n", "        ", "joints3d", "=", "univ_annot3", "[", "i", "]", "\n", "if", "prev_joints3d", "is", "not", "None", ":", "\n", "            ", "max_move", "=", "(", "joints3d", "-", "prev_joints3d", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "-", "1", ")", ".", "max", "(", ")", ".", "item", "(", ")", "\n", "if", "max_move", "<", "threshold", ":", "\n", "                ", "continue", "\n", "# Keep pose if all joint coordinates are within the image bounds", "\n", "", "", "if", "annot2", "[", "i", "]", ".", "min", "(", ")", ".", "item", "(", ")", ">=", "0", "and", "annot2", "[", "i", "]", ".", "max", "(", ")", ".", "item", "(", ")", "<", "2048", ":", "\n", "            ", "prev_joints3d", "=", "joints3d", "\n", "frame_indices", ".", "append", "(", "i", ")", "\n", "", "", "return", "frame_indices", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._calculate_univ_scale_factor": [[105, 126], ["margipose.data.skeleton.absolute_to_root_relative", "margipose.data.skeleton.absolute_to_root_relative", "margipose.data.skeleton.absolute_to_root_relative.abs().gt", "float", "torch.as_tensor", "torch.as_tensor", "ratio.median", "enumerate", "margipose.data.skeleton.absolute_to_root_relative.abs"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_root_relative", "home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_root_relative"], ["", "def", "_calculate_univ_scale_factor", "(", "annot3", ",", "univ_annot3", ",", "skel_desc", ")", ":", "\n", "    ", "rel_annot3", "=", "absolute_to_root_relative", "(", "torch", ".", "as_tensor", "(", "annot3", ")", ",", "skel_desc", ".", "root_joint_id", ")", "\n", "rel_univ", "=", "absolute_to_root_relative", "(", "torch", ".", "as_tensor", "(", "univ_annot3", ")", ",", "skel_desc", ".", "root_joint_id", ")", "\n", "\n", "# NOTE: annot3 and univ_annot3 are not congruent for the revised release of TS6. The", "\n", "#       discrepancies appear for the knee and ankle joints only. It seems like it is the", "\n", "#       universal annotations that are incorrect, since annot3 projects to annot2 correctly.", "\n", "exclude", "=", "{", "'pelvis'", ",", "'left_knee'", ",", "'left_ankle'", ",", "'right_knee'", ",", "'right_ankle'", "}", "\n", "include_indices", "=", "[", "i", "for", "i", ",", "name", "in", "enumerate", "(", "skel_desc", ".", "joint_names", ")", "if", "not", "name", "in", "exclude", "]", "\n", "rel_annot3", "=", "rel_annot3", "[", "...", ",", "include_indices", ",", ":", "]", "\n", "rel_univ", "=", "rel_univ", "[", "...", ",", "include_indices", ",", ":", "]", "\n", "\n", "non_zero", "=", "rel_univ", ".", "abs", "(", ")", ".", "gt", "(", "1e-6", ")", "\n", "ratio", "=", "(", "rel_annot3", "/", "rel_univ", ")", ".", "masked_select", "(", "non_zero", ")", "\n", "\n", "scale", "=", "float", "(", "ratio", ".", "median", "(", ")", ")", "\n", "rel_univ_recons", "=", "rel_annot3", "/", "scale", "\n", "err_count", "=", "(", "rel_univ_recons", "-", "rel_univ", ")", ".", "abs", "(", ")", ".", "gt", "(", "1e-6", ")", ".", "sum", "(", ")", "\n", "assert", "err_count", "==", "0", "\n", "\n", "return", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._add_annotation_metadata": [[128, 135], ["f.create_dataset", "preprocess._calculate_univ_scale_factor", "f.create_dataset", "margipose.data.mpi_inf_3dhp.common.MpiInf3dhpSkeletonDesc", "margipose.data.skeleton.CanonicalSkeletonDesc"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._calculate_univ_scale_factor"], ["", "def", "_add_annotation_metadata", "(", "f", ",", "annot3", ",", "univ_annot3", ",", "skel_desc", ")", ":", "\n", "    ", "ds", "=", "f", ".", "create_dataset", "(", "'joints3d'", ",", "annot3", ".", "shape", ",", "dtype", "=", "'f8'", ")", "\n", "ds", "[", ":", "]", "=", "annot3", "\n", "\n", "scale", "=", "_calculate_univ_scale_factor", "(", "annot3", ",", "univ_annot3", ",", "skel_desc", ")", "\n", "ds", "=", "f", ".", "create_dataset", "(", "'scale'", ",", "(", "1", ",", ")", ",", "dtype", "=", "'f8'", ")", "\n", "ds", "[", ":", "]", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.process_sequence": [[137, 169], ["os.makedirs", "os.path.join", "os.path.join", "h5py.File", "margipose.data.mpi_inf_3dhp.common.Annotations", "preprocess._add_annotation_metadata", "preprocess._progress", "os.path.exists", "shutil.copy", "os.path.join", "scipy.io.loadmat", "os.path.join", "preprocess.process_camera_video", "preprocess.interesting_frame_indices", "os.path.join", "f.create_dataset", "numpy.array", "range", "preprocess.is_image_ok", "len", "os.path.join"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._add_annotation_metadata", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._progress", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.process_camera_video", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.interesting_frame_indices", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.is_image_ok"], ["", "def", "process_sequence", "(", "in_dir", ",", "out_dir", ",", "n_frames", ",", "blacklist", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "out_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "for", "filename", "in", "[", "'annot.mat'", ",", "'camera.calibration'", "]", ":", "\n", "        ", "src_file", "=", "path", ".", "join", "(", "in_dir", ",", "filename", ")", "\n", "dest_file", "=", "path", ".", "join", "(", "out_dir", ",", "filename", ")", "\n", "if", "not", "path", ".", "exists", "(", "dest_file", ")", ":", "\n", "            ", "copy", "(", "src_file", ",", "dest_file", ")", "\n", "\n", "", "", "with", "h5py", ".", "File", "(", "path", ".", "join", "(", "out_dir", ",", "'metadata.h5'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "annot", "=", "Annotations", "(", "loadmat", "(", "path", ".", "join", "(", "out_dir", ",", "'annot.mat'", ")", ")", ")", "\n", "_add_annotation_metadata", "(", "\n", "f", ",", "\n", "annot", ".", "annot3", "[", ":", ",", ":", "n_frames", "]", ",", "\n", "annot", ".", "univ_annot3", "[", ":", ",", ":", "n_frames", "]", ",", "\n", "MpiInf3dhpSkeletonDesc", ",", "\n", ")", "\n", "for", "camera_id", "in", "_progress", "(", "Constants", "[", "'vnect_cameras'", "]", ",", "'Cameras'", ")", ":", "\n", "            ", "if", "camera_id", "not", "in", "blacklist", ":", "\n", "                ", "process_camera_video", "(", "in_dir", ",", "out_dir", ",", "camera_id", ",", "range", "(", "n_frames", ")", ")", "\n", "indices", "=", "interesting_frame_indices", "(", "annot", ",", "camera_id", ",", "n_frames", ")", "\n", "images_dir", "=", "path", ".", "join", "(", "out_dir", ",", "'imageSequence'", ",", "'video_%d'", "%", "camera_id", ")", "\n", "indices", "=", "[", "\n", "i", "for", "i", "in", "indices", "\n", "if", "is_image_ok", "(", "path", ".", "join", "(", "images_dir", ",", "'img_%06d.jpg'", "%", "(", "i", "+", "1", ")", ")", ")", "\n", "]", "\n", "ds", "=", "f", ".", "create_dataset", "(", "\n", "'interesting_frames/camera%d'", "%", "camera_id", ",", "\n", "(", "len", "(", "indices", ")", ",", ")", ",", "\n", "dtype", "=", "'i8'", "\n", ")", "\n", "ds", "[", ":", "]", "=", "np", ".", "array", "(", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_sequences": [[171, 179], ["preprocess._progress", "os.path.join", "preprocess.process_sequence", "os.path.join", "os.path.join", "Constants[].get"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._progress", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.process_sequence"], ["", "", "", "", "def", "preprocess_sequences", "(", "src_dir", ",", "dest_dir", ",", "seqs", ")", ":", "\n", "    ", "for", "subj_id", ",", "seq_id", "in", "_progress", "(", "seqs", ",", "'Sequences'", ")", ":", "\n", "        ", "seq_rel_path", "=", "path", ".", "join", "(", "'S%d'", "%", "subj_id", ",", "'Seq%d'", "%", "seq_id", ")", "\n", "process_sequence", "(", "\n", "path", ".", "join", "(", "src_dir", ",", "seq_rel_path", ")", ",", "\n", "path", ".", "join", "(", "dest_dir", ",", "seq_rel_path", ")", ",", "\n", "n_frames", "=", "Constants", "[", "'seq_info'", "]", "[", "seq_rel_path", "]", "[", "'num_frames'", "]", ",", "\n", "blacklist", "=", "Constants", "[", "'blacklist'", "]", ".", "get", "(", "seq_rel_path", ",", "[", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_training_data": [[182, 184], ["preprocess.preprocess_sequences"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_sequences"], ["", "", "def", "preprocess_training_data", "(", "src_dir", ",", "dest_dir", ")", ":", "\n", "    ", "return", "preprocess_sequences", "(", "src_dir", ",", "dest_dir", ",", "Constants", "[", "'train_seqs'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_validation_data": [[186, 188], ["preprocess.preprocess_sequences"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_sequences"], ["", "def", "preprocess_validation_data", "(", "src_dir", ",", "dest_dir", ")", ":", "\n", "    ", "return", "preprocess_sequences", "(", "src_dir", ",", "dest_dir", ",", "Constants", "[", "'val_seqs'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_test_data": [[190, 244], ["preprocess._progress", "RawMpiTestSeqDataset", "os.path.join", "os.path.join", "os.makedirs", "preprocess._progress", "shutil.copy", "seq_id.replace", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "image.resize.resize", "image.resize.save", "os.path.join", "h5py.File", "os.path.join", "os.path.join", "h5py.File", "len", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.stack().reshape", "list", "numpy.stack().reshape", "list", "preprocess._add_annotation_metadata", "enumerate", "f.create_dataset", "numpy.array", "int", "[].flatten", "[].flatten", "open", "numpy.array().flatten", "numpy.array", "numpy.array", "numpy.array", "numpy.stack", "numpy.stack", "os.path.join", "cam_file.write", "indices.append", "len", "numpy.array", "numpy.linalg.lstsq", "numpy.linalg.lstsq"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._progress", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._progress", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._add_annotation_metadata"], ["", "def", "preprocess_test_data", "(", "src_dir", ",", "dest_dir", ")", ":", "\n", "    ", "from", "margipose", ".", "data", ".", "mpi_inf_3dhp", ".", "raw", "import", "RawMpiTestDataset", ",", "RawMpiTestSeqDataset", "\n", "\n", "for", "seq_id", "in", "_progress", "(", "RawMpiTestDataset", ".", "SEQ_IDS", ",", "'Sequences'", ")", ":", "\n", "        ", "dataset", "=", "RawMpiTestSeqDataset", "(", "src_dir", ",", "seq_id", ",", "valid_only", "=", "True", ")", "\n", "\n", "out_dir", "=", "path", ".", "join", "(", "dest_dir", ",", "seq_id", ".", "replace", "(", "'TS'", ",", "'S'", ")", ",", "'Seq1'", ")", "\n", "image_out_dir", "=", "path", ".", "join", "(", "out_dir", ",", "'imageSequence'", ",", "'video_0'", ")", "\n", "os", ".", "makedirs", "(", "image_out_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "image_width", "=", "image_height", "=", "-", "1", "\n", "for", "example", "in", "_progress", "(", "dataset", ",", "'Images'", ")", ":", "\n", "            ", "image", "=", "PIL", ".", "Image", ".", "open", "(", "example", "[", "'image_file'", "]", ")", "\n", "image_width", ",", "image_height", "=", "image", ".", "size", "\n", "image", "=", "image", ".", "resize", "(", "(", "int", "(", "image_width", "*", "768", "/", "image_height", ")", ",", "768", ")", ",", "PIL", ".", "Image", ".", "ANTIALIAS", ")", "\n", "image", ".", "save", "(", "path", ".", "join", "(", "image_out_dir", ",", "'img_%06d.jpg'", "%", "(", "example", "[", "'frame_index'", "]", "+", "1", ")", ")", ")", "\n", "\n", "", "copy", "(", "dataset", ".", "annot_file", ",", "path", ".", "join", "(", "out_dir", ",", "'annot_data.mat'", ")", ")", "\n", "\n", "with", "h5py", ".", "File", "(", "path", ".", "join", "(", "out_dir", ",", "'metadata.h5'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "with", "h5py", ".", "File", "(", "dataset", ".", "annot_file", ",", "'r'", ")", "as", "annot", ":", "\n", "                ", "n_frames", "=", "len", "(", "annot", "[", "'annot3'", "]", ")", "\n", "annot3", "=", "np", ".", "array", "(", "annot", "[", "'annot3'", "]", ")", ".", "reshape", "(", "1", ",", "n_frames", ",", "17", ",", "3", ")", "\n", "univ_annot3", "=", "np", ".", "array", "(", "annot", "[", "'univ_annot3'", "]", ")", ".", "reshape", "(", "1", ",", "n_frames", ",", "17", ",", "3", ")", "\n", "annot2", "=", "np", ".", "array", "(", "annot", "[", "'annot2'", "]", ")", ".", "reshape", "(", "1", ",", "n_frames", ",", "17", ",", "2", ")", "\n", "\n", "# Infer camera intrinsics", "\n", "x3d", "=", "np", ".", "stack", "(", "[", "annot3", "[", "0", ",", ":", ",", ":", ",", "0", "]", ",", "annot3", "[", "0", ",", ":", ",", ":", ",", "2", "]", "]", ",", "axis", "=", "-", "1", ")", ".", "reshape", "(", "n_frames", "*", "17", ",", "2", ")", "\n", "x2d", "=", "(", "annot2", "[", "0", ",", ":", ",", ":", ",", "0", "]", "*", "annot3", "[", "0", ",", ":", ",", ":", ",", "2", "]", ")", ".", "reshape", "(", "n_frames", "*", "17", ",", "1", ")", "\n", "fx", ",", "cx", "=", "list", "(", "np", ".", "linalg", ".", "lstsq", "(", "x3d", ",", "x2d", ",", "rcond", "=", "None", ")", "[", "0", "]", ".", "flatten", "(", ")", ")", "\n", "y3d", "=", "np", ".", "stack", "(", "[", "annot3", "[", "0", ",", ":", ",", ":", ",", "1", "]", ",", "annot3", "[", "0", ",", ":", ",", ":", ",", "2", "]", "]", ",", "axis", "=", "-", "1", ")", ".", "reshape", "(", "n_frames", "*", "17", ",", "2", ")", "\n", "y2d", "=", "(", "annot2", "[", "0", ",", ":", ",", ":", ",", "1", "]", "*", "annot3", "[", "0", ",", ":", ",", ":", ",", "2", "]", ")", ".", "reshape", "(", "n_frames", "*", "17", ",", "1", ")", "\n", "fy", ",", "cy", "=", "list", "(", "np", ".", "linalg", ".", "lstsq", "(", "y3d", ",", "y2d", ",", "rcond", "=", "None", ")", "[", "0", "]", ".", "flatten", "(", ")", ")", "\n", "\n", "with", "open", "(", "path", ".", "join", "(", "out_dir", ",", "'camera.calibration'", ")", ",", "'w'", ")", "as", "cam_file", ":", "\n", "                    ", "lines", "=", "[", "\n", "'Fake Camera Calibration File'", ",", "\n", "'name          0'", ",", "\n", "'  size        {:d} {:d}'", ".", "format", "(", "image_width", ",", "image_height", ")", ",", "\n", "'  intrinsic   {:0.3f} 0 {:0.3f} 0 0 {:0.3f} {:0.3f} 0 0 0 1 0 0 0 0 1'", "\n", ".", "format", "(", "fx", ",", "cx", ",", "fy", ",", "cy", ")", ",", "\n", "'  extrinsic   1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1'", ",", "\n", "]", "\n", "for", "line", "in", "lines", ":", "\n", "                        ", "cam_file", ".", "write", "(", "line", "+", "'\\n'", ")", "\n", "\n", "", "", "_add_annotation_metadata", "(", "f", ",", "annot3", ",", "univ_annot3", ",", "CanonicalSkeletonDesc", ")", "\n", "\n", "indices", "=", "[", "]", "\n", "for", "frame_index", ",", "is_valid", "in", "enumerate", "(", "np", ".", "array", "(", "annot", "[", "'valid_frame'", "]", ")", ".", "flatten", "(", ")", ")", ":", "\n", "                    ", "if", "is_valid", "==", "1", ":", "\n", "                        ", "indices", ".", "append", "(", "frame_index", ")", "\n", "", "", "ds", "=", "f", ".", "create_dataset", "(", "'interesting_frames/camera0'", ",", "(", "len", "(", "indices", ")", ",", ")", ",", "dtype", "=", "'i8'", ")", "\n", "ds", "[", ":", "]", "=", "np", ".", "array", "(", "indices", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._isolate_person": [[246, 260], ["list", "list", "max", "max", "min", "min", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw.rectangle", "PIL.ImageDraw.Draw.rectangle", "PIL.ImageDraw.Draw.rectangle", "PIL.ImageDraw.Draw.rectangle", "skel2d.min", "skel2d.max"], "function", ["None"], ["", "", "", "", "def", "_isolate_person", "(", "img", ",", "skel2d", ")", ":", "\n", "    ", "x1", ",", "y1", "=", "list", "(", "skel2d", ".", "min", "(", "axis", "=", "0", ")", ")", "\n", "x2", ",", "y2", "=", "list", "(", "skel2d", ".", "max", "(", "axis", "=", "0", ")", ")", "\n", "margin", "=", "30", "\n", "x1", "=", "max", "(", "x1", "-", "margin", ",", "0", ")", "\n", "y1", "=", "max", "(", "y1", "-", "margin", ",", "0", ")", "\n", "x2", "=", "min", "(", "x2", "+", "margin", ",", "767", ")", "\n", "y2", "=", "min", "(", "y2", "+", "margin", ",", "767", ")", "\n", "\n", "draw", "=", "PIL", ".", "ImageDraw", ".", "Draw", "(", "img", ")", "\n", "draw", ".", "rectangle", "(", "[", "0", ",", "0", ",", "x1", ",", "767", "]", ",", "fill", "=", "0", ")", "\n", "draw", ".", "rectangle", "(", "[", "0", ",", "0", ",", "767", ",", "y1", "]", ",", "fill", "=", "0", ")", "\n", "draw", ".", "rectangle", "(", "[", "x2", ",", "0", ",", "767", ",", "767", "]", ",", "fill", "=", "0", ")", "\n", "draw", ".", "rectangle", "(", "[", "0", ",", "y2", ",", "767", ",", "767", "]", ",", "fill", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_masks": [[262, 323], ["os.path.join", "os.path.join", "margipose.data.mpi_inf_3dhp.common.Annotations", "preprocess._progress", "h5py.File", "f[].keys", "scipy.io.loadmat", "os.path.join", "interesting_frames.append", "os.path.join", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert.split", "os.path.join", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "preprocess._isolate_person", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.Image.open", "PIL.ImageOps.invert.split", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageOps.invert", "PIL.ImageChops.lighter", "PIL.ImageChops.lighter", "PIL.ImageChops.lighter", "PIL.ImageChops.lighter", "PIL.ImageChops.lighter", "os.path.join", "os.makedirs", "PIL.ImageChops.lighter.save", "preprocess._isolate_person", "up_body.filter.filter", "up_body.filter.filter", "os.path.join", "os.makedirs", "up_body.filter.save", "preprocess._isolate_person", "low_body.filter.filter", "low_body.filter.filter", "os.path.join", "os.makedirs", "low_body.filter.save", "int", "list", "os.path.join", "os.path.dirname", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MaxFilter", "PIL.ImageFilter.MaxFilter", "PIL.ImageFilter.MaxFilter", "PIL.ImageFilter.MaxFilter", "PIL.ImageFilter.MaxFilter", "os.path.dirname", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MinFilter", "PIL.ImageFilter.MaxFilter", "PIL.ImageFilter.MaxFilter", "PIL.ImageFilter.MaxFilter", "PIL.ImageFilter.MaxFilter", "PIL.ImageFilter.MaxFilter", "os.path.dirname", "k.replace"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._progress", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._isolate_person", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._isolate_person", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._isolate_person"], ["", "def", "preprocess_masks", "(", "dir", ",", "subj_id", ",", "seq_id", ")", ":", "\n", "# Masks are useful to do data augmentation with compositing", "\n", "# eg `PIL.Image.composite(example_input, shirt_pattern, up_body_mask)`", "\n", "\n", "    ", "seq_rel_path", "=", "path", ".", "join", "(", "'S%d'", "%", "subj_id", ",", "'Seq%d'", "%", "seq_id", ")", "\n", "seq_dir", "=", "path", ".", "join", "(", "dir", ",", "seq_rel_path", ")", "\n", "\n", "info", "=", "Constants", "[", "'seq_info'", "]", "[", "seq_rel_path", "]", "\n", "\n", "interesting_frames", "=", "[", "]", "\n", "with", "h5py", ".", "File", "(", "path", ".", "join", "(", "seq_dir", ",", "'metadata.h5'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "k", "in", "f", "[", "'interesting_frames'", "]", ".", "keys", "(", ")", ":", "\n", "            ", "interesting_frames", ".", "append", "(", "\n", "(", "int", "(", "k", ".", "replace", "(", "'camera'", ",", "''", ")", ")", ",", "list", "(", "f", "[", "'interesting_frames'", "]", "[", "k", "]", ")", ")", "\n", ")", "\n", "\n", "", "", "annot", "=", "Annotations", "(", "loadmat", "(", "path", ".", "join", "(", "seq_dir", ",", "'annot.mat'", ")", ")", ")", "\n", "\n", "for", "camera_id", ",", "frame_indices", "in", "_progress", "(", "interesting_frames", ",", "'Cameras'", ")", ":", "\n", "        ", "for", "frame_index", "in", "frame_indices", ":", "\n", "            ", "path_part", "=", "'video_{}/img_{:06d}'", ".", "format", "(", "camera_id", ",", "frame_index", "+", "1", ")", "\n", "\n", "img", "=", "PIL", ".", "Image", ".", "open", "(", "path", ".", "join", "(", "seq_dir", ",", "'FGmasks/{}.jpg'", ".", "format", "(", "path_part", ")", ")", ")", "\n", "img", "=", "PIL", ".", "ImageOps", ".", "invert", "(", "img", ")", "\n", "fg", ",", "up_body", ",", "low_body", "=", "img", ".", "split", "(", ")", "\n", "\n", "skel2d", "=", "annot", ".", "annot2", "[", "camera_id", ",", "frame_index", "]", "*", "768", "/", "2048", "\n", "\n", "if", "info", "[", "'bg_augmentable'", "]", ":", "\n", "                ", "fg", "=", "PIL", ".", "ImageOps", ".", "invert", "(", "fg", ")", "\n", "_isolate_person", "(", "fg", ",", "skel2d", ")", "\n", "\n", "chair", "=", "PIL", ".", "Image", ".", "open", "(", "\n", "path", ".", "join", "(", "seq_dir", ",", "'ChairMasks/{}.png'", ".", "format", "(", "path_part", ")", ")", ")", "\n", "chair", ",", "_", ",", "_", "=", "chair", ".", "split", "(", ")", "\n", "chair", "=", "PIL", ".", "ImageOps", ".", "invert", "(", "chair", ")", "\n", "\n", "# Pixel-wise max", "\n", "combined", "=", "PIL", ".", "ImageChops", ".", "lighter", "(", "fg", ",", "chair", ")", "\n", "\n", "fg_file", "=", "path", ".", "join", "(", "seq_dir", ",", "'foreground_mask'", ",", "path_part", "+", "'.png'", ")", "\n", "os", ".", "makedirs", "(", "path", ".", "dirname", "(", "fg_file", ")", ",", "exist_ok", "=", "True", ")", "\n", "combined", ".", "save", "(", "fg_file", ")", "\n", "\n", "", "if", "info", "[", "'ub_augmentable'", "]", ":", "\n", "                ", "_isolate_person", "(", "up_body", ",", "skel2d", ")", "\n", "up_body", "=", "up_body", ".", "filter", "(", "PIL", ".", "ImageFilter", ".", "MinFilter", "(", "3", ")", ")", "\n", "up_body", "=", "up_body", ".", "filter", "(", "PIL", ".", "ImageFilter", ".", "MaxFilter", "(", "3", ")", ")", "\n", "\n", "up_body_file", "=", "path", ".", "join", "(", "seq_dir", ",", "'up_body_mask'", ",", "path_part", "+", "'.png'", ")", "\n", "os", ".", "makedirs", "(", "path", ".", "dirname", "(", "up_body_file", ")", ",", "exist_ok", "=", "True", ")", "\n", "up_body", ".", "save", "(", "up_body_file", ")", "\n", "\n", "", "if", "info", "[", "'lb_augmentable'", "]", ":", "\n", "                ", "_isolate_person", "(", "low_body", ",", "skel2d", ")", "\n", "low_body", "=", "low_body", ".", "filter", "(", "PIL", ".", "ImageFilter", ".", "MinFilter", "(", "3", ")", ")", "\n", "low_body", "=", "low_body", ".", "filter", "(", "PIL", ".", "ImageFilter", ".", "MaxFilter", "(", "3", ")", ")", "\n", "\n", "low_body_file", "=", "path", ".", "join", "(", "seq_dir", ",", "'low_body_mask'", ",", "path_part", "+", "'.png'", ")", "\n", "os", ".", "makedirs", "(", "path", ".", "dirname", "(", "low_body_file", ")", ",", "exist_ok", "=", "True", ")", "\n", "low_body", ".", "save", "(", "low_body_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_training_masks": [[325, 330], ["preprocess._progress", "preprocess.preprocess_masks"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._progress", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_masks"], ["", "", "", "", "def", "preprocess_training_masks", "(", "dir", ")", ":", "\n", "    ", "\"\"\"Preprocess masks in a preprocessed training data directory.\"\"\"", "\n", "\n", "for", "subj_id", ",", "seq_id", "in", "_progress", "(", "Constants", "[", "'train_seqs'", "]", ",", "'Sequences'", ")", ":", "\n", "        ", "preprocess_masks", "(", "dir", ",", "subj_id", ",", "seq_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_validation_masks": [[332, 337], ["preprocess._progress", "preprocess.preprocess_masks"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess._progress", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.preprocess.preprocess_masks"], ["", "", "def", "preprocess_validation_masks", "(", "dir", ")", ":", "\n", "    ", "\"\"\"Preprocess masks in a preprocessed validation data directory.\"\"\"", "\n", "\n", "for", "subj_id", ",", "seq_id", "in", "_progress", "(", "Constants", "[", "'val_seqs'", "]", ",", "'Sequences'", ")", ":", "\n", "        ", "preprocess_masks", "(", "dir", ",", "subj_id", ",", "seq_id", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.__init__": [[21, 27], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.image_file": [[28, 32], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.bg_mask_file": [[34, 38], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.ub_mask_file": [[40, 44], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.lb_mask_file": [[46, 50], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.annot_file": [[52, 55], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.camera_file": [[56, 59], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.metadata_file": [[60, 63], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.bg_augmentable": [[64, 68], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.ub_augmentable": [[69, 73], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.lb_augmentable": [[74, 78], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.to_dict": [[79, 86], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset.__init__": [[128, 173], ["margipose.data.PoseDataset.__init__", "sorted", "margipose.data_specs.DataSpecs", "os.path.isdir", "NotADirectoryError", "glob.iglob", "re.match", "int", "int", "os.path.join", "os.path.isfile", "margipose.data_specs.ImageSpecs", "margipose.data_specs.JointsSpecs", "os.path.join", "re.match.group", "re.match.group", "os.path.dirname", "h5py.File", "f[].keys", "h5py.File", "[].flatten().astype", "int", "re.match().group", "frame_refs.append", "[].flatten", "__init__.FrameRef", "re.match"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._mpi_inf_3dhp_to_canonical_skeleton": [[174, 186], ["list", "len", "torch.LongTensor().unsqueeze().expand", "skel.gather", "skel.size", "margipose.data.mpi_inf_3dhp.common.MpiInf3dhpSkeletonDesc.joint_names.index", "skel.size", "torch.LongTensor().unsqueeze", "torch.LongTensor"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset.to_canonical_skeleton": [[187, 192], ["__init__.MpiInf3dDataset._mpi_inf_3dhp_to_canonical_skeleton"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._mpi_inf_3dhp_to_canonical_skeleton"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._get_skeleton_3d": [[193, 222], ["os.path.join", "h5py.File", "torch.from_numpy", "Exception", "__init__.MpiInf3dDataset._mpi_inf_3dhp_to_canonical_skeleton", "Exception"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._mpi_inf_3dhp_to_canonical_skeleton"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._to_univ_scale": [[223, 240], ["skel_3d.clone"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._evaluate_3d": [[241, 251], ["margipose.eval.prepare_for_3d_evaluation", "margipose.eval.gather_3d_metrics", "margipose.data.skeleton.CanonicalSkeletonDesc.joint_names.index"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.prepare_for_3d_evaluation", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.gather_3d_metrics"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset.__len__": [[252, 254], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._build_sample": [[255, 291], ["__init__.MpiInf3dDataset.create_transformer_context", "__init__.MpiInf3dDataset.transform", "__init__.MpiInf3dDataset.skeleton_normaliser.normalise_skeleton", "frame_ref.to_dict", "pose3d_utils.coords.ensure_homogeneous", "torch.ByteTensor().fill_", "__init__.MpiInf3dDataset.input_to_tensor", "torch.ByteTensor", "__init__.MpiInf3dDataset.size"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.create_transformer_context", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.FrameRef.to_dict", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.input_to_tensor"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset.__getitem__": [[292, 430], ["__init__.MpiInf3dDataset._get_skeleton_3d", "__init__.MpiInf3dDataset._to_univ_scale", "cam_cal[].clone", "cam_cal[].clone.scale_image", "cam_cal[].clone.project_cartesian", "skel_2d[].min().item", "skel_2d[].max().item", "skel_2d[].min().item", "skel_2d[].max().item", "min", "PIL.Image.open", "open", "max", "margipose.data.collate", "__init__.MpiInf3dDataset._build_sample", "os.path.join", "os.path.join", "margipose.data.mpi_inf_3dhp.common.parse_camera_calibration", "skel_2d[].min", "skel_2d[].max", "skel_2d[].min", "skel_2d[].max", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "samples.append", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.clip", "__init__.augment_background", "__init__.augment_clothing", "__init__.augment_clothing", "__init__.MpiInf3dDataset._build_sample", "numpy.random.normal", "PIL.Image.open", "__init__.random_background", "PIL.Image.open", "__init__.random_texture", "PIL.Image.open", "__init__.random_texture", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._get_skeleton_3d", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._to_univ_scale", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.collate", "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._build_sample", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.common.parse_camera_calibration", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.augment_background", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.augment_clothing", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.augment_clothing", "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._build_sample", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.random_background", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.random_texture", "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.random_texture"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.random_texture": [[89, 99], ["list", "PIL.Image.open().convert", "PIL.ImageOps.colorize", "glob.iglob", "numpy.random.randint", "PIL.Image.open", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "len"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.data_specs.ImageSpecs.convert"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.augment_clothing": [[101, 111], ["numpy.array", "np.array.mean", "numpy.array", "PIL.Image.fromarray", "PIL.Image.composite", "Image.fromarray.round().astype", "Image.fromarray.round"], "function", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.random_background": [[113, 119], ["list", "PIL.Image.open", "glob.iglob", "torchvision.transforms.RandomHorizontalFlip", "numpy.random.randint", "torchvision.transforms.RandomCrop", "len"], "function", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.augment_background": [[121, 123], ["PIL.Image.composite"], "function", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpii.__init__.MpiiDataset.__init__": [[34, 47], ["margipose.data.PoseDataset.__init__", "torchdata.mpii.MpiiData", "margipose.data_specs.DataSpecs", "__init__.MpiiDataset.mpii_data.subset_indices", "margipose.data_specs.ImageSpecs", "margipose.data_specs.JointsSpecs"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpii.__init__.MpiiDataset.to_canonical_skeleton": [[48, 77], ["list", "len", "torch.LongTensor().unsqueeze().expand", "torch.LongTensor().unsqueeze().expand", "torch.LongTensor().unsqueeze().expand", "torch.LongTensor().unsqueeze().expand", "skel.gather", "MpiiSkeletonDesc.joint_names.index", "skel.size", "torch.LongTensor().unsqueeze", "torch.LongTensor().unsqueeze", "torch.LongTensor().unsqueeze", "torch.LongTensor().unsqueeze", "margipose.data.skeleton.CanonicalSkeletonDesc.joint_names.index", "margipose.data.skeleton.CanonicalSkeletonDesc.joint_names.index", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "MpiiSkeletonDesc.joint_names.index", "MpiiSkeletonDesc.joint_names.index", "MpiiSkeletonDesc.joint_names.index", "MpiiSkeletonDesc.joint_names.index"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpii.__init__.MpiiDataset.to_canonical_mask": [[78, 98], ["list", "len", "torch.LongTensor().expand", "torch.LongTensor().expand", "torch.LongTensor().expand", "torch.LongTensor().expand", "mask.gather", "MpiiSkeletonDesc.joint_names.index", "mask.size", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "margipose.data.skeleton.CanonicalSkeletonDesc.joint_names.index", "margipose.data.skeleton.CanonicalSkeletonDesc.joint_names.index", "MpiiSkeletonDesc.joint_names.index", "MpiiSkeletonDesc.joint_names.index"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpii.__init__.MpiiDataset.__len__": [[99, 101], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.mpii.__init__.MpiiDataset.__getitem__": [[102, 219], ["torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "__init__.MpiiDataset.mpii_data.get_bounding_box", "__init__.MpiiDataset.mpii_data.load_image", "min", "pose3d_utils.camera.CameraIntrinsics.from_ccd_params", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "__init__.MpiiDataset.create_transformer_context", "__init__.MpiiDataset.transform", "__init__.MpiiDataset.skeleton_normaliser.normalise_skeleton", "__init__.MpiiDataset.to_canonical_skeleton", "__init__.MpiiDataset.to_canonical_mask", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "__init__.MpiiDataset.scatter_", "__init__.MpiiDataset.narrow().abs().lt().min", "__init__.MpiiDataset.mul_", "__init__.MpiiDataset.input_to_tensor", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.clip", "numpy.random.uniform", "numpy.clip", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "__init__.MpiiDataset.clone", "numpy.random.normal", "numpy.random.normal", "__init__.MpiiDataset.narrow", "__init__.MpiiDataset.narrow().abs().lt", "__init__.MpiiDataset.narrow().abs", "__init__.MpiiDataset.narrow"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.create_transformer_context", "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.to_canonical_skeleton", "home.repos.pwc.inspect_result.anibali_margipose.mpii.__init__.MpiiDataset.to_canonical_mask", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.input_to_tensor"], []], "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__": [[109, 183], ["margipose.data.PoseDataset.__init__", "sorted", "enumerate", "margipose.data_specs.DataSpecs", "os.path.isdir", "NotADirectoryError", "glob.iglob", "numpy.concatenate", "numpy.array", "margipose.data_specs.ImageSpecs", "margipose.data_specs.JointsSpecs", "os.path.join", "h5py.File", "annot[].keys", "datasets.items", "train_ids.append", "test_ids.append", "numpy.array", "Exception", "list", "pose3d_utils.camera.CameraIntrinsics.from_ccd_params", "__init__.H36MDataset.camera_intrinsics.append", "datasets[].append", "int"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__init__"], []], "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.to_canonical_skeleton": [[184, 188], ["__init__.h36m_to_canonical_skeleton"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.h36m_to_canonical_skeleton"], []], "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.get_orig_skeleton": [[189, 198], ["pose3d_utils.coords.ensure_homogeneous", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "h36m_to_canonical_skeleton.size", "__init__.h36m_to_canonical_skeleton", "Exception", "h36m_to_canonical_skeleton.size"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.h36m_to_canonical_skeleton"], []], "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._load_image": [[199, 211], ["os.path.join", "PIL.Image.open", "str"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._evaluate_3d": [[212, 218], ["margipose.eval.prepare_for_3d_evaluation", "margipose.eval.gather_3d_metrics"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.prepare_for_3d_evaluation", "home.repos.pwc.inspect_result.anibali_margipose.margipose.eval.gather_3d_metrics"], []], "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__len__": [[219, 221], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._build_sample": [[222, 255], ["__init__.H36MDataset.create_transformer_context", "__init__.H36MDataset.transform", "__init__.H36MDataset.skeleton_normaliser.normalise_skeleton", "torch.ByteTensor().fill_", "torch.ByteTensor().fill_", "torch.ByteTensor().fill_", "torch.ByteTensor().fill_", "__init__.H36MDataset.input_to_tensor", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "torch.ByteTensor", "__init__.H36MDataset.size"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.create_transformer_context", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.PoseDataset.input_to_tensor"], []], "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.__getitem__": [[256, 358], ["__init__.H36MDataset._load_image", "min", "torch.eye().double", "torch.eye().double", "torch.eye().double", "torch.eye().double", "__init__.H36MDataset.get_orig_skeleton", "pose3d_utils.coords.homogeneous_to_cartesian", "joints2d[].min().item", "joints2d[].max().item", "joints2d[].min().item", "joints2d[].max().item", "orig_camera.project", "max", "margipose.data.collate", "__init__.H36MDataset._build_sample", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "pose3d_utils.coords.ensure_homogeneous", "joints2d[].min", "joints2d[].max", "joints2d[].min", "joints2d[].max", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "samples.append", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.clip", "__init__.H36MDataset._build_sample", "numpy.random.normal"], "methods", ["home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._load_image", "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset.get_orig_skeleton", "home.repos.pwc.inspect_result.anibali_margipose.data.__init__.collate", "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._build_sample", "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.H36MDataset._build_sample"], []], "home.repos.pwc.inspect_result.anibali_margipose.h36m.__init__.h36m_to_canonical_skeleton": [[84, 95], ["list", "len", "torch.LongTensor().unsqueeze().expand", "torch.LongTensor().unsqueeze().expand", "skel.gather", "skel.size", "H36MSkeletonDesc.joint_names.index", "skel.size", "torch.LongTensor().unsqueeze", "torch.LongTensor().unsqueeze", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], []], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_models.test_columns": [[11, 17], ["margipose.models.margipose_model.HeatmapColumn", "margipose.models.margipose_model.HeatmapColumn", "sum", "sum", "p.numel", "p.numel", "margipose.models.margipose_model.HeatmapColumn.parameters", "margipose.models.margipose_model.HeatmapColumn.parameters"], "function", ["None"], ["def", "test_columns", "(", ")", ":", "\n", "    ", "norm_col", "=", "HeatmapColumn", "(", "17", ",", "heatmap_space", "=", "'xy'", ")", "\n", "chat_col", "=", "HeatmapColumn", "(", "17", ",", "heatmap_space", "=", "'zy'", ")", "\n", "n_params_normal", "=", "sum", "(", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "chat_col", ".", "parameters", "(", ")", "]", ")", "\n", "n_params_permuted", "=", "sum", "(", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "norm_col", ".", "parameters", "(", ")", "]", ")", "\n", "assert", "n_params_normal", "==", "n_params_permuted", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_models.test_margipose": [[19, 28], ["pytest.mark.parametrize", "torch.no_grad", "torch.randn", "margipose.models.margipose_model.MargiPoseModel", "margipose.models.margipose_model.MargiPoseModel.", "margipose.models.margipose_model.MargiPoseModel.xy_heatmaps[].size", "torch.Size", "model.size", "torch.Size"], "function", ["None"], ["", "@", "pytest", ".", "mark", ".", "parametrize", "(", "'feature_extractor'", ",", "[", "'inceptionv4'", ",", "'resnet18'", ",", "'resnet50'", "]", ")", "\n", "def", "test_margipose", "(", "feature_extractor", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "in_var", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "256", ",", "256", ")", "\n", "model", "=", "MargiPoseModel", "(", "CanonicalSkeletonDesc", ",", "n_stages", "=", "2", ",", "axis_permutation", "=", "True", ",", "\n", "feature_extractor", "=", "feature_extractor", ",", "pixelwise_loss", "=", "'jsd'", ")", "\n", "out_var", "=", "model", "(", "in_var", ")", "\n", "", "assert", "model", ".", "xy_heatmaps", "[", "-", "1", "]", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "1", ",", "17", ",", "32", ",", "32", "]", ")", "\n", "assert", "out_var", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "1", ",", "17", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_models.test_chatterbox": [[30, 37], ["torch.no_grad", "torch.randn", "margipose.models.chatterbox_model.ChatterboxModel", "margipose.models.chatterbox_model.ChatterboxModel.", "margipose.models.chatterbox_model.ChatterboxModel.xy_heatmaps[].size", "torch.Size", "model.size", "torch.Size"], "function", ["None"], ["", "def", "test_chatterbox", "(", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "in_var", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "256", ",", "256", ")", "\n", "model", "=", "ChatterboxModel", "(", "CanonicalSkeletonDesc", ",", "pixelwise_loss", "=", "'jsd'", ")", "\n", "out_var", "=", "model", "(", "in_var", ")", "\n", "", "assert", "model", ".", "xy_heatmaps", "[", "-", "1", "]", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "1", ",", "17", ",", "32", ",", "32", "]", ")", "\n", "assert", "out_var", ".", "size", "(", ")", "==", "torch", ".", "Size", "(", "[", "1", ",", "17", ",", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_models.test_heatmaps_to_coords": [[39, 47], ["margipose.dsntnn.make_gauss", "margipose.dsntnn.make_gauss", "margipose.dsntnn.make_gauss", "margipose.models.margipose_model.MargiPoseModel.heatmaps_to_coords", "torch.testing.assert_allclose", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.make_gauss", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.make_gauss", "home.repos.pwc.inspect_result.anibali_margipose.margipose.dsntnn.make_gauss", "home.repos.pwc.inspect_result.anibali_margipose.models.margipose_model.MargiPoseModel.heatmaps_to_coords"], ["", "def", "test_heatmaps_to_coords", "(", ")", ":", "\n", "    ", "size", "=", "(", "32", ",", "32", ")", "\n", "sigma", "=", "1", "\n", "xy_hm", "=", "make_gauss", "(", "torch", ".", "Tensor", "(", "[", "[", "[", "-", "0.5", ",", "0.5", "]", "]", "]", ")", ",", "size", ",", "sigma", ",", "normalize", "=", "True", ")", "\n", "zy_hm", "=", "make_gauss", "(", "torch", ".", "Tensor", "(", "[", "[", "[", "0.1", ",", "0", "]", "]", "]", ")", ",", "size", ",", "sigma", ",", "normalize", "=", "True", ")", "\n", "xz_hm", "=", "make_gauss", "(", "torch", ".", "Tensor", "(", "[", "[", "[", "0", ",", "0.2", "]", "]", "]", ")", ",", "size", ",", "sigma", ",", "normalize", "=", "True", ")", "\n", "xyz", "=", "MargiPoseModel", ".", "heatmaps_to_coords", "(", "xy_hm", ",", "zy_hm", ",", "xz_hm", ")", "\n", "assert_allclose", "(", "xyz", ",", "torch", ".", "Tensor", "(", "[", "[", "[", "-", "0.5", ",", "0.5", ",", "0.15", "]", "]", "]", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_mixed_dataset.test_round_robin_sampler": [[5, 13], ["margipose.data.mixed.RoundRobinSampler", "numpy.array", "numpy.testing.assert_array_equal", "numpy.testing.assert_array_equal", "numpy.array", "numpy.sort", "numpy.array"], "function", ["None"], ["def", "test_round_robin_sampler", "(", ")", ":", "\n", "    ", "sampler", "=", "RoundRobinSampler", "(", "[", "[", "1", ",", "3", ",", "5", "]", ",", "[", "2", ",", "4", ",", "6", "]", "]", ",", "6", ")", "\n", "indices", "=", "np", ".", "array", "(", "[", "i", "for", "i", "in", "sampler", "]", ")", "\n", "\n", "# Examples should alternate between the two sources", "\n", "np", ".", "testing", ".", "assert_array_equal", "(", "indices", "%", "2", ",", "np", ".", "array", "(", "[", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", "]", ")", ")", "\n", "# All examples should be represented (sampling without replacement)", "\n", "np", ".", "testing", ".", "assert_array_equal", "(", "np", ".", "sort", "(", "indices", ")", ",", "np", ".", "array", "(", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", "]", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_skeleton.test_spherical_to_cartesian": [[10, 15], ["torch.Tensor", "torch.Tensor", "margipose.data.skeleton.spherical_to_cartesian", "torch.testing.assert_allclose", "numpy.deg2rad", "numpy.deg2rad", "numpy.sqrt", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.spherical_to_cartesian"], ["def", "test_spherical_to_cartesian", "(", ")", ":", "\n", "    ", "spherical", "=", "torch", ".", "Tensor", "(", "[", "[", "4", "*", "np", ".", "sqrt", "(", "3", ")", ",", "np", ".", "deg2rad", "(", "30", ")", ",", "np", ".", "deg2rad", "(", "60", ")", "]", "]", ")", "\n", "expected", "=", "torch", ".", "Tensor", "(", "[", "[", "np", ".", "sqrt", "(", "3", ")", ",", "3", ",", "6", "]", "]", ")", "\n", "actual", "=", "spherical_to_cartesian", "(", "spherical", ")", "\n", "assert_allclose", "(", "actual", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_skeleton.test_cartesian_to_spherical": [[17, 22], ["torch.Tensor", "torch.Tensor", "margipose.data.skeleton.cartesian_to_spherical", "torch.testing.assert_allclose", "numpy.sqrt", "numpy.deg2rad", "numpy.deg2rad", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.cartesian_to_spherical"], ["", "def", "test_cartesian_to_spherical", "(", ")", ":", "\n", "    ", "cartesian", "=", "torch", ".", "Tensor", "(", "[", "[", "np", ".", "sqrt", "(", "3", ")", ",", "3", ",", "6", "]", "]", ")", "\n", "expected", "=", "torch", ".", "Tensor", "(", "[", "[", "4", "*", "np", ".", "sqrt", "(", "3", ")", ",", "np", ".", "deg2rad", "(", "30", ")", ",", "np", ".", "deg2rad", "(", "60", ")", "]", "]", ")", "\n", "actual", "=", "cartesian_to_spherical", "(", "cartesian", ")", "\n", "assert_allclose", "(", "actual", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_skeleton.test_absolute_to_root_relative": [[24, 38], ["torch.Tensor", "torch.Tensor", "margipose.data.skeleton.absolute_to_root_relative", "torch.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_root_relative"], ["", "def", "test_absolute_to_root_relative", "(", ")", ":", "\n", "    ", "joints", "=", "torch", ".", "Tensor", "(", "[", "\n", "[", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "1", ",", "2", ",", "1", "]", ",", "\n", "[", "1", ",", "2", ",", "2", "]", ",", "\n", "]", ")", "\n", "root_joint", "=", "0", "\n", "expected", "=", "torch", ".", "Tensor", "(", "[", "\n", "[", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "1", "]", ",", "\n", "]", ")", "\n", "actual", "=", "absolute_to_root_relative", "(", "joints", ",", "root_joint", ")", "\n", "assert_allclose", "(", "actual", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_skeleton.test_absolute_to_parent_relative": [[40, 54], ["torch.Tensor", "torch.Tensor", "margipose.data.skeleton.absolute_to_parent_relative", "torch.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.absolute_to_parent_relative"], ["", "def", "test_absolute_to_parent_relative", "(", ")", ":", "\n", "    ", "joints", "=", "torch", ".", "Tensor", "(", "[", "\n", "[", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "1", ",", "2", ",", "1", "]", ",", "\n", "[", "1", ",", "2", ",", "2", "]", ",", "\n", "]", ")", "\n", "joint_tree", "=", "[", "0", ",", "0", ",", "1", "]", "\n", "expected", "=", "torch", ".", "Tensor", "(", "[", "\n", "[", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", ",", "\n", "]", ")", "\n", "actual", "=", "absolute_to_parent_relative", "(", "joints", ",", "joint_tree", ")", "\n", "assert_allclose", "(", "actual", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_skeleton.test_parent_relative_to_absolute": [[56, 70], ["torch.Tensor", "torch.Tensor", "margipose.data.skeleton.parent_relative_to_absolute", "torch.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.parent_relative_to_absolute"], ["", "def", "test_parent_relative_to_absolute", "(", ")", ":", "\n", "    ", "relative", "=", "torch", ".", "Tensor", "(", "[", "\n", "[", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", ",", "\n", "]", ")", "\n", "joint_tree", "=", "[", "0", ",", "0", ",", "1", "]", "\n", "expected", "=", "torch", ".", "Tensor", "(", "[", "\n", "[", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "0", "]", ",", "\n", "[", "0", ",", "1", ",", "1", "]", ",", "\n", "]", ")", "\n", "actual", "=", "parent_relative_to_absolute", "(", "relative", ",", "joint_tree", ")", "\n", "assert_allclose", "(", "actual", ",", "expected", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_skeleton.test_canonicalise_orientation": [[72, 84], ["margipose.data.skeleton.canonicalise_orientation", "torch.testing.assert_allclose", "torch.testing.assert_allclose", "torch.testing.assert_allclose", "torch.Tensor", "lshoulder[].item", "rshoulder[].item", "skel_desc.joint_names.index", "skel_desc.joint_names.index", "skel_desc.joint_names.index"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.data.skeleton.canonicalise_orientation"], ["", "def", "test_canonicalise_orientation", "(", "skeleton_canonical_univ", ")", ":", "\n", "    ", "skel_desc", "=", "CanonicalSkeletonDesc", "\n", "\n", "new_skel", "=", "canonicalise_orientation", "(", "skel_desc", ",", "skeleton_canonical_univ", ")", "\n", "\n", "pelvis", "=", "new_skel", "[", "skel_desc", ".", "joint_names", ".", "index", "(", "'pelvis'", ")", "]", "\n", "lshoulder", "=", "new_skel", "[", "skel_desc", ".", "joint_names", ".", "index", "(", "'left_shoulder'", ")", "]", "\n", "rshoulder", "=", "new_skel", "[", "skel_desc", ".", "joint_names", ".", "index", "(", "'right_shoulder'", ")", "]", "\n", "\n", "assert_allclose", "(", "pelvis", ",", "torch", ".", "Tensor", "(", "[", "0", ",", "0", ",", "0", ",", "1", "]", ")", ")", "\n", "assert_allclose", "(", "lshoulder", "[", "2", "]", ".", "item", "(", ")", ",", "0", ")", "\n", "assert_allclose", "(", "rshoulder", "[", "2", "]", ".", "item", "(", ")", ",", "0", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_mpi_inf_3dhp.test_to_canonical_skeleton": [[11, 14], ["margipose.data.mpi_inf_3dhp.MpiInf3dDataset._mpi_inf_3dhp_to_canonical_skeleton", "torch.testing.assert_allclose"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.mpi_inf_3dhp.__init__.MpiInf3dDataset._mpi_inf_3dhp_to_canonical_skeleton"], ["def", "test_to_canonical_skeleton", "(", "skeleton_mpi3d_univ", ",", "skeleton_canonical_univ", ")", ":", "\n", "    ", "actual", "=", "MpiInf3dDataset", ".", "_mpi_inf_3dhp_to_canonical_skeleton", "(", "skeleton_mpi3d_univ", ")", "\n", "assert_allclose", "(", "actual", ",", "skeleton_canonical_univ", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_mpi_inf_3dhp.test_mpi3d_val_subset": [[16, 25], ["margipose.data_specs.DataSpecs", "margipose.data.mpi_inf_3dhp.MpiInf3dDataset", "margipose.data_specs.ImageSpecs", "margipose.data_specs.JointsSpecs", "os.path.join", "len"], "function", ["None"], ["", "def", "test_mpi3d_val_subset", "(", "mpi3d_data_dir", ")", ":", "\n", "    ", "data_specs", "=", "DataSpecs", "(", "\n", "ImageSpecs", "(", "256", ",", "mean", "=", "ImageSpecs", ".", "IMAGENET_MEAN", ",", "stddev", "=", "ImageSpecs", ".", "IMAGENET_STDDEV", ")", ",", "\n", "JointsSpecs", "(", "CanonicalSkeletonDesc", ",", "n_dims", "=", "3", ")", ",", "\n", ")", "\n", "dataset", "=", "MpiInf3dDataset", "(", "os", ".", "path", ".", "join", "(", "mpi3d_data_dir", ",", "'val'", ")", ",", "data_specs", ")", "\n", "assert", "len", "(", "dataset", ")", "==", "18561", "\n", "example", "=", "dataset", "[", "0", "]", "\n", "assert", "example", "[", "'input'", "]", ".", "shape", "==", "(", "3", ",", "256", ",", "256", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_mpi_inf_3dhp.test_mpi3d_example_data": [[27, 44], ["margipose.data_specs.DataSpecs", "margipose.data.mpi_inf_3dhp.MpiInf3dDataset", "torch.testing.assert_allclose", "torch.testing.assert_allclose", "margipose.data_specs.ImageSpecs", "margipose.data_specs.JointsSpecs", "os.path.join", "float", "pytest.approx", "float", "pytest.approx", "float", "pytest.approx", "torch.as_tensor", "image.min", "image.max", "image.mean"], "function", ["None"], ["", "def", "test_mpi3d_example_data", "(", "mpi3d_data_dir", ")", ":", "\n", "    ", "data_specs", "=", "DataSpecs", "(", "\n", "ImageSpecs", "(", "256", ",", "mean", "=", "ImageSpecs", ".", "IMAGENET_MEAN", ",", "stddev", "=", "ImageSpecs", ".", "IMAGENET_STDDEV", ")", ",", "\n", "JointsSpecs", "(", "CanonicalSkeletonDesc", ",", "n_dims", "=", "3", ")", ",", "\n", ")", "\n", "dataset", "=", "MpiInf3dDataset", "(", "os", ".", "path", ".", "join", "(", "mpi3d_data_dir", ",", "'val'", ")", ",", "data_specs", ")", "\n", "assert", "MpiInf3dDataset", ".", "preserve_root_joint_at_univ_scale", "==", "False", "\n", "example", "=", "dataset", "[", "0", "]", "\n", "\n", "image", "=", "example", "[", "'input'", "]", "\n", "assert", "float", "(", "image", ".", "min", "(", ")", ")", "==", "pytest", ".", "approx", "(", "-", "2.117904", ",", "rel", "=", "0", ",", "abs", "=", "1e-6", ")", "\n", "assert", "float", "(", "image", ".", "max", "(", ")", ")", "==", "pytest", ".", "approx", "(", "2.428571", ",", "rel", "=", "0", ",", "abs", "=", "1e-6", ")", "\n", "assert", "float", "(", "image", ".", "mean", "(", ")", ")", "==", "pytest", ".", "approx", "(", "-", "1.097044", ",", "rel", "=", "0", ",", "abs", "=", "1e-1", ")", "\n", "assert_allclose", "(", "image", "[", ":", ",", "128", ",", "128", "]", ",", "torch", ".", "as_tensor", "(", "[", "-", "0.2513", ",", "0.2927", ",", "-", "0.1835", "]", ")", ",", "rtol", "=", "0", ",", "atol", "=", "1e-1", ")", "\n", "\n", "joints", "=", "example", "[", "'target'", "]", "[", "...", ",", ":", "3", "]", "\n", "assert_allclose", "(", "joints", "[", "0", "]", ",", "[", "-", "0.025768", ",", "-", "0.649297", ",", "-", "0.039933", "]", ",", "rtol", "=", "0", ",", "atol", "=", "1e-4", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.tests.test_onnx.test_onnx_export": [[11, 19], ["torch.randn", "margipose.models.margipose_model.MargiPoseModel", "margipose.models.margipose_model.MargiPoseModel.eval", "tempfile.TemporaryDirectory", "os.path.join", "torch.onnx.export"], "function", ["None"], ["def", "test_onnx_export", "(", ")", ":", "\n", "    ", "dummy_input", "=", "torch", ".", "randn", "(", "1", ",", "3", ",", "256", ",", "256", ")", "\n", "model", "=", "MargiPoseModel", "(", "CanonicalSkeletonDesc", ",", "n_stages", "=", "1", ",", "axis_permutation", "=", "True", ",", "\n", "feature_extractor", "=", "'inceptionv4'", ",", "pixelwise_loss", "=", "'jsd'", ")", "\n", "model", ".", "eval", "(", ")", "\n", "with", "TemporaryDirectory", "(", ")", "as", "d", ":", "\n", "        ", "onnx_file", "=", "os", ".", "path", ".", "join", "(", "d", ",", "'model.onnx'", ")", "\n", "onnx", ".", "export", "(", "model", ",", "(", "dummy_input", ",", ")", ",", "onnx_file", ",", "verbose", "=", "False", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.tests.conftest.skeleton_canonical_univ": [[9, 30], ["torch.as_tensor"], "function", ["None"], ["@", "pytest", ".", "fixture", "\n", "def", "skeleton_canonical_univ", "(", ")", ":", "\n", "    ", "\"\"\"Canonical universal skeleton for S1,Seq1,camera0,frame0 of MPI-INF-3DHP.\"\"\"", "\n", "return", "torch", ".", "as_tensor", "(", "[", "\n", "[", "-", "14.1671", ",", "-", "334.8410", ",", "3685.4099", "]", ",", "\n", "[", "-", "1.8908", ",", "-", "78.7086", ",", "3697.4800", "]", ",", "\n", "[", "12.3105", ",", "-", "6.8914", ",", "3570.3000", "]", ",", "\n", "[", "28.6693", ",", "53.3262", ",", "3259.5300", "]", ",", "\n", "[", "65.5078", ",", "80.3900", ",", "3018.8301", "]", ",", "\n", "[", "-", "21.9359", ",", "6.5647", ",", "3823.5701", "]", ",", "\n", "[", "-", "48.9321", ",", "9.3914", ",", "4139.3799", "]", ",", "\n", "[", "-", "48.1227", ",", "29.9672", ",", "4383.5200", "]", ",", "\n", "[", "26.1703", ",", "404.6510", ",", "3596.6575", "]", ",", "\n", "[", "-", "15.4026", ",", "957.8070", ",", "3670.3301", "]", ",", "\n", "[", "-", "87.2411", ",", "1390.7700", ",", "3718.3999", "]", ",", "\n", "[", "-", "22.8190", ",", "401.2070", ",", "3829.8625", "]", ",", "\n", "[", "-", "45.7490", ",", "956.8290", ",", "3800.5901", "]", ",", "\n", "[", "-", "137.3620", ",", "1388.2400", ",", "3780.2000", "]", ",", "\n", "[", "1.6757", ",", "402.9290", ",", "3713.2600", "]", ",", "\n", "[", "-", "11.7886", ",", "176.2583", ",", "3705.0913", "]", ",", "\n", "[", "11.9904", ",", "-", "164.0930", ",", "3696.2600", "]", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.conftest.skeleton_mpi3d_univ": [[33, 65], ["torch.as_tensor"], "function", ["None"], ["", "@", "pytest", ".", "fixture", "\n", "def", "skeleton_mpi3d_univ", "(", ")", ":", "\n", "    ", "\"\"\"28-joint universal skeleton for S1,Seq1,camera0,frame0 of MPI-INF-3DHP.\"\"\"", "\n", "return", "torch", ".", "as_tensor", "(", "[", "\n", "[", "-", "26.0276", ",", "98.0811", ",", "3699.6000", "]", ",", "\n", "[", "-", "45.5924", ",", "-", "6.8788", ",", "3691.5100", "]", ",", "\n", "[", "-", "11.8660", ",", "175.6800", ",", "3705.0600", "]", ",", "\n", "[", "-", "11.7886", ",", "176.2583", ",", "3705.0914", "]", ",", "\n", "[", "1.6757", ",", "402.9290", ",", "3713.2600", "]", ",", "\n", "[", "-", "1.8908", ",", "-", "78.7086", ",", "3697.4800", "]", ",", "\n", "[", "11.9904", ",", "-", "164.0930", ",", "3696.2600", "]", ",", "\n", "[", "-", "14.1671", ",", "-", "334.8410", ",", "3685.4100", "]", ",", "\n", "[", "10.8534", ",", "-", "43.9395", ",", "3744.1400", "]", ",", "\n", "[", "-", "21.9359", ",", "6.5647", ",", "3823.5700", "]", ",", "\n", "[", "-", "48.9321", ",", "9.3914", ",", "4139.3800", "]", ",", "\n", "[", "-", "48.1227", ",", "29.9672", ",", "4383.5200", "]", ",", "\n", "[", "-", "57.2134", ",", "51.5208", ",", "4469.8200", "]", ",", "\n", "[", "27.8253", ",", "-", "40.3641", ",", "3662.9000", "]", ",", "\n", "[", "12.3105", ",", "-", "6.8914", ",", "3570.3000", "]", ",", "\n", "[", "28.6693", ",", "53.3262", ",", "3259.5300", "]", ",", "\n", "[", "65.5078", ",", "80.3900", ",", "3018.8300", "]", ",", "\n", "[", "74.3912", ",", "90.6255", ",", "2930.4500", "]", ",", "\n", "[", "-", "22.8190", ",", "401.2070", ",", "3829.8625", "]", ",", "\n", "[", "-", "45.7490", ",", "956.8290", ",", "3800.5900", "]", ",", "\n", "[", "-", "137.3620", ",", "1388.2400", ",", "3780.2000", "]", ",", "\n", "[", "-", "43.9510", ",", "1416.6700", ",", "3807.9400", "]", ",", "\n", "[", "-", "17.2509", ",", "1412.7200", ",", "3812.4200", "]", ",", "\n", "[", "26.1703", ",", "404.6510", ",", "3596.6575", "]", ",", "\n", "[", "-", "15.4026", ",", "957.8070", ",", "3670.3300", "]", ",", "\n", "[", "-", "87.2411", ",", "1390.7700", ",", "3718.4000", "]", ",", "\n", "[", "10.3942", ",", "1414.7500", ",", "3704.4200", "]", ",", "\n", "[", "36.6540", ",", "1407.8400", ",", "3701.0500", "]", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.conftest.base_data_dir": [[68, 74], ["os.path.isdir", "pytest.skip"], "function", ["None"], ["", "@", "pytest", ".", "fixture", "\n", "def", "base_data_dir", "(", ")", ":", "\n", "    ", "dir_path", "=", "Base_Data_Dir", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "dir_path", ")", ":", "\n", "        ", "pytest", ".", "skip", "(", "'base data directory not found'", ")", "\n", "", "return", "dir_path", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.tests.conftest.mpi3d_data_dir": [[76, 82], ["os.path.join", "os.path.isdir", "pytest.skip"], "function", ["None"], ["", "@", "pytest", ".", "fixture", "\n", "def", "mpi3d_data_dir", "(", "base_data_dir", ")", ":", "\n", "    ", "dir_path", "=", "os", ".", "path", ".", "join", "(", "base_data_dir", ",", "'mpi3d'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "dir_path", ")", ":", "\n", "        ", "pytest", ".", "skip", "(", "'mpi3d data directory not found'", ")", "\n", "", "return", "dir_path", "\n", "", ""]], "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.build_and_push_image": [[33, 39], ["docker.from_env", "log.info", "docker.from_env.images.build", "log.info", "docker.from_env.images.push"], "function", ["None"], ["def", "build_and_push_image", "(", "image_tag", ")", ":", "\n", "    ", "docker_client", "=", "docker", ".", "from_env", "(", ")", "\n", "log", ".", "info", "(", "'Building Docker image...'", ")", "\n", "docker_client", ".", "images", ".", "build", "(", "path", "=", "'.'", ",", "tag", "=", "image_tag", ")", "\n", "log", ".", "info", "(", "'Pushing Docker image...'", ")", "\n", "docker_client", ".", "images", ".", "push", "(", "image_tag", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy._host_volume": [[41, 45], ["kubernetes.client.V1Volume", "kubernetes.client.V1HostPathVolumeSource"], "function", ["None"], ["", "def", "_host_volume", "(", "name", ",", "path", ",", "type", ")", ":", "\n", "    ", "return", "client", ".", "V1Volume", "(", "\n", "name", "=", "name", ",", "\n", "host_path", "=", "client", ".", "V1HostPathVolumeSource", "(", "path", "=", "path", ",", "type", "=", "type", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.deploy": [[48, 175], ["deploy.build_and_push_image", "kubernetes.config.load_kube_config", "kubernetes.client.V1ObjectMeta", "kubernetes.client.V1Container", "kubernetes.client.V1PodSpec", "kubernetes.client.V1Pod", "kubernetes.client.CoreV1Api", "log.debug", "client.CoreV1Api.create_namespaced_pod", "log.info", "log.info", "time.sleep", "log.info", "log.info", "kubernetes.stream.stream", "kubernetes.stream.stream.is_open", "kubernetes.stream.stream.close", "log.info", "client.CoreV1Api.delete_namespaced_pod", "kubernetes.client.V1ResourceRequirements", "json.dumps", "kubernetes.stream.stream.update", "kubernetes.stream.stream.peek_stdout", "kubernetes.stream.stream.peek_stderr", "client.CoreV1Api.read_namespaced_pod_status", "kubernetes.client.V1DeleteOptions", "kubernetes.config.list_kube_config_contexts", "kubernetes.client.V1VolumeMount", "kubernetes.client.V1VolumeMount", "kubernetes.client.V1VolumeMount", "kubernetes.client.V1VolumeMount", "kubernetes.client.V1VolumeMount", "deploy._host_volume", "deploy._host_volume", "deploy._host_volume", "deploy._host_volume", "deploy._host_volume", "client.CoreV1Api.api_client.sanitize_for_serialization", "client.CoreV1Api.read_namespaced_pod_status", "sys.stdout.write", "sys.stdout.flush", "sys.stderr.write", "sys.stderr.flush", "kubernetes.stream.stream.read_stdout", "kubernetes.stream.stream.read_stderr"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.build_and_push_image", "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy._host_volume", "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy._host_volume", "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy._host_volume", "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy._host_volume", "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy._host_volume"], ["", "def", "deploy", "(", "args", ")", ":", "\n", "    ", "build_and_push_image", "(", "args", ".", "image_tag", ")", "\n", "\n", "config", ".", "load_kube_config", "(", ")", "\n", "\n", "namespace", "=", "config", ".", "list_kube_config_contexts", "(", ")", "[", "1", "]", "[", "'context'", "]", "[", "'namespace'", "]", "\n", "\n", "meta", "=", "client", ".", "V1ObjectMeta", "(", "\n", "name", "=", "args", ".", "name", ",", "\n", "labels", "=", "{", "'app.kubernetes.io/managed-by'", ":", "'margipose-deploy'", "}", ",", "\n", ")", "\n", "\n", "container", "=", "client", ".", "V1Container", "(", "\n", "name", "=", "'margipose'", ",", "\n", "image", "=", "args", ".", "image_tag", ",", "\n", "image_pull_policy", "=", "'Always'", ",", "\n", "resources", "=", "client", ".", "V1ResourceRequirements", "(", "\n", "limits", "=", "{", "'nvidia.com/gpu'", ":", "'1'", "}", ",", "\n", ")", ",", "\n", "args", "=", "args", ".", "command", ",", "\n", "tty", "=", "True", ",", "\n", "volume_mounts", "=", "[", "\n", "client", ".", "V1VolumeMount", "(", "mount_path", "=", "'/datasets/h36m'", ",", "name", "=", "'h36m'", ",", "read_only", "=", "True", ")", ",", "\n", "client", ".", "V1VolumeMount", "(", "mount_path", "=", "'/datasets/mpi3d'", ",", "name", "=", "'mpi3d'", ",", "read_only", "=", "True", ")", ",", "\n", "client", ".", "V1VolumeMount", "(", "mount_path", "=", "'/datasets/mpii'", ",", "name", "=", "'mpii'", ",", "read_only", "=", "True", ")", ",", "\n", "client", ".", "V1VolumeMount", "(", "mount_path", "=", "'/home/user/.cache/torch/checkpoints'", ",", "name", "=", "'pretrained-models'", ",", "read_only", "=", "False", ")", ",", "\n", "client", ".", "V1VolumeMount", "(", "mount_path", "=", "'/app/out'", ",", "name", "=", "'output'", ",", "read_only", "=", "False", ")", ",", "\n", "]", ",", "\n", ")", "\n", "\n", "pod_spec", "=", "client", ".", "V1PodSpec", "(", "\n", "restart_policy", "=", "'Never'", ",", "\n", "host_ipc", "=", "True", ",", "\n", "containers", "=", "[", "container", "]", ",", "\n", "volumes", "=", "[", "\n", "_host_volume", "(", "\n", "name", "=", "'h36m'", ",", "\n", "path", "=", "'/nfs/datasets/public/_Old/Human3.6M/processed'", ",", "\n", "type", "=", "'Directory'", ",", "\n", ")", ",", "\n", "_host_volume", "(", "\n", "name", "=", "'mpi3d'", ",", "\n", "path", "=", "'/nfs/datasets/public/_Old/MPI-INF-3DHP'", ",", "\n", "type", "=", "'Directory'", ",", "\n", ")", ",", "\n", "_host_volume", "(", "\n", "name", "=", "'mpii'", ",", "\n", "path", "=", "'/nfs/datasets/public/MPII_Human_Pose'", ",", "\n", "type", "=", "'Directory'", ",", "\n", ")", ",", "\n", "_host_volume", "(", "\n", "name", "=", "'pretrained-models'", ",", "\n", "path", "=", "'/nfs/models/pytorch'", ",", "\n", "type", "=", "'DirectoryOrCreate'", ",", "\n", ")", ",", "\n", "_host_volume", "(", "\n", "name", "=", "'output'", ",", "\n", "path", "=", "'/nfs/users/aiden/margipose-out'", ",", "\n", "type", "=", "'DirectoryOrCreate'", ",", "\n", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "if", "args", ".", "node", ":", "\n", "        ", "pod_spec", ".", "node_selector", "=", "{", "\n", "'kubernetes.io/hostname'", ":", "args", ".", "node", ",", "\n", "}", "\n", "\n", "", "pod", "=", "client", ".", "V1Pod", "(", "\n", "api_version", "=", "'v1'", ",", "\n", "kind", "=", "'Pod'", ",", "\n", "metadata", "=", "meta", ",", "\n", "spec", "=", "pod_spec", ",", "\n", ")", "\n", "\n", "v1", "=", "client", ".", "CoreV1Api", "(", ")", "\n", "\n", "log", ".", "debug", "(", "'pod resource request: {}'", ".", "format", "(", "\n", "json", ".", "dumps", "(", "v1", ".", "api_client", ".", "sanitize_for_serialization", "(", "pod", ")", ")", "\n", ")", ")", "\n", "\n", "v1", ".", "create_namespaced_pod", "(", "namespace", ",", "body", "=", "pod", ")", "\n", "\n", "log", ".", "info", "(", "'A new pod has been created.\\n'", "+", "\n", "'* Attach: kubectl attach -i {}\\n'", ".", "format", "(", "args", ".", "name", ")", "+", "\n", "'* Delete: kubectl delete pod {}'", ".", "format", "(", "args", ".", "name", ")", ")", "\n", "\n", "# log.info(v1.list_namespaced_pod(", "\n", "#     namespace,", "\n", "#     label_selector='app.kubernetes.io/managed-by=margipose-deploy'", "\n", "# ))", "\n", "\n", "log", ".", "info", "(", "'Waiting for container to start...'", ")", "\n", "phase", "=", "'Pending'", "\n", "while", "phase", "in", "{", "'Pending'", ",", "'Unknown'", "}", ":", "\n", "        ", "phase", "=", "v1", ".", "read_namespaced_pod_status", "(", "args", ".", "name", ",", "namespace", ")", ".", "status", ".", "phase", "\n", "\n", "", "if", "phase", "==", "'Running'", ":", "\n", "        ", "log", ".", "info", "(", "'Attaching to running container...'", ")", "\n", "resp", "=", "stream", "(", "\n", "v1", ".", "connect_get_namespaced_pod_attach", ",", "\n", "args", ".", "name", ",", "\n", "namespace", ",", "\n", "stdin", "=", "False", ",", "\n", "stdout", "=", "True", ",", "\n", "stderr", "=", "True", ",", "\n", "tty", "=", "True", ",", "\n", "_preload_content", "=", "False", ",", "\n", ")", "\n", "while", "resp", ".", "is_open", "(", ")", ":", "\n", "            ", "resp", ".", "update", "(", "timeout", "=", "1", ")", "\n", "if", "resp", ".", "peek_stdout", "(", ")", ":", "\n", "                ", "sys", ".", "stdout", ".", "write", "(", "resp", ".", "read_stdout", "(", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "", "if", "resp", ".", "peek_stderr", "(", ")", ":", "\n", "                ", "sys", ".", "stderr", ".", "write", "(", "resp", ".", "read_stderr", "(", ")", ")", "\n", "sys", ".", "stderr", ".", "flush", "(", ")", "\n", "", "", "resp", ".", "close", "(", ")", "\n", "\n", "", "sleep", "(", "1", ")", "\n", "phase", "=", "v1", ".", "read_namespaced_pod_status", "(", "args", ".", "name", ",", "namespace", ")", ".", "status", ".", "phase", "\n", "if", "phase", "in", "{", "'Succeeded'", ",", "'Failed'", "}", "and", "args", ".", "rm", ":", "\n", "        ", "log", ".", "info", "(", "'Deleting pod...'", ")", "\n", "v1", ".", "delete_namespaced_pod", "(", "args", ".", "name", ",", "namespace", ",", "client", ".", "V1DeleteOptions", "(", "\n", "api_version", "=", "'v1'", ",", "kind", "=", "'DeleteOptions'", ")", ")", "\n", "\n", "", "log", ".", "info", "(", "'Done.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args": [[177, 202], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "bool", "distutils.util.strtobool", "len"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"Parse command-line arguments.\"\"\"", "\n", "\n", "def", "_bool", "(", "val", ")", ":", "\n", "        ", "return", "bool", "(", "strtobool", "(", "val", ")", ")", "\n", "\n", "", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'Deploy MargiPose jobs to Kubernetes'", ",", "\n", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "parser", ".", "add_argument", "(", "'--name'", ",", "type", "=", "str", ",", "required", "=", "True", ",", "\n", "help", "=", "'name of the pod'", ")", "\n", "parser", ".", "add_argument", "(", "'--image-tag'", ",", "type", "=", "str", ",", "\n", "default", "=", "'registry.dl.cs.latrobe.edu.au/aiden/margipose'", ",", "\n", "help", "=", "'tag for the Docker image'", ")", "\n", "parser", ".", "add_argument", "(", "'--rm'", ",", "type", "=", "_bool", ",", "const", "=", "True", ",", "default", "=", "False", ",", "nargs", "=", "'?'", ",", "\n", "help", "=", "'remove the pod after termination'", ")", "\n", "parser", ".", "add_argument", "(", "'--node'", ",", "type", "=", "str", ",", "\n", "help", "=", "'specific cluster node to target for deployment'", ")", "\n", "parser", ".", "add_argument", "(", "'command'", ",", "nargs", "=", "argparse", ".", "REMAINDER", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "len", "(", "args", ".", "command", ")", ">", "0", "and", "args", ".", "command", "[", "0", "]", "==", "'--'", ":", "\n", "        ", "args", ".", "command", "=", "args", ".", "command", "[", "1", ":", "]", "\n", "\n", "", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.main": [[204, 208], ["deploy.parse_args", "deploy.deploy"], "function", ["home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.parse_args", "home.repos.pwc.inspect_result.anibali_margipose.k8s.deploy.deploy"], ["", "def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parse_args", "(", ")", "\n", "\n", "deploy", "(", "args", ")", "\n", "\n"]]}