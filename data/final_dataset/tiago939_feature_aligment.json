{"home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.Flatten.forward": [[6, 9], ["x.view"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "shape", "[", "0", "]", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.unFlatten.forward": [[11, 14], ["x.view"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "shape", "[", "0", "]", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "1", ",", "32", ",", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.asinh.forward": [[16, 18], ["torch.asinh", "torch.asinh", "torch.asinh", "torch.asinh"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "torch", ".", "asinh", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.Encoder.__init__": [[21, 48], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "networks.Flatten", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.__init__"], ["    ", "def", "__init__", "(", "self", ",", "Z", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "block1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2048", ",", "2048", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "mean", "=", "nn", ".", "Linear", "(", "2048", ",", "Z", ")", "\n", "self", ".", "log_variance", "=", "nn", ".", "Linear", "(", "2048", ",", "Z", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "2048", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.Encoder.forward": [[49, 65], ["networks.Encoder.block1", "networks.Encoder.classifier", "networks.Encoder.mean", "networks.Encoder.log_variance"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "1", ":", "\n", "            ", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "if", "mode", "==", "2", ":", "\n", "            ", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "if", "mode", "==", "3", ":", "\n", "            ", "x", "=", "self", ".", "mean", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "if", "mode", "==", "4", ":", "\n", "            ", "x", "=", "self", ".", "log_variance", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.Generator.__init__": [[68, 86], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "networks.unFlatten", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "generator0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "10", ",", "32", "*", "32", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "unFlatten", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "generator", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", ",", "128", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ",", "padding", "=", "4", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ",", "padding", "=", "4", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "3", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ",", "padding", "=", "4", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.Generator.forward": [[88, 93], ["networks.Generator.generator0", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.Generator.generator"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "            ", "y", "=", "self", ".", "generator0", "(", "y", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x", ",", "y", ")", ",", "1", ")", "\n", "x", "=", "self", ".", "generator", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.Discriminator.__init__": [[96, 119], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "networks.Flatten", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2048", ",", "2048", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2048", ",", "1", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.Discriminator.forward": [[121, 124], ["networks.Discriminator.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "            ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.Memory.__init__": [[127, 150], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "networks.Flatten", "torch.Linear", "torch.Linear", "networks.asinh", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.__init__"], ["    ", "def", "__init__", "(", "self", ",", "Z", ")", ":", "\n", "        ", "super", "(", "Memory", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2048", ",", "2048", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2048", ",", "Z", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.cifar10.networks.Memory.forward": [[153, 156], ["networks.Memory.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Flatten.forward": [[6, 9], ["x.view"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "shape", "[", "0", "]", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.unFlatten2.forward": [[11, 14], ["x.view"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "batch_size", "=", "x", ".", "shape", "[", "0", "]", "\n", "return", "x", ".", "view", "(", "batch_size", ",", "1", ",", "32", ",", "32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.asinh.forward": [[16, 18], ["torch.asinh", "torch.asinh", "torch.asinh", "torch.asinh"], "methods", ["None"], ["    ", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "torch", ".", "asinh", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Encoder.__init__": [[21, 43], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "networks.Flatten", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU"], "methods", ["home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.__init__"], ["    ", "def", "__init__", "(", "self", ",", "Z", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "block1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2048", ",", "2048", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Encoder.forward": [[44, 60], ["networks.Encoder.encoder", "networks.Encoder.classifier", "networks.Encoder.mean", "networks.Encoder.log_variance"], "methods", ["None"], ["\n", "self", ".", "mean", "=", "nn", ".", "Linear", "(", "2048", ",", "Z", ")", "\n", "self", ".", "log_variance", "=", "nn", ".", "Linear", "(", "2048", ",", "Z", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "2048", ",", "10", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "mode", ")", ":", "\n", "        ", "if", "mode", "==", "1", ":", "\n", "            ", "x", "=", "self", ".", "block1", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "if", "mode", "==", "2", ":", "\n", "            ", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "if", "mode", "==", "3", ":", "\n", "            ", "x", "=", "self", ".", "mean", "(", "x", ")", "\n", "return", "x", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Generator.__init__": [[63, 80], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "networks.unFlatten2", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.__init__"], ["            ", "x", "=", "self", ".", "log_variance", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "", "", "class", "Generator", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Generator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "generator0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "10", ",", "32", "*", "32", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "unFlatten", "(", ")", ",", "\n", ")", "\n", "\n", "self", ".", "generator", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "4", ",", "128", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ",", "padding", "=", "4", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Generator.forward": [[82, 87], ["networks.Generator.label", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networks.Generator.generator"], "methods", ["None"], ["nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "3", ",", "kernel_size", "=", "9", ",", "stride", "=", "1", ",", "padding", "=", "4", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Discriminator.__init__": [[91, 109], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Conv2d", "torch.Conv2d", "torch.LeakyReLU", "torch.LeakyReLU", "networks.Flatten", "torch.Linear", "torch.Linear", "torch.LeakyReLU", "torch.LeakyReLU", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.__init__"], ["x", "=", "self", ".", "generator", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "", "class", "Discriminator", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Discriminator.forward": [[111, 114], ["networks.Discriminator.discriminator"], "methods", ["None"], ["nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "LeakyReLU", "(", ")", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.__init__": [[117, 135], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "torch.Conv2d", "torch.Conv2d", "networks.asinh", "networks.Flatten", "torch.Linear", "torch.Linear", "networks.asinh", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.__init__"], ["nn", ".", "LeakyReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2048", ",", "1", ")", "\n", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "            ", "x", "=", "self", ".", "encoder", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "", "class", "Memory", "(", "nn", ".", "Module", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "Z", ")", ":", "\n", "        ", "super", "(", "Memory", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.tiago939_feature_aligment.mnist.networks.Memory.forward": [[137, 140], ["networks.Memory.encoder"], "methods", ["None"], ["asinh", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "asinh", "(", ")", ",", "\n", "\n"]]}