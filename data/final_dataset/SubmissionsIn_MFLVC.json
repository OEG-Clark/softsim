{"home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Encoder.__init__": [[7, 17], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Caltech.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "feature_dim", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "input_dim", ",", "500", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "500", ",", "500", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "500", ",", "2000", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2000", ",", "feature_dim", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Encoder.forward": [[19, 21], ["network.Encoder.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "encoder", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Decoder.__init__": [[24, 34], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Caltech.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "feature_dim", ")", ":", "\n", "        ", "super", "(", "Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "feature_dim", ",", "2000", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "2000", ",", "500", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "500", ",", "500", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "500", ",", "input_dim", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Decoder.forward": [[36, 38], ["network.Decoder.decoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "decoder", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Network.__init__": [[41, 60], ["torch.Module.__init__", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "network.Network.encoders.append", "network.Network.decoders.append", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Softmax", "torch.Softmax", "Encoder().to", "Decoder().to", "network.Encoder", "network.Decoder"], "methods", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Caltech.__init__"], ["    ", "def", "__init__", "(", "self", ",", "view", ",", "input_size", ",", "feature_dim", ",", "high_feature_dim", ",", "class_num", ",", "device", ")", ":", "\n", "        ", "super", "(", "Network", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoders", "=", "[", "]", "\n", "self", ".", "decoders", "=", "[", "]", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "self", ".", "encoders", ".", "append", "(", "Encoder", "(", "input_size", "[", "v", "]", ",", "feature_dim", ")", ".", "to", "(", "device", ")", ")", "\n", "self", ".", "decoders", ".", "append", "(", "Decoder", "(", "input_size", "[", "v", "]", ",", "feature_dim", ")", ".", "to", "(", "device", ")", ")", "\n", "", "self", ".", "encoders", "=", "nn", ".", "ModuleList", "(", "self", ".", "encoders", ")", "\n", "self", ".", "decoders", "=", "nn", ".", "ModuleList", "(", "self", ".", "decoders", ")", "\n", "\n", "self", ".", "feature_contrastive_module", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "feature_dim", ",", "high_feature_dim", ")", ",", "\n", "# Varying the number of layers of W can obtain the representations with different shapes.", "\n", ")", "\n", "self", ".", "label_contrastive_module", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "feature_dim", ",", "class_num", ")", ",", "\n", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", "\n", ")", "\n", "self", ".", "view", "=", "view", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Network.forward": [[61, 77], ["range", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "network.Network.label_contrastive_module", "hs.append", "zs.append", "qs.append", "xrs.append", "network.Network.feature_contrastive_module"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "xs", ")", ":", "\n", "        ", "hs", "=", "[", "]", "\n", "qs", "=", "[", "]", "\n", "xrs", "=", "[", "]", "\n", "zs", "=", "[", "]", "\n", "for", "v", "in", "range", "(", "self", ".", "view", ")", ":", "\n", "            ", "x", "=", "xs", "[", "v", "]", "\n", "z", "=", "self", ".", "encoders", "[", "v", "]", "(", "x", ")", "\n", "h", "=", "normalize", "(", "self", ".", "feature_contrastive_module", "(", "z", ")", ",", "dim", "=", "1", ")", "\n", "q", "=", "self", ".", "label_contrastive_module", "(", "z", ")", "\n", "xr", "=", "self", ".", "decoders", "[", "v", "]", "(", "z", ")", "\n", "hs", ".", "append", "(", "h", ")", "\n", "zs", ".", "append", "(", "z", ")", "\n", "qs", ".", "append", "(", "q", ")", "\n", "xrs", ".", "append", "(", "xr", ")", "\n", "", "return", "hs", ",", "qs", ",", "xrs", ",", "zs", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Network.forward_plot": [[78, 88], ["range", "zs.append", "network.Network.feature_contrastive_module", "hs.append"], "methods", ["None"], ["", "def", "forward_plot", "(", "self", ",", "xs", ")", ":", "\n", "        ", "zs", "=", "[", "]", "\n", "hs", "=", "[", "]", "\n", "for", "v", "in", "range", "(", "self", ".", "view", ")", ":", "\n", "            ", "x", "=", "xs", "[", "v", "]", "\n", "z", "=", "self", ".", "encoders", "[", "v", "]", "(", "x", ")", "\n", "zs", ".", "append", "(", "z", ")", "\n", "h", "=", "self", ".", "feature_contrastive_module", "(", "z", ")", "\n", "hs", ".", "append", "(", "h", ")", "\n", "", "return", "zs", ",", "hs", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Network.forward_cluster": [[89, 100], ["range", "network.Network.label_contrastive_module", "torch.argmax", "torch.argmax", "torch.argmax", "torch.argmax", "qs.append", "preds.append"], "methods", ["None"], ["", "def", "forward_cluster", "(", "self", ",", "xs", ")", ":", "\n", "        ", "qs", "=", "[", "]", "\n", "preds", "=", "[", "]", "\n", "for", "v", "in", "range", "(", "self", ".", "view", ")", ":", "\n", "            ", "x", "=", "xs", "[", "v", "]", "\n", "z", "=", "self", ".", "encoders", "[", "v", "]", "(", "x", ")", "\n", "q", "=", "self", ".", "label_contrastive_module", "(", "z", ")", "\n", "pred", "=", "torch", ".", "argmax", "(", "q", ",", "dim", "=", "1", ")", "\n", "qs", ".", "append", "(", "q", ")", "\n", "preds", ".", "append", "(", "pred", ")", "\n", "", "return", "qs", ",", "preds", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.train.setup_seed": [[69, 75], ["torch.manual_seed", "torch.cuda.manual_seed_all", "numpy.random.seed", "random.seed"], "function", ["None"], ["", "def", "setup_seed", "(", "seed", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "random", ".", "seed", "(", "seed", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.train.pretrain": [[90, 106], ["torch.nn.MSELoss", "enumerate", "print", "range", "optimizer.zero_grad", "model", "range", "sum", "sum.backward", "optimizer.step", "sum.item", "xs[].to", "loss_list.append", "torch.nn.MSELoss.", "len"], "function", ["None"], ["def", "pretrain", "(", "epoch", ")", ":", "\n", "    ", "tot_loss", "=", "0.", "\n", "criterion", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "for", "batch_idx", ",", "(", "xs", ",", "_", ",", "_", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "        ", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "xs", "[", "v", "]", "=", "xs", "[", "v", "]", ".", "to", "(", "device", ")", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "_", ",", "_", ",", "xrs", ",", "_", "=", "model", "(", "xs", ")", "\n", "loss_list", "=", "[", "]", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "loss_list", ".", "append", "(", "criterion", "(", "xs", "[", "v", "]", ",", "xrs", "[", "v", "]", ")", ")", "\n", "", "loss", "=", "sum", "(", "loss_list", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "tot_loss", "+=", "loss", ".", "item", "(", ")", "\n", "", "print", "(", "'Epoch {}'", ".", "format", "(", "epoch", ")", ",", "'Loss:{:.6f}'", ".", "format", "(", "tot_loss", "/", "len", "(", "data_loader", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.train.contrastive_train": [[108, 127], ["torch.nn.MSELoss", "enumerate", "print", "range", "optimizer.zero_grad", "model", "range", "sum", "sum.backward", "optimizer.step", "sum.item", "xs[].to", "range", "loss_list.append", "loss_list.append", "loss_list.append", "torch.nn.MSELoss.", "len", "criterion.forward_feature", "criterion.forward_label"], "function", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.loss.Loss.forward_feature", "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.loss.Loss.forward_label"], ["", "def", "contrastive_train", "(", "epoch", ")", ":", "\n", "    ", "tot_loss", "=", "0.", "\n", "mes", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "for", "batch_idx", ",", "(", "xs", ",", "_", ",", "_", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "        ", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "xs", "[", "v", "]", "=", "xs", "[", "v", "]", ".", "to", "(", "device", ")", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "hs", ",", "qs", ",", "xrs", ",", "zs", "=", "model", "(", "xs", ")", "\n", "loss_list", "=", "[", "]", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "for", "w", "in", "range", "(", "v", "+", "1", ",", "view", ")", ":", "\n", "                ", "loss_list", ".", "append", "(", "criterion", ".", "forward_feature", "(", "hs", "[", "v", "]", ",", "hs", "[", "w", "]", ")", ")", "\n", "loss_list", ".", "append", "(", "criterion", ".", "forward_label", "(", "qs", "[", "v", "]", ",", "qs", "[", "w", "]", ")", ")", "\n", "", "loss_list", ".", "append", "(", "mes", "(", "xs", "[", "v", "]", ",", "xrs", "[", "v", "]", ")", ")", "\n", "", "loss", "=", "sum", "(", "loss_list", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "tot_loss", "+=", "loss", ".", "item", "(", ")", "\n", "", "print", "(", "'Epoch {}'", ".", "format", "(", "epoch", ")", ",", "'Loss:{:.6f}'", ".", "format", "(", "tot_loss", "/", "len", "(", "data_loader", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.train.make_pseudo_label": [[129, 155], ["torch.utils.data.DataLoader", "model.eval", "sklearn.preprocessing.MinMaxScaler", "enumerate", "sklearn.cluster.KMeans", "range", "range", "range", "sklearn.cluster.KMeans.fit_predict", "torch.from_numpy.reshape", "torch.from_numpy", "new_pseudo_label.append", "xs[].to", "torch.no_grad", "model.forward", "hs[].cpu().detach().numpy", "sklearn.preprocessing.MinMaxScaler.fit_transform", "hs[].cpu().detach", "hs[].cpu"], "function", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Network.forward"], ["", "def", "make_pseudo_label", "(", "model", ",", "device", ")", ":", "\n", "    ", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "data_size", ",", "\n", "shuffle", "=", "False", ",", "\n", ")", "\n", "model", ".", "eval", "(", ")", "\n", "scaler", "=", "MinMaxScaler", "(", ")", "\n", "for", "step", ",", "(", "xs", ",", "y", ",", "_", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "xs", "[", "v", "]", "=", "xs", "[", "v", "]", ".", "to", "(", "device", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "hs", ",", "_", ",", "_", ",", "_", "=", "model", ".", "forward", "(", "xs", ")", "\n", "", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "hs", "[", "v", "]", "=", "hs", "[", "v", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "hs", "[", "v", "]", "=", "scaler", ".", "fit_transform", "(", "hs", "[", "v", "]", ")", "\n", "\n", "", "", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "class_num", ",", "n_init", "=", "100", ")", "\n", "new_pseudo_label", "=", "[", "]", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "        ", "Pseudo_label", "=", "kmeans", ".", "fit_predict", "(", "hs", "[", "v", "]", ")", "\n", "Pseudo_label", "=", "Pseudo_label", ".", "reshape", "(", "data_size", ",", "1", ")", "\n", "Pseudo_label", "=", "torch", ".", "from_numpy", "(", "Pseudo_label", ")", "\n", "new_pseudo_label", ".", "append", "(", "Pseudo_label", ")", "\n", "\n", "", "return", "new_pseudo_label", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.train.match": [[157, 174], ["y_true.astype.astype", "y_pred.astype.astype", "numpy.zeros", "range", "scipy.optimize.linear_sum_assignment", "numpy.zeros", "range", "torch.from_numpy().long().to", "new_y.view.view", "max", "y_pred.astype.max", "y_true.astype.max", "np.zeros.max", "torch.from_numpy().long", "new_y.view.size", "torch.from_numpy"], "function", ["None"], ["", "def", "match", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "y_true", "=", "y_true", ".", "astype", "(", "np", ".", "int64", ")", "\n", "y_pred", "=", "y_pred", ".", "astype", "(", "np", ".", "int64", ")", "\n", "assert", "y_pred", ".", "size", "==", "y_true", ".", "size", "\n", "D", "=", "max", "(", "y_pred", ".", "max", "(", ")", ",", "y_true", ".", "max", "(", ")", ")", "+", "1", "\n", "w", "=", "np", ".", "zeros", "(", "(", "D", ",", "D", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "for", "i", "in", "range", "(", "y_pred", ".", "size", ")", ":", "\n", "        ", "w", "[", "y_pred", "[", "i", "]", ",", "y_true", "[", "i", "]", "]", "+=", "1", "\n", "", "row_ind", ",", "col_ind", "=", "linear_sum_assignment", "(", "w", ".", "max", "(", ")", "-", "w", ")", "\n", "new_y", "=", "np", ".", "zeros", "(", "y_true", ".", "shape", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "y_pred", ".", "size", ")", ":", "\n", "        ", "for", "j", "in", "row_ind", ":", "\n", "            ", "if", "y_true", "[", "i", "]", "==", "col_ind", "[", "j", "]", ":", "\n", "                ", "new_y", "[", "i", "]", "=", "row_ind", "[", "j", "]", "\n", "", "", "", "new_y", "=", "torch", ".", "from_numpy", "(", "new_y", ")", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "new_y", "=", "new_y", ".", "view", "(", "new_y", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "return", "new_y", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.train.fine_tuning": [[176, 202], ["torch.utils.data.DataLoader", "torch.nn.CrossEntropyLoss", "enumerate", "print", "range", "optimizer.zero_grad", "model", "range", "sum", "sum.backward", "optimizer.step", "sum.item", "xs[].to", "loss_list.append", "torch.no_grad", "qs[].detach().cpu", "torch.argmax().numpy", "train.match", "torch.nn.CrossEntropyLoss.", "len", "new_pseudo_label[].numpy", "qs[].detach", "torch.argmax"], "function", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.train.match"], ["", "def", "fine_tuning", "(", "epoch", ",", "new_pseudo_label", ")", ":", "\n", "    ", "loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "data_size", ",", "\n", "shuffle", "=", "False", ",", "\n", ")", "\n", "tot_loss", "=", "0.", "\n", "cross_entropy", "=", "torch", ".", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "for", "batch_idx", ",", "(", "xs", ",", "_", ",", "idx", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "xs", "[", "v", "]", "=", "xs", "[", "v", "]", ".", "to", "(", "device", ")", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "_", ",", "qs", ",", "_", ",", "_", "=", "model", "(", "xs", ")", "\n", "loss_list", "=", "[", "]", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "p", "=", "new_pseudo_label", "[", "v", "]", ".", "numpy", "(", ")", ".", "T", "[", "0", "]", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "q", "=", "qs", "[", "v", "]", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "q", "=", "torch", ".", "argmax", "(", "q", ",", "dim", "=", "1", ")", ".", "numpy", "(", ")", "\n", "p_hat", "=", "match", "(", "p", ",", "q", ")", "\n", "", "loss_list", ".", "append", "(", "cross_entropy", "(", "qs", "[", "v", "]", ",", "p_hat", ")", ")", "\n", "", "loss", "=", "sum", "(", "loss_list", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "tot_loss", "+=", "loss", ".", "item", "(", ")", "\n", "", "print", "(", "'Epoch {}'", ".", "format", "(", "epoch", ")", ",", "'Loss:{:.6f}'", ".", "format", "(", "tot_loss", "/", "len", "(", "data_loader", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.loss.Loss.__init__": [[7, 18], ["torch.Module.__init__", "loss.Loss.mask_correlated_samples", "torch.CosineSimilarity", "torch.CosineSimilarity", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss"], "methods", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Caltech.__init__", "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.loss.Loss.mask_correlated_samples"], ["    ", "def", "__init__", "(", "self", ",", "batch_size", ",", "class_num", ",", "temperature_f", ",", "temperature_l", ",", "device", ")", ":", "\n", "        ", "super", "(", "Loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "class_num", "=", "class_num", "\n", "self", ".", "temperature_f", "=", "temperature_f", "\n", "self", ".", "temperature_l", "=", "temperature_l", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "mask", "=", "self", ".", "mask_correlated_samples", "(", "batch_size", ")", "\n", "self", ".", "similarity", "=", "nn", ".", "CosineSimilarity", "(", "dim", "=", "2", ")", "\n", "self", ".", "criterion", "=", "nn", ".", "CrossEntropyLoss", "(", "reduction", "=", "\"sum\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.loss.Loss.mask_correlated_samples": [[19, 27], ["torch.ones", "torch.ones", "torch.ones", "torch.ones", "mask.bool.bool.fill_diagonal_", "range", "mask.bool.bool.bool"], "methods", ["None"], ["", "def", "mask_correlated_samples", "(", "self", ",", "N", ")", ":", "\n", "        ", "mask", "=", "torch", ".", "ones", "(", "(", "N", ",", "N", ")", ")", "\n", "mask", "=", "mask", ".", "fill_diagonal_", "(", "0", ")", "\n", "for", "i", "in", "range", "(", "N", "//", "2", ")", ":", "\n", "            ", "mask", "[", "i", ",", "N", "//", "2", "+", "i", "]", "=", "0", "\n", "mask", "[", "N", "//", "2", "+", "i", ",", "i", "]", "=", "0", "\n", "", "mask", "=", "mask", ".", "bool", "(", ")", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.loss.Loss.forward_feature": [[28, 45], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "loss.Loss.Loss.mask_correlated_samples", "sim[].reshape", "torch.zeros().to().long", "torch.zeros().to().long", "torch.zeros().to().long", "torch.zeros().to().long", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "loss.Loss.Loss.criterion", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.loss.Loss.mask_correlated_samples"], ["", "def", "forward_feature", "(", "self", ",", "h_i", ",", "h_j", ")", ":", "\n", "        ", "N", "=", "2", "*", "self", ".", "batch_size", "\n", "h", "=", "torch", ".", "cat", "(", "(", "h_i", ",", "h_j", ")", ",", "dim", "=", "0", ")", "\n", "\n", "sim", "=", "torch", ".", "matmul", "(", "h", ",", "h", ".", "T", ")", "/", "self", ".", "temperature_f", "\n", "sim_i_j", "=", "torch", ".", "diag", "(", "sim", ",", "self", ".", "batch_size", ")", "\n", "sim_j_i", "=", "torch", ".", "diag", "(", "sim", ",", "-", "self", ".", "batch_size", ")", "\n", "\n", "positive_samples", "=", "torch", ".", "cat", "(", "(", "sim_i_j", ",", "sim_j_i", ")", ",", "dim", "=", "0", ")", ".", "reshape", "(", "N", ",", "1", ")", "\n", "mask", "=", "self", ".", "mask_correlated_samples", "(", "N", ")", "\n", "negative_samples", "=", "sim", "[", "mask", "]", ".", "reshape", "(", "N", ",", "-", "1", ")", "\n", "\n", "labels", "=", "torch", ".", "zeros", "(", "N", ")", ".", "to", "(", "positive_samples", ".", "device", ")", ".", "long", "(", ")", "\n", "logits", "=", "torch", ".", "cat", "(", "(", "positive_samples", ",", "negative_samples", ")", ",", "dim", "=", "1", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "logits", ",", "labels", ")", "\n", "loss", "/=", "N", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.loss.Loss.forward_label": [[46, 73], ["q_i.t.t.sum().view", "q_i.t.sum().view.sum", "q_j.t.t.sum().view", "q_j.t.sum().view.sum", "q_i.t.t.t", "q_j.t.t.t", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.diag", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "torch.cat().reshape", "loss.Loss.Loss.mask_correlated_samples", "sim[].reshape", "torch.zeros().to().long", "torch.zeros().to().long", "torch.zeros().to().long", "torch.zeros().to().long", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "loss.Loss.Loss.criterion", "math.log", "math.log", "loss.Loss.Loss.similarity", "q_i.t.t.sum", "q_i.t.sum().view.size", "q_j.t.t.sum", "q_j.t.sum().view.size", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat.unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.loss.Loss.mask_correlated_samples"], ["", "def", "forward_label", "(", "self", ",", "q_i", ",", "q_j", ")", ":", "\n", "        ", "p_i", "=", "q_i", ".", "sum", "(", "0", ")", ".", "view", "(", "-", "1", ")", "\n", "p_i", "/=", "p_i", ".", "sum", "(", ")", "\n", "ne_i", "=", "math", ".", "log", "(", "p_i", ".", "size", "(", "0", ")", ")", "+", "(", "p_i", "*", "torch", ".", "log", "(", "p_i", ")", ")", ".", "sum", "(", ")", "\n", "p_j", "=", "q_j", ".", "sum", "(", "0", ")", ".", "view", "(", "-", "1", ")", "\n", "p_j", "/=", "p_j", ".", "sum", "(", ")", "\n", "ne_j", "=", "math", ".", "log", "(", "p_j", ".", "size", "(", "0", ")", ")", "+", "(", "p_j", "*", "torch", ".", "log", "(", "p_j", ")", ")", ".", "sum", "(", ")", "\n", "entropy", "=", "ne_i", "+", "ne_j", "\n", "\n", "q_i", "=", "q_i", ".", "t", "(", ")", "\n", "q_j", "=", "q_j", ".", "t", "(", ")", "\n", "N", "=", "2", "*", "self", ".", "class_num", "\n", "q", "=", "torch", ".", "cat", "(", "(", "q_i", ",", "q_j", ")", ",", "dim", "=", "0", ")", "\n", "\n", "sim", "=", "self", ".", "similarity", "(", "q", ".", "unsqueeze", "(", "1", ")", ",", "q", ".", "unsqueeze", "(", "0", ")", ")", "/", "self", ".", "temperature_l", "\n", "sim_i_j", "=", "torch", ".", "diag", "(", "sim", ",", "self", ".", "class_num", ")", "\n", "sim_j_i", "=", "torch", ".", "diag", "(", "sim", ",", "-", "self", ".", "class_num", ")", "\n", "\n", "positive_clusters", "=", "torch", ".", "cat", "(", "(", "sim_i_j", ",", "sim_j_i", ")", ",", "dim", "=", "0", ")", ".", "reshape", "(", "N", ",", "1", ")", "\n", "mask", "=", "self", ".", "mask_correlated_samples", "(", "N", ")", "\n", "negative_clusters", "=", "sim", "[", "mask", "]", ".", "reshape", "(", "N", ",", "-", "1", ")", "\n", "\n", "labels", "=", "torch", ".", "zeros", "(", "N", ")", ".", "to", "(", "positive_clusters", ".", "device", ")", ".", "long", "(", ")", "\n", "logits", "=", "torch", ".", "cat", "(", "(", "positive_clusters", ",", "negative_clusters", ")", ",", "dim", "=", "1", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "logits", ",", "labels", ")", "\n", "loss", "/=", "N", "\n", "return", "loss", "+", "entropy", "\n", "", "", ""]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.cluster_acc": [[9, 19], ["y_true.astype.astype", "numpy.zeros", "range", "scipy.optimize.linear_sum_assignment", "numpy.concatenate", "max", "y_pred.max", "y_true.astype.max", "np.zeros.max", "u[].reshape", "u[].reshape", "sum"], "function", ["None"], ["def", "cluster_acc", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "y_true", "=", "y_true", ".", "astype", "(", "np", ".", "int64", ")", "\n", "assert", "y_pred", ".", "size", "==", "y_true", ".", "size", "\n", "D", "=", "max", "(", "y_pred", ".", "max", "(", ")", ",", "y_true", ".", "max", "(", ")", ")", "+", "1", "\n", "w", "=", "np", ".", "zeros", "(", "(", "D", ",", "D", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "for", "i", "in", "range", "(", "y_pred", ".", "size", ")", ":", "\n", "        ", "w", "[", "y_pred", "[", "i", "]", ",", "y_true", "[", "i", "]", "]", "+=", "1", "\n", "", "u", "=", "linear_sum_assignment", "(", "w", ".", "max", "(", ")", "-", "w", ")", "\n", "ind", "=", "np", ".", "concatenate", "(", "[", "u", "[", "0", "]", ".", "reshape", "(", "u", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "1", ")", ",", "u", "[", "1", "]", ".", "reshape", "(", "[", "u", "[", "0", "]", ".", "shape", "[", "0", "]", ",", "1", "]", ")", "]", ",", "axis", "=", "1", ")", "\n", "return", "sum", "(", "[", "w", "[", "i", ",", "j", "]", "for", "i", ",", "j", "in", "ind", "]", ")", "*", "1.0", "/", "y_pred", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.purity": [[21, 36], ["numpy.zeros", "numpy.unique", "numpy.arange", "range", "numpy.unique", "numpy.concatenate", "numpy.unique", "sklearn.metrics.accuracy_score", "numpy.histogram", "numpy.argmax", "numpy.max"], "function", ["None"], ["", "def", "purity", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "y_voted_labels", "=", "np", ".", "zeros", "(", "y_true", ".", "shape", ")", "\n", "labels", "=", "np", ".", "unique", "(", "y_true", ")", "\n", "ordered_labels", "=", "np", ".", "arange", "(", "labels", ".", "shape", "[", "0", "]", ")", "\n", "for", "k", "in", "range", "(", "labels", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "y_true", "[", "y_true", "==", "labels", "[", "k", "]", "]", "=", "ordered_labels", "[", "k", "]", "\n", "", "labels", "=", "np", ".", "unique", "(", "y_true", ")", "\n", "bins", "=", "np", ".", "concatenate", "(", "(", "labels", ",", "[", "np", ".", "max", "(", "labels", ")", "+", "1", "]", ")", ",", "axis", "=", "0", ")", "\n", "\n", "for", "cluster", "in", "np", ".", "unique", "(", "y_pred", ")", ":", "\n", "        ", "hist", ",", "_", "=", "np", ".", "histogram", "(", "y_true", "[", "y_pred", "==", "cluster", "]", ",", "bins", "=", "bins", ")", "\n", "winner", "=", "np", ".", "argmax", "(", "hist", ")", "\n", "y_voted_labels", "[", "y_pred", "==", "cluster", "]", "=", "winner", "\n", "\n", "", "return", "accuracy_score", "(", "y_true", ",", "y_voted_labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.evaluate": [[38, 44], ["sklearn.metrics.v_measure_score", "sklearn.metrics.adjusted_rand_score", "metric.cluster_acc", "metric.purity"], "function", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.cluster_acc", "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.purity"], ["", "def", "evaluate", "(", "label", ",", "pred", ")", ":", "\n", "    ", "nmi", "=", "v_measure_score", "(", "label", ",", "pred", ")", "\n", "ari", "=", "adjusted_rand_score", "(", "label", ",", "pred", ")", "\n", "acc", "=", "cluster_acc", "(", "label", ",", "pred", ")", "\n", "pur", "=", "purity", "(", "label", ",", "pred", ")", "\n", "return", "nmi", ",", "ari", ",", "acc", ",", "pur", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.inference": [[46, 91], ["model.eval", "range", "enumerate", "numpy.array().reshape", "numpy.argmax", "range", "pred_vectors.append", "Hs.append", "Zs.append", "range", "range", "q.detach.detach", "soft_vector.extend", "np.array().reshape.extend", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "xs[].to", "torch.no_grad", "model.forward_cluster", "model.forward", "hs[].detach", "zs[].detach", "preds[].detach", "pred_vectors[].extend", "Hs[].extend", "Zs[].extend", "q.detach.cpu().detach().numpy", "y.numpy", "numpy.array", "sum", "preds[].cpu().detach().numpy", "hs[].cpu().detach().numpy", "zs[].cpu().detach().numpy", "q.detach.cpu().detach", "preds[].cpu().detach", "hs[].cpu().detach", "zs[].cpu().detach", "q.detach.cpu", "preds[].cpu", "hs[].cpu", "zs[].cpu"], "function", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Network.forward_cluster", "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.network.Network.forward"], ["", "def", "inference", "(", "loader", ",", "model", ",", "device", ",", "view", ",", "data_size", ")", ":", "\n", "    ", "\"\"\"\n    :return:\n    total_pred: prediction among all modalities\n    pred_vectors: predictions of each modality, list\n    labels_vector: true label\n    Hs: high-level features\n    Zs: low-level features\n    \"\"\"", "\n", "model", ".", "eval", "(", ")", "\n", "soft_vector", "=", "[", "]", "\n", "pred_vectors", "=", "[", "]", "\n", "Hs", "=", "[", "]", "\n", "Zs", "=", "[", "]", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "        ", "pred_vectors", ".", "append", "(", "[", "]", ")", "\n", "Hs", ".", "append", "(", "[", "]", ")", "\n", "Zs", ".", "append", "(", "[", "]", ")", "\n", "", "labels_vector", "=", "[", "]", "\n", "\n", "for", "step", ",", "(", "xs", ",", "y", ",", "_", ")", "in", "enumerate", "(", "loader", ")", ":", "\n", "        ", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "xs", "[", "v", "]", "=", "xs", "[", "v", "]", ".", "to", "(", "device", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "qs", ",", "preds", "=", "model", ".", "forward_cluster", "(", "xs", ")", "\n", "hs", ",", "_", ",", "_", ",", "zs", "=", "model", ".", "forward", "(", "xs", ")", "\n", "q", "=", "sum", "(", "qs", ")", "/", "view", "\n", "", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "hs", "[", "v", "]", "=", "hs", "[", "v", "]", ".", "detach", "(", ")", "\n", "zs", "[", "v", "]", "=", "zs", "[", "v", "]", ".", "detach", "(", ")", "\n", "preds", "[", "v", "]", "=", "preds", "[", "v", "]", ".", "detach", "(", ")", "\n", "pred_vectors", "[", "v", "]", ".", "extend", "(", "preds", "[", "v", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "Hs", "[", "v", "]", ".", "extend", "(", "hs", "[", "v", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "Zs", "[", "v", "]", ".", "extend", "(", "zs", "[", "v", "]", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "q", "=", "q", ".", "detach", "(", ")", "\n", "soft_vector", ".", "extend", "(", "q", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "labels_vector", ".", "extend", "(", "y", ".", "numpy", "(", ")", ")", "\n", "\n", "", "labels_vector", "=", "np", ".", "array", "(", "labels_vector", ")", ".", "reshape", "(", "data_size", ")", "\n", "total_pred", "=", "np", ".", "argmax", "(", "np", ".", "array", "(", "soft_vector", ")", ",", "axis", "=", "1", ")", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "        ", "Hs", "[", "v", "]", "=", "np", ".", "array", "(", "Hs", "[", "v", "]", ")", "\n", "Zs", "[", "v", "]", "=", "np", ".", "array", "(", "Zs", "[", "v", "]", ")", "\n", "pred_vectors", "[", "v", "]", "=", "np", ".", "array", "(", "pred_vectors", "[", "v", "]", ")", "\n", "", "return", "total_pred", ",", "pred_vectors", ",", "Hs", ",", "labels_vector", ",", "Zs", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.valid": [[93, 134], ["torch.utils.data.DataLoader", "metric.inference", "print", "metric.evaluate", "print", "print", "range", "print", "range", "print", "range", "sklearn.cluster.KMeans", "sklearn.cluster.KMeans.fit_predict", "metric.evaluate", "print", "sklearn.cluster.KMeans", "sklearn.cluster.KMeans.fit_predict", "metric.evaluate", "print", "metric.evaluate", "print", "str"], "function", ["home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.inference", "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.evaluate", "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.evaluate", "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.evaluate", "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.metric.evaluate"], ["", "def", "valid", "(", "model", ",", "device", ",", "dataset", ",", "view", ",", "data_size", ",", "class_num", ",", "eval_h", "=", "False", ")", ":", "\n", "    ", "test_loader", "=", "DataLoader", "(", "\n", "dataset", ",", "\n", "batch_size", "=", "256", ",", "\n", "shuffle", "=", "False", ",", "\n", ")", "\n", "total_pred", ",", "pred_vectors", ",", "high_level_vectors", ",", "labels_vector", ",", "low_level_vectors", "=", "inference", "(", "test_loader", ",", "model", ",", "device", ",", "view", ",", "data_size", ")", "\n", "if", "eval_h", ":", "\n", "        ", "print", "(", "\"Clustering results on low-level features of each view:\"", ")", "\n", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "class_num", ",", "n_init", "=", "100", ")", "\n", "y_pred", "=", "kmeans", ".", "fit_predict", "(", "low_level_vectors", "[", "v", "]", ")", "\n", "nmi", ",", "ari", ",", "acc", ",", "pur", "=", "evaluate", "(", "labels_vector", ",", "y_pred", ")", "\n", "print", "(", "'ACC{} = {:.4f} NMI{} = {:.4f} ARI{} = {:.4f} PUR{}={:.4f}'", ".", "format", "(", "v", "+", "1", ",", "acc", ",", "\n", "v", "+", "1", ",", "nmi", ",", "\n", "v", "+", "1", ",", "ari", ",", "\n", "v", "+", "1", ",", "pur", ")", ")", "\n", "\n", "", "print", "(", "\"Clustering results on high-level features of each view:\"", ")", "\n", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "class_num", ",", "n_init", "=", "100", ")", "\n", "y_pred", "=", "kmeans", ".", "fit_predict", "(", "high_level_vectors", "[", "v", "]", ")", "\n", "nmi", ",", "ari", ",", "acc", ",", "pur", "=", "evaluate", "(", "labels_vector", ",", "y_pred", ")", "\n", "print", "(", "'ACC{} = {:.4f} NMI{} = {:.4f} ARI{} = {:.4f} PUR{}={:.4f}'", ".", "format", "(", "v", "+", "1", ",", "acc", ",", "\n", "v", "+", "1", ",", "nmi", ",", "\n", "v", "+", "1", ",", "ari", ",", "\n", "v", "+", "1", ",", "pur", ")", ")", "\n", "", "print", "(", "\"Clustering results on cluster assignments of each view:\"", ")", "\n", "for", "v", "in", "range", "(", "view", ")", ":", "\n", "            ", "nmi", ",", "ari", ",", "acc", ",", "pur", "=", "evaluate", "(", "labels_vector", ",", "pred_vectors", "[", "v", "]", ")", "\n", "print", "(", "'ACC{} = {:.4f} NMI{} = {:.4f} ARI{} = {:.4f} PUR{}={:.4f}'", ".", "format", "(", "v", "+", "1", ",", "acc", ",", "\n", "v", "+", "1", ",", "nmi", ",", "\n", "v", "+", "1", ",", "ari", ",", "\n", "v", "+", "1", ",", "pur", ")", ")", "\n", "\n", "", "", "print", "(", "\"Clustering results on semantic labels: \"", "+", "str", "(", "labels_vector", ".", "shape", "[", "0", "]", ")", ")", "\n", "nmi", ",", "ari", ",", "acc", ",", "pur", "=", "evaluate", "(", "labels_vector", ",", "total_pred", ")", "\n", "print", "(", "'ACC = {:.4f} NMI = {:.4f} ARI = {:.4f} PUR={:.4f}'", ".", "format", "(", "acc", ",", "nmi", ",", "ari", ",", "pur", ")", ")", "\n", "return", "acc", ",", "nmi", ",", "pur", "\n", "", ""]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.BDGP.__init__": [[9, 16], ["[].astype", "[].astype", "[].transpose", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "data1", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'BDGP.mat'", ")", "[", "'X1'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "data2", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'BDGP.mat'", ")", "[", "'X2'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "labels", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'BDGP.mat'", ")", "[", "'Y'", "]", ".", "transpose", "(", ")", "\n", "self", ".", "x1", "=", "data1", "\n", "self", ".", "x2", "=", "data2", "\n", "self", ".", "y", "=", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.BDGP.__len__": [[17, 19], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "x1", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.BDGP.__getitem__": [[20, 23], ["torch.from_numpy", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "[", "torch", ".", "from_numpy", "(", "self", ".", "x1", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "\n", "self", ".", "x2", "[", "idx", "]", ")", "]", ",", "torch", ".", "from_numpy", "(", "self", ".", "y", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "idx", ")", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.CCV.__init__": [[26, 33], ["numpy.load().astype", "sklearn.preprocessing.MinMaxScaler", "sklearn.preprocessing.MinMaxScaler.fit_transform", "numpy.load().astype", "numpy.load().astype", "numpy.load", "numpy.load", "numpy.load", "numpy.load"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "data1", "=", "np", ".", "load", "(", "path", "+", "'STIP.npy'", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "scaler", "=", "MinMaxScaler", "(", ")", "\n", "self", ".", "data1", "=", "scaler", ".", "fit_transform", "(", "self", ".", "data1", ")", "\n", "self", ".", "data2", "=", "np", ".", "load", "(", "path", "+", "'SIFT.npy'", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "data3", "=", "np", ".", "load", "(", "path", "+", "'MFCC.npy'", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "labels", "=", "np", ".", "load", "(", "path", "+", "'label.npy'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.CCV.__len__": [[34, 36], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "6773", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.CCV.__getitem__": [[37, 44], ["torch.from_numpy", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "x1", "=", "self", ".", "data1", "[", "idx", "]", "\n", "x2", "=", "self", ".", "data2", "[", "idx", "]", "\n", "x3", "=", "self", ".", "data3", "[", "idx", "]", "\n", "\n", "return", "[", "torch", ".", "from_numpy", "(", "x1", ")", ",", "torch", ".", "from_numpy", "(", "\n", "x2", ")", ",", "torch", ".", "from_numpy", "(", "x3", ")", "]", ",", "torch", ".", "from_numpy", "(", "self", ".", "labels", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "idx", ")", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.MNIST_USPS.__init__": [[47, 51], ["[].astype().reshape", "[].astype", "[].astype", "[].astype", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "Y", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'MNIST_USPS.mat'", ")", "[", "'Y'", "]", ".", "astype", "(", "np", ".", "int32", ")", ".", "reshape", "(", "5000", ",", ")", "\n", "self", ".", "V1", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'MNIST_USPS.mat'", ")", "[", "'X1'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "V2", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'MNIST_USPS.mat'", ")", "[", "'X2'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.MNIST_USPS.__len__": [[52, 54], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "5000", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.MNIST_USPS.__getitem__": [[55, 60], ["dataloader.MNIST_USPS.V1[].reshape", "dataloader.MNIST_USPS.V2[].reshape", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "x1", "=", "self", ".", "V1", "[", "idx", "]", ".", "reshape", "(", "784", ")", "\n", "x2", "=", "self", ".", "V2", "[", "idx", "]", ".", "reshape", "(", "784", ")", "\n", "return", "[", "torch", ".", "from_numpy", "(", "x1", ")", ",", "torch", ".", "from_numpy", "(", "x2", ")", "]", ",", "self", ".", "Y", "[", "idx", "]", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "idx", ")", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Fashion.__init__": [[63, 68], ["[].astype().reshape", "[].astype", "[].astype", "[].astype", "[].astype", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat", "scipy.io.loadmat"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ")", ":", "\n", "        ", "self", ".", "Y", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'Fashion.mat'", ")", "[", "'Y'", "]", ".", "astype", "(", "np", ".", "int32", ")", ".", "reshape", "(", "10000", ",", ")", "\n", "self", ".", "V1", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'Fashion.mat'", ")", "[", "'X1'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "V2", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'Fashion.mat'", ")", "[", "'X2'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "self", ".", "V3", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", "+", "'Fashion.mat'", ")", "[", "'X3'", "]", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Fashion.__len__": [[69, 71], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "10000", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Fashion.__getitem__": [[72, 79], ["dataloader.Fashion.V1[].reshape", "dataloader.Fashion.V2[].reshape", "dataloader.Fashion.V3[].reshape", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "x1", "=", "self", ".", "V1", "[", "idx", "]", ".", "reshape", "(", "784", ")", "\n", "x2", "=", "self", ".", "V2", "[", "idx", "]", ".", "reshape", "(", "784", ")", "\n", "x3", "=", "self", ".", "V3", "[", "idx", "]", ".", "reshape", "(", "784", ")", "\n", "\n", "return", "[", "torch", ".", "from_numpy", "(", "x1", ")", ",", "torch", ".", "from_numpy", "(", "x2", ")", ",", "torch", ".", "from_numpy", "(", "x3", ")", "]", ",", "self", ".", "Y", "[", "idx", "]", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "idx", ")", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Caltech.__init__": [[82, 92], ["scipy.io.loadmat", "sklearn.preprocessing.MinMaxScaler", "sklearn.preprocessing.MinMaxScaler.fit_transform", "sklearn.preprocessing.MinMaxScaler.fit_transform", "sklearn.preprocessing.MinMaxScaler.fit_transform", "sklearn.preprocessing.MinMaxScaler.fit_transform", "sklearn.preprocessing.MinMaxScaler.fit_transform", "[].transpose", "data[].astype", "data[].astype", "data[].astype", "data[].astype", "data[].astype", "scipy.io.loadmat"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "path", ",", "view", ")", ":", "\n", "        ", "data", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", ")", "\n", "scaler", "=", "MinMaxScaler", "(", ")", "\n", "self", ".", "view1", "=", "scaler", ".", "fit_transform", "(", "data", "[", "'X1'", "]", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "self", ".", "view2", "=", "scaler", ".", "fit_transform", "(", "data", "[", "'X2'", "]", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "self", ".", "view3", "=", "scaler", ".", "fit_transform", "(", "data", "[", "'X3'", "]", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "self", ".", "view4", "=", "scaler", ".", "fit_transform", "(", "data", "[", "'X4'", "]", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "self", ".", "view5", "=", "scaler", ".", "fit_transform", "(", "data", "[", "'X5'", "]", ".", "astype", "(", "np", ".", "float32", ")", ")", "\n", "self", ".", "labels", "=", "scipy", ".", "io", ".", "loadmat", "(", "path", ")", "[", "'Y'", "]", ".", "transpose", "(", ")", "\n", "self", ".", "view", "=", "view", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Caltech.__len__": [[93, 95], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "1400", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.Caltech.__getitem__": [[96, 110], ["torch.from_numpy", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy().long", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "view", "==", "2", ":", "\n", "            ", "return", "[", "torch", ".", "from_numpy", "(", "\n", "self", ".", "view1", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "self", ".", "view2", "[", "idx", "]", ")", "]", ",", "torch", ".", "from_numpy", "(", "self", ".", "labels", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "idx", ")", ")", ".", "long", "(", ")", "\n", "", "if", "self", ".", "view", "==", "3", ":", "\n", "            ", "return", "[", "torch", ".", "from_numpy", "(", "self", ".", "view1", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "\n", "self", ".", "view2", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "self", ".", "view5", "[", "idx", "]", ")", "]", ",", "torch", ".", "from_numpy", "(", "self", ".", "labels", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "idx", ")", ")", ".", "long", "(", ")", "\n", "", "if", "self", ".", "view", "==", "4", ":", "\n", "            ", "return", "[", "torch", ".", "from_numpy", "(", "self", ".", "view1", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "self", ".", "view2", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "\n", "self", ".", "view5", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "self", ".", "view4", "[", "idx", "]", ")", "]", ",", "torch", ".", "from_numpy", "(", "self", ".", "labels", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "idx", ")", ")", ".", "long", "(", ")", "\n", "", "if", "self", ".", "view", "==", "5", ":", "\n", "            ", "return", "[", "torch", ".", "from_numpy", "(", "self", ".", "view1", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "\n", "self", ".", "view2", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "self", ".", "view5", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "\n", "self", ".", "view4", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "self", ".", "view3", "[", "idx", "]", ")", "]", ",", "torch", ".", "from_numpy", "(", "self", ".", "labels", "[", "idx", "]", ")", ",", "torch", ".", "from_numpy", "(", "np", ".", "array", "(", "idx", ")", ")", ".", "long", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.SubmissionsIn_MFLVC.None.dataloader.load_data": [[112, 164], ["dataloader.BDGP", "dataloader.MNIST_USPS", "dataloader.CCV", "dataloader.Fashion", "dataloader.Caltech", "dataloader.Caltech", "dataloader.Caltech", "dataloader.Caltech"], "function", ["None"], ["", "", "", "def", "load_data", "(", "dataset", ")", ":", "\n", "    ", "if", "dataset", "==", "\"BDGP\"", ":", "\n", "        ", "dataset", "=", "BDGP", "(", "'./data/'", ")", "\n", "dims", "=", "[", "1750", ",", "79", "]", "\n", "view", "=", "2", "\n", "data_size", "=", "2500", "\n", "class_num", "=", "5", "\n", "", "elif", "dataset", "==", "\"MNIST-USPS\"", ":", "\n", "        ", "dataset", "=", "MNIST_USPS", "(", "'./data/'", ")", "\n", "dims", "=", "[", "784", ",", "784", "]", "\n", "view", "=", "2", "\n", "class_num", "=", "10", "\n", "data_size", "=", "5000", "\n", "", "elif", "dataset", "==", "\"CCV\"", ":", "\n", "        ", "dataset", "=", "CCV", "(", "'./data/'", ")", "\n", "dims", "=", "[", "5000", ",", "5000", ",", "4000", "]", "\n", "view", "=", "3", "\n", "data_size", "=", "6773", "\n", "class_num", "=", "20", "\n", "", "elif", "dataset", "==", "\"Fashion\"", ":", "\n", "        ", "dataset", "=", "Fashion", "(", "'./data/'", ")", "\n", "dims", "=", "[", "784", ",", "784", ",", "784", "]", "\n", "view", "=", "3", "\n", "data_size", "=", "10000", "\n", "class_num", "=", "10", "\n", "", "elif", "dataset", "==", "\"Caltech-2V\"", ":", "\n", "        ", "dataset", "=", "Caltech", "(", "'data/Caltech-5V.mat'", ",", "view", "=", "2", ")", "\n", "dims", "=", "[", "40", ",", "254", "]", "\n", "view", "=", "2", "\n", "data_size", "=", "1400", "\n", "class_num", "=", "7", "\n", "", "elif", "dataset", "==", "\"Caltech-3V\"", ":", "\n", "        ", "dataset", "=", "Caltech", "(", "'data/Caltech-5V.mat'", ",", "view", "=", "3", ")", "\n", "dims", "=", "[", "40", ",", "254", ",", "928", "]", "\n", "view", "=", "3", "\n", "data_size", "=", "1400", "\n", "class_num", "=", "7", "\n", "", "elif", "dataset", "==", "\"Caltech-4V\"", ":", "\n", "        ", "dataset", "=", "Caltech", "(", "'data/Caltech-5V.mat'", ",", "view", "=", "4", ")", "\n", "dims", "=", "[", "40", ",", "254", ",", "928", ",", "512", "]", "\n", "view", "=", "4", "\n", "data_size", "=", "1400", "\n", "class_num", "=", "7", "\n", "", "elif", "dataset", "==", "\"Caltech-5V\"", ":", "\n", "        ", "dataset", "=", "Caltech", "(", "'data/Caltech-5V.mat'", ",", "view", "=", "5", ")", "\n", "dims", "=", "[", "40", ",", "254", ",", "928", ",", "512", ",", "1984", "]", "\n", "view", "=", "5", "\n", "data_size", "=", "1400", "\n", "class_num", "=", "7", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "return", "dataset", ",", "dims", ",", "view", ",", "data_size", ",", "class_num", "\n", "", ""]]}