{"home.repos.pwc.inspect_result.zbf1991_A2GNN.None.train_gated_aff._unfold": [[19, 24], ["torch.unfold().view", "img.dim", "torch.unfold"], "function", ["None"], ["def", "_unfold", "(", "img", ",", "radius", ")", ":", "\n", "    ", "assert", "img", ".", "dim", "(", ")", "==", "4", ",", "'Unfolding requires NCHW batch'", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "img", ".", "shape", "\n", "diameter", "=", "2", "*", "radius", "+", "1", "\n", "return", "F", ".", "unfold", "(", "img", ",", "diameter", ",", "1", ",", "radius", ")", ".", "view", "(", "N", ",", "C", ",", "diameter", ",", "diameter", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_fts_gated_regularized.ModelLossSemsegGatedCRF.forward": [[19, 70], ["model_fts_gated_regularized.ModelLossSemsegGatedCRF._create_kernels", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "mask_src.squeeze", "model_fts_gated_regularized.ModelLossSemsegGatedCRF._visualize_kernels", "model_fts_gated_regularized.ModelLossSemsegGatedCRF.squeeze"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._create_kernels", "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._visualize_kernels"], ["def", "forward", "(", "\n", "self", ",", "aff_dis_radius", ",", "kernels_desc", ",", "kernels_radius", ",", "sample", ",", "height_input", ",", "width_input", ",", "\n", "mask_src", "=", "None", ",", "custom_modality_downsamplers", "=", "None", ",", "out_kernels_vis", "=", "False", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Performs the forward pass of the loss.\n        :param y_hat_softmax: A tensor of predicted per-pixel class probabilities of size NxCxHxW\n        :param kernels_desc: A list of dictionaries, each describing one Gaussian kernel composition from modalities.\n            The final kernel is a weighted sum of individual kernels. Following example is a composition of\n            RGBXY and XY kernels:\n            kernels_desc: [{\n                'weight': 0.9,          # Weight of RGBXY kernel\n                'xy': 6,                # Sigma for XY\n                'rgb': 0.1,             # Sigma for RGB\n            },{\n                'weight': 0.1,          # Weight of XY kernel\n                'xy': 6,                # Sigma for XY\n            }]\n        :param kernels_radius: Defines size of bounding box region around each pixel in which the kernel is constructed.\n        :param sample: A dictionary with modalities (except 'xy') used in kernels_desc parameter. Each of the provided\n            modalities is allowed to be larger than the shape of y_hat_softmax, in such case downsampling will be\n            invoked. Default downsampling method is area resize; this can be overriden by setting.\n            custom_modality_downsamplers parameter.\n        :param width_input, height_input: Dimensions of the full scale resolution of modalities\n        :param mask_src: (optional) Source mask.\n        :param custom_modality_downsamplers: A dictionary of modality downsampling functions.\n        :param out_kernels_vis: Whether to return a tensor with kernels visualized with some step.\n        :return: Loss function value.\n        \"\"\"", "\n", "N", ",", "_", ",", "_", ",", "height_pred", ",", "width_pred", "=", "aff_dis_radius", ".", "shape", "\n", "device", "=", "aff_dis_radius", ".", "device", "\n", "\n", "kernels", "=", "self", ".", "_create_kernels", "(", "\n", "kernels_desc", ",", "kernels_radius", ",", "sample", ",", "N", ",", "height_pred", ",", "width_pred", ",", "device", ",", "custom_modality_downsamplers", "\n", ")", "\n", "\n", "denom", "=", "torch", ".", "sum", "(", "mask_src", ")", "\n", "loss", "=", "kernels", ".", "squeeze", "(", "dim", "=", "1", ")", "*", "aff_dis_radius", "*", "mask_src", ".", "squeeze", "(", "dim", "=", "1", ")", "\n", "\n", "loss", "=", "torch", ".", "sum", "(", "loss", ")", "\n", "\n", "out", "=", "{", "\n", "'loss'", ":", "loss", "/", "denom", ",", "\n", "}", "\n", "\n", "if", "out_kernels_vis", ":", "\n", "            ", "out", "[", "'kernels_vis'", "]", "=", "self", ".", "_visualize_kernels", "(", "\n", "kernels", ",", "kernels_radius", ",", "height_input", ",", "width_input", ",", "height_pred", ",", "width_pred", "\n", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_fts_gated_regularized.ModelLossSemsegGatedCRF._downsample": [[71, 78], ["f_down"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_downsample", "(", "img", ",", "modality", ",", "height_dst", ",", "width_dst", ",", "custom_modality_downsamplers", ")", ":", "\n", "        ", "if", "custom_modality_downsamplers", "is", "not", "None", "and", "modality", "in", "custom_modality_downsamplers", ":", "\n", "            ", "f_down", "=", "custom_modality_downsamplers", "[", "modality", "]", "\n", "", "else", ":", "\n", "            ", "f_down", "=", "F", ".", "adaptive_avg_pool2d", "\n", "", "return", "f_down", "(", "img", ",", "(", "height_dst", ",", "width_dst", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_fts_gated_regularized.ModelLossSemsegGatedCRF._create_kernels": [[79, 105], ["enumerate", "desc.items", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.append", "torch.cat.append", "model_fts_gated_regularized.ModelLossSemsegGatedCRF._create_kernels_from_features", "model_fts_gated_regularized.ModelLossSemsegGatedCRF._get_mesh", "model_fts_gated_regularized.ModelLossSemsegGatedCRF._downsample"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._create_kernels_from_features", "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._get_mesh", "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._downsample"], ["", "@", "staticmethod", "\n", "def", "_create_kernels", "(", "\n", "kernels_desc", ",", "kernels_radius", ",", "sample", ",", "N", ",", "height_pred", ",", "width_pred", ",", "device", ",", "custom_modality_downsamplers", "\n", ")", ":", "\n", "        ", "kernels", "=", "None", "\n", "for", "i", ",", "desc", "in", "enumerate", "(", "kernels_desc", ")", ":", "\n", "            ", "weight", "=", "desc", "[", "'weight'", "]", "\n", "features", "=", "[", "]", "\n", "for", "modality", ",", "sigma", "in", "desc", ".", "items", "(", ")", ":", "\n", "                ", "if", "modality", "==", "'weight'", ":", "\n", "                    ", "continue", "\n", "", "if", "modality", "==", "'xy'", ":", "\n", "                    ", "feature", "=", "ModelLossSemsegGatedCRF", ".", "_get_mesh", "(", "N", ",", "height_pred", ",", "width_pred", ",", "device", ")", "\n", "", "else", ":", "\n", "                    ", "assert", "modality", "in", "sample", ",", "f'Modality {modality} is listed in {i}-th kernel descriptor, but not present in the sample'", "\n", "feature", "=", "sample", "[", "modality", "]", "\n", "feature", "=", "ModelLossSemsegGatedCRF", ".", "_downsample", "(", "\n", "feature", ",", "modality", ",", "height_pred", ",", "width_pred", ",", "custom_modality_downsamplers", "\n", ")", "\n", "", "feature", "/=", "sigma", "\n", "features", ".", "append", "(", "feature", ")", "\n", "", "features", "=", "torch", ".", "cat", "(", "features", ",", "dim", "=", "1", ")", "\n", "kernel", "=", "weight", "*", "ModelLossSemsegGatedCRF", ".", "_create_kernels_from_features", "(", "features", ",", "kernels_radius", ")", "\n", "kernels", "=", "kernel", "if", "kernels", "is", "None", "else", "kernel", "+", "kernels", "\n", "", "return", "kernels", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_fts_gated_regularized.ModelLossSemsegGatedCRF._create_kernels_from_features": [[106, 115], ["model_fts_gated_regularized.ModelLossSemsegGatedCRF._unfold", "features.dim", "kernels[].view"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_aff_gated._unfold"], ["", "@", "staticmethod", "\n", "def", "_create_kernels_from_features", "(", "features", ",", "radius", ")", ":", "\n", "        ", "assert", "features", ".", "dim", "(", ")", "==", "4", ",", "'Features must be a NCHW batch'", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "features", ".", "shape", "\n", "kernels", "=", "ModelLossSemsegGatedCRF", ".", "_unfold", "(", "features", ",", "radius", ")", "\n", "kernels", "=", "kernels", "-", "kernels", "[", ":", ",", ":", ",", "radius", ",", "radius", ",", ":", ",", ":", "]", ".", "view", "(", "N", ",", "C", ",", "1", ",", "1", ",", "H", ",", "W", ")", "\n", "kernels", "=", "(", "-", "0.5", "*", "kernels", "**", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "exp", "(", ")", "\n", "kernels", "[", ":", ",", ":", ",", "radius", ",", "radius", ",", ":", ",", ":", "]", "=", "0", "\n", "return", "kernels", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_fts_gated_regularized.ModelLossSemsegGatedCRF._get_mesh": [[116, 122], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_get_mesh", "(", "N", ",", "H", ",", "W", ",", "device", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "(", "\n", "torch", ".", "arange", "(", "0", ",", "W", ",", "1", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "W", ")", ".", "repeat", "(", "N", ",", "1", ",", "H", ",", "1", ")", ",", "\n", "torch", ".", "arange", "(", "0", ",", "H", ",", "1", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", ".", "view", "(", "1", ",", "1", ",", "H", ",", "1", ")", ".", "repeat", "(", "N", ",", "1", ",", "1", ",", "W", ")", "\n", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_fts_gated_regularized.ModelLossSemsegGatedCRF._unfold": [[123, 129], ["torch.unfold().view", "torch.unfold().view", "img.dim", "torch.unfold", "torch.unfold"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_unfold", "(", "img", ",", "radius", ")", ":", "\n", "        ", "assert", "img", ".", "dim", "(", ")", "==", "4", ",", "'Unfolding requires NCHW batch'", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "img", ".", "shape", "\n", "diameter", "=", "2", "*", "radius", "+", "1", "\n", "return", "F", ".", "unfold", "(", "img", ",", "diameter", ",", "1", ",", "radius", ")", ".", "view", "(", "N", ",", "C", ",", "diameter", ",", "diameter", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_fts_gated_regularized.ModelLossSemsegGatedCRF._visualize_kernels": [[130, 144], ["torch.pad.permute().contiguous().view", "torch.interpolate", "torch.interpolate", "torch.pad", "torch.pad", "torch.pad.permute().contiguous", "torch.pad.permute"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_visualize_kernels", "(", "kernels", ",", "radius", ",", "height_input", ",", "width_input", ",", "height_pred", ",", "width_pred", ")", ":", "\n", "        ", "diameter", "=", "2", "*", "radius", "+", "1", "\n", "vis", "=", "kernels", "[", ":", ",", ":", ",", ":", ",", ":", ",", "radius", ":", ":", "diameter", ",", "radius", ":", ":", "diameter", "]", "\n", "vis_nh", ",", "vis_nw", "=", "vis", ".", "shape", "[", "-", "2", ":", "]", "\n", "vis", "=", "vis", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "5", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "kernels", ".", "shape", "[", "0", "]", ",", "1", ",", "diameter", "*", "vis_nh", ",", "diameter", "*", "vis_nw", ")", "\n", "if", "vis", ".", "shape", "[", "2", "]", ">", "height_pred", ":", "\n", "            ", "vis", "=", "vis", "[", ":", ",", ":", ",", ":", "height_pred", ",", ":", "]", "\n", "", "if", "vis", ".", "shape", "[", "3", "]", ">", "width_pred", ":", "\n", "            ", "vis", "=", "vis", "[", ":", ",", ":", ",", ":", ",", ":", "width_pred", "]", "\n", "", "if", "vis", ".", "shape", "[", "2", ":", "]", "!=", "(", "height_pred", ",", "width_pred", ")", ":", "\n", "            ", "vis", "=", "F", ".", "pad", "(", "vis", ",", "[", "0", ",", "width_pred", "-", "vis", ".", "shape", "[", "3", "]", ",", "0", ",", "height_pred", "-", "vis", ".", "shape", "[", "2", "]", "]", ")", "\n", "", "vis", "=", "F", ".", "interpolate", "(", "vis", ",", "(", "height_input", ",", "width_input", ")", ",", "mode", "=", "'nearest'", ")", "\n", "return", "vis", "", "", "", ""]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.read_xml_annotation": [[15, 32], ["open", "xml.parse", "ET.parse.getroot", "tree.getroot.findall", "os.path.join", "object.find", "int", "int", "int", "int", "objects.append", "bndboxlist.append", "object.find.find", "object.find.find", "object.find.find", "object.find.find", "object.find"], "function", ["None"], ["def", "read_xml_annotation", "(", "root", ",", "image_id", ")", ":", "\n", "    ", "in_file", "=", "open", "(", "os", ".", "path", ".", "join", "(", "root", ",", "image_id", ")", ")", "\n", "tree", "=", "ET", ".", "parse", "(", "in_file", ")", "\n", "root", "=", "tree", ".", "getroot", "(", ")", "\n", "bndboxlist", "=", "[", "]", "\n", "objects", "=", "[", "]", "\n", "for", "object", "in", "root", ".", "findall", "(", "'object'", ")", ":", "\n", "\n", "        ", "bndbox", "=", "object", ".", "find", "(", "'bndbox'", ")", "\n", "\n", "xmin", "=", "int", "(", "bndbox", ".", "find", "(", "'xmin'", ")", ".", "text", ")", "\n", "xmax", "=", "int", "(", "bndbox", ".", "find", "(", "'xmax'", ")", ".", "text", ")", "\n", "ymin", "=", "int", "(", "bndbox", ".", "find", "(", "'ymin'", ")", ".", "text", ")", "\n", "ymax", "=", "int", "(", "bndbox", ".", "find", "(", "'ymax'", ")", ".", "text", ")", "\n", "objects", ".", "append", "(", "object", ".", "find", "(", "'name'", ")", ".", "text", ")", "\n", "bndboxlist", ".", "append", "(", "[", "xmin", ",", "ymin", ",", "xmax", ",", "ymax", "]", ")", "\n", "", "return", "objects", ",", "bndboxlist", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.box_mil_loss": [[33, 47], ["enumerate", "torch.max", "torch.max", "torch.max", "torch.max", "torch.cat", "torch.cat", "torch.cross_entropy", "len", "torch.ones", "torch.ones", "label_box.cuda().long", "label_box.cuda"], "function", ["None"], ["", "def", "box_mil_loss", "(", "pred", ",", "boxes", ",", "objs", ")", ":", "\n", "    ", "mil_loss", "=", "0", "\n", "for", "i", ",", "box", "in", "enumerate", "(", "boxes", ")", ":", "\n", "        ", "obj", "=", "objs", "[", "i", "]", "\n", "label_box_index", "=", "obj_dict", "[", "obj", "]", "\n", "pred_box", "=", "pred", "[", ":", ",", ":", ",", "box", "[", "1", "]", ":", "box", "[", "3", "]", "+", "1", ",", "box", "[", "0", "]", ":", "box", "[", "2", "]", "+", "1", "]", "\n", "pred_row_max", ",", "ind_row", "=", "torch", ".", "max", "(", "pred_box", ",", "dim", "=", "2", ")", "\n", "pred_col_max", ",", "ind_col", "=", "torch", ".", "max", "(", "pred_box", ",", "dim", "=", "3", ")", "\n", "pred_box", "=", "torch", ".", "cat", "(", "[", "pred_row_max", ",", "pred_col_max", "]", ",", "dim", "=", "2", ")", "\n", "label_box", "=", "label_box_index", "*", "torch", ".", "ones", "(", "[", "1", ",", "pred_box", ".", "shape", "[", "2", "]", "]", ")", "\n", "mil_loss", "+=", "F", ".", "cross_entropy", "(", "pred_box", ",", "label_box", ".", "cuda", "(", ")", ".", "long", "(", ")", ")", "\n", "\n", "", "mil_loss", "=", "mil_loss", "/", "len", "(", "boxes", ")", "\n", "return", "mil_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.box_mp_loss_with_consistency_checking": [[49, 100], ["enumerate", "torch.max", "torch.max", "torch.max", "torch.max", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.arange().cuda", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.squeeze", "torch.cat", "torch.cat", "torch.cat().squeeze().transpose", "torch.cat().squeeze().transpose", "torch.norm().view", "torch.norm().view", "torch.div", "torch.div", "torch.sum", "torch.sum", "torch.cross_entropy", "torch.mean", "torch.mean", "init_seed_fts_box.contiguous().view.contiguous().view", "torch.cosine_similarity", "fts_seed_dis.view.view", "init_seed_label_box.clone", "torch.mm", "torch.mm", "torch.ones", "torch.ones", "label_box.cuda().long", "torch.mean.unsqueeze", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.cat().squeeze", "torch.cat().squeeze", "torch.norm", "torch.norm", "torch.cat().squeeze().transpose.t", "torch.mm", "torch.mm", "init_seed_fts_box.contiguous().view.contiguous", "torch.norm().view.t", "label_box.cuda", "torch.cat", "torch.cat"], "function", ["None"], ["", "def", "box_mp_loss_with_consistency_checking", "(", "pred", ",", "fts", ",", "boxes", ",", "objs", ",", "init_seed_label", ")", ":", "\n", "    ", "mil_loss", "=", "0", "\n", "mil_sum", "=", "0", "\n", "dis_loss", "=", "0", "\n", "dis_sum", "=", "0", "\n", "for", "i", ",", "box", "in", "enumerate", "(", "boxes", ")", ":", "\n", "        ", "obj", "=", "objs", "[", "i", "]", "\n", "label_box_index", "=", "obj_dict", "[", "obj", "]", "\n", "pred_box", "=", "pred", "[", ":", ",", ":", ",", "box", "[", "1", "]", ":", "box", "[", "3", "]", "+", "1", ",", "box", "[", "0", "]", ":", "box", "[", "2", "]", "+", "1", "]", "\n", "pred_class_box", "=", "pred", "[", ":", ",", "label_box_index", ",", "box", "[", "1", "]", ":", "box", "[", "3", "]", "+", "1", ",", "box", "[", "0", "]", ":", "box", "[", "2", "]", "+", "1", "]", "\n", "fts_box", "=", "fts", "[", ":", ",", ":", ",", "box", "[", "1", "]", ":", "box", "[", "3", "]", "+", "1", ",", "box", "[", "0", "]", ":", "box", "[", "2", "]", "+", "1", "]", "\n", "pred_row_max", ",", "ind_row", "=", "torch", ".", "max", "(", "pred_class_box", ",", "dim", "=", "2", ")", "\n", "pred_col_max", ",", "ind_col", "=", "torch", ".", "max", "(", "pred_class_box", ",", "dim", "=", "1", ")", "\n", "indice_row", "=", "torch", ".", "arange", "(", "0", ",", "pred_row_max", ".", "shape", "[", "-", "1", "]", ")", ".", "cuda", "(", ")", "\n", "indice_col", "=", "torch", ".", "arange", "(", "0", ",", "pred_col_max", ".", "shape", "[", "-", "1", "]", ")", ".", "cuda", "(", ")", "\n", "ind_row", "=", "torch", ".", "squeeze", "(", "ind_row", "[", ":", ",", ":", "]", ")", "\n", "ind_col", "=", "torch", ".", "squeeze", "(", "ind_col", "[", ":", ",", ":", "]", ")", "\n", "pred_row", "=", "pred_box", "[", ":", ",", ":", ",", "indice_row", ",", "ind_row", "]", "\n", "pred_col", "=", "pred_box", "[", ":", ",", ":", ",", "ind_col", ",", "indice_col", "]", "\n", "\n", "fts_row", "=", "fts_box", "[", ":", ",", ":", ",", "indice_row", ",", "ind_row", "]", "\n", "fts_col", "=", "fts_box", "[", ":", ",", ":", ",", "ind_col", ",", "indice_col", "]", "\n", "\n", "pred_box", "=", "torch", ".", "cat", "(", "[", "pred_row", ",", "pred_col", "]", ",", "dim", "=", "2", ")", "\n", "fts_max_box", "=", "torch", ".", "cat", "(", "[", "fts_row", ",", "fts_col", "]", ",", "dim", "=", "2", ")", ".", "squeeze", "(", ")", ".", "transpose", "(", "1", ",", "0", ")", "\n", "\n", "norm2", "=", "torch", ".", "norm", "(", "fts_max_box", ",", "2", ",", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "\n", "cos", "=", "torch", ".", "div", "(", "torch", ".", "mm", "(", "fts_max_box", ",", "fts_max_box", ".", "t", "(", ")", ")", ",", "torch", ".", "mm", "(", "norm2", ",", "norm2", ".", "t", "(", ")", ")", "+", "1e-7", ")", "\n", "dis_loss", "+=", "torch", ".", "sum", "(", "1", "-", "cos", "+", "1e-5", ")", "\n", "dis_sum", "+=", "cos", ".", "shape", "[", "0", "]", "*", "cos", ".", "shape", "[", "1", "]", "\n", "\n", "label_box", "=", "label_box_index", "*", "torch", ".", "ones", "(", "[", "1", ",", "pred_box", ".", "shape", "[", "2", "]", "]", ")", "\n", "mil_loss", "+=", "F", ".", "cross_entropy", "(", "pred_box", ",", "label_box", ".", "cuda", "(", ")", ".", "long", "(", ")", ",", "reduction", "=", "'sum'", ")", "\n", "mil_sum", "+=", "pred_box", ".", "shape", "[", "2", "]", "\n", "\n", "fts_max_box_prototype", "=", "torch", ".", "mean", "(", "fts_max_box", ",", "dim", "=", "0", ")", "\n", "init_seed_label_box", "=", "init_seed_label", "[", ":", ",", "box", "[", "1", "]", ":", "box", "[", "3", "]", "+", "1", ",", "box", "[", "0", "]", ":", "box", "[", "2", "]", "+", "1", "]", "\n", "init_seed_fts_box", "=", "fts", "[", ":", ",", ":", ",", "box", "[", "1", "]", ":", "box", "[", "3", "]", "+", "1", ",", "box", "[", "0", "]", ":", "box", "[", "2", "]", "+", "1", "]", "\n", "init_seed_fts_box", "=", "init_seed_fts_box", ".", "contiguous", "(", ")", ".", "view", "(", "256", ",", "-", "1", ")", "\n", "fts_seed_dis", "=", "F", ".", "cosine_similarity", "(", "init_seed_fts_box", ",", "fts_max_box_prototype", ".", "unsqueeze", "(", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "fts_seed_dis", "=", "fts_seed_dis", ".", "view", "(", "1", ",", "init_seed_label_box", ".", "shape", "[", "1", "]", ",", "init_seed_label_box", ".", "shape", "[", "2", "]", ")", "\n", "new_init_seed_label_box", "=", "init_seed_label_box", ".", "clone", "(", ")", "\n", "new_init_seed_label_box", "[", "fts_seed_dis", "<", "0", "]", "=", "255", "\n", "new_init_seed_label_box", "[", "init_seed_label_box", "!=", "label_box_index", "]", "=", "init_seed_label_box", "[", "init_seed_label_box", "!=", "label_box_index", "]", "\n", "\n", "init_seed_label", "[", ":", ",", "box", "[", "1", "]", ":", "box", "[", "3", "]", "+", "1", ",", "box", "[", "0", "]", ":", "box", "[", "2", "]", "+", "1", "]", "=", "new_init_seed_label_box", "\n", "\n", "", "mil_loss", "=", "mil_loss", "/", "mil_sum", "\n", "dis_loss", "=", "dis_loss", "/", "dis_sum", "\n", "return", "mil_loss", "+", "dis_loss", ",", "init_seed_label", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.generate_aff": [[102, 118], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.pad", "torch.squeeze", "torch.squeeze", "range", "range", "aff_mask_nopad.reshape"], "function", ["None"], ["", "def", "generate_aff", "(", "f_w", ",", "f_h", ",", "aff_mat", ",", "radius", ")", ":", "\n", "    ", "aff", "=", "torch", ".", "zeros", "(", "[", "f_w", "*", "f_h", ",", "f_w", "*", "f_h", "]", ")", "\n", "aff_mask", "=", "torch", ".", "zeros", "(", "[", "f_w", ",", "f_h", "]", ")", "\n", "aff_mask_pad", "=", "F", ".", "pad", "(", "aff_mask", ",", "(", "radius", ",", "radius", ",", "radius", ",", "radius", ")", ",", "'constant'", ")", "\n", "aff_mat", "=", "torch", ".", "squeeze", "(", "aff_mat", ")", "\n", "for", "i", "in", "range", "(", "f_w", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "f_h", ")", ":", "\n", "            ", "ind", "=", "i", "*", "f_h", "+", "j", "\n", "center_x", "=", "i", "+", "radius", "\n", "center_y", "=", "j", "+", "radius", "\n", "aff_mask_pad", "[", "center_x", "-", "radius", ":", "(", "center_x", "+", "radius", "+", "1", ")", ",", "center_y", "-", "radius", ":", "(", "center_y", "+", "radius", "+", "1", ")", "]", "=", "aff_mat", "[", ":", ",", ":", ",", "i", ",", "j", "]", "\n", "aff_mask_nopad", "=", "aff_mask_pad", "[", "radius", ":", "-", "radius", ",", "radius", ":", "-", "radius", "]", "\n", "aff", "[", "ind", "]", "=", "aff_mask_nopad", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "aff_mask_pad", "=", "0", "*", "aff_mask_pad", "\n", "\n", "", "", "return", "aff", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.generate_aff_cropping": [[120, 136], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.pad", "range", "range", "aff_mask_nopad.reshape"], "function", ["None"], ["", "def", "generate_aff_cropping", "(", "f_w", ",", "f_h", ",", "radius", ")", ":", "\n", "    ", "aff", "=", "torch", ".", "zeros", "(", "[", "f_w", "*", "f_h", ",", "f_w", "*", "f_h", "]", ")", "\n", "aff_mask", "=", "torch", ".", "zeros", "(", "[", "f_w", ",", "f_h", "]", ")", "\n", "aff_mask_pad", "=", "F", ".", "pad", "(", "aff_mask", ",", "(", "radius", ",", "radius", ",", "radius", ",", "radius", ")", ",", "'constant'", ")", "\n", "\n", "for", "i", "in", "range", "(", "f_w", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "f_h", ")", ":", "\n", "            ", "ind", "=", "i", "*", "f_h", "+", "j", "\n", "center_x", "=", "i", "+", "radius", "\n", "center_y", "=", "j", "+", "radius", "\n", "aff_mask_pad", "[", "center_x", "-", "radius", ":", "(", "center_x", "+", "radius", "+", "1", ")", ",", "center_y", "-", "radius", ":", "(", "center_y", "+", "radius", "+", "1", ")", "]", "=", "1", "\n", "aff_mask_nopad", "=", "aff_mask_pad", "[", "radius", ":", "-", "radius", ",", "radius", ":", "-", "radius", "]", "\n", "aff", "[", "ind", "]", "=", "aff_mask_nopad", ".", "reshape", "(", "1", ",", "-", "1", ")", "\n", "aff_mask_pad", "=", "0", "*", "aff_mask_pad", "\n", "\n", "", "", "return", "aff", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.train_with_mp_nocrf": [[137, 169], ["model.train", "optimizer.zero_grad", "model", "x.permute.view", "x.permute.permute", "torch.interpolate", "F.interpolate.view", "F.interpolate.permute", "torch.interpolate", "mytool.box_mp_loss_with_consistency_checking", "labels.clone", "labels.clone", "critersion", "critersion", "loss_train.backward", "optimizer.step", "print", "features.cuda", "adj.cuda", "aff_cropping.cuda", "labels.clone.cuda", "labels.clone.cuda", "loss_train.item", "critersion.item", "critersion.item", "mil_loss.item"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.train", "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.box_mp_loss_with_consistency_checking", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.PolyOptimizer.step"], ["", "def", "train_with_mp_nocrf", "(", "epoch", ",", "model", ",", "features", ",", "adj", ",", "labels", ",", "critersion", ",", "f_h", ",", "f_w", ",", "boxes", ",", "objs", ",", "aff_cropping", ",", "optimizer", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "x", ",", "fts", "=", "model", "(", "features", ".", "cuda", "(", ")", ",", "adj", ".", "cuda", "(", ")", ",", "aff_cropping", ".", "cuda", "(", ")", ")", "\n", "label_b", ",", "label_w", ",", "label_h", "=", "labels", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "1", ",", "f_h", ",", "f_w", ",", "21", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "pred", "=", "F", ".", "interpolate", "(", "x", ",", "[", "label_w", ",", "label_h", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "fts", "=", "fts", ".", "view", "(", "1", ",", "f_h", ",", "f_w", ",", "-", "1", ")", "\n", "fts", "=", "fts", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "fts", "=", "F", ".", "interpolate", "(", "fts", ",", "[", "label_w", ",", "label_h", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "mil_loss", ",", "_", "=", "box_mp_loss_with_consistency_checking", "(", "pred", ",", "fts", ",", "boxes", ",", "objs", ",", "labels", ")", "\n", "\n", "bg_label", "=", "labels", ".", "clone", "(", ")", "\n", "fg_label", "=", "labels", ".", "clone", "(", ")", "\n", "bg_label", "[", "labels", "!=", "0", "]", "=", "255", "\n", "fg_label", "[", "labels", "==", "0", "]", "=", "255", "\n", "\n", "bgloss", "=", "critersion", "(", "pred", ",", "bg_label", ".", "cuda", "(", ")", ")", "\n", "fgloss", "=", "critersion", "(", "pred", ",", "fg_label", ".", "cuda", "(", ")", ")", "\n", "loss_train", "=", "bgloss", "+", "fgloss", "+", "1", "*", "mil_loss", "\n", "\n", "loss_train", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'Epoch: {:04d}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "\n", "'loss_train: {:.4f}'", ".", "format", "(", "loss_train", ".", "item", "(", ")", ")", ",", "\n", "'bg_loss: {:.4f}'", ".", "format", "(", "bgloss", ".", "item", "(", ")", ")", ",", "\n", "'fg_loss:{:.4f}'", ".", "format", "(", "fgloss", ".", "item", "(", ")", ")", ",", "\n", "'mil_loss:{:.4f}'", ".", "format", "(", "mil_loss", ".", "item", "(", ")", ")", ")", "\n", "return", "loss_train", ",", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.train_with_mp_crf": [[171, 210], ["model.train", "optimizer.zero_grad", "model", "x.permute.view", "x.permute.permute", "torch.softmax", "torch.interpolate", "F.interpolate.view", "F.interpolate.permute", "torch.interpolate", "mytool.box_mp_loss_with_consistency_checking", "densecrflosslayer", "labels.clone", "labels.clone", "critersion", "critersion", "loss_train.backward", "optimizer.step", "print", "features.cuda", "adj.cuda", "aff_cropping.cuda", "labels.clone.cuda", "labels.clone.cuda", "loss_train.item", "critersion.item", "critersion.item", "crfloss.item", "mil_loss.item"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.train", "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.box_mp_loss_with_consistency_checking", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.PolyOptimizer.step"], ["", "def", "train_with_mp_crf", "(", "epoch", ",", "model", ",", "features", ",", "adj", ",", "labels", ",", "critersion", ",", "f_h", ",", "f_w", ",", "densecrflosslayer", ",", "normalized_input", ",", "\n", "boxes", ",", "objs", ",", "aff_cropping", ",", "optimizer", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "x", ",", "fts", "=", "model", "(", "features", ".", "cuda", "(", ")", ",", "adj", ".", "cuda", "(", ")", ",", "aff_cropping", ".", "cuda", "(", ")", ")", "\n", "label_b", ",", "label_w", ",", "label_h", "=", "labels", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "1", ",", "f_h", ",", "f_w", ",", "21", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "pred_soft", "=", "F", ".", "softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "pred", "=", "F", ".", "interpolate", "(", "x", ",", "[", "label_w", ",", "label_h", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "fts", "=", "fts", ".", "view", "(", "1", ",", "f_h", ",", "f_w", ",", "-", "1", ")", "\n", "fts", "=", "fts", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "fts", "=", "F", ".", "interpolate", "(", "fts", ",", "[", "label_w", ",", "label_h", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "mil_loss", ",", "init_seed_label", "=", "box_mp_loss_with_consistency_checking", "(", "pred", ",", "fts", ",", "boxes", ",", "objs", ",", "labels", ")", "\n", "\n", "out_gatedcrf", "=", "densecrflosslayer", "(", "pred_soft", ",", "[", "{", "'weight'", ":", "1", ",", "'xy'", ":", "6", ",", "'rgb'", ":", "0.1", "}", "]", ",", "5", ",", "normalized_input", ",", "f_h", ",", "f_w", ",", "mask_src", "=", "None", ")", "\n", "crfloss", "=", "out_gatedcrf", "[", "'loss'", "]", "\n", "\n", "labels", "=", "init_seed_label", "\n", "bg_label", "=", "labels", ".", "clone", "(", ")", "\n", "fg_label", "=", "labels", ".", "clone", "(", ")", "\n", "bg_label", "[", "labels", "!=", "0", "]", "=", "255", "\n", "fg_label", "[", "labels", "==", "0", "]", "=", "255", "\n", "\n", "bgloss", "=", "critersion", "(", "pred", ",", "bg_label", ".", "cuda", "(", ")", ")", "\n", "fgloss", "=", "critersion", "(", "pred", ",", "fg_label", ".", "cuda", "(", ")", ")", "\n", "\n", "loss_train", "=", "bgloss", "+", "fgloss", "+", "0.01", "*", "crfloss", "+", "1", "*", "mil_loss", "\n", "\n", "loss_train", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'Epoch: {:04d}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "\n", "'loss_train: {:.4f}'", ".", "format", "(", "loss_train", ".", "item", "(", ")", ")", ",", "\n", "'bg_loss: {:.4f}'", ".", "format", "(", "bgloss", ".", "item", "(", ")", ")", ",", "\n", "'fg_loss:{:.4f}'", ".", "format", "(", "fgloss", ".", "item", "(", ")", ")", ",", "\n", "'crf_loss:{:.4f}'", ".", "format", "(", "crfloss", ".", "item", "(", ")", ")", ",", "\n", "'mil_loss:{:.4f}'", ".", "format", "(", "mil_loss", ".", "item", "(", ")", ")", ")", "\n", "return", "loss_train", ",", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.infer_nocrf": [[212, 219], ["model.eval", "model", "x.reshape.reshape", "x.reshape.permute", "features.cuda", "adj.cuda", "aff_cropping.cuda"], "function", ["None"], ["", "def", "infer_nocrf", "(", "model", ",", "features", ",", "adj", ",", "f_h", ",", "f_w", ",", "aff_cropping", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "x", ",", "output", "=", "model", "(", "features", ".", "cuda", "(", ")", ",", "adj", ".", "cuda", "(", ")", ",", "aff_cropping", ".", "cuda", "(", ")", ")", "\n", "x", "=", "x", ".", "reshape", "(", "[", "f_h", ",", "f_w", ",", "21", "]", ")", "\n", "pred", "=", "x", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "\n", "\n", "return", "pred", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.crf_inference_inf": [[221, 239], ["pydensecrf.DenseCRF2D", "pydensecrf.utils.unary_from_softmax", "numpy.ascontiguousarray", "numpy.ascontiguousarray", "dcrf.DenseCRF2D.setUnaryEnergy", "dcrf.DenseCRF2D.addPairwiseGaussian", "dcrf.DenseCRF2D.addPairwiseBilateral", "dcrf.DenseCRF2D.inference", "numpy.array().reshape", "numpy.copy", "numpy.array"], "function", ["None"], ["", "def", "crf_inference_inf", "(", "img", ",", "probs", ",", "t", "=", "10", ",", "scale_factor", "=", "1", ",", "labels", "=", "21", ")", ":", "\n", "\n", "    ", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "n_labels", "=", "labels", "\n", "\n", "d", "=", "dcrf", ".", "DenseCRF2D", "(", "w", ",", "h", ",", "n_labels", ")", "\n", "\n", "unary", "=", "unary_from_softmax", "(", "probs", ")", "\n", "unary", "=", "np", ".", "ascontiguousarray", "(", "unary", ")", "\n", "\n", "img_c", "=", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n", "d", ".", "setUnaryEnergy", "(", "unary", ")", "\n", "d", ".", "addPairwiseGaussian", "(", "sxy", "=", "2", "/", "scale_factor", ",", "compat", "=", "3", ")", "\n", "d", ".", "addPairwiseBilateral", "(", "sxy", "=", "50", "/", "scale_factor", ",", "srgb", "=", "5", ",", "rgbim", "=", "np", ".", "copy", "(", "img_c", ")", ",", "compat", "=", "10", ")", "\n", "Q", "=", "d", ".", "inference", "(", "t", ")", "\n", "\n", "return", "np", ".", "array", "(", "Q", ")", ".", "reshape", "(", "(", "n_labels", ",", "h", ",", "w", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.train_with_nocrf": [[241, 266], ["model.train", "optimizer.zero_grad", "model", "x.permute.view", "x.permute.permute", "torch.interpolate", "labels.clone", "labels.clone", "critersion", "critersion", "loss_train.backward", "optimizer.step", "print", "features.cuda", "adj.cuda", "aff_cropping.cuda", "labels.clone.cuda", "labels.clone.cuda", "loss_train.item", "critersion.item", "critersion.item"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.train", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.PolyOptimizer.step"], ["", "def", "train_with_nocrf", "(", "epoch", ",", "model", ",", "features", ",", "adj", ",", "labels", ",", "critersion", ",", "f_h", ",", "f_w", ",", "aff_cropping", ",", "optimizer", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "x", ",", "fts", "=", "model", "(", "features", ".", "cuda", "(", ")", ",", "adj", ".", "cuda", "(", ")", ",", "aff_cropping", ".", "cuda", "(", ")", ")", "\n", "label_b", ",", "label_w", ",", "label_h", "=", "labels", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "1", ",", "f_h", ",", "f_w", ",", "21", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "pred", "=", "F", ".", "interpolate", "(", "x", ",", "[", "label_w", ",", "label_h", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "bg_label", "=", "labels", ".", "clone", "(", ")", "\n", "fg_label", "=", "labels", ".", "clone", "(", ")", "\n", "bg_label", "[", "labels", "!=", "0", "]", "=", "255", "\n", "fg_label", "[", "labels", "==", "0", "]", "=", "255", "\n", "\n", "bgloss", "=", "critersion", "(", "pred", ",", "bg_label", ".", "cuda", "(", ")", ")", "\n", "fgloss", "=", "critersion", "(", "pred", ",", "fg_label", ".", "cuda", "(", ")", ")", "\n", "loss_train", "=", "bgloss", "+", "fgloss", "\n", "\n", "loss_train", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'Epoch: {:04d}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "\n", "'loss_train: {:.4f}'", ".", "format", "(", "loss_train", ".", "item", "(", ")", ")", ",", "\n", "'bg_loss: {:.4f}'", ".", "format", "(", "bgloss", ".", "item", "(", ")", ")", ",", "\n", "'fg_loss:{:.4f}'", ".", "format", "(", "fgloss", ".", "item", "(", ")", ")", ")", "\n", "return", "loss_train", ",", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.mytool.train_with_crf": [[268, 300], ["model.train", "optimizer.zero_grad", "model", "x.permute.view", "x.permute.permute", "torch.softmax", "torch.interpolate", "densecrflosslayer", "labels.clone", "labels.clone", "critersion", "critersion", "loss_train.backward", "optimizer.step", "print", "features.cuda", "adj.cuda", "aff_cropping.cuda", "labels.clone.cuda", "labels.clone.cuda", "loss_train.item", "critersion.item", "critersion.item", "crfloss.item"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.train", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.PolyOptimizer.step"], ["", "def", "train_with_crf", "(", "epoch", ",", "model", ",", "features", ",", "adj", ",", "labels", ",", "critersion", ",", "f_h", ",", "f_w", ",", "densecrflosslayer", ",", "normalized_input", ",", "aff_cropping", ",", "\n", "optimizer", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "x", ",", "_", "=", "model", "(", "features", ".", "cuda", "(", ")", ",", "adj", ".", "cuda", "(", ")", ",", "aff_cropping", ".", "cuda", "(", ")", ")", "\n", "label_b", ",", "label_w", ",", "label_h", "=", "labels", ".", "shape", "\n", "x", "=", "x", ".", "view", "(", "1", ",", "f_h", ",", "f_w", ",", "21", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", "\n", "pred_soft", "=", "F", ".", "softmax", "(", "x", ",", "dim", "=", "1", ")", "\n", "pred", "=", "F", ".", "interpolate", "(", "x", ",", "[", "label_w", ",", "label_h", "]", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "\n", "out_gatedcrf", "=", "densecrflosslayer", "(", "pred_soft", ",", "[", "{", "'weight'", ":", "1", ",", "'xy'", ":", "6", ",", "'rgb'", ":", "0.1", "}", "]", ",", "5", ",", "normalized_input", ",", "f_h", ",", "f_w", ",", "mask_src", "=", "None", ")", "\n", "crfloss", "=", "out_gatedcrf", "[", "'loss'", "]", "\n", "\n", "bg_label", "=", "labels", ".", "clone", "(", ")", "\n", "fg_label", "=", "labels", ".", "clone", "(", ")", "\n", "bg_label", "[", "labels", "!=", "0", "]", "=", "255", "\n", "fg_label", "[", "labels", "==", "0", "]", "=", "255", "\n", "\n", "bgloss", "=", "critersion", "(", "pred", ",", "bg_label", ".", "cuda", "(", ")", ")", "\n", "fgloss", "=", "critersion", "(", "pred", ",", "fg_label", ".", "cuda", "(", ")", ")", "\n", "\n", "loss_train", "=", "bgloss", "+", "fgloss", "+", "0.3", "*", "crfloss", "\n", "\n", "loss_train", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "print", "(", "'Epoch: {:04d}'", ".", "format", "(", "epoch", "+", "1", ")", ",", "\n", "'loss_train: {:.4f}'", ".", "format", "(", "loss_train", ".", "item", "(", ")", ")", ",", "\n", "'bg_loss: {:.4f}'", ".", "format", "(", "bgloss", ".", "item", "(", ")", ")", ",", "\n", "'fg_loss:{:.4f}'", ".", "format", "(", "fgloss", ".", "item", "(", ")", ")", ",", "\n", "'crf_loss:{:.4f}'", ".", "format", "(", "crfloss", ".", "item", "(", ")", ")", ")", "\n", "return", "loss_train", ",", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF.forward": [[19, 117], ["model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._create_kernels", "model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._unfold", "y_hat_softmax.dim", "model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF.forward.resize_fix_mask"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._create_kernels", "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_aff_gated._unfold"], ["def", "forward", "(", "\n", "self", ",", "y_hat_softmax", ",", "kernels_desc", ",", "kernels_radius", ",", "sample", ",", "height_input", ",", "width_input", ",", "\n", "mask_src", "=", "None", ",", "mask_dst", "=", "None", ",", "compatibility", "=", "None", ",", "custom_modality_downsamplers", "=", "None", ",", "out_kernels_vis", "=", "False", "\n", ")", ":", "\n", "        ", "\"\"\"\n        Performs the forward pass of the loss.\n        :param y_hat_softmax: A tensor of predicted per-pixel class probabilities of size NxCxHxW\n        :param kernels_desc: A list of dictionaries, each describing one Gaussian kernel composition from modalities.\n            The final kernel is a weighted sum of individual kernels. Following example is a composition of\n            RGBXY and XY kernels:\n            kernels_desc: [{\n                'weight': 0.9,          # Weight of RGBXY kernel\n                'xy': 6,                # Sigma for XY\n                'rgb': 0.1,             # Sigma for RGB\n            },{\n                'weight': 0.1,          # Weight of XY kernel\n                'xy': 6,                # Sigma for XY\n            }]\n        :param kernels_radius: Defines size of bounding box region around each pixel in which the kernel is constructed.\n        :param sample: A dictionary with modalities (except 'xy') used in kernels_desc parameter. Each of the provided\n            modalities is allowed to be larger than the shape of y_hat_softmax, in such case downsampling will be\n            invoked. Default downsampling method is area resize; this can be overriden by setting.\n            custom_modality_downsamplers parameter.\n        :param width_input, height_input: Dimensions of the full scale resolution of modalities\n        :param mask_src: (optional) Source mask.\n        :param mask_dst: (optional) Destination mask.\n        :param compatibility: (optional) Classes compatibility matrix, defaults to Potts model.\n        :param custom_modality_downsamplers: A dictionary of modality downsampling functions.\n        :param out_kernels_vis: Whether to return a tensor with kernels visualized with some step.\n        :return: Loss function value.\n        \"\"\"", "\n", "assert", "y_hat_softmax", ".", "dim", "(", ")", "==", "4", ",", "'Prediction must be a NCHW batch'", "\n", "N", ",", "C", ",", "height_pred", ",", "width_pred", "=", "y_hat_softmax", ".", "shape", "\n", "device", "=", "y_hat_softmax", ".", "device", "\n", "\n", "assert", "width_input", "%", "width_pred", "==", "0", "and", "height_input", "%", "height_pred", "==", "0", "and", "width_input", "*", "height_pred", "==", "height_input", "*", "width_pred", ",", "f'[{width_input}x{height_input}] !~= [{width_pred}x{height_pred}]'", "\n", "\n", "kernels", "=", "self", ".", "_create_kernels", "(", "\n", "kernels_desc", ",", "kernels_radius", ",", "sample", ",", "N", ",", "height_pred", ",", "width_pred", ",", "device", ",", "custom_modality_downsamplers", "\n", ")", "\n", "\n", "denom", "=", "N", "*", "height_pred", "*", "width_pred", "\n", "\n", "def", "resize_fix_mask", "(", "mask", ",", "name", ")", ":", "\n", "            ", "assert", "mask", ".", "dim", "(", ")", "==", "4", "and", "mask", ".", "shape", "[", ":", "2", "]", "==", "(", "N", ",", "1", ")", "and", "mask", ".", "dtype", "==", "torch", ".", "float32", ",", "f'{name} mask must be a NCHW batch with C=1 and dtype float32'", "\n", "if", "mask", ".", "shape", "[", "2", ":", "]", "!=", "(", "height_pred", ",", "width_pred", ")", ":", "\n", "                ", "mask", "=", "ModelLossSemsegGatedCRF", ".", "_downsample", "(", "\n", "mask", ",", "'mask'", ",", "height_pred", ",", "width_pred", ",", "custom_modality_downsamplers", "\n", ")", "\n", "", "mask", "[", "mask", "!=", "mask", "]", "=", "0.0", "# handle NaN", "\n", "mask", "[", "mask", "<", "1.0", "]", "=", "0.0", "# handle edges of mask after interpolation", "\n", "return", "mask", "\n", "\n", "", "if", "mask_src", "is", "not", "None", ":", "\n", "            ", "mask_src", "=", "resize_fix_mask", "(", "mask_src", ",", "'Source'", ")", "\n", "denom", "=", "mask_src", ".", "sum", "(", ")", ".", "clamp", "(", "min", "=", "1", ")", "\n", "mask_src", "=", "self", ".", "_unfold", "(", "mask_src", ",", "kernels_radius", ")", "\n", "kernels", "=", "kernels", "*", "mask_src", "\n", "\n", "", "if", "mask_dst", "is", "not", "None", ":", "\n", "            ", "mask_dst", "=", "resize_fix_mask", "(", "mask_dst", ",", "'Destination'", ")", "\n", "denom", "=", "mask_dst", ".", "sum", "(", ")", ".", "clamp", "(", "min", "=", "1", ")", "\n", "mask_dst", "=", "mask_dst", ".", "view", "(", "N", ",", "1", ",", "1", ",", "1", ",", "height_pred", ",", "width_pred", ")", "\n", "kernels", "=", "kernels", "*", "mask_dst", "\n", "\n", "", "y_hat_unfolded", "=", "self", ".", "_unfold", "(", "y_hat_softmax", ",", "kernels_radius", ")", "\n", "\n", "product_kernel_x_y_hat", "=", "(", "kernels", "*", "y_hat_unfolded", ")", ".", "view", "(", "N", ",", "C", ",", "(", "kernels_radius", "*", "2", "+", "1", ")", "**", "2", ",", "height_pred", ",", "width_pred", ")", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "False", ")", "\n", "\n", "if", "compatibility", "is", "None", ":", "\n", "# Using shortcut for Pott's class compatibility model", "\n", "            ", "loss", "=", "-", "(", "product_kernel_x_y_hat", "*", "y_hat_softmax", ")", ".", "sum", "(", ")", "\n", "loss", "=", "kernels", ".", "sum", "(", ")", "+", "loss", "# comment out to save computation, total loss may go below 0", "\n", "", "else", ":", "\n", "            ", "assert", "compatibility", ".", "shape", "==", "(", "C", ",", "C", ")", ",", "f'Compatibility matrix expected shape [{C}x{C}]'", "\n", "assert", "(", "compatibility", "<", "0", ")", ".", "int", "(", ")", ".", "sum", "(", ")", "==", "0", ",", "'Compatibility matrix must not have negative values'", "\n", "assert", "compatibility", ".", "diag", ".", "sum", "(", ")", "==", "0", ",", "'Compatibility matrix diagonal must be 0'", "\n", "compat", "=", "(", "C", "-", "1", ")", "*", "F", ".", "normalize", "(", "compatibility", ".", "float", "(", ")", ".", "to", "(", "device", ")", ",", "p", "=", "1", ",", "dim", "=", "1", ")", "\n", "y_hat_CxNHW", "=", "y_hat_softmax", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "C", ",", "-", "1", ")", "\n", "product_kernel_x_y_hat_NHWxC", "=", "product_kernel_x_y_hat", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "C", ")", "\n", "product_CxC", "=", "torch", ".", "mm", "(", "y_hat_CxNHW", ",", "product_kernel_x_y_hat_NHWxC", ")", "\n", "loss", "=", "(", "compat", "*", "product_CxC", ")", ".", "sum", "(", ")", "\n", "\n", "", "out", "=", "{", "\n", "'loss'", ":", "loss", "/", "denom", ",", "\n", "}", "\n", "\n", "if", "out_kernels_vis", ":", "\n", "            ", "out", "[", "'kernels_vis'", "]", "=", "self", ".", "_visualize_kernels", "(", "\n", "kernels", ",", "kernels_radius", ",", "height_input", ",", "width_input", ",", "height_pred", ",", "width_pred", "\n", ")", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._downsample": [[118, 125], ["f_down"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_downsample", "(", "img", ",", "modality", ",", "height_dst", ",", "width_dst", ",", "custom_modality_downsamplers", ")", ":", "\n", "        ", "if", "custom_modality_downsamplers", "is", "not", "None", "and", "modality", "in", "custom_modality_downsamplers", ":", "\n", "            ", "f_down", "=", "custom_modality_downsamplers", "[", "modality", "]", "\n", "", "else", ":", "\n", "            ", "f_down", "=", "F", ".", "adaptive_avg_pool2d", "\n", "", "return", "f_down", "(", "img", ",", "(", "height_dst", ",", "width_dst", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._create_kernels": [[126, 152], ["enumerate", "desc.items", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.append", "torch.cat.append", "model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._create_kernels_from_features", "model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._get_mesh", "model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._downsample"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._create_kernels_from_features", "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._get_mesh", "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._downsample"], ["", "@", "staticmethod", "\n", "def", "_create_kernels", "(", "\n", "kernels_desc", ",", "kernels_radius", ",", "sample", ",", "N", ",", "height_pred", ",", "width_pred", ",", "device", ",", "custom_modality_downsamplers", "\n", ")", ":", "\n", "        ", "kernels", "=", "None", "\n", "for", "i", ",", "desc", "in", "enumerate", "(", "kernels_desc", ")", ":", "\n", "            ", "weight", "=", "desc", "[", "'weight'", "]", "\n", "features", "=", "[", "]", "\n", "for", "modality", ",", "sigma", "in", "desc", ".", "items", "(", ")", ":", "\n", "                ", "if", "modality", "==", "'weight'", ":", "\n", "                    ", "continue", "\n", "", "if", "modality", "==", "'xy'", ":", "\n", "                    ", "feature", "=", "ModelLossSemsegGatedCRF", ".", "_get_mesh", "(", "N", ",", "height_pred", ",", "width_pred", ",", "device", ")", "\n", "", "else", ":", "\n", "                    ", "assert", "modality", "in", "sample", ",", "f'Modality {modality} is listed in {i}-th kernel descriptor, but not present in the sample'", "\n", "feature", "=", "sample", "[", "modality", "]", "\n", "feature", "=", "ModelLossSemsegGatedCRF", ".", "_downsample", "(", "\n", "feature", ",", "modality", ",", "height_pred", ",", "width_pred", ",", "custom_modality_downsamplers", "\n", ")", "\n", "", "feature", "/=", "sigma", "\n", "features", ".", "append", "(", "feature", ")", "\n", "", "features", "=", "torch", ".", "cat", "(", "features", ",", "dim", "=", "1", ")", "\n", "kernel", "=", "weight", "*", "ModelLossSemsegGatedCRF", ".", "_create_kernels_from_features", "(", "features", ",", "kernels_radius", ")", "\n", "kernels", "=", "kernel", "if", "kernels", "is", "None", "else", "kernel", "+", "kernels", "\n", "", "return", "kernels", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._create_kernels_from_features": [[153, 162], ["model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._unfold", "features.dim", "kernels[].view"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_aff_gated._unfold"], ["", "@", "staticmethod", "\n", "def", "_create_kernels_from_features", "(", "features", ",", "radius", ")", ":", "\n", "        ", "assert", "features", ".", "dim", "(", ")", "==", "4", ",", "'Features must be a NCHW batch'", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "features", ".", "shape", "\n", "kernels", "=", "ModelLossSemsegGatedCRF", ".", "_unfold", "(", "features", ",", "radius", ")", "\n", "kernels", "=", "kernels", "-", "kernels", "[", ":", ",", ":", ",", "radius", ",", "radius", ",", ":", ",", ":", "]", ".", "view", "(", "N", ",", "C", ",", "1", ",", "1", ",", "H", ",", "W", ")", "\n", "kernels", "=", "(", "-", "0.5", "*", "kernels", "**", "2", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "exp", "(", ")", "\n", "kernels", "[", ":", ",", ":", ",", "radius", ",", "radius", ",", ":", ",", ":", "]", "=", "0", "\n", "return", "kernels", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._get_mesh": [[163, 169], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view().repeat", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_get_mesh", "(", "N", ",", "H", ",", "W", ",", "device", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "(", "\n", "torch", ".", "arange", "(", "0", ",", "W", ",", "1", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", ".", "view", "(", "1", ",", "1", ",", "1", ",", "W", ")", ".", "repeat", "(", "N", ",", "1", ",", "H", ",", "1", ")", ",", "\n", "torch", ".", "arange", "(", "0", ",", "H", ",", "1", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "device", ")", ".", "view", "(", "1", ",", "1", ",", "H", ",", "1", ")", ".", "repeat", "(", "N", ",", "1", ",", "1", ",", "W", ")", "\n", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._unfold": [[170, 176], ["torch.unfold().view", "torch.unfold().view", "img.dim", "torch.unfold", "torch.unfold"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_unfold", "(", "img", ",", "radius", ")", ":", "\n", "        ", "assert", "img", ".", "dim", "(", ")", "==", "4", ",", "'Unfolding requires NCHW batch'", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "img", ".", "shape", "\n", "diameter", "=", "2", "*", "radius", "+", "1", "\n", "return", "F", ".", "unfold", "(", "img", ",", "diameter", ",", "1", ",", "radius", ")", ".", "view", "(", "N", ",", "C", ",", "diameter", ",", "diameter", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.None.model_loss_semseg_gatedcrf.ModelLossSemsegGatedCRF._visualize_kernels": [[177, 191], ["torch.pad.permute().contiguous().view", "torch.interpolate", "torch.interpolate", "torch.pad", "torch.pad", "torch.pad.permute().contiguous", "torch.pad.permute"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_visualize_kernels", "(", "kernels", ",", "radius", ",", "height_input", ",", "width_input", ",", "height_pred", ",", "width_pred", ")", ":", "\n", "        ", "diameter", "=", "2", "*", "radius", "+", "1", "\n", "vis", "=", "kernels", "[", ":", ",", ":", ",", ":", ",", ":", ",", "radius", ":", ":", "diameter", ",", "radius", ":", ":", "diameter", "]", "\n", "vis_nh", ",", "vis_nw", "=", "vis", ".", "shape", "[", "-", "2", ":", "]", "\n", "vis", "=", "vis", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "5", ",", "3", ")", ".", "contiguous", "(", ")", ".", "view", "(", "kernels", ".", "shape", "[", "0", "]", ",", "1", ",", "diameter", "*", "vis_nh", ",", "diameter", "*", "vis_nw", ")", "\n", "if", "vis", ".", "shape", "[", "2", "]", ">", "height_pred", ":", "\n", "            ", "vis", "=", "vis", "[", ":", ",", ":", ",", ":", "height_pred", ",", ":", "]", "\n", "", "if", "vis", ".", "shape", "[", "3", "]", ">", "width_pred", ":", "\n", "            ", "vis", "=", "vis", "[", ":", ",", ":", ",", ":", ",", ":", "width_pred", "]", "\n", "", "if", "vis", ".", "shape", "[", "2", ":", "]", "!=", "(", "height_pred", ",", "width_pred", ")", ":", "\n", "            ", "vis", "=", "F", ".", "pad", "(", "vis", ",", "[", "0", ",", "width_pred", "-", "vis", ".", "shape", "[", "3", "]", ",", "0", ",", "height_pred", "-", "vis", ".", "shape", "[", "2", "]", "]", ")", "\n", "", "vis", "=", "F", ".", "interpolate", "(", "vis", ",", "(", "height_input", ",", "width_input", ")", ",", "mode", "=", "'nearest'", ")", "\n", "return", "vis", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_cls.Net.__init__": [[9, 19], ["super().__init__", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "dropout7", "=", "torch", ".", "nn", ".", "Dropout2d", "(", "0.5", ")", "\n", "\n", "self", ".", "fc8", "=", "nn", ".", "Conv2d", "(", "4096", ",", "20", ",", "1", ",", "bias", "=", "False", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc8", ".", "weight", ")", "\n", "\n", "self", ".", "not_training", "=", "[", "]", "\n", "self", ".", "from_scratch_layers", "=", "[", "self", ".", "fc8", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_cls.Net.forward": [[20, 32], ["super().forward", "x.view.view.clone", "resnet38_cls.Net.dropout7", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet38_cls.Net.fc8", "x.view.view.view", "x.view.view.size", "x.view.view.size", "x.view.view.size"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "super", "(", ")", ".", "forward", "(", "x", ")", "\n", "features", "=", "x", ".", "clone", "(", ")", "\n", "x", "=", "self", ".", "dropout7", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "avg_pool2d", "(", "\n", "x", ",", "kernel_size", "=", "(", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", ",", "padding", "=", "0", ")", "\n", "\n", "x", "=", "self", ".", "fc8", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n", "return", "features", ",", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_cls.Net.forward_cam": [[33, 40], ["super().forward", "torch.conv2d", "torch.conv2d", "torch.conv2d", "torch.relu", "torch.relu", "torch.relu"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.forward"], ["", "def", "forward_cam", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "super", "(", ")", ".", "forward", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "conv2d", "(", "x", ",", "self", ".", "fc8", ".", "weight", ")", "\n", "x", "=", "F", ".", "relu", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_cls.Net.get_parameter_groups": [[41, 62], ["resnet38_cls.Net.modules", "isinstance", "groups[].append", "groups[].append", "groups[].append", "groups[].append"], "methods", ["None"], ["", "def", "get_parameter_groups", "(", "self", ")", ":", "\n", "        ", "groups", "=", "(", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "\n", "                ", "if", "m", ".", "weight", ".", "requires_grad", ":", "\n", "                    ", "if", "m", "in", "self", ".", "from_scratch_layers", ":", "\n", "                        ", "groups", "[", "2", "]", ".", "append", "(", "m", ".", "weight", ")", "\n", "", "else", ":", "\n", "                        ", "groups", "[", "0", "]", ".", "append", "(", "m", ".", "weight", ")", "\n", "\n", "", "", "if", "m", ".", "bias", "is", "not", "None", "and", "m", ".", "bias", ".", "requires_grad", ":", "\n", "\n", "                    ", "if", "m", "in", "self", ".", "from_scratch_layers", ":", "\n", "                        ", "groups", "[", "3", "]", ".", "append", "(", "m", ".", "bias", ")", "\n", "", "else", ":", "\n", "                        ", "groups", "[", "1", "]", ".", "append", "(", "m", ".", "bias", ")", "\n", "\n", "", "", "", "", "return", "groups", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_aff_gated.Net.__init__": [[18, 39], ["super().__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.kaiming_normal_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "int"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "f8_3", "=", "torch", ".", "nn", ".", "Conv2d", "(", "512", ",", "64", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "f8_4", "=", "torch", ".", "nn", ".", "Conv2d", "(", "1024", ",", "128", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "f8_5", "=", "torch", ".", "nn", ".", "Conv2d", "(", "4096", ",", "256", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "f9", "=", "torch", ".", "nn", ".", "Conv2d", "(", "448", ",", "448", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "f8_3", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "f8_4", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "kaiming_normal_", "(", "self", ".", "f8_5", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "f9", ".", "weight", ",", "gain", "=", "4", ")", "\n", "\n", "self", ".", "not_training", "=", "[", "self", ".", "conv1a", ",", "self", ".", "b2", ",", "self", ".", "b2_1", ",", "self", ".", "b2_2", "]", "\n", "\n", "self", ".", "from_scratch_layers", "=", "[", "self", ".", "f8_3", ",", "self", ".", "f8_4", ",", "self", ".", "f8_5", ",", "self", ".", "f9", "]", "\n", "\n", "self", ".", "predefined_featuresize", "=", "int", "(", "448", "//", "8", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_aff_gated.Net.forward": [[40, 59], ["super().forward_as_dict", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.elu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "resnet38_aff_gated._unfold", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "resnet38_aff_gated.Net.f8_3", "resnet38_aff_gated.Net.f8_4", "resnet38_aff_gated.Net.f8_5", "resnet38_aff_gated.Net.f9", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "aff_crf[].view"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.forward_as_dict", "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_aff_gated._unfold"], ["", "def", "forward", "(", "self", ",", "x", ",", "radius", "=", "4", ",", "to_dense", "=", "False", ")", ":", "\n", "\n", "        ", "d", "=", "super", "(", ")", ".", "forward_as_dict", "(", "x", ")", "\n", "\n", "f8_3", "=", "F", ".", "elu", "(", "self", ".", "f8_3", "(", "d", "[", "'conv4'", "]", ")", ")", "\n", "f8_4", "=", "F", ".", "elu", "(", "self", ".", "f8_4", "(", "d", "[", "'conv5'", "]", ")", ")", "\n", "f8_5", "=", "F", ".", "elu", "(", "self", ".", "f8_5", "(", "d", "[", "'conv6'", "]", ")", ")", "\n", "x", "=", "F", ".", "elu", "(", "self", ".", "f9", "(", "torch", ".", "cat", "(", "[", "f8_3", ",", "f8_4", ",", "f8_5", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "features", "=", "torch", ".", "cat", "(", "[", "d", "[", "'conv4'", "]", ",", "d", "[", "'conv5'", "]", ",", "d", "[", "'conv6'", "]", "]", ",", "dim", "=", "1", ")", "\n", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "shape", "\n", "\n", "aff_crf", "=", "_unfold", "(", "x", ",", "radius", "=", "radius", ")", "\n", "aff_crf", "=", "torch", ".", "abs", "(", "aff_crf", "-", "aff_crf", "[", ":", ",", ":", ",", "radius", ",", "radius", ",", ":", ",", ":", "]", ".", "view", "(", "N", ",", "C", ",", "1", ",", "1", ",", "H", ",", "W", ")", ")", "\n", "aff_crf", "=", "torch", ".", "mean", "(", "aff_crf", ",", "dim", "=", "1", ")", "\n", "\n", "aff", "=", "torch", ".", "exp", "(", "-", "aff_crf", ")", "\n", "\n", "return", "features", ",", "aff", ",", "aff_crf", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_aff_gated.Net.get_parameter_groups": [[61, 82], ["resnet38_aff_gated.Net.modules", "isinstance", "isinstance", "groups[].append", "groups[].append", "groups[].append", "groups[].append"], "methods", ["None"], ["", "def", "get_parameter_groups", "(", "self", ")", ":", "\n", "        ", "groups", "=", "(", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "\n", "            ", "if", "(", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "modules", ".", "normalization", ".", "GroupNorm", ")", ")", ":", "\n", "\n", "                ", "if", "m", ".", "weight", ".", "requires_grad", ":", "\n", "                    ", "if", "m", "in", "self", ".", "from_scratch_layers", ":", "\n", "                        ", "groups", "[", "2", "]", ".", "append", "(", "m", ".", "weight", ")", "\n", "", "else", ":", "\n", "                        ", "groups", "[", "0", "]", ".", "append", "(", "m", ".", "weight", ")", "\n", "\n", "", "", "if", "m", ".", "bias", "is", "not", "None", "and", "m", ".", "bias", ".", "requires_grad", ":", "\n", "\n", "                    ", "if", "m", "in", "self", ".", "from_scratch_layers", ":", "\n", "                        ", "groups", "[", "3", "]", ".", "append", "(", "m", ".", "bias", ")", "\n", "", "else", ":", "\n", "                        ", "groups", "[", "1", "]", ".", "append", "(", "m", ".", "bias", ")", "\n", "\n", "", "", "", "", "return", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38_aff_gated._unfold": [[10, 15], ["torch.unfold().view", "img.dim", "torch.unfold"], "function", ["None"], ["def", "_unfold", "(", "img", ",", "radius", ")", ":", "\n", "    ", "assert", "img", ".", "dim", "(", ")", "==", "4", ",", "'Unfolding requires NCHW batch'", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "img", ".", "shape", "\n", "diameter", "=", "2", "*", "radius", "+", "1", "\n", "return", "F", ".", "unfold", "(", "img", ",", "diameter", ",", "1", ",", "radius", ")", ".", "view", "(", "N", ",", "C", ",", "diameter", ",", "diameter", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.ResBlock.__init__": [[8, 26], ["torch.nn.Module.__init__", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "mid_channels", ",", "out_channels", ",", "stride", "=", "1", ",", "first_dilation", "=", "None", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "same_shape", "=", "(", "in_channels", "==", "out_channels", "and", "stride", "==", "1", ")", "\n", "\n", "if", "first_dilation", "==", "None", ":", "first_dilation", "=", "dilation", "\n", "\n", "self", ".", "bn_branch2a", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "\n", "self", ".", "conv_branch2a", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "mid_channels", ",", "3", ",", "stride", ",", "\n", "padding", "=", "first_dilation", ",", "dilation", "=", "first_dilation", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "bn_branch2b1", "=", "nn", ".", "BatchNorm2d", "(", "mid_channels", ")", "\n", "\n", "self", ".", "conv_branch2b1", "=", "nn", ".", "Conv2d", "(", "mid_channels", ",", "out_channels", ",", "3", ",", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "\n", "if", "not", "self", ".", "same_shape", ":", "\n", "            ", "self", ".", "conv_branch1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.ResBlock.forward": [[27, 50], ["resnet38d.ResBlock.bn_branch2a", "torch.relu", "torch.relu", "resnet38d.ResBlock.conv_branch2a", "resnet38d.ResBlock.bn_branch2b1", "torch.relu", "torch.relu", "resnet38d.ResBlock.conv_branch2b1", "resnet38d.ResBlock.conv_branch1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "get_x_bn_relu", "=", "False", ")", ":", "\n", "\n", "        ", "branch2", "=", "self", ".", "bn_branch2a", "(", "x", ")", "\n", "branch2", "=", "F", ".", "relu", "(", "branch2", ")", "\n", "\n", "x_bn_relu", "=", "branch2", "\n", "\n", "if", "not", "self", ".", "same_shape", ":", "\n", "            ", "branch1", "=", "self", ".", "conv_branch1", "(", "branch2", ")", "\n", "", "else", ":", "\n", "            ", "branch1", "=", "x", "\n", "\n", "", "branch2", "=", "self", ".", "conv_branch2a", "(", "branch2", ")", "\n", "branch2", "=", "self", ".", "bn_branch2b1", "(", "branch2", ")", "\n", "branch2", "=", "F", ".", "relu", "(", "branch2", ")", "\n", "branch2", "=", "self", ".", "conv_branch2b1", "(", "branch2", ")", "\n", "\n", "x", "=", "branch1", "+", "branch2", "\n", "\n", "if", "get_x_bn_relu", ":", "\n", "            ", "return", "x", ",", "x_bn_relu", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.ResBlock.__call__": [[51, 53], ["resnet38d.ResBlock.forward"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.forward"], ["", "def", "__call__", "(", "self", ",", "x", ",", "get_x_bn_relu", "=", "False", ")", ":", "\n", "        ", "return", "self", ".", "forward", "(", "x", ",", "get_x_bn_relu", "=", "get_x_bn_relu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.ResBlock_bot.__init__": [[55, 73], ["torch.nn.Module.__init__", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Dropout2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "stride", "=", "1", ",", "dilation", "=", "1", ",", "dropout", "=", "0.", ")", ":", "\n", "        ", "super", "(", "ResBlock_bot", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "same_shape", "=", "(", "in_channels", "==", "out_channels", "and", "stride", "==", "1", ")", "\n", "\n", "self", ".", "bn_branch2a", "=", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", "\n", "self", ".", "conv_branch2a", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", "//", "4", ",", "1", ",", "stride", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "bn_branch2b1", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", "//", "4", ")", "\n", "self", ".", "dropout_2b1", "=", "torch", ".", "nn", ".", "Dropout2d", "(", "dropout", ")", "\n", "self", ".", "conv_branch2b1", "=", "nn", ".", "Conv2d", "(", "out_channels", "//", "4", ",", "out_channels", "//", "2", ",", "3", ",", "padding", "=", "dilation", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "bn_branch2b2", "=", "nn", ".", "BatchNorm2d", "(", "out_channels", "//", "2", ")", "\n", "self", ".", "dropout_2b2", "=", "torch", ".", "nn", ".", "Dropout2d", "(", "dropout", ")", "\n", "self", ".", "conv_branch2b2", "=", "nn", ".", "Conv2d", "(", "out_channels", "//", "2", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "if", "not", "self", ".", "same_shape", ":", "\n", "            ", "self", ".", "conv_branch1", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.ResBlock_bot.forward": [[74, 100], ["resnet38d.ResBlock_bot.bn_branch2a", "torch.relu", "torch.relu", "resnet38d.ResBlock_bot.conv_branch1", "resnet38d.ResBlock_bot.conv_branch2a", "resnet38d.ResBlock_bot.bn_branch2b1", "torch.relu", "torch.relu", "resnet38d.ResBlock_bot.dropout_2b1", "resnet38d.ResBlock_bot.conv_branch2b1", "resnet38d.ResBlock_bot.bn_branch2b2", "torch.relu", "torch.relu", "resnet38d.ResBlock_bot.dropout_2b2", "resnet38d.ResBlock_bot.conv_branch2b2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "get_x_bn_relu", "=", "False", ")", ":", "\n", "\n", "        ", "branch2", "=", "self", ".", "bn_branch2a", "(", "x", ")", "\n", "branch2", "=", "F", ".", "relu", "(", "branch2", ")", "\n", "x_bn_relu", "=", "branch2", "\n", "\n", "branch1", "=", "self", ".", "conv_branch1", "(", "branch2", ")", "\n", "\n", "branch2", "=", "self", ".", "conv_branch2a", "(", "branch2", ")", "\n", "\n", "branch2", "=", "self", ".", "bn_branch2b1", "(", "branch2", ")", "\n", "branch2", "=", "F", ".", "relu", "(", "branch2", ")", "\n", "branch2", "=", "self", ".", "dropout_2b1", "(", "branch2", ")", "\n", "branch2", "=", "self", ".", "conv_branch2b1", "(", "branch2", ")", "\n", "\n", "branch2", "=", "self", ".", "bn_branch2b2", "(", "branch2", ")", "\n", "branch2", "=", "F", ".", "relu", "(", "branch2", ")", "\n", "branch2", "=", "self", ".", "dropout_2b2", "(", "branch2", ")", "\n", "branch2", "=", "self", ".", "conv_branch2b2", "(", "branch2", ")", "\n", "\n", "x", "=", "branch1", "+", "branch2", "\n", "\n", "if", "get_x_bn_relu", ":", "\n", "            ", "return", "x", ",", "x_bn_relu", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.ResBlock_bot.__call__": [[101, 103], ["resnet38d.ResBlock_bot.forward"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.forward"], ["", "def", "__call__", "(", "self", ",", "x", ",", "get_x_bn_relu", "=", "False", ")", ":", "\n", "        ", "return", "self", ".", "forward", "(", "x", ",", "get_x_bn_relu", "=", "get_x_bn_relu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Normalize.__init__": [[105, 109], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", ",", "std", "=", "(", "0.229", ",", "0.224", ",", "0.225", ")", ")", ":", "\n", "\n", "        ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "std", "=", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Normalize.__call__": [[110, 119], ["numpy.asarray", "numpy.empty_like"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "imgarr", "=", "np", ".", "asarray", "(", "img", ")", "\n", "proc_img", "=", "np", ".", "empty_like", "(", "imgarr", ",", "np", ".", "float32", ")", "\n", "\n", "proc_img", "[", "...", ",", "0", "]", "=", "(", "imgarr", "[", "...", ",", "0", "]", "/", "255.", "-", "self", ".", "mean", "[", "0", "]", ")", "/", "self", ".", "std", "[", "0", "]", "\n", "proc_img", "[", "...", ",", "1", "]", "=", "(", "imgarr", "[", "...", ",", "1", "]", "/", "255.", "-", "self", ".", "mean", "[", "1", "]", ")", "/", "self", ".", "std", "[", "1", "]", "\n", "proc_img", "[", "...", ",", "2", "]", "=", "(", "imgarr", "[", "...", ",", "2", "]", "/", "255.", "-", "self", ".", "mean", "[", "2", "]", ")", "/", "self", ".", "std", "[", "2", "]", "\n", "\n", "return", "proc_img", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.__init__": [[121, 156], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock", "resnet38d.ResBlock_bot", "resnet38d.ResBlock_bot", "torch.nn.BatchNorm2d", "torch.nn.BatchNorm2d", "resnet38d.Normalize"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1a", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "b2", "=", "ResBlock", "(", "64", ",", "128", ",", "128", ",", "stride", "=", "2", ")", "\n", "self", ".", "b2_1", "=", "ResBlock", "(", "128", ",", "128", ",", "128", ")", "\n", "self", ".", "b2_2", "=", "ResBlock", "(", "128", ",", "128", ",", "128", ")", "\n", "\n", "self", ".", "b3", "=", "ResBlock", "(", "128", ",", "256", ",", "256", ",", "stride", "=", "2", ")", "\n", "self", ".", "b3_1", "=", "ResBlock", "(", "256", ",", "256", ",", "256", ")", "\n", "self", ".", "b3_2", "=", "ResBlock", "(", "256", ",", "256", ",", "256", ")", "\n", "\n", "self", ".", "b4", "=", "ResBlock", "(", "256", ",", "512", ",", "512", ",", "stride", "=", "2", ")", "\n", "self", ".", "b4_1", "=", "ResBlock", "(", "512", ",", "512", ",", "512", ")", "\n", "self", ".", "b4_2", "=", "ResBlock", "(", "512", ",", "512", ",", "512", ")", "\n", "self", ".", "b4_3", "=", "ResBlock", "(", "512", ",", "512", ",", "512", ")", "\n", "self", ".", "b4_4", "=", "ResBlock", "(", "512", ",", "512", ",", "512", ")", "\n", "self", ".", "b4_5", "=", "ResBlock", "(", "512", ",", "512", ",", "512", ")", "\n", "\n", "self", ".", "b5", "=", "ResBlock", "(", "512", ",", "512", ",", "1024", ",", "stride", "=", "1", ",", "first_dilation", "=", "1", ",", "dilation", "=", "2", ")", "\n", "self", ".", "b5_1", "=", "ResBlock", "(", "1024", ",", "512", ",", "1024", ",", "dilation", "=", "2", ")", "\n", "self", ".", "b5_2", "=", "ResBlock", "(", "1024", ",", "512", ",", "1024", ",", "dilation", "=", "2", ")", "\n", "\n", "self", ".", "b6", "=", "ResBlock_bot", "(", "1024", ",", "2048", ",", "stride", "=", "1", ",", "dilation", "=", "4", ",", "dropout", "=", "0.3", ")", "\n", "\n", "self", ".", "b7", "=", "ResBlock_bot", "(", "2048", ",", "4096", ",", "dilation", "=", "4", ",", "dropout", "=", "0.5", ")", "\n", "\n", "self", ".", "bn7", "=", "nn", ".", "BatchNorm2d", "(", "4096", ")", "\n", "\n", "self", ".", "not_training", "=", "[", "]", "\n", "\n", "self", ".", "normalize", "=", "Normalize", "(", ")", "\n", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.forward": [[157, 159], ["resnet38d.Net.forward_as_dict"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.forward_as_dict"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "forward_as_dict", "(", "x", ")", "[", "'conv6'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.forward_as_dict": [[160, 188], ["resnet38d.Net.conv1a", "resnet38d.Net.b2", "resnet38d.Net.b2_1", "resnet38d.Net.b2_2", "resnet38d.Net.b3", "resnet38d.Net.b3_1", "resnet38d.Net.b3_2", "resnet38d.Net.b4", "resnet38d.Net.b4_1", "resnet38d.Net.b4_2", "resnet38d.Net.b4_3", "resnet38d.Net.b4_4", "resnet38d.Net.b4_5", "resnet38d.Net.b5", "resnet38d.Net.b5_1", "resnet38d.Net.b5_2", "resnet38d.Net.b6", "resnet38d.Net.b7", "torch.relu", "torch.relu", "dict", "resnet38d.Net.bn7"], "methods", ["None"], ["", "def", "forward_as_dict", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1a", "(", "x", ")", "\n", "\n", "x", ",", "conv1", "=", "self", ".", "b2", "(", "x", ",", "get_x_bn_relu", "=", "True", ")", "\n", "x", "=", "self", ".", "b2_1", "(", "x", ")", "\n", "x", "=", "self", ".", "b2_2", "(", "x", ")", "\n", "\n", "x", ",", "conv2", "=", "self", ".", "b3", "(", "x", ",", "get_x_bn_relu", "=", "True", ")", "\n", "x", "=", "self", ".", "b3_1", "(", "x", ")", "\n", "x", "=", "self", ".", "b3_2", "(", "x", ")", "\n", "\n", "x", ",", "conv3", "=", "self", ".", "b4", "(", "x", ",", "get_x_bn_relu", "=", "True", ")", "\n", "x", "=", "self", ".", "b4_1", "(", "x", ")", "\n", "x", "=", "self", ".", "b4_2", "(", "x", ")", "\n", "x", "=", "self", ".", "b4_3", "(", "x", ")", "\n", "x", "=", "self", ".", "b4_4", "(", "x", ")", "\n", "x", "=", "self", ".", "b4_5", "(", "x", ")", "\n", "\n", "x", ",", "conv4", "=", "self", ".", "b5", "(", "x", ",", "get_x_bn_relu", "=", "True", ")", "\n", "x", "=", "self", ".", "b5_1", "(", "x", ")", "\n", "x", "=", "self", ".", "b5_2", "(", "x", ")", "\n", "\n", "x", ",", "conv5", "=", "self", ".", "b6", "(", "x", ",", "get_x_bn_relu", "=", "True", ")", "\n", "x", "=", "self", ".", "b7", "(", "x", ")", "\n", "\n", "conv6", "=", "F", ".", "relu", "(", "self", ".", "bn7", "(", "x", ")", ")", "\n", "\n", "return", "dict", "(", "{", "'conv1'", ":", "conv1", ",", "'conv2'", ":", "conv2", ",", "'conv3'", ":", "conv3", ",", "'conv4'", ":", "conv4", ",", "'conv5'", ":", "conv5", ",", "'conv6'", ":", "conv6", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.train": [[190, 213], ["super().train", "resnet38d.Net.modules", "isinstance", "isinstance", "isinstance", "layer.eval", "layer.children"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.Net.train"], ["", "def", "train", "(", "self", ",", "mode", "=", "True", ")", ":", "\n", "\n", "        ", "super", "(", ")", ".", "train", "(", "mode", ")", "\n", "\n", "for", "layer", "in", "self", ".", "not_training", ":", "\n", "\n", "            ", "if", "isinstance", "(", "layer", ",", "torch", ".", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "layer", ".", "weight", ".", "requires_grad", "=", "False", "\n", "\n", "", "elif", "isinstance", "(", "layer", ",", "torch", ".", "nn", ".", "Module", ")", ":", "\n", "                ", "for", "c", "in", "layer", ".", "children", "(", ")", ":", "\n", "                    ", "c", ".", "weight", ".", "requires_grad", "=", "False", "\n", "if", "c", ".", "bias", "is", "not", "None", ":", "\n", "                        ", "c", ".", "bias", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "", "", "for", "layer", "in", "self", ".", "modules", "(", ")", ":", "\n", "\n", "            ", "if", "isinstance", "(", "layer", ",", "torch", ".", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "layer", ".", "eval", "(", ")", "\n", "layer", ".", "bias", ".", "requires_grad", "=", "False", "\n", "layer", ".", "weight", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.network.resnet38d.convert_mxnet_to_torch": [[214, 263], ["mxnet.nd.load", "dict", "mxnet.nd.load.items", "torch.from_numpy", "torch.from_numpy", "k.split", "torch.from_numpy.asnumpy", "pt_name.append", "pt_name.append", "pt_name.append", "pt_name.append"], "function", ["None"], ["", "", "def", "convert_mxnet_to_torch", "(", "filename", ")", ":", "\n", "    ", "import", "mxnet", "\n", "\n", "save_dict", "=", "mxnet", ".", "nd", ".", "load", "(", "filename", ")", "\n", "\n", "renamed_dict", "=", "dict", "(", ")", "\n", "\n", "bn_param_mx_pt", "=", "{", "'beta'", ":", "'bias'", ",", "'gamma'", ":", "'weight'", ",", "'mean'", ":", "'running_mean'", ",", "'var'", ":", "'running_var'", "}", "\n", "\n", "for", "k", ",", "v", "in", "save_dict", ".", "items", "(", ")", ":", "\n", "\n", "        ", "v", "=", "torch", ".", "from_numpy", "(", "v", ".", "asnumpy", "(", ")", ")", "\n", "toks", "=", "k", ".", "split", "(", "'_'", ")", "\n", "\n", "if", "'conv1a'", "in", "toks", "[", "0", "]", ":", "\n", "            ", "renamed_dict", "[", "'conv1a.weight'", "]", "=", "v", "\n", "\n", "", "elif", "'linear1000'", "in", "toks", "[", "0", "]", ":", "\n", "            ", "pass", "\n", "\n", "", "elif", "'branch'", "in", "toks", "[", "1", "]", ":", "\n", "\n", "            ", "pt_name", "=", "[", "]", "\n", "\n", "if", "toks", "[", "0", "]", "[", "-", "1", "]", "!=", "'a'", ":", "\n", "                ", "pt_name", ".", "append", "(", "'b'", "+", "toks", "[", "0", "]", "[", "-", "3", "]", "+", "'_'", "+", "toks", "[", "0", "]", "[", "-", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "pt_name", ".", "append", "(", "'b'", "+", "toks", "[", "0", "]", "[", "-", "2", "]", ")", "\n", "\n", "", "if", "'res'", "in", "toks", "[", "0", "]", ":", "\n", "                ", "layer_type", "=", "'conv'", "\n", "last_name", "=", "'weight'", "\n", "\n", "", "else", ":", "# 'bn' in toks[0]:", "\n", "                ", "layer_type", "=", "'bn'", "\n", "last_name", "=", "bn_param_mx_pt", "[", "toks", "[", "-", "1", "]", "]", "\n", "\n", "", "pt_name", ".", "append", "(", "layer_type", "+", "'_'", "+", "toks", "[", "1", "]", ")", "\n", "\n", "pt_name", ".", "append", "(", "last_name", ")", "\n", "\n", "torch_name", "=", "'.'", ".", "join", "(", "pt_name", ")", "\n", "renamed_dict", "[", "torch_name", "]", "=", "v", "\n", "\n", "", "else", ":", "\n", "            ", "last_name", "=", "bn_param_mx_pt", "[", "toks", "[", "-", "1", "]", "]", "\n", "renamed_dict", "[", "'bn7.'", "+", "last_name", "]", "=", "v", "\n", "\n", "", "", "return", "renamed_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.PolyOptimizer.__init__": [[12, 20], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "params", ",", "lr", ",", "weight_decay", ",", "max_step", ",", "momentum", "=", "0.9", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "params", ",", "lr", ",", "weight_decay", ")", "\n", "\n", "self", ".", "global_step", "=", "0", "\n", "self", ".", "max_step", "=", "max_step", "\n", "self", ".", "momentum", "=", "momentum", "\n", "\n", "self", ".", "__initial_lr", "=", "[", "group", "[", "'lr'", "]", "for", "group", "in", "self", ".", "param_groups", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.PolyOptimizer.step": [[22, 33], ["super().step", "range", "len"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.PolyOptimizer.step"], ["", "def", "step", "(", "self", ",", "closure", "=", "None", ")", ":", "\n", "\n", "        ", "if", "self", ".", "global_step", "<", "self", ".", "max_step", ":", "\n", "            ", "lr_mult", "=", "(", "1", "-", "self", ".", "global_step", "/", "self", ".", "max_step", ")", "**", "self", ".", "momentum", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "param_groups", ")", ")", ":", "\n", "                ", "self", ".", "param_groups", "[", "i", "]", "[", "'lr'", "]", "=", "self", ".", "__initial_lr", "[", "i", "]", "*", "lr_mult", "\n", "\n", "", "", "super", "(", ")", ".", "step", "(", "closure", ")", "\n", "\n", "self", ".", "global_step", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.BatchNorm2dFixed.__init__": [[37, 45], ["super().__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torchutils.BatchNorm2dFixed.register_buffer", "torchutils.BatchNorm2dFixed.register_buffer", "torch.Tensor", "torch.Tensor", "torch.zeros", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "eps", "=", "1e-5", ")", ":", "\n", "        ", "super", "(", "BatchNorm2dFixed", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_features", "=", "num_features", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "self", ".", "bias", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "ones", "(", "num_features", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.BatchNorm2dFixed.forward": [[47, 52], ["F.batch_norm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\n", "        ", "return", "F", ".", "batch_norm", "(", "\n", "input", ",", "self", ".", "running_mean", ",", "self", ".", "running_var", ",", "self", ".", "weight", ",", "self", ".", "bias", ",", "\n", "False", ",", "eps", "=", "self", ".", "eps", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.BatchNorm2dFixed.__call__": [[53, 55], ["torchutils.BatchNorm2dFixed.forward"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.forward"], ["", "def", "__call__", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "forward", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.SegmentationDataset.__init__": [[58, 72], ["open().read().splitlines", "open().read", "open"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "img_name_list_path", ",", "img_dir", ",", "label_dir", ",", "rescale", "=", "None", ",", "flip", "=", "False", ",", "cropsize", "=", "None", ",", "\n", "img_transform", "=", "None", ",", "mask_transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "img_name_list_path", "=", "img_name_list_path", "\n", "self", ".", "img_dir", "=", "img_dir", "\n", "self", ".", "label_dir", "=", "label_dir", "\n", "\n", "self", ".", "img_transform", "=", "img_transform", "\n", "self", ".", "mask_transform", "=", "mask_transform", "\n", "\n", "self", ".", "img_name_list", "=", "open", "(", "self", ".", "img_name_list_path", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "\n", "self", ".", "rescale", "=", "rescale", "\n", "self", ".", "flip", "=", "flip", "\n", "self", ".", "cropsize", "=", "cropsize", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.SegmentationDataset.__len__": [[73, 75], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_name_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.SegmentationDataset.__getitem__": [[76, 106], ["PIL.Image.open().convert", "PIL.Image.open", "numpy.transpose", "os.path.join", "numpy.flip().copy.resize", "numpy.flip().copy.resize", "torchutils.SegmentationDataset.img_transform", "torchutils.SegmentationDataset.mask_transform", "tool.imutils.random_crop", "tool.imutils.RescaleNearest", "bool", "numpy.flip().copy", "numpy.flip().copy", "PIL.Image.open", "random.getrandbits", "os.path.join", "random.random", "round", "round", "numpy.flip", "numpy.flip"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.random_crop", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.flip", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.flip"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "        ", "name", "=", "self", ".", "img_name_list", "[", "idx", "]", "\n", "\n", "img", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "img_dir", ",", "name", "+", "'.jpg'", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "mask", "=", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "label_dir", ",", "name", "+", "'.png'", ")", ")", "\n", "\n", "if", "self", ".", "rescale", "is", "not", "None", ":", "\n", "            ", "s", "=", "self", ".", "rescale", "[", "0", "]", "+", "random", ".", "random", "(", ")", "*", "(", "self", ".", "rescale", "[", "1", "]", "-", "self", ".", "rescale", "[", "0", "]", ")", "\n", "adj_size", "=", "(", "round", "(", "img", ".", "size", "[", "0", "]", "*", "s", "/", "8", ")", "*", "8", ",", "round", "(", "img", ".", "size", "[", "1", "]", "*", "s", "/", "8", ")", "*", "8", ")", "\n", "img", "=", "img", ".", "resize", "(", "adj_size", ",", "resample", "=", "Image", ".", "CUBIC", ")", "\n", "mask", "=", "img", ".", "resize", "(", "adj_size", ",", "resample", "=", "Image", ".", "NEAREST", ")", "\n", "\n", "", "if", "self", ".", "img_transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "img_transform", "(", "img", ")", "\n", "", "if", "self", ".", "mask_transform", "is", "not", "None", ":", "\n", "            ", "mask", "=", "self", ".", "mask_transform", "(", "mask", ")", "\n", "\n", "", "if", "self", ".", "cropsize", "is", "not", "None", ":", "\n", "            ", "img", ",", "mask", "=", "imutils", ".", "random_crop", "(", "[", "img", ",", "mask", "]", ",", "self", ".", "cropsize", ",", "(", "0", ",", "255", ")", ")", "\n", "\n", "", "mask", "=", "imutils", ".", "RescaleNearest", "(", "0.125", ")", "(", "mask", ")", "\n", "\n", "if", "self", ".", "flip", "is", "True", "and", "bool", "(", "random", ".", "getrandbits", "(", "1", ")", ")", ":", "\n", "            ", "img", "=", "np", ".", "flip", "(", "img", ",", "1", ")", ".", "copy", "(", ")", "\n", "mask", "=", "np", ".", "flip", "(", "mask", ",", "1", ")", ".", "copy", "(", ")", "\n", "\n", "", "img", "=", "np", ".", "transpose", "(", "img", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n", "return", "name", ",", "img", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.ExtractAffinityLabelInRadius.__init__": [[110, 128], ["range", "range", "torchutils.ExtractAffinityLabelInRadius.search_dist.append", "range", "torchutils.ExtractAffinityLabelInRadius.search_dist.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cropsize", ",", "radius", "=", "5", ")", ":", "\n", "        ", "self", ".", "radius", "=", "radius", "\n", "\n", "self", ".", "search_dist", "=", "[", "]", "\n", "\n", "for", "x", "in", "range", "(", "1", ",", "radius", ")", ":", "\n", "            ", "self", ".", "search_dist", ".", "append", "(", "(", "0", ",", "x", ")", ")", "\n", "\n", "", "for", "y", "in", "range", "(", "1", ",", "radius", ")", ":", "\n", "            ", "for", "x", "in", "range", "(", "-", "radius", "+", "1", ",", "radius", ")", ":", "\n", "                ", "if", "x", "*", "x", "+", "y", "*", "y", "<", "radius", "*", "radius", ":", "\n", "                    ", "self", ".", "search_dist", ".", "append", "(", "(", "y", ",", "x", ")", ")", "\n", "\n", "", "", "", "self", ".", "radius_floor", "=", "radius", "-", "1", "\n", "\n", "self", ".", "crop_height", "=", "cropsize", "-", "self", ".", "radius_floor", "\n", "self", ".", "crop_width", "=", "cropsize", "-", "2", "*", "self", ".", "radius_floor", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.ExtractAffinityLabelInRadius.__call__": [[129, 159], ["numpy.reshape", "numpy.expand_dims", "numpy.stack", "numpy.stack", "numpy.equal", "numpy.logical_and().astype", "numpy.logical_and().astype", "numpy.logical_and().astype", "numpy.reshape", "numpy.logical_and", "labels_to_list.append", "valid_pair_list.append", "numpy.less", "numpy.less", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.equal", "numpy.logical_and", "numpy.logical_not", "numpy.not_equal"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "label", ")", ":", "\n", "\n", "        ", "labels_from", "=", "label", "[", ":", "-", "self", ".", "radius_floor", ",", "self", ".", "radius_floor", ":", "-", "self", ".", "radius_floor", "]", "\n", "labels_from", "=", "np", ".", "reshape", "(", "labels_from", ",", "[", "-", "1", "]", ")", "\n", "\n", "labels_to_list", "=", "[", "]", "\n", "valid_pair_list", "=", "[", "]", "\n", "\n", "for", "dy", ",", "dx", "in", "self", ".", "search_dist", ":", "\n", "            ", "labels_to", "=", "label", "[", "dy", ":", "dy", "+", "self", ".", "crop_height", ",", "self", ".", "radius_floor", "+", "dx", ":", "self", ".", "radius_floor", "+", "dx", "+", "self", ".", "crop_width", "]", "\n", "labels_to", "=", "np", ".", "reshape", "(", "labels_to", ",", "[", "-", "1", "]", ")", "\n", "\n", "valid_pair", "=", "np", ".", "logical_and", "(", "np", ".", "less", "(", "labels_to", ",", "255", ")", ",", "np", ".", "less", "(", "labels_from", ",", "255", ")", ")", "\n", "\n", "labels_to_list", ".", "append", "(", "labels_to", ")", "\n", "valid_pair_list", ".", "append", "(", "valid_pair", ")", "\n", "\n", "", "bc_labels_from", "=", "np", ".", "expand_dims", "(", "labels_from", ",", "0", ")", "\n", "concat_labels_to", "=", "np", ".", "stack", "(", "labels_to_list", ")", "\n", "concat_valid_pair", "=", "np", ".", "stack", "(", "valid_pair_list", ")", "\n", "\n", "pos_affinity_label", "=", "np", ".", "equal", "(", "bc_labels_from", ",", "concat_labels_to", ")", "\n", "\n", "bg_pos_affinity_label", "=", "np", ".", "logical_and", "(", "pos_affinity_label", ",", "np", ".", "equal", "(", "bc_labels_from", ",", "0", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "fg_pos_affinity_label", "=", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "pos_affinity_label", ",", "np", ".", "not_equal", "(", "bc_labels_from", ",", "0", ")", ")", ",", "concat_valid_pair", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "neg_affinity_label", "=", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "pos_affinity_label", ")", ",", "concat_valid_pair", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "return", "bg_pos_affinity_label", ",", "fg_pos_affinity_label", ",", "neg_affinity_label", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.AffinityFromMaskDataset.__init__": [[161, 168], ["torchutils.SegmentationDataset.__init__", "torchutils.ExtractAffinityLabelInRadius"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_name_list_path", ",", "img_dir", ",", "label_dir", ",", "rescale", "=", "None", ",", "flip", "=", "False", ",", "cropsize", "=", "None", ",", "\n", "img_transform", "=", "None", ",", "mask_transform", "=", "None", ",", "radius", "=", "5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "img_name_list_path", ",", "img_dir", ",", "label_dir", ",", "rescale", ",", "flip", ",", "cropsize", ",", "img_transform", ",", "mask_transform", ")", "\n", "\n", "self", ".", "radius", "=", "radius", "\n", "\n", "self", ".", "extract_aff_lab_func", "=", "ExtractAffinityLabelInRadius", "(", "cropsize", "=", "cropsize", "//", "8", ",", "radius", "=", "radius", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.torchutils.AffinityFromMaskDataset.__getitem__": [[169, 175], ["torchutils.SegmentationDataset.__getitem__", "torchutils.AffinityFromMaskDataset.extract_aff_lab_func"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset_NoExtract.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "name", ",", "img", ",", "mask", "=", "super", "(", ")", ".", "__getitem__", "(", "idx", ")", "\n", "\n", "aff_label", "=", "self", ".", "extract_aff_lab_func", "(", "mask", ")", "\n", "\n", "return", "name", ",", "img", ",", "aff_label", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.read_file": [[6, 12], ["open", "img_list.append"], "function", ["None"], ["def", "read_file", "(", "path_to_file", ")", ":", "\n", "    ", "with", "open", "(", "path_to_file", ")", "as", "f", ":", "\n", "        ", "img_list", "=", "[", "]", "\n", "for", "line", "in", "f", ":", "\n", "            ", "img_list", ".", "append", "(", "line", "[", ":", "-", "1", "]", ")", "\n", "", "", "return", "img_list", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.chunker": [[14, 16], ["range", "len"], "function", ["None"], ["", "def", "chunker", "(", "seq", ",", "size", ")", ":", "\n", "    ", "return", "(", "seq", "[", "pos", ":", "pos", "+", "size", "]", "for", "pos", "in", "range", "(", "0", ",", "len", "(", "seq", ")", ",", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.resize_label_batch": [[18, 25], ["numpy.zeros", "torch.nn.UpsamplingBilinear2d", "torch.autograd.Variable", "torch.nn.UpsamplingBilinear2d.data.numpy().transpose", "torch.from_numpy", "label.transpose", "torch.nn.UpsamplingBilinear2d.data.numpy", "torch.nn.UpsamplingBilinear2d."], "function", ["None"], ["", "def", "resize_label_batch", "(", "label", ",", "size", ")", ":", "\n", "    ", "label_resized", "=", "np", ".", "zeros", "(", "(", "size", ",", "size", ",", "1", ",", "label", ".", "shape", "[", "3", "]", ")", ")", "\n", "interp", "=", "torch", ".", "nn", ".", "UpsamplingBilinear2d", "(", "size", "=", "(", "size", ",", "size", ")", ")", "\n", "labelVar", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "from_numpy", "(", "label", ".", "transpose", "(", "3", ",", "2", ",", "0", ",", "1", ")", ")", ")", "\n", "label_resized", "[", ":", ",", ":", ",", ":", ",", ":", "]", "=", "interp", "(", "labelVar", ")", ".", "data", ".", "numpy", "(", ")", ".", "transpose", "(", "2", ",", "3", ",", "1", ",", "0", ")", "\n", "label_resized", "[", "label_resized", ">", "21", "]", "=", "255", "\n", "return", "label_resized", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.flip": [[27, 32], ["numpy.fliplr"], "function", ["None"], ["", "def", "flip", "(", "I", ",", "flip_p", ")", ":", "\n", "    ", "if", "flip_p", ">", "0.5", ":", "\n", "        ", "return", "np", ".", "fliplr", "(", "I", ")", "\n", "", "else", ":", "\n", "        ", "return", "I", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.scale_im": [[34, 37], ["cv2.resize().astype", "int", "int", "cv2.resize"], "function", ["None"], ["", "", "def", "scale_im", "(", "img_temp", ",", "scale", ")", ":", "\n", "    ", "new_dims", "=", "(", "int", "(", "img_temp", ".", "shape", "[", "1", "]", "*", "scale", ")", ",", "int", "(", "img_temp", ".", "shape", "[", "0", "]", "*", "scale", ")", ")", "\n", "return", "cv2", ".", "resize", "(", "img_temp", ",", "new_dims", ")", ".", "astype", "(", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.scale_gt": [[39, 42], ["cv2.resize().astype", "int", "int", "cv2.resize"], "function", ["None"], ["", "def", "scale_gt", "(", "img_temp", ",", "scale", ")", ":", "\n", "    ", "new_dims", "=", "(", "int", "(", "img_temp", ".", "shape", "[", "1", "]", "*", "scale", ")", ",", "int", "(", "img_temp", ".", "shape", "[", "0", "]", "*", "scale", ")", ")", "\n", "return", "cv2", ".", "resize", "(", "img_temp", ",", "new_dims", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", ".", "astype", "(", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.load_image_label_list_from_npy": [[43, 48], ["numpy.load().item", "numpy.load"], "function", ["None"], ["", "def", "load_image_label_list_from_npy", "(", "img_name_list", ")", ":", "\n", "\n", "    ", "cls_labels_dict", "=", "np", ".", "load", "(", "'voc12/cls_labels.npy'", ")", ".", "item", "(", ")", "\n", "\n", "return", "[", "cls_labels_dict", "[", "img_name", "]", "for", "img_name", "in", "img_name_list", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.RandomCrop": [[49, 83], ["min", "min", "numpy.zeros", "numpy.zeros", "numpy.zeros", "random.randrange", "random.randrange", "random.randrange", "random.randrange"], "function", ["None"], ["", "def", "RandomCrop", "(", "imgarr", ",", "gt", ",", "cropsize", ")", ":", "\n", "\n", "    ", "h", ",", "w", ",", "c", "=", "imgarr", ".", "shape", "\n", "\n", "ch", "=", "min", "(", "cropsize", ",", "h", ")", "\n", "cw", "=", "min", "(", "cropsize", ",", "w", ")", "\n", "\n", "w_space", "=", "w", "-", "cropsize", "\n", "h_space", "=", "h", "-", "cropsize", "\n", "\n", "if", "w_space", ">", "0", ":", "\n", "        ", "cont_left", "=", "0", "\n", "img_left", "=", "random", ".", "randrange", "(", "w_space", "+", "1", ")", "\n", "", "else", ":", "\n", "        ", "cont_left", "=", "random", ".", "randrange", "(", "-", "w_space", "+", "1", ")", "\n", "img_left", "=", "0", "\n", "\n", "", "if", "h_space", ">", "0", ":", "\n", "        ", "cont_top", "=", "0", "\n", "img_top", "=", "random", ".", "randrange", "(", "h_space", "+", "1", ")", "\n", "", "else", ":", "\n", "        ", "cont_top", "=", "random", ".", "randrange", "(", "-", "h_space", "+", "1", ")", "\n", "img_top", "=", "0", "\n", "\n", "", "img_container", "=", "np", ".", "zeros", "(", "(", "cropsize", ",", "cropsize", ",", "imgarr", ".", "shape", "[", "-", "1", "]", ")", ",", "np", ".", "float32", ")", "\n", "gt_container", "=", "np", ".", "zeros", "(", "(", "cropsize", ",", "cropsize", ")", ",", "np", ".", "float32", ")", "\n", "cropping", "=", "np", ".", "zeros", "(", "(", "cropsize", ",", "cropsize", ")", ",", "np", ".", "bool", ")", "\n", "\n", "img_container", "[", "cont_top", ":", "cont_top", "+", "ch", ",", "cont_left", ":", "cont_left", "+", "cw", "]", "=", "imgarr", "[", "img_top", ":", "img_top", "+", "ch", ",", "img_left", ":", "img_left", "+", "cw", "]", "\n", "gt_container", "[", "cont_top", ":", "cont_top", "+", "ch", ",", "cont_left", ":", "cont_left", "+", "cw", "]", "=", "gt", "[", "img_top", ":", "img_top", "+", "ch", ",", "img_left", ":", "img_left", "+", "cw", "]", "\n", "cropping", "[", "cont_top", ":", "cont_top", "+", "ch", ",", "cont_left", ":", "cont_left", "+", "cw", "]", "=", "1", "\n", "return", "img_container", ",", "gt_container", ",", "cropping", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.generate_original_images": [[85, 94], ["numpy.zeros_like", "range", "images_temp[].transpose", "images_temp[].transpose.transpose"], "function", ["None"], ["", "def", "generate_original_images", "(", "images_temp", ",", "batch_size", ")", ":", "\n", "    ", "ori_images", "=", "np", ".", "zeros_like", "(", "images_temp", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "img_temp", "=", "images_temp", "[", "i", "]", ".", "transpose", "(", "1", ",", "2", ",", "0", ")", "\n", "img_temp", "[", ":", ",", ":", ",", "0", "]", "=", "(", "img_temp", "[", ":", ",", ":", ",", "0", "]", "*", "0.229", "+", "0.485", ")", "*", "255.", "\n", "img_temp", "[", ":", ",", ":", ",", "1", "]", "=", "(", "img_temp", "[", ":", ",", ":", ",", "1", "]", "*", "0.224", "+", "0.456", ")", "*", "255.", "\n", "img_temp", "[", ":", ",", ":", ",", "2", "]", "=", "(", "img_temp", "[", ":", ",", ":", ",", "2", "]", "*", "0.225", "+", "0.406", ")", "*", "255.", "\n", "ori_images", "[", "i", "]", "=", "img_temp", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "", "return", "ori_images", "", "", ""]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Logger.__init__": [[7, 11], ["open"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "outfile", ")", ":", "\n", "        ", "self", ".", "terminal", "=", "sys", ".", "stdout", "\n", "self", ".", "log", "=", "open", "(", "outfile", ",", "\"w\"", ")", "\n", "sys", ".", "stdout", "=", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Logger.write": [[12, 15], ["pyutils.Logger.terminal.write", "pyutils.Logger.log.write"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Logger.write", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Logger.write"], ["", "def", "write", "(", "self", ",", "message", ")", ":", "\n", "        ", "self", ".", "terminal", ".", "write", "(", "message", ")", "\n", "self", ".", "log", ".", "write", "(", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Logger.flush": [[16, 18], ["pyutils.Logger.terminal.flush"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Logger.flush"], ["", "def", "flush", "(", "self", ")", ":", "\n", "        ", "self", ".", "terminal", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.AverageMeter.__init__": [[21, 25], ["dict"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "keys", ")", ":", "\n", "        ", "self", ".", "__data", "=", "dict", "(", ")", "\n", "for", "k", "in", "keys", ":", "\n", "            ", "self", ".", "__data", "[", "k", "]", "=", "[", "0.0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.AverageMeter.add": [[26, 30], ["dict.items"], "methods", ["None"], ["", "", "def", "add", "(", "self", ",", "dict", ")", ":", "\n", "        ", "for", "k", ",", "v", "in", "dict", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "__data", "[", "k", "]", "[", "0", "]", "+=", "v", "\n", "self", ".", "__data", "[", "k", "]", "[", "1", "]", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.AverageMeter.get": [[31, 37], ["len", "tuple"], "methods", ["None"], ["", "", "def", "get", "(", "self", ",", "*", "keys", ")", ":", "\n", "        ", "if", "len", "(", "keys", ")", "==", "1", ":", "\n", "            ", "return", "self", ".", "__data", "[", "keys", "[", "0", "]", "]", "[", "0", "]", "/", "self", ".", "__data", "[", "keys", "[", "0", "]", "]", "[", "1", "]", "\n", "", "else", ":", "\n", "            ", "v_list", "=", "[", "self", ".", "__data", "[", "k", "]", "[", "0", "]", "/", "self", ".", "__data", "[", "k", "]", "[", "1", "]", "for", "k", "in", "keys", "]", "\n", "return", "tuple", "(", "v_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.AverageMeter.pop": [[38, 46], ["pyutils.AverageMeter.__data.keys", "pyutils.AverageMeter.get"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.AverageMeter.get"], ["", "", "def", "pop", "(", "self", ",", "key", "=", "None", ")", ":", "\n", "        ", "if", "key", "is", "None", ":", "\n", "            ", "for", "k", "in", "self", ".", "__data", ".", "keys", "(", ")", ":", "\n", "                ", "self", ".", "__data", "[", "k", "]", "=", "[", "0.0", ",", "0", "]", "\n", "", "", "else", ":", "\n", "            ", "v", "=", "self", ".", "get", "(", "key", ")", "\n", "self", ".", "__data", "[", "key", "]", "=", "[", "0.0", ",", "0", "]", "\n", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Timer.__init__": [[49, 55], ["time.time", "print", "time.ctime", "time.time"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "starting_msg", "=", "None", ")", ":", "\n", "        ", "self", ".", "start", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "stage_start", "=", "self", ".", "start", "\n", "\n", "if", "starting_msg", "is", "not", "None", ":", "\n", "            ", "print", "(", "starting_msg", ",", "time", ".", "ctime", "(", "time", ".", "time", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Timer.update_progress": [[57, 62], ["int", "time.time"], "methods", ["None"], ["", "", "def", "update_progress", "(", "self", ",", "progress", ")", ":", "\n", "        ", "self", ".", "elapsed", "=", "time", ".", "time", "(", ")", "-", "self", ".", "start", "\n", "self", ".", "est_total", "=", "self", ".", "elapsed", "/", "progress", "\n", "self", ".", "est_remaining", "=", "self", ".", "est_total", "-", "self", ".", "elapsed", "\n", "self", ".", "est_finish", "=", "int", "(", "self", ".", "start", "+", "self", ".", "est_total", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Timer.str_est_finish": [[64, 66], ["str", "time.ctime"], "methods", ["None"], ["", "def", "str_est_finish", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "time", ".", "ctime", "(", "self", ".", "est_finish", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Timer.get_stage_elapsed": [[67, 69], ["time.time"], "methods", ["None"], ["", "def", "get_stage_elapsed", "(", "self", ")", ":", "\n", "        ", "return", "time", ".", "time", "(", ")", "-", "self", ".", "stage_start", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.Timer.reset_stage": [[70, 72], ["time.time"], "methods", ["None"], ["", "def", "reset_stage", "(", "self", ")", ":", "\n", "        ", "self", ".", "stage_start", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.BatchThreader.__init__": [[78, 91], ["multiprocessing.pool.ThreadPool", "len", "pyutils.BatchThreader.__start_works", "pyutils.BatchThreader.__get_n_pending_works"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.BatchThreader.__start_works", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.BatchThreader.__get_n_pending_works"], ["    ", "def", "__init__", "(", "self", ",", "func", ",", "args_list", ",", "batch_size", ",", "prefetch_size", "=", "4", ",", "processes", "=", "12", ")", ":", "\n", "        ", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "prefetch_size", "=", "prefetch_size", "\n", "\n", "self", ".", "pool", "=", "ThreadPool", "(", "processes", "=", "processes", ")", "\n", "self", ".", "async_result", "=", "[", "]", "\n", "\n", "self", ".", "func", "=", "func", "\n", "self", ".", "left_args_list", "=", "args_list", "\n", "self", ".", "n_tasks", "=", "len", "(", "args_list", ")", "\n", "\n", "# initial work", "\n", "self", ".", "__start_works", "(", "self", ".", "__get_n_pending_works", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.BatchThreader.__start_works": [[93, 98], ["range", "pyutils.BatchThreader.left_args_list.pop", "pyutils.BatchThreader.async_result.append", "pyutils.BatchThreader.pool.apply_async"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.AverageMeter.pop"], ["", "def", "__start_works", "(", "self", ",", "times", ")", ":", "\n", "        ", "for", "_", "in", "range", "(", "times", ")", ":", "\n", "            ", "args", "=", "self", ".", "left_args_list", ".", "pop", "(", "0", ")", "\n", "self", ".", "async_result", ".", "append", "(", "\n", "self", ".", "pool", ".", "apply_async", "(", "self", ".", "func", ",", "args", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.BatchThreader.__get_n_pending_works": [[100, 103], ["min", "len", "len"], "methods", ["None"], ["", "", "def", "__get_n_pending_works", "(", "self", ")", ":", "\n", "        ", "return", "min", "(", "(", "self", ".", "prefetch_size", "+", "1", ")", "*", "self", ".", "batch_size", "-", "len", "(", "self", ".", "async_result", ")", "\n", ",", "len", "(", "self", ".", "left_args_list", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.BatchThreader.pop_results": [[106, 121], ["len", "min", "pyutils.BatchThreader.__get_n_pending_works", "pyutils.BatchThreader.async_result.pop().get", "pyutils.BatchThreader.pool.close", "pyutils.BatchThreader.__start_works", "range", "pyutils.BatchThreader.async_result.pop"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.BatchThreader.__get_n_pending_works", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.AverageMeter.get", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.BatchThreader.__start_works", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.AverageMeter.pop"], ["", "def", "pop_results", "(", "self", ")", ":", "\n", "\n", "        ", "n_inwork", "=", "len", "(", "self", ".", "async_result", ")", "\n", "\n", "n_fetch", "=", "min", "(", "n_inwork", ",", "self", ".", "batch_size", ")", "\n", "rtn", "=", "[", "self", ".", "async_result", ".", "pop", "(", "0", ")", ".", "get", "(", ")", "\n", "for", "_", "in", "range", "(", "n_fetch", ")", "]", "\n", "\n", "to_fill", "=", "self", ".", "__get_n_pending_works", "(", ")", "\n", "if", "to_fill", "==", "0", ":", "\n", "            ", "self", ".", "pool", ".", "close", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "__start_works", "(", "to_fill", ")", "\n", "\n", "", "return", "rtn", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.get_indices_of_pairs": [[123, 169], ["range", "range", "numpy.reshape", "numpy.reshape", "numpy.concatenate", "search_dist.append", "range", "numpy.arange", "numpy.reshape", "indices_to_list.append", "search_dist.append"], "function", ["None"], ["", "", "def", "get_indices_of_pairs", "(", "radius", ",", "size", ")", ":", "\n", "\n", "    ", "search_dist", "=", "[", "]", "\n", "\n", "for", "x", "in", "range", "(", "1", ",", "radius", ")", ":", "\n", "        ", "search_dist", ".", "append", "(", "(", "0", ",", "x", ")", ")", "\n", "", "for", "y", "in", "range", "(", "1", ",", "radius", ")", ":", "\n", "        ", "for", "x", "in", "range", "(", "-", "radius", "+", "1", ",", "radius", ")", ":", "\n", "            ", "if", "x", "*", "x", "+", "y", "*", "y", "<", "radius", "*", "radius", ":", "\n", "                ", "search_dist", ".", "append", "(", "(", "y", ",", "x", ")", ")", "\n", "# for y in range(1, radius):", "\n", "#     for x in range(-radius + 1, radius):", "\n", "#         if np.abs(x) == np.abs(y) or x == 0:", "\n", "#             search_dist.append((y, x))", "\n", "\n", "# for y in range(1, radius):", "\n", "#     for x in range(-radius+1, radius):", "\n", "#         if x*x + y*y < radius*radius:", "\n", "#             if x*x + y*y < 25:", "\n", "#                 search_dist.append((y, x))", "\n", "#             elif np.abs(x) == np.abs(y) or x == 0:", "\n", "#                 search_dist.append((y, x))", "\n", "\n", "", "", "", "radius_floor", "=", "radius", "-", "1", "\n", "\n", "full_indices", "=", "np", ".", "reshape", "(", "np", ".", "arange", "(", "0", ",", "size", "[", "0", "]", "*", "size", "[", "1", "]", ",", "dtype", "=", "np", ".", "int64", ")", ",", "\n", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "\n", "cropped_height", "=", "size", "[", "0", "]", "-", "radius_floor", "\n", "cropped_width", "=", "size", "[", "1", "]", "-", "2", "*", "radius_floor", "\n", "\n", "indices_from", "=", "np", ".", "reshape", "(", "full_indices", "[", ":", "-", "radius_floor", ",", "radius_floor", ":", "-", "radius_floor", "]", ",", "\n", "[", "-", "1", "]", ")", "\n", "\n", "indices_to_list", "=", "[", "]", "\n", "\n", "for", "dy", ",", "dx", "in", "search_dist", ":", "\n", "        ", "indices_to", "=", "full_indices", "[", "dy", ":", "dy", "+", "cropped_height", ",", "\n", "radius_floor", "+", "dx", ":", "radius_floor", "+", "dx", "+", "cropped_width", "]", "\n", "indices_to", "=", "np", ".", "reshape", "(", "indices_to", ",", "[", "-", "1", "]", ")", "\n", "\n", "indices_to_list", ".", "append", "(", "indices_to", ")", "\n", "\n", "", "concat_indices_to", "=", "np", ".", "concatenate", "(", "indices_to_list", ",", "axis", "=", "0", ")", "\n", "\n", "return", "indices_from", ",", "concat_indices_to", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pyutils.get_indices_of_pairs_min": [[171, 206], ["range", "range", "numpy.reshape", "numpy.reshape", "numpy.concatenate", "search_dist.append", "range", "numpy.arange", "numpy.reshape", "indices_to_list.append", "search_dist.append"], "function", ["None"], ["", "def", "get_indices_of_pairs_min", "(", "radius", ",", "size", ")", ":", "\n", "\n", "    ", "search_dist", "=", "[", "]", "\n", "\n", "for", "x", "in", "range", "(", "1", ",", "radius", ")", ":", "\n", "        ", "search_dist", ".", "append", "(", "(", "0", ",", "x", ")", ")", "\n", "\n", "", "for", "y", "in", "range", "(", "1", ",", "radius", ")", ":", "\n", "        ", "for", "x", "in", "range", "(", "-", "radius", "+", "1", ",", "radius", ")", ":", "\n", "            ", "if", "x", "*", "x", "+", "y", "*", "y", "<", "radius", "*", "radius", ":", "\n", "                ", "search_dist", ".", "append", "(", "(", "y", ",", "x", ")", ")", "\n", "\n", "", "", "", "radius_floor", "=", "radius", "-", "1", "\n", "\n", "full_indices", "=", "np", ".", "reshape", "(", "np", ".", "arange", "(", "0", ",", "size", "[", "0", "]", "*", "size", "[", "1", "]", ",", "dtype", "=", "np", ".", "int64", ")", ",", "\n", "(", "size", "[", "0", "]", ",", "size", "[", "1", "]", ")", ")", "\n", "\n", "cropped_height", "=", "size", "[", "0", "]", "-", "radius_floor", "\n", "cropped_width", "=", "size", "[", "1", "]", "-", "2", "*", "radius_floor", "\n", "\n", "indices_from", "=", "np", ".", "reshape", "(", "full_indices", "[", ":", "-", "radius_floor", ",", "radius_floor", ":", "-", "radius_floor", "]", ",", "\n", "[", "-", "1", "]", ")", "\n", "\n", "indices_to_list", "=", "[", "]", "\n", "\n", "for", "dy", ",", "dx", "in", "search_dist", ":", "\n", "        ", "indices_to", "=", "full_indices", "[", "dy", ":", "dy", "+", "cropped_height", ",", "\n", "radius_floor", "+", "dx", ":", "radius_floor", "+", "dx", "+", "cropped_width", "]", "\n", "indices_to", "=", "np", ".", "reshape", "(", "indices_to", ",", "[", "-", "1", "]", ")", "\n", "\n", "indices_to_list", ".", "append", "(", "indices_to", ")", "\n", "\n", "", "concat_indices_to", "=", "np", ".", "concatenate", "(", "indices_to_list", ",", "axis", "=", "0", ")", "\n", "\n", "return", "indices_from", ",", "concat_indices_to", "\n", "", ""]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomResizeLong.__init__": [[8, 11], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "min_long", ",", "max_long", ")", ":", "\n", "        ", "self", ".", "min_long", "=", "min_long", "\n", "self", ".", "max_long", "=", "max_long", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomResizeLong.__call__": [[12, 25], ["random.randint", "img.resize.resize.resize", "int", "int", "round", "round"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "\n", "        ", "target_long", "=", "random", ".", "randint", "(", "self", ".", "min_long", ",", "self", ".", "max_long", ")", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "\n", "if", "w", "<", "h", ":", "\n", "            ", "target_shape", "=", "(", "int", "(", "round", "(", "w", "*", "target_long", "/", "h", ")", ")", ",", "target_long", ")", "\n", "", "else", ":", "\n", "            ", "target_shape", "=", "(", "target_long", ",", "int", "(", "round", "(", "h", "*", "target_long", "/", "w", ")", ")", ")", "\n", "\n", "", "img", "=", "img", ".", "resize", "(", "target_shape", ",", "resample", "=", "Image", ".", "CUBIC", ")", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.Scale_im.__init__": [[27, 29], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "scale", ")", ":", "\n", "        ", "self", ".", "Scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.Scale_im.__call__": [[30, 34], ["cv2.resize", "int", "int"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "\n", "        ", "new_dims", "=", "(", "int", "(", "img", ".", "shape", "[", "0", "]", "*", "self", ".", "scale", ")", ",", "int", "(", "img", ".", "shape", "[", "1", "]", "*", "self", ".", "scale", ")", ")", "\n", "return", "cv2", ".", "resize", "(", "img", ",", "new_dims", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.LabelResize.__init__": [[38, 40], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "newsize", ")", ":", "\n", "        ", "self", ".", "newsize", "=", "newsize", "\n", "", "def", "__call__", "(", "self", ",", "label", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.LabelResize.__call__": [[40, 44], ["cv2.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "label", ")", ":", "\n", "        ", "label", "=", "cv2", ".", "resize", "(", "label", ",", "(", "self", ".", "newsize", ",", "self", ".", "newsize", ")", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "# label = cv2.resize(label, (self.newsize, self.newsize), interpolation=cv2.INTER_LINEAR)", "\n", "return", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.Crop.__init__": [[47, 49], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cropsize", ")", ":", "\n", "        ", "self", ".", "cropsize", "=", "cropsize", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.Crop.__call__": [[50, 61], ["print", "numpy.ones"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "imgarr", ")", ":", "\n", "\n", "        ", "h", ",", "w", ",", "c", "=", "imgarr", ".", "shape", "\n", "\n", "if", "self", ".", "cropsize", "<", "h", "or", "self", ".", "cropsize", "<", "w", ":", "\n", "            ", "print", "(", "\"crop size must larger than image size\"", ")", "\n", "\n", "", "container", "=", "254", "*", "np", ".", "ones", "(", "(", "self", ".", "cropsize", ",", "self", ".", "cropsize", ",", "imgarr", ".", "shape", "[", "-", "1", "]", ")", ",", "np", ".", "float32", ")", "\n", "container", "[", "0", ":", "h", ",", "0", ":", "w", "]", "=", "imgarr", "[", "0", ":", "h", ",", "0", ":", "w", "]", "\n", "\n", "return", "container", "\n", "", "", "class", "Resize", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.Resize.__init__": [[62, 64], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cropsize", ")", ":", "\n", "        ", "self", ".", "cropsize", "=", "cropsize", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.Resize.__call__": [[65, 70], ["cv2.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "imgarr", ")", ":", "\n", "\n", "        ", "container", "=", "cv2", ".", "resize", "(", "imgarr", ",", "(", "self", ".", "cropsize", ",", "self", ".", "cropsize", ")", ")", "\n", "\n", "return", "container", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.FixScaleCropImage.__init__": [[74, 76], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "crop_size", ")", ":", "\n", "        ", "self", ".", "crop_size", "=", "crop_size", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.FixScaleCropImage.__call__": [[77, 92], ["img.crop.crop.resize", "int", "int", "img.crop.crop.crop", "int", "int", "round", "round"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "w", ">", "h", ":", "\n", "            ", "oh", "=", "self", ".", "crop_size", "\n", "ow", "=", "int", "(", "1.0", "*", "w", "*", "oh", "/", "h", ")", "\n", "", "else", ":", "\n", "            ", "ow", "=", "self", ".", "crop_size", "\n", "oh", "=", "int", "(", "1.0", "*", "h", "*", "ow", "/", "w", ")", "\n", "", "img", "=", "img", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "# center crop", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "x1", "=", "int", "(", "round", "(", "(", "w", "-", "self", ".", "crop_size", ")", "/", "2.", ")", ")", "\n", "y1", "=", "int", "(", "round", "(", "(", "h", "-", "self", ".", "crop_size", ")", "/", "2.", ")", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "self", ".", "crop_size", ",", "y1", "+", "self", ".", "crop_size", ")", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomCrop.__init__": [[96, 98], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cropsize", ")", ":", "\n", "        ", "self", ".", "cropsize", "=", "cropsize", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomCrop.__call__": [[99, 128], ["min", "min", "random.randrange", "random.randrange", "random.randrange", "random.randrange", "numpy.ones"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "imgarr", ")", ":", "\n", "\n", "        ", "h", ",", "w", ",", "c", "=", "imgarr", ".", "shape", "\n", "\n", "ch", "=", "min", "(", "self", ".", "cropsize", ",", "h", ")", "\n", "cw", "=", "min", "(", "self", ".", "cropsize", ",", "w", ")", "\n", "\n", "w_space", "=", "w", "-", "self", ".", "cropsize", "\n", "h_space", "=", "h", "-", "self", ".", "cropsize", "\n", "\n", "if", "w_space", ">", "0", ":", "\n", "            ", "cont_left", "=", "0", "\n", "img_left", "=", "random", ".", "randrange", "(", "w_space", "+", "1", ")", "\n", "", "else", ":", "\n", "            ", "cont_left", "=", "random", ".", "randrange", "(", "-", "w_space", "+", "1", ")", "\n", "img_left", "=", "0", "\n", "\n", "", "if", "h_space", ">", "0", ":", "\n", "            ", "cont_top", "=", "0", "\n", "img_top", "=", "random", ".", "randrange", "(", "h_space", "+", "1", ")", "\n", "", "else", ":", "\n", "            ", "cont_top", "=", "random", ".", "randrange", "(", "-", "h_space", "+", "1", ")", "\n", "img_top", "=", "0", "\n", "\n", "", "container", "=", "255", "*", "np", ".", "ones", "(", "(", "self", ".", "cropsize", ",", "self", ".", "cropsize", ",", "imgarr", ".", "shape", "[", "-", "1", "]", ")", ",", "np", ".", "float32", ")", "\n", "container", "[", "cont_top", ":", "cont_top", "+", "ch", ",", "cont_left", ":", "cont_left", "+", "cw", "]", "=", "imgarr", "[", "img_top", ":", "img_top", "+", "ch", ",", "img_left", ":", "img_left", "+", "cw", "]", "\n", "\n", "return", "container", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomCropNoGt.__init__": [[131, 133], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cropsize", ")", ":", "\n", "        ", "self", ".", "cropsize", "=", "cropsize", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomCropNoGt.__call__": [[134, 163], ["min", "min", "numpy.zeros", "random.randrange", "random.randrange", "random.randrange", "random.randrange"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "imgarr", ")", ":", "\n", "\n", "        ", "h", ",", "w", ",", "c", "=", "imgarr", ".", "shape", "\n", "\n", "ch", "=", "min", "(", "self", ".", "cropsize", ",", "h", ")", "\n", "cw", "=", "min", "(", "self", ".", "cropsize", ",", "w", ")", "\n", "\n", "w_space", "=", "w", "-", "self", ".", "cropsize", "\n", "h_space", "=", "h", "-", "self", ".", "cropsize", "\n", "\n", "if", "w_space", ">", "0", ":", "\n", "            ", "cont_left", "=", "0", "\n", "img_left", "=", "random", ".", "randrange", "(", "w_space", "+", "1", ")", "\n", "", "else", ":", "\n", "            ", "cont_left", "=", "random", ".", "randrange", "(", "-", "w_space", "+", "1", ")", "\n", "img_left", "=", "0", "\n", "\n", "", "if", "h_space", ">", "0", ":", "\n", "            ", "cont_top", "=", "0", "\n", "img_top", "=", "random", ".", "randrange", "(", "h_space", "+", "1", ")", "\n", "", "else", ":", "\n", "            ", "cont_top", "=", "random", ".", "randrange", "(", "-", "h_space", "+", "1", ")", "\n", "img_top", "=", "0", "\n", "\n", "", "container", "=", "np", ".", "zeros", "(", "(", "self", ".", "cropsize", ",", "self", ".", "cropsize", ",", "imgarr", ".", "shape", "[", "-", "1", "]", ")", ",", "np", ".", "float32", ")", "\n", "container", "[", "cont_top", ":", "cont_top", "+", "ch", ",", "cont_left", ":", "cont_left", "+", "cw", "]", "=", "imgarr", "[", "img_top", ":", "img_top", "+", "ch", ",", "img_left", ":", "img_left", "+", "cw", "]", "\n", "\n", "return", "container", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.AvgPool2d.__init__": [[227, 229], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ksize", ")", ":", "\n", "        ", "self", ".", "ksize", "=", "ksize", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.AvgPool2d.__call__": [[230, 234], ["skimage.measure.block_reduce"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "import", "skimage", ".", "measure", "\n", "\n", "return", "skimage", ".", "measure", ".", "block_reduce", "(", "img", ",", "(", "self", ".", "ksize", ",", "self", ".", "ksize", ",", "1", ")", ",", "np", ".", "mean", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomHorizontalFlip.__init__": [[237, 239], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomHorizontalFlip.__call__": [[240, 244], ["bool", "random.getrandbits", "numpy.fliplr().copy", "numpy.fliplr"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "bool", "(", "random", ".", "getrandbits", "(", "1", ")", ")", ":", "\n", "            ", "img", "=", "np", ".", "fliplr", "(", "img", ")", ".", "copy", "(", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.CenterCrop.__init__": [[248, 251], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cropsize", ",", "default_value", "=", "0", ")", ":", "\n", "        ", "self", ".", "cropsize", "=", "cropsize", "\n", "self", ".", "default_value", "=", "default_value", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.CenterCrop.__call__": [[252, 285], ["min", "min", "int", "int", "int", "int", "len", "round", "round", "round", "round", "numpy.ones", "numpy.ones"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "npimg", ")", ":", "\n", "\n", "        ", "h", ",", "w", "=", "npimg", ".", "shape", "[", ":", "2", "]", "\n", "\n", "ch", "=", "min", "(", "self", ".", "cropsize", ",", "h", ")", "\n", "cw", "=", "min", "(", "self", ".", "cropsize", ",", "w", ")", "\n", "\n", "sh", "=", "h", "-", "self", ".", "cropsize", "\n", "sw", "=", "w", "-", "self", ".", "cropsize", "\n", "\n", "if", "sw", ">", "0", ":", "\n", "            ", "cont_left", "=", "0", "\n", "img_left", "=", "int", "(", "round", "(", "sw", "/", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "cont_left", "=", "int", "(", "round", "(", "-", "sw", "/", "2", ")", ")", "\n", "img_left", "=", "0", "\n", "\n", "", "if", "sh", ">", "0", ":", "\n", "            ", "cont_top", "=", "0", "\n", "img_top", "=", "int", "(", "round", "(", "sh", "/", "2", ")", ")", "\n", "", "else", ":", "\n", "            ", "cont_top", "=", "int", "(", "round", "(", "-", "sh", "/", "2", ")", ")", "\n", "img_top", "=", "0", "\n", "\n", "", "if", "len", "(", "npimg", ".", "shape", ")", "==", "2", ":", "\n", "            ", "container", "=", "np", ".", "ones", "(", "(", "self", ".", "cropsize", ",", "self", ".", "cropsize", ")", ",", "npimg", ".", "dtype", ")", "*", "self", ".", "default_value", "\n", "", "else", ":", "\n", "            ", "container", "=", "np", ".", "ones", "(", "(", "self", ".", "cropsize", ",", "self", ".", "cropsize", ",", "npimg", ".", "shape", "[", "2", "]", ")", ",", "npimg", ".", "dtype", ")", "*", "self", ".", "default_value", "\n", "\n", "", "container", "[", "cont_top", ":", "cont_top", "+", "ch", ",", "cont_left", ":", "cont_left", "+", "cw", "]", "=", "npimg", "[", "img_top", ":", "img_top", "+", "ch", ",", "img_left", ":", "img_left", "+", "cw", "]", "\n", "\n", "return", "container", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RescaleNearest.__init__": [[292, 294], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "scale", ")", ":", "\n", "        ", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RescaleNearest.__call__": [[295, 298], ["cv2.resize"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "npimg", ")", ":", "\n", "        ", "import", "cv2", "\n", "return", "cv2", ".", "resize", "(", "npimg", ",", "None", ",", "fx", "=", "self", ".", "scale", ",", "fy", "=", "self", ".", "scale", ",", "interpolation", "=", "cv2", ".", "INTER_NEAREST", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomScaleCrop.__init__": [[301, 305], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "base_size", "=", "513", ",", "crop_size", "=", "513", ",", "fill", "=", "254", ")", ":", "\n", "        ", "self", ".", "base_size", "=", "base_size", "\n", "self", ".", "crop_size", "=", "crop_size", "\n", "self", ".", "fill", "=", "fill", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.RandomScaleCrop.__call__": [[306, 334], ["random.randint", "PIL.ImageOps.expand.resize", "PIL.ImageOps.expand.resize", "random.randint", "random.randint", "PIL.ImageOps.expand.crop", "PIL.ImageOps.expand.crop", "int", "int", "int", "int", "PIL.ImageOps.expand", "PIL.ImageOps.expand"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ",", "label", ")", ":", "\n", "        ", "img", "=", "img", "\n", "mask", "=", "label", "\n", "# random scale (short edge)", "\n", "short_size", "=", "random", ".", "randint", "(", "int", "(", "self", ".", "base_size", "*", "0.5", ")", ",", "int", "(", "self", ".", "base_size", "*", "2.0", ")", ")", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "h", ">", "w", ":", "\n", "            ", "ow", "=", "short_size", "\n", "oh", "=", "int", "(", "1.0", "*", "h", "*", "ow", "/", "w", ")", "\n", "", "else", ":", "\n", "            ", "oh", "=", "short_size", "\n", "ow", "=", "int", "(", "1.0", "*", "w", "*", "oh", "/", "h", ")", "\n", "", "img", "=", "img", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "mask", "=", "mask", ".", "resize", "(", "(", "ow", ",", "oh", ")", ",", "Image", ".", "NEAREST", ")", "\n", "# pad crop", "\n", "if", "short_size", "<", "self", ".", "crop_size", ":", "\n", "            ", "padh", "=", "self", ".", "crop_size", "-", "oh", "if", "oh", "<", "self", ".", "crop_size", "else", "0", "\n", "padw", "=", "self", ".", "crop_size", "-", "ow", "if", "ow", "<", "self", ".", "crop_size", "else", "0", "\n", "img", "=", "ImageOps", ".", "expand", "(", "img", ",", "border", "=", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "fill", "=", "0", ")", "\n", "mask", "=", "ImageOps", ".", "expand", "(", "mask", ",", "border", "=", "(", "0", ",", "0", ",", "padw", ",", "padh", ")", ",", "fill", "=", "self", ".", "fill", ")", "\n", "# random crop crop_size", "\n", "", "w", ",", "h", "=", "img", ".", "size", "\n", "x1", "=", "random", ".", "randint", "(", "0", ",", "w", "-", "self", ".", "crop_size", ")", "\n", "y1", "=", "random", ".", "randint", "(", "0", ",", "h", "-", "self", ".", "crop_size", ")", "\n", "img", "=", "img", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "self", ".", "crop_size", ",", "y1", "+", "self", ".", "crop_size", ")", ")", "\n", "mask", "=", "mask", ".", "crop", "(", "(", "x1", ",", "y1", ",", "x1", "+", "self", ".", "crop_size", ",", "y1", "+", "self", ".", "crop_size", ")", ")", "\n", "\n", "return", "img", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.get_random_crop_box": [[164, 188], ["min", "min", "random.randrange", "random.randrange", "random.randrange", "random.randrange"], "function", ["None"], ["", "", "def", "get_random_crop_box", "(", "imgsize", ",", "cropsize", ")", ":", "\n", "    ", "h", ",", "w", "=", "imgsize", "\n", "\n", "ch", "=", "min", "(", "cropsize", ",", "h", ")", "\n", "cw", "=", "min", "(", "cropsize", ",", "w", ")", "\n", "\n", "w_space", "=", "w", "-", "cropsize", "\n", "h_space", "=", "h", "-", "cropsize", "\n", "\n", "if", "w_space", ">", "0", ":", "\n", "        ", "cont_left", "=", "0", "\n", "img_left", "=", "random", ".", "randrange", "(", "w_space", "+", "1", ")", "\n", "", "else", ":", "\n", "        ", "cont_left", "=", "random", ".", "randrange", "(", "-", "w_space", "+", "1", ")", "\n", "img_left", "=", "0", "\n", "\n", "", "if", "h_space", ">", "0", ":", "\n", "        ", "cont_top", "=", "0", "\n", "img_top", "=", "random", ".", "randrange", "(", "h_space", "+", "1", ")", "\n", "", "else", ":", "\n", "        ", "cont_top", "=", "random", ".", "randrange", "(", "-", "h_space", "+", "1", ")", "\n", "img_top", "=", "0", "\n", "\n", "", "return", "cont_top", ",", "cont_top", "+", "ch", ",", "cont_left", ",", "cont_left", "+", "cw", ",", "img_top", ",", "img_top", "+", "ch", ",", "img_left", ",", "img_left", "+", "cw", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.crop_with_box": [[189, 196], ["len", "numpy.zeros", "numpy.zeros", "max", "max", "max", "max"], "function", ["None"], ["", "def", "crop_with_box", "(", "img", ",", "box", ")", ":", "\n", "    ", "if", "len", "(", "img", ".", "shape", ")", "==", "3", ":", "\n", "        ", "img_cont", "=", "np", ".", "zeros", "(", "(", "max", "(", "box", "[", "1", "]", "-", "box", "[", "0", "]", ",", "box", "[", "4", "]", "-", "box", "[", "5", "]", ")", ",", "max", "(", "box", "[", "3", "]", "-", "box", "[", "2", "]", ",", "box", "[", "7", "]", "-", "box", "[", "6", "]", ")", ",", "img", ".", "shape", "[", "-", "1", "]", ")", ",", "dtype", "=", "img", ".", "dtype", ")", "\n", "", "else", ":", "\n", "        ", "img_cont", "=", "np", ".", "zeros", "(", "(", "max", "(", "box", "[", "1", "]", "-", "box", "[", "0", "]", ",", "box", "[", "4", "]", "-", "box", "[", "5", "]", ")", ",", "max", "(", "box", "[", "3", "]", "-", "box", "[", "2", "]", ",", "box", "[", "7", "]", "-", "box", "[", "6", "]", ")", ")", ",", "dtype", "=", "img", ".", "dtype", ")", "\n", "", "img_cont", "[", "box", "[", "0", "]", ":", "box", "[", "1", "]", ",", "box", "[", "2", "]", ":", "box", "[", "3", "]", "]", "=", "img", "[", "box", "[", "4", "]", ":", "box", "[", "5", "]", ",", "box", "[", "6", "]", ":", "box", "[", "7", "]", "]", "\n", "return", "img_cont", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.random_crop": [[198, 223], ["isinstance", "imutils.get_random_crop_box", "zip", "isinstance", "img.crop.crop", "PIL.Image.new", "Image.new.paste", "new_images.append", "new_images.append", "len", "numpy.ones", "numpy.ones"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.get_random_crop_box"], ["", "def", "random_crop", "(", "images", ",", "cropsize", ",", "fills", ")", ":", "\n", "    ", "if", "isinstance", "(", "images", "[", "0", "]", ",", "Image", ".", "Image", ")", ":", "\n", "        ", "imgsize", "=", "images", "[", "0", "]", ".", "size", "[", ":", ":", "-", "1", "]", "\n", "", "else", ":", "\n", "        ", "imgsize", "=", "images", "[", "0", "]", ".", "shape", "[", ":", "2", "]", "\n", "", "box", "=", "get_random_crop_box", "(", "imgsize", ",", "cropsize", ")", "\n", "\n", "new_images", "=", "[", "]", "\n", "for", "img", ",", "f", "in", "zip", "(", "images", ",", "fills", ")", ":", "\n", "\n", "        ", "if", "isinstance", "(", "img", ",", "Image", ".", "Image", ")", ":", "\n", "            ", "img", "=", "img", ".", "crop", "(", "(", "box", "[", "6", "]", ",", "box", "[", "4", "]", ",", "box", "[", "7", "]", ",", "box", "[", "5", "]", ")", ")", "\n", "cont", "=", "Image", ".", "new", "(", "img", ".", "mode", ",", "(", "cropsize", ",", "cropsize", ")", ")", "\n", "cont", ".", "paste", "(", "img", ",", "(", "box", "[", "2", "]", ",", "box", "[", "0", "]", ")", ")", "\n", "new_images", ".", "append", "(", "cont", ")", "\n", "\n", "", "else", ":", "\n", "            ", "if", "len", "(", "img", ".", "shape", ")", "==", "3", ":", "\n", "                ", "cont", "=", "np", ".", "ones", "(", "(", "cropsize", ",", "cropsize", ",", "img", ".", "shape", "[", "2", "]", ")", ",", "img", ".", "dtype", ")", "*", "f", "\n", "", "else", ":", "\n", "                ", "cont", "=", "np", ".", "ones", "(", "(", "cropsize", ",", "cropsize", ")", ",", "img", ".", "dtype", ")", "*", "f", "\n", "", "cont", "[", "box", "[", "0", "]", ":", "box", "[", "1", "]", ",", "box", "[", "2", "]", ":", "box", "[", "3", "]", "]", "=", "img", "[", "box", "[", "4", "]", ":", "box", "[", "5", "]", ",", "box", "[", "6", "]", ":", "box", "[", "7", "]", "]", "\n", "new_images", ".", "append", "(", "cont", ")", "\n", "\n", "", "", "return", "new_images", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.HWC_to_CHW": [[287, 289], ["numpy.transpose"], "function", ["None"], ["", "", "def", "HWC_to_CHW", "(", "img", ")", ":", "\n", "    ", "return", "np", ".", "transpose", "(", "img", ",", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.crf_inference": [[340, 360], ["dcrf.DenseCRF2D", "unary_from_softmax", "numpy.ascontiguousarray", "numpy.ascontiguousarray", "dcrf.DenseCRF2D.setUnaryEnergy", "dcrf.DenseCRF2D.addPairwiseGaussian", "dcrf.DenseCRF2D.addPairwiseBilateral", "dcrf.DenseCRF2D.inference", "numpy.array().reshape", "numpy.copy", "numpy.array"], "function", ["None"], ["", "", "def", "crf_inference", "(", "img", ",", "probs", ",", "t", "=", "10", ",", "scale_factor", "=", "1", ",", "labels", "=", "21", ")", ":", "\n", "    ", "import", "pydensecrf", ".", "densecrf", "as", "dcrf", "\n", "from", "pydensecrf", ".", "utils", "import", "unary_from_softmax", "\n", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "n_labels", "=", "labels", "\n", "\n", "d", "=", "dcrf", ".", "DenseCRF2D", "(", "w", ",", "h", ",", "n_labels", ")", "\n", "\n", "unary", "=", "unary_from_softmax", "(", "probs", ")", "\n", "unary", "=", "np", ".", "ascontiguousarray", "(", "unary", ")", "\n", "\n", "img_c", "=", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n", "d", ".", "setUnaryEnergy", "(", "unary", ")", "\n", "d", ".", "addPairwiseGaussian", "(", "sxy", "=", "3", "/", "scale_factor", ",", "compat", "=", "3", ")", "\n", "d", ".", "addPairwiseBilateral", "(", "sxy", "=", "80", "/", "scale_factor", ",", "srgb", "=", "13", ",", "rgbim", "=", "np", ".", "copy", "(", "img_c", ")", ",", "compat", "=", "10", ")", "\n", "Q", "=", "d", ".", "inference", "(", "t", ")", "\n", "\n", "return", "np", ".", "array", "(", "Q", ")", ".", "reshape", "(", "(", "n_labels", ",", "h", ",", "w", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.imutils.crf_inference_inf": [[362, 382], ["dcrf.DenseCRF2D", "unary_from_softmax", "numpy.ascontiguousarray", "numpy.ascontiguousarray", "dcrf.DenseCRF2D.setUnaryEnergy", "dcrf.DenseCRF2D.addPairwiseGaussian", "dcrf.DenseCRF2D.addPairwiseBilateral", "dcrf.DenseCRF2D.inference", "numpy.array().reshape", "numpy.copy", "numpy.array"], "function", ["None"], ["", "def", "crf_inference_inf", "(", "img", ",", "probs", ",", "t", "=", "10", ",", "scale_factor", "=", "1", ",", "labels", "=", "21", ")", ":", "\n", "    ", "import", "pydensecrf", ".", "densecrf", "as", "dcrf", "\n", "from", "pydensecrf", ".", "utils", "import", "unary_from_softmax", "\n", "\n", "h", ",", "w", "=", "img", ".", "shape", "[", ":", "2", "]", "\n", "n_labels", "=", "labels", "\n", "\n", "d", "=", "dcrf", ".", "DenseCRF2D", "(", "w", ",", "h", ",", "n_labels", ")", "\n", "\n", "unary", "=", "unary_from_softmax", "(", "probs", ")", "\n", "unary", "=", "np", ".", "ascontiguousarray", "(", "unary", ")", "\n", "\n", "img_c", "=", "np", ".", "ascontiguousarray", "(", "img", ")", "\n", "\n", "d", ".", "setUnaryEnergy", "(", "unary", ")", "\n", "d", ".", "addPairwiseGaussian", "(", "sxy", "=", "4", "/", "scale_factor", ",", "compat", "=", "3", ")", "\n", "d", ".", "addPairwiseBilateral", "(", "sxy", "=", "83", "/", "scale_factor", ",", "srgb", "=", "5", ",", "rgbim", "=", "np", ".", "copy", "(", "img_c", ")", ",", "compat", "=", "3", ")", "\n", "Q", "=", "d", ".", "inference", "(", "t", ")", "\n", "\n", "return", "np", ".", "array", "(", "Q", ")", ".", "reshape", "(", "(", "n_labels", ",", "h", ",", "w", ")", ")", "", "", ""]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12ImageDataset.__init__": [[58, 63], ["data.load_img_name_list"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.load_img_name_list"], ["    ", "def", "__init__", "(", "self", ",", "img_name_list_path", ",", "voc12_root", ",", "transform", "=", "None", ")", ":", "\n", "        ", "self", ".", "img_name_list", "=", "load_img_name_list", "(", "img_name_list_path", ")", "\n", "self", ".", "voc12_root", "=", "voc12_root", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "loader", "=", "transform", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12ImageDataset.__len__": [[64, 66], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_name_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12ImageDataset.__getitem__": [[67, 77], ["PIL.Image.open().convert", "data.VOC12ImageDataset.transform", "PIL.Image.open", "data.get_img_path"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.get_img_path"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "name", "=", "self", ".", "img_name_list", "[", "idx", "]", "\n", "\n", "img", "=", "PIL", ".", "Image", ".", "open", "(", "get_img_path", "(", "name", ",", "self", ".", "voc12_root", ")", ")", ".", "convert", "(", "\"RGB\"", ")", "\n", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "return", "name", ",", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12ClsDataset.__init__": [[81, 84], ["data.VOC12ImageDataset.__init__", "data.load_image_label_list_from_npy"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__", "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.load_image_label_list_from_npy"], ["    ", "def", "__init__", "(", "self", ",", "img_name_list_path", ",", "voc12_root", ",", "transform", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "img_name_list_path", ",", "voc12_root", ",", "transform", ")", "\n", "self", ".", "label_list", "=", "load_image_label_list_from_npy", "(", "self", ".", "img_name_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12ClsDataset.__getitem__": [[85, 91], ["data.VOC12ImageDataset.__getitem__", "torch.from_numpy"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset_NoExtract.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "name", ",", "img", "=", "super", "(", ")", ".", "__getitem__", "(", "idx", ")", "\n", "\n", "label", "=", "torch", ".", "from_numpy", "(", "self", ".", "label_list", "[", "idx", "]", ")", "\n", "\n", "return", "name", ",", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12ClsDatasetMSF.__init__": [[95, 100], ["data.VOC12ClsDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_name_list_path", ",", "voc12_root", ",", "scales", ",", "inter_transform", "=", "None", ",", "unit", "=", "1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "img_name_list_path", ",", "voc12_root", ",", "transform", "=", "None", ")", "\n", "self", ".", "scales", "=", "scales", "\n", "self", ".", "unit", "=", "unit", "\n", "self", ".", "inter_transform", "=", "inter_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12ClsDatasetMSF.__getitem__": [[101, 123], ["data.VOC12ClsDataset.__getitem__", "range", "int", "int", "img.resize", "ms_img_list.append", "range", "len", "msf_img_list.append", "msf_img_list.append", "round", "round", "len", "data.VOC12ClsDatasetMSF.inter_transform", "numpy.flip().copy", "round", "round", "numpy.flip"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset_NoExtract.__getitem__", "home.repos.pwc.inspect_result.zbf1991_A2GNN.tool.pre_processing.flip"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "name", ",", "img", ",", "label", "=", "super", "(", ")", ".", "__getitem__", "(", "idx", ")", "\n", "\n", "rounded_size", "=", "(", "int", "(", "round", "(", "img", ".", "size", "[", "0", "]", "/", "self", ".", "unit", ")", "*", "self", ".", "unit", ")", ",", "int", "(", "round", "(", "img", ".", "size", "[", "1", "]", "/", "self", ".", "unit", ")", "*", "self", ".", "unit", ")", ")", "\n", "\n", "ms_img_list", "=", "[", "]", "\n", "for", "s", "in", "self", ".", "scales", ":", "\n", "            ", "target_size", "=", "(", "round", "(", "rounded_size", "[", "0", "]", "*", "s", ")", ",", "\n", "round", "(", "rounded_size", "[", "1", "]", "*", "s", ")", ")", "\n", "s_img", "=", "img", ".", "resize", "(", "target_size", ",", "resample", "=", "PIL", ".", "Image", ".", "CUBIC", ")", "\n", "ms_img_list", ".", "append", "(", "s_img", ")", "\n", "\n", "", "if", "self", ".", "inter_transform", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "ms_img_list", ")", ")", ":", "\n", "                ", "ms_img_list", "[", "i", "]", "=", "self", ".", "inter_transform", "(", "ms_img_list", "[", "i", "]", ")", "\n", "\n", "", "", "msf_img_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "ms_img_list", ")", ")", ":", "\n", "            ", "msf_img_list", ".", "append", "(", "ms_img_list", "[", "i", "]", ")", "\n", "msf_img_list", ".", "append", "(", "np", ".", "flip", "(", "ms_img_list", "[", "i", "]", ",", "-", "1", ")", ".", "copy", "(", ")", ")", "\n", "\n", "", "return", "name", ",", "msf_img_list", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.ExtractAffinityLabelInRadius.__init__": [[127, 145], ["range", "range", "data.ExtractAffinityLabelInRadius.search_dist.append", "range", "data.ExtractAffinityLabelInRadius.search_dist.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "cropsize", ",", "radius", "=", "5", ")", ":", "\n", "        ", "self", ".", "radius", "=", "radius", "\n", "\n", "self", ".", "search_dist", "=", "[", "]", "\n", "\n", "for", "x", "in", "range", "(", "1", ",", "radius", ")", ":", "\n", "            ", "self", ".", "search_dist", ".", "append", "(", "(", "0", ",", "x", ")", ")", "\n", "\n", "", "for", "y", "in", "range", "(", "1", ",", "radius", ")", ":", "\n", "            ", "for", "x", "in", "range", "(", "-", "radius", "+", "1", ",", "radius", ")", ":", "\n", "                ", "if", "x", "*", "x", "+", "y", "*", "y", "<", "radius", "*", "radius", ":", "\n", "                    ", "self", ".", "search_dist", ".", "append", "(", "(", "y", ",", "x", ")", ")", "\n", "\n", "", "", "", "self", ".", "radius_floor", "=", "radius", "-", "1", "\n", "\n", "self", ".", "crop_height", "=", "cropsize", "-", "self", ".", "radius_floor", "\n", "self", ".", "crop_width", "=", "cropsize", "-", "2", "*", "self", ".", "radius_floor", "\n", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.ExtractAffinityLabelInRadius.__call__": [[146, 176], ["numpy.reshape", "numpy.expand_dims", "numpy.stack", "numpy.stack", "numpy.equal", "numpy.logical_and().astype", "numpy.logical_and().astype", "numpy.logical_and().astype", "numpy.reshape", "numpy.logical_and", "labels_to_list.append", "valid_pair_list.append", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "numpy.less", "numpy.less", "numpy.logical_and", "numpy.logical_and", "numpy.logical_and", "numpy.equal", "numpy.logical_and", "numpy.logical_not", "numpy.not_equal"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "label", ")", ":", "\n", "\n", "        ", "labels_from", "=", "label", "[", ":", "-", "self", ".", "radius_floor", ",", "self", ".", "radius_floor", ":", "-", "self", ".", "radius_floor", "]", "\n", "labels_from", "=", "np", ".", "reshape", "(", "labels_from", ",", "[", "-", "1", "]", ")", "\n", "\n", "labels_to_list", "=", "[", "]", "\n", "valid_pair_list", "=", "[", "]", "\n", "\n", "for", "dy", ",", "dx", "in", "self", ".", "search_dist", ":", "\n", "            ", "labels_to", "=", "label", "[", "dy", ":", "dy", "+", "self", ".", "crop_height", ",", "self", ".", "radius_floor", "+", "dx", ":", "self", ".", "radius_floor", "+", "dx", "+", "self", ".", "crop_width", "]", "\n", "labels_to", "=", "np", ".", "reshape", "(", "labels_to", ",", "[", "-", "1", "]", ")", "\n", "\n", "valid_pair", "=", "np", ".", "logical_and", "(", "np", ".", "less", "(", "labels_to", ",", "255", ")", ",", "np", ".", "less", "(", "labels_from", ",", "255", ")", ")", "\n", "\n", "labels_to_list", ".", "append", "(", "labels_to", ")", "\n", "valid_pair_list", ".", "append", "(", "valid_pair", ")", "\n", "\n", "", "bc_labels_from", "=", "np", ".", "expand_dims", "(", "labels_from", ",", "0", ")", "\n", "concat_labels_to", "=", "np", ".", "stack", "(", "labels_to_list", ")", "\n", "concat_valid_pair", "=", "np", ".", "stack", "(", "valid_pair_list", ")", "\n", "\n", "pos_affinity_label", "=", "np", ".", "equal", "(", "bc_labels_from", ",", "concat_labels_to", ")", "\n", "\n", "bg_pos_affinity_label", "=", "np", ".", "logical_and", "(", "pos_affinity_label", ",", "np", ".", "equal", "(", "bc_labels_from", ",", "0", ")", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "fg_pos_affinity_label", "=", "np", ".", "logical_and", "(", "np", ".", "logical_and", "(", "pos_affinity_label", ",", "np", ".", "not_equal", "(", "bc_labels_from", ",", "0", ")", ")", ",", "concat_valid_pair", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "neg_affinity_label", "=", "np", ".", "logical_and", "(", "np", ".", "logical_not", "(", "pos_affinity_label", ")", ",", "concat_valid_pair", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "return", "torch", ".", "from_numpy", "(", "bg_pos_affinity_label", ")", ",", "torch", ".", "from_numpy", "(", "fg_pos_affinity_label", ")", ",", "torch", ".", "from_numpy", "(", "neg_affinity_label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffDataset.__init__": [[180, 193], ["data.VOC12ImageDataset.__init__", "data.ExtractAffinityLabelInRadius"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_name_list_path", ",", "label_la_dir", ",", "label_ha_dir", ",", "cropsize", ",", "voc12_root", ",", "radius", "=", "5", ",", "\n", "joint_transform_list", "=", "None", ",", "img_transform_list", "=", "None", ",", "label_transform_list", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "img_name_list_path", ",", "voc12_root", ",", "transform", "=", "None", ")", "\n", "\n", "self", ".", "label_la_dir", "=", "label_la_dir", "\n", "self", ".", "label_ha_dir", "=", "label_ha_dir", "\n", "self", ".", "voc12_root", "=", "voc12_root", "\n", "\n", "self", ".", "joint_transform_list", "=", "joint_transform_list", "\n", "self", ".", "img_transform_list", "=", "img_transform_list", "\n", "self", ".", "label_transform_list", "=", "label_transform_list", "\n", "\n", "self", ".", "extract_aff_lab_func", "=", "ExtractAffinityLabelInRadius", "(", "cropsize", "=", "cropsize", "//", "8", ",", "radius", "=", "radius", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffDataset.__len__": [[194, 196], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_name_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffDataset.__getitem__": [[197, 235], ["data.VOC12ImageDataset.__getitem__", "os.path.join", "os.path.join", "numpy.load().item", "numpy.load().item", "numpy.array", "numpy.transpose", "zip", "numpy.array_split", "numpy.argmax().astype", "numpy.argmax().astype", "numpy.argmax().astype.copy", "data.VOC12AffDataset.extract_aff_lab_func", "numpy.max", "numpy.load", "numpy.load", "list", "list", "numpy.concatenate", "joint_transform", "img_transform", "label_transform", "numpy.argmax", "numpy.argmax", "numpy.argmax().astype.values", "numpy.argmax().astype.values"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset_NoExtract.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "name", ",", "img", "=", "super", "(", ")", ".", "__getitem__", "(", "idx", ")", "\n", "\n", "label_la_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_la_dir", ",", "name", "+", "'.npy'", ")", "\n", "\n", "label_ha_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_ha_dir", ",", "name", "+", "'.npy'", ")", "\n", "\n", "label_la", "=", "np", ".", "load", "(", "label_la_path", ")", ".", "item", "(", ")", "\n", "label_ha", "=", "np", ".", "load", "(", "label_ha_path", ")", ".", "item", "(", ")", "\n", "\n", "label", "=", "np", ".", "array", "(", "list", "(", "label_la", ".", "values", "(", ")", ")", "+", "list", "(", "label_ha", ".", "values", "(", ")", ")", ")", "\n", "label", "=", "np", ".", "transpose", "(", "label", ",", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "\n", "for", "joint_transform", ",", "img_transform", ",", "label_transform", "in", "zip", "(", "self", ".", "joint_transform_list", ",", "self", ".", "img_transform_list", ",", "self", ".", "label_transform_list", ")", ":", "\n", "\n", "            ", "if", "joint_transform", ":", "\n", "                ", "img_label", "=", "np", ".", "concatenate", "(", "(", "img", ",", "label", ")", ",", "axis", "=", "-", "1", ")", "\n", "img_label", "=", "joint_transform", "(", "img_label", ")", "\n", "img", "=", "img_label", "[", "...", ",", ":", "3", "]", "\n", "label", "=", "img_label", "[", "...", ",", "3", ":", "]", "\n", "\n", "", "if", "img_transform", ":", "\n", "                ", "img", "=", "img_transform", "(", "img", ")", "\n", "", "if", "label_transform", ":", "\n", "                ", "label", "=", "label_transform", "(", "label", ")", "\n", "\n", "", "", "no_score_region", "=", "np", ".", "max", "(", "label", ",", "-", "1", ")", "<", "1e-5", "\n", "label_la", ",", "label_ha", "=", "np", ".", "array_split", "(", "label", ",", "2", ",", "axis", "=", "-", "1", ")", "\n", "label_la", "=", "np", ".", "argmax", "(", "label_la", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "label_ha", "=", "np", ".", "argmax", "(", "label_ha", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "label", "=", "label_la", ".", "copy", "(", ")", "\n", "label", "[", "label_la", "==", "0", "]", "=", "255", "\n", "label", "[", "label_ha", "==", "0", "]", "=", "0", "\n", "label", "[", "no_score_region", "]", "=", "255", "# mostly outer of cropped region", "\n", "label", "=", "self", ".", "extract_aff_lab_func", "(", "label", ")", "\n", "\n", "return", "img", ",", "label", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset.__init__": [[239, 251], ["data.VOC12ImageDataset.__init__", "data.ExtractAffinityLabelInRadius"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_name_list_path", ",", "label_dir", ",", "cropsize", ",", "voc12_root", ",", "radius", "=", "5", ",", "\n", "joint_transform_list", "=", "None", ",", "img_transform_list", "=", "None", ",", "label_transform_list", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "img_name_list_path", ",", "voc12_root", ",", "transform", "=", "None", ")", "\n", "\n", "self", ".", "label_dir", "=", "label_dir", "\n", "self", ".", "voc12_root", "=", "voc12_root", "\n", "\n", "self", ".", "joint_transform_list", "=", "joint_transform_list", "\n", "self", ".", "img_transform_list", "=", "img_transform_list", "\n", "self", ".", "label_transform_list", "=", "label_transform_list", "\n", "\n", "self", ".", "extract_aff_lab_func", "=", "ExtractAffinityLabelInRadius", "(", "cropsize", "=", "cropsize", "//", "8", ",", "radius", "=", "radius", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset.__len__": [[252, 254], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_name_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset.__getitem__": [[255, 280], ["data.VOC12ImageDataset.__getitem__", "os.path.join", "zip", "numpy.ones_like", "data.VOC12AffGtDataset.extract_aff_lab_func", "imageio.imread", "numpy.concatenate", "joint_transform", "img_transform", "label_transform"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset_NoExtract.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "name", ",", "img", "=", "super", "(", ")", ".", "__getitem__", "(", "idx", ")", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_dir", ",", "name", "+", "'.png'", ")", "\n", "label", "=", "imageio", ".", "imread", "(", "label_path", ")", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "label", "[", "label", "==", "255", "]", "=", "254", "\n", "for", "joint_transform", ",", "img_transform", ",", "label_transform", "in", "zip", "(", "self", ".", "joint_transform_list", ",", "self", ".", "img_transform_list", ",", "self", ".", "label_transform_list", ")", ":", "\n", "\n", "            ", "if", "joint_transform", ":", "\n", "                ", "img_label", "=", "np", ".", "concatenate", "(", "(", "img", ",", "label", ")", ",", "axis", "=", "-", "1", ")", "\n", "img_label", "=", "joint_transform", "(", "img_label", ")", "\n", "img", "=", "img_label", "[", "...", ",", ":", "3", "]", "\n", "label", "=", "img_label", "[", "...", ",", "3", ":", "]", "\n", "\n", "", "if", "img_transform", ":", "\n", "                ", "img", "=", "img_transform", "(", "img", ")", "\n", "", "if", "label_transform", ":", "\n", "                ", "label", "=", "label_transform", "(", "label", ")", "\n", "", "", "croppings", "=", "np", ".", "ones_like", "(", "label", ")", "\n", "croppings", "[", "label", "==", "255", "]", "=", "0", "\n", "label", "[", "label", "==", "254", "]", "=", "255", "\n", "\n", "label", "=", "self", ".", "extract_aff_lab_func", "(", "label", ")", "\n", "\n", "return", "img", ",", "label", ",", "croppings", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset_NoExtract.__init__": [[284, 294], ["data.VOC12ImageDataset.__init__"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "img_name_list_path", ",", "label_dir", ",", "cropsize", ",", "voc12_root", ",", "radius", "=", "5", ",", "\n", "joint_transform_list", "=", "None", ",", "img_transform_list", "=", "None", ",", "label_transform_list", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "img_name_list_path", ",", "voc12_root", ",", "transform", "=", "None", ")", "\n", "\n", "self", ".", "label_dir", "=", "label_dir", "\n", "self", ".", "voc12_root", "=", "voc12_root", "\n", "\n", "self", ".", "joint_transform_list", "=", "joint_transform_list", "\n", "self", ".", "img_transform_list", "=", "img_transform_list", "\n", "self", ".", "label_transform_list", "=", "label_transform_list", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset_NoExtract.__len__": [[295, 297], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_name_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset_NoExtract.__getitem__": [[298, 325], ["data.VOC12ImageDataset.__getitem__", "os.path.join", "zip", "numpy.ones_like", "imageio.imread", "numpy.concatenate", "joint_transform", "img_transform", "label_transform"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.VOC12AffGtDataset_NoExtract.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "name", ",", "img", "=", "super", "(", ")", ".", "__getitem__", "(", "idx", ")", "\n", "\n", "label_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "label_dir", ",", "name", "+", "'.png'", ")", "\n", "\n", "label", "=", "imageio", ".", "imread", "(", "label_path", ")", "[", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "label", "[", "label", "==", "255", "]", "=", "254", "\n", "\n", "for", "joint_transform", ",", "img_transform", ",", "label_transform", "in", "zip", "(", "self", ".", "joint_transform_list", ",", "self", ".", "img_transform_list", ",", "self", ".", "label_transform_list", ")", ":", "\n", "\n", "            ", "if", "joint_transform", ":", "\n", "                ", "img_label", "=", "np", ".", "concatenate", "(", "(", "img", ",", "label", ")", ",", "axis", "=", "-", "1", ")", "\n", "img_label", "=", "joint_transform", "(", "img_label", ")", "\n", "img", "=", "img_label", "[", "...", ",", ":", "3", "]", "\n", "label", "=", "img_label", "[", "...", ",", "3", ":", "]", "\n", "\n", "", "if", "img_transform", ":", "\n", "                ", "img", "=", "img_transform", "(", "img", ")", "\n", "", "if", "label_transform", ":", "\n", "                ", "label", "=", "label_transform", "(", "label", ")", "\n", "\n", "", "", "croppings", "=", "np", ".", "ones_like", "(", "label", ")", "\n", "croppings", "[", "label", "==", "255", "]", "=", "0", "\n", "label", "[", "label", "==", "254", "]", "=", "255", "\n", "\n", "return", "img", ",", "label", ",", "croppings", "", "", "", ""]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.load_image_label_from_xml": [[21, 35], ["minidom.parse().getElementsByTagName", "numpy.zeros", "minidom.parse", "os.path.join"], "function", ["None"], ["def", "load_image_label_from_xml", "(", "img_name", ",", "voc12_root", ")", ":", "\n", "    ", "from", "xml", ".", "dom", "import", "minidom", "\n", "\n", "el_list", "=", "minidom", ".", "parse", "(", "os", ".", "path", ".", "join", "(", "voc12_root", ",", "ANNOT_FOLDER_NAME", ",", "img_name", "+", "'.xml'", ")", ")", ".", "getElementsByTagName", "(", "'name'", ")", "\n", "\n", "multi_cls_lab", "=", "np", ".", "zeros", "(", "(", "20", ")", ",", "np", ".", "float32", ")", "\n", "\n", "for", "el", "in", "el_list", ":", "\n", "        ", "cat_name", "=", "el", ".", "firstChild", ".", "data", "\n", "if", "cat_name", "in", "CAT_LIST", ":", "\n", "            ", "cat_num", "=", "CAT_NAME_TO_NUM", "[", "cat_name", "]", "\n", "multi_cls_lab", "[", "cat_num", "]", "=", "1.0", "\n", "\n", "", "", "return", "multi_cls_lab", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.load_image_label_list_from_xml": [[36, 39], ["data.load_image_label_from_xml"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.load_image_label_from_xml"], ["", "def", "load_image_label_list_from_xml", "(", "img_name_list", ",", "voc12_root", ")", ":", "\n", "\n", "    ", "return", "[", "load_image_label_from_xml", "(", "img_name", ",", "voc12_root", ")", "for", "img_name", "in", "img_name_list", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.load_image_label_list_from_npy": [[40, 45], ["numpy.load().item", "numpy.load"], "function", ["None"], ["", "def", "load_image_label_list_from_npy", "(", "img_name_list", ")", ":", "\n", "\n", "    ", "cls_labels_dict", "=", "np", ".", "load", "(", "'voc12/cls_labels.npy'", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "\n", "return", "[", "cls_labels_dict", "[", "img_name", "]", "for", "img_name", "in", "img_name_list", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.get_img_path": [[46, 48], ["os.path.join"], "function", ["None"], ["", "def", "get_img_path", "(", "img_name", ",", "voc12_root", ")", ":", "\n", "    ", "return", "os", ".", "path", ".", "join", "(", "voc12_root", ",", "IMG_FOLDER_NAME", ",", "img_name", "+", "'.jpg'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.voc12.data.load_img_name_list": [[49, 55], ["open().read().splitlines", "open().read", "img_gt_name.split", "open"], "function", ["None"], ["", "def", "load_img_name_list", "(", "dataset_path", ")", ":", "\n", "\n", "    ", "img_gt_name_list", "=", "open", "(", "dataset_path", ")", ".", "read", "(", ")", ".", "splitlines", "(", ")", "\n", "img_name_list", "=", "[", "img_gt_name", ".", "split", "(", "' '", ")", "[", "0", "]", "[", "-", "15", ":", "-", "4", "]", "for", "img_gt_name", "in", "img_gt_name_list", "]", "\n", "\n", "return", "img_name_list", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.A2GNN.GraphAttentionLayer.__init__": [[11, 19], ["torch.Module.__init__", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "requires_grad", "=", "True", ")", ":", "\n", "        ", "super", "(", "GraphAttentionLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "requires_grad", ":", "\n", "# unifrom initialization", "\n", "            ", "self", ".", "beta", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ".", "uniform_", "(", "\n", "0", ",", "1", ")", ",", "requires_grad", "=", "requires_grad", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "beta", "=", "Variable", "(", "torch", ".", "zeros", "(", "1", ")", ",", "requires_grad", "=", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.A2GNN.GraphAttentionLayer.forward": [[20, 37], ["torch.norm().view", "torch.norm().view", "torch.norm().view", "torch.norm().view", "torch.norm().view", "torch.norm().view", "torch.norm().view", "torch.norm().view", "torch.norm().view", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.div", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.zeros_like().cuda", "torch.softmax", "torch.softmax", "torch.softmax", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "A2GNN.GraphAttentionLayer.beta.cuda", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "torch.norm", "x.t", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.norm().view.t", "torch.norm().view.t", "torch.norm().view.t"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "adj", ",", "aff_cropping", ")", ":", "\n", "\n", "        ", "norm2", "=", "torch", ".", "norm", "(", "x", ",", "2", ",", "1", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "cos", "=", "torch", ".", "div", "(", "torch", ".", "mm", "(", "x", ",", "x", ".", "t", "(", ")", ")", ",", "torch", ".", "mm", "(", "norm2", ",", "norm2", ".", "t", "(", ")", ")", "+", "1e-7", ")", "\n", "\n", "mask", "=", "torch", ".", "zeros_like", "(", "aff_cropping", ")", ".", "cuda", "(", ")", "\n", "mask", "[", "aff_cropping", "==", "0", "]", "=", "-", "1e9", "\n", "mask", "[", "cos", "<", "0", "]", "=", "-", "1e9", "\n", "cos", "=", "self", ".", "beta", ".", "cuda", "(", ")", "*", "cos", "\n", "masked", "=", "cos", "+", "mask", "+", "10", "*", "adj", "\n", "\n", "# propagation matrix", "\n", "P", "=", "F", ".", "softmax", "(", "masked", ",", "dim", "=", "1", ")", "\n", "\n", "# attention-guided propagation", "\n", "output", "=", "torch", ".", "mm", "(", "P", ",", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.A2GNN.GraphAttentionLayer.__repr__": [[38, 40], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "' (16 -> 16)'", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.A2GNN.LinearLayer.__init__": [[44, 50], ["torch.Module.__init__", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "initializer", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "initializer", "=", "nn", ".", "init", ".", "xavier_uniform_", ")", ":", "\n", "        ", "super", "(", "LinearLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "initializer", "(", "\n", "torch", ".", "Tensor", "(", "in_features", ",", "out_features", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.A2GNN.LinearLayer.forward": [[51, 54], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "# no bias", "\n", "        ", "return", "torch", ".", "mm", "(", "input", ",", "self", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.A2GNN.LinearLayer.__repr__": [[55, 59], ["str", "str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "' ('", "+", "str", "(", "self", ".", "in_features", ")", "+", "' -> '", "+", "str", "(", "self", ".", "out_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.A2GNN.A2GNN.__init__": [[63, 81], ["torch.Module.__init__", "A2GNN.LinearLayer", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "A2GNN.A2GNN.attentionlayers.append", "range", "A2GNN.LinearLayer", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "A2GNN.GraphAttentionLayer", "A2GNN.A2GNN.attentionlayers.append", "A2GNN.GraphAttentionLayer"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nfeat", ",", "nhid", ",", "nclass", ",", "nlayers", ",", "dropout_rate", ")", ":", "\n", "        ", "super", "(", "A2GNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "layers", "=", "nlayers", "\n", "self", ".", "dropout_rate", "=", "dropout_rate", "\n", "\n", "self", ".", "embeddinglayer", "=", "LinearLayer", "(", "nfeat", ",", "nhid", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "embeddinglayer", ".", "weight", ")", "\n", "\n", "self", ".", "attentionlayers", "=", "nn", ".", "ModuleList", "(", ")", "\n", "# for Cora dataset, the first propagation layer is non-trainable", "\n", "# and beta is fixed at 0", "\n", "self", ".", "attentionlayers", ".", "append", "(", "GraphAttentionLayer", "(", "requires_grad", "=", "True", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "layers", ")", ":", "\n", "            ", "self", ".", "attentionlayers", ".", "append", "(", "GraphAttentionLayer", "(", ")", ")", "\n", "\n", "", "self", ".", "outputlayer", "=", "LinearLayer", "(", "nhid", ",", "nclass", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "outputlayer", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.A2GNN.A2GNN.forward": [[82, 93], ["torch.relu", "torch.relu", "torch.relu", "torch.dropout", "torch.dropout", "torch.dropout", "range", "A2GNN.A2GNN.clone", "A2GNN.A2GNN.outputlayer", "A2GNN.A2GNN.embeddinglayer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ",", "aff_cropping", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "embeddinglayer", "(", "x", ")", ")", "\n", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout_rate", ",", "training", "=", "self", ".", "training", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "layers", ")", ":", "\n", "            ", "x", "=", "self", ".", "attentionlayers", "[", "i", "]", "(", "x", ",", "adj", ",", "aff_cropping", ")", "\n", "", "fts", "=", "x", ".", "clone", "(", ")", "\n", "\n", "x", "=", "self", ".", "outputlayer", "(", "x", ")", "\n", "\n", "return", "x", ",", "fts", "\n", "", "", ""]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.encode_onehot": [[12, 19], ["set", "numpy.array", "list", "numpy.identity", "enumerate", "map", "len"], "function", ["None"], ["def", "encode_onehot", "(", "labels", ")", ":", "\n", "    ", "classes", "=", "set", "(", "labels", ")", "\n", "classes_dict", "=", "{", "c", ":", "np", ".", "identity", "(", "len", "(", "classes", ")", ")", "[", "i", ",", ":", "]", "for", "i", ",", "c", "in", "\n", "enumerate", "(", "classes", ")", "}", "\n", "labels_onehot", "=", "np", ".", "array", "(", "list", "(", "map", "(", "classes_dict", ".", "get", ",", "labels", ")", ")", ",", "\n", "dtype", "=", "np", ".", "int32", ")", "\n", "return", "labels_onehot", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.load_data": [[21, 35], ["numpy.load", "scipy.csr_matrix", "numpy.array", "numpy.load", "scipy.csr_matrix", "utils_ks.normalize", "utils_ks.normalize", "torch.FloatTensor", "utils_ks.sparse_mx_to_torch_sparse_tensor", "os.path.join", "numpy.array", "scipy.eye", "torch.FloatTensor.todense"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.normalize", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.normalize", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.sparse_mx_to_torch_sparse_tensor"], ["", "def", "load_data", "(", "path", "=", "\"/home/zbf/pythonProject/pygcn/data/voc\"", ",", "dataset", "=", "\"F_ks_bg_onehot.npy\"", ")", ":", "\n", "    ", "idx_features", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "path", ",", "dataset", ")", ")", "\n", "features", "=", "sp", ".", "csr_matrix", "(", "idx_features", "[", ":", ",", "1", ":", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "idx", "=", "np", ".", "array", "(", "idx_features", "[", ":", ",", "0", "]", ",", "dtype", "=", "np", ".", "int16", ")", "\n", "adj", "=", "np", ".", "load", "(", "'/home/zbf/pythonProject/pygcn/data/voc/M_ks_bg(th=0.01,p=0.2).npy'", ")", "\n", "adj", "=", "sp", ".", "csr_matrix", "(", "adj", ")", "\n", "\n", "features", "=", "normalize", "(", "features", ")", "\n", "adj", "=", "normalize", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "features", "=", "torch", ".", "FloatTensor", "(", "np", ".", "array", "(", "features", ".", "todense", "(", ")", ")", ")", "\n", "adj", "=", "sparse_mx_to_torch_sparse_tensor", "(", "adj", ")", "\n", "\n", "return", "adj", ",", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.normalize": [[37, 45], ["numpy.array", "numpy.power().flatten", "scipy.diags", "sp.diags.dot", "r_mat_inv.dot.sum", "numpy.power", "numpy.isinf"], "function", ["None"], ["", "def", "normalize", "(", "mx", ")", ":", "\n", "    ", "\"\"\"Row-normalize sparse matrix\"\"\"", "\n", "rowsum", "=", "np", ".", "array", "(", "mx", ".", "sum", "(", "1", ")", ")", "\n", "r_inv", "=", "np", ".", "power", "(", "rowsum", ",", "-", "1", ")", ".", "flatten", "(", ")", "\n", "r_inv", "[", "np", ".", "isinf", "(", "r_inv", ")", "]", "=", "0.", "\n", "r_mat_inv", "=", "sp", ".", "diags", "(", "r_inv", ")", "\n", "mx", "=", "r_mat_inv", ".", "dot", "(", "mx", ")", "\n", "return", "mx", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.accuracy": [[47, 52], ["[].type_as", "[].type_as.eq().double", "correct.sum.sum", "len", "[].type_as.eq", "output.max"], "function", ["None"], ["", "def", "accuracy", "(", "output", ",", "labels", ")", ":", "\n", "    ", "preds", "=", "output", ".", "max", "(", "1", ")", "[", "1", "]", ".", "type_as", "(", "labels", ")", "\n", "correct", "=", "preds", ".", "eq", "(", "labels", ")", ".", "double", "(", ")", "\n", "correct", "=", "correct", ".", "sum", "(", ")", "\n", "return", "correct", "/", "len", "(", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.sparse_mx_to_torch_sparse_tensor": [[54, 62], ["sparse_mx.tocoo().astype.tocoo().astype", "torch.from_numpy", "torch.from_numpy", "torch.Size", "torch.sparse.FloatTensor", "numpy.vstack().astype", "sparse_mx.tocoo().astype.tocoo", "numpy.vstack"], "function", ["None"], ["", "def", "sparse_mx_to_torch_sparse_tensor", "(", "sparse_mx", ")", ":", "\n", "    ", "\"\"\"Convert a scipy sparse matrix to a torch sparse tensor.\"\"\"", "\n", "sparse_mx", "=", "sparse_mx", ".", "tocoo", "(", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "indices", "=", "torch", ".", "from_numpy", "(", "\n", "np", ".", "vstack", "(", "(", "sparse_mx", ".", "row", ",", "sparse_mx", ".", "col", ")", ")", ".", "astype", "(", "np", ".", "int64", ")", ")", "\n", "values", "=", "torch", ".", "from_numpy", "(", "sparse_mx", ".", "data", ")", "\n", "shape", "=", "torch", ".", "Size", "(", "sparse_mx", ".", "shape", ")", "\n", "return", "torch", ".", "sparse", ".", "FloatTensor", "(", "indices", ",", "values", ",", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.compute_sp_adj": [[64, 73], ["numpy.unique", "numpy.array", "numpy.unique().astype", "scipy.signal.convolve2d", "numpy.unique", "str"], "function", ["None"], ["", "def", "compute_sp_adj", "(", "sp_img", ")", ":", "\n", "    ", "sp_unique", "=", "np", ".", "unique", "(", "sp_img", ")", "\n", "adj", "=", "np", ".", "array", "(", "[", "[", "1", ",", "1", ",", "1", "]", ",", "[", "1", ",", "0", ",", "1", "]", ",", "[", "1", ",", "1", ",", "1", "]", "]", ")", "\n", "sp_adj", "=", "{", "}", "\n", "for", "key", "in", "sp_unique", ":", "\n", "        ", "mask", "=", "convolve2d", "(", "(", "sp_img", "==", "key", ")", ".", "astype", "(", "np", ".", "float", ")", ",", "adj", ",", "'same'", ")", ">", "0", "\n", "value", "=", "np", ".", "unique", "(", "sp_img", "[", "mask", "]", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "sp_adj", "[", "str", "(", "key", ")", "]", "=", "value", "[", "value", "!=", "key", "]", "\n", "", "return", "sp_adj", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.build_dict_index": [[74, 81], ["sp_features.keys"], "function", ["None"], ["", "def", "build_dict_index", "(", "sp_features", ")", ":", "\n", "    ", "sp_index", "=", "{", "}", "\n", "num", "=", "0", "\n", "for", "k", "in", "sp_features", ".", "keys", "(", ")", ":", "\n", "        ", "sp_index", "[", "k", "]", "=", "num", "\n", "num", "+=", "1", "\n", "", "return", "sp_index", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.compute_weight": [[83, 88], ["numpy.linalg.norm", "len", "numpy.exp"], "function", ["None"], ["", "def", "compute_weight", "(", "index_feature", ",", "adj_feature", ")", ":", "\n", "    ", "ed", "=", "np", ".", "linalg", ".", "norm", "(", "(", "index_feature", "-", "adj_feature", ")", ",", "ord", "=", "1", ")", "\n", "h", "=", "len", "(", "index_feature", ")", "\n", "weight_ij", "=", "np", ".", "exp", "(", "-", "ed", "/", "(", "2", "*", "h", ")", ")", "\n", "return", "weight_ij", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.add_center_node": [[89, 117], ["numpy.array().astype", "numpy.unique", "numpy.zeros", "numpy.zeros_like", "enumerate", "numpy.vstack", "numpy.hstack", "numpy.identity", "numpy.ones", "numpy.mean", "numpy.array"], "function", ["None"], ["", "def", "add_center_node", "(", "sp_features", ",", "adj", ",", "sp_label", ")", ":", "\n", "    ", "ori_features", "=", "sp_features", "\n", "ori_labels", "=", "np", ".", "array", "(", "sp_label", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "ori_features_w", ",", "ori_features_h", "=", "ori_features", ".", "shape", "\n", "# center_features = ori_features[ori_labels != 255]", "\n", "# center_labels = ori_labels[ori_labels != 255]", "\n", "# index = np.argwhere(ori_labels != 255)", "\n", "unique_labels", "=", "np", ".", "unique", "(", "ori_labels", ")", "\n", "if", "unique_labels", "[", "-", "1", "]", "==", "255", ":", "\n", "        ", "unique_labels", "=", "unique_labels", "[", ":", "-", "1", "]", "\n", "", "else", ":", "\n", "        ", "unique_labels", "=", "unique_labels", "\n", "", "center_features", "=", "np", ".", "zeros", "(", "[", "unique_labels", ".", "shape", "[", "0", "]", ",", "ori_features_h", "]", ")", "\n", "center_label", "=", "np", ".", "zeros_like", "(", "unique_labels", ")", "\n", "for", "i", ",", "cls", "in", "enumerate", "(", "unique_labels", ")", ":", "\n", "        ", "single_class_feature", "=", "ori_features", "[", "ori_labels", "==", "cls", "]", "\n", "center_features", "[", "i", ",", ":", "]", "=", "np", ".", "mean", "(", "single_class_feature", ",", "axis", "=", "0", ")", "\n", "center_label", "[", "i", "]", "=", "cls", "\n", "", "center_label_w", "=", "center_label", ".", "shape", "[", "0", "]", "\n", "new_features", "=", "np", ".", "vstack", "(", "(", "ori_features", ",", "center_features", ")", ")", "\n", "new_labels", "=", "np", ".", "hstack", "(", "(", "ori_labels", ",", "unique_labels", ")", ")", "\n", "center_adj", "=", "np", ".", "identity", "(", "center_label_w", ")", "\n", "new_adj_shape", "=", "ori_features_w", "+", "center_label_w", "\n", "new_adj", "=", "np", ".", "ones", "(", "[", "new_adj_shape", ",", "new_adj_shape", "]", ")", "\n", "new_adj", "[", "0", ":", "ori_features_w", ",", "0", ":", "ori_features_w", "]", "=", "adj", "\n", "new_adj", "[", "ori_features_w", ":", ",", "ori_features_w", ":", "]", "=", "center_adj", "\n", "\n", "return", "new_features", ",", "new_adj", ",", "new_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.add_spatial_center_node": [[118, 147], ["numpy.squeeze().astype", "numpy.unique", "numpy.zeros", "numpy.zeros_like", "enumerate", "numpy.vstack", "numpy.hstack", "numpy.zeros", "numpy.ones", "numpy.mean", "numpy.squeeze"], "function", ["None"], ["", "def", "add_spatial_center_node", "(", "features", ",", "adj", ",", "sp_label", ")", ":", "\n", "    ", "ori_features", "=", "features", "\n", "ori_labels", "=", "np", ".", "squeeze", "(", "sp_label", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "ori_features_w", ",", "ori_features_h", "=", "ori_features", ".", "shape", "\n", "# center_features = ori_features[ori_labels != 255]", "\n", "# center_labels = ori_labels[ori_labels != 255]", "\n", "# index = np.argwhere(ori_labels != 255)", "\n", "unique_labels", "=", "np", ".", "unique", "(", "ori_labels", ")", "\n", "if", "unique_labels", "[", "-", "1", "]", "==", "255", ":", "\n", "        ", "unique_labels", "=", "unique_labels", "[", ":", "-", "1", "]", "\n", "", "else", ":", "\n", "        ", "unique_labels", "=", "unique_labels", "\n", "", "center_features", "=", "np", ".", "zeros", "(", "[", "unique_labels", ".", "shape", "[", "0", "]", ",", "ori_features_h", "]", ")", "\n", "center_label", "=", "np", ".", "zeros_like", "(", "unique_labels", ")", "\n", "for", "i", ",", "cls", "in", "enumerate", "(", "unique_labels", ")", ":", "\n", "        ", "single_class_feature", "=", "ori_features", "[", "ori_labels", "==", "cls", "]", "\n", "center_features", "[", "i", ",", ":", "]", "=", "np", ".", "mean", "(", "single_class_feature", ",", "axis", "=", "0", ")", "\n", "center_label", "[", "i", "]", "=", "cls", "\n", "", "center_label_w", "=", "center_label", ".", "shape", "[", "0", "]", "\n", "new_features", "=", "np", ".", "vstack", "(", "(", "ori_features", ",", "center_features", ")", ")", "\n", "new_labels", "=", "np", ".", "hstack", "(", "(", "ori_labels", ",", "unique_labels", ")", ")", "\n", "# center_adj = np.identity(center_label_w)", "\n", "center_adj", "=", "np", ".", "zeros", "(", "[", "center_label_w", ",", "center_label_w", "]", ")", "\n", "new_adj_shape", "=", "ori_features_w", "+", "center_label_w", "\n", "new_adj", "=", "np", ".", "ones", "(", "[", "new_adj_shape", ",", "new_adj_shape", "]", ")", "\n", "new_adj", "[", "0", ":", "ori_features_w", ",", "0", ":", "ori_features_w", "]", "=", "adj", "\n", "new_adj", "[", "ori_features_w", ":", ",", "ori_features_w", ":", "]", "=", "center_adj", "\n", "\n", "return", "new_features", ",", "new_adj", ",", "new_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.build_graph": [[149, 189], ["utils_ks.compute_sp_adj", "utils_ks.build_dict_index", "numpy.zeros", "build_dict_index.items", "numpy.array", "numpy.ones_like", "numpy.abs", "range", "utils_ks.add_center_node", "scipy.csr_matrix", "scipy.csr_matrix", "utils_ks.normalize", "utils_ks.normalize", "torch.FloatTensor", "utils_ks.sparse_mx_to_torch_sparse_tensor", "torch.FloatTensor.append", "labels.append", "numpy.max", "numpy.logical_and", "numpy.array", "len", "len", "utils_ks.compute_weight", "numpy.mean", "numpy.std", "sparse_mx_to_torch_sparse_tensor.T.multiply", "sparse_mx_to_torch_sparse_tensor.multiply", "scipy.eye", "torch.FloatTensor.todense", "str", "str"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.compute_sp_adj", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.build_dict_index", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.add_center_node", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.normalize", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.normalize", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.sparse_mx_to_torch_sparse_tensor", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.compute_weight"], ["", "def", "build_graph", "(", "sp_features", ",", "sp_img", ",", "sp_label", ")", ":", "\n", "    ", "sp_adj", "=", "compute_sp_adj", "(", "sp_img", ")", "\n", "sp_index", "=", "build_dict_index", "(", "sp_features", ")", "\n", "features", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "weight_matrix", "=", "np", ".", "zeros", "(", "(", "len", "(", "sp_index", ")", ",", "len", "(", "sp_index", ")", ")", ")", "\n", "\n", "for", "k", ",", "v", "in", "sp_index", ".", "items", "(", ")", ":", "\n", "        ", "index", "=", "v", "\n", "index_features", "=", "sp_features", "[", "k", "]", "\n", "index_label", "=", "sp_label", "[", "k", "]", "\n", "index_adj", "=", "sp_adj", "[", "k", "]", "\n", "features", ".", "append", "(", "index_features", ")", "\n", "labels", ".", "append", "(", "index_label", ")", "\n", "for", "index_adj_j_k", "in", "index_adj", ":", "\n", "            ", "index_adj_j_v", "=", "sp_index", "[", "str", "(", "index_adj_j_k", ")", "]", "\n", "adj_feature", "=", "sp_features", "[", "str", "(", "index_adj_j_k", ")", "]", "\n", "weight_matrix", "[", "index", ",", "index_adj_j_v", "]", "=", "compute_weight", "(", "index_features", ",", "adj_feature", ")", "\n", "", "", "features", "=", "np", ".", "array", "(", "features", ")", "\n", "\n", "adj", "=", "np", ".", "ones_like", "(", "weight_matrix", ")", "\n", "th", "=", "np", ".", "abs", "(", "np", ".", "mean", "(", "weight_matrix", ")", "-", "np", ".", "std", "(", "weight_matrix", ")", ")", "\n", "for", "i", "in", "range", "(", "weight_matrix", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "max_row", "=", "np", ".", "max", "(", "weight_matrix", "[", "i", ",", ":", "]", ")", "\n", "not_region", "=", "np", ".", "logical_and", "(", "weight_matrix", "[", "i", ",", ":", "]", "<", "max_row", ",", "weight_matrix", "[", "i", ",", ":", "]", "<", "th", ")", "\n", "adj", "[", "i", ",", ":", "]", "[", "not_region", "]", "=", "0", "\n", "\n", "", "new_features", ",", "new_adj", ",", "new_labels", "=", "add_center_node", "(", "features", ",", "adj", ",", "labels", ")", "\n", "features", "=", "sp", ".", "csr_matrix", "(", "new_features", ")", "\n", "adj", "=", "sp", ".", "csr_matrix", "(", "new_adj", ")", "\n", "\n", "adj", "=", "adj", "+", "adj", ".", "T", ".", "multiply", "(", "adj", ".", "T", ">", "adj", ")", "-", "-", "adj", ".", "multiply", "(", "adj", ".", "T", ">", "adj", ")", "\n", "\n", "features", "=", "normalize", "(", "features", ")", "\n", "adj", "=", "normalize", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "features", "=", "torch", ".", "FloatTensor", "(", "np", ".", "array", "(", "features", ".", "todense", "(", ")", ")", ")", "\n", "adj", "=", "sparse_mx_to_torch_sparse_tensor", "(", "adj", ")", "\n", "\n", "return", "features", ",", "adj", ",", "new_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.build_adding_graph": [[191, 220], ["features.numpy", "numpy.array().astype", "numpy.argwhere", "numpy.unique", "numpy.ones", "print", "numpy.array", "numpy.argwhere", "numpy.argwhere"], "function", ["None"], ["", "def", "build_adding_graph", "(", "features", ",", "labels", ",", "M_ks", ")", ":", "\n", "    ", "ori_features", "=", "features", ".", "numpy", "(", ")", "\n", "ori_labels", "=", "np", ".", "array", "(", "labels", ")", ".", "astype", "(", "np", ".", "int", ")", "\n", "add_features", "=", "ori_features", "[", "ori_labels", "!=", "255", "]", "\n", "add_labels", "=", "ori_labels", "[", "ori_labels", "!=", "255", "]", "\n", "index", "=", "np", ".", "argwhere", "(", "ori_labels", "!=", "255", ")", "\n", "unique_labels", "=", "np", ".", "unique", "(", "add_labels", ")", "\n", "w", ",", "h", "=", "add_features", ".", "shape", "\n", "add_adj", "=", "np", ".", "ones", "(", "(", "w", ",", "w", ")", ")", "\n", "\n", "for", "first_i", "in", "unique_labels", ":", "\n", "        ", "for", "second_i", "in", "unique_labels", ":", "\n", "            ", "first_index", "=", "np", ".", "argwhere", "(", "add_labels", "==", "first_i", ")", "\n", "second_index", "=", "np", ".", "argwhere", "(", "add_labels", "==", "second_i", ")", "\n", "first_value", "=", "M_ks", "[", "first_i", ",", "second_i", "]", "\n", "second_value", "=", "M_ks", "[", "first_i", ",", "second_i", "]", "\n", "for", "i", "in", "first_index", ":", "\n", "                ", "for", "j", "in", "second_index", ":", "\n", "                    ", "add_adj", "[", "i", ",", "j", "]", "=", "first_value", "\n", "add_adj", "[", "j", ",", "i", "]", "=", "second_value", "\n", "\n", "# zero_index = np.argwhere(add_labels == 0)", "\n", "# non_zero_index = np.argwhere(add_labels != 0)", "\n", "# for i in zero_index:", "\n", "#     for j in non_zero_index:", "\n", "#         add_adj[i,j] = 0", "\n", "#         add_adj[j,i] = 0", "\n", "\n", "", "", "", "", "print", "(", "'111'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.generate_spatial_adj": [[227, 246], ["numpy.squeeze", "np.squeeze.copy().reshape", "scipy.spatial.distance.cdist", "sc_softmax.copy", "sc_softmax", "numpy.ones_like", "np.squeeze.transpose", "features.copy().reshape.copy", "numpy.abs", "numpy.diag", "np.squeeze.copy", "numpy.diag", "numpy.mean", "numpy.std"], "function", ["None"], ["", "def", "generate_spatial_adj", "(", "features", ")", ":", "\n", "    ", "features", "=", "np", ".", "squeeze", "(", "features", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "c", "=", "features", ".", "shape", "[", "0", "]", "\n", "features_a", "=", "features", ".", "copy", "(", ")", ".", "reshape", "(", "[", "c", ",", "-", "1", "]", ")", "\n", "features_b", "=", "features_a", ".", "copy", "(", ")", ".", "T", "\n", "\n", "spatial_attention", "=", "Distance", "(", "features_b", ",", "features_b", ",", "metric", "=", "'euclidean'", ")", "\n", "spatial_attention_ori", "=", "spatial_attention", ".", "copy", "(", ")", "\n", "\n", "spatial_th", "=", "1", "*", "np", ".", "abs", "(", "np", ".", "mean", "(", "spatial_attention_ori", ",", "axis", "=", "1", ")", "-", "np", ".", "std", "(", "spatial_attention_ori", ",", "axis", "=", "1", ")", ")", "\n", "spatial_attention", "=", "sc_softmax", "(", "spatial_attention", ",", "axis", "=", "1", ")", "\n", "\n", "spatial_adj", "=", "np", ".", "ones_like", "(", "spatial_attention", ")", "\n", "spatial_adj", "[", "spatial_attention_ori", ">", "spatial_th", "]", "=", "0", "\n", "spatial_adj", "=", "spatial_adj", "-", "np", ".", "diag", "(", "np", ".", "diag", "(", "spatial_adj", ")", ")", "\n", "\n", "spatial_features", "=", "features_b", "\n", "\n", "return", "spatial_features", ",", "spatial_adj", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.generate_spatial_channel_adj": [[248, 279], ["numpy.squeeze", "np.squeeze.copy().reshape", "numpy.dot", "sc_softmax.copy", "sc_softmax", "numpy.ones_like", "numpy.dot", "sc_softmax", "numpy.ones_like", "np.squeeze.transpose", "features.copy().reshape.copy", "numpy.diag", "numpy.mean", "numpy.diag", "numpy.diag", "np.squeeze.copy", "numpy.diag", "numpy.diag", "numpy.diag", "numpy.max", "numpy.mean"], "function", ["None"], ["", "def", "generate_spatial_channel_adj", "(", "features", ")", ":", "\n", "    ", "features", "=", "np", ".", "squeeze", "(", "features", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "c", "=", "features", ".", "shape", "[", "0", "]", "\n", "features_a", "=", "features", ".", "copy", "(", ")", ".", "reshape", "(", "[", "c", ",", "-", "1", "]", ")", "\n", "features_b", "=", "features_a", ".", "copy", "(", ")", ".", "T", "\n", "\n", "spatial_attention", "=", "np", ".", "dot", "(", "features_b", ",", "features_a", ")", "\n", "spatial_attention", "=", "spatial_attention", "-", "np", ".", "diag", "(", "np", ".", "diag", "(", "spatial_attention", ")", ")", "\n", "spatial_attention_ori", "=", "spatial_attention", ".", "copy", "(", ")", "\n", "# a = np.mean(spatial_attention, axis=1)", "\n", "# b = np.std(spatial_attention, axis=1)", "\n", "# spatial_th = np.abs(np.mean(spatial_attention_ori,axis=1) - np.std(spatial_attention_ori,axis=1))", "\n", "spatial_th", "=", "np", ".", "mean", "(", "spatial_attention", ",", "axis", "=", "1", ")", "+", "0", "*", "(", "np", ".", "max", "(", "spatial_attention_ori", ",", "axis", "=", "1", ")", "-", "np", ".", "mean", "(", "spatial_attention_ori", ",", "axis", "=", "1", ")", ")", "\n", "spatial_attention", "=", "sc_softmax", "(", "spatial_attention", ",", "axis", "=", "1", ")", "\n", "\n", "spatial_adj", "=", "np", ".", "ones_like", "(", "spatial_attention", ")", "\n", "spatial_adj", "[", "spatial_attention", "<", "spatial_th", "]", "=", "0", "\n", "spatial_adj", "=", "spatial_adj", "-", "np", ".", "diag", "(", "np", ".", "diag", "(", "spatial_adj", ")", ")", "\n", "\n", "channel_attention", "=", "np", ".", "dot", "(", "features_a", ",", "features_b", ")", "\n", "# channel_th = np.abs(np.mean(channel_attention, axis=1) - np.std(channel_attention, axis=1))", "\n", "channel_th", "=", "0.5", "\n", "channel_attention", "=", "sc_softmax", "(", "channel_attention", ",", "axis", "=", "1", ")", "\n", "channel_adj", "=", "np", ".", "ones_like", "(", "channel_attention", ")", "\n", "channel_adj", "[", "channel_attention", "<", "channel_th", "]", "=", "0", "\n", "channel_adj", "=", "channel_adj", "-", "np", ".", "diag", "(", "np", ".", "diag", "(", "channel_adj", ")", ")", "\n", "\n", "spatial_features", "=", "features_b", "\n", "channel_features", "=", "features_a", "\n", "\n", "return", "spatial_features", ",", "channel_features", ",", "spatial_adj", ",", "channel_adj", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.build_spatial_graph": [[280, 297], ["scipy.csr_matrix", "scipy.csr_matrix", "utils_ks.normalize", "torch.FloatTensor", "utils_ks.sparse_mx_to_torch_sparse_tensor", "scipy.eye", "numpy.array", "torch.FloatTensor.todense"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.normalize", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.sparse_mx_to_torch_sparse_tensor"], ["", "def", "build_spatial_graph", "(", "features", ",", "adj", ")", ":", "\n", "# new_features, new_adj, new_labels = add_spatial_center_node(features, adj, labels)", "\n", "    ", "new_features", "=", "features", "\n", "new_adj", "=", "adj", "\n", "features", "=", "sp", ".", "csr_matrix", "(", "new_features", ")", "\n", "adj", "=", "sp", ".", "csr_matrix", "(", "new_adj", ")", "\n", "\n", "# adj = adj + adj.T.multiply(adj.T > adj) - - adj.multiply(adj.T > adj)", "\n", "\n", "features", "=", "normalize", "(", "features", ")", "\n", "#adj = normalize(adj + sp.eye(adj.shape[0]))", "\n", "adj", "=", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", "\n", "\n", "features", "=", "torch", ".", "FloatTensor", "(", "np", ".", "array", "(", "features", ".", "todense", "(", ")", ")", ")", "\n", "adj", "=", "sparse_mx_to_torch_sparse_tensor", "(", "adj", ")", "\n", "\n", "return", "features", ",", "adj", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.build_channel_graph": [[298, 311], ["scipy.csr_matrix", "scipy.csr_matrix", "utils_ks.normalize", "utils_ks.normalize", "torch.FloatTensor", "utils_ks.sparse_mx_to_torch_sparse_tensor", "numpy.array", "scipy.eye", "torch.FloatTensor.todense"], "function", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.normalize", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.normalize", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.sparse_mx_to_torch_sparse_tensor"], ["", "def", "build_channel_graph", "(", "features", ",", "adj", ")", ":", "\n", "    ", "features", "=", "sp", ".", "csr_matrix", "(", "features", ")", "\n", "adj", "=", "sp", ".", "csr_matrix", "(", "adj", ")", "\n", "\n", "# adj = adj + adj.T.multiply(adj.T > adj) - - adj.multiply(adj.T > adj)", "\n", "\n", "features", "=", "normalize", "(", "features", ")", "\n", "adj", "=", "normalize", "(", "adj", "+", "sp", ".", "eye", "(", "adj", ".", "shape", "[", "0", "]", ")", ")", "\n", "\n", "features", "=", "torch", ".", "FloatTensor", "(", "np", ".", "array", "(", "features", ".", "todense", "(", ")", ")", ")", "\n", "adj", "=", "sparse_mx_to_torch_sparse_tensor", "(", "adj", ")", "\n", "\n", "return", "features", ",", "adj", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.utils_ks.normalize_img": [[312, 317], ["None"], "function", ["None"], ["", "def", "normalize_img", "(", "img_temp", ")", ":", "\n", "    ", "img_temp", "[", ":", ",", ":", ",", "0", "]", "=", "(", "img_temp", "[", ":", ",", ":", ",", "0", "]", "/", "255.", "-", "0.485", ")", "/", "0.229", "\n", "img_temp", "[", ":", ",", ":", ",", "1", "]", "=", "(", "img_temp", "[", ":", ",", ":", ",", "1", "]", "/", "255.", "-", "0.456", ")", "/", "0.224", "\n", "img_temp", "[", ":", ",", ":", ",", "2", "]", "=", "(", "img_temp", "[", ":", ",", ":", ",", "2", "]", "/", "255.", "-", "0.406", ")", "/", "0.225", "\n", "return", "img_temp", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__": [[14, 24], ["torch.nn.modules.module.Module.__init__", "torch.nn.parameter.Parameter", "layers.GraphConvolution.reset_parameters", "torch.FloatTensor", "torch.nn.parameter.Parameter", "layers.GraphConvolution.register_parameter", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__init__", "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.reset_parameters"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "GraphConvolution", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "out_features", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "", "self", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.reset_parameters": [[25, 30], ["layers.GraphConvolution.weight.data.uniform_", "math.sqrt", "layers.GraphConvolution.bias.data.uniform_", "layers.GraphConvolution.weight.size"], "methods", ["None"], ["", "def", "reset_parameters", "(", "self", ")", ":", "\n", "        ", "stdv", "=", "1.", "/", "math", ".", "sqrt", "(", "self", ".", "weight", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "self", ".", "bias", ".", "data", ".", "uniform_", "(", "-", "stdv", ",", "stdv", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.forward": [[31, 38], ["torch.mm", "torch.spmm"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "input", ",", "adj", ")", ":", "\n", "        ", "support", "=", "torch", ".", "mm", "(", "input", ",", "self", ".", "weight", ")", "\n", "output", "=", "torch", ".", "spmm", "(", "adj", ",", "support", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "return", "output", "+", "self", ".", "bias", "\n", "", "else", ":", "\n", "            ", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.zbf1991_A2GNN.pygcn.layers.GraphConvolution.__repr__": [[39, 43], ["str", "str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "' ('", "+", "str", "(", "self", ".", "in_features", ")", "+", "' -> '", "+", "str", "(", "self", ".", "out_features", ")", "+", "')'", "\n", "", "", ""]]}