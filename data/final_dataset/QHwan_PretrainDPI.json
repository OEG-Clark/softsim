{"home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_dropout.cal_roc_auc": [[17, 21], ["sklearn.metrics.roc_auc_score"], "function", ["None"], ["def", "cal_roc_auc", "(", "label", ",", "pred", ")", ":", "\n", "    ", "prob", "=", "pred", "\n", "score", "=", "roc_auc_score", "(", "label", ",", "prob", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_dropout.split": [[24, 39], ["len", "range", "numpy.random.shuffle", "int", "split_list.append", "split_list.append"], "function", ["None"], ["", "def", "split", "(", "data_list", ",", "n_split", ",", "shuffle", ")", ":", "\n", "    ", "if", "shuffle", ":", "\n", "        ", "np", ".", "random", ".", "shuffle", "(", "data_list", ")", "\n", "\n", "", "n_data", "=", "len", "(", "data_list", ")", "\n", "n_data_split", "=", "int", "(", "n_data", "/", "n_split", ")", "+", "1", "\n", "\n", "split_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_split", ")", ":", "\n", "        ", "if", "i", "==", "n_split", "-", "1", ":", "\n", "            ", "split_list", ".", "append", "(", "data_list", "[", "i", "*", "n_data_split", ":", "]", ")", "\n", "", "else", ":", "\n", "            ", "split_list", ".", "append", "(", "data_list", "[", "i", "*", "n_data_split", ":", "(", "i", "+", "1", ")", "*", "n_data_split", "]", ")", "\n", "\n", "", "", "return", "split_list", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_dropout.train": [[42, 70], ["len", "main_dropout.split", "model.train", "enumerate", "int", "list", "batch.make_batch", "optimizer.zero_grad", "model", "criterion", "criterion.backward", "optimizer.step", "range", "model.squeeze"], "function", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.split", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.train", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.make_batch"], ["", "def", "train", "(", "args", ",", "data", ",", "model", ",", "criterion", ",", "optimizer", ")", ":", "\n", "    ", "[", "prot_fea_list", ",", "drug_node_list", ",", "drug_edge_list", ",", "drug_n2n_list", ",", "drug_e2n_list", ",", "label_list", "]", "=", "data", "\n", "\n", "prot_data", "=", "[", "prot_fea_list", "]", "\n", "drug_data", "=", "[", "drug_node_list", ",", "drug_edge_list", ",", "drug_n2n_list", ",", "drug_e2n_list", "]", "\n", "label_data", "=", "[", "label_list", "]", "\n", "\n", "n_data", "=", "len", "(", "label_list", ")", "\n", "n_step", "=", "int", "(", "n_data", "/", "args", ".", "n_batch", ")", "+", "1", "\n", "\n", "batch_idx_list", "=", "split", "(", "list", "(", "range", "(", "n_data", ")", ")", ",", "n_step", ",", "shuffle", "=", "True", ")", "\n", "\n", "total_loss", "=", "0", "\n", "model", ".", "train", "(", ")", "\n", "for", "i", ",", "batch_idx", "in", "enumerate", "(", "batch_idx_list", ")", ":", "\n", "        ", "batch_data", "=", "batch", ".", "make_batch", "(", "args", ",", "data", "=", "[", "prot_data", ",", "drug_data", ",", "label_data", "]", ",", "idx", "=", "batch_idx", ")", "\n", "batch_prot_data", ",", "batch_drug_data", ",", "batch_label_data", "=", "batch_data", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "pred", "=", "model", "(", "batch_prot_data", ",", "batch_drug_data", ")", "\n", "loss", "=", "criterion", "(", "pred", ".", "squeeze", "(", ")", ",", "batch_label_data", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "total_loss", "+=", "loss", ".", "data", "\n", "\n", "", "return", "total_loss", "/", "n_step", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_dropout.test": [[72, 123], ["len", "main_dropout.split", "model.train", "range", "numpy.array", "numpy.array", "int", "list", "enumerate", "np.array.append", "np.array.append", "score_list.append", "numpy.mean", "range", "batch.make_batch", "model", "criterion", "model.squeeze().cpu().detach().numpy", "batch_label_data.squeeze().cpu().detach().numpy", "main_dropout.cal_roc_auc", "model.squeeze", "buf_y_pred_list.append", "buf_label_list.append", "model.squeeze().cpu().detach", "batch_label_data.squeeze().cpu().detach", "model.squeeze().cpu", "batch_label_data.squeeze().cpu", "model.squeeze", "batch_label_data.squeeze"], "function", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.split", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.train", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.make_batch", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.cal_roc_auc"], ["", "def", "test", "(", "args", ",", "data", ",", "model", ",", "criterion", ",", "val", ")", ":", "\n", "    ", "if", "val", ":", "\n", "        ", "shuffle", "=", "True", "\n", "n_mc_step", "=", "1", "\n", "", "else", ":", "\n", "        ", "shuffle", "=", "False", "\n", "n_mc_step", "=", "args", ".", "n_mc_step", "\n", "\n", "", "[", "prot_fea_list", ",", "drug_node_list", ",", "drug_edge_list", ",", "drug_n2n_list", ",", "drug_e2n_list", ",", "label_list", "]", "=", "data", "\n", "prot_data", "=", "[", "prot_fea_list", "]", "\n", "drug_data", "=", "[", "drug_node_list", ",", "drug_edge_list", ",", "drug_n2n_list", ",", "drug_e2n_list", "]", "\n", "label_data", "=", "[", "label_list", "]", "\n", "\n", "n_data", "=", "len", "(", "label_list", ")", "\n", "n_step", "=", "int", "(", "n_data", "/", "args", ".", "n_batch", ")", "+", "1", "\n", "\n", "batch_idx_list", "=", "split", "(", "list", "(", "range", "(", "n_data", ")", ")", ",", "n_step", ",", "shuffle", "=", "shuffle", ")", "\n", "\n", "y_pred_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "score_list", "=", "[", "]", "\n", "total_loss", "=", "0", "\n", "\n", "model", ".", "train", "(", ")", "\n", "for", "mc_idx", "in", "range", "(", "n_mc_step", ")", ":", "\n", "        ", "buf_y_pred_list", "=", "[", "]", "\n", "buf_label_list", "=", "[", "]", "\n", "for", "i", ",", "batch_idx", "in", "enumerate", "(", "batch_idx_list", ")", ":", "\n", "            ", "batch_data", "=", "batch", ".", "make_batch", "(", "args", ",", "data", "=", "[", "prot_data", ",", "drug_data", ",", "label_data", "]", ",", "idx", "=", "batch_idx", ")", "\n", "batch_prot_data", ",", "batch_drug_data", ",", "batch_label_data", "=", "batch_data", "\n", "\n", "y_pred", "=", "model", "(", "batch_prot_data", ",", "batch_drug_data", ")", "\n", "loss", "=", "criterion", "(", "y_pred", ".", "squeeze", "(", ")", ",", "batch_label_data", ")", "\n", "\n", "total_loss", "+=", "loss", ".", "data", "\n", "\n", "for", "yp", "in", "y_pred", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ":", "\n", "                ", "buf_y_pred_list", ".", "append", "(", "yp", ")", "\n", "", "for", "l", "in", "batch_label_data", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ":", "\n", "                ", "buf_label_list", ".", "append", "(", "l", ")", "\n", "", "", "y_pred_list", ".", "append", "(", "buf_y_pred_list", ")", "\n", "label_list", ".", "append", "(", "buf_label_list", ")", "\n", "\n", "score_list", ".", "append", "(", "cal_roc_auc", "(", "buf_label_list", ",", "buf_y_pred_list", ")", ")", "\n", "\n", "", "y_pred_list", "=", "np", ".", "array", "(", "y_pred_list", ")", "\n", "label_list", "=", "np", ".", "array", "(", "label_list", ")", "\n", "\n", "#print(\"P = {}\".format(model.prot_encoder.prot_fc1.ConDrop.p))", "\n", "\n", "return", "(", "total_loss", "/", "n_step", "/", "n_mc_step", ",", "np", ".", "mean", "(", "score_list", ")", ",", "label_list", ",", "y_pred_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.MoleculeDataset.__init__": [[137, 163], ["numpy.load", "len", "batch.MoleculeDataset.preprocess"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.MoleculeDataset.preprocess"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "# Root dir", "\n", "#if args.dataset.lower() == 'human':", "\n", "#    dataset_filename = 'data/human/human_simple.npz'", "\n", "        ", "dataset_filename", "=", "args", ".", "dataset_file", "\n", "\n", "dataset", "=", "np", ".", "load", "(", "dataset_filename", ",", "allow_pickle", "=", "True", ")", "\n", "\n", "self", ".", "prot_fea_list", "=", "dataset", "[", "'prot_fea'", "]", "\n", "self", ".", "drug_node_list", "=", "dataset", "[", "'drug_node'", "]", "\n", "self", ".", "drug_edge_list", "=", "dataset", "[", "'drug_edge'", "]", "\n", "self", ".", "drug_n2n_list", "=", "dataset", "[", "'drug_n2n'", "]", "\n", "self", ".", "drug_e2n_list", "=", "dataset", "[", "'drug_e2n'", "]", "\n", "self", ".", "label_list", "=", "dataset", "[", "'label'", "]", "\n", "self", ".", "split_list", "=", "dataset", "[", "'split'", "]", "\n", "\n", "self", ".", "data", "=", "[", "self", ".", "prot_fea_list", ",", "\n", "self", ".", "drug_node_list", ",", "self", ".", "drug_edge_list", ",", "\n", "self", ".", "drug_n2n_list", ",", "self", ".", "drug_e2n_list", ",", "\n", "self", ".", "label_list", "]", "\n", "\n", "self", ".", "dim_prot_fea", "=", "len", "(", "self", ".", "prot_fea_list", "[", "0", "]", ")", "\n", "self", ".", "dim_drug_node", "=", "self", ".", "drug_node_list", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "self", ".", "dim_drug_edge", "=", "self", ".", "drug_edge_list", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "\n", "self", ".", "preprocess", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.MoleculeDataset.load_data": [[165, 179], ["batch.get_subdata", "print", "collections.Counter", "batch.get_subdata", "print", "collections.Counter", "batch.get_subdata", "print", "collections.Counter"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.get_subdata", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.get_subdata", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.get_subdata"], ["", "def", "load_data", "(", "self", ",", "partition", ",", "add_noise", "=", "False", ")", ":", "\n", "        ", "if", "partition", "==", "'train'", ":", "\n", "            ", "data", "=", "get_subdata", "(", "self", ".", "data", ",", "self", ".", "train_idx_list", ")", "\n", "print", "(", "Counter", "(", "data", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "elif", "partition", "==", "'val'", ":", "\n", "            ", "data", "=", "get_subdata", "(", "self", ".", "data", ",", "self", ".", "val_idx_list", ")", "\n", "print", "(", "Counter", "(", "data", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "elif", "partition", "==", "'test'", ":", "\n", "            ", "data", "=", "get_subdata", "(", "self", ".", "data", ",", "self", ".", "test_idx_list", ")", "\n", "print", "(", "Counter", "(", "data", "[", "-", "1", "]", ")", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.MoleculeDataset.preprocess": [[181, 195], ["len", "list", "list", "range", "list", "len", "len", "len", "set", "set", "set", "set", "set", "set"], "methods", ["None"], ["", "def", "preprocess", "(", "self", ")", ":", "\n", "        ", "n_split", "=", "len", "(", "self", ".", "split_list", ")", "\n", "self", ".", "train_idx_list", "=", "[", "]", "\n", "self", ".", "val_idx_list", "=", "[", "]", "\n", "self", ".", "test_idx_list", "=", "[", "]", "\n", "\n", "self", ".", "test_idx_list", "+=", "list", "(", "self", ".", "split_list", "[", "-", "1", "]", ")", "\n", "self", ".", "val_idx_list", "+=", "list", "(", "self", ".", "split_list", "[", "-", "2", "]", ")", "\n", "for", "i", "in", "range", "(", "n_split", "-", "2", ")", ":", "\n", "            ", "self", ".", "train_idx_list", "+=", "list", "(", "self", ".", "split_list", "[", "i", "]", ")", "\n", "\n", "", "assert", "len", "(", "set", "(", "self", ".", "train_idx_list", ")", "&", "set", "(", "self", ".", "val_idx_list", ")", ")", "==", "0", "\n", "assert", "len", "(", "set", "(", "self", ".", "val_idx_list", ")", "&", "set", "(", "self", ".", "test_idx_list", ")", ")", "==", "0", "\n", "assert", "len", "(", "set", "(", "self", ".", "train_idx_list", ")", "&", "set", "(", "self", ".", "test_idx_list", ")", ")", "==", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.collate_prot_data": [[11, 14], ["None"], "function", ["None"], ["def", "collate_prot_data", "(", "args", ",", "data", ")", ":", "\n", "    ", "prot_fea_list", "=", "data", "\n", "return", "prot_fea_list", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.collate_drug_data": [[16, 76], ["numpy.sum", "numpy.sum", "len", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.zeros", "enumerate", "numpy.zeros", "enumerate", "len", "len", "len", "numpy.where", "numpy.shape", "len", "len", "len", "numpy.zeros", "numpy.zeros"], "function", ["None"], ["", "def", "collate_drug_data", "(", "args", ",", "data", ")", ":", "\n", "    ", "drug_node_list", ",", "drug_edge_list", ",", "drug_n2n_list", ",", "drug_e2n_list", "=", "data", "\n", "\n", "n_tot_node", "=", "np", ".", "sum", "(", "[", "len", "(", "x", ")", "for", "x", "in", "drug_node_list", "]", ")", "\n", "n_tot_edge", "=", "np", ".", "sum", "(", "[", "len", "(", "x", ")", "for", "x", "in", "drug_edge_list", "]", ")", "\n", "for", "x", "in", "drug_edge_list", ":", "\n", "        ", "if", "len", "(", "x", ")", "==", "0", ":", "\n", "            ", "n_tot_edge", "+=", "1", "\n", "", "", "dim_node", "=", "drug_node_list", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "dim_edge", "=", "drug_edge_list", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "n_batch", "=", "len", "(", "drug_node_list", ")", "\n", "\n", "idx_base_node", "=", "0", "\n", "new_drug_node_list", "=", "np", ".", "zeros", "(", "(", "n_tot_node", ",", "dim_node", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "idx_drug_node_list", "=", "np", ".", "zeros", "(", "n_tot_node", ",", "dtype", "=", "np", ".", "int", ")", "\n", "for", "i", ",", "drug_node", "in", "enumerate", "(", "drug_node_list", ")", ":", "\n", "        ", "n_drug_node", "=", "len", "(", "drug_node", ")", "\n", "new_drug_node_list", "[", "idx_base_node", ":", "idx_base_node", "+", "n_drug_node", "]", "+=", "drug_node", "\n", "idx_drug_node_list", "[", "idx_base_node", ":", "idx_base_node", "+", "n_drug_node", "]", "+=", "i", "\n", "idx_base_node", "+=", "n_drug_node", "\n", "\n", "", "idx_base_edge", "=", "0", "\n", "new_drug_edge_list", "=", "np", ".", "zeros", "(", "(", "n_tot_edge", ",", "dim_edge", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "idx_drug_edge_list", "=", "np", ".", "zeros", "(", "n_tot_edge", ",", "dtype", "=", "np", ".", "int", ")", "\n", "for", "i", ",", "drug_edge", "in", "enumerate", "(", "drug_edge_list", ")", ":", "\n", "        ", "n_drug_edge", "=", "len", "(", "drug_edge", ")", "\n", "if", "n_drug_edge", "==", "0", ":", "\n", "            ", "drug_edge", "=", "np", ".", "zeros", "(", "dim_edge", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "n_drug_edge", "=", "1", "\n", "", "new_drug_edge_list", "[", "idx_base_edge", ":", "idx_base_edge", "+", "n_drug_edge", "]", "+=", "drug_edge", "\n", "idx_drug_edge_list", "[", "idx_base_edge", ":", "idx_base_edge", "+", "n_drug_edge", "]", "+=", "i", "\n", "idx_base_edge", "+=", "n_drug_edge", "\n", "\n", "\n", "", "idx_base", "=", "0", "\n", "new_drug_n2n_list", "=", "np", ".", "zeros", "(", "(", "n_tot_node", ",", "n_tot_node", ")", ",", "dtype", "=", "np", ".", "float16", ")", "\n", "for", "i", ",", "drug_n2n", "in", "enumerate", "(", "drug_n2n_list", ")", ":", "\n", "        ", "n_drug_node", "=", "len", "(", "drug_n2n", ")", "\n", "fancy_index", "=", "np", ".", "where", "(", "drug_n2n", "==", "1", ")", "\n", "new_drug_n2n_list", "[", "idx_base", ":", "idx_base", "+", "n_drug_node", ",", "\n", "idx_base", ":", "idx_base", "+", "n_drug_node", "]", "+=", "drug_n2n", "\n", "idx_base", "+=", "n_drug_node", "\n", "\n", "", "idx_base_node", "=", "0", "\n", "idx_base_edge", "=", "0", "\n", "new_drug_e2n_list", "=", "np", ".", "zeros", "(", "(", "n_tot_node", ",", "n_tot_edge", ")", ",", "dtype", "=", "np", ".", "float16", ")", "\n", "for", "i", ",", "drug_e2n", "in", "enumerate", "(", "drug_e2n_list", ")", ":", "\n", "        ", "n_drug_node", ",", "n_drug_edge", "=", "np", ".", "shape", "(", "drug_e2n", ")", "\n", "if", "n_drug_edge", "==", "0", ":", "\n", "            ", "drug_e2n", "=", "np", ".", "zeros", "(", "(", "n_drug_node", ",", "1", ")", ",", "dtype", "=", "np", ".", "float16", ")", "\n", "n_drug_edge", "=", "1", "\n", "", "new_drug_e2n_list", "[", "idx_base_node", ":", "idx_base_node", "+", "n_drug_node", ",", "\n", "idx_base_edge", ":", "idx_base_edge", "+", "n_drug_edge", "]", "+=", "drug_e2n", "\n", "idx_base_node", "+=", "n_drug_node", "\n", "idx_base_edge", "+=", "n_drug_edge", "\n", "\n", "\n", "", "return", "[", "new_drug_node_list", ",", "new_drug_edge_list", ",", "\n", "new_drug_n2n_list", ",", "new_drug_e2n_list", ",", "\n", "idx_drug_node_list", ",", "idx_drug_edge_list", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.make_batch": [[79, 103], ["batch.get_subdata", "batch.get_subdata", "batch.get_subdata", "batch.collate_prot_data", "batch.collate_drug_data", "batch.cast_tensor", "batch.cast_tensor", "batch.cast_tensor", "batch.cast_cuda", "batch.cast_cuda", "batch.cast_cuda"], "function", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.get_subdata", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.get_subdata", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.get_subdata", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.collate_prot_data", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.collate_drug_data", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.cast_tensor", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.cast_tensor", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.cast_tensor", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.cast_cuda", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.cast_cuda", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.cast_cuda"], ["", "def", "make_batch", "(", "args", ",", "data", ",", "idx", ")", ":", "\n", "    ", "prot_data", ",", "drug_data", ",", "label_data", "=", "data", "\n", "\n", "prot_subdata", "=", "get_subdata", "(", "prot_data", ",", "idx", ")", "\n", "drug_subdata", "=", "get_subdata", "(", "drug_data", ",", "idx", ")", "\n", "label_subdata", "=", "get_subdata", "(", "label_data", ",", "idx", ")", "\n", "\n", "# Collate batch data", "\n", "batch_prot_data", "=", "collate_prot_data", "(", "args", ",", "data", "=", "prot_subdata", ")", "\n", "batch_drug_data", "=", "collate_drug_data", "(", "args", ",", "data", "=", "drug_subdata", ")", "\n", "\n", "batch_label_data", "=", "label_subdata", "\n", "\n", "# Cast tensor structure", "\n", "batch_prot_data", "=", "cast_tensor", "(", "batch_prot_data", ",", "dtype", "=", "[", "'f'", "]", ")", "\n", "batch_drug_data", "=", "cast_tensor", "(", "batch_drug_data", ",", "dtype", "=", "[", "'f'", ",", "'f'", ",", "'f'", ",", "'f'", ",", "'d'", ",", "'d'", "]", ")", "\n", "batch_label_data", "=", "cast_tensor", "(", "batch_label_data", ",", "dtype", "=", "[", "'f'", "]", ")", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "        ", "batch_prot_data", "=", "cast_cuda", "(", "batch_prot_data", ")", "\n", "batch_drug_data", "=", "cast_cuda", "(", "batch_drug_data", ")", "\n", "batch_label_data", "=", "cast_cuda", "(", "batch_label_data", ")", "\n", "\n", "", "return", "[", "batch_prot_data", ",", "batch_drug_data", ",", "batch_label_data", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.cast_tensor": [[105, 119], ["isinstance", "enumerate", "len", "len", "zip", "cast_data.append", "torch.tensor().float", "cast_data.append", "exit", "torch.tensor().long", "torch.tensor", "torch.tensor"], "function", ["None"], ["", "def", "cast_tensor", "(", "data", ",", "dtype", ")", ":", "\n", "    ", "assert", "isinstance", "(", "data", ",", "list", ")", "\n", "assert", "len", "(", "data", ")", "==", "len", "(", "dtype", ")", "\n", "cast_data", "=", "[", "]", "\n", "for", "i", ",", "(", "elem", ",", "dt", ")", "in", "enumerate", "(", "zip", "(", "data", ",", "dtype", ")", ")", ":", "\n", "        ", "if", "dt", "==", "'f'", ":", "\n", "            ", "cast_data", ".", "append", "(", "torch", ".", "tensor", "(", "elem", ")", ".", "float", "(", ")", ")", "\n", "", "elif", "dt", "==", "'d'", ":", "\n", "            ", "cast_data", ".", "append", "(", "torch", ".", "tensor", "(", "elem", ")", ".", "long", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "\"Invalid Data Type\"", "\n", "exit", "(", "1", ")", "\n", "\n", "", "", "return", "cast_data", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.cast_cuda": [[120, 128], ["isinstance", "elem.cuda", "len"], "function", ["None"], ["", "def", "cast_cuda", "(", "data", ")", ":", "\n", "    ", "assert", "isinstance", "(", "data", ",", "list", ")", "\n", "cast_data", "=", "[", "elem", ".", "cuda", "(", ")", "for", "elem", "in", "data", "]", "\n", "\n", "if", "len", "(", "cast_data", ")", "==", "1", ":", "\n", "        ", "return", "cast_data", "[", "0", "]", "\n", "\n", "", "return", "cast_data", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.get_subdata": [[130, 134], ["isinstance"], "function", ["None"], ["", "def", "get_subdata", "(", "data", ",", "idx", ")", ":", "\n", "    ", "assert", "isinstance", "(", "data", ",", "list", ")", "\n", "subdata", "=", "[", "elem", "[", "idx", "]", "for", "elem", "in", "data", "]", "\n", "return", "subdata", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.cal_roc_auc": [[17, 21], ["sklearn.metrics.roc_auc_score"], "function", ["None"], ["def", "cal_roc_auc", "(", "label", ",", "pred", ")", ":", "\n", "    ", "prob", "=", "pred", "\n", "score", "=", "roc_auc_score", "(", "label", ",", "prob", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.split": [[24, 39], ["len", "range", "numpy.random.shuffle", "int", "split_list.append", "split_list.append"], "function", ["None"], ["", "def", "split", "(", "data_list", ",", "n_split", ",", "shuffle", ")", ":", "\n", "    ", "if", "shuffle", ":", "\n", "        ", "np", ".", "random", ".", "shuffle", "(", "data_list", ")", "\n", "\n", "", "n_data", "=", "len", "(", "data_list", ")", "\n", "n_data_split", "=", "int", "(", "n_data", "/", "n_split", ")", "+", "1", "\n", "\n", "split_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "n_split", ")", ":", "\n", "        ", "if", "i", "==", "n_split", "-", "1", ":", "\n", "            ", "split_list", ".", "append", "(", "data_list", "[", "i", "*", "n_data_split", ":", "]", ")", "\n", "", "else", ":", "\n", "            ", "split_list", ".", "append", "(", "data_list", "[", "i", "*", "n_data_split", ":", "(", "i", "+", "1", ")", "*", "n_data_split", "]", ")", "\n", "\n", "", "", "return", "split_list", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.train": [[42, 70], ["len", "main_nn.split", "model.train", "enumerate", "int", "list", "batch.make_batch", "optimizer.zero_grad", "model", "criterion", "criterion.backward", "optimizer.step", "range", "model.squeeze"], "function", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.split", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.train", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.make_batch"], ["", "def", "train", "(", "args", ",", "data", ",", "model", ",", "criterion", ",", "optimizer", ")", ":", "\n", "    ", "[", "prot_fea_list", ",", "drug_node_list", ",", "drug_edge_list", ",", "drug_n2n_list", ",", "drug_e2n_list", ",", "label_list", "]", "=", "data", "\n", "\n", "prot_data", "=", "[", "prot_fea_list", "]", "\n", "drug_data", "=", "[", "drug_node_list", ",", "drug_edge_list", ",", "drug_n2n_list", ",", "drug_e2n_list", "]", "\n", "label_data", "=", "[", "label_list", "]", "\n", "\n", "n_data", "=", "len", "(", "label_list", ")", "\n", "n_step", "=", "int", "(", "n_data", "/", "args", ".", "n_batch", ")", "+", "1", "\n", "\n", "batch_idx_list", "=", "split", "(", "list", "(", "range", "(", "n_data", ")", ")", ",", "n_step", ",", "shuffle", "=", "True", ")", "\n", "\n", "total_loss", "=", "0", "\n", "model", ".", "train", "(", ")", "\n", "for", "i", ",", "batch_idx", "in", "enumerate", "(", "batch_idx_list", ")", ":", "\n", "        ", "batch_data", "=", "batch", ".", "make_batch", "(", "args", ",", "data", "=", "[", "prot_data", ",", "drug_data", ",", "label_data", "]", ",", "idx", "=", "batch_idx", ")", "\n", "batch_prot_data", ",", "batch_drug_data", ",", "batch_label_data", "=", "batch_data", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "pred", "=", "model", "(", "batch_prot_data", ",", "batch_drug_data", ")", "\n", "loss", "=", "criterion", "(", "pred", ".", "squeeze", "(", ")", ",", "batch_label_data", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "total_loss", "+=", "loss", ".", "data", "\n", "\n", "", "return", "total_loss", "/", "n_step", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.test": [[72, 112], ["len", "main_nn.split", "model.eval", "enumerate", "main_nn.cal_roc_auc", "numpy.array", "numpy.array", "int", "list", "batch.make_batch", "model", "criterion", "model.squeeze().cpu().detach().numpy", "batch_label_data.squeeze().cpu().detach().numpy", "range", "model.squeeze", "np.array.append", "np.array.append", "model.squeeze().cpu().detach", "batch_label_data.squeeze().cpu().detach", "model.squeeze().cpu", "batch_label_data.squeeze().cpu", "model.squeeze", "batch_label_data.squeeze"], "function", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.split", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.main_nn.cal_roc_auc", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.None.batch.make_batch"], ["", "def", "test", "(", "args", ",", "data", ",", "model", ",", "criterion", ",", "val", ")", ":", "\n", "    ", "if", "val", ":", "\n", "        ", "shuffle", "=", "True", "\n", "", "else", ":", "\n", "        ", "shuffle", "=", "False", "\n", "", "[", "prot_fea_list", ",", "drug_node_list", ",", "drug_edge_list", ",", "drug_n2n_list", ",", "drug_e2n_list", ",", "label_list", "]", "=", "data", "\n", "prot_data", "=", "[", "prot_fea_list", "]", "\n", "drug_data", "=", "[", "drug_node_list", ",", "drug_edge_list", ",", "drug_n2n_list", ",", "drug_e2n_list", "]", "\n", "label_data", "=", "[", "label_list", "]", "\n", "\n", "n_data", "=", "len", "(", "label_list", ")", "\n", "n_step", "=", "int", "(", "n_data", "/", "args", ".", "n_batch", ")", "+", "1", "\n", "\n", "batch_idx_list", "=", "split", "(", "list", "(", "range", "(", "n_data", ")", ")", ",", "n_step", ",", "shuffle", "=", "shuffle", ")", "\n", "\n", "y_pred_list", "=", "[", "]", "\n", "label_list", "=", "[", "]", "\n", "total_loss", "=", "0", "\n", "\n", "model", ".", "eval", "(", ")", "\n", "for", "i", ",", "batch_idx", "in", "enumerate", "(", "batch_idx_list", ")", ":", "\n", "        ", "batch_data", "=", "batch", ".", "make_batch", "(", "args", ",", "data", "=", "[", "prot_data", ",", "drug_data", ",", "label_data", "]", ",", "idx", "=", "batch_idx", ")", "\n", "batch_prot_data", ",", "batch_drug_data", ",", "batch_label_data", "=", "batch_data", "\n", "\n", "y_pred", "=", "model", "(", "batch_prot_data", ",", "batch_drug_data", ")", "\n", "loss", "=", "criterion", "(", "y_pred", ".", "squeeze", "(", ")", ",", "batch_label_data", ")", "\n", "\n", "total_loss", "+=", "loss", ".", "data", "\n", "\n", "for", "yp", "in", "y_pred", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ":", "\n", "            ", "y_pred_list", ".", "append", "(", "yp", ")", "\n", "", "for", "l", "in", "batch_label_data", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ":", "\n", "            ", "label_list", ".", "append", "(", "l", ")", "\n", "\n", "", "", "score", "=", "cal_roc_auc", "(", "label_list", ",", "y_pred_list", ")", "\n", "\n", "y_pred_list", "=", "np", ".", "array", "(", "y_pred_list", ")", "\n", "label_list", "=", "np", ".", "array", "(", "label_list", ")", "\n", "\n", "return", "(", "total_loss", "/", "n_step", ",", "score", ",", "label_list", ",", "y_pred_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_nn.Perceptron.__init__": [[19, 28], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "act", "=", "None", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "Perceptron", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "dim_in", ",", "dim_out", ")", "\n", "\n", "self", ".", "act", "=", "act", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_nn.Perceptron.forward": [[29, 43], ["model_nn.Perceptron.fc", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.dropout", "torch.dropout", "torch.dropout", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "if", "self", ".", "act", "==", "'relu'", ":", "\n", "            ", "x", "=", "torch", ".", "relu", "(", "x", ")", "\n", "", "elif", "self", ".", "act", "==", "'log_softmax'", ":", "\n", "            ", "x", "=", "F", ".", "log_softmax", "(", "x", ",", "1", ")", "\n", "", "elif", "self", ".", "act", "==", "'sigmoid'", ":", "\n", "            ", "x", "=", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_nn.DrugEncoder.__init__": [[46, 64], ["torch.Module.__init__", "model_nn.Perceptron", "model_nn.Perceptron", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "model_drug.GraphPool", "model_drug.GraphPool", "model_nn.Perceptron", "model_nn.DrugEncoder.gl_list.append", "model_drug.GraphNet", "model_drug.GraphNet"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "DrugEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "embed_node", "=", "Perceptron", "(", "args", ".", "dim_drug_node", ",", "args", ".", "dim_enc_drug", ")", "\n", "self", ".", "embed_edge", "=", "Perceptron", "(", "args", ".", "dim_drug_edge", ",", "args", ".", "dim_enc_drug", ")", "\n", "\n", "self", ".", "gl_list", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "n_layer_drug", ")", ":", "\n", "            ", "if", "i", "==", "args", ".", "n_layer_drug", "-", "1", ":", "\n", "                ", "gl", "=", "GraphNet", "(", "args", ".", "dim_enc_drug", ",", "args", ".", "dim_enc_drug", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "", "else", ":", "\n", "                ", "gl", "=", "GraphNet", "(", "args", ".", "dim_enc_drug", ",", "args", ".", "dim_enc_drug", ",", "dropout", "=", "None", ")", "\n", "", "self", ".", "gl_list", ".", "append", "(", "gl", ")", "\n", "\n", "", "self", ".", "pool_node", "=", "GraphPool", "(", "reduce", "=", "'mean'", ")", "\n", "self", ".", "pool_edge", "=", "GraphPool", "(", "reduce", "=", "'mean'", ")", "\n", "\n", "self", ".", "fc", "=", "Perceptron", "(", "args", ".", "dim_enc_drug", "+", "args", ".", "dim_enc_drug", ",", "args", ".", "dim_enc_drug", ",", "act", "=", "'relu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_nn.DrugEncoder.forward": [[65, 82], ["model_nn.DrugEncoder.embed_node", "model_nn.DrugEncoder.embed_edge", "model_nn.DrugEncoder.pool_node", "model_nn.DrugEncoder.pool_edge", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_nn.DrugEncoder.fc", "gl"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "drug", ")", ":", "\n", "        ", "node", ",", "edge", ",", "n2n", ",", "e2n", ",", "idx_node", ",", "idx_edge", "=", "drug", "\n", "\n", "x_node", "=", "self", ".", "embed_node", "(", "node", ")", "\n", "x_edge", "=", "self", ".", "embed_edge", "(", "edge", ")", "\n", "\n", "for", "gl", "in", "self", ".", "gl_list", ":", "\n", "            ", "x_node", ",", "x_edge", "=", "gl", "(", "x_node", ",", "x_edge", ",", "e2n", ")", "\n", "\n", "", "x_node", "=", "self", ".", "pool_node", "(", "x_node", ",", "idx_node", ")", "\n", "x_edge", "=", "self", ".", "pool_edge", "(", "x_edge", ",", "idx_edge", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x_node", ",", "x_edge", "]", ",", "-", "1", ")", "\n", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x_node", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_nn.ProtEncoder.__init__": [[86, 93], ["torch.Module.__init__", "model_prot.ProtConv", "model_prot.ProtConv", "model_prot.ProtConv", "model_nn.Perceptron"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "ProtEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "prot_fc1", "=", "ProtConv", "(", "1", ",", "16", ",", "8", ",", "0", ")", "\n", "self", ".", "prot_fc2", "=", "ProtConv", "(", "16", ",", "32", ",", "8", ",", "0", ")", "\n", "self", ".", "prot_fc3", "=", "ProtConv", "(", "32", ",", "48", ",", "8", ",", "0", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "\n", "self", ".", "fc", "=", "Perceptron", "(", "args", ".", "dim_prot", "-", "21", ",", "args", ".", "dim_enc_prot", ",", "act", "=", "'relu'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_nn.ProtEncoder.forward": [[94, 106], ["model_nn.ProtEncoder.prot_fc1", "model_nn.ProtEncoder.prot_fc2", "model_nn.ProtEncoder.prot_fc3", "model_nn.ProtEncoder.fc", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "prot", ")", ":", "\n", "        ", "x", "=", "prot", "\n", "\n", "x", "=", "self", ".", "prot_fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "prot_fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "prot_fc3", "(", "x", ")", "\n", "\n", "x", "=", "torch", ".", "max", "(", "x", ",", "1", ")", "[", "0", "]", "\n", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_nn.GNetNN.__init__": [[110, 127], ["torch.Module.__init__", "model_nn.DrugEncoder", "model_nn.ProtEncoder", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "model_nn.GNetNN.mlp_list.append", "model_nn.Perceptron", "model_nn.Perceptron", "model_nn.Perceptron"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "GNetNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "drug_encoder", "=", "DrugEncoder", "(", "args", ")", "\n", "self", ".", "prot_encoder", "=", "ProtEncoder", "(", "args", ")", "\n", "\n", "self", ".", "mlp_list", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "n_layer_mlp", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "fc", "=", "Perceptron", "(", "args", ".", "dim_enc_drug", "+", "args", ".", "dim_enc_prot", ",", "args", ".", "dim_mlp", ",", "\n", "act", "=", "'relu'", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "", "elif", "i", "==", "args", ".", "n_layer_mlp", "-", "1", ":", "\n", "                ", "fc", "=", "Perceptron", "(", "args", ".", "dim_mlp", ",", "1", ",", "act", "=", "'sigmoid'", ")", "\n", "", "else", ":", "\n", "                ", "fc", "=", "Perceptron", "(", "args", ".", "dim_mlp", ",", "args", ".", "dim_mlp", ",", "\n", "act", "=", "'relu'", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "", "self", ".", "mlp_list", ".", "append", "(", "fc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_nn.GNetNN.forward": [[128, 138], ["model_nn.GNetNN.drug_encoder", "model_nn.GNetNN.prot_encoder", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "mlp"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "prot", ",", "drug", ")", ":", "\n", "        ", "x_drug", "=", "self", ".", "drug_encoder", "(", "drug", ")", "\n", "x_prot", "=", "self", ".", "prot_encoder", "(", "prot", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x_prot", ",", "x_drug", "]", ",", "-", "1", ")", "\n", "\n", "for", "mlp", "in", "self", ".", "mlp_list", ":", "\n", "            ", "x", "=", "mlp", "(", "x", ")", "\n", "\n", "", "return", "x", "", "", "", ""]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_nn.create_model": [[13, 16], ["model_nn.GNetNN"], "function", ["None"], ["def", "create_model", "(", "args", ")", ":", "\n", "    ", "model", "=", "GNetNN", "(", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_dropout.Perceptron.__init__": [[20, 30], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "concrete.ConcreteDropout", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "act", "=", "None", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "Perceptron", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "dim_in", ",", "dim_out", ")", "\n", "\n", "self", ".", "act", "=", "act", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "ConDrop", "=", "ConcreteDropout", "(", ")", "\n", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_dropout.Perceptron.forward": [[31, 45], ["model_dropout.Perceptron.fc", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.dropout", "torch.dropout", "torch.dropout", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "if", "self", ".", "act", "==", "'relu'", ":", "\n", "            ", "x", "=", "torch", ".", "relu", "(", "x", ")", "\n", "", "elif", "self", ".", "act", "==", "'log_softmax'", ":", "\n", "            ", "x", "=", "F", ".", "log_softmax", "(", "x", ",", "1", ")", "\n", "", "elif", "self", ".", "act", "==", "'sigmoid'", ":", "\n", "            ", "x", "=", "torch", ".", "sigmoid", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_dropout.DrugEncoder.__init__": [[48, 69], ["torch.Module.__init__", "model_dropout.Perceptron", "model_dropout.Perceptron", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "model_drug_conc.GraphPool", "model_drug_conc.GraphPool", "model_dropout.Perceptron", "model_dropout.DrugEncoder.gl_list.append", "model_drug_conc.GraphNet", "model_drug_conc.GraphNet"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "DrugEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "embed_node", "=", "Perceptron", "(", "args", ".", "dim_drug_node", ",", "args", ".", "dim_enc_drug", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "self", ".", "embed_edge", "=", "Perceptron", "(", "args", ".", "dim_drug_edge", ",", "args", ".", "dim_enc_drug", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "\n", "self", ".", "gl_list", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "n_layer_drug", ")", ":", "\n", "            ", "if", "i", "==", "args", ".", "n_layer_drug", "-", "1", ":", "\n", "                ", "gl", "=", "GraphNet", "(", "args", ".", "dim_enc_drug", ",", "args", ".", "dim_enc_drug", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "", "else", ":", "\n", "                ", "gl", "=", "GraphNet", "(", "args", ".", "dim_enc_drug", ",", "args", ".", "dim_enc_drug", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "", "self", ".", "gl_list", ".", "append", "(", "gl", ")", "\n", "\n", "", "self", ".", "pool_node", "=", "GraphPool", "(", "reduce", "=", "'mean'", ")", "\n", "self", ".", "pool_edge", "=", "GraphPool", "(", "reduce", "=", "'mean'", ")", "\n", "\n", "self", ".", "fc", "=", "Perceptron", "(", "args", ".", "dim_enc_drug", "+", "args", ".", "dim_enc_drug", ",", "args", ".", "dim_enc_drug", ",", "\n", "act", "=", "'relu'", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "\n", "self", ".", "dropout", "=", "args", ".", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_dropout.DrugEncoder.forward": [[70, 87], ["model_dropout.DrugEncoder.embed_node", "model_dropout.DrugEncoder.embed_edge", "model_dropout.DrugEncoder.pool_node", "model_dropout.DrugEncoder.pool_edge", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_dropout.DrugEncoder.fc", "gl"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "drug", ")", ":", "\n", "        ", "node", ",", "edge", ",", "n2n", ",", "e2n", ",", "idx_node", ",", "idx_edge", "=", "drug", "\n", "\n", "x_node", "=", "self", ".", "embed_node", "(", "node", ")", "\n", "x_edge", "=", "self", ".", "embed_edge", "(", "edge", ")", "\n", "\n", "for", "gl", "in", "self", ".", "gl_list", ":", "\n", "            ", "x_node", ",", "x_edge", "=", "gl", "(", "x_node", ",", "x_edge", ",", "e2n", ")", "\n", "\n", "", "x_node", "=", "self", ".", "pool_node", "(", "x_node", ",", "idx_node", ")", "\n", "x_edge", "=", "self", ".", "pool_edge", "(", "x_edge", ",", "idx_edge", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x_node", ",", "x_edge", "]", ",", "-", "1", ")", "\n", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x_node", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_dropout.ProtEncoder.__init__": [[91, 98], ["torch.Module.__init__", "model_prot_conc.ProtConv", "model_prot_conc.ProtConv", "model_prot_conc.ProtConv", "model_dropout.Perceptron"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "ProtEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "prot_fc1", "=", "ProtConv", "(", "1", ",", "16", ",", "8", ",", "0", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "self", ".", "prot_fc2", "=", "ProtConv", "(", "16", ",", "32", ",", "8", ",", "0", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "self", ".", "prot_fc3", "=", "ProtConv", "(", "32", ",", "48", ",", "8", ",", "0", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "\n", "self", ".", "fc", "=", "Perceptron", "(", "args", ".", "dim_prot", "-", "21", ",", "args", ".", "dim_enc_prot", ",", "act", "=", "'relu'", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_dropout.ProtEncoder.forward": [[99, 111], ["model_dropout.ProtEncoder.prot_fc1", "model_dropout.ProtEncoder.prot_fc2", "model_dropout.ProtEncoder.prot_fc3", "model_dropout.ProtEncoder.fc", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "prot", ")", ":", "\n", "        ", "x", "=", "prot", "\n", "\n", "x", "=", "self", ".", "prot_fc1", "(", "x", ")", "\n", "x", "=", "self", ".", "prot_fc2", "(", "x", ")", "\n", "x", "=", "self", ".", "prot_fc3", "(", "x", ")", "\n", "\n", "x", "=", "torch", ".", "max", "(", "x", ",", "1", ")", "[", "0", "]", "\n", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_dropout.GNetNN.__init__": [[114, 133], ["torch.Module.__init__", "model_dropout.DrugEncoder", "model_dropout.ProtEncoder", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "model_dropout.GNetNN.mlp_list.append", "model_dropout.Perceptron", "model_dropout.Perceptron", "model_dropout.Perceptron"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "GNetNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "drug_encoder", "=", "DrugEncoder", "(", "args", ")", "\n", "self", ".", "prot_encoder", "=", "ProtEncoder", "(", "args", ")", "\n", "\n", "self", ".", "mlp_list", "=", "nn", ".", "ModuleList", "(", "[", "]", ")", "\n", "for", "i", "in", "range", "(", "args", ".", "n_layer_mlp", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "fc", "=", "Perceptron", "(", "args", ".", "dim_enc_drug", "+", "args", ".", "dim_enc_prot", ",", "args", ".", "dim_mlp", ",", "\n", "act", "=", "'relu'", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "", "elif", "i", "==", "args", ".", "n_layer_mlp", "-", "1", ":", "\n", "                ", "fc", "=", "Perceptron", "(", "args", ".", "dim_mlp", ",", "1", ",", "act", "=", "'sigmoid'", ")", "\n", "", "else", ":", "\n", "                ", "fc", "=", "Perceptron", "(", "args", ".", "dim_mlp", ",", "args", ".", "dim_mlp", ",", "\n", "act", "=", "'relu'", ",", "dropout", "=", "args", ".", "dropout", ")", "\n", "", "self", ".", "mlp_list", ".", "append", "(", "fc", ")", "\n", "\n", "", "self", ".", "dropout", "=", "args", ".", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_dropout.GNetNN.forward": [[134, 144], ["model_dropout.GNetNN.drug_encoder", "model_dropout.GNetNN.prot_encoder", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "mlp"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "prot", ",", "drug", ")", ":", "\n", "        ", "x_drug", "=", "self", ".", "drug_encoder", "(", "drug", ")", "\n", "x_prot", "=", "self", ".", "prot_encoder", "(", "prot", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x_prot", ",", "x_drug", "]", ",", "-", "1", ")", "\n", "\n", "for", "mlp", "in", "self", ".", "mlp_list", ":", "\n", "            ", "x", "=", "mlp", "(", "x", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_dropout.create_model": [[15, 18], ["model_dropout.GNetNN"], "function", ["None"], ["def", "create_model", "(", "args", ")", ":", "\n", "    ", "model", "=", "GNetNN", "(", "args", ")", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug.GraphNet.__init__": [[11, 25], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_node", ",", "dim_edge", ",", "norm", "=", "None", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "GraphNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_edge", "=", "nn", ".", "Linear", "(", "dim_node", "+", "dim_edge", ",", "dim_edge", ")", "\n", "self", ".", "fc_node", "=", "nn", ".", "Linear", "(", "dim_node", "+", "dim_edge", ",", "dim_node", ")", "\n", "\n", "self", ".", "bn_edge", "=", "nn", ".", "BatchNorm1d", "(", "dim_edge", ")", "\n", "self", ".", "bn_node", "=", "nn", ".", "BatchNorm1d", "(", "dim_node", ")", "\n", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "norm", "=", "norm", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc_edge", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "fc_node", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug.GraphNet.forward": [[26, 45], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_drug.GraphNet.fc_edge", "model_drug.GraphNet.act", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_drug.GraphNet.fc_node", "model_drug.GraphNet.act", "torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "torch.dropout", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "node", ",", "edge", ",", "e2n", ")", ":", "\n", "#node->edge", "\n", "        ", "x_edge", "=", "torch", ".", "cat", "(", "[", "edge", ",", "torch", ".", "mm", "(", "torch", ".", "transpose", "(", "e2n", ",", "0", ",", "1", ")", ",", "node", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "x_edge", "=", "self", ".", "fc_edge", "(", "x_edge", ")", "\n", "x_edge", "=", "self", ".", "act", "(", "x_edge", ")", "\n", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "x_edge", "=", "F", ".", "dropout", "(", "x_edge", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "\n", "#edge->node", "\n", "", "x_node", "=", "torch", ".", "cat", "(", "[", "node", ",", "torch", ".", "matmul", "(", "e2n", ",", "x_edge", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "x_node", "=", "self", ".", "fc_node", "(", "x_node", ")", "\n", "x_node", "=", "self", ".", "act", "(", "x_node", ")", "\n", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "x_node", "=", "F", ".", "dropout", "(", "x_node", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "\n", "", "x_node", "=", "x_node", "+", "node", "\n", "x_edge", "=", "x_edge", "+", "edge", "\n", "\n", "return", "(", "x_node", ",", "x_edge", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug.GraphPool.__init__": [[48, 51], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "reduce", ")", ":", "\n", "        ", "super", "(", "GraphPool", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reduce", "=", "reduce", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug.GraphPool.forward": [[52, 55], ["torch_scatter.scatter"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "fea", ",", "idx_fea", ")", ":", "\n", "        ", "x", "=", "torch_scatter", ".", "scatter", "(", "fea", ",", "idx_fea", ",", "dim", "=", "0", ",", "reduce", "=", "self", ".", "reduce", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_prot_conc.ProtConv.__init__": [[13, 23], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "concrete.ConcreteDropout", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "kernel_size", ",", "padding", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "ProtConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv1d", "(", "in_channels", "=", "dim_in", ",", "out_channels", "=", "dim_out", ",", "\n", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ")", "\n", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "ConDrop", "=", "ConcreteDropout", "(", ")", "\n", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "conv", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_prot_conc.ProtConv.forward": [[24, 34], ["model_prot_conc.ProtConv.act", "len", "fea.unsqueeze.unsqueeze.unsqueeze", "model_prot_conc.ProtConv.ConDrop", "fea.unsqueeze.unsqueeze.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "fea", ")", ":", "\n", "        ", "if", "len", "(", "fea", ".", "size", "(", ")", ")", "==", "2", ":", "\n", "            ", "fea", "=", "fea", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "ConDrop", "(", "fea", ",", "self", ".", "conv", ")", "\n", "\n", "", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.concrete.ConcreteDropout.__init__": [[15, 46], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "numpy.log", "numpy.log", "numpy.log", "numpy.log", "torch.empty().uniform_", "torch.empty().uniform_", "torch.empty().uniform_", "torch.empty().uniform_", "torch.empty", "torch.empty", "torch.empty", "torch.empty"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["def", "__init__", "(", "self", ",", "\n", "weight_regulariser", ":", "float", "=", "1e-6", ",", "\n", "dropout_regulariser", ":", "float", "=", "1e-5", ",", "\n", "init_min", ":", "float", "=", "0.3", ",", "\n", "init_max", ":", "float", "=", "0.3", ")", "->", "None", ":", "\n", "\n", "        ", "\"\"\"Concrete Dropout.\n        Parameters\n        ----------\n        weight_regulariser : float\n            Weight regulariser term.\n        dropout_regulariser : float\n            Dropout regulariser term.\n        init_min : float\n            Initial min value.\n        init_max : float\n            Initial max value.\n        \"\"\"", "\n", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "weight_regulariser", "=", "weight_regulariser", "\n", "self", ".", "dropout_regulariser", "=", "dropout_regulariser", "\n", "\n", "init_min", "=", "np", ".", "log", "(", "init_min", ")", "-", "np", ".", "log", "(", "1.0", "-", "init_min", ")", "\n", "init_max", "=", "np", ".", "log", "(", "init_max", ")", "-", "np", ".", "log", "(", "1.0", "-", "init_max", ")", "\n", "\n", "self", ".", "p_logit", "=", "nn", ".", "Parameter", "(", "torch", ".", "empty", "(", "1", ")", ".", "uniform_", "(", "init_min", ",", "init_max", ")", ")", "\n", "self", ".", "p", "=", "torch", ".", "sigmoid", "(", "self", ".", "p_logit", ")", "\n", "\n", "self", ".", "regularisation", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.concrete.ConcreteDropout.forward": [[47, 78], ["layer", "layer.parameters", "concrete.ConcreteDropout._concrete_dropout", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "x[].numel", "torch.pow", "torch.pow", "torch.pow", "torch.pow"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.concrete.ConcreteDropout._concrete_dropout"], ["", "def", "forward", "(", "self", ",", "x", ":", "Tensor", ",", "layer", ":", "nn", ".", "Module", ")", "->", "Tensor", ":", "\n", "\n", "        ", "\"\"\"Calculates the forward pass.\n        The regularisation term for the layer is calculated and assigned to a\n        class attribute - this can later be accessed to evaluate the loss.\n        Parameters\n        ----------\n        x : Tensor\n            Input to the Concrete Dropout.\n        layer : nn.Module\n            Layer for which to calculate the Concrete Dropout.\n        Returns\n        -------\n        Tensor\n            Output from the dropout layer.\n        \"\"\"", "\n", "output", "=", "layer", "(", "self", ".", "_concrete_dropout", "(", "x", ")", ")", "\n", "\n", "sum_of_squares", "=", "0", "\n", "for", "param", "in", "layer", ".", "parameters", "(", ")", ":", "\n", "            ", "sum_of_squares", "+=", "torch", ".", "sum", "(", "torch", ".", "pow", "(", "param", ",", "2", ")", ")", "\n", "\n", "", "weights_reg", "=", "self", ".", "weight_regulariser", "*", "sum_of_squares", "/", "(", "1.0", "-", "self", ".", "p", ")", "\n", "\n", "dropout_reg", "=", "self", ".", "p", "*", "torch", ".", "log", "(", "self", ".", "p", ")", "\n", "dropout_reg", "+=", "(", "1.0", "-", "self", ".", "p", ")", "*", "torch", ".", "log", "(", "1.0", "-", "self", ".", "p", ")", "\n", "dropout_reg", "*=", "self", ".", "dropout_regulariser", "*", "x", "[", "0", "]", ".", "numel", "(", ")", "\n", "\n", "self", ".", "regularisation", "=", "weights_reg", "+", "dropout_reg", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.concrete.ConcreteDropout._concrete_dropout": [[79, 111], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.log", "torch.log", "torch.log", "torch.log", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "methods", ["None"], ["", "def", "_concrete_dropout", "(", "self", ",", "x", ":", "Tensor", ")", "->", "Tensor", ":", "\n", "\n", "        ", "\"\"\"Computes the Concrete Dropout.\n        Parameters\n        ----------\n        x : Tensor\n            Input tensor to the Concrete Dropout layer.\n        Returns\n        -------\n        Tensor\n            Outputs from Concrete Dropout.\n        \"\"\"", "\n", "\n", "eps", "=", "1e-7", "\n", "tmp", "=", "0.1", "\n", "\n", "self", ".", "p", "=", "torch", ".", "sigmoid", "(", "self", ".", "p_logit", ")", "\n", "u_noise", "=", "torch", ".", "rand_like", "(", "x", ")", "\n", "\n", "drop_prob", "=", "(", "torch", ".", "log", "(", "self", ".", "p", "+", "eps", ")", "-", "\n", "torch", ".", "log", "(", "1", "-", "self", ".", "p", "+", "eps", ")", "+", "\n", "torch", ".", "log", "(", "u_noise", "+", "eps", ")", "-", "\n", "torch", ".", "log", "(", "1", "-", "u_noise", "+", "eps", ")", ")", "\n", "\n", "drop_prob", "=", "torch", ".", "sigmoid", "(", "drop_prob", "/", "tmp", ")", "\n", "\n", "random_tensor", "=", "1", "-", "drop_prob", "\n", "retain_prob", "=", "1", "-", "self", ".", "p", "\n", "\n", "x", "=", "torch", ".", "mul", "(", "x", ",", "random_tensor", ")", "/", "retain_prob", "\n", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_prot.ProtConv.__init__": [[11, 20], ["torch.Module.__init__", "torch.Conv1d", "torch.Conv1d", "torch.Conv1d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_in", ",", "dim_out", ",", "kernel_size", ",", "padding", ",", "dropout", "=", "None", ")", ":", "\n", "        ", "super", "(", "ProtConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv1d", "(", "in_channels", "=", "dim_in", ",", "out_channels", "=", "dim_out", ",", "\n", "kernel_size", "=", "kernel_size", ",", "padding", "=", "padding", ")", "\n", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "conv", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_prot.ProtConv.forward": [[21, 33], ["model_prot.ProtConv.conv", "model_prot.ProtConv.act", "len", "fea.unsqueeze.unsqueeze.unsqueeze", "torch.dropout", "torch.dropout", "torch.dropout", "fea.unsqueeze.unsqueeze.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "fea", ")", ":", "\n", "        ", "if", "len", "(", "fea", ".", "size", "(", ")", ")", "==", "2", ":", "\n", "            ", "fea", "=", "fea", ".", "unsqueeze", "(", "1", ")", "\n", "\n", "", "x", "=", "self", ".", "conv", "(", "fea", ")", "\n", "\n", "x", "=", "self", ".", "act", "(", "x", ")", "\n", "\n", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "x", "=", "F", ".", "dropout", "(", "x", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphNet.__init__": [[13, 24], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "concrete.ConcreteDropout", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "dim_node", ",", "dim_edge", ",", "dropout", ")", ":", "\n", "        ", "super", "(", "GraphNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "fc_edge", "=", "nn", ".", "Linear", "(", "dim_node", "+", "dim_edge", ",", "dim_edge", ")", "\n", "self", ".", "fc_node", "=", "nn", ".", "Linear", "(", "dim_node", "+", "dim_edge", ",", "dim_node", ")", "\n", "\n", "self", ".", "act", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "ConDrop", "=", "ConcreteDropout", "(", ")", "\n", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc_edge", ".", "weight", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "fc_node", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphNet.forward": [[25, 42], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_drug_conc.GraphNet.act", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model_drug_conc.GraphNet.act", "model_drug_conc.GraphNet.ConDrop", "model_drug_conc.GraphNet.ConDrop", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose", "torch.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "node", ",", "edge", ",", "e2n", ")", ":", "\n", "#node->edge", "\n", "        ", "x_edge", "=", "torch", ".", "cat", "(", "[", "edge", ",", "torch", ".", "mm", "(", "torch", ".", "transpose", "(", "e2n", ",", "0", ",", "1", ")", ",", "node", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "x_edge", "=", "self", ".", "ConDrop", "(", "x_edge", ",", "self", ".", "fc_edge", ")", "\n", "", "x_edge", "=", "self", ".", "act", "(", "x_edge", ")", "\n", "\n", "#edge->node", "\n", "x_node", "=", "torch", ".", "cat", "(", "[", "node", ",", "torch", ".", "matmul", "(", "e2n", ",", "x_edge", ")", "]", ",", "dim", "=", "-", "1", ")", "\n", "if", "self", ".", "dropout", "is", "not", "None", ":", "\n", "            ", "x_node", "=", "self", ".", "ConDrop", "(", "x_node", ",", "self", ".", "fc_node", ")", "\n", "", "x_node", "=", "self", ".", "act", "(", "x_node", ")", "\n", "\n", "x_node", "=", "x_node", "+", "node", "\n", "x_edge", "=", "x_edge", "+", "edge", "\n", "\n", "return", "(", "x_node", ",", "x_edge", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__": [[45, 48], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.__init__"], ["    ", "def", "__init__", "(", "self", ",", "reduce", ")", ":", "\n", "        ", "super", "(", "GraphPool", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reduce", "=", "reduce", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.model.model_drug_conc.GraphPool.forward": [[49, 52], ["torch_scatter.scatter"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "fea", ",", "idx_fea", ")", ":", "\n", "        ", "x", "=", "torch_scatter", ".", "scatter", "(", "fea", ",", "idx_fea", ",", "dim", "=", "0", ",", "reduce", "=", "self", ".", "reduce", ")", "\n", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.drug_fea.one_hot_encoding": [[9, 17], ["numpy.zeros", "list", "print", "exit", "len", "cand_list.index"], "function", ["None"], ["def", "one_hot_encoding", "(", "x", ",", "cand_list", ")", ":", "\n", "    ", "if", "x", "not", "in", "cand_list", ":", "\n", "        ", "print", "(", "\"{} is not in {}.\"", ".", "format", "(", "x", ",", "cand_list", ")", ")", "\n", "exit", "(", "1", ")", "\n", "\n", "", "one_hot_vec", "=", "np", ".", "zeros", "(", "len", "(", "cand_list", ")", ")", "\n", "one_hot_vec", "[", "cand_list", ".", "index", "(", "x", ")", "]", "=", "1", "\n", "return", "list", "(", "one_hot_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.drug_fea.get_atom_feature": [[51, 64], ["drug_fea.one_hot_encoding", "drug_fea.one_hot_encoding", "drug_fea.one_hot_encoding", "atom.GetSymbol", "atom.GetHybridization", "drug_fea.one_hot_encoding", "atom.GetFormalCharge", "int", "atom.GetTotalNumHs", "atom.GetIsAromatic"], "function", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.one_hot_encoding", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.one_hot_encoding", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.one_hot_encoding", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.one_hot_encoding"], ["def", "get_atom_feature", "(", "atom", ",", "explicit_H", "=", "False", ")", ":", "\n", "    ", "out", "=", "one_hot_encoding", "(", "atom", ".", "GetSymbol", "(", ")", ",", "\n", "atom_type_list", ")", "\n", "out", "+=", "one_hot_encoding", "(", "atom", ".", "GetHybridization", "(", ")", ",", "\n", "hybridization_list", ")", "\n", "if", "not", "explicit_H", ":", "\n", "        ", "out", "+=", "one_hot_encoding", "(", "atom", ".", "GetTotalNumHs", "(", ")", ",", "\n", "num_h_list", ")", "\n", "\n", "", "out", "+=", "one_hot_encoding", "(", "atom", ".", "GetFormalCharge", "(", ")", ",", "formal_charge_list", ")", "\n", "out", "+=", "[", "int", "(", "atom", ".", "GetIsAromatic", "(", ")", ")", "]", "\n", "\n", "return", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.drug_fea.bond_features": [[65, 71], ["drug_fea.one_hot_encoding", "bond.GetBondType", "bond.GetIsConjugated", "bond.IsInRing"], "function", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.one_hot_encoding"], ["", "def", "bond_features", "(", "bond", ",", "explicit_H", "=", "False", ")", ":", "\n", "    ", "out", "=", "one_hot_encoding", "(", "bond", ".", "GetBondType", "(", ")", ",", "\n", "bond_type_list", ")", "\n", "out", "+=", "[", "bond", ".", "GetIsConjugated", "(", ")", "]", "\n", "out", "+=", "[", "bond", ".", "IsInRing", "(", ")", "]", "\n", "return", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.drug_fea.get_mol_fea": [[73, 122], ["tqdm.tqdm", "len", "enumerate", "rdkit.Chem.MolFromSmiles", "Chem.MolFromSmiles.GetAtoms", "Chem.MolFromSmiles.GetBonds", "len", "len", "numpy.zeros", "enumerate", "numpy.array", "rdkit.Chem.rdmolops.GetAdjacencyMatrix", "numpy.zeros", "numpy.zeros", "range", "drug_node_list.append", "drug_n2n_list.append", "drug_edge_list.append", "drug_e2n_list.append", "len", "len", "print", "exit", "drug_fea.get_atom_feature", "range", "Chem.MolFromSmiles.GetBondBetweenAtoms", "drug_fea.bond_features"], "function", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.drug_fea.get_atom_feature", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.drug_fea.bond_features"], ["", "def", "get_mol_fea", "(", "drug_smiles_list", ")", ":", "\n", "    ", "drug_node_list", "=", "[", "]", "\n", "drug_edge_list", "=", "[", "]", "\n", "drug_n2n_list", "=", "[", "]", "\n", "drug_e2n_list", "=", "[", "]", "\n", "node_dim", "=", "len", "(", "atom_type_list", "+", "hybridization_list", "+", "num_h_list", "+", "formal_charge_list", ")", "+", "1", "\n", "edge_dim", "=", "len", "(", "bond_type_list", ")", "+", "1", "+", "1", "\n", "\n", "for", "i", ",", "smiles", "in", "tqdm", ".", "tqdm", "(", "enumerate", "(", "drug_smiles_list", ")", ",", "total", "=", "len", "(", "drug_smiles_list", ")", ")", ":", "\n", "        ", "if", "smiles", "[", "-", "1", "]", "==", "' '", ":", "\n", "            ", "smiles", "=", "smiles", "[", ":", "-", "1", "]", "\n", "\n", "", "mol", "=", "Chem", ".", "MolFromSmiles", "(", "smiles", ")", "\n", "if", "mol", "is", "None", ":", "\n", "            ", "print", "(", "\"molecule {} is not defined well\"", ".", "format", "(", "smiles", ")", ")", "\n", "exit", "(", "1", ")", "\n", "\n", "", "atom_list", "=", "mol", ".", "GetAtoms", "(", ")", "\n", "bond_list", "=", "mol", ".", "GetBonds", "(", ")", "\n", "\n", "n_node", "=", "len", "(", "atom_list", ")", "\n", "n_edge", "=", "len", "(", "bond_list", ")", "\n", "\n", "node", "=", "np", ".", "zeros", "(", "(", "n_node", ",", "node_dim", ")", ")", "\n", "for", "j", ",", "atom", "in", "enumerate", "(", "atom_list", ")", ":", "\n", "            ", "node", "[", "j", "]", "+=", "get_atom_feature", "(", "atom", ")", "\n", "", "node", "=", "np", ".", "array", "(", "node", ")", "\n", "\n", "n2n", "=", "GetAdjacencyMatrix", "(", "mol", ")", "\n", "\n", "edge", "=", "np", ".", "zeros", "(", "(", "n_edge", ",", "edge_dim", ")", ")", "\n", "e2n", "=", "np", ".", "zeros", "(", "(", "n_node", ",", "n_edge", ")", ")", "\n", "edge_idx", "=", "0", "\n", "for", "j", "in", "range", "(", "n_node", ")", ":", "\n", "            ", "for", "k", "in", "range", "(", "j", "+", "1", ",", "n_node", ")", ":", "\n", "                ", "bond", "=", "mol", ".", "GetBondBetweenAtoms", "(", "j", ",", "k", ")", "\n", "if", "bond", "is", "not", "None", ":", "\n", "                    ", "edge", "[", "edge_idx", "]", "+=", "bond_features", "(", "bond", ")", "\n", "e2n", "[", "j", ",", "edge_idx", "]", "+=", "1", "\n", "e2n", "[", "k", ",", "edge_idx", "]", "+=", "1", "\n", "edge_idx", "+=", "1", "\n", "\n", "", "", "", "drug_node_list", ".", "append", "(", "node", ")", "\n", "drug_n2n_list", ".", "append", "(", "n2n", ")", "\n", "drug_edge_list", ".", "append", "(", "edge", ")", "\n", "drug_e2n_list", ".", "append", "(", "e2n", ")", "\n", "\n", "", "return", "(", "drug_node_list", ",", "drug_edge_list", ",", "\n", "drug_n2n_list", ",", "drug_e2n_list", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.one_hot_encoding": [[8, 16], ["numpy.zeros", "print", "exit", "len", "cand_list.index"], "function", ["None"], ["def", "one_hot_encoding", "(", "x", ",", "cand_list", ")", ":", "\n", "    ", "if", "x", "not", "in", "cand_list", ":", "\n", "        ", "print", "(", "\"{} is not in {}.\"", ".", "format", "(", "x", ",", "cand_list", ")", ")", "\n", "exit", "(", "1", ")", "\n", "\n", "", "one_hot_vec", "=", "np", ".", "zeros", "(", "len", "(", "cand_list", ")", ")", "\n", "one_hot_vec", "[", "cand_list", ".", "index", "(", "x", ")", "]", "=", "1", "\n", "return", "(", "one_hot_vec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.get_prot_fea": [[24, 37], ["get_prot_fea_simple", "pretrained.lower", "prot_fea.get_prot_fea_transformer6", "pretrained.lower", "prot_fea.get_prot_fea_transformer12", "pretrained.lower", "prot_fea.get_prot_fea_transformer34", "print", "exit"], "function", ["home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.get_prot_fea_transformer6", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.get_prot_fea_transformer12", "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.get_prot_fea_transformer34"], ["", "def", "get_prot_fea", "(", "prot_seq_list", ",", "pretrained", "=", "None", ")", ":", "\n", "    ", "if", "pretrained", "==", "None", ":", "\n", "        ", "prot_fea_list", "=", "get_prot_fea_simple", "(", "prot_seq_list", ",", "max_seq_len", ")", "\n", "", "elif", "pretrained", ".", "lower", "(", ")", "==", "'transformer6'", ":", "\n", "        ", "prot_fea_list", "=", "get_prot_fea_transformer6", "(", "prot_seq_list", ")", "\n", "", "elif", "pretrained", ".", "lower", "(", ")", "==", "'transformer12'", ":", "\n", "        ", "prot_fea_list", "=", "get_prot_fea_transformer12", "(", "prot_seq_list", ")", "\n", "", "elif", "pretrained", ".", "lower", "(", ")", "==", "'transformer34'", ":", "\n", "        ", "prot_fea_list", "=", "get_prot_fea_transformer34", "(", "prot_seq_list", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Please use good pretrained model.\"", ")", "\n", "exit", "(", "1", ")", "\n", "", "return", "prot_fea_list", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.get_prot_fea_transformer6": [[39, 67], ["len", "esm.pretrained.esm1_t6_43M_UR50S", "alphabet.get_batch_converter", "math.ceil", "tqdm.tqdm", "range", "range", "alphabet.get_batch_converter.", "enumerate", "len", "batch_seq_list.append", "torch.no_grad", "model", "prot_fea_list.append", "token_embeddings[].mean().numpy", "token_embeddings[].mean", "len"], "function", ["None"], ["", "def", "get_prot_fea_transformer6", "(", "prot_seq_list", ")", ":", "\n", "    ", "n_prot", "=", "len", "(", "prot_seq_list", ")", "\n", "model", ",", "alphabet", "=", "esm", ".", "pretrained", ".", "esm1_t6_43M_UR50S", "(", ")", "\n", "batch_converter", "=", "alphabet", ".", "get_batch_converter", "(", ")", "\n", "\n", "prot_fea_list", "=", "[", "]", "\n", "n_batch", "=", "2", "\n", "n_step", "=", "math", ".", "ceil", "(", "n_prot", "/", "n_batch", ")", "\n", "for", "i", "in", "tqdm", ".", "tqdm", "(", "range", "(", "n_step", ")", ")", ":", "\n", "        ", "if", "i", "==", "n_step", ":", "\n", "            ", "buf_list", "=", "prot_seq_list", "[", "i", "*", "n_batch", ":", "]", "\n", "", "else", ":", "\n", "            ", "buf_list", "=", "prot_seq_list", "[", "i", "*", "n_batch", ":", "(", "i", "+", "1", ")", "*", "n_batch", "]", "\n", "\n", "", "batch_seq_list", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "buf_list", ")", ")", ":", "\n", "            ", "batch_seq_list", ".", "append", "(", "(", "'protein{}'", ".", "format", "(", "j", "+", "1", ")", ",", "buf_list", "[", "j", "]", ")", ")", "\n", "\n", "", "batch_labels", ",", "batch_strs", ",", "batch_tokens", "=", "batch_converter", "(", "batch_seq_list", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "results", "=", "model", "(", "batch_tokens", ",", "repr_layers", "=", "[", "6", "]", ")", "\n", "", "token_embeddings", "=", "results", "[", "'representations'", "]", "[", "6", "]", "\n", "\n", "for", "j", ",", "(", "_", ",", "seq", ")", "in", "enumerate", "(", "batch_seq_list", ")", ":", "\n", "            ", "prot_fea_list", ".", "append", "(", "token_embeddings", "[", "j", ",", "1", ":", "len", "(", "seq", ")", "+", "1", "]", ".", "mean", "(", "0", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "return", "prot_fea_list", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.get_prot_fea_transformer12": [[69, 97], ["len", "esm.pretrained.esm1_t12_85M_UR50S", "alphabet.get_batch_converter", "math.ceil", "tqdm.tqdm", "range", "range", "alphabet.get_batch_converter.", "enumerate", "len", "batch_seq_list.append", "torch.no_grad", "model", "prot_fea_list.append", "token_embeddings[].mean().numpy", "token_embeddings[].mean", "len"], "function", ["None"], ["", "def", "get_prot_fea_transformer12", "(", "prot_seq_list", ")", ":", "\n", "    ", "n_prot", "=", "len", "(", "prot_seq_list", ")", "\n", "model", ",", "alphabet", "=", "esm", ".", "pretrained", ".", "esm1_t12_85M_UR50S", "(", ")", "\n", "batch_converter", "=", "alphabet", ".", "get_batch_converter", "(", ")", "\n", "\n", "prot_fea_list", "=", "[", "]", "\n", "n_batch", "=", "2", "\n", "n_step", "=", "math", ".", "ceil", "(", "n_prot", "/", "n_batch", ")", "\n", "for", "i", "in", "tqdm", ".", "tqdm", "(", "range", "(", "n_step", ")", ")", ":", "\n", "        ", "if", "i", "==", "n_step", ":", "\n", "            ", "buf_list", "=", "prot_seq_list", "[", "i", "*", "n_batch", ":", "]", "\n", "", "else", ":", "\n", "            ", "buf_list", "=", "prot_seq_list", "[", "i", "*", "n_batch", ":", "(", "i", "+", "1", ")", "*", "n_batch", "]", "\n", "\n", "", "batch_seq_list", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "buf_list", ")", ")", ":", "\n", "            ", "batch_seq_list", ".", "append", "(", "(", "'protein{}'", ".", "format", "(", "j", "+", "1", ")", ",", "buf_list", "[", "j", "]", ")", ")", "\n", "\n", "", "batch_labels", ",", "batch_strs", ",", "batch_tokens", "=", "batch_converter", "(", "batch_seq_list", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "results", "=", "model", "(", "batch_tokens", ",", "repr_layers", "=", "[", "6", "]", ")", "\n", "", "token_embeddings", "=", "results", "[", "'representations'", "]", "[", "6", "]", "\n", "\n", "for", "j", ",", "(", "_", ",", "seq", ")", "in", "enumerate", "(", "batch_seq_list", ")", ":", "\n", "            ", "prot_fea_list", ".", "append", "(", "token_embeddings", "[", "j", ",", "1", ":", "len", "(", "seq", ")", "+", "1", "]", ".", "mean", "(", "0", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "return", "prot_fea_list", "\n", "\n"]], "home.repos.pwc.inspect_result.QHwan_PretrainDPI.data.prot_fea.get_prot_fea_transformer34": [[99, 127], ["len", "esm.pretrained.esm1_t34_670M_UR50S", "alphabet.get_batch_converter", "math.ceil", "tqdm.tqdm", "range", "range", "alphabet.get_batch_converter.", "enumerate", "len", "batch_seq_list.append", "torch.no_grad", "model", "prot_fea_list.append", "token_embeddings[].mean().numpy", "token_embeddings[].mean", "len"], "function", ["None"], ["", "def", "get_prot_fea_transformer34", "(", "prot_seq_list", ")", ":", "\n", "    ", "n_prot", "=", "len", "(", "prot_seq_list", ")", "\n", "model", ",", "alphabet", "=", "esm", ".", "pretrained", ".", "esm1_t34_670M_UR50S", "(", ")", "\n", "batch_converter", "=", "alphabet", ".", "get_batch_converter", "(", ")", "\n", "\n", "prot_fea_list", "=", "[", "]", "\n", "n_batch", "=", "2", "\n", "n_step", "=", "math", ".", "ceil", "(", "n_prot", "/", "n_batch", ")", "\n", "for", "i", "in", "tqdm", ".", "tqdm", "(", "range", "(", "n_step", ")", ")", ":", "\n", "        ", "if", "i", "==", "n_step", ":", "\n", "            ", "buf_list", "=", "prot_seq_list", "[", "i", "*", "n_batch", ":", "]", "\n", "", "else", ":", "\n", "            ", "buf_list", "=", "prot_seq_list", "[", "i", "*", "n_batch", ":", "(", "i", "+", "1", ")", "*", "n_batch", "]", "\n", "\n", "", "batch_seq_list", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "buf_list", ")", ")", ":", "\n", "            ", "batch_seq_list", ".", "append", "(", "(", "'protein{}'", ".", "format", "(", "j", "+", "1", ")", ",", "buf_list", "[", "j", "]", ")", ")", "\n", "\n", "", "batch_labels", ",", "batch_strs", ",", "batch_tokens", "=", "batch_converter", "(", "batch_seq_list", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "results", "=", "model", "(", "batch_tokens", ",", "repr_layers", "=", "[", "34", "]", ")", "\n", "", "token_embeddings", "=", "results", "[", "'representations'", "]", "[", "34", "]", "\n", "\n", "for", "j", ",", "(", "_", ",", "seq", ")", "in", "enumerate", "(", "batch_seq_list", ")", ":", "\n", "            ", "prot_fea_list", ".", "append", "(", "token_embeddings", "[", "j", ",", "1", ":", "len", "(", "seq", ")", "+", "1", "]", ".", "mean", "(", "0", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "", "", "return", "prot_fea_list", "\n", "", ""]]}