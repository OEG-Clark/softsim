{"home.repos.pwc.inspect_result.kimvc7_HDL.src.pgd_attack.LinfPGDAttack.__init__": [[18, 46], ["tensorflow.gradients", "tensorflow.one_hot", "tensorflow.reduce_sum", "tensorflow.reduce_max", "print", "tensorflow.nn.relu"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "model", ",", "epsilon", ",", "k", ",", "a", ",", "random_start", ",", "loss_func", ",", "clip", "=", "True", ")", ":", "\n", "    ", "\"\"\"Attack parameter initialization. The attack performs k steps of\n       size a, while always staying within epsilon from the initial\n       point.\"\"\"", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "a", "=", "a", "\n", "self", ".", "rand", "=", "random_start", "\n", "self", ".", "clip", "=", "clip", "\n", "\n", "if", "loss_func", "==", "'xent'", ":", "\n", "      ", "loss", "=", "model", ".", "xent", "\n", "", "elif", "loss_func", "==", "'cw'", ":", "\n", "      ", "label_mask", "=", "tf", ".", "one_hot", "(", "model", ".", "y_input", ",", "\n", "10", ",", "\n", "on_value", "=", "1.0", ",", "\n", "off_value", "=", "0.0", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "correct_logit", "=", "tf", ".", "reduce_sum", "(", "label_mask", "*", "model", ".", "pre_softmax", ",", "axis", "=", "1", ")", "\n", "wrong_logit", "=", "tf", ".", "reduce_max", "(", "(", "1", "-", "label_mask", ")", "*", "model", ".", "pre_softmax", "\n", "-", "1e4", "*", "label_mask", ",", "axis", "=", "1", ")", "\n", "loss", "=", "-", "tf", ".", "nn", ".", "relu", "(", "correct_logit", "-", "wrong_logit", "+", "50", ")", "\n", "", "else", ":", "\n", "      ", "print", "(", "'Unknown loss function. Defaulting to cross-entropy'", ")", "\n", "loss", "=", "model", ".", "xent", "\n", "\n", "", "self", ".", "grad", "=", "tf", ".", "gradients", "(", "loss", ",", "model", ".", "x_input", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.pgd_attack.LinfPGDAttack.perturb": [[47, 68], ["range", "numpy.copy", "sess.run", "numpy.clip", "numpy.random.uniform", "numpy.clip", "numpy.sign", "numpy.clip"], "methods", ["None"], ["", "def", "perturb", "(", "self", ",", "x_nat", ",", "y", ",", "sess", ")", ":", "\n", "    ", "\"\"\"Given a set of examples (x_nat, y), returns a set of adversarial\n       examples within epsilon of x_nat in l_infinity norm.\"\"\"", "\n", "if", "self", ".", "rand", ":", "\n", "      ", "x", "=", "x_nat", "+", "np", ".", "random", ".", "uniform", "(", "-", "self", ".", "epsilon", ",", "self", ".", "epsilon", ",", "x_nat", ".", "shape", ")", "\n", "if", "self", ".", "clip", ":", "\n", "        ", "x", "=", "np", ".", "clip", "(", "x", ",", "0", ",", "1", ")", "# ensure valid pixel range", "\n", "", "", "else", ":", "\n", "      ", "x", "=", "np", ".", "copy", "(", "x_nat", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "self", ".", "k", ")", ":", "\n", "      ", "grad", "=", "sess", ".", "run", "(", "self", ".", "grad", ",", "feed_dict", "=", "{", "self", ".", "model", ".", "x_input", ":", "x", ",", "\n", "self", ".", "model", ".", "y_input", ":", "y", "}", ")", "\n", "\n", "x", "+=", "self", ".", "a", "*", "np", ".", "sign", "(", "grad", ")", "\n", "\n", "x", "=", "np", ".", "clip", "(", "x", ",", "x_nat", "-", "self", ".", "epsilon", ",", "x_nat", "+", "self", ".", "epsilon", ")", "\n", "if", "self", ".", "clip", ":", "\n", "        ", "x", "=", "np", ".", "clip", "(", "x", ",", "0", ",", "1", ")", "# ensure valid pixel range", "\n", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.pgd_attack.LinfPGDAttack.perturb2": [[69, 88], ["range", "numpy.clip", "numpy.copy", "sess.run", "numpy.clip", "numpy.clip", "numpy.random.uniform", "numpy.sign"], "methods", ["None"], ["", "def", "perturb2", "(", "self", ",", "x_nat", ",", "y", ",", "sess", ")", ":", "\n", "    ", "\"\"\"Given a set of examples (x_nat, y), returns a set of adversarial\n       examples within epsilon of x_nat in l_infinity norm.\"\"\"", "\n", "if", "self", ".", "rand", ":", "\n", "      ", "x", "=", "x_nat", "+", "np", ".", "random", ".", "uniform", "(", "-", "self", ".", "epsilon", ",", "self", ".", "epsilon", ",", "x_nat", ".", "shape", ")", "\n", "x", "=", "np", ".", "clip", "(", "x", ",", "0", ",", "1", ")", "# ensure valid pixel range", "\n", "", "else", ":", "\n", "      ", "x", "=", "np", ".", "copy", "(", "x_nat", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "100", ")", ":", "\n", "      ", "grad", "=", "sess", ".", "run", "(", "self", ".", "grad", ",", "feed_dict", "=", "{", "self", ".", "model", ".", "x_input", ":", "x", ",", "\n", "self", ".", "model", ".", "y_input", ":", "y", "}", ")", "\n", "\n", "x", "+=", "2.5", "*", "self", ".", "epsilon", "/", "100", "*", "np", ".", "sign", "(", "grad", ")", "\n", "\n", "x", "=", "np", ".", "clip", "(", "x", ",", "x_nat", "-", "self", ".", "epsilon", ",", "x_nat", "+", "self", ".", "epsilon", ")", "\n", "x", "=", "np", ".", "clip", "(", "x", ",", "0", ",", "1", ")", "# ensure valid pixel range", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.input_data._DataSet.__init__": [[15, 53], ["tensorflow.python.framework.random_seed.get_seed", "numpy.random.seed", "labels.reshape.reshape.reshape", "numpy.multiply.reshape", "numpy.multiply.astype", "numpy.multiply"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "\n", "images", ",", "\n", "labels", ",", "\n", "dtype", ",", "\n", "reshape", ",", "\n", "num_features", ",", "\n", "seed", ")", ":", "\n", "    ", "\"\"\"Construct a _DataSet.\n\n    Args:\n      images: The images\n      labels: The labels\n      dtype: Output image dtype. One of [uint8, float32]. `uint8` output has\n        range [0,255]. float32 output has range [0,1].\n      reshape: Bool. If True returned images are returned flattened to vectors.\n      num_subsets: Number of training subsets for stability\n      subset_ratio: fraction of original training set that must be in each subset.\n    \"\"\"", "\n", "\n", "seed1", ",", "seed2", "=", "random_seed", ".", "get_seed", "(", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed1", "if", "seed", "is", "None", "else", "seed2", ")", "\n", "# Convert shape from [num examples, rows, columns, depth]", "\n", "# to [num examples, rows*columns] (assuming depth == 1)", "\n", "if", "reshape", ":", "\n", "      ", "labels", "=", "labels", ".", "reshape", "(", "labels", ".", "shape", "[", "0", "]", ")", "\n", "images", "=", "images", ".", "reshape", "(", "images", ".", "shape", "[", "0", "]", ",", "num_features", ")", "\n", "\n", "", "if", "dtype", "==", "dtypes", ".", "float32", ":", "\n", "# Convert from [0, 255] -> [0.0, 1.0].", "\n", "      ", "images", "=", "images", ".", "astype", "(", "np", ".", "float32", ")", "\n", "images", "=", "np", ".", "multiply", "(", "images", ",", "1.0", "/", "255.0", ")", "\n", "#print(images)", "\n", "\n", "", "self", ".", "_num_examples", "=", "images", ".", "shape", "[", "0", "]", "\n", "self", ".", "_images", "=", "images", "\n", "self", ".", "_labels", "=", "labels", "\n", "self", ".", "_epochs_completed", "=", "0", "\n", "self", ".", "_index_in_epoch", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.input_data._DataSet.images": [[54, 57], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "images", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_images", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.input_data._DataSet.labels": [[58, 61], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "labels", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.input_data._DataSet.num_examples": [[62, 65], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "num_examples", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_num_examples", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.input_data._DataSet.epochs_completed": [[66, 69], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "epochs_completed", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_epochs_completed", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.input_data._DataSet.next_batch": [[70, 114], ["numpy.arange", "numpy.random.shuffle", "numpy.arange", "numpy.random.shuffle", "numpy.concatenate", "numpy.concatenate"], "methods", ["None"], ["", "def", "next_batch", "(", "self", ",", "batch_size", ",", "fake_data", "=", "False", ",", "shuffle", "=", "True", ")", ":", "\n", "    ", "\"\"\"Return the next `batch_size` examples from this data set.\"\"\"", "\n", "start", "=", "self", ".", "_index_in_epoch", "\n", "\n", "# Shuffle for the first epoch", "\n", "if", "self", ".", "_epochs_completed", "==", "0", "and", "start", "==", "0", "and", "shuffle", ":", "\n", "      ", "perm0", "=", "np", ".", "arange", "(", "self", ".", "_num_examples", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "perm0", ")", "\n", "self", ".", "_images", "=", "self", ".", "_images", "[", "perm0", "]", "\n", "self", ".", "_labels", "=", "self", ".", "_labels", "[", "perm0", "]", "\n", "\n", "# Go to the next epoch", "\n", "", "if", "start", "+", "batch_size", ">", "self", ".", "_num_examples", ":", "\n", "\n", "# Finished epoch", "\n", "      ", "self", ".", "_epochs_completed", "+=", "1", "\n", "\n", "# Get the rest examples in this epoch", "\n", "rest_num_examples", "=", "self", ".", "_num_examples", "-", "start", "\n", "images_rest_part", "=", "self", ".", "_images", "[", "start", ":", "self", ".", "_num_examples", "]", "\n", "labels_rest_part", "=", "self", ".", "_labels", "[", "start", ":", "self", ".", "_num_examples", "]", "\n", "\n", "# Shuffle the data", "\n", "if", "shuffle", ":", "\n", "        ", "perm", "=", "np", ".", "arange", "(", "self", ".", "_num_examples", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "perm", ")", "\n", "self", ".", "_images", "=", "self", ".", "_images", "[", "perm", "]", "\n", "self", ".", "_labels", "=", "self", ".", "_labels", "[", "perm", "]", "\n", "\n", "# Start next epoch", "\n", "", "start", "=", "0", "\n", "self", ".", "_index_in_epoch", "=", "batch_size", "-", "rest_num_examples", "\n", "end", "=", "self", ".", "_index_in_epoch", "\n", "\n", "images_new_part", "=", "self", ".", "_images", "[", "start", ":", "end", "]", "\n", "labels_new_part", "=", "self", ".", "_labels", "[", "start", ":", "end", "]", "\n", "return", "np", ".", "concatenate", "(", "(", "images_rest_part", ",", "images_new_part", ")", ",", "\n", "axis", "=", "0", ")", ",", "np", ".", "concatenate", "(", "\n", "(", "labels_rest_part", ",", "labels_new_part", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "else", ":", "\n", "      ", "self", ".", "_index_in_epoch", "+=", "batch_size", "\n", "end", "=", "self", ".", "_index_in_epoch", "\n", "return", "self", ".", "_images", "[", "start", ":", "end", "]", ",", "self", ".", "_labels", "[", "start", ":", "end", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.input_data.load_data_set": [[116, 174], ["numpy.random.seed", "numpy.arange", "numpy.random.shuffle", "int", "int", "dict", "input_data._DataSet", "input_data._DataSet", "input_data._DataSet", "tensorflow.datasets.cifar10.load_data", "X_train.astype.astype", "X_test.astype.astype", "tensorflow.datasets.fashion_mnist.load_data", "tensorflow.datasets.mnist.load_data", "data_set.lower", "int", "numpy.load", "print", "print", "print", "data_set.lower", "numpy.mean", "numpy.std", "print", "print", "print", "_Datasets", "numpy.std", "numpy.mean", "numpy.std", "numpy.mean", "str"], "function", ["None"], ["", "", "", "def", "load_data_set", "(", "training_size", ",", "validation_size", ",", "data_set", ",", "seed", "=", "None", ",", "reshape", "=", "True", ",", "dtype", "=", "dtypes", ".", "float32", ")", ":", "\n", "  ", "if", "data_set", "==", "\"cifar10\"", ":", "\n", "    ", "(", "X_train", ",", "y_train", ")", ",", "(", "X_test", ",", "y_test", ")", "=", "keras", ".", "datasets", ".", "cifar10", ".", "load_data", "(", ")", "\n", "X_train", "=", "X_train", ".", "astype", "(", "'float32'", ")", "\n", "X_test", "=", "X_test", ".", "astype", "(", "'float32'", ")", "\n", "num_features", "=", "X_train", ".", "shape", "[", "1", "]", "*", "X_train", ".", "shape", "[", "2", "]", "*", "X_train", ".", "shape", "[", "3", "]", "\n", "", "if", "data_set", "==", "\"fashion_mnist\"", ":", "\n", "    ", "(", "X_train", ",", "y_train", ")", ",", "(", "X_test", ",", "y_test", ")", "=", "keras", ".", "datasets", ".", "fashion_mnist", ".", "load_data", "(", ")", "\n", "num_features", "=", "X_train", ".", "shape", "[", "1", "]", "*", "X_train", ".", "shape", "[", "2", "]", "\n", "", "if", "data_set", "==", "\"mnist\"", ":", "\n", "    ", "(", "X_train", ",", "y_train", ")", ",", "(", "X_test", ",", "y_test", ")", "=", "keras", ".", "datasets", ".", "mnist", ".", "load_data", "(", ")", "\n", "if", "not", "reshape", ":", "\n", "        ", "X_train", "=", "X_train", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "X_test", "=", "X_test", "[", ":", ",", ":", ",", ":", ",", "np", ".", "newaxis", "]", "\n", "", "num_features", "=", "X_train", ".", "shape", "[", "1", "]", "*", "X_train", ".", "shape", "[", "2", "]", "\n", "", "if", "\"uci\"", "in", "data_set", ".", "lower", "(", ")", ":", "\n", "    ", "uci_num", "=", "int", "(", "data_set", "[", "3", ":", "]", ")", "\n", "full_data", "=", "np", ".", "load", "(", "\"../UCI/data\"", "+", "str", "(", "uci_num", ")", "+", "\".pickle\"", ",", "allow_pickle", "=", "True", ")", "\n", "X_train", ",", "X_test", ",", "y_train", ",", "y_test", "=", "full_data", "[", "'x_train'", "]", ",", "full_data", "[", "'x_test'", "]", ",", "full_data", "[", "'y_train'", "]", ",", "full_data", "[", "\n", "'y_test'", "]", "\n", "print", "(", "\"Training data shape:\"", ",", "X_train", ".", "shape", ")", "\n", "print", "(", "\"Training data Std:\"", ",", "np", ".", "std", "(", "X_train", ",", "axis", "=", "0", ")", ")", "\n", "print", "(", "\"Training data Mean:\"", ",", "np", ".", "mean", "(", "X_train", ",", "axis", "=", "0", ")", ")", "\n", "num_features", "=", "X_train", ".", "shape", "[", "1", "]", "\n", "\n", "#Permute data", "\n", "", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "perm0", "=", "np", ".", "arange", "(", "X_train", ".", "shape", "[", "0", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "perm0", ")", "\n", "X", "=", "X_train", "[", "perm0", "]", "\n", "Y", "=", "y_train", "[", "perm0", "]", "\n", "\n", "n", "=", "int", "(", "X_train", ".", "shape", "[", "0", "]", "*", "training_size", ")", "\n", "m", "=", "int", "(", "n", "*", "validation_size", ")", "\n", "X_val", "=", "X", "[", ":", "m", "]", "\n", "y_val", "=", "Y", "[", ":", "m", "]", "\n", "X_train", "=", "X", "[", "m", ":", "n", "]", "\n", "y_train", "=", "Y", "[", "m", ":", "n", "]", "\n", "\n", "if", "\"uci\"", "in", "data_set", ".", "lower", "(", ")", ":", "\n", "    ", "m", "=", "np", ".", "mean", "(", "X_train", ",", "axis", "=", "0", ")", "\n", "s", "=", "np", ".", "std", "(", "X_train", ",", "axis", "=", "0", ")", "\n", "X_train", "=", "(", "X_train", "-", "m", ")", "/", "s", "\n", "X_val", "=", "(", "X_val", "-", "m", ")", "/", "s", "\n", "X_test", "=", "(", "X_test", "-", "m", ")", "/", "s", "\n", "print", "(", "\"Training data shape:\"", ",", "X_train", ".", "shape", ")", "\n", "print", "(", "\"Training data Std:\"", ",", "np", ".", "std", "(", "X_train", ",", "axis", "=", "0", ")", ")", "\n", "print", "(", "\"Training data Mean:\"", ",", "np", ".", "mean", "(", "X_train", ",", "axis", "=", "0", ")", ")", "\n", "# print(\"There are\", X_train.shape[0], \"samples in the training set.\")", "\n", "# print(\"There are\", X_val.shape[0], \"samples in the validation set.\")", "\n", "\n", "", "options", "=", "dict", "(", "dtype", "=", "dtype", ",", "reshape", "=", "reshape", ",", "num_features", "=", "num_features", ",", "seed", "=", "seed", ")", "\n", "\n", "train", "=", "_DataSet", "(", "X_train", ",", "y_train", ",", "**", "options", ")", "\n", "validation", "=", "_DataSet", "(", "X_val", ",", "y_val", ",", "**", "options", ")", "\n", "test", "=", "_DataSet", "(", "X_test", ",", "y_test", ",", "**", "options", ")", "\n", "\n", "return", "_Datasets", "(", "train", "=", "train", ",", "validation", "=", "validation", ",", "test", "=", "test", ")", ",", "X_train", ".", "shape", "", "", ""]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.l0_regularization.hard_sigmoid": [[10, 12], ["tensorflow.minimum", "tensorflow.maximum", "tensorflow.ones_like", "tensorflow.zeros_like"], "function", ["None"], ["def", "hard_sigmoid", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "minimum", "(", "tf", ".", "maximum", "(", "x", ",", "tf", ".", "zeros_like", "(", "x", ")", ")", ",", "tf", ".", "ones_like", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.l0_regularization.get_l0_norm_full": [[13, 37], ["x.get_shape", "tensorflow.random_uniform", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.reduce_sum", "l0_regularization.hard_sigmoid", "tensorflow.random_normal", "tensorflow.sigmoid", "tensorflow.Variable", "tensorflow.multiply", "tensorflow.log", "tensorflow.log", "math.log"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.sigmoid", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.hard_sigmoid", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.sigmoid"], ["", "def", "get_l0_norm_full", "(", "x", ",", "varname", ")", ":", "\n", "\n", "    ", "shape", "=", "x", ".", "get_shape", "(", ")", "\n", "\n", "# sample u", "\n", "u", "=", "tf", ".", "random_uniform", "(", "shape", ")", "\n", "\n", "# initialize log a from normal distribution", "\n", "log_a", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "shape", ",", "mean", "=", "0.0", ",", "stddev", "=", "0.01", ")", ",", "name", "=", "\"log_a_\"", "+", "varname", ")", "\n", "\n", "# compute hard concrete distribution", "\n", "s", "=", "tf", ".", "sigmoid", "(", "(", "tf", ".", "log", "(", "u", ")", "-", "tf", ".", "log", "(", "1.0", "-", "u", ")", "+", "log_a", ")", "/", "BETA", ")", "\n", "\n", "# stretch hard concrete distribution", "\n", "s_bar", "=", "s", "*", "(", "ZETA", "-", "GAMMA", ")", "+", "GAMMA", "\n", "\n", "# compute differentiable l0 norm", "\n", "l0_norm", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "sigmoid", "(", "log_a", "-", "BETA", "*", "math", ".", "log", "(", "-", "GAMMA", "/", "ZETA", ")", ")", ",", "name", "=", "\"l0_norm_\"", "+", "varname", ")", "\n", "\n", "# get mask for calculating sparse version of tensor", "\n", "mask", "=", "hard_sigmoid", "(", "s_bar", ")", "\n", "\n", "# return masked version of tensor and l0 norm", "\n", "return", "tf", ".", "Variable", "(", "tf", ".", "multiply", "(", "x", ",", "mask", ",", "name", "=", "varname", "+", "'masked'", ")", ")", ",", "l0_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.l0_regularization.get_l0_norm": [[38, 61], ["x.get_shape", "tensorflow.random_uniform", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.reduce_sum", "l0_regularization.hard_sigmoid", "tensorflow.random_normal", "tensorflow.sigmoid", "tensorflow.log", "tensorflow.log", "math.log"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.sigmoid", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.hard_sigmoid", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.sigmoid"], ["", "def", "get_l0_norm", "(", "x", ",", "varname", ")", ":", "\n", "\n", "    ", "shape", "=", "x", ".", "get_shape", "(", ")", "\n", "\n", "# sample u", "\n", "u", "=", "tf", ".", "random_uniform", "(", "shape", ")", "\n", "\n", "# initialize log a from normal distribution", "\n", "log_a", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "shape", ",", "mean", "=", "0.0", ",", "stddev", "=", "0.01", ")", ",", "name", "=", "\"log_a_\"", "+", "varname", ")", "\n", "\n", "# compute hard concrete distribution", "\n", "s", "=", "tf", ".", "sigmoid", "(", "(", "tf", ".", "log", "(", "u", ")", "-", "tf", ".", "log", "(", "1.0", "-", "u", ")", "+", "log_a", ")", "/", "BETA", ")", "\n", "\n", "# stretch hard concrete distribution", "\n", "s_bar", "=", "s", "*", "(", "ZETA", "-", "GAMMA", ")", "+", "GAMMA", "\n", "\n", "# compute differentiable l0 norm", "\n", "l0_norm", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "sigmoid", "(", "log_a", "-", "BETA", "*", "math", ".", "log", "(", "-", "GAMMA", "/", "ZETA", ")", ")", ",", "name", "=", "\"l0_norm_\"", "+", "varname", ")", "\n", "\n", "# get mask for calculating sparse version of tensor", "\n", "mask", "=", "hard_sigmoid", "(", "s_bar", ")", "\n", "# return masked version of tensor and l0 norm", "\n", "return", "l0_norm", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.src.l0_regularization.get_l0_mask": [[62, 86], ["x.get_shape", "tensorflow.random_uniform", "tensorflow.Variable", "tensorflow.sigmoid", "tensorflow.reduce_sum", "l0_regularization.hard_sigmoid", "tensorflow.random_normal", "tensorflow.sigmoid", "tensorflow.log", "tensorflow.log", "math.log"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.sigmoid", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.hard_sigmoid", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.sigmoid"], ["", "def", "get_l0_mask", "(", "x", ",", "varname", ")", ":", "\n", "\n", "    ", "shape", "=", "x", ".", "get_shape", "(", ")", "\n", "\n", "# sample u", "\n", "u", "=", "tf", ".", "random_uniform", "(", "shape", ")", "\n", "\n", "# initialize log a from normal distribution", "\n", "log_a", "=", "tf", ".", "Variable", "(", "tf", ".", "random_normal", "(", "shape", ",", "mean", "=", "0.0", ",", "stddev", "=", "0.01", ")", ",", "name", "=", "\"log_a_\"", "+", "varname", ")", "\n", "\n", "# compute hard concrete distribution", "\n", "s", "=", "tf", ".", "sigmoid", "(", "(", "tf", ".", "log", "(", "u", ")", "-", "tf", ".", "log", "(", "1.0", "-", "u", ")", "+", "log_a", ")", "/", "BETA", ")", "\n", "\n", "# stretch hard concrete distribution", "\n", "s_bar", "=", "s", "*", "(", "ZETA", "-", "GAMMA", ")", "+", "GAMMA", "\n", "\n", "# compute differentiable l0 norm", "\n", "l0_norm", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "sigmoid", "(", "log_a", "-", "BETA", "*", "math", ".", "log", "(", "-", "GAMMA", "/", "ZETA", ")", ")", ",", "name", "=", "\"l0_norm_\"", "+", "varname", ")", "\n", "\n", "# get mask for calculating sparse version of tensor", "\n", "mask", "=", "hard_sigmoid", "(", "s_bar", ")", "\n", "\n", "# return masked version of tensor and l0 norm", "\n", "return", "mask", "#tf.multiply(x,mask, name=varname + \"_masked\")", "", "", ""]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.MLP_model.Model.__init__": [[23, 153], ["init_vars", "init_weights", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "setattr", "range", "range", "getattr", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.range", "tensorflow.map_fn", "tensorflow.transpose", "range", "tensorflow.log", "tensorflow.reduce_mean", "tensorflow.nn.relu", "tensorflow.nn.relu", "range", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "tensorflow.gradients", "reset_stored_weights", "MLP_model.Model._bias_variable", "len", "setattr", "setattr", "setattr", "len", "tensorflow.gather_nd", "tensorflow.gradients", "tensorflow.exp", "getattr", "getattr", "len", "tensorflow.cast", "tensorflow.cast", "len", "str", "range", "str", "range", "MLP_model.Model._weight_variable", "MLP_model.Model._bias_variable", "MLP_model.Model.init_mask_weight", "tensorflow.multiply", "tensorflow.reduce_sum", "setattr", "setattr", "len", "setattr", "tensorflow.shape", "tensorflow.stack", "getattr", "tensorflow.reduce_mean", "getattr", "tensorflow.reduce_mean", "getattr", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "str", "str", "range", "len", "len", "tensorflow.cast", "getattr", "tensorflow.nn.relu", "setattr", "setattr", "tensorflow.nn.relu", "setattr", "setattr", "tensorflow.nn.dropout", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.square", "tensorflow.math.greater", "tensorflow.sigmoid", "len", "tensorflow.matmul", "getattr", "len", "tensorflow.matmul", "getattr", "getattr", "len", "tensorflow.cast", "tensorflow.abs", "getattr", "getattr", "len", "tensorflow.constant", "getattr", "tensorflow.matmul", "getattr", "getattr", "getattr", "tensorflow.matmul", "getattr", "getattr", "getattr", "getattr", "getattr", "getattr", "getattr", "getattr"], "methods", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars", "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model.init_weights", "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model.reset_stored_weights", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._bias_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._weight_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._bias_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model.init_mask_weight", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.sigmoid"], ["  ", "def", "__init__", "(", "self", ",", "num_classes", ",", "batch_size", ",", "network_size", ",", "pool_size", ",", "subset_ratio", ",", "num_features", ",", "dropout", "=", "1", ",", "l2", "=", "0", ",", "l0", "=", "0", ",", "rho", "=", "0", ",", "image_size", "=", "None", ",", "ticket", "=", "False", ",", "stored_weights", "=", "None", ")", ":", "\n", "    ", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "subset_ratio", "=", "subset_ratio", "\n", "self", ".", "rho", "=", "rho", "\n", "self", ".", "l2", "=", "l2", "\n", "self", ".", "ticket", "=", "ticket", "\n", "\n", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", "=", "init_vars", "(", "len", "(", "network_size", ")", "+", "1", ")", "\n", "weights", ",", "biases", ",", "stab_weight", ",", "sparse_weights", "=", "init_weights", "(", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", ")", "\n", "if", "stored_weights", "is", "not", "None", ":", "\n", "      ", "weights", ",", "biases", ",", "stab_weight", ",", "sparse_weights", "=", "reset_stored_weights", "(", "stored_weights", ")", "\n", "\n", "\n", "", "layer_sizes", "=", "[", "num_features", "]", "+", "network_size", "+", "[", "num_classes", "]", "\n", "layer_names", "=", "[", "\"x_input\"", "]", "+", "[", "str", "(", "\"h\"", ")", "+", "str", "(", "l", ")", "for", "l", "in", "range", "(", "len", "(", "network_size", ")", "+", "1", ")", "]", "\n", "mask_names", "=", "[", "w_vars", "[", "l", "]", "+", "str", "(", "\"_masked\"", ")", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "norm_names", "=", "[", "w_vars", "[", "l", "]", "+", "str", "(", "\"_norm\"", ")", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "\n", "\n", "self", ".", "x_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "num_features", "]", ")", "\n", "self", ".", "y_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "int64", ",", "shape", "=", "[", "None", "]", ")", "\n", "self", ".", "temp", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "\n", "\n", "\n", "# DEFINE VARIABLES", "\n", "\n", "#Stability Variable", "\n", "setattr", "(", "self", ",", "stable_var", ",", "self", ".", "_bias_variable", "(", "[", "]", ",", "stab_weight", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "#Matrix Variables", "\n", "      ", "setattr", "(", "self", ",", "w_vars", "[", "i", "]", ",", "self", ".", "_weight_variable", "(", "[", "layer_sizes", "[", "i", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "]", ",", "weights", "[", "i", "]", ")", ")", "\n", "#Vector Variables", "\n", "setattr", "(", "self", ",", "b_vars", "[", "i", "]", ",", "self", ".", "_bias_variable", "(", "[", "layer_sizes", "[", "i", "+", "1", "]", "]", ",", "biases", "[", "i", "]", ")", ")", "\n", "#Sparsity Varibles", "\n", "setattr", "(", "self", ",", "sparse_vars", "[", "i", "]", ",", "self", ".", "init_mask_weight", "(", "[", "layer_sizes", "[", "i", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "]", ",", "sparse_weights", "[", "i", "]", ")", ")", "\n", "\n", "\n", "\n", "# DEFINE LAYERS", "\n", "", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "\n", "      ", "if", "l0", ">", "0", ":", "\n", "\n", "#Compute mask", "\n", "        ", "mask", "=", "None", "\n", "\n", "if", "self", ".", "ticket", ":", "\n", "          ", "mask", "=", "tf", ".", "cast", "(", "tf", ".", "math", ".", "greater", "(", "tf", ".", "constant", "(", "[", "mask_initial_value", "]", ")", ",", "getattr", "(", "self", ",", "sparse_vars", "[", "l", "]", ")", ")", ",", "tf", ".", "float32", ")", "\n", "", "else", ":", "\n", "          ", "mask", "=", "scaling", "*", "tf", ".", "sigmoid", "(", "self", ".", "temp", "*", "getattr", "(", "self", ",", "sparse_vars", "[", "l", "]", ")", ")", "\n", "\n", "#Compute masked weights and l1 norm", "\n", "", "W_masked", "=", "tf", ".", "multiply", "(", "getattr", "(", "self", ",", "w_vars", "[", "l", "]", ")", ",", "mask", ")", "\n", "W_norm", "=", "tf", ".", "reduce_sum", "(", "mask", ")", "\n", "setattr", "(", "self", ",", "mask_names", "[", "l", "]", ",", "W_masked", ")", "\n", "setattr", "(", "self", ",", "norm_names", "[", "l", "]", ",", "W_norm", ")", "\n", "\n", "if", "l", "<", "len", "(", "w_vars", ")", "-", "1", ":", "\n", "          ", "hidden_layer", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "getattr", "(", "self", ",", "layer_names", "[", "l", "]", ")", ",", "getattr", "(", "self", ",", "mask_names", "[", "l", "]", ")", ")", "+", "getattr", "(", "self", ",", "b_vars", "[", "l", "]", ")", ")", "\n", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ",", "hidden_layer", ")", "\n", "", "else", ":", "\n", "          ", "hidden_layer", "=", "tf", ".", "matmul", "(", "getattr", "(", "self", ",", "layer_names", "[", "l", "]", ")", ",", "getattr", "(", "self", ",", "mask_names", "[", "l", "]", ")", ")", "+", "getattr", "(", "self", ",", "b_vars", "[", "l", "]", ")", "\n", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ",", "hidden_layer", ")", "\n", "\n", "", "", "else", ":", "\n", "\n", "        ", "if", "l", "<", "len", "(", "w_vars", ")", "-", "1", ":", "\n", "          ", "hidden_layer", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "getattr", "(", "self", ",", "layer_names", "[", "l", "]", ")", ",", "getattr", "(", "self", ",", "w_vars", "[", "l", "]", ")", ")", "+", "getattr", "(", "self", ",", "b_vars", "[", "l", "]", ")", ")", "\n", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ",", "hidden_layer", ")", "\n", "", "else", ":", "\n", "          ", "hidden_layer", "=", "tf", ".", "matmul", "(", "getattr", "(", "self", ",", "layer_names", "[", "l", "]", ")", ",", "getattr", "(", "self", ",", "w_vars", "[", "l", "]", ")", ")", "+", "getattr", "(", "self", ",", "b_vars", "[", "l", "]", ")", "\n", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ",", "hidden_layer", ")", "\n", "\n", "\n", "", "", "if", "l", "<", "len", "(", "network_size", ")", ":", "\n", "        ", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ",", "tf", ".", "nn", ".", "dropout", "(", "getattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ")", ",", "self", ".", "dropout", ")", ")", "\n", "\n", "\n", "#Compute standard Cross Entropy", "\n", "", "", "self", ".", "pre_softmax", "=", "getattr", "(", "self", ",", "layer_names", "[", "len", "(", "layer_sizes", ")", "-", "1", "]", ")", "\n", "y_xent", "=", "tf", ".", "nn", ".", "sparse_softmax_cross_entropy_with_logits", "(", "labels", "=", "self", ".", "y_input", ",", "logits", "=", "self", ".", "pre_softmax", ")", "\n", "self", ".", "logits", "=", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "pre_softmax", ")", "\n", "self", ".", "xent", "=", "tf", ".", "reduce_mean", "(", "y_xent", ")", "\n", "\n", "\n", "#Compute robust cross-entropy.", "\n", "data_range", "=", "tf", ".", "range", "(", "tf", ".", "shape", "(", "self", ".", "y_input", ")", "[", "0", "]", ")", "\n", "indices", "=", "tf", ".", "map_fn", "(", "lambda", "n", ":", "tf", ".", "stack", "(", "[", "tf", ".", "cast", "(", "self", ".", "y_input", "[", "n", "]", ",", "tf", ".", "int32", ")", ",", "n", "]", ")", ",", "data_range", ")", "\n", "pre_softmax_t", "=", "tf", ".", "transpose", "(", "self", ".", "pre_softmax", ")", "\n", "self", ".", "nom_exponent", "=", "pre_softmax_t", "-", "tf", ".", "gather_nd", "(", "pre_softmax_t", ",", "indices", ")", "\n", "\n", "sum_exps", "=", "0", "\n", "for", "i", "in", "range", "(", "num_classes", ")", ":", "\n", "      ", "grad", "=", "tf", ".", "gradients", "(", "self", ".", "nom_exponent", "[", "i", "]", ",", "self", ".", "x_input", ")", "\n", "exponent", "=", "rho", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "grad", "[", "0", "]", ")", ",", "axis", "=", "1", ")", "+", "self", ".", "nom_exponent", "[", "i", "]", "\n", "sum_exps", "+=", "tf", ".", "exp", "(", "exponent", ")", "\n", "", "robust_y_xent", "=", "tf", ".", "log", "(", "sum_exps", ")", "\n", "self", ".", "robust_xent", "=", "tf", ".", "reduce_mean", "(", "robust_y_xent", ")", "\n", "\n", "#Compute stable cross-entropy.", "\n", "self", ".", "stable_data_loss", "=", "tf", ".", "nn", ".", "relu", "(", "y_xent", "-", "getattr", "(", "self", ",", "stable_var", ")", ")", "\n", "self", ".", "stable_xent", "=", "getattr", "(", "self", ",", "stable_var", ")", "+", "1", "/", "(", "self", ".", "subset_ratio", ")", "*", "tf", ".", "reduce_mean", "(", "self", ".", "stable_data_loss", ")", "\n", "\n", "#Compute stable robust cross-entropy.", "\n", "self", ".", "rob_stable_data_loss", "=", "tf", ".", "nn", ".", "relu", "(", "robust_y_xent", "-", "getattr", "(", "self", ",", "stable_var", ")", ")", "\n", "self", ".", "robust_stable_xent", "=", "getattr", "(", "self", ",", "stable_var", ")", "+", "1", "/", "(", "self", ".", "subset_ratio", ")", "*", "tf", ".", "reduce_mean", "(", "self", ".", "rob_stable_data_loss", ")", "\n", "\n", "#Compute regularization terms", "\n", "l0_regularizer", "=", "0", "\n", "l2_regularizer", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "      ", "if", "l0", ">", "0", ":", "\n", "        ", "l0_regularizer", "+=", "getattr", "(", "self", ",", "norm_names", "[", "i", "]", ")", "\n", "l2_regularizer", "+=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "getattr", "(", "self", ",", "mask_names", "[", "i", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "l2_regularizer", "+=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "getattr", "(", "self", ",", "w_vars", "[", "i", "]", ")", ")", ")", "\n", "\n", "", "", "self", ".", "regularizer", "=", "l2", "*", "l2_regularizer", "+", "l0", "*", "l0_regularizer", "\n", "\n", "\n", "#Evaluation", "\n", "self", ".", "y_pred", "=", "tf", ".", "argmax", "(", "self", ".", "pre_softmax", ",", "1", ")", "\n", "correct_prediction", "=", "tf", ".", "equal", "(", "self", ".", "y_pred", ",", "self", ".", "y_input", ")", "\n", "self", ".", "num_correct", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "int64", ")", ")", "\n", "self", ".", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "self", ".", "gr", "=", "tf", ".", "gradients", "(", "self", ".", "xent", ",", "self", ".", "log_a_W1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.MLP_model.Model._weight_variable": [[156, 165], ["tensorflow.glorot_uniform_initializer", "tensorflow.get_variable", "tensorflow.constant", "tensorflow.Variable", "str", "numpy.random.randint"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_weight_variable", "(", "shape", ",", "initial", "=", "None", ")", ":", "\n", "      ", "if", "initial", "is", "None", ":", "\n", "        ", "W0", "=", "tf", ".", "glorot_uniform_initializer", "(", ")", "\n", "return", "tf", ".", "get_variable", "(", "shape", "=", "shape", ",", "initializer", "=", "W0", ",", "name", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "1e10", ")", ")", ")", "\n", "\n", "", "else", ":", "\n", "        ", "W0", "=", "tf", ".", "constant", "(", "initial", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "W0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.MLP_model.Model._bias_variable": [[166, 174], ["tensorflow.constant", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_bias_variable", "(", "shape", ",", "initial", "=", "None", ")", ":", "\n", "      ", "if", "initial", "is", "None", ":", "\n", "        ", "b0", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "b0", ")", "\n", "", "else", ":", "\n", "        ", "b0", "=", "tf", ".", "constant", "(", "initial", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "b0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.MLP_model.Model.init_mask_weight": [[176, 185], ["tensorflow.constant", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "init_mask_weight", "(", "shape", ",", "initial", "=", "None", ")", ":", "\n", "      ", "if", "initial", "is", "None", ":", "\n", "        ", "a0", "=", "tf", ".", "constant", "(", "mask_initial_value", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "#a0 = tf.Variable(tf.random_normal(shape, mean=0.0, stddev=0.01))", "\n", "return", "tf", ".", "Variable", "(", "a0", ")", "\n", "", "else", ":", "\n", "        ", "a0", "=", "tf", ".", "constant", "(", "initial", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "a0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.MLP_model.Model.hard_sigmoid": [[188, 190], ["tensorflow.minimum", "tensorflow.maximum", "tensorflow.ones_like", "tensorflow.zeros_like"], "methods", ["None"], ["", "", "def", "hard_sigmoid", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "minimum", "(", "tf", ".", "maximum", "(", "x", ",", "tf", ".", "zeros_like", "(", "x", ")", ")", ",", "tf", ".", "ones_like", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.MLP_model.sigmoid": [[15, 17], ["float", "numpy.exp"], "function", ["None"], ["def", "sigmoid", "(", "x", ")", ":", "\n", "    ", "return", "float", "(", "1.", "/", "(", "1.", "+", "np", ".", "exp", "(", "-", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model.__init__": [[22, 195], ["init_vars", "init_weights", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.reshape", "setattr", "range", "range", "getattr", "tensorflow.nn.sparse_softmax_cross_entropy_with_logits", "tensorflow.nn.softmax", "tensorflow.reduce_mean", "tensorflow.range", "tensorflow.map_fn", "tensorflow.transpose", "range", "tensorflow.log", "tensorflow.reduce_mean", "tensorflow.nn.relu", "tensorflow.nn.relu", "range", "tensorflow.argmax", "tensorflow.equal", "tensorflow.reduce_sum", "tensorflow.reduce_mean", "reset_stored_weights", "CNN_model.Model._bias_variable", "len", "len", "tensorflow.gather_nd", "tensorflow.gradients", "tensorflow.exp", "getattr", "getattr", "len", "tensorflow.cast", "tensorflow.cast", "len", "int", "int", "str", "range", "str", "range", "len", "setattr", "setattr", "setattr", "tensorflow.multiply", "tensorflow.reduce_sum", "setattr", "setattr", "len", "setattr", "tensorflow.shape", "tensorflow.stack", "getattr", "tensorflow.reduce_mean", "getattr", "tensorflow.reduce_mean", "getattr", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "math.sqrt", "math.sqrt", "math.ceil", "math.ceil", "str", "str", "range", "len", "len", "CNN_model.Model._weight_variable", "CNN_model.Model._bias_variable", "CNN_model.Model.init_mask_weight", "len", "setattr", "setattr", "setattr", "setattr", "setattr", "setattr", "len", "tensorflow.reshape", "setattr", "tensorflow.cast", "getattr", "tensorflow.nn.relu", "setattr", "setattr", "tensorflow.nn.relu", "setattr", "setattr", "CNN_model.Model._max_pool_2x2", "setattr", "tensorflow.nn.dropout", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.square", "CNN_model.Model._weight_variable", "CNN_model.Model._bias_variable", "CNN_model.Model.init_mask_weight", "CNN_model.Model._weight_variable", "CNN_model.Model._bias_variable", "CNN_model.Model.init_mask_weight", "len", "len", "getattr", "tensorflow.math.greater", "tensorflow.sigmoid", "len", "CNN_model.Model._operation", "getattr", "len", "CNN_model.Model._operation", "getattr", "getattr", "getattr", "tensorflow.cast", "tensorflow.abs", "getattr", "getattr", "len", "tensorflow.constant", "getattr", "CNN_model.Model._operation", "getattr", "getattr", "getattr", "len", "CNN_model.Model._operation", "getattr", "getattr", "getattr", "len", "getattr", "getattr", "getattr", "len", "getattr", "getattr", "len"], "methods", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars", "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model.init_weights", "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model.reset_stored_weights", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._bias_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._weight_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._bias_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model.init_mask_weight", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._max_pool_2x2", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._weight_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._bias_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model.init_mask_weight", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._weight_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._bias_variable", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model.init_mask_weight", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.sigmoid", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._operation", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._operation", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._operation", "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._operation"], ["\t", "def", "__init__", "(", "self", ",", "num_classes", ",", "batch_size", ",", "cnn_size", ",", "pool_size", ",", "subset_ratio", ",", "num_features", ",", "dropout", "=", "1", ",", "l2", "=", "0", ",", "l0", "=", "0", ",", "rho", "=", "0", ",", "image_size", "=", "None", ",", "ticket", "=", "False", ",", "stored_weights", "=", "None", ")", ":", "\n", "\t\t", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "subset_ratio", "=", "subset_ratio", "\n", "self", ".", "rho", "=", "rho", "\n", "self", ".", "l2", "=", "l2", "\n", "self", ".", "ticket", "=", "ticket", "\n", "\n", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", "=", "init_vars", "(", "len", "(", "cnn_size", ")", "+", "1", ")", "\n", "weights", ",", "biases", ",", "stab_weight", ",", "sparse_weights", "=", "init_weights", "(", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", ")", "\n", "if", "stored_weights", "is", "not", "None", ":", "\n", "\t\t\t", "weights", ",", "biases", ",", "stab_weight", ",", "sparse_weights", "=", "reset_stored_weights", "(", "stored_weights", ")", "\n", "\n", "", "if", "image_size", "is", "None", ":", "\n", "\t\t\t", "image_size", "=", "[", "int", "(", "math", ".", "sqrt", "(", "num_features", ")", ")", ",", "int", "(", "math", ".", "sqrt", "(", "num_features", ")", ")", ",", "1", "]", "\n", "\n", "", "reduced_size", "=", "[", "image_size", "[", "0", "]", ",", "image_size", "[", "1", "]", "]", "\n", "for", "pool", "in", "pool_size", ":", "\n", "\t\t\t", "if", "pool", ":", "\n", "\t\t\t\t", "reduced_size", "=", "[", "math", ".", "ceil", "(", "reduced_size", "[", "0", "]", "/", "2", ")", ",", "math", ".", "ceil", "(", "reduced_size", "[", "1", "]", "/", "2", ")", "]", "\n", "\n", "\n", "", "", "layer_sizes", "=", "[", "image_size", "]", "+", "cnn_size", "+", "[", "[", "num_classes", "]", "]", "\n", "layer_names", "=", "[", "\"x_image\"", "]", "+", "[", "str", "(", "\"h\"", ")", "+", "str", "(", "l", ")", "for", "l", "in", "range", "(", "len", "(", "cnn_size", ")", "+", "1", ")", "]", "\n", "mask_names", "=", "[", "w_vars", "[", "l", "]", "+", "str", "(", "\"_masked\"", ")", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "norm_names", "=", "[", "w_vars", "[", "l", "]", "+", "str", "(", "\"_norm\"", ")", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "\n", "self", ".", "x_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "num_features", "]", ")", "\n", "self", ".", "y_input", "=", "tf", ".", "placeholder", "(", "tf", ".", "int64", ",", "shape", "=", "[", "None", "]", ")", "\n", "self", ".", "temp", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "\n", "self", ".", "x_image", "=", "tf", ".", "reshape", "(", "self", ".", "x_input", ",", "[", "-", "1", ",", "image_size", "[", "0", "]", ",", "image_size", "[", "1", "]", ",", "image_size", "[", "2", "]", "]", ")", "\n", "\n", "\n", "# DEFINE VARIABLES", "\n", "\n", "#Stability Variable", "\n", "setattr", "(", "self", ",", "stable_var", ",", "self", ".", "_bias_variable", "(", "[", "]", ",", "stab_weight", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "\n", "\n", "\t\t\t", "if", "len", "(", "layer_sizes", "[", "i", "+", "1", "]", ")", ">", "1", ":", "\n", "#Matrix Variables", "\n", "\t\t\t\t", "setattr", "(", "self", ",", "w_vars", "[", "i", "]", ",", "self", ".", "_weight_variable", "(", "[", "layer_sizes", "[", "i", "+", "1", "]", "[", "0", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "[", "1", "]", ",", "layer_sizes", "[", "i", "]", "[", "2", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "[", "2", "]", "]", ",", "weights", "[", "i", "]", ")", ")", "\n", "#Vector Variables", "\n", "setattr", "(", "self", ",", "b_vars", "[", "i", "]", ",", "self", ".", "_bias_variable", "(", "[", "layer_sizes", "[", "i", "+", "1", "]", "[", "2", "]", "]", ",", "biases", "[", "i", "]", ")", ")", "\n", "#Sparsity Varibles", "\n", "setattr", "(", "self", ",", "sparse_vars", "[", "i", "]", ",", "self", ".", "init_mask_weight", "(", "[", "layer_sizes", "[", "i", "+", "1", "]", "[", "0", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "[", "1", "]", ",", "layer_sizes", "[", "i", "]", "[", "2", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "[", "2", "]", "]", ",", "sparse_weights", "[", "i", "]", ")", ")", "\n", "\n", "", "else", ":", "\n", "\n", "#First Dense Layer", "\n", "\t\t\t\t", "if", "len", "(", "layer_sizes", "[", "i", "]", ")", ">", "1", ":", "\n", "#Matrix Variables", "\n", "\t\t\t\t\t", "setattr", "(", "self", ",", "w_vars", "[", "i", "]", ",", "self", ".", "_weight_variable", "(", "[", "reduced_size", "[", "0", "]", "*", "reduced_size", "[", "1", "]", "*", "layer_sizes", "[", "i", "]", "[", "2", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "[", "0", "]", "]", ",", "weights", "[", "i", "]", ")", ")", "\n", "#Vector Variables", "\n", "setattr", "(", "self", ",", "b_vars", "[", "i", "]", ",", "self", ".", "_bias_variable", "(", "[", "layer_sizes", "[", "i", "+", "1", "]", "[", "0", "]", "]", ",", "biases", "[", "i", "]", ")", ")", "\n", "#Sparsity Varibles", "\n", "setattr", "(", "self", ",", "sparse_vars", "[", "i", "]", ",", "self", ".", "init_mask_weight", "(", "[", "reduced_size", "[", "0", "]", "*", "reduced_size", "[", "1", "]", "*", "layer_sizes", "[", "i", "]", "[", "2", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "[", "0", "]", "]", ",", "sparse_weights", "[", "i", "]", ")", ")", "\n", "\n", "#Other dense layers", "\n", "", "else", ":", "\n", "\n", "#Matrix Variables", "\n", "\t\t\t\t\t", "setattr", "(", "self", ",", "w_vars", "[", "i", "]", ",", "self", ".", "_weight_variable", "(", "[", "layer_sizes", "[", "i", "]", "[", "0", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "[", "0", "]", "]", ",", "weights", "[", "i", "]", ")", ")", "\n", "#Vector Variables", "\n", "setattr", "(", "self", ",", "b_vars", "[", "i", "]", ",", "self", ".", "_bias_variable", "(", "[", "layer_sizes", "[", "i", "+", "1", "]", "[", "0", "]", "]", ",", "biases", "[", "i", "]", ")", ")", "\n", "#Sparsity Varibles", "\n", "setattr", "(", "self", ",", "sparse_vars", "[", "i", "]", ",", "self", ".", "init_mask_weight", "(", "[", "layer_sizes", "[", "i", "]", "[", "0", "]", ",", "layer_sizes", "[", "i", "+", "1", "]", "[", "0", "]", "]", ",", "sparse_weights", "[", "i", "]", ")", ")", "\n", "\n", "\n", "\n", "# DEFINE LAYERS", "\n", "", "", "", "previous_layer", "=", "layer_names", "[", "0", "]", "\n", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "\n", "\t\t\t", "if", "l", "<", "len", "(", "cnn_size", ")", "and", "0", "<", "l", ":", "\n", "\t\t\t\t", "if", "len", "(", "layer_sizes", "[", "l", "+", "1", "]", ")", "==", "1", "and", "len", "(", "layer_sizes", "[", "l", "]", ")", ">", "1", ":", "#Flatten for first dense layer", "\n", "\t\t\t\t\t", "flat_layer", "=", "tf", ".", "reshape", "(", "getattr", "(", "self", ",", "previous_layer", ")", ",", "[", "-", "1", ",", "reduced_size", "[", "0", "]", "*", "reduced_size", "[", "1", "]", "*", "layer_sizes", "[", "l", "]", "[", "2", "]", "]", ")", "\n", "setattr", "(", "self", ",", "\"flat\"", ",", "flat_layer", ")", "\n", "previous_layer", "=", "\"flat\"", "\n", "\n", "", "", "if", "l0", ">", "0", ":", "\n", "\n", "#Compute mask", "\n", "\t\t\t\t", "mask", "=", "None", "\n", "\n", "if", "self", ".", "ticket", ":", "\n", "\t\t\t\t\t", "mask", "=", "tf", ".", "cast", "(", "tf", ".", "math", ".", "greater", "(", "tf", ".", "constant", "(", "[", "mask_initial_value", "]", ")", ",", "getattr", "(", "self", ",", "sparse_vars", "[", "l", "]", ")", ")", ",", "tf", ".", "float32", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "mask", "=", "scaling", "*", "tf", ".", "sigmoid", "(", "self", ".", "temp", "*", "getattr", "(", "self", ",", "sparse_vars", "[", "l", "]", ")", ")", "\n", "\n", "#Compute masked weights and l1 norm", "\n", "", "W_masked", "=", "tf", ".", "multiply", "(", "getattr", "(", "self", ",", "w_vars", "[", "l", "]", ")", ",", "mask", ")", "\n", "W_norm", "=", "tf", ".", "reduce_sum", "(", "mask", ")", "\n", "setattr", "(", "self", ",", "mask_names", "[", "l", "]", ",", "W_masked", ")", "\n", "setattr", "(", "self", ",", "norm_names", "[", "l", "]", ",", "W_norm", ")", "\n", "\n", "if", "l", "<", "len", "(", "w_vars", ")", "-", "1", ":", "\n", "\t\t\t\t\t", "hidden_layer", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "_operation", "(", "getattr", "(", "self", ",", "previous_layer", ")", ",", "getattr", "(", "self", ",", "mask_names", "[", "l", "]", ")", ",", "len", "(", "layer_sizes", "[", "l", "+", "1", "]", ")", ")", "+", "getattr", "(", "self", ",", "b_vars", "[", "l", "]", ")", ")", "\n", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ",", "hidden_layer", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "hidden_layer", "=", "self", ".", "_operation", "(", "getattr", "(", "self", ",", "previous_layer", ")", ",", "getattr", "(", "self", ",", "mask_names", "[", "l", "]", ")", ",", "len", "(", "layer_sizes", "[", "l", "+", "1", "]", ")", ")", "+", "getattr", "(", "self", ",", "b_vars", "[", "l", "]", ")", "\n", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ",", "hidden_layer", ")", "\n", "", "", "else", ":", "\n", "\t\t\t\t", "if", "l", "<", "len", "(", "w_vars", ")", "-", "1", ":", "\n", "\t\t\t\t\t", "hidden_layer", "=", "tf", ".", "nn", ".", "relu", "(", "self", ".", "_operation", "(", "getattr", "(", "self", ",", "previous_layer", ")", ",", "getattr", "(", "self", ",", "w_vars", "[", "l", "]", ")", ",", "len", "(", "layer_sizes", "[", "l", "+", "1", "]", ")", ")", "+", "getattr", "(", "self", ",", "b_vars", "[", "l", "]", ")", ")", "\n", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ",", "hidden_layer", ")", "\n", "", "else", ":", "\n", "\t\t\t\t\t", "hidden_layer", "=", "self", ".", "_operation", "(", "getattr", "(", "self", ",", "previous_layer", ")", ",", "getattr", "(", "self", ",", "w_vars", "[", "l", "]", ")", ",", "len", "(", "layer_sizes", "[", "l", "+", "1", "]", ")", ")", "+", "getattr", "(", "self", ",", "b_vars", "[", "l", "]", ")", "\n", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ",", "hidden_layer", ")", "\n", "\n", "", "", "previous_layer", "=", "layer_names", "[", "l", "+", "1", "]", "\n", "\n", "if", "l", "<", "len", "(", "cnn_size", ")", ":", "\n", "\n", "\t\t\t\t", "if", "pool_size", "[", "l", "]", ":", "\n", "\t\t\t\t\t", "pool_layer", "=", "self", ".", "_max_pool_2x2", "(", "getattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", ")", ")", "\n", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", "+", "\"_pool\"", ",", "pool_layer", ")", "\n", "previous_layer", "=", "layer_names", "[", "l", "+", "1", "]", "+", "\"_pool\"", "\n", "\n", "", "setattr", "(", "self", ",", "layer_names", "[", "l", "+", "1", "]", "+", "\"_dropout\"", ",", "tf", ".", "nn", ".", "dropout", "(", "getattr", "(", "self", ",", "previous_layer", ")", ",", "self", ".", "dropout", ")", ")", "\n", "previous_layer", "=", "layer_names", "[", "l", "+", "1", "]", "+", "\"_dropout\"", "\n", "\n", "\n", "#Compute standard Cross Entropy", "\n", "", "", "self", ".", "pre_softmax", "=", "getattr", "(", "self", ",", "previous_layer", ")", "\n", "y_xent", "=", "tf", ".", "nn", ".", "sparse_softmax_cross_entropy_with_logits", "(", "labels", "=", "self", ".", "y_input", ",", "logits", "=", "self", ".", "pre_softmax", ")", "\n", "self", ".", "logits", "=", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "pre_softmax", ")", "\n", "self", ".", "xent", "=", "tf", ".", "reduce_mean", "(", "y_xent", ")", "\n", "\n", "\n", "#Compute robust cross-entropy.", "\n", "data_range", "=", "tf", ".", "range", "(", "tf", ".", "shape", "(", "self", ".", "y_input", ")", "[", "0", "]", ")", "\n", "indices", "=", "tf", ".", "map_fn", "(", "lambda", "n", ":", "tf", ".", "stack", "(", "[", "tf", ".", "cast", "(", "self", ".", "y_input", "[", "n", "]", ",", "tf", ".", "int32", ")", ",", "n", "]", ")", ",", "data_range", ")", "\n", "pre_softmax_t", "=", "tf", ".", "transpose", "(", "self", ".", "pre_softmax", ")", "\n", "self", ".", "nom_exponent", "=", "pre_softmax_t", "-", "tf", ".", "gather_nd", "(", "pre_softmax_t", ",", "indices", ")", "\n", "\n", "sum_exps", "=", "0", "\n", "for", "i", "in", "range", "(", "num_classes", ")", ":", "\n", "\t\t\t", "grad", "=", "tf", ".", "gradients", "(", "self", ".", "nom_exponent", "[", "i", "]", ",", "self", ".", "x_input", ")", "\n", "exponent", "=", "rho", "*", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "grad", "[", "0", "]", ")", ",", "axis", "=", "1", ")", "+", "self", ".", "nom_exponent", "[", "i", "]", "\n", "sum_exps", "+=", "tf", ".", "exp", "(", "exponent", ")", "\n", "", "robust_y_xent", "=", "tf", ".", "log", "(", "sum_exps", ")", "\n", "self", ".", "robust_xent", "=", "tf", ".", "reduce_mean", "(", "robust_y_xent", ")", "\n", "\n", "#Compute stable cross-entropy.", "\n", "self", ".", "stable_data_loss", "=", "tf", ".", "nn", ".", "relu", "(", "y_xent", "-", "getattr", "(", "self", ",", "stable_var", ")", ")", "\n", "self", ".", "stable_xent", "=", "getattr", "(", "self", ",", "stable_var", ")", "+", "1", "/", "(", "self", ".", "subset_ratio", ")", "*", "tf", ".", "reduce_mean", "(", "self", ".", "stable_data_loss", ")", "\n", "\n", "#Compute stable robust cross-entropy.", "\n", "self", ".", "rob_stable_data_loss", "=", "tf", ".", "nn", ".", "relu", "(", "robust_y_xent", "-", "getattr", "(", "self", ",", "stable_var", ")", ")", "\n", "self", ".", "robust_stable_xent", "=", "getattr", "(", "self", ",", "stable_var", ")", "+", "1", "/", "(", "self", ".", "subset_ratio", ")", "*", "tf", ".", "reduce_mean", "(", "self", ".", "rob_stable_data_loss", ")", "\n", "\n", "#Compute regularization terms", "\n", "l0_regularizer", "=", "0", "\n", "l2_regularizer", "=", "0", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "\t\t\t", "if", "l0", ">", "0", ":", "\n", "\t\t\t\t", "l0_regularizer", "+=", "getattr", "(", "self", ",", "norm_names", "[", "i", "]", ")", "\n", "l2_regularizer", "+=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "getattr", "(", "self", ",", "mask_names", "[", "i", "]", ")", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "l2_regularizer", "+=", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "getattr", "(", "self", ",", "w_vars", "[", "i", "]", ")", ")", ")", "\n", "\n", "", "", "self", ".", "regularizer", "=", "l2", "*", "l2_regularizer", "+", "l0", "*", "l0_regularizer", "\n", "\n", "\n", "#Evaluation", "\n", "self", ".", "y_pred", "=", "tf", ".", "argmax", "(", "self", ".", "pre_softmax", ",", "1", ")", "\n", "correct_prediction", "=", "tf", ".", "equal", "(", "self", ".", "y_pred", ",", "self", ".", "y_input", ")", "\n", "self", ".", "num_correct", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "int64", ")", ")", "\n", "self", ".", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "correct_prediction", ",", "tf", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._weight_variable": [[197, 207], ["tensorflow.glorot_uniform_initializer", "tensorflow.get_variable", "tensorflow.constant", "tensorflow.Variable", "str", "numpy.random.randint"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_weight_variable", "(", "shape", ",", "initial", "=", "None", ")", ":", "\n", "\t\t\t", "if", "initial", "is", "None", ":", "\n", "\t\t\t\t", "W0", "=", "tf", ".", "glorot_uniform_initializer", "(", ")", "\n", "return", "tf", ".", "get_variable", "(", "shape", "=", "shape", ",", "initializer", "=", "W0", ",", "name", "=", "str", "(", "np", ".", "random", ".", "randint", "(", "1e10", ")", ")", ")", "\n", "#return tf.Variable(tf.truncated_normal(shape, stddev=0.1))", "\n", "\n", "", "else", ":", "\n", "\t\t\t\t", "W0", "=", "tf", ".", "constant", "(", "initial", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "W0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._bias_variable": [[208, 216], ["tensorflow.constant", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_bias_variable", "(", "shape", ",", "initial", "=", "None", ")", ":", "\n", "\t\t\t", "if", "initial", "is", "None", ":", "\n", "\t\t\t\t", "b0", "=", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "shape", ")", "\n", "return", "tf", ".", "Variable", "(", "b0", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "b0", "=", "tf", ".", "constant", "(", "initial", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "b0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._conv2d": [[217, 220], ["tensorflow.nn.conv2d"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_conv2d", "(", "x", ",", "W", ")", ":", "\n", "\t\t\t", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "W", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._operation": [[221, 227], ["tensorflow.nn.conv2d", "tensorflow.matmul"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_operation", "(", "x", ",", "W", ",", "i", ")", ":", "\n", "\t\t\t", "if", "i", ">", "1", ":", "\n", "\t\t\t\t", "return", "tf", ".", "nn", ".", "conv2d", "(", "x", ",", "W", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "return", "tf", ".", "matmul", "(", "x", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model._max_pool_2x2": [[229, 232], ["tensorflow.nn.max_pool"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "_max_pool_2x2", "(", "x", ")", ":", "\n", "\t\t\t", "return", "tf", ".", "nn", ".", "max_pool", "(", "x", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.Model.init_mask_weight": [[233, 242], ["tensorflow.constant", "tensorflow.Variable", "tensorflow.constant", "tensorflow.Variable"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "init_mask_weight", "(", "shape", ",", "initial", "=", "None", ")", ":", "\n", "\t\t", "if", "initial", "is", "None", ":", "\n", "\t\t\t", "a0", "=", "tf", ".", "constant", "(", "mask_initial_value", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "#a0 = tf.Variable(tf.random_normal(shape, mean=0.0, stddev=0.01))", "\n", "return", "tf", ".", "Variable", "(", "a0", ")", "\n", "", "else", ":", "\n", "\t\t\t", "a0", "=", "tf", ".", "constant", "(", "initial", ",", "shape", "=", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "a0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.sigmoid": [[15, 17], ["float", "numpy.exp"], "function", ["None"], ["def", "sigmoid", "(", "x", ")", ":", "\n", "\t", "return", "float", "(", "1.", "/", "(", "1.", "+", "np", ".", "exp", "(", "-", "x", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.Networks.CNN_model.hard_sigmoid": [[243, 245], ["tensorflow.minimum", "tensorflow.maximum", "tensorflow.ones_like", "tensorflow.zeros_like"], "function", ["None"], ["", "", "", "def", "hard_sigmoid", "(", "x", ")", ":", "\n", "\t\t", "return", "tf", ".", "minimum", "(", "tf", ".", "maximum", "(", "x", ",", "tf", ".", "zeros_like", "(", "x", ")", ")", ",", "tf", ".", "ones_like", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.define_parser": [[31, 65], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "define_parser", "(", ")", ":", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--batch_range\"", ",", "type", "=", "int", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "64", "]", ",", "help", "=", "\"batch range\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--network_type\"", ",", "type", "=", "str", ",", "default", "=", "\"VGG3\"", ",", "help", "=", "\"network used for training (ALEX, VGG3, VGG16, MLP)\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--stab_ratio_range\"", ",", "type", "=", "float", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "0.8", "]", ",", "help", "=", "\"stability ratio range\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--is_stable\"", ",", "action", "=", "\"store_true\"", ",", "help", "=", "\"stable version\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--dropout\"", ",", "type", "=", "float", ",", "default", "=", "1", ",", "help", "=", "\"dropout rate, 1 is no dropout, 0 is all set to 0\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--rho\"", ",", "type", "=", "float", ",", "default", "=", "0", ",", "help", "=", "\"Radius of the uncertainty set for robust training.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--robust_test\"", ",", "\"-rtest\"", ",", "type", "=", "float", ",", "nargs", "=", "'+'", ",", "default", "=", "[", "1e-5", ",", "1e-4", ",", "1e-3", ",", "1e-2", ",", "1e-1", "]", ",", "help", "=", "\"radius of the uncertainty set for robust testing.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--l2\"", ",", "type", "=", "float", ",", "default", "=", "0", ",", "help", "=", "\"l2 regularization parameter\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--l0\"", ",", "type", "=", "float", ",", "default", "=", "0", ",", "help", "=", "\"l0 regularization parameter\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--reg_stability\"", ",", "type", "=", "float", ",", "default", "=", "0", ",", "help", "=", "\"reg stability regularization parameter\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--data_set\"", ",", "type", "=", "str", ",", "default", "=", "\"mnist\"", ",", "help", "=", "\"dataset name\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--train_size\"", ",", "type", "=", "float", ",", "default", "=", "1", ",", "help", "=", "\"percentage of data used of training\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--lr\"", ",", "type", "=", "float", ",", "default", "=", "0.0001", ",", "help", "=", "\"learning Rate used for the optimizer\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--val_size\"", ",", "type", "=", "float", ",", "default", "=", "(", "1", "/", "5", ")", ",", "help", "=", "\"percentage of data used for validation\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--exp_id\"", ",", "type", "=", "int", ",", "default", "=", "-", "1", ",", "help", "=", "\"experiment id corresponding to a predefined config of parameter, decided for the paper's experiments\"", ")", "\n", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.read_config_train": [[67, 78], ["None"], "function", ["None"], ["", "def", "read_config_train", "(", "config", ")", ":", "\n", "\t", "seed", "=", "config", "[", "'random_seed'", "]", "\n", "num_epochs", "=", "config", "[", "'num_epochs'", "]", "\n", "num_output_steps", "=", "config", "[", "'num_output_steps'", "]", "\n", "num_summ_steps", "=", "config", "[", "'num_summary_steps'", "]", "\n", "num_check_steps", "=", "config", "[", "'num_checkpoint_steps'", "]", "\n", "final_temp", "=", "config", "[", "'final_temp'", "]", "\n", "num_rounds", "=", "config", "[", "'num_rounds'", "]", "\n", "rewind_epoch", "=", "config", "[", "'rewind_epoch'", "]", "\n", "\n", "return", "seed", ",", "num_epochs", ",", "num_output_steps", ",", "num_summ_steps", ",", "num_check_steps", ",", "final_temp", ",", "num_rounds", ",", "rewind_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars": [[80, 87], ["str", "range", "str", "range", "str", "range"], "function", ["None"], ["", "def", "init_vars", "(", "n", ")", ":", "\n", "\t", "network_vars_w", "=", "[", "\"W\"", "+", "str", "(", "i", "+", "1", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "network_vars_b", "=", "[", "\"b\"", "+", "str", "(", "i", "+", "1", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "stable_var", "=", "\"theta\"", "\n", "sparse_vars", "=", "[", "\"log_a_W\"", "+", "str", "(", "i", "+", "1", ")", "for", "i", "in", "range", "(", "n", ")", "]", "\n", "\n", "return", "network_vars_w", ",", "network_vars_b", ",", "stable_var", ",", "sparse_vars", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.read_config_network": [[89, 99], ["list", "utils_init.init_vars", "getattr", "getattr", "getattr", "getattr", "len"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars"], ["", "def", "read_config_network", "(", "config", ",", "args", ",", "model", ")", ":", "\n", "\t", "network_size", "=", "list", "(", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "name_vars_w", ",", "name_vars_b", ",", "name_stable_var", ",", "name_sparse_vars", "=", "init_vars", "(", "len", "(", "network_size", ")", "+", "1", ")", "\n", "network_vars_w", "=", "[", "getattr", "(", "model", ",", "var", ")", "for", "var", "in", "name_vars_w", "]", "\n", "network_vars_b", "=", "[", "getattr", "(", "model", ",", "var", ")", "for", "var", "in", "name_vars_b", "]", "\n", "network_vars", "=", "network_vars_w", "+", "network_vars_b", "\n", "sparsity_vars", "=", "[", "getattr", "(", "model", ",", "var", ")", "for", "var", "in", "name_sparse_vars", "]", "\n", "stable_var", "=", "[", "getattr", "(", "model", ",", "name_stable_var", ")", "]", "\n", "\n", "return", "network_vars", ",", "sparsity_vars", ",", "stable_var", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.read_train_args": [[100, 114], ["list", "list"], "function", ["None"], ["", "def", "read_train_args", "(", "args", ")", ":", "\n", "\t", "rho", "=", "args", ".", "rho", "\n", "is_stable", "=", "args", ".", "is_stable", "\n", "learning_rate", "=", "args", ".", "lr", "\n", "l0", "=", "args", ".", "l0", "\n", "l2", "=", "args", ".", "l2", "\n", "batch_range", "=", "args", ".", "batch_range", "\n", "stab_ratio_range", "=", "args", ".", "stab_ratio_range", "\n", "dropout", "=", "args", ".", "dropout", "\n", "network_size", "=", "list", "(", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "pool_size", "=", "list", "(", "NN_POOL", "[", "args", ".", "network_type", "]", ")", "\n", "model_path", "=", "NN_PATH", "[", "args", ".", "network_type", "]", "\n", "\n", "return", "rho", ",", "is_stable", ",", "learning_rate", ",", "l0", ",", "l2", ",", "batch_range", ",", "stab_ratio_range", ",", "dropout", ",", "network_size", ",", "pool_size", ",", "model_path", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.read_data_args": [[115, 121], ["None"], "function", ["None"], ["", "def", "read_data_args", "(", "args", ")", ":", "\n", "\t", "data_set", "=", "args", ".", "data_set", "\n", "train_size", "=", "args", ".", "train_size", "\n", "val_size", "=", "args", ".", "val_size", "\n", "\n", "return", "data_set", ",", "train_size", ",", "val_size", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_experiments": [[122, 127], ["utils_model.create_dict", "str", "datetime.datetime.now", "str"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_model.create_dict"], ["", "def", "init_experiments", "(", "config", ",", "args", ",", "num_classes", ",", "num_features", ",", "data", ")", ":", "\n", "\t", "num_experiments", "=", "config", "[", "'num_experiments'", "]", "\n", "dict_exp", "=", "utils_model", ".", "create_dict", "(", "args", ",", "num_classes", ",", "num_features", ",", "data", ".", "train", ".", "images", ".", "shape", ",", "data", ".", "test", ".", "images", ".", "shape", ")", "\n", "output_dir", "=", "'outputs/logs/'", "+", "str", "(", "args", ".", "data_set", ")", "+", "'/'", "+", "str", "(", "datetime", ".", "now", "(", ")", ")", "\n", "return", "num_experiments", ",", "dict_exp", ",", "output_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.read_train_args_hypertuning": [[128, 156], ["utils_init.produce_configs", "list", "list", "print"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.produce_configs"], ["", "def", "read_train_args_hypertuning", "(", "args", ")", ":", "\n", "\t", "param_combos", "=", "produce_configs", "(", ")", "\n", "if", "args", ".", "exp_id", ">=", "0", ":", "\n", "\t\t", "gen_param", "=", "param_combos", "[", "args", ".", "exp_id", "]", "\n", "args", ".", "batch_range", "=", "[", "gen_param", "[", "0", "]", "]", "\n", "args", ".", "lr", "=", "gen_param", "[", "1", "]", "\n", "args", ".", "l2", "=", "gen_param", "[", "2", "]", "\n", "args", ".", "dropout", "=", "gen_param", "[", "3", "]", "\n", "args", ".", "is_stable", "=", "gen_param", "[", "4", "]", "\n", "args", ".", "l0", "=", "gen_param", "[", "5", "]", "\n", "#args.r = gen_param[6]", "\n", "args", ".", "rho", "=", "gen_param", "[", "6", "]", "\n", "args", ".", "stab_ratio_range", "=", "gen_param", "[", "7", "]", "\n", "\n", "", "rho", "=", "args", ".", "rho", "\n", "is_stable", "=", "args", ".", "is_stable", "\n", "learning_rate", "=", "args", ".", "lr", "\n", "l0", "=", "args", ".", "l0", "\n", "l2", "=", "args", ".", "l2", "\n", "batch_range", "=", "args", ".", "batch_range", "\n", "stab_ratio_range", "=", "args", ".", "stab_ratio_range", "\n", "dropout", "=", "args", ".", "dropout", "\n", "network_size", "=", "list", "(", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "pool_size", "=", "list", "(", "NN_POOL", "[", "args", ".", "network_type", "]", ")", "\n", "model_path", "=", "NN_PATH", "[", "args", ".", "network_type", "]", "\n", "\n", "print", "(", "args", ")", "\n", "return", "args", ",", "rho", ",", "is_stable", ",", "learning_rate", ",", "l0", ",", "l2", ",", "batch_range", ",", "stab_ratio_range", ",", "dropout", ",", "network_size", ",", "pool_size", ",", "model_path", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.produce_configs": [[157, 172], ["gen_param.append"], "function", ["None"], ["", "def", "produce_configs", "(", ")", ":", "\n", "\t", "\"\"\"\n\t:return: Creates all the configurations for hyperparameter tuning\n\t\"\"\"", "\n", "gen_param", "=", "[", "]", "\n", "for", "batchsize", "in", "[", "64", "]", ":", "\n", "\t\t", "for", "lr", "in", "[", "1e-4", ",", "1e-3", "]", ":", "\n", "\t\t\t", "for", "l0", "in", "[", "1e-7", ",", "1e-8", "]", ":", "#, 1e-6, 1e-5, 1e-4]:", "\n", "\t\t\t\t", "for", "l2", "in", "[", "0", "]", ":", "#, 1e-5, 1e-4, 1e-3]:", "\n", "\t\t\t\t\t", "for", "drop_out", "in", "[", "1", "]", ":", "\n", "\t\t\t\t\t\t", "for", "stable", "in", "[", "0", ",", "1", "]", ":", "\n", "\t\t\t\t\t\t\t", "for", "r", "in", "[", "0", ",", "1e-5", ",", "1e-4", ",", "1e-3", ",", "1e-2", "]", ":", "\n", "\t\t\t\t\t\t\t\t", "for", "stab_ratio", "in", "[", "[", "0.9", "]", ",", "[", "0.7", "]", ",", "[", "0.6", "]", ",", "[", "0.5", "]", "]", ":", "\n", "\t\t\t\t\t\t\t\t\t", "gen_param", ".", "append", "(", "(", "batchsize", ",", "lr", ",", "l2", ",", "drop_out", ",", "stable", ",", "l0", ",", "r", ",", "stab_ratio", ")", ")", "\n", "", "", "", "", "", "", "", "", "return", "gen_param", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_print.print_metrics": [[14, 80], ["list", "utils_init.init_vars", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "sess.run", "print", "print", "print", "print", "range", "sess.run", "print", "tensorflow.Summary", "summary_writer.add_summary", "range", "getattr", "print", "print", "print", "len", "global_step.eval", "len", "len", "str", "range", "datetime.datetime.now", "print", "sess.run", "print", "print", "print", "sess.run", "tensorflow.Summary", "summary_writer.add_summary", "len", "getattr", "sum", "sum", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "getattr", "global_step.eval", "numpy.sum", "numpy.sum", "sum", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "tensorflow.Summary.Value", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape", "sum", "sum", "sum", "numpy.sum", "numpy.sum", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars"], ["", "def", "print_metrics", "(", "sess", ",", "model", ",", "nat_dict", ",", "val_dict", ",", "test_dict", ",", "ii", ",", "args", ",", "summary_writer", ",", "experiment", ",", "global_step", ")", ":", "\n", "    ", "network_size", "=", "list", "(", "utils_init", ".", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", "=", "utils_init", ".", "init_vars", "(", "len", "(", "network_size", ")", "+", "1", ")", "\n", "mask_names", "=", "[", "w_vars", "[", "l", "]", "+", "str", "(", "\"_masked\"", ")", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "\n", "\n", "nat_acc", "=", "sess", ".", "run", "(", "model", ".", "accuracy", ",", "feed_dict", "=", "nat_dict", ")", "\n", "test_acc", "=", "sess", ".", "run", "(", "model", ".", "accuracy", ",", "feed_dict", "=", "test_dict", ")", "\n", "val_acc", "=", "sess", ".", "run", "(", "model", ".", "accuracy", ",", "feed_dict", "=", "val_dict", ")", "\n", "nat_xent", "=", "sess", ".", "run", "(", "model", ".", "xent", ",", "feed_dict", "=", "nat_dict", ")", "\n", "stable_xent", "=", "sess", ".", "run", "(", "model", ".", "stable_xent", ",", "feed_dict", "=", "nat_dict", ")", "\n", "robust_xent", "=", "sess", ".", "run", "(", "model", ".", "robust_xent", ",", "feed_dict", "=", "nat_dict", ")", "\n", "robust_stable_xent", "=", "sess", ".", "run", "(", "model", ".", "robust_stable_xent", ",", "feed_dict", "=", "nat_dict", ")", "\n", "stable_var", "=", "sess", ".", "run", "(", "getattr", "(", "model", ",", "stable_var", ")", ",", "feed_dict", "=", "nat_dict", ")", "\n", "\n", "\n", "print", "(", "'Step {}:    ({})'", ".", "format", "(", "ii", ",", "datetime", ".", "now", "(", ")", ")", ")", "\n", "print", "(", "'    training nat accuracy {:.4}'", ".", "format", "(", "nat_acc", "*", "100", ")", ")", "\n", "print", "(", "'    validation nat accuracy {:.4}'", ".", "format", "(", "val_acc", "*", "100", ")", ")", "\n", "print", "(", "'    Nat Xent {:.4}'", ".", "format", "(", "nat_xent", ")", ")", "\n", "\n", "if", "args", ".", "is_stable", ":", "\n", "        ", "print", "(", "'    Stability Variable {:.4}'", ".", "format", "(", "stable_var", ")", ")", "\n", "print", "(", "'    Stable Xent {:.4}'", ".", "format", "(", "stable_xent", ")", ")", "\n", "\n", "", "if", "args", ".", "rho", ">", "0", ":", "\n", "        ", "print", "(", "'    Robust Xent {:.4}'", ".", "format", "(", "robust_xent", ")", ")", "\n", "if", "args", ".", "is_stable", ":", "\n", "            ", "print", "(", "'    Robust Stable Xent {:.4}'", ".", "format", "(", "robust_stable_xent", ")", ")", "\n", "\n", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "\n", "\n", "        ", "if", "args", ".", "l0", ">", "0", ":", "\n", "            ", "W_masked", "=", "sess", ".", "run", "(", "getattr", "(", "model", ",", "mask_names", "[", "i", "]", ")", ",", "feed_dict", "=", "nat_dict", ")", "\n", "print", "(", "' #   Killed neurons - '", "+", "w_vars", "[", "i", "]", ",", "sum", "(", "np", ".", "sum", "(", "W_masked", ".", "reshape", "(", "-", "1", ",", "W_masked", ".", "shape", "[", "-", "1", "]", ")", ",", "axis", "=", "0", ")", "==", "0", ")", ")", "\n", "print", "(", "' #   Killed input neurons - '", "+", "w_vars", "[", "i", "]", ",", "sum", "(", "np", ".", "sum", "(", "W_masked", ".", "reshape", "(", "-", "1", ",", "W_masked", ".", "shape", "[", "-", "1", "]", ")", ",", "axis", "=", "1", ")", "==", "0", ")", ")", "\n", "print", "(", "'    Non zero features percentage - '", "+", "w_vars", "[", "i", "]", ",", "100", "*", "(", "sum", "(", "W_masked", ".", "reshape", "(", "-", "1", ")", "!=", "0", ")", "/", "W_masked", ".", "reshape", "(", "-", "1", ")", ".", "shape", "[", "0", "]", ")", ",", "\"%\"", ")", "\n", "\n", "\n", "", "", "regularizer", "=", "sess", ".", "run", "(", "model", ".", "regularizer", ",", "feed_dict", "=", "nat_dict", ")", "\n", "print", "(", "'    Regularizer'", ",", "regularizer", ")", "\n", "\n", "\n", "\n", "summary", "=", "tf", ".", "Summary", "(", "value", "=", "[", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'Train Xent'", ",", "simple_value", "=", "nat_xent", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'Val Acc'", ",", "simple_value", "=", "val_acc", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'Train Acc'", ",", "simple_value", "=", "nat_acc", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'Train Stable Xent'", ",", "simple_value", "=", "stable_xent", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'Train Robust Stable Xent'", ",", "simple_value", "=", "robust_stable_xent", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "'Test Acc'", ",", "simple_value", "=", "test_acc", ")", "]", ")", "\n", "\n", "summary_writer", ".", "add_summary", "(", "summary", ",", "global_step", ".", "eval", "(", "sess", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "        ", "if", "args", ".", "l0", ">", "0", ":", "\n", "            ", "W_masked", "=", "sess", ".", "run", "(", "getattr", "(", "model", ",", "mask_names", "[", "i", "]", ")", ",", "feed_dict", "=", "nat_dict", ")", "\n", "summary_sparse", "=", "tf", ".", "Summary", "(", "value", "=", "[", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "w_vars", "[", "i", "]", "+", "'_killed_neurons'", ",", "simple_value", "=", "sum", "(", "np", ".", "sum", "(", "W_masked", ".", "reshape", "(", "-", "1", ",", "W_masked", ".", "shape", "[", "-", "1", "]", ")", ",", "axis", "=", "0", ")", "==", "0", ")", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "w_vars", "[", "i", "]", "+", "'_killed_inputs'", ",", "simple_value", "=", "sum", "(", "np", ".", "sum", "(", "W_masked", ".", "reshape", "(", "-", "1", ",", "W_masked", ".", "shape", "[", "-", "1", "]", ")", ",", "axis", "=", "1", ")", "==", "0", ")", ")", ",", "\n", "tf", ".", "Summary", ".", "Value", "(", "tag", "=", "w_vars", "[", "i", "]", "+", "'_nonzero'", ",", "simple_value", "=", "sum", "(", "W_masked", ".", "reshape", "(", "-", "1", ")", "!=", "0", ")", "/", "W_masked", ".", "reshape", "(", "-", "1", ")", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "\n", "summary_writer", ".", "add_summary", "(", "summary_sparse", ",", "global_step", ".", "eval", "(", "sess", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_print.update_best_acc": [[84, 103], ["tensorflow.Session", "sess.run", "sess.run", "tensorflow.global_variables_initializer", "pgd_attack.LinfPGDAttack", "pgd_attack.LinfPGDAttack.perturb", "sess.run"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.src.pgd_attack.LinfPGDAttack.perturb"], ["", "", "", "def", "update_best_acc", "(", "args", ",", "best_model", ",", "x_test", ",", "y_test", ",", "experiment", ",", "dict_exp", ")", ":", "\n", "    ", "with", "tf", ".", "Session", "(", ")", "as", "sess", ":", "\n", "        ", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "clip", "=", "True", "\n", "if", "\"uci\"", "in", "args", ".", "data_set", ":", "\n", "            ", "clip", "=", "False", "\n", "\n", "", "for", "rho_test", "in", "args", ".", "robust_test", ":", "\n", "            ", "attack", "=", "LinfPGDAttack", "(", "best_model", ",", "rho_test", ",", "config", "[", "'k'", "]", ",", "config", "[", "'a'", "]", ",", "\n", "config", "[", "'random_start'", "]", ",", "config", "[", "'loss_func'", "]", ",", "clip", ")", "\n", "x_test_adv", "=", "attack", ".", "perturb", "(", "x_test", ",", "y_test", ",", "sess", ")", "\n", "adv_dict", "=", "{", "best_model", ".", "x_input", ":", "x_test_adv", ",", "best_model", ".", "y_input", ":", "y_test", ",", "best_model", ".", "temp", ":", "1", "}", "\n", "dict_exp", "[", "'adv_test_accs'", "]", "[", "rho_test", "]", "[", "experiment", "]", "=", "sess", ".", "run", "(", "best_model", ".", "accuracy", ",", "feed_dict", "=", "adv_dict", ")", "\n", "\n", "", "test_dict", "=", "{", "best_model", ".", "x_input", ":", "x_test", ",", "best_model", ".", "y_input", ":", "y_test", ",", "best_model", ".", "temp", ":", "1", "}", "\n", "test_acc", "=", "sess", ".", "run", "(", "best_model", ".", "accuracy", ",", "feed_dict", "=", "test_dict", ")", "\n", "dict_exp", "[", "'test_acc'", "]", "[", "experiment", "]", "=", "test_acc", "*", "100", "\n", "\n", "", "return", "dict_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_print.print_stability_measures": [[105, 173], ["list", "utils_init.init_vars", "numpy.array().mean", "numpy.array().std", "numpy.mean", "utils.total_gini", "print", "print", "print", "print", "print", "print", "print", "utils_print.print_layer_stability", "range", "open", "open", "open.read", "csv.writer", "numpy.std", "dict_exp[].transpose", "numpy.mean", "numpy.mean", "len", "print", "str", "str", "len", "csv.writer.writerow", "print", "csv.writer.writerow", "len", "numpy.array", "numpy.array", "numpy.mean", "range", "numpy.mean", "numpy.std", "len", "str", "range", "str", "range", "str", "range", "range", "range", "float", "float", "len", "numpy.mean", "str"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars", "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils.total_gini", "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_print.print_layer_stability"], ["", "def", "print_stability_measures", "(", "dict_exp", ",", "args", ",", "num_experiments", ",", "batch_size", ",", "subset_ratio", ",", "max_train_steps", ",", "network_path", ")", ":", "\n", "    ", "network_size", "=", "list", "(", "utils_init", ".", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", "=", "utils_init", ".", "init_vars", "(", "len", "(", "network_size", ")", "+", "1", ")", "\n", "\n", "avg_test_acc", "=", "np", ".", "array", "(", "[", "float", "(", "k", ")", "for", "k", "in", "dict_exp", "[", "'test_acc'", "]", "]", ")", ".", "mean", "(", ")", "\n", "std", "=", "np", ".", "array", "(", "[", "float", "(", "k", ")", "for", "k", "in", "dict_exp", "[", "'test_acc'", "]", "]", ")", ".", "std", "(", ")", "\n", "logit_stability", "=", "np", ".", "mean", "(", "np", ".", "std", "(", "dict_exp", "[", "'logits_acc'", "]", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "gini_stability", "=", "total_gini", "(", "dict_exp", "[", "'preds'", "]", ".", "transpose", "(", ")", ")", "\n", "\n", "\n", "print", "(", "'  Average testing accuracy {:.4}'", ".", "format", "(", "avg_test_acc", "*", "100", ")", ")", "\n", "print", "(", "'  Individual accuracies: \\n'", ",", "dict_exp", "[", "'test_acc'", "]", ")", "\n", "print", "(", "'  Adv testing accuracies'", ",", "dict_exp", "[", "'adv_test_accs'", "]", ")", "\n", "print", "(", "'  Stability values'", ",", "dict_exp", "[", "stable_var", "]", ")", "\n", "print", "(", "'  Test Accuracy std {:.2}'", ".", "format", "(", "std", ")", ")", "\n", "print", "(", "\"  Logits std\"", ",", "np", ".", "mean", "(", "np", ".", "mean", "(", "np", ".", "std", "(", "dict_exp", "[", "'logits_acc'", "]", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", ")", ")", "\n", "print", "(", "\"  Gini stability\"", ",", "gini_stability", ")", "\n", "\n", "\n", "weights_stability", "=", "print_layer_stability", "(", "dict_exp", ",", "num_experiments", ",", "args", ")", "\n", "weights_nonzero", "=", "[", "np", ".", "mean", "(", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_nonzero'", "]", ")", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "        ", "print", "(", "w_vars", "[", "i", "]", "+", "' non zero percentage'", ",", "weights_nonzero", "[", "i", "]", ")", "\n", "\n", "\n", "", "file", "=", "open", "(", "str", "(", "'results_'", "+", "network_path", "+", "args", ".", "data_set", "+", "'.csv'", ")", ",", "'a+'", ",", "newline", "=", "''", ")", "\n", "\n", "file_read", "=", "open", "(", "str", "(", "'results_'", "+", "network_path", "+", "args", ".", "data_set", "+", "'.csv'", ")", ",", "\"r\"", ")", "\n", "one_char", "=", "file_read", ".", "read", "(", "1", ")", "\n", "\n", "writer", "=", "csv", ".", "writer", "(", "file", ")", "\n", "\n", "if", "not", "len", "(", "one_char", ")", ":", "\n", "        ", "headers", "=", "[", "]", "\n", "headers", "+=", "[", "'num_experiments'", ",", "'batch_size'", ",", "'subset_ratio'", ",", "'max_train_steps'", "]", "\n", "headers", "+=", "[", "'test accuracy '", "+", "str", "(", "i", ")", "for", "i", "in", "range", "(", "num_experiments", ")", "]", "\n", "headers", "+=", "[", "'# Iterations '", "+", "str", "(", "i", ")", "for", "i", "in", "range", "(", "num_experiments", ")", "]", "\n", "\n", "for", "key", "in", "dict_exp", ":", "\n", "            ", "if", "key", "not", "in", "w_vars", "+", "b_vars", "+", "[", "stable_var", "]", "+", "sparse_vars", "+", "[", "'adv_test_accs'", ",", "'preds'", "]", ":", "\n", "                ", "headers", "+=", "[", "'Avg '", "+", "str", "(", "key", ")", "]", "\n", "\n", "", "", "headers", "+=", "[", "'Avg test adversarial acc for rho = '", "+", "str", "(", "rho", ")", "for", "rho", "in", "args", ".", "robust_test", "]", "\n", "headers", "+=", "[", "'is_stable'", ",", "'rho'", ",", "'train_size'", ",", "'l2'", ",", "'l0'", ",", "'network_size'", ",", "'learning rate'", "]", "\n", "headers", "+=", "[", "w_vars", "[", "i", "]", "+", "' Stability'", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "headers", "+=", "[", "'test_acc_std'", ",", "'logit_stability'", ",", "'gini_stability'", "]", "\n", "writer", ".", "writerow", "(", "headers", ")", "\n", "\n", "", "with", "file", ":", "\n", "\n", "        ", "cols", "=", "[", "]", "\n", "\n", "cols", "+=", "[", "num_experiments", ",", "batch_size", ",", "subset_ratio", ",", "max_train_steps", "]", "\n", "cols", "+=", "[", "dict_exp", "[", "'test_acc'", "]", "[", "i", "]", "for", "i", "in", "range", "(", "num_experiments", ")", "]", "\n", "cols", "+=", "[", "dict_exp", "[", "'iterations'", "]", "[", "i", "]", "for", "i", "in", "range", "(", "num_experiments", ")", "]", "\n", "\n", "for", "key", "in", "dict_exp", ":", "\n", "            ", "if", "key", "not", "in", "w_vars", "+", "b_vars", "+", "[", "stable_var", "]", "+", "sparse_vars", "+", "[", "'adv_test_accs'", ",", "'preds'", "]", ":", "\n", "                ", "cols", "+=", "[", "np", ".", "mean", "(", "dict_exp", "[", "key", "]", ")", "]", "\n", "\n", "", "", "cols", "+=", "[", "np", ".", "mean", "(", "dict_exp", "[", "'adv_test_accs'", "]", "[", "rho", "]", ")", "for", "rho", "in", "args", ".", "robust_test", "]", "\n", "cols", "+=", "[", "args", ".", "is_stable", ",", "args", ".", "rho", ",", "args", ".", "train_size", ",", "args", ".", "l2", ",", "args", ".", "l0", ",", "network_size", ",", "args", ".", "lr", "]", "\n", "cols", "+=", "weights_stability", "\n", "cols", "+=", "[", "std", ",", "logit_stability", ",", "gini_stability", "]", "\n", "\n", "print", "(", "cols", ")", "\n", "writer", ".", "writerow", "(", "cols", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_print.print_layer_stability": [[175, 186], ["list", "utils_init.init_vars", "range", "len", "numpy.mean", "print", "len", "[].reshape", "numpy.std", "range"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars"], ["", "", "def", "print_layer_stability", "(", "dict_exp", ",", "num_experiments", ",", "args", ")", ":", "\n", "    ", "network_size", "=", "list", "(", "utils_init", ".", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", "=", "utils_init", ".", "init_vars", "(", "len", "(", "network_size", ")", "+", "1", ")", "\n", "\n", "stabilities", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "        ", "w_i", "=", "[", "dict_exp", "[", "w_vars", "[", "i", "]", "]", "[", "experiment", "]", ".", "reshape", "(", "-", "1", ")", "for", "experiment", "in", "range", "(", "num_experiments", ")", "]", "\n", "w_stability", "=", "np", ".", "mean", "(", "np", ".", "std", "(", "w_i", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "print", "(", "w_vars", "[", "i", "]", "+", "\" std\"", ",", "w_stability", ")", "\n", "stabilities", "=", "stabilities", "+", "[", "w_stability", "]", "\n", "", "return", "stabilities", "\n", "", ""]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_model.get_loss": [[13, 25], ["None"], "function", ["None"], ["def", "get_loss", "(", "model", ",", "args", ")", ":", "\n", "    ", "loss", "=", "model", ".", "xent", "+", "model", ".", "regularizer", "\n", "if", "args", ".", "rho", ">", "0", "and", "not", "args", ".", "is_stable", ":", "\n", "        ", "loss", "=", "model", ".", "robust_xent", "\n", "\n", "", "elif", "args", ".", "is_stable", ":", "\n", "        ", "if", "args", ".", "rho", ">", "0", ":", "\n", "            ", "loss", "=", "model", ".", "robust_stable_xent", "\n", "", "else", ":", "\n", "            ", "loss", "=", "model", ".", "stable_xent", "\n", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_model.create_dict": [[27, 52], ["list", "utils_init.init_vars", "numpy.zeros", "range", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "len", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "len", "str", "range", "len"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars"], ["", "def", "create_dict", "(", "args", ",", "num_classes", ",", "num_features", ",", "train_shape", ",", "test_size", ")", ":", "\n", "    ", "network_size", "=", "list", "(", "utils_init", ".", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", "=", "utils_init", ".", "init_vars", "(", "len", "(", "network_size", ")", "+", "1", ")", "\n", "mask_names", "=", "[", "w_vars", "[", "l", "]", "+", "str", "(", "\"_masked\"", ")", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "\n", "\n", "dict_exp", "=", "{", "}", "\n", "dict_exp", "[", "'logits_acc'", "]", "=", "np", ".", "zeros", "(", "(", "config", "[", "'num_experiments'", "]", ",", "test_size", "[", "0", "]", ",", "num_classes", ")", ")", "\n", "layer_sizes", "=", "[", "num_features", "]", "+", "network_size", "+", "[", "num_classes", "]", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "        ", "dict_exp", "[", "w_vars", "[", "i", "]", "]", "=", "None", "\n", "dict_exp", "[", "b_vars", "[", "i", "]", "]", "=", "None", "\n", "dict_exp", "[", "sparse_vars", "[", "i", "]", "]", "=", "None", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_nonzero'", "]", "=", "np", ".", "zeros", "(", "config", "[", "'num_experiments'", "]", ")", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_killed_neurons'", "]", "=", "np", ".", "zeros", "(", "config", "[", "'num_experiments'", "]", ")", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_killed_input_features'", "]", "=", "np", ".", "zeros", "(", "config", "[", "'num_experiments'", "]", ")", "\n", "\n", "", "dict_exp", "[", "stable_var", "]", "=", "np", ".", "zeros", "(", "config", "[", "'num_experiments'", "]", ")", "\n", "dict_exp", "[", "'preds'", "]", "=", "np", ".", "zeros", "(", "(", "config", "[", "'num_experiments'", "]", ",", "test_size", "[", "0", "]", ")", ")", "\n", "dict_exp", "[", "'test_acc'", "]", "=", "np", ".", "zeros", "(", "config", "[", "'num_experiments'", "]", ")", "\n", "dict_exp", "[", "'iterations'", "]", "=", "np", ".", "zeros", "(", "config", "[", "'num_experiments'", "]", ")", "\n", "dict_exp", "[", "'adv_test_accs'", "]", "=", "{", "eps_test", ":", "np", ".", "zeros", "(", "config", "[", "'num_experiments'", "]", ")", "for", "eps_test", "in", "args", ".", "robust_test", "}", "\n", "\n", "return", "dict_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_model.update_dict": [[54, 95], ["list", "utils_init.init_vars", "sess.run", "range", "sess.run", "sess.run", "getattr", "len", "sess.run", "sess.run", "sess.run", "len", "str", "range", "numpy.array", "numpy.array", "numpy.array", "getattr", "getattr", "getattr", "sess.run", "sum", "sum", "sum", "sum", "len", "getattr", "sum", "sum", "numpy.sum", "numpy.sum", "numpy.sum", "numpy.sum", "sess.run", "sess.run", "sess.run", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape", "sess.run.reshape", "getattr", "getattr", "getattr"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars"], ["", "def", "update_dict", "(", "dict_exp", ",", "args", ",", "sess", ",", "model", ",", "test_dict", ",", "experiment", ",", "iteration", ")", ":", "\n", "    ", "network_size", "=", "list", "(", "utils_init", ".", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", "=", "utils_init", ".", "init_vars", "(", "len", "(", "network_size", ")", "+", "1", ")", "\n", "mask_names", "=", "[", "w_vars", "[", "l", "]", "+", "str", "(", "\"_masked\"", ")", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "\n", "dict_exp", "[", "stable_var", "]", "[", "experiment", "]", "=", "sess", ".", "run", "(", "getattr", "(", "model", ",", "stable_var", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", ":", "\n", "        ", "if", "dict_exp", "[", "b_vars", "[", "i", "]", "]", "is", "None", ":", "\n", "            ", "dict_exp", "[", "b_vars", "[", "i", "]", "]", "=", "np", ".", "array", "(", "[", "sess", ".", "run", "(", "getattr", "(", "model", ",", "b_vars", "[", "i", "]", ")", ",", "feed_dict", "=", "test_dict", ")", "]", "*", "config", "[", "'num_experiments'", "]", ")", "\n", "dict_exp", "[", "sparse_vars", "[", "i", "]", "]", "=", "np", ".", "array", "(", "[", "sess", ".", "run", "(", "getattr", "(", "model", ",", "sparse_vars", "[", "i", "]", ")", ",", "feed_dict", "=", "test_dict", ")", "]", "*", "config", "[", "'num_experiments'", "]", ")", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "]", "=", "np", ".", "array", "(", "[", "sess", ".", "run", "(", "getattr", "(", "model", ",", "w_vars", "[", "i", "]", ")", ",", "feed_dict", "=", "test_dict", ")", "]", "*", "config", "[", "'num_experiments'", "]", ")", "\n", "\n", "\n", "", "dict_exp", "[", "b_vars", "[", "i", "]", "]", "[", "experiment", "]", "=", "sess", ".", "run", "(", "getattr", "(", "model", ",", "b_vars", "[", "i", "]", ")", ",", "feed_dict", "=", "test_dict", ")", "\n", "dict_exp", "[", "sparse_vars", "[", "i", "]", "]", "[", "experiment", "]", "=", "sess", ".", "run", "(", "getattr", "(", "model", ",", "sparse_vars", "[", "i", "]", ")", ",", "feed_dict", "=", "test_dict", ")", "\n", "\n", "W", "=", "sess", ".", "run", "(", "getattr", "(", "model", ",", "w_vars", "[", "i", "]", ")", ",", "feed_dict", "=", "test_dict", ")", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "]", "[", "experiment", "]", "=", "W", "\n", "\n", "\n", "###TODO Check the formula for computing the sparsification", "\n", "if", "args", ".", "l0", ">", "0", ":", "\n", "            ", "W_masked", "=", "sess", ".", "run", "(", "getattr", "(", "model", ",", "mask_names", "[", "i", "]", ")", ",", "feed_dict", "=", "test_dict", ")", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_nonzero'", "]", "[", "experiment", "]", "=", "sum", "(", "W_masked", ".", "reshape", "(", "-", "1", ")", "!=", "0", ")", "/", "W_masked", ".", "reshape", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_killed_neurons'", "]", "[", "experiment", "]", "=", "sum", "(", "np", ".", "sum", "(", "W_masked", ".", "reshape", "(", "-", "1", ",", "W_masked", ".", "shape", "[", "-", "1", "]", ")", ",", "axis", "=", "0", ")", "==", "0", ")", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_killed_input_features'", "]", "[", "experiment", "]", "=", "sum", "(", "np", ".", "sum", "(", "W_masked", ".", "reshape", "(", "-", "1", ",", "W_masked", ".", "shape", "[", "-", "1", "]", ")", ",", "axis", "=", "1", ")", "==", "0", ")", "\n", "", "else", ":", "\n", "            ", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_nonzero'", "]", "[", "experiment", "]", "=", "sum", "(", "W", ".", "reshape", "(", "-", "1", ")", "!=", "0", ")", "/", "W", ".", "reshape", "(", "-", "1", ")", ".", "shape", "[", "0", "]", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_killed_neurons'", "]", "[", "experiment", "]", "=", "sum", "(", "\n", "np", ".", "sum", "(", "W", ".", "reshape", "(", "-", "1", ",", "W", ".", "shape", "[", "-", "1", "]", ")", ",", "axis", "=", "0", ")", "==", "0", ")", "\n", "dict_exp", "[", "w_vars", "[", "i", "]", "+", "'_killed_input_features'", "]", "[", "experiment", "]", "=", "sum", "(", "\n", "np", ".", "sum", "(", "W", ".", "reshape", "(", "-", "1", ",", "W", ".", "shape", "[", "-", "1", "]", ")", ",", "axis", "=", "1", ")", "==", "0", ")", "\n", "\n", "\n", "", "", "dict_exp", "[", "'logits_acc'", "]", "[", "experiment", "]", "=", "sess", ".", "run", "(", "model", ".", "logits", ",", "feed_dict", "=", "test_dict", ")", "\n", "dict_exp", "[", "'preds'", "]", "[", "experiment", "]", "=", "sess", ".", "run", "(", "model", ".", "y_pred", ",", "feed_dict", "=", "test_dict", ")", "\n", "dict_exp", "[", "'iterations'", "]", "[", "experiment", "]", "=", "iteration", "\n", "\n", "\n", "return", "dict_exp", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_model.get_best_model": [[96, 118], ["list", "utils_init.init_vars", "spec.loader.exec_module", "network_module.Model", "len", "str", "range", "len"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars"], ["", "def", "get_best_model", "(", "dict_exp", ",", "experiment", ",", "args", ",", "num_classes", ",", "batch_size", ",", "subset_ratio", ",", "num_features", ",", "spec", ",", "network_module", ",", "network_size", ",", "pool_size", ",", "data_shape", ")", ":", "\n", "    ", "network_size", "=", "list", "(", "utils_init", ".", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", "=", "utils_init", ".", "init_vars", "(", "len", "(", "network_size", ")", "+", "1", ")", "\n", "mask_names", "=", "[", "w_vars", "[", "l", "]", "+", "str", "(", "\"_masked\"", ")", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "\n", "\n", "spec", ".", "loader", ".", "exec_module", "(", "network_module", ")", "\n", "\n", "weights", "=", "[", "dict_exp", "[", "w", "]", "[", "experiment", "]", "for", "w", "in", "w_vars", "]", "\n", "biases", "=", "[", "dict_exp", "[", "b", "]", "[", "experiment", "]", "for", "b", "in", "b_vars", "]", "\n", "stab_weight", "=", "dict_exp", "[", "stable_var", "]", "[", "experiment", "]", "\n", "sparse_weights", "=", "[", "dict_exp", "[", "sparse_a", "]", "[", "experiment", "]", "for", "sparse_a", "in", "sparse_vars", "]", "\n", "\n", "stored_weights", "=", "{", "}", "\n", "stored_weights", "[", "'network_weights'", "]", "=", "weights", "\n", "stored_weights", "[", "'network_biases'", "]", "=", "biases", "\n", "stored_weights", "[", "'stability_variable'", "]", "=", "stab_weight", "\n", "stored_weights", "[", "'sparsity_variables'", "]", "=", "sparse_weights", "\n", "\n", "ticket", "=", "True", "\n", "best_model", "=", "network_module", ".", "Model", "(", "num_classes", ",", "batch_size", ",", "network_size", ",", "pool_size", ",", "subset_ratio", ",", "num_features", ",", "args", ".", "dropout", ",", "args", ".", "l2", ",", "args", ".", "l0", ",", "args", ".", "rho", ",", "data_shape", ",", "ticket", ",", "stored_weights", ")", "\n", "return", "best_model", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model.init_sparsity_constants": [[9, 13], ["None"], "function", ["None"], ["def", "init_sparsity_constants", "(", ")", ":", "\n", "    ", "lambd", "=", "1e-8", "\n", "mask_initial_value", "=", "0", "\n", "return", "lambd", ",", "mask_initial_value", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model.init_weights": [[15, 21], ["range", "range", "range", "len", "len", "len"], "function", ["None"], ["", "def", "init_weights", "(", "network_vars_w", ",", "network_vars_b", ",", "stable_var", ",", "sparse_vars", ")", ":", "\n", "    ", "weights", "=", "[", "None", "for", "i", "in", "range", "(", "len", "(", "network_vars_w", ")", ")", "]", "\n", "biases", "=", "[", "None", "for", "i", "in", "range", "(", "len", "(", "network_vars_b", ")", ")", "]", "\n", "theta", "=", "None", "\n", "sparse_weights", "=", "[", "None", "for", "i", "in", "range", "(", "len", "(", "sparse_vars", ")", ")", "]", "\n", "return", "weights", ",", "biases", ",", "theta", ",", "sparse_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model.reset_stored_weights": [[22, 28], ["None"], "function", ["None"], ["", "def", "reset_stored_weights", "(", "stored_weights", ")", ":", "\n", "    ", "weights", "=", "stored_weights", "[", "'network_weights'", "]", "\n", "biases", "=", "stored_weights", "[", "'network_biases'", "]", "\n", "stab_weight", "=", "stored_weights", "[", "'stability_variable'", "]", "\n", "sparse_weights", "=", "stored_weights", "[", "'sparsity_variables'", "]", "\n", "return", "weights", ",", "biases", ",", "stab_weight", ",", "sparse_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model._prune": [[29, 35], ["numpy.clip", "prunned_weights.append"], "function", ["None"], ["", "def", "_prune", "(", "mask_weights", ")", ":", "\n", "    ", "prunned_weights", "=", "[", "]", "\n", "for", "mask_weight", "in", "mask_weights", ":", "\n", "        ", "prunned", "=", "np", ".", "clip", "(", "mask_weight", ",", "a_min", "=", "-", "100000", ",", "a_max", "=", "mask_initial_value", ")", "\n", "prunned_weights", ".", "append", "(", "prunned", ")", "\n", "", "return", "prunned_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model.store_network": [[36, 56], ["list", "utils_init.init_vars", "sess.run", "sess.run", "sess.run", "getattr", "sess.run", "utils_nn_model._prune", "len", "str", "range", "getattr", "range", "getattr", "range", "getattr", "range", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_init.init_vars", "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils_nn_model._prune"], ["", "def", "store_network", "(", "model", ",", "args", ",", "sess", ",", "nat_dict", ",", "prune", ")", ":", "\n", "    ", "network_size", "=", "list", "(", "utils_init", ".", "NN", "[", "args", ".", "network_type", "]", ")", "\n", "w_vars", ",", "b_vars", ",", "stable_var", ",", "sparse_vars", "=", "utils_init", ".", "init_vars", "(", "len", "(", "network_size", ")", "+", "1", ")", "\n", "mask_names", "=", "[", "w_vars", "[", "l", "]", "+", "str", "(", "\"_masked\"", ")", "for", "l", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "\n", "weights", "=", "[", "sess", ".", "run", "(", "getattr", "(", "model", ",", "w_vars", "[", "i", "]", ")", ",", "feed_dict", "=", "nat_dict", ")", "for", "i", "in", "range", "(", "len", "(", "w_vars", ")", ")", "]", "\n", "biases", "=", "[", "sess", ".", "run", "(", "getattr", "(", "model", ",", "b_vars", "[", "i", "]", ")", ",", "feed_dict", "=", "nat_dict", ")", "for", "i", "in", "range", "(", "len", "(", "b_vars", ")", ")", "]", "\n", "stab_weight", "=", "sess", ".", "run", "(", "getattr", "(", "model", ",", "stable_var", ")", ")", "\n", "sparse_weights", "=", "[", "sess", ".", "run", "(", "getattr", "(", "model", ",", "sparse_vars", "[", "i", "]", ")", ",", "feed_dict", "=", "nat_dict", ")", "for", "i", "in", "range", "(", "len", "(", "sparse_vars", ")", ")", "]", "\n", "\n", "if", "prune", ":", "\n", "        ", "sparse_weights", "=", "_prune", "(", "sparse_weights", ")", "\n", "\n", "", "stored_weights", "=", "{", "}", "\n", "stored_weights", "[", "'network_weights'", "]", "=", "weights", "\n", "stored_weights", "[", "'network_biases'", "]", "=", "biases", "\n", "stored_weights", "[", "'stability_variable'", "]", "=", "stab_weight", "\n", "stored_weights", "[", "'sparsity_variables'", "]", "=", "sparse_weights", "\n", "\n", "return", "stored_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils.compVecImpurity": [[3, 10], ["numpy.unique", "range", "len", "len"], "function", ["None"], ["def", "compVecImpurity", "(", "x", ")", ":", "\n", "    ", "giniIndex", "=", "0", "\n", "unique", ",", "counts", "=", "np", ".", "unique", "(", "x", ",", "return_counts", "=", "True", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "unique", ")", ")", ":", "\n", "        ", "pi", "=", "counts", "[", "i", "]", "/", "len", "(", "x", ")", "\n", "giniIndex", "+=", "pi", "*", "(", "1", "-", "pi", ")", "\n", "", "return", "giniIndex", "\n", "\n"]], "home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils.total_gini": [[19, 27], ["len", "numpy.zeros", "range", "numpy.mean", "utils.compVecImpurity"], "function", ["home.repos.pwc.inspect_result.kimvc7_HDL.utils.utils.compVecImpurity"], ["", "def", "total_gini", "(", "preds", ")", ":", "\n", "    ", "n", "=", "len", "(", "preds", ")", "\n", "# check that preds is indeed observations * number of experiment", "\n", "assert", "preds", ".", "shape", "[", "0", "]", ">", "preds", ".", "shape", "[", "1", "]", "\n", "results", "=", "np", ".", "zeros", "(", "n", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "        ", "results", "[", "i", "]", "+=", "compVecImpurity", "(", "preds", "[", "i", "]", ")", "/", "n", "\n", "", "return", "np", ".", "mean", "(", "results", ")", "\n", "", ""]]}