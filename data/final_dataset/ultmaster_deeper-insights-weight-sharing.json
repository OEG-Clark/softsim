{"home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.genotypes.to_dag": [[22, 41], ["torch.ModuleList", "torch.ModuleList", "nn.ModuleList.append", "nn.ModuleList.append", "isinstance", "torch.Sequential", "models.ops.DropPath_"], "function", ["None"], ["def", "to_dag", "(", "C_in", ",", "gene", ",", "reduction", ")", ":", "\n", "    ", "\"\"\" generate discrete ops from gene \"\"\"", "\n", "dag", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "edges", "in", "gene", ":", "\n", "        ", "row", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "op_name", ",", "s_idx", "in", "edges", ":", "\n", "# reduction cell & from input nodes => stride = 2", "\n", "            ", "stride", "=", "2", "if", "reduction", "and", "s_idx", "<", "2", "else", "1", "\n", "op", "=", "ops", ".", "OPS", "[", "op_name", "]", "(", "C_in", ",", "stride", ",", "True", ")", "\n", "if", "not", "isinstance", "(", "op", ",", "ops", ".", "Identity", ")", ":", "# Identity does not use drop path", "\n", "                ", "op", "=", "nn", ".", "Sequential", "(", "\n", "op", ",", "\n", "ops", ".", "DropPath_", "(", ")", "\n", ")", "\n", "", "op", ".", "s_idx", "=", "s_idx", "\n", "row", ".", "append", "(", "op", ")", "\n", "", "dag", ".", "append", "(", "row", ")", "\n", "\n", "", "return", "dag", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.genotypes.from_str": [[43, 56], ["eval"], "function", ["None"], ["", "def", "from_str", "(", "s", ")", ":", "\n", "    ", "\"\"\" generate genotype from string\n    e.g. \"Genotype(\n            normal=[[('sep_conv_3x3', 0), ('sep_conv_3x3', 1)],\n                    [('sep_conv_3x3', 1), ('dil_conv_3x3', 2)],\n                    [('sep_conv_3x3', 1), ('sep_conv_3x3', 2)],\n                    [('sep_conv_3x3', 1), ('dil_conv_3x3', 4)]],\n            normal_concat=range(2, 6)\"\n    \"\"\"", "\n", "\n", "genotype", "=", "eval", "(", "s", ")", "\n", "\n", "return", "genotype", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.genotypes.parse": [[58, 98], ["torch.topk", "torch.topk", "edge_max.view", "torch.topk", "torch.topk", "gene.append", "min", "node_gene.append", "edge_max.view.size", "edge_idx.item"], "function", ["None"], ["", "def", "parse", "(", "alpha", ",", "k", ")", ":", "\n", "    ", "\"\"\"\n    parse continuous alpha to discrete gene.\n    alpha is ParameterList:\n    ParameterList [\n        Parameter(n_edges1, n_ops),\n        Parameter(n_edges2, n_ops),\n        ...\n    ]\n\n    gene is list:\n    [\n        [('node1_ops_1', node_idx), ..., ('node1_ops_k', node_idx)],\n        [('node2_ops_1', node_idx), ..., ('node2_ops_k', node_idx)],\n        ...\n    ]\n    each node has two edges (k=2) in CNN.\n\n    Yuge's comment: since we only have one edge now, k should be 1\n    \"\"\"", "\n", "\n", "gene", "=", "[", "]", "\n", "\n", "# 1) Convert the mixed op to discrete edge (single op) by choosing top-1 weight edge", "\n", "# 2) Choose top-k edges per node by edge score (top-1 weight in edge)", "\n", "for", "edges", "in", "alpha", ":", "\n", "# edges: Tensor(n_edges, n_ops)", "\n", "        ", "edge_max", ",", "primitive_indices", "=", "torch", ".", "topk", "(", "edges", ",", "1", ")", "\n", "edge_max_flattened", "=", "edge_max", ".", "view", "(", "-", "1", ")", "\n", "topk_edge_values", ",", "topk_edge_indices", "=", "torch", ".", "topk", "(", "edge_max_flattened", ",", "\n", "min", "(", "edge_max_flattened", ".", "size", "(", "0", ")", ",", "k", ")", ")", "\n", "node_gene", "=", "[", "]", "\n", "for", "edge_idx", "in", "topk_edge_indices", ":", "\n", "            ", "prim_idx", "=", "primitive_indices", "[", "edge_idx", "]", "\n", "prim", "=", "PRIMITIVES", "[", "prim_idx", "]", "\n", "node_gene", ".", "append", "(", "(", "prim", ",", "edge_idx", ".", "item", "(", ")", ")", ")", "\n", "\n", "", "gene", ".", "append", "(", "node_gene", ")", "\n", "\n", "", "return", "gene", "\n", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.BaseConfig.print_params": [[18, 24], ["prtf", "prtf", "sorted", "prtf", "vars().items", "prtf", "vars", "attr.upper"], "methods", ["None"], ["    ", "def", "print_params", "(", "self", ",", "prtf", "=", "print", ")", ":", "\n", "        ", "prtf", "(", "\"\"", ")", "\n", "prtf", "(", "\"Parameters:\"", ")", "\n", "for", "attr", ",", "value", "in", "sorted", "(", "vars", "(", "self", ")", ".", "items", "(", ")", ")", ":", "\n", "            ", "prtf", "(", "\"{}={}\"", ".", "format", "(", "attr", ".", "upper", "(", ")", ",", "value", ")", ")", "\n", "", "prtf", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.BaseConfig.as_markdown": [[25, 32], ["sorted", "vars().items", "vars"], "methods", ["None"], ["", "def", "as_markdown", "(", "self", ")", ":", "\n", "        ", "\"\"\" Return configs as markdown format \"\"\"", "\n", "text", "=", "\"|name|value|  \\n|-|-|  \\n\"", "\n", "for", "attr", ",", "value", "in", "sorted", "(", "vars", "(", "self", ")", ".", "items", "(", ")", ")", ":", "\n", "            ", "text", "+=", "\"|{}|{}|  \\n\"", ".", "format", "(", "attr", ",", "value", ")", "\n", "\n", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.SearchConfig.build_parser": [[35, 101], ["config.get_parser", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.get_parser"], ["    ", "def", "build_parser", "(", "self", ")", ":", "\n", "        ", "parser", "=", "get_parser", "(", "\"Search config\"", ")", "\n", "parser", ".", "add_argument", "(", "'--config_file'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--name'", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "None", ",", "help", "=", "'CIFAR10 / MNIST / FashionMNIST'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "64", ",", "help", "=", "'batch size'", ")", "\n", "parser", ".", "add_argument", "(", "'--w_lr_scheduler'", ",", "default", "=", "'plateau'", ",", "help", "=", "'plateau / cosine'", ")", "\n", "parser", ".", "add_argument", "(", "'--w_lr'", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "'lr for weights'", ")", "\n", "parser", ".", "add_argument", "(", "'--w_lr_min'", ",", "type", "=", "float", ",", "default", "=", "0.0001", ",", "\n", "help", "=", "'training will stop when learning rate drops to lower than this value'", ")", "\n", "parser", ".", "add_argument", "(", "'--w_lr_patience'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "\n", "help", "=", "'number of validations with no improvement after which learning rate will be reduced'", ")", "\n", "parser", ".", "add_argument", "(", "'--w_lr_factor'", ",", "type", "=", "float", ",", "default", "=", "0.2", ",", "\n", "help", "=", "'factor by which the learning rate will be reduced'", ")", "\n", "parser", ".", "add_argument", "(", "'--w_momentum'", ",", "type", "=", "float", ",", "default", "=", "0.9", ",", "help", "=", "'momentum for weights'", ")", "\n", "parser", ".", "add_argument", "(", "'--w_weight_decay'", ",", "type", "=", "float", ",", "default", "=", "3e-4", ",", "\n", "help", "=", "'weight decay for weights'", ")", "\n", "parser", ".", "add_argument", "(", "'--w_grad_clip'", ",", "type", "=", "float", ",", "default", "=", "5.", ",", "\n", "help", "=", "'gradient clipping for weights'", ")", "\n", "parser", ".", "add_argument", "(", "'--print_freq'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "help", "=", "'print frequency'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "50", ",", "help", "=", "'# of training epochs'", ")", "\n", "parser", ".", "add_argument", "(", "'--init_channels'", ",", "type", "=", "int", ",", "default", "=", "16", ")", "\n", "parser", ".", "add_argument", "(", "'--n_layers'", ",", "type", "=", "int", ",", "default", "=", "8", ",", "help", "=", "'# of layers'", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "'random seed'", ")", "\n", "parser", ".", "add_argument", "(", "'--workers'", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "'# of workers'", ")", "\n", "parser", ".", "add_argument", "(", "'--search_all_alpha'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ",", "\n", "help", "=", "'try all combinations of alphas (instead of the original darts way)'", ")", "\n", "parser", ".", "add_argument", "(", "'--alpha_lr'", ",", "type", "=", "float", ",", "default", "=", "3e-4", ",", "help", "=", "'lr for alpha'", ")", "\n", "parser", ".", "add_argument", "(", "'--alpha_weight_decay'", ",", "type", "=", "float", ",", "default", "=", "1e-3", ",", "\n", "help", "=", "'weight decay for alpha'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_nodes'", ",", "type", "=", "int", ",", "default", "=", "4", ",", "help", "=", "'number of nodes in one cell'", ")", "\n", "parser", ".", "add_argument", "(", "'--stem_multiplier'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "'stem multiplier in cells'", ")", "\n", "parser", ".", "add_argument", "(", "'--shared_policy'", ",", "type", "=", "str", ",", "default", "=", "\"all\"", ",", "\n", "help", "=", "'the rule to get shared weights'", ")", "\n", "parser", ".", "add_argument", "(", "'--shared_policy_kwargs'", ",", "default", "=", "None", ",", "\n", "help", "=", "'the kwargs to get shared weights, use this in yml (as dict)'", ")", "\n", "parser", ".", "add_argument", "(", "'--validate_instance'", ",", "default", "=", "1", ",", "type", "=", "int", ",", "\n", "help", "=", "'number of instances to validate, when searching all possible alpha combs'", ")", "\n", "parser", ".", "add_argument", "(", "'--validate_epochs'", ",", "default", "=", "10", ",", "type", "=", "int", ",", "\n", "help", "=", "'run validation every n epochs'", ")", "\n", "parser", ".", "add_argument", "(", "'--cutout_length'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "\n", "help", "=", "'cutout length of data augmentation'", ")", "\n", "parser", ".", "add_argument", "(", "'--designated_subgraph'", ",", "default", "=", "None", ",", "\n", "help", "=", "'designated subgraph (as list of indices), in config'", ")", "\n", "parser", ".", "add_argument", "(", "'--designated_training'", ",", "default", "=", "None", ",", "\n", "help", "=", "'designated subgraph for training'", ")", "\n", "parser", ".", "add_argument", "(", "'--bn_momentum'", ",", "default", "=", "0.4", ",", "help", "=", "'batch norm momentum'", ")", "\n", "parser", ".", "add_argument", "(", "'--nni'", ",", "default", "=", "None", ",", "type", "=", "str", ",", "help", "=", "'mode, running with nni'", ")", "\n", "parser", ".", "add_argument", "(", "'--step_order'", ",", "default", "=", "None", ",", "type", "=", "str", ",", "\n", "help", "=", "'the rule of order to update the subgraphs, write it with <rule>_<seed>'", ")", "\n", "parser", ".", "add_argument", "(", "'--dense_validation_steps'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "\n", "help", "=", "'for the last k steps, will do validation on all subgraphs every batch'", ")", "\n", "parser", ".", "add_argument", "(", "'--cutoff_epochs'", ",", "default", "=", "None", ",", "type", "=", "int", ",", "\n", "help", "=", "'training will stop here (won\\'t change learning rate decay, '", "\n", "'will affect dense validation)'", ")", "\n", "\n", "# for finetuning experiments", "\n", "parser", ".", "add_argument", "(", "'--save_weights_on_validation'", ",", "default", "=", "False", ",", "action", "=", "'store_true'", ")", "\n", "parser", ".", "add_argument", "(", "'--finetune_from_step'", ",", "type", "=", "str", ",", "default", "=", "None", ",", "\n", "help", "=", "'path to pretrained checkpoint subdirectory for finetuning'", ")", "\n", "parser", ".", "add_argument", "(", "'--finetune_epochs'", ",", "type", "=", "int", ",", "default", "=", "20", ",", "\n", "help", "=", "'another k epochs will be trained for finetuning'", ")", "\n", "parser", ".", "add_argument", "(", "'--finetune_max_steps'", ",", "type", "=", "int", ",", "default", "=", "None", ",", "\n", "help", "=", "'will validate each step for max_steps'", ")", "\n", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.SearchConfig.build_overriding_parser": [[102, 111], ["config.get_parser", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument", "get_parser.add_argument"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.get_parser"], ["", "def", "build_overriding_parser", "(", "self", ")", ":", "\n", "        ", "parser", "=", "get_parser", "(", "\"Search config overriding\"", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "type", "=", "int", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--w_lr'", ",", "type", "=", "float", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--w_gamma'", ",", "type", "=", "float", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "type", "=", "int", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "type", "=", "int", ",", "default", "=", "None", ")", "\n", "parser", ".", "add_argument", "(", "'--step_order'", ",", "type", "=", "str", ",", "default", "=", "None", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.SearchConfig.__init__": [[112, 139], ["config.SearchConfig.build_parser", "config.SearchConfig.parse_args", "argparse.Namespace.__init__", "config.SearchConfig.build_overriding_parser", "config.SearchConfig.parse_known_args", "vars", "os.path.join", "os.path.join", "os.path.join", "ValueError", "dict", "vars", "open", "yaml.safe_load().items", "setattr", "setattr", "yaml.safe_load", "hasattr", "ValueError"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.SearchConfig.build_parser", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.SearchConfig.build_overriding_parser"], ["", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "parser", "=", "self", ".", "build_parser", "(", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "super", "(", ")", ".", "__init__", "(", "**", "vars", "(", "args", ")", ")", "\n", "\n", "if", "self", ".", "config_file", "is", "not", "None", ":", "\n", "            ", "with", "open", "(", "self", ".", "config_file", ",", "\"r\"", ")", "as", "fp", ":", "\n", "                ", "for", "k", ",", "v", "in", "yaml", ".", "safe_load", "(", "fp", ")", ".", "items", "(", ")", ":", "\n", "                    ", "if", "not", "hasattr", "(", "self", ",", "k", ")", ":", "\n", "                        ", "raise", "ValueError", "(", "\"Property {} not found in config\"", ".", "format", "(", "k", ")", ")", "\n", "", "setattr", "(", "self", ",", "k", ",", "v", ")", "\n", "\n", "", "", "", "overriding_parser", "=", "self", ".", "build_overriding_parser", "(", ")", "\n", "args", ",", "_", "=", "overriding_parser", ".", "parse_known_args", "(", ")", "\n", "args", "=", "vars", "(", "args", ")", "\n", "for", "name", "in", "args", ":", "\n", "            ", "if", "args", "[", "name", "]", "is", "not", "None", ":", "\n", "                ", "setattr", "(", "self", ",", "name", ",", "args", "[", "name", "]", ")", "\n", "\n", "", "", "if", "self", ".", "dataset", "is", "None", ":", "\n", "            ", "raise", "ValueError", "(", "\"Dataset config is required yet missing\"", ")", "\n", "", "if", "self", ".", "shared_policy_kwargs", "is", "None", ":", "\n", "            ", "self", ".", "shared_policy_kwargs", "=", "dict", "(", ")", "\n", "", "self", ".", "data_path", "=", "'./data/'", "\n", "self", ".", "path", "=", "os", ".", "path", ".", "join", "(", "'outputs'", ",", "self", ".", "name", ")", "\n", "self", ".", "plot_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "path", ",", "'plots'", ")", "\n", "self", ".", "checkpoint_path", "=", "os", ".", "path", ".", "join", "(", "\"./checkpoints/\"", ",", "self", ".", "name", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.get_parser": [[9, 15], ["argparse.ArgumentParser", "functools.partial"], "function", ["None"], ["def", "get_parser", "(", "name", ")", ":", "\n", "    ", "\"\"\" make default formatted parser \"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "name", ",", "formatter_class", "=", "argparse", ".", "ArgumentDefaultsHelpFormatter", ")", "\n", "# print default value always", "\n", "parser", ".", "add_argument", "=", "partial", "(", "parser", ".", "add_argument", ",", "help", "=", "' '", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.preproc.Cutout.__init__": [[8, 10], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "length", ")", ":", "\n", "        ", "self", ".", "length", "=", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.preproc.Cutout.__call__": [[11, 28], ["numpy.ones", "numpy.random.randint", "numpy.random.randint", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "mask.expand_as.expand_as.expand_as", "img.size", "img.size"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "h", ",", "w", "=", "img", ".", "size", "(", "1", ")", ",", "img", ".", "size", "(", "2", ")", "\n", "mask", "=", "np", ".", "ones", "(", "(", "h", ",", "w", ")", ",", "np", ".", "float32", ")", "\n", "y", "=", "np", ".", "random", ".", "randint", "(", "h", ")", "\n", "x", "=", "np", ".", "random", ".", "randint", "(", "w", ")", "\n", "\n", "y1", "=", "np", ".", "clip", "(", "y", "-", "self", ".", "length", "//", "2", ",", "0", ",", "h", ")", "\n", "y2", "=", "np", ".", "clip", "(", "y", "+", "self", ".", "length", "//", "2", ",", "0", ",", "h", ")", "\n", "x1", "=", "np", ".", "clip", "(", "x", "-", "self", ".", "length", "//", "2", ",", "0", ",", "w", ")", "\n", "x2", "=", "np", ".", "clip", "(", "x", "+", "self", ".", "length", "//", "2", ",", "0", ",", "w", ")", "\n", "\n", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "0.", "\n", "mask", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "mask", "=", "mask", ".", "expand_as", "(", "img", ")", "\n", "img", "*=", "mask", "\n", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.preproc.data_transforms": [[30, 67], ["dataset.lower.lower", "torchvision.Compose", "torchvision.Compose", "torchvision.ToTensor", "torchvision.Normalize", "transforms.Compose.transforms.append", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "preproc.Cutout", "torchvision.RandomAffine", "ValueError", "torchvision.RandomAffine", "torchvision.RandomVerticalFlip"], "function", ["None"], ["", "", "def", "data_transforms", "(", "dataset", ",", "cutout_length", ")", ":", "\n", "    ", "dataset", "=", "dataset", ".", "lower", "(", ")", "\n", "if", "dataset", "==", "'cifar10'", ":", "\n", "        ", "MEAN", "=", "[", "0.49139968", ",", "0.48215827", ",", "0.44653124", "]", "\n", "STD", "=", "[", "0.24703233", ",", "0.24348505", ",", "0.26158768", "]", "\n", "transf", "=", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", "\n", "]", "\n", "", "elif", "dataset", "==", "'mnist'", ":", "\n", "        ", "MEAN", "=", "[", "0.13066051707548254", "]", "\n", "STD", "=", "[", "0.30810780244715075", "]", "\n", "transf", "=", "[", "\n", "transforms", ".", "RandomAffine", "(", "degrees", "=", "15", ",", "translate", "=", "(", "0.1", ",", "0.1", ")", ",", "scale", "=", "(", "0.9", ",", "1.1", ")", ",", "shear", "=", "0.1", ")", "\n", "]", "\n", "", "elif", "dataset", "==", "'fashionmnist'", ":", "\n", "        ", "MEAN", "=", "[", "0.28604063146254594", "]", "\n", "STD", "=", "[", "0.35302426207299326", "]", "\n", "transf", "=", "[", "\n", "transforms", ".", "RandomAffine", "(", "degrees", "=", "15", ",", "translate", "=", "(", "0.1", ",", "0.1", ")", ",", "scale", "=", "(", "0.9", ",", "1.1", ")", ",", "shear", "=", "0.1", ")", ",", "\n", "transforms", ".", "RandomVerticalFlip", "(", ")", "\n", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'not expected dataset = {}'", ".", "format", "(", "dataset", ")", ")", "\n", "\n", "", "normalize", "=", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "MEAN", ",", "STD", ")", "\n", "]", "\n", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "transf", "+", "normalize", ")", "\n", "valid_transform", "=", "transforms", ".", "Compose", "(", "normalize", ")", "\n", "\n", "if", "cutout_length", ">", "0", ":", "\n", "        ", "train_transform", ".", "transforms", ".", "append", "(", "Cutout", "(", "cutout_length", ")", ")", "\n", "\n", "", "return", "train_transform", ",", "valid_transform", "\n", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.Architect.__init__": [[16, 26], ["copy.deepcopy"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "net", ",", "w_momentum", ",", "w_weight_decay", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            net\n            w_momentum: weights momentum\n        \"\"\"", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "v_net", "=", "copy", ".", "deepcopy", "(", "net", ")", "\n", "self", ".", "w_momentum", "=", "w_momentum", "\n", "self", ".", "w_weight_decay", "=", "w_weight_decay", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.Architect.virtual_step": [[27, 59], ["architect.Architect.net.loss", "torch.autograd.grad", "architect.Architect.net.weights", "torch.no_grad", "zip", "zip", "architect.Architect.net.weights", "architect.Architect.v_net.weights", "vw.copy_", "architect.Architect.net.alphas", "architect.Architect.v_net.alphas", "va.copy_", "w_optim.state[].get"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.loss", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.alphas", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.alphas"], ["", "def", "virtual_step", "(", "self", ",", "trn_X", ",", "trn_y", ",", "xi", ",", "w_optim", ")", ":", "\n", "        ", "\"\"\"\n        Compute unrolled weight w' (virtual step)\n\n        Step process:\n        1) forward\n        2) calc loss\n        3) compute gradient (by backprop)\n        4) update gradient\n\n        Args:\n            xi: learning rate for virtual gradient step (same as weights lr)\n            w_optim: weights optimizer\n        \"\"\"", "\n", "# forward & calc loss", "\n", "loss", "=", "self", ".", "net", ".", "loss", "(", "trn_X", ",", "trn_y", ")", "# L_trn(w)", "\n", "\n", "# compute gradient", "\n", "gradients", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "net", ".", "weights", "(", ")", ")", "\n", "\n", "# do virtual step (update gradient)", "\n", "# below operations do not need gradient tracking", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "# dict key is not the value, but the pointer. So original network weight have to", "\n", "# be iterated also.", "\n", "            ", "for", "w", ",", "vw", ",", "g", "in", "zip", "(", "self", ".", "net", ".", "weights", "(", ")", ",", "self", ".", "v_net", ".", "weights", "(", ")", ",", "gradients", ")", ":", "\n", "                ", "m", "=", "w_optim", ".", "state", "[", "w", "]", ".", "get", "(", "'momentum_buffer'", ",", "0.", ")", "*", "self", ".", "w_momentum", "\n", "vw", ".", "copy_", "(", "w", "-", "xi", "*", "(", "m", "+", "g", "+", "self", ".", "w_weight_decay", "*", "w", ")", ")", "\n", "\n", "# synchronize alphas", "\n", "", "for", "a", ",", "va", "in", "zip", "(", "self", ".", "net", ".", "alphas", "(", ")", ",", "self", ".", "v_net", ".", "alphas", "(", ")", ")", ":", "\n", "                ", "va", ".", "copy_", "(", "a", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.Architect.unrolled_backward": [[60, 85], ["architect.Architect.virtual_step", "architect.Architect.v_net.loss", "tuple", "tuple", "torch.autograd.grad", "architect.Architect.compute_hessian", "architect.Architect.v_net.alphas", "architect.Architect.v_net.weights", "torch.no_grad", "zip", "len", "len", "architect.Architect.net.alphas"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.Architect.virtual_step", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.loss", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.Architect.compute_hessian", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.alphas", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.alphas"], ["", "", "", "def", "unrolled_backward", "(", "self", ",", "trn_X", ",", "trn_y", ",", "val_X", ",", "val_y", ",", "xi", ",", "w_optim", ")", ":", "\n", "        ", "\"\"\" Compute unrolled loss and backward its gradients\n        Args:\n            xi: learning rate for virtual gradient step (same as net lr)\n            w_optim: weights optimizer - for virtual step\n        \"\"\"", "\n", "# do virtual step (calc w`)", "\n", "self", ".", "virtual_step", "(", "trn_X", ",", "trn_y", ",", "xi", ",", "w_optim", ")", "\n", "\n", "# calc unrolled loss", "\n", "loss", "=", "self", ".", "v_net", ".", "loss", "(", "val_X", ",", "val_y", ")", "# L_val(w`)", "\n", "\n", "# compute gradient", "\n", "v_alphas", "=", "tuple", "(", "self", ".", "v_net", ".", "alphas", "(", ")", ")", "\n", "v_weights", "=", "tuple", "(", "self", ".", "v_net", ".", "weights", "(", ")", ")", "\n", "v_grads", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "v_alphas", "+", "v_weights", ")", "\n", "dalpha", "=", "v_grads", "[", ":", "len", "(", "v_alphas", ")", "]", "\n", "dw", "=", "v_grads", "[", "len", "(", "v_alphas", ")", ":", "]", "\n", "\n", "hessian", "=", "self", ".", "compute_hessian", "(", "dw", ",", "trn_X", ",", "trn_y", ")", "\n", "\n", "# update final gradient = dalpha - xi*hessian", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "alpha", ",", "da", ",", "h", "in", "zip", "(", "self", ".", "net", ".", "alphas", "(", ")", ",", "dalpha", ",", "hessian", ")", ":", "\n", "                ", "alpha", ".", "grad", "=", "da", "-", "xi", "*", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.Architect.compute_hessian": [[86, 118], ["torch.cat().norm", "architect.Architect.net.loss", "torch.autograd.grad", "architect.Architect.net.loss", "torch.autograd.grad", "torch.no_grad", "zip", "architect.Architect.net.alphas", "torch.no_grad", "zip", "architect.Architect.net.alphas", "torch.no_grad", "zip", "torch.cat", "architect.Architect.net.weights", "architect.Architect.net.weights", "architect.Architect.net.weights", "zip", "w.view"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.loss", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.loss", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.alphas", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.alphas", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights"], ["", "", "", "def", "compute_hessian", "(", "self", ",", "dw", ",", "trn_X", ",", "trn_y", ")", ":", "\n", "        ", "\"\"\"\n        dw = dw` { L_val(w`, alpha) }\n        w+ = w + eps * dw\n        w- = w - eps * dw\n        hessian = (dalpha { L_trn(w+, alpha) } - dalpha { L_trn(w-, alpha) }) / (2*eps)\n        eps = 0.01 / ||dw||\n        \"\"\"", "\n", "norm", "=", "torch", ".", "cat", "(", "[", "w", ".", "view", "(", "-", "1", ")", "for", "w", "in", "dw", "]", ")", ".", "norm", "(", ")", "\n", "eps", "=", "0.01", "/", "norm", "\n", "\n", "# w+ = w + eps*dw`", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "p", ",", "d", "in", "zip", "(", "self", ".", "net", ".", "weights", "(", ")", ",", "dw", ")", ":", "\n", "                ", "p", "+=", "eps", "*", "d", "\n", "", "", "loss", "=", "self", ".", "net", ".", "loss", "(", "trn_X", ",", "trn_y", ")", "\n", "dalpha_pos", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "net", ".", "alphas", "(", ")", ")", "# dalpha { L_trn(w+) }", "\n", "\n", "# w- = w - eps*dw`", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "p", ",", "d", "in", "zip", "(", "self", ".", "net", ".", "weights", "(", ")", ",", "dw", ")", ":", "\n", "                ", "p", "-=", "2.", "*", "eps", "*", "d", "\n", "", "", "loss", "=", "self", ".", "net", ".", "loss", "(", "trn_X", ",", "trn_y", ")", "\n", "dalpha_neg", "=", "torch", ".", "autograd", ".", "grad", "(", "loss", ",", "self", ".", "net", ".", "alphas", "(", ")", ")", "# dalpha { L_trn(w-) }", "\n", "\n", "# recover w", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "p", ",", "d", "in", "zip", "(", "self", ".", "net", ".", "weights", "(", ")", ",", "dw", ")", ":", "\n", "                ", "p", "+=", "eps", "*", "d", "\n", "\n", "", "", "hessian", "=", "[", "(", "p", "-", "n", ")", "/", "2.", "*", "eps", "for", "p", ",", "n", "in", "zip", "(", "dalpha_pos", ",", "dalpha_neg", ")", "]", "\n", "return", "hessian", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.get_all_architecture_indices_combination": [[122, 135], ["architect.SubgraphSearchOptimizer.get_all_architecture_indices_combination.dfs"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "get_all_architecture_indices_combination", "(", "n_prims", ",", "n_edges", ")", ":", "\n", "        ", "def", "dfs", "(", "now", ")", ":", "\n", "            ", "nonlocal", "ret", "\n", "if", "len", "(", "now", ")", "==", "n_edges", ":", "\n", "                ", "ret", ".", "append", "(", "tuple", "(", "now", ")", ")", "\n", "", "else", ":", "\n", "                ", "for", "i", "in", "range", "(", "n_prims", ")", ":", "\n", "                    ", "dfs", "(", "now", "+", "[", "i", "]", ")", "\n", "\n", "", "", "", "ret", "=", "[", "]", "\n", "dfs", "(", "[", "]", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.__init__": [[136, 193], ["architect.SubgraphSearchOptimizer.get_all_architecture_indices_combination", "numpy.arange", "numpy.random.shuffle", "sorted", "architect.SubgraphSearchOptimizer.net.generate_unshared_mask", "architect.SubgraphSearchOptimizer.net.named_parameters", "architect.SubgraphSearchOptimizer.logger.info", "range", "architect.SubgraphSearchOptimizer.logger.info", "architect.SubgraphSearchOptimizer.logger.info", "config.step_order.split", "numpy.random.RandomState", "len", "architect.SubgraphSearchOptimizer.logger.info", "architect.SubgraphSearchOptimizer.shuffle_state.shuffle", "len", "len", "len", "len", "architect.SubgraphSearchOptimizer.save", "architect.SubgraphSearchOptimizer.restore", "architect.SubgraphSearchOptimizer.net.genotype", "architect.SubgraphSearchOptimizer.logger.info", "os.path.join", "visualize.plot", "int", "architect.SubgraphSearchOptimizer.unshared_parameters.append", "len"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.similarity_calc.get_all_architecture_indices_combination", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.generate_unshared_mask", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.save", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.restore", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.genotype", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.visualize.plot"], ["", "def", "__init__", "(", "self", ",", "logger", ",", "config", ",", "net", ",", "optim", ")", ":", "\n", "        ", "assert", "config", ".", "search_all_alpha", "\n", "self", ".", "logger", "=", "logger", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "optim", "=", "optim", "\n", "self", ".", "shuffle_rule", ",", "self", ".", "shuffle_state", "=", "None", ",", "None", "\n", "\n", "if", "config", ".", "step_order", ":", "\n", "            ", "self", ".", "shuffle_rule", ",", "step_seed", "=", "config", ".", "step_order", ".", "split", "(", "\"_\"", ")", "\n", "self", ".", "shuffle_state", "=", "np", ".", "random", ".", "RandomState", "(", "int", "(", "step_seed", ")", ")", "\n", "", "self", ".", "all_archits", "=", "self", ".", "get_all_architecture_indices_combination", "(", "len", "(", "genotypes", ".", "PRIMITIVES", ")", ",", "\n", "config", ".", "n_nodes", "*", "(", "config", ".", "n_nodes", "+", "1", ")", "//", "2", ")", "\n", "if", "config", ".", "designated_subgraph", "is", "not", "None", ":", "\n", "            ", "self", ".", "all_archits", "=", "[", "self", ".", "all_archits", "[", "t", "]", "for", "t", "in", "config", ".", "designated_subgraph", "]", "\n", "", "if", "self", ".", "shuffle_rule", "==", "\"one\"", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"Architecture order shuffled\"", ")", "\n", "self", ".", "shuffle_state", ".", "shuffle", "(", "self", ".", "all_archits", ")", "\n", "\n", "", "self", ".", "validate_instances", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "all_archits", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "self", ".", "validate_instances", ")", "\n", "self", ".", "validate_instances", "=", "sorted", "(", "self", ".", "validate_instances", "[", ":", "config", ".", "validate_instance", "]", ")", "\n", "\n", "self", ".", "mapping", "=", "None", "\n", "\n", "# DISABLE MAPPING IN ARCHITECT FOR NOW", "\n", "# if config.shared_policy == \"group\":", "\n", "#     groups = config.shared_policy_kwargs[\"groups\"]", "\n", "#     self.mapping = [i % groups for i in range(len(self.all_archits))]", "\n", "#     random.shuffle(self.mapping)", "\n", "#     logger.info(\"Group mapping: {}\".format(self.mapping))", "\n", "\n", "self", ".", "unshared_mask", "=", "self", ".", "net", ".", "generate_unshared_mask", "(", "config", ".", "shared_policy", ",", "**", "config", ".", "shared_policy_kwargs", ")", "\n", "self", ".", "unshared_parameters", "=", "[", "]", "\n", "for", "name", ",", "parameter", "in", "self", ".", "net", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "name", "in", "self", ".", "unshared_mask", ":", "\n", "                ", "self", ".", "unshared_parameters", ".", "append", "(", "parameter", ")", "\n", "\n", "", "", "self", ".", "saved_weights", "=", "[", "None", "]", "*", "len", "(", "self", ".", "all_archits", ")", "\n", "self", ".", "saved_optimizer", "=", "[", "None", "]", "*", "len", "(", "self", ".", "all_archits", ")", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Logging all generated architectures...\"", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "all_archits", ")", ")", ":", "\n", "            ", "self", ".", "save", "(", "i", ")", "\n", "archi", "=", "self", ".", "restore", "(", "i", ")", "\n", "\n", "genotype", "=", "self", ".", "net", ".", "genotype", "(", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Index = {}, genotype = {}\"", ".", "format", "(", "i", ",", "genotype", ")", ")", "\n", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "config", ".", "plot_path", ",", "\"ALL{}\"", ".", "format", "(", "archi", ")", ")", "\n", "caption", "=", "\"#{:02d}: {}\"", ".", "format", "(", "i", ",", "archi", ")", "\n", "plot", "(", "genotype", ".", "normal", ",", "plot_path", "+", "\"-normal\"", ",", "caption", ")", "\n", "\n", "", "self", ".", "_cur_index", "=", "-", "1", "# ready for beginning", "\n", "\n", "self", ".", "logger", ".", "info", "(", "\"Unsharing: {}\"", ".", "format", "(", "self", ".", "unshared_mask", ")", ")", "\n", "self", ".", "logger", ".", "info", "(", "\"Possible combinations length: {}\"", ".", "format", "(", "len", "(", "self", ".", "all_archits", ")", ")", ")", "\n", "self", ".", "net", "=", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.__next__": [[194, 203], ["architect.SubgraphSearchOptimizer.restore", "architect.SubgraphSearchOptimizer.save", "len", "architect.SubgraphSearchOptimizer.logger.info", "architect.SubgraphSearchOptimizer.shuffle_state.shuffle"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.restore", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.save"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "# save, next, load", "\n", "        ", "if", "self", ".", "_cur_index", ">=", "0", ":", "\n", "            ", "self", ".", "save", "(", "self", ".", "_cur_index", ")", "\n", "", "self", ".", "_cur_index", "=", "(", "self", ".", "_cur_index", "+", "1", ")", "%", "len", "(", "self", ".", "all_archits", ")", "\n", "if", "self", ".", "_cur_index", "==", "0", "and", "self", ".", "shuffle_rule", "==", "\"every\"", ":", "\n", "            ", "self", ".", "logger", ".", "info", "(", "\"Architecture order shuffled\"", ")", "\n", "self", ".", "shuffle_state", ".", "shuffle", "(", "self", ".", "all_archits", ")", "\n", "", "return", "self", ".", "restore", "(", "self", ".", "_cur_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.__getitem__": [[204, 207], ["architect.SubgraphSearchOptimizer.restore"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.restore"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "# does not handle save", "\n", "        ", "return", "self", ".", "restore", "(", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.__iter__": [[208, 210], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.__len__": [[211, 213], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "all_archits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.dump_optimizer_state": [[214, 221], ["dict", "v.clone().detach", "architect.SubgraphSearchOptimizer.optim.state[].items", "v.clone"], "methods", ["None"], ["", "def", "dump_optimizer_state", "(", "self", ")", ":", "\n", "        ", "ret", "=", "dict", "(", ")", "\n", "if", "self", ".", "unshared_parameters", ":", "\n", "            ", "for", "parameter", "in", "self", ".", "unshared_parameters", ":", "\n", "                ", "if", "parameter", "in", "self", ".", "optim", ".", "state", ":", "\n", "                    ", "ret", "[", "parameter", "]", "=", "{", "k", ":", "v", ".", "clone", "(", ")", ".", "detach", "(", ")", "for", "k", ",", "v", "in", "self", ".", "optim", ".", "state", "[", "parameter", "]", ".", "items", "(", ")", "}", "\n", "", "", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.restore_optimizer_state": [[222, 225], ["architect.SubgraphSearchOptimizer.optim.state.update"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update"], ["", "def", "restore_optimizer_state", "(", "self", ",", "state", ")", ":", "\n", "        ", "if", "state", ":", "\n", "            ", "self", ".", "optim", ".", "state", ".", "update", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.save": [[226, 232], ["architect.SubgraphSearchOptimizer.net.dump_unshared_checkpoint", "architect.SubgraphSearchOptimizer.dump_optimizer_state", "architect.SubgraphSearchOptimizer.map", "architect.SubgraphSearchOptimizer.map"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.dump_unshared_checkpoint", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.dump_optimizer_state", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.map", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.map"], ["", "", "def", "save", "(", "self", ",", "index", "=", "None", ")", ":", "\n", "        ", "if", "index", "is", "None", ":", "\n", "            ", "index", "=", "self", ".", "_cur_index", "\n", "", "self", ".", "saved_weights", "[", "self", ".", "map", "(", "index", ")", "]", "=", "self", ".", "net", ".", "dump_unshared_checkpoint", "(", "self", ".", "unshared_mask", ")", "\n", "self", ".", "saved_optimizer", "[", "self", ".", "map", "(", "index", ")", "]", "=", "self", ".", "dump_optimizer_state", "(", ")", "\n", "return", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.restore": [[233, 244], ["architect.SubgraphSearchOptimizer.net.load_unshared_checkpoint", "architect.SubgraphSearchOptimizer.restore_optimizer_state", "architect.SubgraphSearchOptimizer.net.generate_and_fill_alphas", "architect.SubgraphSearchOptimizer.display", "architect.SubgraphSearchOptimizer.map", "architect.SubgraphSearchOptimizer.map"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.load_unshared_checkpoint", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.restore_optimizer_state", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.generate_and_fill_alphas", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.display", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.map", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.map"], ["", "def", "restore", "(", "self", ",", "index", ")", ":", "\n", "        ", "ckpt", "=", "self", ".", "saved_weights", "[", "self", ".", "map", "(", "index", ")", "]", "\n", "assert", "ckpt", "is", "not", "None", ",", "\"Please save checkpoints before loading...\"", "\n", "self", ".", "net", ".", "load_unshared_checkpoint", "(", "self", ".", "unshared_mask", ",", "ckpt", ")", "\n", "\n", "ckpt", "=", "self", ".", "saved_optimizer", "[", "self", ".", "map", "(", "index", ")", "]", "\n", "assert", "ckpt", "is", "not", "None", "\n", "self", ".", "restore_optimizer_state", "(", "ckpt", ")", "\n", "\n", "self", ".", "net", ".", "generate_and_fill_alphas", "(", "\"fixed\"", ",", "select", "=", "self", ".", "all_archits", "[", "index", "]", ")", "\n", "return", "self", ".", "display", "(", "self", ".", "all_archits", "[", "index", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.current_architecture": [[245, 248], ["architect.SubgraphSearchOptimizer.display"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.display"], ["", "@", "property", "\n", "def", "current_architecture", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "display", "(", "self", ".", "all_archits", "[", "self", ".", "_cur_index", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.map": [[249, 253], ["None"], "methods", ["None"], ["", "def", "map", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "mapping", "is", "None", ":", "\n", "            ", "return", "index", "\n", "", "return", "self", ".", "mapping", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.display": [[254, 257], ["str"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "display", "(", "t", ")", ":", "\n", "        ", "return", "\"\"", ".", "join", "(", "str", "(", "i", "+", "1", ")", "for", "i", "in", "t", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.submit_to_v100.worker": [[10, 20], ["print", "env.update", "env.update", "subprocess.run", "print", "str", "str", "multiprocessing.current_process"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update"], ["def", "worker", "(", "config", ",", "name", ",", "key", ",", "val", ")", ":", "\n", "    ", "selected_gpu", "=", "multiprocessing", ".", "current_process", "(", ")", ".", "_identity", "[", "0", "]", "-", "1", "\n", "command", "=", "[", "\"python\"", ",", "\"search.py\"", ",", "\"--name\"", ",", "\"{}_{}_{}\"", ".", "format", "(", "name", ",", "key", ",", "val", ")", ",", "\n", "\"--config_file\"", ",", "config", ",", "\"--{}\"", ".", "format", "(", "key", ")", ",", "str", "(", "val", ")", "]", "\n", "print", "(", "\"Worker: Selecting GPU {}, Command: {}\"", ".", "format", "(", "selected_gpu", ",", "\" \"", ".", "join", "(", "command", ")", ")", ")", "\n", "env", "=", "{", "}", "\n", "env", ".", "update", "(", "os", ".", "environ", ")", "\n", "env", ".", "update", "(", "{", "\"CUDA_VISIBLE_DEVICES\"", ":", "str", "(", "selected_gpu", ")", "}", ")", "\n", "process", "=", "subprocess", ".", "run", "(", "command", ",", "env", "=", "env", ")", "\n", "print", "(", "process", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.finetune.main": [[19, 84], ["logger.info", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "utils.get_data", "torch.CrossEntropyLoss().cuda", "models.search_cnn.SearchCNNController", "models.search_cnn.SearchCNNController.cuda", "models.search_cnn.SearchCNNController.load_state_dict", "logger.info", "torch.SGD", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "range", "logger.info", "print", "torch.load", "torch.load", "torch.load", "models.search_cnn.SearchCNNController.weights", "finetune.train", "torch.CrossEntropyLoss", "len", "len", "search.validate", "math.cos"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.get_data", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.train", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.validate"], ["def", "main", "(", "config", ",", "writer", ",", "logger", ",", "checkpoint", ",", "base_step", ")", ":", "\n", "    ", "logger", ".", "info", "(", "\"Pretrained checkpoint: {}\"", ".", "format", "(", "checkpoint", ")", ")", "\n", "\n", "# set seed", "\n", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "config", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "config", ".", "seed", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# get data with meta info", "\n", "input_size", ",", "input_channels", ",", "n_classes", ",", "train_data", ",", "test_data", "=", "utils", ".", "get_data", "(", "\n", "config", ".", "dataset", ",", "config", ".", "data_path", ",", "cutout_length", "=", "config", ".", "cutout_length", ",", "validation", "=", "True", ")", "\n", "\n", "net_crit", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", ")", "\n", "model", "=", "SearchCNNController", "(", "input_channels", ",", "config", ".", "init_channels", ",", "n_classes", ",", "config", ".", "n_layers", ",", "net_crit", ",", "\n", "n_nodes", "=", "config", ".", "n_nodes", ",", "stem_multiplier", "=", "config", ".", "stem_multiplier", ",", "\n", "bn_momentum", "=", "config", ".", "bn_momentum", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "model", ".", "load_state_dict", "(", "torch", ".", "load", "(", "checkpoint", ")", ")", "\n", "\n", "base_epoch_number", "=", "base_step", "//", "(", "len", "(", "train_data", ")", "//", "config", ".", "batch_size", ")", "\n", "assert", "config", ".", "w_lr_scheduler", "==", "\"cosine\"", "\n", "base_lr", "=", "config", ".", "w_lr_min", "+", "(", "config", ".", "w_lr", "-", "config", ".", "w_lr_min", ")", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "base_epoch_number", "/", "config", ".", "epochs", ")", ")", "/", "2", "\n", "logger", ".", "info", "(", "\"Learning rate: {}\"", ".", "format", "(", "base_lr", ")", ")", "\n", "\n", "# weights optimizer", "\n", "w_optim", "=", "optim", ".", "SGD", "(", "model", ".", "weights", "(", ")", ",", "base_lr", ",", "momentum", "=", "config", ".", "w_momentum", ",", "\n", "weight_decay", "=", "config", ".", "w_weight_decay", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_data", ",", "\n", "batch_size", "=", "config", ".", "batch_size", ",", "\n", "num_workers", "=", "config", ".", "workers", ",", "\n", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ")", "\n", "valid_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "test_data", ",", "\n", "batch_size", "=", "config", ".", "batch_size", ",", "\n", "num_workers", "=", "config", ".", "workers", ",", "\n", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ")", "\n", "\n", "# training loop", "\n", "best_top1", "=", "0.", "\n", "for", "epoch", "in", "range", "(", "config", ".", "finetune_epochs", ")", ":", "\n", "        ", "lr", "=", "w_optim", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "\n", "\n", "# training", "\n", "train", "(", "config", ",", "writer", ",", "logger", ",", "train_loader", ",", "valid_loader", ",", "model", ",", "w_optim", ",", "lr", ",", "epoch", ")", "\n", "\n", "# validation", "\n", "cur_step", "=", "(", "epoch", "+", "1", ")", "*", "len", "(", "train_loader", ")", "\n", "if", "config", ".", "finetune_max_steps", "is", "None", ":", "\n", "            ", "top1", "=", "validate", "(", "config", ",", "writer", ",", "logger", ",", "valid_loader", ",", "model", ",", "epoch", ",", "cur_step", ",", "\n", "total_epochs", "=", "config", ".", "finetune_epochs", ")", "\n", "", "elif", "cur_step", ">=", "config", ".", "finetune_max_steps", ":", "\n", "            ", "break", "\n", "\n", "# save", "\n", "", "if", "best_top1", "<", "top1", ":", "\n", "            ", "best_top1", "=", "top1", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Final best Prec@1 = {:.4%}\"", ".", "format", "(", "best_top1", ")", ")", "\n", "print", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.finetune.train": [[86, 133], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "writer.add_scalar", "enumerate", "logger.info", "len", "trn_X.size", "model.train", "w_optim.zero_grad", "model", "model.criterion", "model.criterion.backward", "w_optim.step", "utils.accuracy", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "trn_X.cuda", "trn_y.cuda", "torch.utils.clip_grad_norm_", "model.criterion.item", "prec1.item", "prec5.item", "logger.info", "model.criterion.item", "prec1.item", "prec5.item", "search.validate", "model.weights", "len", "len"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.train", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.accuracy", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.validate", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights"], ["", "def", "train", "(", "config", ",", "writer", ",", "logger", ",", "train_loader", ",", "valid_loader", ",", "model", ",", "w_optim", ",", "lr", ",", "epoch", ")", ":", "\n", "    ", "top1", "=", "utils", ".", "AverageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AverageMeter", "(", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", ")", "\n", "\n", "cur_step", "=", "epoch", "*", "len", "(", "train_loader", ")", "\n", "writer", ".", "add_scalar", "(", "'train/lr'", ",", "lr", ",", "cur_step", ")", "\n", "\n", "for", "step", ",", "(", "trn_X", ",", "trn_y", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "trn_X", ",", "trn_y", "=", "trn_X", ".", "cuda", "(", "non_blocking", "=", "True", ")", ",", "trn_y", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "N", "=", "trn_X", ".", "size", "(", "0", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "\n", "w_optim", ".", "zero_grad", "(", ")", "\n", "logits", "=", "model", "(", "trn_X", ")", "\n", "loss", "=", "model", ".", "criterion", "(", "logits", ",", "trn_y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "if", "config", ".", "w_grad_clip", "!=", "0", ":", "\n", "# gradient clipping", "\n", "            ", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "weights", "(", ")", ",", "config", ".", "w_grad_clip", ")", "\n", "", "w_optim", ".", "step", "(", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "trn_y", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "N", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "N", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "N", ")", "\n", "\n", "if", "config", ".", "finetune_max_steps", "is", "not", "None", "or", "step", "%", "config", ".", "print_freq", "==", "0", "or", "step", "==", "len", "(", "train_loader", ")", "-", "1", ":", "\n", "            ", "logger", ".", "info", "(", "\n", "\"Train: [{:2d}/{}] Step {:03d}/{:03d} Loss {losses.avg:.3f} \"", "\n", "\"Prec@1 {top1.val:.1%} ({top1.avg:.1%}) Prec@5 {top5.val:.1%} ({top5.avg:.1%})\"", ".", "format", "(", "\n", "epoch", "+", "1", ",", "config", ".", "finetune_epochs", ",", "step", ",", "len", "(", "train_loader", ")", "-", "1", ",", "\n", "losses", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n", "", "writer", ".", "add_scalar", "(", "'train/loss'", ",", "loss", ".", "item", "(", ")", ",", "cur_step", ")", "\n", "writer", ".", "add_scalar", "(", "'train/top1'", ",", "prec1", ".", "item", "(", ")", ",", "cur_step", ")", "\n", "writer", ".", "add_scalar", "(", "'train/top5'", ",", "prec5", ".", "item", "(", ")", ",", "cur_step", ")", "\n", "cur_step", "+=", "1", "\n", "\n", "if", "config", ".", "finetune_max_steps", "is", "not", "None", ":", "\n", "            ", "validate", "(", "config", ",", "writer", ",", "logger", ",", "valid_loader", ",", "model", ",", "epoch", ",", "cur_step", ",", "\n", "total_epochs", "=", "config", ".", "finetune_epochs", ")", "\n", "if", "cur_step", ">=", "config", ".", "finetune_max_steps", ":", "\n", "                ", "break", "\n", "\n", "", "", "", "logger", ".", "info", "(", "\"Train: [{:2d}/{}] Final Prec@1 {:.4%}\"", ".", "format", "(", "epoch", "+", "1", ",", "config", ".", "finetune_epochs", ",", "top1", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.finetune.worker": [[135, 152], ["os.path.join", "enumerate", "sorted", "os.path.join", "os.makedirs", "tensorboardX.SummaryWriter", "tensorboardX.SummaryWriter.add_text", "utils.get_logger", "config.print_params", "utils.get_logger.info", "finetune.main", "tensorboardX.SummaryWriter.close", "os.listdir", "ckpt.split", "config.as_markdown", "os.path.join", "os.path.join", "int", "os.path.join"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.get_logger", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.BaseConfig.print_params", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.main", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.config.BaseConfig.as_markdown"], ["", "def", "worker", "(", "config", ",", "step", ")", ":", "\n", "    ", "search_dir", "=", "os", ".", "path", ".", "join", "(", "\"checkpoints\"", ",", "config", ".", "name", ",", "step", ")", "\n", "for", "i", ",", "ckpt", "in", "enumerate", "(", "sorted", "(", "os", ".", "listdir", "(", "search_dir", ")", ")", ")", ":", "\n", "        ", "ckpt_name", "=", "ckpt", ".", "split", "(", "\".\"", ")", "[", "0", "]", "\n", "output_path", "=", "os", ".", "path", ".", "join", "(", "config", ".", "path", ",", "\"finetune_{}\"", ".", "format", "(", "step", ")", ")", "\n", "os", ".", "makedirs", "(", "output_path", ",", "exist_ok", "=", "True", ")", "\n", "\n", "writer", "=", "SummaryWriter", "(", "log_dir", "=", "os", ".", "path", ".", "join", "(", "output_path", ",", "\"tb\"", ")", ")", "\n", "writer", ".", "add_text", "(", "'config'", ",", "config", ".", "as_markdown", "(", ")", ",", "0", ")", "\n", "logger", "=", "utils", ".", "get_logger", "(", "os", ".", "path", ".", "join", "(", "output_path", ",", "\"finetune_{}_{}_{}.log\"", ".", "format", "(", "step", ",", "ckpt_name", ",", "\n", "config", ".", "name", ")", ")", ",", "i", ")", "\n", "config", ".", "print_params", "(", "logger", ".", "info", ")", "\n", "\n", "logger", ".", "info", "(", "\"Finetuning start - Subgraph name: {}\"", ".", "format", "(", "ckpt_name", ")", ")", "\n", "main", "(", "config", ",", "writer", ",", "logger", ",", "os", ".", "path", ".", "join", "(", "search_dir", ",", "ckpt", ")", ",", "int", "(", "step", ")", ")", "\n", "\n", "writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.main": [[20, 173], ["logger.info", "random.seed", "numpy.random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "utils.get_data", "torch.CrossEntropyLoss().cuda", "models.search_cnn.SearchCNNController", "models.search_cnn.SearchCNNController.cuda", "torch.SGD", "architect.Architect", "range", "logger.info", "print", "models.search_cnn.SearchCNNController.weights", "torch.Adam", "len", "list", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "architect.SubgraphSearchOptimizer", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.lr_scheduler.CosineAnnealingLR", "logger.info", "search.train", "print", "logger.info", "torch.CrossEntropyLoss", "models.search_cnn.SearchCNNController.alphas", "range", "torch.lr_scheduler.ReduceLROnPlateau", "logger.info", "logger.info", "models.search_cnn.SearchCNNController.print_alphas", "itertools.cycle", "optim.lr_scheduler.ReduceLROnPlateau.step", "logger.info", "len", "search.validate_all", "search.validate", "models.search_cnn.SearchCNNController.genotype", "logger.info", "os.path.join", "visualize.plot", "utils.save_checkpoint", "rl.nni_tools.report_result", "optim.lr_scheduler.ReduceLROnPlateau.step", "rl.nni_tools.report_result", "logger.warning", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.get_data", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.train", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.alphas", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.print_alphas", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.validate_all", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.validate", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.genotype", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.visualize.plot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.save_checkpoint"], ["def", "main", "(", "config", ",", "writer", ",", "logger", ")", ":", "\n", "    ", "logger", ".", "info", "(", "\"Logger is set - training start\"", ")", "\n", "\n", "# set seed", "\n", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "config", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "config", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed_all", "(", "config", ".", "seed", ")", "\n", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "True", "\n", "\n", "# get data with meta info", "\n", "input_size", ",", "input_channels", ",", "n_classes", ",", "train_data", ",", "test_data", "=", "utils", ".", "get_data", "(", "\n", "config", ".", "dataset", ",", "config", ".", "data_path", ",", "cutout_length", "=", "config", ".", "cutout_length", ",", "validation", "=", "True", ")", "\n", "\n", "net_crit", "=", "nn", ".", "CrossEntropyLoss", "(", ")", ".", "cuda", "(", ")", "\n", "model", "=", "SearchCNNController", "(", "input_channels", ",", "config", ".", "init_channels", ",", "n_classes", ",", "config", ".", "n_layers", ",", "net_crit", ",", "\n", "n_nodes", "=", "config", ".", "n_nodes", ",", "stem_multiplier", "=", "config", ".", "stem_multiplier", ",", "\n", "bn_momentum", "=", "config", ".", "bn_momentum", ")", "\n", "model", ".", "cuda", "(", ")", "\n", "\n", "# weights optimizer", "\n", "w_optim", "=", "optim", ".", "SGD", "(", "model", ".", "weights", "(", ")", ",", "config", ".", "w_lr", ",", "momentum", "=", "config", ".", "w_momentum", ",", "\n", "weight_decay", "=", "config", ".", "w_weight_decay", ")", "\n", "\n", "if", "not", "config", ".", "search_all_alpha", ":", "\n", "# alphas optimizer", "\n", "        ", "alpha_optim", "=", "optim", ".", "Adam", "(", "model", ".", "alphas", "(", ")", ",", "config", ".", "alpha_lr", ",", "betas", "=", "(", "0.5", ",", "0.999", ")", ",", "\n", "weight_decay", "=", "config", ".", "alpha_weight_decay", ")", "\n", "# split data to train/validation", "\n", "n_train", "=", "len", "(", "train_data", ")", "\n", "indices", "=", "list", "(", "range", "(", "n_train", ")", ")", "\n", "split", "=", "n_train", "//", "2", "\n", "train_sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "indices", "[", ":", "split", "]", ")", "\n", "valid_sampler", "=", "torch", ".", "utils", ".", "data", ".", "sampler", ".", "SubsetRandomSampler", "(", "indices", "[", "split", ":", "]", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_data", ",", "\n", "batch_size", "=", "config", ".", "batch_size", ",", "\n", "sampler", "=", "train_sampler", ",", "\n", "num_workers", "=", "config", ".", "workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "valid_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_data", ",", "\n", "batch_size", "=", "config", ".", "batch_size", ",", "\n", "sampler", "=", "valid_sampler", ",", "\n", "num_workers", "=", "config", ".", "workers", ",", "\n", "pin_memory", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "alpha_optim", "=", "SubgraphSearchOptimizer", "(", "logger", ",", "config", ",", "model", ",", "w_optim", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "train_data", ",", "\n", "batch_size", "=", "config", ".", "batch_size", ",", "\n", "num_workers", "=", "config", ".", "workers", ",", "\n", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ")", "\n", "valid_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "test_data", ",", "\n", "batch_size", "=", "config", ".", "batch_size", ",", "\n", "num_workers", "=", "config", ".", "workers", ",", "\n", "pin_memory", "=", "True", ",", "\n", "shuffle", "=", "True", ")", "\n", "\n", "", "if", "config", ".", "w_lr_scheduler", "==", "\"cosine\"", ":", "\n", "        ", "lr_scheduler", "=", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "w_optim", ",", "T_max", "=", "config", ".", "epochs", ",", "eta_min", "=", "config", ".", "w_lr_min", ")", "\n", "", "elif", "config", ".", "w_lr_scheduler", "==", "\"plateau\"", ":", "\n", "        ", "lr_scheduler", "=", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", "(", "w_optim", ",", "mode", "=", "\"max\"", ",", "patience", "=", "config", ".", "w_lr_patience", ",", "\n", "factor", "=", "config", ".", "w_lr_factor", ",", "verbose", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "architect", "=", "Architect", "(", "model", ",", "config", ".", "w_momentum", ",", "config", ".", "w_weight_decay", ")", "\n", "\n", "# training loop", "\n", "best_top1", "=", "0.", "\n", "best_genotype", "=", "None", "\n", "final_result_reported", "=", "False", "\n", "for", "epoch", "in", "range", "(", "config", ".", "epochs", ")", ":", "\n", "\n", "        ", "if", "config", ".", "cutoff_epochs", "is", "not", "None", "and", "epoch", ">=", "config", ".", "cutoff_epochs", ":", "\n", "            ", "logger", ".", "info", "(", "\"Cutoff epochs detected, exiting.\"", ")", "\n", "break", "\n", "\n", "", "lr", "=", "w_optim", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", "\n", "logger", ".", "info", "(", "\"Current learning rate: {}\"", ".", "format", "(", "lr", ")", ")", "\n", "\n", "if", "lr", "<", "config", ".", "w_lr_min", ":", "\n", "            ", "logger", ".", "info", "(", "\"Learning rate is less than {}, exiting.\"", ".", "format", "(", "config", ".", "w_lr_min", ")", ")", "\n", "break", "\n", "\n", "", "if", "not", "config", ".", "search_all_alpha", ":", "\n", "            ", "model", ".", "print_alphas", "(", "logger", ")", "\n", "valid_loader_for_training", "=", "valid_loader", "\n", "", "else", ":", "\n", "# make dummy input", "\n", "            ", "valid_loader_for_training", "=", "itertools", ".", "cycle", "(", "[", "(", "torch", ".", "tensor", "(", "1", ")", ",", "torch", ".", "tensor", "(", "1", ")", ")", "]", ")", "\n", "\n", "# training", "\n", "", "train", "(", "config", ",", "writer", ",", "logger", ",", "train_loader", ",", "valid_loader_for_training", ",", "\n", "model", ",", "architect", ",", "w_optim", ",", "alpha_optim", ",", "lr", ",", "epoch", ",", "valid_loader", ")", "\n", "\n", "if", "config", ".", "w_lr_scheduler", "==", "\"cosine\"", ":", "\n", "            ", "lr_scheduler", ".", "step", "(", ")", "\n", "\n", "# validation", "\n", "", "if", "config", ".", "validate_epochs", "==", "0", "or", "(", "epoch", "+", "1", ")", "%", "config", ".", "validate_epochs", "!=", "0", ":", "\n", "            ", "logger", ".", "info", "(", "\"Valid: Skipping validation for epoch {}\"", ".", "format", "(", "epoch", "+", "1", ")", ")", "\n", "continue", "\n", "\n", "", "cur_step", "=", "(", "epoch", "+", "1", ")", "*", "len", "(", "train_loader", ")", "\n", "if", "config", ".", "search_all_alpha", ":", "\n", "            ", "top1", "=", "validate_all", "(", "config", ",", "writer", ",", "logger", ",", "valid_loader", ",", "model", ",", "epoch", ",", "cur_step", ",", "alpha_optim", ")", "\n", "if", "best_top1", "<", "top1", ":", "\n", "                ", "best_top1", "=", "top1", "\n", "\n", "# checkpoint saving is not supported yet", "\n", "", "", "else", ":", "\n", "            ", "top1", "=", "validate", "(", "config", ",", "writer", ",", "logger", ",", "valid_loader", ",", "model", ",", "epoch", ",", "cur_step", ")", "\n", "\n", "# log", "\n", "# genotype", "\n", "genotype", "=", "model", ".", "genotype", "(", ")", "\n", "logger", ".", "info", "(", "\"genotype = {}\"", ".", "format", "(", "genotype", ")", ")", "\n", "\n", "# genotype as a image", "\n", "plot_path", "=", "os", ".", "path", ".", "join", "(", "config", ".", "plot_path", ",", "\"EP{:02d}\"", ".", "format", "(", "epoch", "+", "1", ")", ")", "\n", "caption", "=", "\"Epoch {}\"", ".", "format", "(", "epoch", "+", "1", ")", "\n", "plot", "(", "genotype", ".", "normal", ",", "plot_path", "+", "\"-normal\"", ",", "caption", ")", "\n", "\n", "# save", "\n", "if", "best_top1", "<", "top1", ":", "\n", "                ", "best_top1", "=", "top1", "\n", "best_genotype", "=", "genotype", "\n", "is_best", "=", "True", "\n", "", "else", ":", "\n", "                ", "is_best", "=", "False", "\n", "", "utils", ".", "save_checkpoint", "(", "model", ",", "config", ".", "path", ",", "is_best", ")", "\n", "\n", "", "if", "config", ".", "nni", ":", "\n", "            ", "nni_tools", ".", "report_result", "(", "top1", ",", "epoch", "+", "1", "==", "config", ".", "epochs", ")", "\n", "if", "epoch", "+", "1", "==", "config", ".", "epochs", ":", "\n", "                ", "final_result_reported", "=", "True", "\n", "\n", "", "", "if", "config", ".", "w_lr_scheduler", "==", "\"plateau\"", ":", "\n", "            ", "lr_scheduler", ".", "step", "(", "top1", ")", "\n", "", "print", "(", "\"\"", ")", "\n", "\n", "", "if", "config", ".", "nni", "and", "not", "final_result_reported", ":", "\n", "        ", "try", ":", "\n", "            ", "nni_tools", ".", "report_result", "(", "top1", ",", "True", ")", "\n", "", "except", ":", "\n", "            ", "logger", ".", "warning", "(", "\"Final result not reported and top1 not found\"", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Final best Prec@1 = {:.4%}\"", ".", "format", "(", "best_top1", ")", ")", "\n", "if", "best_genotype", "is", "not", "None", ":", "\n", "        ", "logger", ".", "info", "(", "\"Best Genotype = {}\"", ".", "format", "(", "best_genotype", ")", ")", "\n", "", "print", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.train": [[175, 248], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "writer.add_scalar", "enumerate", "logger.info", "len", "zip", "trn_X.size", "model.train", "isinstance", "w_optim.zero_grad", "model", "model.criterion", "model.criterion.backward", "w_optim.step", "utils.accuracy", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "trn_X.cuda", "trn_y.cuda", "val_X.cuda", "val_y.cuda", "alpha_optim.zero_grad", "architect.unrolled_backward", "alpha_optim.step", "torch.utils.clip_grad_norm_", "model.criterion.item", "prec1.item", "prec5.item", "logger.info", "logger.info", "search.validate_all", "model.criterion.item", "prec1.item", "prec5.item", "next", "model.weights", "next", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.train", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.accuracy", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.Architect.unrolled_backward", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.validate_all", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights"], ["", "def", "train", "(", "config", ",", "writer", ",", "logger", ",", "train_loader", ",", "valid_loader", ",", "model", ",", "architect", ",", "w_optim", ",", "alpha_optim", ",", "lr", ",", "epoch", ",", "\n", "valid_loader_for_testing", ")", ":", "\n", "    ", "top1", "=", "utils", ".", "AverageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AverageMeter", "(", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", ")", "\n", "\n", "cur_step", "=", "epoch", "*", "len", "(", "train_loader", ")", "\n", "writer", ".", "add_scalar", "(", "'train/lr'", ",", "lr", ",", "cur_step", ")", "\n", "\n", "for", "step", ",", "(", "(", "trn_X", ",", "trn_y", ")", ",", "(", "val_X", ",", "val_y", ")", ")", "in", "enumerate", "(", "zip", "(", "train_loader", ",", "valid_loader", ")", ")", ":", "\n", "        ", "trn_X", ",", "trn_y", "=", "trn_X", ".", "cuda", "(", "non_blocking", "=", "True", ")", ",", "trn_y", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "val_X", ",", "val_y", "=", "val_X", ".", "cuda", "(", "non_blocking", "=", "True", ")", ",", "val_y", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "N", "=", "trn_X", ".", "size", "(", "0", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "\n", "current_archit", "=", "None", "\n", "if", "isinstance", "(", "alpha_optim", ",", "optim", ".", "Optimizer", ")", ":", "\n", "# phase 2. architect step (alpha)", "\n", "            ", "alpha_optim", ".", "zero_grad", "(", ")", "\n", "architect", ".", "unrolled_backward", "(", "trn_X", ",", "trn_y", ",", "val_X", ",", "val_y", ",", "lr", ",", "w_optim", ")", "\n", "alpha_optim", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "# process as a SubgraphSearchOptimizer", "\n", "# the optimizer will automatically do save and restore and other things...", "\n", "            ", "if", "config", ".", "designated_training", ":", "\n", "                ", "while", "True", ":", "\n", "                    ", "current_archit", "=", "next", "(", "alpha_optim", ")", "\n", "if", "current_archit", "in", "config", ".", "designated_training", ":", "\n", "                        ", "break", "\n", "", "", "", "else", ":", "\n", "                ", "current_archit", "=", "next", "(", "alpha_optim", ")", "\n", "\n", "# phase 1. child network step (w)", "\n", "", "", "w_optim", ".", "zero_grad", "(", ")", "\n", "logits", "=", "model", "(", "trn_X", ")", "\n", "loss", "=", "model", ".", "criterion", "(", "logits", ",", "trn_y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "if", "config", ".", "w_grad_clip", "!=", "0", ":", "\n", "# gradient clipping", "\n", "            ", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "model", ".", "weights", "(", ")", ",", "config", ".", "w_grad_clip", ")", "\n", "", "w_optim", ".", "step", "(", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "trn_y", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "N", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "N", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "N", ")", "\n", "\n", "will_validate", "=", "config", ".", "dense_validation_steps", ">", "0", "and", "(", "cur_step", "+", "config", ".", "dense_validation_steps", ">=", "config", ".", "epochs", "*", "len", "(", "train_loader", ")", "or", "\n", "(", "config", ".", "cutoff_epochs", "is", "not", "None", "and", "\n", "cur_step", "+", "config", ".", "dense_validation_steps", ">=", "config", ".", "cutoff_epochs", "*", "len", "(", "train_loader", ")", ")", ")", "\n", "\n", "if", "will_validate", "or", "step", "%", "config", ".", "print_freq", "==", "0", "or", "step", "==", "len", "(", "train_loader", ")", "-", "1", ":", "\n", "            ", "current_archit_info", "=", "\"Archit: {} \"", ".", "format", "(", "current_archit", ")", "if", "current_archit", "is", "not", "None", "else", "\"\"", "\n", "logger", ".", "info", "(", "\n", "\"Train: [{:2d}/{}] Step {:03d}/{:03d} {}Loss {losses.avg:.3f} \"", "\n", "\"Prec@1 {top1.val:.1%} ({top1.avg:.1%}) Prec@5 {top5.val:.1%} ({top5.avg:.1%})\"", ".", "format", "(", "\n", "epoch", "+", "1", ",", "config", ".", "epochs", ",", "step", ",", "len", "(", "train_loader", ")", "-", "1", ",", "current_archit_info", ",", "\n", "losses", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n", "", "if", "will_validate", ":", "\n", "            ", "logger", ".", "info", "(", "\"Train: [{:2d}/{}] Step {:03d}/{:03d} {}Entering dense validation steps. Validating...\"", ".", "format", "(", "\n", "epoch", "+", "1", ",", "config", ".", "epochs", ",", "step", ",", "len", "(", "train_loader", ")", "-", "1", ",", "current_archit_info", "\n", ")", ")", "\n", "validate_all", "(", "config", ",", "writer", ",", "logger", ",", "valid_loader_for_testing", ",", "model", ",", "epoch", ",", "cur_step", ",", "alpha_optim", ")", "\n", "\n", "", "writer", ".", "add_scalar", "(", "'train/loss'", ",", "loss", ".", "item", "(", ")", ",", "cur_step", ")", "\n", "writer", ".", "add_scalar", "(", "'train/top1'", ",", "prec1", ".", "item", "(", ")", ",", "cur_step", ")", "\n", "writer", ".", "add_scalar", "(", "'train/top5'", ",", "prec5", ".", "item", "(", ")", ",", "cur_step", ")", "\n", "cur_step", "+=", "1", "\n", "\n", "", "logger", ".", "info", "(", "\"Train: [{:2d}/{}] Final Prec@1 {:.4%}\"", ".", "format", "(", "epoch", "+", "1", ",", "config", ".", "epochs", ",", "top1", ".", "avg", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.validate_all": [[250, 277], ["alpha_optim.save", "dict", "sorted", "writer.add_histogram", "writer.add_scalar", "logger.info", "alpha_optim.restore", "os.path.join", "os.makedirs", "search.validate", "list", "torch.save", "torch.save", "torch.save", "dict.items", "model.state_dict", "os.path.join"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.save", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.restore", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.validate", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.save", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.save", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.save"], ["", "def", "validate_all", "(", "config", ",", "writer", ",", "logger", ",", "valid_loader", ",", "model", ",", "epoch", ",", "cur_step", ",", "alpha_optim", ")", ":", "\n", "# save state of training", "\n", "    ", "last_index", "=", "alpha_optim", ".", "save", "(", ")", "\n", "\n", "if", "config", ".", "save_weights_on_validation", ":", "\n", "        ", "checkpoint_dir", "=", "os", ".", "path", ".", "join", "(", "config", ".", "checkpoint_path", ",", "\"{:06d}\"", ".", "format", "(", "cur_step", ")", ")", "\n", "os", ".", "makedirs", "(", "checkpoint_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "", "validate_list", "=", "dict", "(", ")", "\n", "for", "val_idx", "in", "alpha_optim", ".", "validate_instances", ":", "\n", "        ", "instance", "=", "alpha_optim", "[", "val_idx", "]", "# init the model to the state", "\n", "if", "config", ".", "save_weights_on_validation", ":", "\n", "            ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "os", ".", "path", ".", "join", "(", "checkpoint_dir", ",", "instance", "+", "\".pth.tar\"", ")", ")", "\n", "\n", "", "validate_list", "[", "instance", "]", "=", "validate", "(", "config", ",", "writer", ",", "logger", ",", "valid_loader", ",", "\n", "model", ",", "epoch", ",", "cur_step", ",", "instance", ")", "\n", "", "sorted_top", "=", "sorted", "(", "list", "(", "validate_list", ".", "items", "(", ")", ")", ",", "key", "=", "lambda", "d", ":", "d", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "accuracy_list", "=", "[", "t", "[", "1", "]", "for", "t", "in", "sorted_top", "]", "\n", "writer", ".", "add_histogram", "(", "\"val/hist\"", ",", "accuracy_list", ",", "cur_step", ")", "\n", "writer", ".", "add_scalar", "(", "\"val/best_top1\"", ",", "accuracy_list", "[", "0", "]", ",", "cur_step", ")", "\n", "logger", ".", "info", "(", "\"Valid: Top accuracy: {}\"", ".", "format", "(", "sorted_top", ")", ")", "\n", "top1", "=", "sorted_top", "[", "0", "]", "[", "1", "]", "\n", "\n", "# restore state of training", "\n", "alpha_optim", ".", "restore", "(", "last_index", ")", "\n", "\n", "return", "top1", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.validate": [[279, 318], ["utils.AverageMeter", "utils.AverageMeter", "utils.AverageMeter", "model.eval", "writer.add_scalar", "writer.add_scalar", "writer.add_scalar", "logger.info", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "X.size", "model", "model.criterion", "utils.accuracy", "utils.AverageMeter.update", "utils.AverageMeter.update", "utils.AverageMeter.update", "X.cuda", "y.cuda", "model.criterion.item", "prec1.item", "prec5.item", "logger.info", "len", "len"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.accuracy", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update"], ["", "def", "validate", "(", "config", ",", "writer", ",", "logger", ",", "valid_loader", ",", "model", ",", "epoch", ",", "cur_step", ",", "instance", "=", "None", ",", "total_epochs", "=", "None", ")", ":", "\n", "    ", "top1", "=", "utils", ".", "AverageMeter", "(", ")", "\n", "top5", "=", "utils", ".", "AverageMeter", "(", ")", "\n", "losses", "=", "utils", ".", "AverageMeter", "(", ")", "\n", "current_archit_info", "=", "\"Archit: {} \"", ".", "format", "(", "instance", ")", "if", "instance", "is", "not", "None", "else", "\"\"", "\n", "if", "total_epochs", "is", "None", ":", "\n", "        ", "total_epochs", "=", "config", ".", "epochs", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "step", ",", "(", "X", ",", "y", ")", "in", "enumerate", "(", "valid_loader", ")", ":", "\n", "            ", "X", ",", "y", "=", "X", ".", "cuda", "(", "non_blocking", "=", "True", ")", ",", "y", ".", "cuda", "(", "non_blocking", "=", "True", ")", "\n", "N", "=", "X", ".", "size", "(", "0", ")", "\n", "\n", "logits", "=", "model", "(", "X", ")", "\n", "loss", "=", "model", ".", "criterion", "(", "logits", ",", "y", ")", "\n", "\n", "prec1", ",", "prec5", "=", "utils", ".", "accuracy", "(", "logits", ",", "y", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "N", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "N", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "N", ")", "\n", "\n", "if", "step", "%", "config", ".", "print_freq", "==", "0", "or", "step", "==", "len", "(", "valid_loader", ")", "-", "1", ":", "\n", "                ", "logger", ".", "info", "(", "\n", "\"Valid: [{:2d}/{}] Step {:03d}/{:03d} {}Loss {losses.avg:.3f} \"", "\n", "\"Prec@(1,5) ({top1.avg:.1%}, {top5.avg:.1%})\"", ".", "format", "(", "\n", "epoch", "+", "1", ",", "total_epochs", ",", "step", ",", "len", "(", "valid_loader", ")", "-", "1", ",", "current_archit_info", ",", "\n", "losses", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n", "", "", "", "suffix", "=", "\"/\"", "+", "instance", "if", "instance", "is", "not", "None", "else", "\"\"", "\n", "writer", ".", "add_scalar", "(", "'val/loss'", "+", "suffix", ",", "losses", ".", "avg", ",", "cur_step", ")", "\n", "writer", ".", "add_scalar", "(", "'val/top1'", "+", "suffix", ",", "top1", ".", "avg", ",", "cur_step", ")", "\n", "writer", ".", "add_scalar", "(", "'val/top5'", "+", "suffix", ",", "top5", ".", "avg", ",", "cur_step", ")", "\n", "\n", "logger", ".", "info", "(", "\"Valid: [{:2d}/{}] {}Final Prec@1 {:.4%}\"", ".", "format", "(", "epoch", "+", "1", ",", "total_epochs", ",", "\n", "current_archit_info", ",", "top1", ".", "avg", ")", ")", "\n", "\n", "return", "top1", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.get_current_node_count": [[320, 325], ["int"], "function", ["None"], ["", "def", "get_current_node_count", "(", ")", ":", "\n", "    ", "if", "\"PAI_CURRENT_TASK_ROLE_NAME\"", "not", "in", "os", ".", "environ", ":", "\n", "        ", "return", "1", "\n", "", "task_role", "=", "os", ".", "environ", "[", "\"PAI_CURRENT_TASK_ROLE_NAME\"", "]", "\n", "return", "int", "(", "os", ".", "environ", "[", "\"PAI_TASK_ROLE_TASK_COUNT_\"", "+", "task_role", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.search.get_current_node_index": [[327, 331], ["int"], "function", ["None"], ["", "def", "get_current_node_index", "(", ")", ":", "\n", "    ", "if", "\"PAI_CURRENT_TASK_ROLE_CURRENT_TASK_INDEX\"", "not", "in", "os", ".", "environ", ":", "\n", "        ", "return", "0", "\n", "", "return", "int", "(", "os", ".", "environ", "[", "\"PAI_CURRENT_TASK_ROLE_CURRENT_TASK_INDEX\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.visualize.plot": [[7, 58], ["graphviz.Digraph", "graphviz.Digraph.body.extend", "graphviz.Digraph.node", "len", "range", "enumerate", "graphviz.Digraph.node", "range", "graphviz.Digraph.render", "graphviz.Digraph.node", "graphviz.Digraph.edge", "graphviz.Digraph.attr", "str", "str", "graphviz.Digraph.edge", "str", "str"], "function", ["None"], ["def", "plot", "(", "genotype", ",", "file_path", ",", "caption", "=", "None", ")", ":", "\n", "    ", "\"\"\" make DAG plot and save to file_path as .png \"\"\"", "\n", "edge_attr", "=", "{", "\n", "'fontsize'", ":", "'20'", ",", "\n", "'fontname'", ":", "'times'", "\n", "}", "\n", "node_attr", "=", "{", "\n", "'style'", ":", "'filled'", ",", "\n", "'shape'", ":", "'rect'", ",", "\n", "'align'", ":", "'center'", ",", "\n", "'fontsize'", ":", "'20'", ",", "\n", "'height'", ":", "'0.5'", ",", "\n", "'width'", ":", "'0.5'", ",", "\n", "'penwidth'", ":", "'2'", ",", "\n", "'fontname'", ":", "'times'", "\n", "}", "\n", "g", "=", "Digraph", "(", "\n", "format", "=", "'png'", ",", "\n", "edge_attr", "=", "edge_attr", ",", "\n", "node_attr", "=", "node_attr", ",", "\n", "engine", "=", "'dot'", ")", "\n", "g", ".", "body", ".", "extend", "(", "[", "'rankdir=LR'", "]", ")", "\n", "\n", "# input nodes", "\n", "g", ".", "node", "(", "\"c_{k-1}\"", ",", "fillcolor", "=", "'darkseagreen2'", ")", "\n", "\n", "# intermediate nodes", "\n", "n_nodes", "=", "len", "(", "genotype", ")", "\n", "for", "i", "in", "range", "(", "n_nodes", ")", ":", "\n", "        ", "g", ".", "node", "(", "str", "(", "i", ")", ",", "fillcolor", "=", "'lightblue'", ")", "\n", "\n", "", "for", "i", ",", "edges", "in", "enumerate", "(", "genotype", ")", ":", "\n", "        ", "for", "op", ",", "j", "in", "edges", ":", "\n", "            ", "if", "j", "==", "0", ":", "\n", "                ", "u", "=", "\"c_{k-1}\"", "\n", "", "else", ":", "\n", "                ", "u", "=", "str", "(", "j", "-", "1", ")", "\n", "\n", "", "v", "=", "str", "(", "i", ")", "\n", "g", ".", "edge", "(", "u", ",", "v", ",", "label", "=", "op", ",", "fillcolor", "=", "\"gray\"", ")", "\n", "\n", "# output node", "\n", "", "", "g", ".", "node", "(", "\"c_{k}\"", ",", "fillcolor", "=", "'palegoldenrod'", ")", "\n", "for", "i", "in", "range", "(", "n_nodes", ")", ":", "\n", "        ", "g", ".", "edge", "(", "str", "(", "i", ")", ",", "\"c_{k}\"", ",", "fillcolor", "=", "\"gray\"", ")", "\n", "\n", "# add image caption", "\n", "", "if", "caption", ":", "\n", "        ", "g", ".", "attr", "(", "label", "=", "caption", ",", "overlap", "=", "'false'", ",", "fontsize", "=", "'20'", ",", "fontname", "=", "'times'", ")", "\n", "\n", "", "g", ".", "render", "(", "file_path", ",", "view", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.__init__": [[75, 77], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.reset": [[78, 84], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\" Reset all statistics \"\"\"", "\n", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update": [[85, 91], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "\"\"\" Update statistics \"\"\"", "\n", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.get_data": [[13, 46], ["dataset.lower.lower", "preproc.data_transforms", "dset_cls", "ret.append", "len", "dset_cls", "ValueError"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.preproc.data_transforms"], ["def", "get_data", "(", "dataset", ",", "data_path", ",", "cutout_length", ",", "validation", ")", ":", "\n", "    ", "\"\"\" Get torchvision dataset \"\"\"", "\n", "dataset", "=", "dataset", ".", "lower", "(", ")", "\n", "\n", "if", "dataset", "==", "'cifar10'", ":", "\n", "        ", "dset_cls", "=", "dset", ".", "CIFAR10", "\n", "n_classes", "=", "10", "\n", "", "elif", "dataset", "==", "'mnist'", ":", "\n", "        ", "dset_cls", "=", "dset", ".", "MNIST", "\n", "n_classes", "=", "10", "\n", "", "elif", "dataset", "==", "'fashionmnist'", ":", "\n", "        ", "dset_cls", "=", "dset", ".", "FashionMNIST", "\n", "n_classes", "=", "10", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "dataset", ")", "\n", "\n", "", "trn_transform", ",", "val_transform", "=", "preproc", ".", "data_transforms", "(", "dataset", ",", "cutout_length", ")", "\n", "trn_data", "=", "dset_cls", "(", "root", "=", "data_path", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "trn_transform", ")", "\n", "\n", "# assuming shape is NHW or NHWC", "\n", "try", ":", "\n", "        ", "shape", "=", "trn_data", ".", "data", ".", "shape", "# CIFAR10", "\n", "", "except", ":", "\n", "        ", "shape", "=", "trn_data", ".", "train_data", ".", "shape", "# MNIST", "\n", "", "input_channels", "=", "3", "if", "len", "(", "shape", ")", "==", "4", "else", "1", "\n", "assert", "shape", "[", "1", "]", "==", "shape", "[", "2", "]", ",", "\"not expected shape = {}\"", ".", "format", "(", "shape", ")", "\n", "input_size", "=", "shape", "[", "1", "]", "\n", "\n", "ret", "=", "[", "input_size", ",", "input_channels", ",", "n_classes", ",", "trn_data", "]", "\n", "if", "validation", ":", "# append validation data", "\n", "        ", "ret", ".", "append", "(", "dset_cls", "(", "root", "=", "data_path", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "val_transform", ")", ")", "\n", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.get_logger": [[48, 64], ["logging.getLogger", "logging.Formatter", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.StreamHandler", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logging.getLogger.addHandler", "logging.getLogger.setLevel"], "function", ["None"], ["", "def", "get_logger", "(", "file_path", ",", "index", "=", "0", ")", ":", "\n", "    ", "\"\"\" Make python logger \"\"\"", "\n", "# [!] Since tensorboardX use default logger (e.g. logging.info()), we should use custom logger", "\n", "logger", "=", "logging", ".", "getLogger", "(", "'darts_%d'", "%", "index", ")", "\n", "log_format", "=", "'%(asctime)s | %(message)s'", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "log_format", ",", "datefmt", "=", "'%m/%d %I:%M:%S %p'", ")", "\n", "file_handler", "=", "logging", ".", "FileHandler", "(", "file_path", ")", "\n", "file_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "stream_handler", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "stream_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "\n", "logger", ".", "addHandler", "(", "file_handler", ")", "\n", "logger", ".", "addHandler", "(", "stream_handler", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "\n", "return", "logger", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.param_size": [[66, 71], ["sum", "numpy.prod", "v.size", "model.named_parameters", "k.startswith"], "function", ["None"], ["", "def", "param_size", "(", "model", ")", ":", "\n", "    ", "\"\"\" Compute parameter size in MB \"\"\"", "\n", "n_params", "=", "sum", "(", "\n", "np", ".", "prod", "(", "v", ".", "size", "(", ")", ")", "for", "k", ",", "v", "in", "model", ".", "named_parameters", "(", ")", "if", "not", "k", ".", "startswith", "(", "'aux_head'", ")", ")", "\n", "return", "n_params", "/", "1024.", "/", "1024.", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.accuracy": [[93, 112], ["max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.ndimension", "target.view().expand_as", "correct[].view().float().sum", "res.append", "target.max", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\" Computes the precision@k for the specified values of k \"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "# one-hot case", "\n", "if", "target", ".", "ndimension", "(", ")", ">", "1", ":", "\n", "        ", "target", "=", "target", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "\n", "", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "1.0", "/", "batch_size", ")", ")", "\n", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.save_checkpoint": [[114, 120], ["os.path.join", "torch.save", "os.path.join", "shutil.copyfile"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.save"], ["", "def", "save_checkpoint", "(", "state", ",", "ckpt_dir", ",", "is_best", "=", "False", ")", ":", "\n", "    ", "filename", "=", "os", ".", "path", ".", "join", "(", "ckpt_dir", ",", "'checkpoint.pth.tar'", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "if", "is_best", ":", "\n", "        ", "best_filename", "=", "os", ".", "path", ".", "join", "(", "ckpt_dir", ",", "'best.pth.tar'", ")", "\n", "shutil", ".", "copyfile", "(", "filename", ",", "best_filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.get_gpu_map": [[122, 132], ["subprocess.check_output", "dict", "int", "zip", "subprocess.check_output.decode().strip().split", "range", "len", "subprocess.check_output.decode().strip", "subprocess.check_output.decode"], "function", ["None"], ["", "", "def", "get_gpu_map", "(", ")", ":", "\n", "    ", "result", "=", "subprocess", ".", "check_output", "(", "\n", "[", "\n", "'nvidia-smi'", ",", "'--query-gpu=memory.free'", ",", "\n", "'--format=csv,nounits,noheader'", "\n", "]", ")", "\n", "# Convert lines into a dictionary", "\n", "gpu_memory", "=", "[", "int", "(", "x", ")", "for", "x", "in", "result", ".", "decode", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "'\\n'", ")", "]", "\n", "gpu_memory_map", "=", "dict", "(", "zip", "(", "range", "(", "len", "(", "gpu_memory", ")", ")", ",", "gpu_memory", ")", ")", "\n", "return", "gpu_memory_map", "\n", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.submit_utils.config_uglify": [[6, 14], ["os.path.relpath", "experiment_alias.lower.lower", "os.path.splitext", "experiment_alias.lower.replace", "random.choice", "range"], "function", ["None"], ["def", "config_uglify", "(", "experiment", ")", ":", "\n", "    ", "experiment_alias", "=", "os", ".", "path", ".", "relpath", "(", "experiment", ",", "\"experiments\"", ")", "\n", "experiment_alias", "=", "os", ".", "path", ".", "splitext", "(", "experiment_alias", ")", "[", "0", "]", "\n", "experiment_alias", "=", "\"dps_exp_\"", "+", "experiment_alias", ".", "replace", "(", "\"/\"", ",", "\"_\"", ")", "\n", "random_string", "=", "\"\"", ".", "join", "(", "random", ".", "choice", "(", "string", ".", "hexdigits", ")", "for", "_", "in", "range", "(", "8", ")", ")", "\n", "experiment_alias", "+=", "\"_\"", "+", "random_string", "\n", "experiment_alias", "=", "experiment_alias", ".", "lower", "(", ")", "\n", "return", "experiment_alias", "\n", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.DropPath_.__init__": [[41, 48], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["    ", "def", "__init__", "(", "self", ",", "p", "=", "0.", ")", ":", "\n", "        ", "\"\"\" [!] DropPath is inplace module\n        Args:\n            p: probability of an path to be zeroed.\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.DropPath_.extra_repr": [[49, 51], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'p={}, inplace'", ".", "format", "(", "self", ".", "p", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.DropPath_.forward": [[52, 56], ["ops.drop_path_"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.drop_path_"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "drop_path_", "(", "x", ",", "self", ".", "p", ",", "self", ".", "training", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.PoolBN.__init__": [[62, 76], ["torch.Module.__init__", "torch.BatchNorm2d", "torch.BatchNorm2d", "pool_type.lower", "torch.MaxPool2d", "torch.MaxPool2d", "pool_type.lower", "torch.AvgPool2d", "torch.AvgPool2d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["def", "__init__", "(", "self", ",", "pool_type", ",", "C", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", ",", "bn_momentum", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            pool_type: 'max' or 'avg'\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "pool_type", ".", "lower", "(", ")", "==", "'max'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", ",", "stride", ",", "padding", ")", "\n", "", "elif", "pool_type", ".", "lower", "(", ")", "==", "'avg'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "AvgPool2d", "(", "kernel_size", ",", "stride", ",", "padding", ",", "count_include_pad", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", ")", "\n", "\n", "", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "C", ",", "affine", "=", "affine", ",", "momentum", "=", "bn_momentum", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.PoolBN.forward": [[77, 81], ["ops.PoolBN.pool", "ops.PoolBN.bn"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "pool", "(", "x", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.StdConv.__init__": [[87, 93], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", ",", "bn_momentum", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ",", "momentum", "=", "bn_momentum", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.StdConv.forward": [[95, 97], ["ops.StdConv.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.FacConv.__init__": [[103, 110], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_length", ",", "stride", ",", "padding", ",", "affine", ",", "bn_momentum", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "(", "kernel_length", ",", "1", ")", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "(", "1", ",", "kernel_length", ")", ",", "stride", ",", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ",", "momentum", "=", "bn_momentum", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.FacConv.forward": [[112, 114], ["ops.FacConv.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.DilConv.__init__": [[123, 131], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", ",", "bn_momentum", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "C_in", ",", "\n", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ",", "momentum", "=", "bn_momentum", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.DilConv.forward": [[133, 135], ["ops.DilConv.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.SepConv.__init__": [[141, 146], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "ops.DilConv", "ops.DilConv"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", ",", "bn_momentum", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "\n", "DilConv", "(", "C_in", ",", "C_in", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", "=", "1", ",", "affine", "=", "affine", ",", "bn_momentum", "=", "bn_momentum", ")", ",", "\n", "DilConv", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "1", ",", "padding", ",", "dilation", "=", "1", ",", "affine", "=", "affine", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.SepConv.forward": [[148, 150], ["ops.SepConv.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.Identity.__init__": [[153, 155], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.Identity.forward": [[156, 158], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.Zero.__init__": [[161, 164], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["    ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.Zero.forward": [[165, 171], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "stride", "==", "1", ":", "\n", "            ", "return", "x", "*", "0.", "\n", "\n", "# re-sizing by stride", "\n", "", "return", "x", "[", ":", ",", ":", ",", ":", ":", "self", ".", "stride", ",", ":", ":", "self", ".", "stride", "]", "*", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.FactorizedReduce.__init__": [[177, 183], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "affine", ",", "bn_momentum", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ",", "momentum", "=", "bn_momentum", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.FactorizedReduce.forward": [[184, 189], ["ops.FactorizedReduce.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ops.FactorizedReduce.bn", "ops.FactorizedReduce.conv1", "ops.FactorizedReduce.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "self", ".", "conv1", "(", "x", ")", ",", "self", ".", "conv2", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", "1", ":", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.MixedOp.__init__": [[193, 199], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "ops.MixedOp._ops.append"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["def", "__init__", "(", "self", ",", "C", ",", "stride", ",", "bn_momentum", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "primitive", "in", "gt", ".", "PRIMITIVES", ":", "\n", "            ", "op", "=", "OPS", "[", "primitive", "]", "(", "C", ",", "stride", ",", "affine", "=", "False", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "_ops", ".", "append", "(", "op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.MixedOp.forward": [[200, 209], ["sum", "op", "filter", "zip"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "weights", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            x: input\n            weights: weight for each operation\n        \"\"\"", "\n", "# do a optimization to avoid extra calculation for w = 0", "\n", "return", "sum", "(", "w", "*", "op", "(", "x", ")", "for", "w", ",", "op", "in", "filter", "(", "lambda", "t", ":", "t", "[", "0", "]", "!=", "0", ",", "\n", "zip", "(", "weights", ",", "self", ".", "_ops", ")", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.ops.drop_path_": [[30, 38], ["torch.cuda.FloatTensor().bernoulli_", "torch.cuda.FloatTensor().bernoulli_", "x.div_().mul_", "torch.cuda.FloatTensor", "torch.cuda.FloatTensor", "x.div_", "x.size"], "function", ["None"], ["def", "drop_path_", "(", "x", ",", "drop_prob", ",", "training", ")", ":", "\n", "    ", "if", "training", "and", "drop_prob", ">", "0.", ":", "\n", "        ", "keep_prob", "=", "1.", "-", "drop_prob", "\n", "# per data point mask; assuming x in cuda.", "\n", "mask", "=", "torch", ".", "cuda", ".", "FloatTensor", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ".", "bernoulli_", "(", "keep_prob", ")", "\n", "x", ".", "div_", "(", "keep_prob", ")", ".", "mul_", "(", "mask", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cells.SearchCell.__init__": [[15, 34], ["torch.Module.__init__", "models.ops.StdConv", "torch.ModuleList", "torch.ModuleList", "range", "search_cells.SearchCell.dag.append", "range", "torch.ModuleList", "torch.ModuleList", "models.ops.MixedOp", "search_cells.SearchCell.dag[].append"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["def", "__init__", "(", "self", ",", "n_nodes", ",", "C_p", ",", "C", ",", "bn_momentum", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            n_nodes: # of intermediate n_nodes\n            C_p : C_out[k-1]\n            C   : C_in[k] (current)\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_nodes", "=", "n_nodes", "\n", "\n", "self", ".", "preproc", "=", "ops", ".", "StdConv", "(", "C_p", ",", "C", ",", "1", ",", "1", ",", "0", ",", "affine", "=", "False", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "\n", "# generate dag", "\n", "self", ".", "dag", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "n_nodes", ")", ":", "\n", "            ", "self", ".", "dag", ".", "append", "(", "nn", ".", "ModuleList", "(", ")", ")", "\n", "for", "j", "in", "range", "(", "1", "+", "i", ")", ":", "# include 1 input node", "\n", "                ", "op", "=", "ops", ".", "MixedOp", "(", "C", ",", "stride", "=", "1", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "dag", "[", "i", "]", ".", "append", "(", "op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cells.SearchCell.forward": [[35, 45], ["search_cells.SearchCell.preproc", "zip", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "sum", "states.append", "enumerate", "zip"], "methods", ["None"], ["", "", "", "def", "forward", "(", "self", ",", "s", ",", "w_dag", ")", ":", "\n", "        ", "s", "=", "self", ".", "preproc", "(", "s", ")", "\n", "\n", "states", "=", "[", "s", "]", "\n", "for", "edges", ",", "w_list", "in", "zip", "(", "self", ".", "dag", ",", "w_dag", ")", ":", "\n", "            ", "s_cur", "=", "sum", "(", "edges", "[", "i", "]", "(", "s", ",", "w", ")", "for", "i", ",", "(", "s", ",", "w", ")", "in", "enumerate", "(", "zip", "(", "states", ",", "w_list", ")", ")", ")", "\n", "states", ".", "append", "(", "s_cur", ")", "\n", "\n", "", "s_out", "=", "torch", ".", "cat", "(", "states", "[", "1", ":", "]", ",", "dim", "=", "1", ")", "\n", "return", "s_out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNN.__init__": [[20, 58], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "models.search_cells.SearchCell", "search_cnn.SearchCNN.cells.append"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C", ",", "n_classes", ",", "n_layers", ",", "n_nodes", "=", "4", ",", "stem_multiplier", "=", "3", ",", "bn_momentum", "=", "0.1", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            C_in: # of input channels\n            C: # of starting model channels\n            n_classes: # of classes\n            n_layers: # of layers\n            n_nodes: # of intermediate nodes in Cell\n            stem_multiplier\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "C_in", "=", "C_in", "\n", "self", ".", "C", "=", "C", "\n", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "\n", "C_cur", "=", "stem_multiplier", "*", "C", "\n", "self", ".", "stem", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_cur", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_cur", ",", "momentum", "=", "bn_momentum", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_cur", ",", "C_cur", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_cur", ",", "momentum", "=", "bn_momentum", ")", "# modification: twice conv2d", "\n", ")", "\n", "\n", "# we discard the skip connection between cells", "\n", "# [!] C_p is output channel size, but C_cur is input channel size.", "\n", "C_p", ",", "C_cur", "=", "C_cur", ",", "C", "\n", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "i", "in", "range", "(", "n_layers", ")", ":", "\n", "# No reduction", "\n", "            ", "cell", "=", "SearchCell", "(", "n_nodes", ",", "C_p", ",", "C_cur", ",", "bn_momentum", "=", "bn_momentum", ")", "\n", "self", ".", "cells", ".", "append", "(", "cell", ")", "\n", "C_cur_out", "=", "C_cur", "*", "n_nodes", "\n", "C_p", "=", "C_cur_out", "\n", "\n", "", "self", ".", "gap", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "C_p", ",", "n_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNN.forward": [[59, 69], ["search_cnn.SearchCNN.stem", "search_cnn.SearchCNN.gap", "out.view.view.view", "search_cnn.SearchCNN.linear", "cell", "out.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "weights_normal", ")", ":", "\n", "        ", "s", "=", "self", ".", "stem", "(", "x", ")", "\n", "\n", "for", "cell", "in", "self", ".", "cells", ":", "\n", "            ", "s", "=", "cell", "(", "s", ",", "weights_normal", ")", "\n", "\n", "", "out", "=", "self", ".", "gap", "(", "s", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "# flatten", "\n", "logits", "=", "self", ".", "linear", "(", "out", ")", "\n", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.__init__": [[74, 95], ["torch.Module.__init__", "list", "len", "torch.ParameterList", "torch.ParameterList", "torch.ParameterList", "range", "search_cnn.SearchCNNController.generate_and_fill_alphas", "search_cnn.SearchCNNController.named_parameters", "search_cnn.SearchCNN", "range", "search_cnn.SearchCNNController.alpha_normal.append", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.Parameter", "torch.Parameter", "torch.Parameter", "search_cnn.SearchCNNController._alphas.append", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.generate_and_fill_alphas"], ["def", "__init__", "(", "self", ",", "C_in", ",", "C", ",", "n_classes", ",", "n_layers", ",", "criterion", ",", "n_nodes", "=", "4", ",", "stem_multiplier", "=", "3", ",", "bn_momentum", "=", "0.1", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_nodes", "=", "n_nodes", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "device_ids", "=", "list", "(", "range", "(", "torch", ".", "cuda", ".", "device_count", "(", ")", ")", ")", "\n", "\n", "# initialize architect parameters: alphas", "\n", "n_ops", "=", "len", "(", "gt", ".", "PRIMITIVES", ")", "\n", "\n", "self", ".", "alpha_normal", "=", "nn", ".", "ParameterList", "(", ")", "\n", "for", "i", "in", "range", "(", "n_nodes", ")", ":", "\n", "            ", "self", ".", "alpha_normal", ".", "append", "(", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "i", "+", "1", ",", "n_ops", ")", ")", ")", "\n", "", "self", ".", "generate_and_fill_alphas", "(", "\"random\"", ")", "\n", "\n", "# setup alphas list", "\n", "self", ".", "_alphas", "=", "[", "]", "\n", "for", "n", ",", "p", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "if", "'alpha'", "in", "n", ":", "\n", "                ", "self", ".", "_alphas", ".", "append", "(", "(", "n", ",", "p", ")", ")", "\n", "\n", "", "", "self", ".", "net", "=", "SearchCNN", "(", "C_in", ",", "C", ",", "n_classes", ",", "n_layers", ",", "n_nodes", ",", "stem_multiplier", ",", "bn_momentum", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.forward": [[96, 99], ["search_cnn.SearchCNNController.net", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "weights_normal", "=", "[", "F", ".", "softmax", "(", "alpha", ",", "dim", "=", "-", "1", ")", "for", "alpha", "in", "self", ".", "alpha_normal", "]", "\n", "return", "self", ".", "net", "(", "x", ",", "weights_normal", ")", "\n", "# there seems still something wrong with multiple GPU support", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.loss": [[101, 104], ["search_cnn.SearchCNNController.forward", "search_cnn.SearchCNNController.criterion"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.forward"], ["", "def", "loss", "(", "self", ",", "X", ",", "y", ")", ":", "\n", "        ", "logits", "=", "self", ".", "forward", "(", "X", ")", "\n", "return", "self", ".", "criterion", "(", "logits", ",", "y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.print_alphas": [[105, 121], ["logger.info", "logger.info", "logger.info", "zip", "org_formatters.append", "handler.setFormatter", "logger.info", "handler.setFormatter", "logging.Formatter", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "def", "print_alphas", "(", "self", ",", "logger", ")", ":", "\n", "# remove formats", "\n", "        ", "org_formatters", "=", "[", "]", "\n", "for", "handler", "in", "logger", ".", "handlers", ":", "\n", "            ", "org_formatters", ".", "append", "(", "handler", ".", "formatter", ")", "\n", "handler", ".", "setFormatter", "(", "logging", ".", "Formatter", "(", "\"%(message)s\"", ")", ")", "\n", "\n", "", "logger", ".", "info", "(", "\"####### ALPHA #######\"", ")", "\n", "logger", ".", "info", "(", "\"# Alpha - normal\"", ")", "\n", "for", "alpha", "in", "self", ".", "alpha_normal", ":", "\n", "            ", "logger", ".", "info", "(", "F", ".", "softmax", "(", "alpha", ",", "dim", "=", "-", "1", ")", ")", "\n", "", "logger", ".", "info", "(", "\"#####################\"", ")", "\n", "\n", "# restore formats", "\n", "for", "handler", ",", "formatter", "in", "zip", "(", "logger", ".", "handlers", ",", "org_formatters", ")", ":", "\n", "            ", "handler", ".", "setFormatter", "(", "formatter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.genotype": [[122, 127], ["genotypes.parse", "range", "genotypes.Genotype"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.genotypes.parse"], ["", "", "def", "genotype", "(", "self", ")", ":", "\n", "        ", "gene_normal", "=", "gt", ".", "parse", "(", "self", ".", "alpha_normal", ",", "k", "=", "2", ")", "\n", "concat", "=", "range", "(", "1", ",", "1", "+", "self", ".", "n_nodes", ")", "# concat all intermediate nodes", "\n", "\n", "return", "gt", ".", "Genotype", "(", "normal", "=", "gene_normal", ",", "normal_concat", "=", "concat", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.weights": [[128, 130], ["search_cnn.SearchCNNController.net.parameters"], "methods", ["None"], ["", "def", "weights", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "net", ".", "parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.named_weights": [[131, 133], ["search_cnn.SearchCNNController.net.named_parameters"], "methods", ["None"], ["", "def", "named_weights", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "net", ".", "named_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.alphas": [[134, 137], ["None"], "methods", ["None"], ["", "def", "alphas", "(", "self", ")", ":", "\n", "        ", "for", "n", ",", "p", "in", "self", ".", "_alphas", ":", "\n", "            ", "yield", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.named_alphas": [[138, 141], ["None"], "methods", ["None"], ["", "", "def", "named_alphas", "(", "self", ")", ":", "\n", "        ", "for", "n", ",", "p", "in", "self", ".", "_alphas", ":", "\n", "            ", "yield", "n", ",", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.generate_and_fill_alphas": [[142, 163], ["range", "range", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "torch.randn_like", "len", "search_cnn.SearchCNNController.alpha_normal[].data.fill_", "range", "float"], "methods", ["None"], ["", "", "def", "generate_and_fill_alphas", "(", "self", ",", "rule", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        :param rule:\n        If rule is random, generate as originally did\n        If rule is fixed, generate the alphas according to `select`, with length (n_ops) * (n_ops + 1) / 2\n        :param kwargs:\n        \"\"\"", "\n", "if", "rule", "==", "\"random\"", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "n_nodes", ")", ":", "\n", "                ", "self", ".", "alpha_normal", "[", "i", "]", ".", "data", "=", "torch", ".", "randn_like", "(", "self", ".", "alpha_normal", "[", "i", "]", ".", "data", ")", "*", "1E-3", "\n", "", "", "elif", "rule", "==", "\"fixed\"", ":", "\n", "            ", "assert", "len", "(", "kwargs", "[", "\"select\"", "]", ")", "==", "(", "self", ".", "n_nodes", "+", "1", ")", "*", "self", ".", "n_nodes", "//", "2", "\n", "select", "=", "kwargs", "[", "\"select\"", "]", "\n", "k", "=", "0", "\n", "for", "i", "in", "range", "(", "self", ".", "n_nodes", ")", ":", "\n", "                ", "self", ".", "alpha_normal", "[", "i", "]", ".", "data", ".", "fill_", "(", "float", "(", "'-inf'", ")", ")", "\n", "for", "j", "in", "range", "(", "i", "+", "1", ")", ":", "\n", "                    ", "self", ".", "alpha_normal", "[", "i", "]", ".", "data", "[", "j", "]", "[", "select", "[", "k", "]", "]", "=", "0.", "\n", "k", "+=", "1", "\n", "", "", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.generate_unshared_mask": [[164, 208], ["list", "range", "search_cnn.SearchCNNController.state_dict().keys", "filter", "shared_layer_prefix.append", "any", "t.startswith", "any", "unshared_layers.append", "any", "unshared_layers.append", "unshared_layers.append", "search_cnn.SearchCNNController.state_dict", "key.startswith"], "methods", ["None"], ["", "", "def", "generate_unshared_mask", "(", "self", ",", "shared_rule", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        :param shared_rule: Rule is, semantically, to share which part\n        If rule is none, share none\n        If rule is all, share all\n        If rule is prefix, share prefix, accepting kwargs: k (how many layers)\n        If rule is not_dag, share all but the edges introduced by dags\n        :param kwargs:\n        :return: a list of keys to trace in state_dict()\n        \"\"\"", "\n", "if", "shared_rule", "==", "\"all\"", ":", "\n", "            ", "return", "[", "]", "\n", "# alpha is always ignored: always shared", "\n", "# alpha is always reloaded by trainer when training", "\n", "", "all_keys", "=", "[", "t", "for", "t", "in", "self", ".", "state_dict", "(", ")", ".", "keys", "(", ")", "if", "not", "t", ".", "startswith", "(", "\"alpha\"", ")", "]", "\n", "if", "shared_rule", "in", "[", "\"none\"", ",", "\"group\"", "]", ":", "\n", "            ", "return", "all_keys", "\n", "", "if", "shared_rule", "==", "\"not_dag\"", ":", "\n", "            ", "return", "list", "(", "filter", "(", "lambda", "t", ":", "\"dag\"", "in", "t", ",", "all_keys", ")", ")", "\n", "", "if", "shared_rule", "==", "\"prefix\"", ":", "\n", "            ", "k", "=", "kwargs", "[", "\"k\"", "]", "\n", "shared_layer_prefix", "=", "[", "\"net.stem\"", "]", "\n", "for", "i", "in", "range", "(", "k", ")", ":", "\n", "                ", "shared_layer_prefix", ".", "append", "(", "\"net.cells.%d\"", "%", "i", ")", "\n", "", "unshared_layers", "=", "[", "]", "\n", "for", "key", "in", "all_keys", ":", "\n", "                ", "if", "not", "any", "(", "key", ".", "startswith", "(", "prefix", ")", "for", "prefix", "in", "shared_layer_prefix", ")", ":", "\n", "                    ", "unshared_layers", ".", "append", "(", "key", ")", "\n", "", "", "return", "unshared_layers", "\n", "", "if", "shared_rule", "==", "\"keyword\"", ":", "\n", "            ", "unshared_layers", "=", "[", "]", "\n", "keywords", "=", "kwargs", "[", "\"kw\"", "]", "\n", "for", "key", "in", "all_keys", ":", "\n", "                ", "if", "not", "any", "(", "kw", "in", "key", "for", "kw", "in", "keywords", ")", ":", "\n", "                    ", "unshared_layers", ".", "append", "(", "key", ")", "\n", "", "", "return", "unshared_layers", "\n", "", "if", "shared_rule", "==", "\"keyword_unshare\"", ":", "\n", "            ", "unshared_layers", "=", "[", "]", "\n", "keywords", "=", "kwargs", "[", "\"kw\"", "]", "\n", "for", "key", "in", "all_keys", ":", "\n", "                ", "if", "any", "(", "kw", "in", "key", "for", "kw", "in", "keywords", ")", ":", "\n", "                    ", "unshared_layers", ".", "append", "(", "key", ")", "\n", "", "", "return", "unshared_layers", "\n", "", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.dump_unshared_checkpoint": [[209, 218], ["dict", "set", "search_cnn.SearchCNNController.state_dict().items", "search_cnn.SearchCNNController.state_dict", "v.clone().detach", "v.clone"], "methods", ["None"], ["", "def", "dump_unshared_checkpoint", "(", "self", ",", "unshared_mask", ")", ":", "\n", "# return state_dict and do a deepcopy", "\n", "        ", "ret", "=", "dict", "(", ")", "\n", "unshared_mask", "=", "set", "(", "unshared_mask", ")", "\n", "if", "unshared_mask", ":", "\n", "            ", "for", "k", ",", "v", "in", "self", ".", "state_dict", "(", ")", ".", "items", "(", ")", ":", "\n", "                ", "if", "k", "in", "unshared_mask", ":", "\n", "                    ", "ret", "[", "k", "]", "=", "v", ".", "clone", "(", ")", ".", "detach", "(", ")", "\n", "", "", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.models.search_cnn.SearchCNNController.load_unshared_checkpoint": [[219, 229], ["dict", "search_cnn.SearchCNNController.load_state_dict", "len"], "methods", ["None"], ["", "def", "load_unshared_checkpoint", "(", "self", ",", "unshared_mask", ",", "checkpoint", ",", "strict", "=", "True", ")", ":", "\n", "        ", "to_load", "=", "dict", "(", ")", "\n", "check_length", "=", "0", "\n", "if", "unshared_mask", ":", "\n", "            ", "for", "k", "in", "unshared_mask", ":", "\n", "                ", "to_load", "[", "k", "]", "=", "checkpoint", "[", "k", "]", "\n", "check_length", "+=", "1", "\n", "", "if", "strict", ":", "\n", "                ", "assert", "check_length", "==", "len", "(", "checkpoint", ")", "\n", "", "self", ".", "load_state_dict", "(", "to_load", ",", "strict", "=", "False", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.similarity_calc.get_all_architecture_indices_combination": [[4, 16], ["similarity_calc.get_all_architecture_indices_combination.dfs"], "function", ["None"], ["def", "get_all_architecture_indices_combination", "(", "n_prims", ",", "n_edges", ")", ":", "\n", "    ", "def", "dfs", "(", "now", ")", ":", "\n", "        ", "nonlocal", "ret", "\n", "if", "len", "(", "now", ")", "==", "n_edges", ":", "\n", "            ", "ret", ".", "append", "(", "tuple", "(", "now", ")", ")", "\n", "", "else", ":", "\n", "            ", "for", "i", "in", "range", "(", "n_prims", ")", ":", "\n", "                ", "dfs", "(", "now", "+", "[", "i", "]", ")", "\n", "\n", "", "", "", "ret", "=", "[", "]", "\n", "dfs", "(", "[", "]", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.similarity_calc.find_sim": [[18, 24], ["enumerate", "enumerate", "sum", "len", "ret.append", "numpy.sum", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "find_sim", "(", "arr", ")", ":", "\n", "    ", "ret", "=", "[", "]", "\n", "for", "i", ",", "a", "in", "enumerate", "(", "arr", ")", ":", "\n", "        ", "for", "j", ",", "b", "in", "enumerate", "(", "arr", ")", ":", "\n", "            ", "ret", ".", "append", "(", "np", ".", "sum", "(", "np", ".", "array", "(", "a", ")", "==", "np", ".", "array", "(", "b", ")", ")", "/", "3", ")", "\n", "", "", "return", "sum", "(", "ret", ")", "/", "len", "(", "ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.rankdata_greater": [[15, 17], ["scipy.stats.rankdata"], "function", ["None"], ["def", "rankdata_greater", "(", "row", ")", ":", "\n", "    ", "return", "stats", ".", "rankdata", "(", "-", "row", ",", "method", "=", "\"ordinal\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_consecutive_rank_tau": [[19, 24], ["numpy.zeros", "range", "len", "scipy.stats.kendalltau", "len"], "function", ["None"], ["", "def", "get_consecutive_rank_tau", "(", "df", ")", ":", "\n", "    ", "ret", "=", "np", ".", "zeros", "(", "(", "len", "(", "df", ")", "-", "1", ",", ")", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "df", ")", ")", ":", "\n", "        ", "ret", "[", "i", "-", "1", "]", ",", "_", "=", "stats", ".", "kendalltau", "(", "df", ".", "iloc", "[", "i", "-", "1", "]", ",", "df", ".", "iloc", "[", "i", "]", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_curves_by_groups": [[26, 28], ["analyze_from_logs.get_tau_along_epochs", "numpy.where"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_along_epochs"], ["", "def", "get_tau_curves_by_groups", "(", "df", ",", "gt", ",", "group_table", ",", "groups", ")", ":", "\n", "    ", "return", "{", "cur", ":", "get_tau_along_epochs", "(", "df", ",", "gt", ",", "np", ".", "where", "(", "group_table", "==", "cur", ")", "[", "0", "]", ")", "for", "cur", "in", "groups", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_along_epochs": [[30, 32], ["numpy.array", "scipy.stats.kendalltau", "df.iterrows"], "function", ["None"], ["", "def", "get_tau_along_epochs", "(", "df", ",", "gt", ",", "group", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "[", "stats", ".", "kendalltau", "(", "row", "[", "group", "]", ".", "values", ",", "gt", "[", "group", "]", ")", "[", "0", "]", "for", "_", ",", "row", "in", "df", ".", "iterrows", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_along_epochs_combining_best_groups": [[34, 44], ["analyze_from_logs.get_tau_curves_by_groups", "numpy.zeros", "numpy.array", "enumerate", "len", "numpy.argsort", "numpy.where", "scipy.stats.kendalltau"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_curves_by_groups"], ["", "def", "get_tau_along_epochs_combining_best_groups", "(", "df", ",", "gt", ",", "group_table", ",", "groups", ",", "universe", ")", ":", "\n", "    ", "tau_curves_by_groups", "=", "get_tau_curves_by_groups", "(", "df", ",", "gt", ",", "group_table", ",", "groups", ")", "\n", "ref_gt_acc", "=", "np", ".", "zeros", "(", "(", "len", "(", "df", ")", ",", "EXPECTED_SUBGRAPH_NUMBER", ")", ")", "\n", "for", "cur", "in", "groups", ":", "\n", "# for each group, enumerate the epochs from the most obedient to most rebellious", "\n", "        ", "for", "i", ",", "loc", "in", "enumerate", "(", "np", ".", "argsort", "(", "-", "tau_curves_by_groups", "[", "cur", "]", ")", ")", ":", "\n", "            ", "group_mask", "=", "np", ".", "where", "(", "group_table", "==", "cur", ")", "[", "0", "]", "\n", "ref_gt_acc", "[", "i", "]", "[", "group_mask", "]", "=", "df", "[", "group_mask", "]", ".", "iloc", "[", "loc", "]", "\n", "", "", "ref_gt_acc_tau", "=", "np", ".", "array", "(", "[", "stats", ".", "kendalltau", "(", "acc", "[", "universe", "]", ",", "gt", "[", "universe", "]", ")", "[", "0", "]", "for", "acc", "in", "ref_gt_acc", "]", ")", "\n", "return", "ref_gt_acc", ",", "ref_gt_acc_tau", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_top_k_acc_rank": [[46, 52], ["analyze_from_logs.rankdata_greater", "numpy.stack", "numpy.maximum.accumulate", "numpy.minimum.accumulate", "numpy.argsort"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.rankdata_greater"], ["", "def", "get_top_k_acc_rank", "(", "acc_table", ",", "acc_gt", ")", ":", "\n", "    ", "gt_rank", "=", "rankdata_greater", "(", "acc_gt", ")", "\n", "idx", "=", "np", ".", "stack", "(", "[", "np", ".", "argsort", "(", "-", "row", ")", "for", "row", "in", "acc_table", "]", ")", "\n", "top_acc", "=", "np", ".", "maximum", ".", "accumulate", "(", "acc_gt", "[", "idx", "]", ",", "1", ")", "\n", "top_rank", "=", "np", ".", "minimum", ".", "accumulate", "(", "gt_rank", "[", "idx", "]", ",", "1", ")", "\n", "return", "top_acc", ",", "top_rank", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min": [[54, 59], ["numpy.savetxt", "logger.info", "os.path.join", "numpy.array", "numpy.mean", "numpy.std", "numpy.max", "numpy.min", "numpy.mean", "numpy.std", "numpy.max", "numpy.min"], "function", ["None"], ["", "def", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "name", ",", "arr", ")", ":", "\n", "    ", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"METRICS-{}.txt\"", ".", "format", "(", "name", ")", ")", ",", "\n", "np", ".", "array", "(", "[", "np", ".", "mean", "(", "arr", ")", ",", "np", ".", "std", "(", "arr", ")", ",", "np", ".", "max", "(", "arr", ")", ",", "np", ".", "min", "(", "arr", ")", "]", ")", ")", "\n", "logger", ".", "info", "(", "\"{}: mean={:.4f}, std={:.4f}, max={:.4f}, min={:.4f}\"", ".", "format", "(", "name", ",", "np", ".", "mean", "(", "arr", ")", ",", "np", ".", "std", "(", "arr", ")", ",", "\n", "np", ".", "max", "(", "arr", ")", ",", "np", ".", "min", "(", "arr", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index": [[61, 63], ["numpy.stack"], "function", ["None"], ["", "def", "stack_with_index", "(", "index", ",", "row", ")", ":", "\n", "    ", "return", "np", ".", "stack", "(", "[", "index", ",", "row", "]", ")", ".", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.plot_top_k_variance_chart": [[65, 78], ["numpy.argsort", "visualize.lineplot", "visualize.lineplot", "curves.append", "curves.append", "curves.append", "curves.append", "analyze_from_logs.stack_with_index", "analyze_from_logs.stack_with_index", "analyze_from_logs.stack_with_index", "analyze_from_logs.stack_with_index", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index"], ["", "def", "plot_top_k_variance_chart", "(", "filepath", ",", "index", ",", "top_acc", ",", "top_rank", ",", "gt_acc", ",", "topk", ")", ":", "\n", "    ", "gt_acc_index", "=", "np", ".", "argsort", "(", "-", "gt_acc", ")", "\n", "curves", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "curves", ".", "append", "(", "stack_with_index", "(", "index", ",", "np", ".", "array", "(", "[", "gt_acc", "[", "gt_acc_index", "[", "k", "-", "1", "]", "]", "]", "*", "top_acc", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "curves", ".", "append", "(", "stack_with_index", "(", "index", ",", "top_acc", "[", ":", ",", "k", "-", "1", "]", ")", ")", "\n", "", "lineplot", "(", "curves", ",", "filepath", "=", "filepath", "+", "\"_acc\"", ")", "\n", "\n", "curves", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "curves", ".", "append", "(", "stack_with_index", "(", "index", ",", "np", ".", "array", "(", "[", "k", "]", "*", "top_acc", ".", "shape", "[", "0", "]", ")", ")", ")", "\n", "curves", ".", "append", "(", "stack_with_index", "(", "index", ",", "top_rank", "[", ":", ",", "k", "-", "1", "]", ")", ")", "\n", "", "lineplot", "(", "curves", ",", "filepath", "=", "filepath", "+", "\"_rank\"", ",", "inverse_y", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.pipeline_for_single_instance": [[80, 281], ["logger.info", "main.validation_acc_dataframe", "main.grouping_subgraph_training_dataframe", "os.makedirs", "main.validation_acc_dataframe.to_csv", "numpy.savetxt", "visualize.heatmap", "numpy.savetxt", "analyze_from_logs.get_consecutive_rank_tau", "visualize.lineplot", "analyze_from_logs.rankdata_greater", "visualize.lineplot", "main.validation_acc_dataframe.apply", "visualize.lineplot", "visualize.boxplot", "numpy.argsort", "numpy.savetxt", "visualize.boxplot", "visualize.boxplot", "analyze_from_logs.get_tau_along_epochs", "analyze_from_logs.report_mean_std_max_min", "visualize.lineplot", "main.grouping_info.copy", "analyze_from_logs.get_tau_along_epochs_combining_best_groups", "pandas.DataFrame().to_csv", "visualize.lineplot", "visualize.scatterplot", "visualize.scatterplot", "analyze_from_logs.get_top_k_acc_rank", "analyze_from_logs.plot_top_k_variance_chart", "os.path.join", "os.path.join", "main.validation_acc_dataframe.corr", "os.path.join", "numpy.array", "len", "len", "enumerate", "logger.info", "numpy.array", "visualize.lineplot", "sorted", "os.path.join", "list", "analyze_from_logs.get_tau_curves_by_groups", "analyze_from_logs.report_mean_std_max_min", "analyze_from_logs.report_mean_std_max_min", "pandas.DataFrame().to_csv", "visualize.lineplot", "min", "numpy.zeros", "range", "visualize.heatmap", "numpy.savetxt", "analyze_from_logs.report_mean_std_max_min", "os.path.join", "os.path.join", "analyze_from_logs.report_mean_std_max_min", "os.path.join", "numpy.array", "os.path.join", "list", "range", "main.grouping_subgraph_training_dataframe.iterrows", "filter", "os.path.join", "list", "os.path.join", "len", "len", "os.path.join", "os.path.join", "os.path.join", "analyze_from_logs.stack_with_index", "os.path.join", "len", "os.listdir", "numpy.mean", "numpy.std", "numpy.array", "numpy.array", "analyze_from_logs.stack_with_index", "os.path.join", "visualize.MultiPageContext", "range", "len", "range", "os.path.join", "pandas.DataFrame", "analyze_from_logs.stack_with_index", "os.path.join", "analyze_from_logs.stack_with_index", "os.path.join", "analyze_from_logs.stack_with_index", "os.path.join", "analyze_from_logs.report_mean_std_max_min", "list", "zip", "subgraph_markers[].append", "len", "zip", "os.path.join", "len", "analyze_from_logs.get_tau_along_epochs", "logger.info", "visualize.lineplot", "visualize.lineplot", "partition_file.startswith", "pandas.DataFrame", "os.path.join", "os.path.join", "list", "visualize.lineplot", "os.path.join", "numpy.triu_indices_from", "numpy.arange", "zip", "numpy.argsort", "numpy.array", "os.path.splitext", "enumerate", "numpy.where", "map", "scipy.stats.kendalltau", "len", "data.validation_acc_dataframe", "len", "os.path.join", "numpy.concatenate", "os.path.join", "numpy.loadtxt", "zip", "min", "max", "list", "analyze_from_logs.stack_with_index", "os.path.join", "numpy.array", "analyze_from_logs.stack_with_index", "zip", "len", "len", "numpy.array", "analyze_from_logs.stack_with_index", "list", "len", "len", "len", "map", "zip", "len"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.validation_acc_dataframe", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.grouping_subgraph_training_dataframe", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.heatmap", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_consecutive_rank_tau", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.rankdata_greater", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.boxplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.boxplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.boxplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_along_epochs", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_along_epochs_combining_best_groups", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.scatterplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.scatterplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_top_k_acc_rank", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.plot_top_k_variance_chart", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_curves_by_groups", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.heatmap", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_along_epochs", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.map", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.validation_acc_dataframe", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.map"], ["", "def", "pipeline_for_single_instance", "(", "logger", ",", "analysis_dir", ",", "main", ":", "Record", ",", "finetune", ":", "List", "[", "Record", "]", ",", "by", ":", "str", ",", "gt", ":", "np", ".", "ndarray", ")", ":", "\n", "    ", "logger", ".", "info", "(", "\"Analysing results for {}\"", ".", "format", "(", "analysis_dir", ")", ")", "\n", "main_df", "=", "main", ".", "validation_acc_dataframe", "(", "by", ")", "\n", "main_archit", "=", "main", ".", "grouping_subgraph_training_dataframe", "(", "by", ")", "\n", "main_grouping", "=", "main", ".", "grouping_numpy", "\n", "\n", "os", ".", "makedirs", "(", "analysis_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "# Save raw data", "\n", "main_df", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"val_acc_all_epochs.csv\"", ")", ",", "index", "=", "True", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"group_info.txt\"", ")", ",", "main_grouping", ",", "\"%d\"", ")", "\n", "\n", "# correlation between subgraphs", "\n", "corr_matrix", "=", "main_df", ".", "corr", "(", ")", ".", "values", "\n", "heatmap", "(", "corr_matrix", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"corr_heatmap\"", ")", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"corr_heatmap.txt\"", ")", ",", "corr_matrix", ")", "\n", "\n", "# Consecutive tau (single)", "\n", "consecutive_taus", "=", "get_consecutive_rank_tau", "(", "main_df", ")", "\n", "lineplot", "(", "[", "np", ".", "array", "(", "list", "(", "zip", "(", "main_df", ".", "index", "[", "1", ":", "]", ",", "consecutive_taus", ")", ")", ")", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"consecutive_tau_single\"", ")", ")", "\n", "\n", "# GT rank (for color reference)", "\n", "gt_rank", "=", "rankdata_greater", "(", "gt", ")", "\n", "gt_rank_color", "=", "1", "-", "gt_rank", "/", "EXPECTED_SUBGRAPH_NUMBER", "\n", "# in some cases, it could be a subset of 64 subgraphs; process this later", "\n", "\n", "# Acc variance (lineplot)", "\n", "acc_curves", "=", "[", "np", ".", "array", "(", "list", "(", "zip", "(", "main_df", ".", "index", ",", "main_df", "[", "i", "]", ")", ")", ")", "for", "i", "in", "main_df", ".", "columns", "]", "\n", "subgraph_markers", "=", "[", "[", "]", "for", "_", "in", "range", "(", "EXPECTED_SUBGRAPH_NUMBER", ")", "]", "\n", "if", "len", "(", "main", ".", "groups", ")", "!=", "len", "(", "main", ".", "columns", ")", ":", "# hide it for ground truth", "\n", "        ", "for", "i", ",", "(", "_", ",", "row", ")", "in", "enumerate", "(", "main_archit", ".", "iterrows", "(", ")", ")", ":", "\n", "            ", "for", "k", "in", "filter", "(", "lambda", "k", ":", "k", ">=", "0", ",", "row", ".", "values", ")", ":", "\n", "                ", "subgraph_markers", "[", "k", "]", ".", "append", "(", "i", ")", "\n", "", "", "", "else", ":", "\n", "        ", "logger", ".", "info", "(", "\"Markers hidden because groups == columns\"", ")", "\n", "\n", "", "lineplot", "(", "acc_curves", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"acc_curve_along_epochs\"", ")", ",", "\n", "color", "=", "[", "gt_rank_color", "[", "i", "]", "for", "i", "in", "main_df", ".", "columns", "]", ",", "alpha", "=", "0.7", ",", "\n", "markers", "=", "[", "subgraph_markers", "[", "i", "]", "for", "i", "in", "main_df", ".", "columns", "]", ",", "\n", "fmt", "=", "[", "\"-D\"", "]", "*", "len", "(", "acc_curves", ")", ")", "\n", "\n", "# Rank version of df", "\n", "df_rank", "=", "main_df", ".", "apply", "(", "rankdata_greater", ",", "axis", "=", "1", ",", "result_type", "=", "\"expand\"", ")", "\n", "df_rank", ".", "columns", "=", "main_df", ".", "columns", "\n", "\n", "# Rank variance (lineplot)", "\n", "rank_curves", "=", "[", "np", ".", "array", "(", "list", "(", "zip", "(", "df_rank", ".", "index", ",", "df_rank", "[", "i", "]", ")", ")", ")", "for", "i", "in", "df_rank", ".", "columns", "]", "\n", "lineplot", "(", "rank_curves", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"rank_curve_along_epochs\"", ")", ",", "\n", "color", "=", "[", "gt_rank_color", "[", "i", "]", "for", "i", "in", "df_rank", ".", "columns", "]", ",", "alpha", "=", "0.7", ",", "inverse_y", "=", "True", ",", "markers", "=", "subgraph_markers", ")", "\n", "\n", "# Rank variance for top-5 subgraphs found at half and end", "\n", "# recalculate for original order", "\n", "for", "loc", "in", "[", "len", "(", "main_df", ")", "//", "2", ",", "len", "(", "main_df", ")", "-", "1", "]", ":", "\n", "        ", "selected_rank_curves", "=", "[", "rank_curves", "[", "i", "]", "for", "i", "in", "np", ".", "argsort", "(", "-", "main_df", ".", "iloc", "[", "loc", "]", ")", "[", ":", "5", "]", "]", "\n", "lineplot", "(", "selected_rank_curves", ",", "inverse_y", "=", "True", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"rank_curves_along_epochs_for_ep{}\"", ".", "format", "(", "main_df", ".", "index", "[", "loc", "]", ")", ")", ")", "\n", "\n", "# Rank variance (boxplot), sorted by the final rank", "\n", "", "boxplot", "(", "sorted", "(", "df_rank", ".", "values", ".", "T", ",", "key", "=", "lambda", "d", ":", "d", "[", "-", "1", "]", ")", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"rank_boxplot_along_epochs_sorted_final_rank\"", ")", ",", "\n", "inverse_y", "=", "True", ")", "\n", "\n", "gt_order", "=", "np", ".", "argsort", "(", "-", "gt", ")", "\n", "\n", "# Group info", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"group_info_sorted_gt.txt\"", ")", ",", "main_grouping", "[", "gt_order", "]", ",", "\"%d\"", ")", "\n", "\n", "# Rank variance (boxplot), sorted by ground truth", "\n", "boxplot", "(", "[", "df_rank", "[", "i", "]", "for", "i", "in", "gt_order", "if", "i", "in", "df_rank", ".", "columns", "]", ",", "inverse_y", "=", "True", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"rank_boxplot_along_epochs_sorted_gt_rank\"", ")", ")", "\n", "boxplot", "(", "[", "df_rank", "[", "i", "]", "[", "-", "10", ":", "]", "for", "i", "in", "gt_order", "if", "i", "in", "df_rank", ".", "columns", "]", ",", "inverse_y", "=", "True", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"rank_boxplot_along_epochs_sorted_gt_rank_last_10\"", ")", ")", "\n", "\n", "# Tau every epoch", "\n", "gt_tau_data", "=", "get_tau_along_epochs", "(", "main_df", ",", "gt", ",", "main", ".", "columns", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau-In-Window\"", ",", "gt_tau_data", ")", "\n", "lineplot", "(", "[", "stack_with_index", "(", "main_df", ".", "index", ",", "gt_tau_data", ")", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_curve_along_epochs\"", ")", ")", "\n", "\n", "if", "finetune", ":", "\n", "# Finetune curves", "\n", "        ", "for", "data", "in", "finetune", ":", "\n", "            ", "try", ":", "\n", "                ", "finetune_step", "=", "data", ".", "finetune_step", "\n", "if", "by", "==", "\"epochs\"", ":", "\n", "                    ", "finetune_step", "//=", "196", "\n", "", "half_length", "=", "len", "(", "main_df", ".", "loc", "[", "main_df", ".", "index", "<=", "finetune_step", "]", ")", "\n", "finetune_df", "=", "data", ".", "validation_acc_dataframe", "(", "by", ",", "cutoff", "=", "finetune_step", ")", ".", "iloc", "[", ":", "half_length", "]", "\n", "if", "finetune_step", "<", "min", "(", "main_df", ".", "index", ")", "-", "1", "or", "finetune_step", ">", "max", "(", "main_df", ".", "index", ")", "+", "1", ":", "\n", "                    ", "continue", "\n", "", "finetune_df", ".", "index", "+=", "finetune_step", "\n", "finetune_curves", "=", "[", "np", ".", "array", "(", "[", "[", "finetune_step", ",", "main_df", ".", "loc", "[", "finetune_step", ",", "i", "]", "]", "]", "+", "\n", "list", "(", "zip", "(", "finetune_df", ".", "index", ",", "finetune_df", "[", "i", "]", ")", ")", ")", "\n", "for", "i", "in", "main_df", ".", "columns", "]", "\n", "finetune_tau_curve", "=", "get_tau_along_epochs", "(", "finetune_df", ",", "gt", ",", "data", ".", "columns", ")", "\n", "finetune_colors", "=", "[", "gt_rank_color", "[", "i", "]", "for", "i", "in", "finetune_df", ".", "columns", "]", "\n", "logger", ".", "info", "(", "\"Finetune step {}, found {} finetune curves\"", ".", "format", "(", "finetune_step", ",", "len", "(", "finetune_curves", ")", ")", ")", "\n", "lineplot", "(", "[", "c", "[", ":", "half_length", "]", "for", "c", "in", "acc_curves", "]", "+", "finetune_curves", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\n", "\"acc_curve_along_epochs_finetune_{}\"", ".", "format", "(", "finetune_step", ")", ")", ",", "\n", "color", "=", "[", "gt_rank_color", "[", "i", "]", "for", "i", "in", "main_df", ".", "columns", "]", "+", "finetune_colors", ",", "alpha", "=", "0.7", ",", "\n", "fmt", "=", "[", "\"-\"", "]", "*", "len", "(", "acc_curves", ")", "+", "[", "\":\"", "]", "*", "len", "(", "finetune_curves", ")", ")", "\n", "lineplot", "(", "[", "stack_with_index", "(", "main_df", ".", "index", ",", "gt_tau_data", ")", "[", ":", "half_length", "]", ",", "\n", "np", ".", "concatenate", "(", "(", "np", ".", "array", "(", "[", "[", "finetune_step", ",", "gt_tau_data", "[", "half_length", "-", "1", "]", "]", "]", ")", ",", "\n", "stack_with_index", "(", "finetune_df", ".", "index", ",", "finetune_tau_curve", ")", ")", ")", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\n", "\"tau_curve_along_epochs_finetune_{}\"", ".", "format", "(", "finetune_step", ")", ")", ",", "\n", "color", "=", "[", "\"tab:blue\"", ",", "\"tab:blue\"", "]", ",", "alpha", "=", "1", ",", "fmt", "=", "[", "\"-\"", ",", "\":\"", "]", ")", "\n", "", "except", "ValueError", ":", "\n", "                ", "pass", "\n", "\n", "# Tau every epoch group by groups", "\n", "", "", "", "grouping_info_backup", "=", "main", ".", "grouping_info", ".", "copy", "(", ")", "\n", "divide_group", "=", "main", ".", "group_number", "==", "1", "and", "len", "(", "main", ".", "columns", ")", "==", "64", "\n", "for", "partition_file", "in", "[", "None", "]", "+", "list", "(", "os", ".", "listdir", "(", "\"assets\"", ")", ")", ":", "\n", "        ", "suffix", "=", "\"\"", "\n", "if", "partition_file", "is", "not", "None", ":", "\n", "            ", "if", "not", "partition_file", ".", "startswith", "(", "\"partition\"", ")", ":", "\n", "                ", "continue", "\n", "", "if", "not", "divide_group", ":", "\n", "                ", "continue", "\n", "", "suffix", "=", "\"_\"", "+", "os", ".", "path", ".", "splitext", "(", "partition_file", ")", "[", "0", "]", "\n", "# regrouping", "\n", "main", ".", "grouping_info", "=", "{", "idx", ":", "g", "for", "idx", ",", "g", "in", "enumerate", "(", "np", ".", "loadtxt", "(", "os", ".", "path", ".", "join", "(", "\"assets\"", ",", "partition_file", ")", ",", "\n", "dtype", "=", "np", ".", "int", ")", ")", "}", "\n", "\n", "", "tau_curves_by_groups", "=", "get_tau_curves_by_groups", "(", "main_df", ",", "gt", ",", "main", ".", "grouping_numpy", ",", "main", ".", "groups", ")", "\n", "tau_curves_by_groups_mean", "=", "[", "np", ".", "mean", "(", "tau_curves_by_groups", "[", "cur", "]", ")", "for", "cur", "in", "main", ".", "groups", "]", "\n", "tau_curves_by_groups_std", "=", "[", "np", ".", "std", "(", "tau_curves_by_groups", "[", "cur", "]", ")", "for", "cur", "in", "main", ".", "groups", "]", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau-By-Groups-Mean{}\"", ".", "format", "(", "suffix", ")", ",", "\n", "np", ".", "array", "(", "tau_curves_by_groups_mean", ")", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau-By-Groups-Std{}\"", ".", "format", "(", "suffix", ")", ",", "\n", "np", ".", "array", "(", "tau_curves_by_groups_std", ")", ")", "\n", "tau_curves_by_groups_for_plt", "=", "[", "stack_with_index", "(", "main_df", ".", "index", ",", "tau_curves_by_groups", "[", "cur", "]", ")", "\n", "for", "cur", "in", "main", ".", "groups", "]", "\n", "\n", "pd", ".", "DataFrame", "(", "tau_curves_by_groups", ",", "columns", "=", "main", ".", "groups", ",", "index", "=", "main_df", ".", "index", ")", ".", "to_csv", "(", "\n", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_curves_by_groups{}.csv\"", ".", "format", "(", "suffix", ")", ")", "\n", ")", "\n", "lineplot", "(", "tau_curves_by_groups_for_plt", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_curves_by_groups{}\"", ".", "format", "(", "suffix", ")", ")", ")", "\n", "\n", "# Acc curves (by group)", "\n", "with", "MultiPageContext", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"acc_curve_along_epochs_group_each{}\"", ".", "format", "(", "suffix", ")", ")", ")", "as", "pdf", ":", "\n", "            ", "for", "g", "in", "range", "(", "main", ".", "group_number", ")", ":", "\n", "                ", "subgraphs", "=", "np", ".", "where", "(", "main", ".", "grouping_numpy", "==", "g", ")", "[", "0", "]", "\n", "gt_rank_group", "=", "[", "gt_rank_color", "[", "i", "]", "for", "i", "in", "subgraphs", "]", "\n", "subgraph_names", "=", "list", "(", "map", "(", "convert_subgraph_index_to_label", ",", "subgraphs", ")", ")", "\n", "subgraph_names_ranks", "=", "[", "\"{} (Rank {})\"", ".", "format", "(", "name", ",", "gt_rank", "[", "i", "]", ")", "\n", "for", "name", ",", "i", "in", "zip", "(", "subgraph_names", ",", "subgraphs", ")", "]", "\n", "# cannot leverage acc_curves, because it's a list, this can be a subset, which cannot be used as index", "\n", "lineplot", "(", "[", "np", ".", "array", "(", "list", "(", "zip", "(", "main_df", ".", "index", ",", "main_df", "[", "i", "]", ")", ")", ")", "for", "i", "in", "subgraphs", "]", "+", "\n", "[", "stack_with_index", "(", "main_df", ".", "index", ",", "[", "gt", "[", "i", "]", "]", "*", "len", "(", "main_df", ".", "index", ")", ")", "for", "i", "in", "subgraphs", "]", ",", "\n", "context", "=", "pdf", ",", "color", "=", "gt_rank_group", "*", "2", ",", "alpha", "=", "0.8", ",", "labels", "=", "subgraph_names_ranks", ",", "\n", "fmt", "=", "[", "\"-D\"", "]", "*", "len", "(", "subgraphs", ")", "+", "[", "\"--\"", "]", "*", "len", "(", "subgraphs", ")", ",", "\n", "markers", "=", "[", "subgraph_markers", "[", "i", "]", "for", "i", "in", "subgraphs", "]", "+", "[", "[", "]", "]", "*", "len", "(", "subgraphs", ")", ",", "\n", "title", "=", "\"Group {}, Subgraph {} -- {}\"", ".", "format", "(", "g", ",", "\"/\"", ".", "join", "(", "map", "(", "str", ",", "subgraphs", ")", ")", ",", "\n", "\"/\"", ".", "join", "(", "subgraph_names", ")", ")", ")", "\n", "\n", "", "", "", "main", ".", "grouping_info", "=", "grouping_info_backup", "\n", "\n", "# Tau among steps", "\n", "for", "k", "in", "(", "10", ",", "64", ")", ":", "\n", "        ", "max_tau_calc", "=", "min", "(", "k", ",", "len", "(", "main_df", ")", ")", "\n", "tau_correlation", "=", "np", ".", "zeros", "(", "(", "max_tau_calc", ",", "max_tau_calc", ")", ")", "\n", "for", "i", "in", "range", "(", "max_tau_calc", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "max_tau_calc", ")", ":", "\n", "                ", "tau_correlation", "[", "i", "]", "[", "j", "]", "=", "stats", ".", "kendalltau", "(", "main_df", ".", "iloc", "[", "-", "i", "-", "1", "]", ",", "main_df", ".", "iloc", "[", "-", "j", "-", "1", "]", ")", "[", "0", "]", "\n", "", "", "heatmap", "(", "tau_correlation", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_correlation_last_{}\"", ".", "format", "(", "k", ")", ")", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_correlation_last_{}.txt\"", ".", "format", "(", "k", ")", ")", ",", "tau_correlation", ")", "\n", "tau_correlation", "=", "tau_correlation", "[", "np", ".", "triu_indices_from", "(", "tau_correlation", ",", "k", "=", "1", ")", "]", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"Tau-as-Corr-Last-{}\"", ".", "format", "(", "k", ")", ",", "tau_correlation", ")", "\n", "\n", "# Calculate best tau and log", "\n", "", "ref_gt_acc", ",", "ref_gt_acc_tau", "=", "get_tau_along_epochs_combining_best_groups", "(", "main_df", ",", "gt", ",", "main_grouping", ",", "main", ".", "groups", ",", "\n", "main", ".", "columns", ")", "\n", "pd", ".", "DataFrame", "(", "ref_gt_acc", ")", ".", "to_csv", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\n", "\"acc_epochs_combining_different_epochs_sorted_gt.csv\"", ")", ")", "\n", "lineplot", "(", "[", "stack_with_index", "(", "np", ".", "arange", "(", "len", "(", "ref_gt_acc_tau", ")", ")", ",", "ref_gt_acc_tau", ")", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_curve_epochs_sorted_combining_different_epochs\"", ")", ")", "\n", "\n", "# Show subgraph for each batch", "\n", "scatterplot", "(", "[", "stack_with_index", "(", "main_archit", ".", "index", ",", "main_archit", "[", "col", "]", ")", "for", "col", "in", "main_archit", ".", "columns", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"subgraph_id_for_each_batch_validated\"", ")", ")", "\n", "\n", "# Substituted with ground truth rank", "\n", "scatterplot", "(", "[", "stack_with_index", "(", "main_archit", ".", "index", ",", "gt_rank", "[", "main_archit", "[", "col", "]", "]", ")", "for", "col", "in", "main_archit", ".", "columns", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"subgraph_rank_for_each_batch_validated\"", ")", ",", "\n", "inverse_y", "=", "True", ")", "\n", "\n", "# Top-K-Rank", "\n", "top_acc", ",", "top_rank", "=", "get_top_k_acc_rank", "(", "main_df", ".", "values", ",", "gt", ")", "\n", "plot_top_k_variance_chart", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"top_k_along_epochs\"", ")", ",", "main_df", ".", "index", ",", "\n", "top_acc", ",", "top_rank", ",", "gt", ",", "(", "1", ",", "3", ")", ")", "\n", "\n", "# Observe last window (for diff. epochs)", "\n", "for", "k", "in", "(", "10", ",", "64", ",", ")", ":", "\n", "        ", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau-In-Window-Last-{}\"", ".", "format", "(", "k", ")", ",", "gt_tau_data", "[", "-", "k", ":", "]", ")", "\n", "for", "v", "in", "(", "1", ",", "3", ")", ":", "\n", "            ", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"Top-{}-Rank-Last-{}\"", ".", "format", "(", "v", ",", "k", ")", ",", "top_rank", "[", "-", "k", ":", ",", "v", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.pipeline_for_inter_instance": [[283, 392], ["logger.info", "os.makedirs", "numpy.zeros", "enumerate", "visualize.lineplot", "visualize.boxplot", "numpy.stack", "visualize.boxplot", "numpy.array", "numpy.savetxt", "analyze_from_logs.report_mean_std_max_min", "numpy.mean", "analyze_from_logs.report_mean_std_max_min", "visualize.lineplot", "numpy.zeros", "range", "numpy.savetxt", "visualize.heatmap", "sorted", "visualize.boxplot", "zip", "visualize.lineplot", "analyze_from_logs.get_top_k_acc_rank", "analyze_from_logs.plot_top_k_variance_chart", "numpy.mean", "numpy.savetxt", "numpy.std", "numpy.savetxt", "d.validation_acc_dataframe", "os.path.join", "analyze_from_logs.get_tau_along_epochs", "numpy.stack", "numpy.concatenate", "analyze_from_logs.stack_with_index", "analyze_from_logs.report_mean_std_max_min", "analyze_from_logs.report_mean_std_max_min", "analyze_from_logs.report_mean_std_max_min", "analyze_from_logs.report_mean_std_max_min", "analyze_from_logs.report_mean_std_max_min", "analyze_from_logs.report_mean_std_max_min", "len", "enumerate", "os.path.join", "len", "numpy.triu_indices_from", "analyze_from_logs.report_mean_std_max_min", "numpy.mean", "numpy.std", "analyze_from_logs.report_mean_std_max_min", "numpy.stack", "visualize.errorbar", "visualize.lineplot", "visualize.lineplot", "visualize.lineplot", "numpy.arange", "analyze_from_logs.get_tau_along_epochs_combining_best_groups", "ref_gt_acc_taus.append", "analyze_from_logs.report_mean_std_max_min", "analyze_from_logs.report_mean_std_max_min", "os.path.join", "numpy.arange", "os.path.join", "os.path.join", "len", "len", "numpy.array", "os.path.join", "os.path.join", "analyze_from_logs.rankdata_greater", "os.path.join", "zip", "os.path.join", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.mean", "numpy.array", "numpy.array", "min", "len", "len", "enumerate", "os.path.join", "len", "os.path.join", "analyze_from_logs.stack_with_index", "os.path.join", "len", "list", "scipy.stats.kendalltau", "map", "scipy.stats.kendalltau", "numpy.arange", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "numpy.arange", "zip", "numpy.mean", "numpy.std", "numpy.max", "numpy.min", "numpy.mean", "numpy.std", "len", "numpy.stack", "len", "analyze_from_logs.get_consecutive_rank_tau", "len", "numpy.argmin", "len", "numpy.arange", "len"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.boxplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.boxplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.heatmap", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.boxplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_top_k_acc_rank", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.plot_top_k_variance_chart", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.validation_acc_dataframe", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_along_epochs", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.errorbar", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_tau_along_epochs_combining_best_groups", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.report_mean_std_max_min", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.rankdata_greater", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.stack_with_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.architect.SubgraphSearchOptimizer.map", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.get_consecutive_rank_tau"], ["", "", "", "def", "pipeline_for_inter_instance", "(", "logger", ",", "analysis_dir", ",", "data", ",", "by", ",", "gt", ")", ":", "\n", "    ", "logger", ".", "info", "(", "\"Analysing results for {}\"", ".", "format", "(", "analysis_dir", ")", ")", "\n", "\n", "data_as_df", "=", "[", "d", ".", "validation_acc_dataframe", "(", "by", ")", "for", "d", "in", "data", "]", "\n", "os", ".", "makedirs", "(", "analysis_dir", ",", "exist_ok", "=", "True", ")", "\n", "subgraphs", "=", "data", "[", "0", "]", ".", "columns", "\n", "for", "d", "in", "data", ":", "\n", "        ", "assert", "d", ".", "columns", "==", "subgraphs", "\n", "\n", "", "final_acc", "=", "np", ".", "zeros", "(", "(", "len", "(", "data", ")", ",", "len", "(", "subgraphs", ")", ")", ")", "\n", "for", "i", ",", "df", "in", "enumerate", "(", "data_as_df", ")", ":", "\n", "        ", "final_acc", "[", "i", "]", "=", "df", ".", "iloc", "[", "-", "1", "]", "\n", "\n", "# Consecutive tau (multi)", "\n", "", "lineplot", "(", "[", "np", ".", "array", "(", "list", "(", "zip", "(", "df", ".", "index", "[", "1", ":", "]", ",", "get_consecutive_rank_tau", "(", "df", ")", ")", ")", ")", "for", "df", "in", "data_as_df", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"taus_consecutive_epochs\"", ")", ")", "\n", "\n", "# Final acc distribution", "\n", "boxplot", "(", "final_acc", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"final_acc\"", ")", ")", "\n", "\n", "# Final rank distribution", "\n", "final_rank", "=", "np", ".", "stack", "(", "[", "rankdata_greater", "(", "row", ")", "for", "row", "in", "final_acc", "]", ")", "\n", "boxplot", "(", "final_rank", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"final_rank_boxplot\"", ")", ",", "inverse_y", "=", "True", ")", "\n", "\n", "# GT-Tau", "\n", "gt_tau", "=", "np", ".", "array", "(", "[", "stats", ".", "kendalltau", "(", "row", ",", "gt", "[", "subgraphs", "]", ")", "[", "0", "]", "for", "row", "in", "final_acc", "]", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"inst_gt_tau.txt\"", ")", ",", "gt_tau", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau\"", ",", "gt_tau", ")", "\n", "\n", "# Tau every epoch", "\n", "tau_data", "=", "[", "get_tau_along_epochs", "(", "df", ",", "gt", ",", "subgraphs", ")", "for", "df", "in", "data_as_df", "]", "\n", "tau_data_mean_over_instances", "=", "np", ".", "mean", "(", "np", ".", "stack", "(", "tau_data", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau-In-Window\"", ",", "np", ".", "concatenate", "(", "tau_data", ")", ")", "\n", "tau_curves", "=", "[", "stack_with_index", "(", "df", ".", "index", ",", "tau_d", ")", "for", "df", ",", "tau_d", "in", "zip", "(", "data_as_df", ",", "tau_data", ")", "]", "\n", "lineplot", "(", "tau_curves", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_curve_along_epochs\"", ")", ")", "\n", "for", "k", "in", "(", "10", ",", "64", ")", ":", "\n", "        ", "tau_data_clip", "=", "[", "t", "[", "-", "k", ":", "]", "for", "t", "in", "tau_data", "]", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau-In-Window-Last-{}-Mean\"", ".", "format", "(", "k", ")", ",", "\n", "np", ".", "array", "(", "[", "np", ".", "mean", "(", "t", ")", "for", "t", "in", "tau_data_clip", "]", ")", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau-In-Window-Last-{}-Std\"", ".", "format", "(", "k", ")", ",", "\n", "np", ".", "array", "(", "[", "np", ".", "std", "(", "t", ")", "for", "t", "in", "tau_data_clip", "]", ")", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau-In-Window-Last-{}-Max\"", ".", "format", "(", "k", ")", ",", "\n", "np", ".", "array", "(", "[", "np", ".", "max", "(", "t", ")", "for", "t", "in", "tau_data_clip", "]", ")", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"GT-Tau-In-Window-Last-{}-Min\"", ".", "format", "(", "k", ")", ",", "\n", "np", ".", "array", "(", "[", "np", ".", "min", "(", "t", ")", "for", "t", "in", "tau_data_clip", "]", ")", ")", "\n", "\n", "acc_data", "=", "[", "np", ".", "mean", "(", "df", ".", "iloc", "[", "-", "k", ":", "]", ".", "values", ",", "axis", "=", "0", ")", "for", "df", "in", "data_as_df", "]", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"Acc-Mean-In-Window-Last-{}-Mean\"", ".", "format", "(", "k", ")", ",", "\n", "np", ".", "array", "(", "[", "np", ".", "mean", "(", "x", ")", "for", "x", "in", "acc_data", "]", ")", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"Acc-Mean-In-Window-Last-{}-Std\"", ".", "format", "(", "k", ")", ",", "\n", "np", ".", "array", "(", "[", "np", ".", "std", "(", "x", ")", "for", "x", "in", "acc_data", "]", ")", ")", "\n", "\n", "# S-Tau (last 5 epochs)", "\n", "", "s_tau", "=", "np", ".", "zeros", "(", "(", "min", "(", "map", "(", "lambda", "d", ":", "len", "(", "d", ")", ",", "data_as_df", ")", ")", ",", "len", "(", "data", ")", ",", "len", "(", "data", ")", ")", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "s_tau", ")", ")", ":", "\n", "        ", "for", "i", ",", "table1", "in", "enumerate", "(", "data_as_df", ")", ":", "\n", "            ", "for", "j", ",", "table2", "in", "enumerate", "(", "data_as_df", ")", ":", "\n", "                ", "s_tau", "[", "k", "]", "[", "i", "]", "[", "j", "]", ",", "_", "=", "stats", ".", "kendalltau", "(", "table1", ".", "iloc", "[", "k", "]", ",", "table2", ".", "iloc", "[", "k", "]", ")", "\n", "", "", "", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"inter_inst_s_tau.txt\"", ")", ",", "s_tau", "[", "-", "1", "]", ")", "\n", "heatmap", "(", "s_tau", "[", "0", "]", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"inter_inst_last_s_tau_heatmap\"", ")", ",", "figsize", "=", "(", "10", ",", "10", ")", ")", "\n", "if", "len", "(", "data", ")", ">", "1", ":", "\n", "        ", "upper", "=", "np", ".", "triu_indices_from", "(", "s_tau", "[", "0", "]", ",", "k", "=", "1", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"S-Tau-Last\"", ",", "s_tau", "[", "-", "1", "]", "[", "upper", "]", ")", "\n", "s_tau_mean", "=", "np", ".", "mean", "(", "s_tau", "[", ":", ",", "upper", "[", "0", "]", ",", "upper", "[", "1", "]", "]", ",", "axis", "=", "1", ")", "\n", "s_tau_std", "=", "np", ".", "std", "(", "s_tau", "[", ":", ",", "upper", "[", "0", "]", ",", "upper", "[", "1", "]", "]", ",", "axis", "=", "1", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"S-Tau-Min\"", ",", "s_tau", "[", "np", ".", "argmin", "(", "s_tau_mean", ")", "]", "[", "upper", "]", ")", "\n", "s_tau_errorbar", "=", "np", ".", "stack", "(", "[", "np", ".", "arange", "(", "len", "(", "s_tau", ")", ")", ",", "s_tau_mean", ",", "s_tau_std", "]", ",", "axis", "=", "1", ")", "\n", "errorbar", "(", "[", "s_tau_errorbar", "]", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"inter_inst_s_tau_curve\"", ")", ")", "\n", "\n", "# S-Tau (without variance)", "\n", "lineplot", "(", "[", "s_tau_errorbar", "[", ":", ",", ":", "2", "]", "]", ",", "fmt", "=", "[", "\"-o\"", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"inter_inst_s_tau_curve_along_epochs_without_var\"", ")", ")", "\n", "\n", "# Compare with GT-Tau", "\n", "lineplot", "(", "tau_curves", "+", "[", "s_tau_errorbar", "]", ",", "fmt", "=", "[", "\"-\"", "]", "*", "len", "(", "tau_curves", ")", "+", "[", "\":\"", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_curve_along_epochs_compare_to_s_tau\"", ")", ")", "\n", "\n", "lineplot", "(", "[", "np", ".", "stack", "(", "[", "np", ".", "arange", "(", "len", "(", "tau_data_mean_over_instances", ")", ")", ",", "tau_data_mean_over_instances", "]", ",", "axis", "=", "1", ")", "]", "+", "\n", "[", "s_tau_errorbar", "]", ",", "fmt", "=", "[", "\"-\"", ",", "\":\"", "]", ",", "\n", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_curve_along_epochs_mean_compare_to_s_tau\"", ")", ")", "\n", "\n", "# Final rank dist (sorted by GT)", "\n", "", "gt_rank", "=", "sorted", "(", "np", ".", "arange", "(", "len", "(", "subgraphs", ")", ")", ",", "key", "=", "lambda", "i", ":", "gt", "[", "subgraphs", "[", "i", "]", "]", ",", "reverse", "=", "True", ")", "\n", "final_rank_resorted", "=", "final_rank", "[", ":", ",", "gt_rank", "]", "\n", "boxplot", "(", "final_rank_resorted", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"final_rank_boxplot_sorted_gt\"", ")", ",", "\n", "inverse_y", "=", "True", ")", "\n", "\n", "# Tau sorted", "\n", "ref_gt_acc_taus", "=", "[", "]", "\n", "for", "df", ",", "raw", "in", "zip", "(", "data_as_df", ",", "data", ")", ":", "\n", "        ", "_", ",", "ref_gt_acc_tau", "=", "get_tau_along_epochs_combining_best_groups", "(", "df", ",", "gt", ",", "raw", ".", "grouping_numpy", ",", "raw", ".", "groups", ",", "\n", "subgraphs", ")", "\n", "ref_gt_acc_taus", ".", "append", "(", "stack_with_index", "(", "np", ".", "arange", "(", "len", "(", "ref_gt_acc_tau", ")", ")", ",", "ref_gt_acc_tau", ")", ")", "\n", "", "lineplot", "(", "ref_gt_acc_taus", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"tau_curves_sorted_combining_different_epochs\"", ")", ")", "\n", "\n", "# Top-K-Rank", "\n", "top_acc", ",", "top_rank", "=", "get_top_k_acc_rank", "(", "final_acc", ",", "gt", ")", "\n", "topk", "=", "(", "1", ",", "3", ")", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"Top-{}-Acc\"", ".", "format", "(", "k", ")", ",", "top_acc", "[", ":", ",", "k", "-", "1", "]", ")", "\n", "report_mean_std_max_min", "(", "analysis_dir", ",", "logger", ",", "\"Top-{}-Rank\"", ".", "format", "(", "k", ")", ",", "top_rank", "[", ":", ",", "k", "-", "1", "]", ")", "\n", "", "plot_top_k_variance_chart", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"inst_top_k\"", ")", ",", "np", ".", "arange", "(", "len", "(", "top_acc", ")", ")", ",", "\n", "top_acc", ",", "top_rank", ",", "gt", ",", "topk", ")", "\n", "\n", "# Average final acc", "\n", "avg_acc", "=", "np", ".", "mean", "(", "final_acc", ",", "axis", "=", "0", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"average_final_acc.txt\"", ")", ",", "avg_acc", ")", "\n", "std_acc", "=", "np", ".", "std", "(", "final_acc", ",", "axis", "=", "0", ")", "\n", "np", ".", "savetxt", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"std_final_acc.txt\"", ")", ",", "std_acc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.pipeline": [[394, 440], ["os.path.join", "os.makedirs", "logging.getLogger", "logging.Formatter", "logging.FileHandler", "logging.FileHandler.setFormatter", "logging.StreamHandler", "logging.StreamHandler.setFormatter", "logging.getLogger.addHandler", "logging.getLogger.addHandler", "logging.getLogger.setLevel", "sorted", "logging.getLogger.info", "os.path.join", "os.listdir", "logging.getLogger.info", "record.record_factory", "data.append", "len", "os.path.join", "analyze_from_logs.pipeline_for_inter_instance", "os.path.join", "logging.getLogger.warning", "logging.getLogger.warning", "traceback.print_exc", "os.path.join", "analyze_from_logs.pipeline_for_single_instance", "logging.getLogger.warning", "folder.split"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.record_factory", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.pipeline_for_inter_instance", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.analyze_from_logs.pipeline_for_single_instance"], ["", "def", "pipeline", "(", "keyword", ",", "gt", ",", "expected_total_subgraphs", ")", ":", "\n", "    ", "root_dir", "=", "\"data\"", "\n", "analysis_dir", "=", "os", ".", "path", ".", "join", "(", "\"analysis\"", ",", "keyword", ")", "\n", "os", ".", "makedirs", "(", "analysis_dir", ",", "exist_ok", "=", "True", ")", "\n", "\n", "logger", "=", "logging", ".", "getLogger", "(", "\"analysis\"", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(asctime)s | %(levelname)s | %(message)s'", ",", "datefmt", "=", "'%m/%d %I:%M:%S %p'", ")", "\n", "file_handler", "=", "logging", ".", "FileHandler", "(", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "\"run.log\"", ")", ")", "\n", "file_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "stream_handler", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "stream_handler", ".", "setFormatter", "(", "formatter", ")", "\n", "\n", "logger", ".", "addHandler", "(", "file_handler", ")", "\n", "logger", ".", "addHandler", "(", "stream_handler", ")", "\n", "logger", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "\n", "data", "=", "[", "]", "\n", "for", "folder", "in", "sorted", "(", "os", ".", "listdir", "(", "root_dir", ")", ")", ":", "\n", "        ", "if", "keyword", "not", "in", "folder", ":", "\n", "            ", "continue", "\n", "", "logger", ".", "info", "(", "\"Processing logs from \\\"{}\\\"\"", ".", "format", "(", "folder", ")", ")", "\n", "try", ":", "\n", "            ", "main_record", ",", "finetune_records", "=", "record_factory", "(", "logger", ",", "os", ".", "path", ".", "join", "(", "root_dir", ",", "folder", ")", ",", "\n", "expected_total_subgraphs", ")", "\n", "if", "not", "args", ".", "skip_single", ":", "\n", "                ", "for", "by", "in", "[", "\"epochs\"", ",", "\"steps\"", "]", ":", "\n", "                    ", "analysis_dir_for_df", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "by", "+", "\"_\"", "+", "folder", ".", "split", "(", "\"_\"", ")", "[", "-", "1", "]", ")", "\n", "try", ":", "\n", "                        ", "pipeline_for_single_instance", "(", "logger", ",", "analysis_dir_for_df", ",", "main_record", ",", "finetune_records", ",", "by", ",", "gt", ")", "\n", "", "except", "ValueError", "as", "e", ":", "\n", "                        ", "logger", ".", "warning", "(", "e", ")", "\n", "", "", "", "data", ".", "append", "(", "main_record", ")", "\n", "", "except", "(", "AssertionError", ",", "ValueError", ")", "as", "e", ":", "\n", "            ", "logger", ".", "warning", "(", "e", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "\"Found {} instances for {}\"", ".", "format", "(", "len", "(", "data", ")", ",", "keyword", ")", ")", "\n", "if", "not", "data", ":", "\n", "        ", "return", "\n", "\n", "", "for", "by", "in", "[", "\"epochs\"", ",", "\"steps\"", "]", ":", "\n", "        ", "try", ":", "\n", "            ", "analysis_dir_for_inter", "=", "os", ".", "path", ".", "join", "(", "analysis_dir", ",", "by", "+", "\"_inter\"", ")", "\n", "pipeline_for_inter_instance", "(", "logger", ",", "analysis_dir_for_inter", ",", "data", ",", "by", ",", "gt", ")", "\n", "", "except", "ValueError", "as", "e", ":", "\n", "            ", "logger", ".", "warning", "(", "e", ")", "\n", "traceback", ".", "print_exc", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.ValidationSingleRecord.__init__": [[31, 38], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "epoch", ",", "step", ",", "subgraph_val", ",", "subgraph_trn", ",", "acc", ",", "dense_validation", ")", ":", "\n", "        ", "self", ".", "epoch", "=", "epoch", "\n", "self", ".", "step", "=", "step", "\n", "self", ".", "acc", "=", "acc", "\n", "self", ".", "subgraph_val", "=", "subgraph_val", "# subgraph now validating", "\n", "self", ".", "subgraph_trn", "=", "subgraph_trn", "# subgraph just trained", "\n", "self", ".", "dense_validation", "=", "dense_validation", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.ValidationSingleRecord.__str__": [[39, 42], ["None"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\"Ep={}, Step={}, Acc={:.4f}, Trn={}, Val={}\"", ".", "format", "(", "self", ".", "epoch", ",", "self", ".", "step", ",", "self", ".", "acc", ",", "\n", "self", ".", "subgraph_trn", ",", "self", ".", "subgraph_val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.ValidationSingleRecord.__repr__": [[43, 45], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"SingleRecord({})\"", ".", "format", "(", "str", "(", "self", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.__init__": [[48, 65], ["enumerate", "record.Record.process_finetune_file", "int", "record.Record.process_file", "record.Record.logger.error", "ValueError", "os.path.basename().split", "os.path.basename"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.process_finetune_file", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.process_file"], ["    ", "def", "__init__", "(", "self", ",", "logger", ",", "log_files", ",", "format", "=", "None", ")", ":", "\n", "        ", "self", ".", "logger", "=", "logger", "\n", "self", ".", "records", ":", "List", "[", "ValidationSingleRecord", "]", "=", "[", "]", "\n", "self", ".", "grouping_info", "=", "{", "}", "\n", "self", ".", "finetune_step", "=", "0", "\n", "for", "idx", ",", "file", "in", "enumerate", "(", "log_files", ")", ":", "\n", "            ", "if", "format", "==", "\"finetune\"", ":", "\n", "                ", "subgraphs", "=", "self", ".", "process_finetune_file", "(", "file", ")", "\n", "self", ".", "finetune_step", "=", "int", "(", "os", ".", "path", ".", "basename", "(", "file", ")", ".", "split", "(", "\"_\"", ")", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "                ", "subgraphs", "=", "self", ".", "process_file", "(", "file", ")", "\n", "", "if", "not", "subgraphs", ":", "\n", "                ", "self", ".", "logger", ".", "error", "(", "\"No subgraph found in {}\"", ".", "format", "(", "file", ")", ")", "\n", "", "for", "subgraph", "in", "subgraphs", ":", "\n", "                ", "if", "subgraph", "in", "self", ".", "grouping_info", ":", "\n", "                    ", "raise", "ValueError", "(", "\"Subgraph {} has been trained twice in different groups.\"", ".", "format", "(", "subgraph", ")", ")", "\n", "", "self", ".", "grouping_info", "[", "subgraph", "]", "=", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.groups": [[66, 69], ["record.sorted_dedup", "record.Record.grouping_info.values"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.sorted_dedup"], ["", "", "", "@", "property", "\n", "def", "groups", "(", "self", ")", ":", "\n", "        ", "return", "sorted_dedup", "(", "self", ".", "grouping_info", ".", "values", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.columns": [[70, 73], ["sorted", "list", "record.Record.grouping_info.keys"], "methods", ["None"], ["", "@", "property", "\n", "def", "columns", "(", "self", ")", ":", "\n", "        ", "return", "sorted", "(", "list", "(", "self", ".", "grouping_info", ".", "keys", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.group_number": [[74, 77], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "group_number", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.grouping_numpy": [[78, 84], ["numpy.full", "record.Record.grouping_info.items"], "methods", ["None"], ["", "@", "property", "\n", "def", "grouping_numpy", "(", "self", ")", ":", "\n", "        ", "ret", "=", "np", ".", "full", "(", "EXPECTED_SUBGRAPH_NUMBER", ",", "-", "1", ",", "dtype", "=", "np", ".", "int", ")", "\n", "for", "g", ",", "v", "in", "self", ".", "grouping_info", ".", "items", "(", ")", ":", "\n", "            ", "ret", "[", "g", "]", "=", "v", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.filter_records": [[85, 107], ["dict", "record.sorted_dedup", "len", "ValueError", "dict.keys"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.sorted_dedup"], ["", "def", "filter_records", "(", "self", ",", "by", ",", "cutoff", ")", ":", "\n", "        ", "assert", "by", "in", "[", "\"epochs\"", ",", "\"steps\"", "]", ",", "\"by not in epochs and steps\"", "\n", "ret", "=", "dict", "(", ")", "\n", "if", "by", "==", "\"epochs\"", ":", "\n", "            ", "for", "d", "in", "self", ".", "records", ":", "\n", "                ", "if", "d", ".", "step", ">", "cutoff", ">", "0", ":", "\n", "                    ", "continue", "\n", "", "k", "=", "(", "d", ".", "epoch", ",", "d", ".", "subgraph_val", ")", "\n", "if", "k", "not", "in", "ret", "or", "ret", "[", "k", "]", ".", "step", "<", "d", ".", "step", ":", "\n", "                    ", "ret", "[", "k", "]", "=", "d", "\n", "", "", "", "elif", "by", "==", "\"steps\"", ":", "\n", "            ", "for", "d", "in", "self", ".", "records", ":", "\n", "                ", "if", "d", ".", "step", ">", "cutoff", ">", "0", ":", "\n", "                    ", "continue", "\n", "", "if", "d", ".", "dense_validation", ":", "\n", "                    ", "k", "=", "(", "d", ".", "step", ",", "d", ".", "subgraph_val", ")", "\n", "if", "k", "not", "in", "ret", "or", "not", "ret", "[", "k", "]", ".", "dense_validation", ":", "\n", "                        ", "ret", "[", "k", "]", "=", "d", "\n", "", "", "", "", "steps", "=", "sorted_dedup", "(", "[", "k", "for", "k", ",", "_", "in", "ret", ".", "keys", "(", ")", "]", ")", "\n", "if", "len", "(", "steps", ")", "<=", "2", ":", "\n", "            ", "raise", "ValueError", "(", "\"Too few steps for analysis\"", ")", "\n", "", "return", "steps", ",", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.validation_acc_dataframe": [[108, 114], ["record.Record.filter_records", "dict", "pandas.DataFrame"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.filter_records"], ["", "def", "validation_acc_dataframe", "(", "self", ",", "by", ",", "cutoff", "=", "0", ")", ":", "\n", "        ", "steps", ",", "raw_data", "=", "self", ".", "filter_records", "(", "by", ",", "cutoff", ")", "\n", "ret_as_dict", "=", "dict", "(", ")", "\n", "for", "column", "in", "self", ".", "columns", ":", "\n", "            ", "ret_as_dict", "[", "column", "]", "=", "[", "raw_data", "[", "step", ",", "column", "]", ".", "acc", "for", "step", "in", "steps", "]", "\n", "", "return", "pd", ".", "DataFrame", "(", "ret_as_dict", ",", "index", "=", "steps", ",", "columns", "=", "self", ".", "columns", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.grouping_subgraph_training_dataframe": [[115, 122], ["record.Record.filter_records", "dict", "pandas.DataFrame", "record.sorted_dedup", "record.Record.grouping_info.values"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.filter_records", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.sorted_dedup"], ["", "def", "grouping_subgraph_training_dataframe", "(", "self", ",", "by", ",", "cutoff", "=", "0", ")", ":", "\n", "        ", "steps", ",", "raw_data", "=", "self", ".", "filter_records", "(", "by", ",", "cutoff", ")", "\n", "trn_subgraph_by_group", "=", "dict", "(", ")", "\n", "for", "column", "in", "self", ".", "columns", ":", "\n", "            ", "trn_subgraph_by_group", "[", "self", ".", "grouping_info", "[", "column", "]", "]", "=", "[", "raw_data", "[", "step", ",", "column", "]", ".", "subgraph_trn", "for", "step", "in", "steps", "]", "\n", "", "return", "pd", ".", "DataFrame", "(", "trn_subgraph_by_group", ",", "index", "=", "steps", ",", "\n", "columns", "=", "sorted_dedup", "(", "self", ".", "grouping_info", ".", "values", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.process_finetune_file": [[123, 144], ["open", "fp.readlines", "re.search", "re.search", "re.search", "record.convert_subgraph_label_to_index", "int", "int", "record.Record.records.append", "re.search.group", "re.search.group", "re.search.group", "float", "record.ValidationSingleRecord", "int", "re.search.group", "re.search.group", "int", "int", "re.search.group", "re.search.group"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.convert_subgraph_label_to_index"], ["", "def", "process_finetune_file", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "name_regex", "=", "r\"Subgraph name: (\\d+)\"", "\n", "current_epoch", ",", "current_step", "=", "1", ",", "-", "1", "\n", "training_step_regex", "=", "r\"Train: \\[\\s*(\\d+)/(\\d+)\\] Step (\\d+)/(\\d+)\"", "\n", "validation_regex", "=", "r\"Valid: \\[\\s*(\\d+)/\\s*\\d+\\] Final Prec@1 ([\\d.]+)%\"", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "fp", ":", "\n", "            ", "for", "line", "in", "fp", ".", "readlines", "(", ")", ":", "\n", "                ", "grp", "=", "re", ".", "search", "(", "name_regex", ",", "line", ")", "\n", "if", "grp", "is", "not", "None", ":", "\n", "                    ", "subgraph_name", "=", "convert_subgraph_label_to_index", "(", "grp", ".", "group", "(", "1", ")", ")", "\n", "", "grp", "=", "re", ".", "search", "(", "training_step_regex", ",", "line", ")", "\n", "if", "grp", "is", "not", "None", ":", "\n", "                    ", "current_epoch", "=", "int", "(", "grp", ".", "group", "(", "1", ")", ")", "\n", "current_step", "=", "(", "int", "(", "grp", ".", "group", "(", "1", ")", ")", "-", "1", ")", "*", "(", "int", "(", "grp", ".", "group", "(", "4", ")", ")", "+", "1", ")", "+", "int", "(", "grp", ".", "group", "(", "3", ")", ")", "+", "1", "\n", "", "grp", "=", "re", ".", "search", "(", "validation_regex", ",", "line", ")", "\n", "if", "grp", "is", "not", "None", ":", "\n", "                    ", "current_epoch", "=", "int", "(", "grp", ".", "group", "(", "1", ")", ")", "\n", "acc", "=", "float", "(", "grp", ".", "group", "(", "2", ")", ")", "/", "100", "\n", "self", ".", "records", ".", "append", "(", "ValidationSingleRecord", "(", "current_epoch", ",", "current_step", ",", "subgraph_name", ",", "\n", "subgraph_name", ",", "acc", ",", "True", ")", ")", "\n", "", "", "", "return", "[", "subgraph_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.Record.process_file": [[145, 205], ["record.Record.records.extend", "set", "open", "fp.readlines", "re.search", "re.search", "re.search", "int", "re.search", "line.find", "eval", "line.find", "re.search", "re.search.group", "record.convert_subgraph_label_to_index", "ret.append", "re.search.group", "set", "int", "re.search.group", "ValueError", "record.ValidationSingleRecord", "eval", "re.search.group", "len", "record.convert_subgraph_label_to_index", "re.search.group().lower", "record.Record.logger.warning", "list", "int", "int", "any", "line.find", "len", "range", "re.search.group", "re.search.group", "len", "re.search.group", "len", "parameters[].startswith"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.convert_subgraph_label_to_index", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.convert_subgraph_label_to_index"], ["", "def", "process_file", "(", "self", ",", "file_path", ")", ":", "\n", "        ", "current_epoch", ",", "current_step", ",", "current_archit", "=", "1", ",", "-", "1", ",", "0", "\n", "ret", "=", "[", "]", "\n", "parameters", "=", "{", "}", "\n", "archit_order", ",", "subgraphs", "=", "None", ",", "set", "(", ")", "\n", "valid_ep_regex", "=", "r\"Valid: \\[\\s*(\\d+)/\\s*(\\d+)\\]\"", "\n", "training_step_regex", "=", "r\"Train: \\[\\s*(\\d+)/(\\d+)\\] Step (\\d+)/(\\d+)\"", "\n", "training_archit_regex", "=", "r\"Archit: (\\d+)\"", "\n", "top_acc_label", "=", "\"Valid: Top accuracy: \"", "\n", "dense_validation_regex", "=", "\"Entering dense validation steps\"", "\n", "parameter_status", "=", "-", "1", "\n", "with", "open", "(", "file_path", ",", "\"r\"", ")", "as", "fp", ":", "\n", "            ", "for", "line", "in", "fp", ".", "readlines", "(", ")", ":", "\n", "                ", "if", "parameter_status", "<", "0", ":", "\n", "                    ", "if", "line", ".", "find", "(", "\"Parameter\"", ")", "!=", "-", "1", ":", "\n", "                        ", "parameter_status", "=", "0", "\n", "", "continue", "\n", "", "elif", "parameter_status", "==", "0", ":", "\n", "                    ", "grp", "=", "re", ".", "search", "(", "r\"([A-Z0-9_]+)=(.*)\"", ",", "line", ")", "\n", "if", "grp", "is", "not", "None", ":", "\n", "                        ", "parameters", "[", "grp", ".", "group", "(", "1", ")", ".", "lower", "(", ")", "]", "=", "grp", ".", "group", "(", "2", ")", "\n", "", "else", ":", "\n", "                        ", "parameter_status", "=", "1", "\n", "try", ":", "\n", "                            ", "archit_order", "=", "eval", "(", "parameters", "[", "\"designated_subgraph\"", "]", ")", "\n", "if", "archit_order", "is", "None", ":", "\n", "                                ", "raise", "ValueError", "\n", "", "", "except", ":", "\n", "                            ", "self", ".", "logger", ".", "warning", "(", "\"Designated subgraphs not found, assuming default\"", ")", "\n", "archit_order", "=", "list", "(", "range", "(", "EXPECTED_SUBGRAPH_NUMBER", ")", ")", "\n", "", "subgraphs", "=", "set", "(", "archit_order", ")", "\n", "", "continue", "\n", "\n", "", "grp", "=", "re", ".", "search", "(", "valid_ep_regex", ",", "line", ")", "\n", "if", "grp", "is", "not", "None", ":", "\n", "                    ", "current_epoch", "=", "int", "(", "grp", ".", "group", "(", "1", ")", ")", "\n", "", "grp", "=", "re", ".", "search", "(", "training_step_regex", ",", "line", ")", "\n", "if", "grp", "is", "not", "None", ":", "\n", "                    ", "current_step", "=", "(", "int", "(", "grp", ".", "group", "(", "1", ")", ")", "-", "1", ")", "*", "(", "int", "(", "grp", ".", "group", "(", "4", ")", ")", "+", "1", ")", "+", "int", "(", "grp", ".", "group", "(", "3", ")", ")", "+", "1", "\n", "grp", "=", "re", ".", "search", "(", "training_archit_regex", ",", "line", ")", "\n", "if", "grp", "is", "not", "None", ":", "\n", "                        ", "current_archit", "=", "convert_subgraph_label_to_index", "(", "grp", ".", "group", "(", "1", ")", ")", "\n", "if", "current_archit", "!=", "archit_order", "[", "(", "current_step", "-", "1", ")", "%", "len", "(", "archit_order", ")", "]", "and", "not", "(", "\n", "\"step_order\"", "in", "parameters", "and", "\n", "any", "(", "parameters", "[", "\"step_order\"", "]", ".", "startswith", "(", "k", ")", "for", "k", "in", "[", "\"one\"", ",", "\"every\"", "]", ")", ")", ":", "\n", "                            ", "raise", "ValueError", "(", "\"Unexpected architecture found for step {}\"", ".", "format", "(", "current_step", ")", ")", "\n", "", "else", ":", "\n", "                            ", "archit_order", "[", "(", "current_step", "-", "1", ")", "%", "len", "(", "archit_order", ")", "]", "=", "current_archit", "\n", "", "", "current_archit", "=", "archit_order", "[", "(", "current_step", "-", "1", ")", "%", "len", "(", "archit_order", ")", "]", "# deal with missing info case", "\n", "", "grp", "=", "re", ".", "search", "(", "dense_validation_regex", ",", "line", ")", "\n", "if", "grp", "is", "not", "None", ":", "\n", "                    ", "parameter_status", "=", "2", "\n", "", "if", "line", ".", "find", "(", "top_acc_label", ")", "!=", "-", "1", ":", "\n", "                    ", "acc", "=", "eval", "(", "line", "[", "line", ".", "find", "(", "top_acc_label", ")", "+", "len", "(", "top_acc_label", ")", ":", "]", ")", "\n", "for", "t", ",", "v", "in", "acc", ":", "\n", "                        ", "ret", ".", "append", "(", "ValidationSingleRecord", "(", "current_epoch", ",", "current_step", ",", "\n", "convert_subgraph_label_to_index", "(", "t", ")", ",", "\n", "current_archit", ",", "v", ",", "parameter_status", ">", "1", ")", ")", "\n", "", "", "", "", "self", ".", "records", ".", "extend", "(", "ret", ")", "\n", "return", "subgraphs", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.convert_subgraph_label_to_index": [[11, 16], ["int"], "function", ["None"], ["def", "convert_subgraph_label_to_index", "(", "label", ")", ":", "\n", "    ", "ret", "=", "0", "\n", "for", "t", "in", "label", ":", "\n", "        ", "ret", "=", "ret", "*", "4", "+", "(", "int", "(", "t", ")", "-", "1", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.convert_subgraph_index_to_label": [[18, 24], ["range", "str"], "function", ["None"], ["", "def", "convert_subgraph_index_to_label", "(", "index", ")", ":", "\n", "    ", "ret", "=", "\"\"", "\n", "for", "i", "in", "range", "(", "3", ")", ":", "\n", "        ", "ret", "=", "str", "(", "index", "%", "4", "+", "1", ")", "+", "ret", "\n", "index", "//=", "4", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.sorted_dedup": [[26, 28], ["sorted", "list", "set"], "function", ["None"], ["", "def", "sorted_dedup", "(", "iterable", ":", "Iterable", ")", ":", "\n", "    ", "return", "sorted", "(", "list", "(", "set", "(", "iterable", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.record.record_factory": [[207, 234], ["os.walk", "logger.info", "record.Record", "len", "len", "file.startswith", "os.path.join", "logs.append", "finetune_records.append", "main_logs.extend", "len", "len", "len", "file.endswith", "record.Record"], "function", ["None"], ["", "", "def", "record_factory", "(", "logger", ",", "log_dir", ",", "expected_total_subgraphs", ")", ":", "\n", "# return a main record and possibly a few finetune records", "\n", "    ", "main_logs", "=", "[", "]", "\n", "finetune_records", "=", "[", "]", "\n", "for", "rt", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "log_dir", ")", ":", "\n", "# process for each directory", "\n", "        ", "finetune_record", "=", "False", "\n", "logs", "=", "[", "]", "\n", "for", "file", "in", "files", ":", "\n", "            ", "if", "not", "file", ".", "endswith", "(", "\".log\"", ")", ":", "\n", "                ", "continue", "\n", "", "if", "file", ".", "startswith", "(", "\"finetune_\"", ")", ":", "\n", "                ", "finetune_record", "=", "True", "\n", "", "file_path", "=", "os", ".", "path", ".", "join", "(", "rt", ",", "file", ")", "\n", "logs", ".", "append", "(", "file_path", ")", "\n", "", "if", "finetune_record", ":", "\n", "            ", "finetune_records", ".", "append", "(", "Record", "(", "logger", ",", "logs", ",", "format", "=", "\"finetune\"", ")", ")", "\n", "", "else", ":", "\n", "            ", "main_logs", ".", "extend", "(", "logs", ")", "\n", "", "", "logger", ".", "info", "(", "\"Found {} finetune records\"", ".", "format", "(", "len", "(", "finetune_records", ")", ")", ")", "\n", "main_record", "=", "Record", "(", "logger", ",", "main_logs", ")", "\n", "for", "r", "in", "finetune_records", ":", "\n", "        ", "assert", "len", "(", "r", ".", "columns", ")", "==", "expected_total_subgraphs", ",", "\"Finetune record of length {} != {}\"", ".", "format", "(", "len", "(", "r", ".", "columns", ")", ",", "expected_total_subgraphs", ")", "\n", "", "assert", "len", "(", "main_record", ".", "columns", ")", "==", "expected_total_subgraphs", ",", "\"Main record of length {} != {}\"", ".", "format", "(", "len", "(", "main_record", ".", "columns", ")", ",", "expected_total_subgraphs", ")", "\n", "return", "main_record", ",", "finetune_records", "\n", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.pack.zipdir": [[5, 13], ["os.walk", "ziph.write", "print", "file.startswith", "file.startswith", "file.endswith", "file.endswith", "os.path.join", "os.path.join"], "function", ["None"], ["def", "zipdir", "(", "path", ",", "ziph", ")", ":", "\n", "# ziph is zipfile handle", "\n", "    ", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "path", ")", ":", "\n", "        ", "for", "file", "in", "files", ":", "\n", "            ", "if", "not", "file", ".", "startswith", "(", "\"ALL\"", ")", "and", "not", "file", ".", "startswith", "(", "\"events\"", ")", "and", "not", "file", ".", "endswith", "(", "\".zip\"", ")", "and", "not", "file", ".", "endswith", "(", "\".tar\"", ")", ":", "\n", "                ", "ziph", ".", "write", "(", "os", ".", "path", ".", "join", "(", "root", ",", "file", ")", ")", "\n", "print", "(", "os", ".", "path", ".", "join", "(", "root", ",", "file", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.MultiPageContext.__init__": [[32, 36], ["matplotlib.backends.backend_pdf.PdfPages.__init__", "visualize.generate_checkpoint_path", "visualize.generate_full_path"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.generate_checkpoint_path", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.generate_full_path"], ["\n", "# intermediate nodes", "\n", "n_nodes", "=", "len", "(", "genotype", ")", "\n", "for", "i", "in", "range", "(", "n_nodes", ")", ":", "\n", "        ", "g", ".", "node", "(", "str", "(", "i", ")", ",", "fillcolor", "=", "'lightblue'", ")", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.MultiPageContext.__exit__": [[37, 41], ["super().__exit__", "open", "pickle.dump"], "methods", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.MultiPageContext.__exit__"], ["\n", "", "for", "i", ",", "edges", "in", "enumerate", "(", "genotype", ")", ":", "\n", "        ", "for", "op", ",", "j", "in", "edges", ":", "\n", "            ", "if", "j", "==", "0", ":", "\n", "                ", "u", "=", "\"c_{k-1}\"", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.generate_full_path": [[18, 24], ["os.path.relpath", "file_fullname.replace().replace().replace.replace().replace().replace", "os.path.join", "os.path.dirname", "file_fullname.replace().replace().replace.replace().replace", "file_fullname.replace().replace().replace.replace"], "function", ["None"], ["'height'", ":", "'0.5'", ",", "\n", "'width'", ":", "'0.5'", ",", "\n", "'penwidth'", ":", "'2'", ",", "\n", "'fontname'", ":", "'times'", "\n", "}", "\n", "g", "=", "Digraph", "(", "\n", "format", "=", "'png'", ",", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.generate_checkpoint_path": [[26, 29], ["os.path.join", "os.path.dirname", "os.path.basename"], "function", ["None"], ["node_attr", "=", "node_attr", ",", "\n", "engine", "=", "'dot'", ")", "\n", "g", ".", "body", ".", "extend", "(", "[", "'rankdir=LR'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.get_font_dict": [[43, 50], ["dict"], "function", ["None"], ["                ", "u", "=", "str", "(", "j", "-", "1", ")", "\n", "\n", "", "v", "=", "str", "(", "i", ")", "\n", "g", ".", "edge", "(", "u", ",", "v", ",", "label", "=", "op", ",", "fillcolor", "=", "\"gray\"", ")", "\n", "\n", "# output node", "\n", "", "", "g", ".", "node", "(", "\"c_{k}\"", ",", "fillcolor", "=", "'palegoldenrod'", ")", "\n", "for", "i", "in", "range", "(", "n_nodes", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.init": [[52, 66], ["matplotlib.pyplot.figure", "matplotlib.pyplot.grid", "visualize.get_font_dict", "matplotlib.pyplot.xticks", "matplotlib.pyplot.yticks", "matplotlib.pyplot.title", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.get_font_dict"], ["\n", "# add image caption", "\n", "", "if", "caption", ":", "\n", "        ", "g", ".", "attr", "(", "label", "=", "caption", ",", "overlap", "=", "'false'", ",", "fontsize", "=", "'20'", ",", "fontname", "=", "'times'", ")", "\n", "\n", "", "g", ".", "render", "(", "file_path", ",", "view", "=", "False", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "if", "len", "(", "sys", ".", "argv", ")", "!=", "2", ":", "\n", "        ", "raise", "ValueError", "(", "\"usage:\\n python {} GENOTYPE\"", ".", "format", "(", "sys", ".", "argv", "[", "0", "]", ")", ")", "\n", "\n", "", "genotype_str", "=", "sys", ".", "argv", "[", "1", "]", "\n", "try", ":", "\n", "        ", "genotype", "=", "gt", ".", "from_str", "(", "genotype_str", ")", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.finalize": [[68, 85], ["matplotlib.pyplot.gca", "matplotlib.pyplot.close", "plt.gca.margins", "plt.gca.set_ylim", "plt.gca.legend", "context.savefig", "matplotlib.pyplot.savefig", "__logger__.info", "visualize.generate_full_path", "plt.gca.get_ylim", "visualize.get_font_dict"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.generate_full_path", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.get_font_dict"], ["        ", "raise", "ValueError", "(", "\"Cannot parse {}\"", ".", "format", "(", "genotype_str", ")", ")", "\n", "\n", "", "plot", "(", "genotype", ".", "normal", ",", "\"normal\"", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.save_checkpoint": [[87, 98], ["kwargs[].checkpoints.append", "open", "pickle.dump", "kwargs.items", "visualize.generate_checkpoint_path"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.generate_checkpoint_path"], []], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.init_and_finalize": [[100, 108], ["functools.wraps", "visualize.save_checkpoint", "visualize.init", "func", "visualize.finalize"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.save_checkpoint", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.init", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.finalize"], []], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.boxplot": [[110, 116], ["matplotlib.pyplot.boxplot", "matplotlib.pyplot.gca", "plt.gca.set_xticklabels"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.boxplot"], []], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.scatterplot": [[118, 123], ["matplotlib.pyplot.scatter"], "function", ["None"], []], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.lineplot": [[125, 157], ["isinstance", "enumerate", "matplotlib.cm.get_cmap", "matplotlib.pyplot.plot", "len", "len", "len", "isinstance", "kwargs.update", "kwargs.update", "kwargs.update", "kwargs.update", "kwargs.update", "len", "cm.get_cmap."], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.visualize.plot", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update"], []], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.errorbar": [[159, 163], ["enumerate", "matplotlib.pyplot.errorbar"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.errorbar"], []], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.heatmap": [[165, 171], ["seaborn.heatmap", "sns.heatmap.set_aspect", "sns.heatmap.get_ylim", "sns.heatmap.set_ylim", "math.ceil", "math.floor"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.heatmap"], []], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.replay": [[173, 196], ["isinstance", "combined_kwargs.update", "isinstance", "eval", "open", "pickle.load", "zip", "combined_kwargs.items", "isinstance", "isinstance", "a.extend", "v.extend"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.None.utils.AverageMeter.update"], []], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.download_from_hdfs.download": [[10, 25], ["hdfs.InsecureClient", "hdfs.InsecureClient.list", "os.makedirs", "hdfs.InsecureClient.list", "os.path.join", "os.path.join", "logging.info", "os.path.exists", "logging.warning", "open", "hdfs.InsecureClient.read", "writer.write", "reader.read"], "function", ["None"], ["def", "download", "(", "keyword", ")", ":", "\n", "    ", "client", "=", "InsecureClient", "(", "\"http://ip_address\"", ",", "user", "=", "\"username\"", ")", "\n", "root_dir", "=", "\"/username/dps\"", "\n", "for", "folder", "in", "client", ".", "list", "(", "root_dir", ")", ":", "\n", "        ", "if", "keyword", "not", "in", "folder", ":", "\n", "            ", "continue", "\n", "", "os", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "\"data\"", ",", "folder", ")", ",", "exist_ok", "=", "True", ")", "\n", "for", "file", "in", "client", ".", "list", "(", "root_dir", "+", "\"/\"", "+", "folder", ")", ":", "\n", "            ", "target_path", "=", "os", ".", "path", ".", "join", "(", "\"data\"", ",", "folder", ",", "file", ")", "\n", "logging", ".", "info", "(", "\"Downloading for {}\"", ".", "format", "(", "target_path", ")", ")", "\n", "if", "os", ".", "path", ".", "exists", "(", "target_path", ")", ":", "\n", "                ", "logging", ".", "warning", "(", "\"{} already exists!\"", ".", "format", "(", "target_path", ")", ")", "\n", "continue", "\n", "", "with", "open", "(", "target_path", ",", "\"wb\"", ")", "as", "writer", ",", "client", ".", "read", "(", "\"{}/{}/{}\"", ".", "format", "(", "root_dir", ",", "folder", ",", "file", ")", ")", "as", "reader", ":", "\n", "                ", "writer", ".", "write", "(", "reader", ".", "read", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.download_from_hdfs.extract": [[27, 39], ["os.listdir", "os.listdir", "os.path.join", "os.path.join", "logging.info", "os.path.join.endswith", "zipfile.ZipFile", "zf.extractall", "os.path.join"], "function", ["None"], ["", "", "", "", "def", "extract", "(", "keyword", ")", ":", "\n", "    ", "root_dir", "=", "\"data\"", "\n", "for", "folder", "in", "os", ".", "listdir", "(", "root_dir", ")", ":", "\n", "        ", "if", "keyword", "not", "in", "folder", ":", "\n", "            ", "continue", "\n", "", "for", "filename", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "root_dir", ",", "folder", ")", ")", ":", "\n", "            ", "target_path", "=", "os", ".", "path", ".", "join", "(", "root_dir", ",", "folder", ",", "filename", ")", "\n", "if", "not", "target_path", ".", "endswith", "(", "\".zip\"", ")", ":", "\n", "                ", "continue", "\n", "", "logging", ".", "info", "(", "\"Extracting zipfile: {}\"", ".", "format", "(", "target_path", ")", ")", "\n", "with", "zipfile", ".", "ZipFile", "(", "target_path", ")", "as", "zf", ":", "\n", "                ", "zf", ".", "extractall", "(", "os", ".", "path", ".", "join", "(", "root_dir", ",", "folder", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.typesetting.tuple_four_display": [[7, 10], ["None"], "function", ["None"], ["def", "tuple_four_display", "(", "tp", ")", ":", "\n", "    ", "ret", "=", "\"${:.4f} _{{\\\\pm {:.4f}}}$\"", ".", "format", "(", "tp", "[", "0", "]", ",", "tp", "[", "1", "]", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.typesetting.tuple_two_display": [[12, 14], ["None"], "function", ["None"], ["", "def", "tuple_two_display", "(", "tp", ")", ":", "\n", "    ", "return", "\"${:.4f}$ & ${:.4f}$ & ${:.4f}$\"", ".", "format", "(", "tp", "[", "0", "]", ",", "tp", "[", "2", "]", ",", "tp", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.__init__": [[12, 14], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_clusters", ")", ":", "\n", "        ", "self", ".", "n_clusters", "=", "n_clusters", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.fit_predict": [[15, 35], ["len", "numpy.zeros", "enumerate", "len", "networkx.Graph", "networkx.Graph.add_nodes_from", "range", "networkx.algorithms.max_weight_matching", "sorted", "len", "ValueError", "range", "list", "len", "range", "list", "range", "len", "sum", "networkx.Graph.add_edge", "list", "len"], "methods", ["None"], ["", "def", "fit_predict", "(", "self", ",", "X", ")", ":", "\n", "        ", "total", "=", "len", "(", "X", ")", "\n", "grouping", "=", "[", "{", "i", "}", "for", "i", "in", "range", "(", "total", ")", "]", "\n", "while", "len", "(", "grouping", ")", ">", "self", ".", "n_clusters", ":", "\n", "            ", "gx", "=", "networkx", ".", "Graph", "(", ")", "\n", "gx", ".", "add_nodes_from", "(", "list", "(", "range", "(", "len", "(", "grouping", ")", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "grouping", ")", ")", ":", "\n", "                ", "for", "j", "in", "range", "(", "i", "+", "1", ",", "len", "(", "grouping", ")", ")", ":", "\n", "                    ", "w", "=", "sum", "(", "[", "X", "[", "x", "]", "[", "y", "]", "+", "1", "for", "x", "in", "grouping", "[", "i", "]", "for", "y", "in", "grouping", "[", "j", "]", "]", ")", "\n", "gx", ".", "add_edge", "(", "i", ",", "j", ",", "weight", "=", "w", "+", "1", ")", "\n", "", "", "ret", "=", "networkx", ".", "algorithms", ".", "max_weight_matching", "(", "gx", ",", "maxcardinality", "=", "True", ")", "\n", "ret", "=", "sorted", "(", "list", "(", "ret", ")", ")", "\n", "new_grouping", "=", "[", "grouping", "[", "a", "]", "|", "grouping", "[", "b", "]", "for", "a", ",", "b", "in", "ret", "]", "\n", "grouping", "=", "new_grouping", "\n", "", "if", "len", "(", "grouping", ")", "!=", "self", ".", "n_clusters", ":", "\n", "            ", "raise", "ValueError", "(", "\"Cannot satisfy need: splitting to {} clusters.\"", ".", "format", "(", "self", ".", "n_clusters", ")", ")", "\n", "", "ret", "=", "np", ".", "zeros", "(", "total", ",", "dtype", "=", "np", ".", "int", ")", "\n", "for", "i", ",", "g", "in", "enumerate", "(", "grouping", ")", ":", "\n", "            ", "ret", "[", "list", "(", "g", ")", "]", "=", "i", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.main": [[37, 68], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "numpy.loadtxt", "numpy.loadtxt", "numpy.zeros", "sorted", "print", "os.path.join", "os.path.join", "numpy.max", "len", "list", "ts_clustering.MatchingClustering", "visualize.heatmap", "np.zeros.tolist", "range", "numpy.where", "len", "print", "len", "ts_clustering.MatchingClustering.fit_predict", "print", "range", "numpy.sum", "numpy.arange", "os.path.join", "len", "model.fit_predict.tolist"], "function", ["home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.visualize.heatmap", "home.repos.pwc.inspect_result.ultmaster_deeper-insights-weight-sharing.figures.ts_clustering.MatchingClustering.fit_predict"], ["", "", "def", "main", "(", ")", ":", "\n", "    ", "parser", "=", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"dir\"", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "\"--num_classes\"", ",", "default", "=", "2", ",", "type", "=", "int", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "cor_matrix", "=", "np", ".", "loadtxt", "(", "os", ".", "path", ".", "join", "(", "args", ".", "dir", ",", "\"corr_heatmap.txt\"", ")", ")", "\n", "grouping", "=", "np", ".", "loadtxt", "(", "os", ".", "path", ".", "join", "(", "args", ".", "dir", ",", "\"group_info.txt\"", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "group_number", "=", "np", ".", "max", "(", "grouping", ")", "+", "1", "\n", "result_grouping", "=", "np", ".", "zeros", "(", "len", "(", "grouping", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "\n", "base", "=", "0", "\n", "for", "i", "in", "sorted", "(", "list", "(", "range", "(", "group_number", ")", ")", ",", "key", "=", "lambda", "d", ":", "np", ".", "sum", "(", "grouping", "==", "d", ")", ")", ":", "\n", "        ", "cur_index", "=", "np", ".", "where", "(", "grouping", "==", "i", ")", "[", "0", "]", "\n", "cor_matrix_grp", "=", "cor_matrix", "[", "cur_index", "]", "[", ":", ",", "cur_index", "]", "\n", "# print(cor_matrix_grp)", "\n", "model", "=", "MatchingClustering", "(", "n_clusters", "=", "args", ".", "num_classes", ")", "\n", "if", "len", "(", "cur_index", ")", "<", "args", ".", "num_classes", ":", "\n", "            ", "result_grouping", "[", "cur_index", "]", "=", "np", ".", "arange", "(", "len", "(", "cur_index", ")", ")", "+", "base", "\n", "print", "(", "\"Group {}: Too small\"", ")", "\n", "base", "+=", "len", "(", "cur_index", ")", "\n", "", "else", ":", "\n", "            ", "predict", "=", "model", ".", "fit_predict", "(", "1", "-", "cor_matrix_grp", ")", "\n", "print", "(", "\"Group {}: {}\"", ".", "format", "(", "i", ",", "predict", ".", "tolist", "(", ")", ")", ")", "\n", "for", "j", "in", "range", "(", "args", ".", "num_classes", ")", ":", "\n", "                ", "result_grouping", "[", "cur_index", "[", "predict", "==", "j", "]", "]", "=", "base", "+", "j", "\n", "", "base", "+=", "args", ".", "num_classes", "\n", "", "heatmap", "(", "cor_matrix_grp", ",", "filepath", "=", "os", ".", "path", ".", "join", "(", "\"debug\"", ",", "\"heatmap_{}\"", ".", "format", "(", "i", ")", ")", ")", "\n", "\n", "", "print", "(", "result_grouping", ".", "tolist", "(", ")", ")", "\n", "\n"]]}