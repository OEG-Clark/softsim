{"home.repos.pwc.inspect_result.guanhuaw_Bjork.None.demo.forward": [[1, 22], ["demo..netSampling", "NuSense_om", "NuSenseFrame_om", "Frame_inv", "Frame_inv", "range", "demo..netG_I", "torch.view_as_real().permute", "torch.max", "torch.randn_like", "torch.abs", "torch.view_as_real", "torch.view_as_complex().unsqueeze", "demo..squeeze", "torch.view_as_complex", "demo..permute().contiguous", "demo..permute"], "function", ["None"], ["def", "forward", "(", "self", ")", ":", "\n", "# ktral: [nbatch, ndim, num_points]", "\n", "# grad/slew: [nbatch, ndim, nshot, nfe]", "\n", "    ", "self", ".", "ktraj", ",", "self", ".", "grad", ",", "self", ".", "slew", "=", "self", ".", "netSampling", "(", "1", ")", "\n", "A", "=", "NuSense_om", "(", "self", ".", "smap", ",", "self", ".", "ktraj", ",", "grid_size", "=", "self", ".", "opt", ".", "grid_size", ",", "norm", "=", "'ortho'", ",", "numpoints", "=", "self", ".", "opt", ".", "numpoints", ")", "\n", "ATA", "=", "NuSenseFrame_om", "(", "self", ".", "smap", ",", "self", ".", "ktraj", ",", "grid_size", "=", "self", ".", "opt", ".", "grid_size", ",", "norm", "=", "'ortho'", ",", "numpoints", "=", "self", ".", "opt", ".", "numpoints", ")", "\n", "self", ".", "kunder", "=", "A", "*", "self", ".", "Ireal", "\n", "if", "self", ".", "isTrain", ":", "\n", "        ", "self", ".", "kunder", "=", "self", ".", "kunder", "+", "self", ".", "opt", ".", "noise_level", "*", "torch", ".", "randn_like", "(", "self", ".", "kunder", ")", "*", "torch", ".", "max", "(", "\n", "torch", ".", "abs", "(", "self", ".", "kunder", ")", ")", "\n", "", "self", ".", "Iunder", "=", "A", ".", "H", "*", "self", ".", "kunder", "\n", "self", ".", "P0", "=", "Frame_inv", "(", "self", ".", "smap", ",", "self", ".", "ktraj", ",", "0.001", ",", "self", ".", "opt", ".", "MODLtol", ",", "max_iter", "=", "12", ",", "norm", "=", "'ortho'", ",", "\n", "numpoints", "=", "6", ",", "grid_size", "=", "2", ",", "alert", "=", "False", ")", "\n", "self", ".", "P1", "=", "Frame_inv", "(", "self", ".", "smap", ",", "self", ".", "ktraj", ",", "self", ".", "opt", ".", "MODLLambda", ",", "self", ".", "opt", ".", "MODLtol", ",", "max_iter", "=", "8", ",", "norm", "=", "'ortho'", ",", "\n", "numpoints", "=", "6", ",", "grid_size", "=", "2", ",", "alert", "=", "False", ")", "\n", "# Initializing estimiation with qwls", "\n", "Iinit", "=", "self", ".", "P0", "*", "self", ".", "Iunder", "\n", "Iiter", "=", "Init", "\n", "for", "ii", "in", "range", "(", "self", ".", "opt", ".", "num_blocks", ")", ":", "\n", "        ", "Iiter", "=", "self", ".", "netG_I", "(", "torch", ".", "view_as_real", "(", "Iiter", ".", "squeeze", "(", "1", ")", ")", ".", "permute", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "Iiter", "=", "self", ".", "P1", "*", "(", "self", ".", "Iunder", "+", "self", ".", "opt", ".", "MODLLambda", "*", "torch", ".", "view_as_complex", "(", "Iiter", ".", "permute", "(", "0", ",", "2", ",", "3", ",", "1", ")", ".", "contiguous", "(", ")", ")", ".", "unsqueeze", "(", "1", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.sys_op.NuSense_om.__init__": [[19, 97], ["mirtorch.linear.NuSense", "mirtorch.linear.LinearMap.__init__", "tuple", "tuple", "ctx.save_for_backward", "torch.zeros_like", "range", "ctx.save_for_backward", "torch.zeros_like", "range", "len", "torch.sum", "len", "torch.sum", "len", "torch.arange().expand().to", "len", "torch.arange().expand().permute().to", "len", "torch.arange().expand().to", "torch.conj().mul_", "torch.sum", "len", "torch.arange().expand().to", "len", "torch.arange().expand().permute().to", "len", "torch.arange().expand().to", "Adiagrx.mul_", "torch.sum", "r.permute.permute.permute", "r.permute.permute.permute", "r.permute.permute.permute", "r.permute.permute.permute", "r.permute.permute.permute", "r.permute.permute.permute", "torch.arange().expand", "torch.arange().expand().permute", "torch.arange().expand", "torch.conj", "torch.arange().expand", "torch.arange().expand().permute", "torch.arange().expand", "torch.conj", "AFxr.mul_", "torch.arange", "torch.arange().expand", "torch.arange", "torch.arange", "torch.arange().expand", "torch.arange", "torch.arange", "torch.arange"], "methods", ["home.repos.pwc.inspect_result.guanhuaw_Bjork.None.bspline.SamplingLayerBspline2D.__init__"], ["def", "__init__", "(", "self", ",", "\n", "smaps", ":", "Tensor", ",", "\n", "traj", ":", "Tensor", ",", "\n", "norm", "=", "'ortho'", ",", "\n", "numpoints", ":", "Union", "[", "int", ",", "Sequence", "[", "int", "]", "]", "=", "6", ",", "\n", "grid_size", ":", "float", "=", "2", ")", ":", "\n", "        ", "self", ".", "traj", "=", "traj", "\n", "self", ".", "A", "=", "NuSense", "(", "smaps", ",", "traj", ",", "norm", "=", "norm", ",", "batchmode", "=", "True", ",", "numpoints", "=", "numpoints", ",", "grid_size", "=", "grid_size", ",", "\n", "sequential", "=", "False", ")", "\n", "im_size", "=", "smaps", ".", "shape", "[", "2", ":", "]", "\n", "\n", "class", "Aforward", "(", "torch", ".", "autograd", ".", "Function", ")", ":", "\n", "            ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ",", "ktraj", ",", "A", ")", ":", "\n", "                ", "ctx", ".", "save_for_backward", "(", "ktraj", ",", "x", ")", "\n", "ctx", ".", "A", "=", "A", "\n", "return", "A", "*", "x", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "y", ")", ":", "\n", "# use in-plane opeators", "\n", "                ", "ktraj", ",", "xforward", "=", "ctx", ".", "saved_tensors", "\n", "dldom", "=", "torch", ".", "zeros_like", "(", "ktraj", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "im_size", ")", ")", ":", "\n", "                    ", "if", "len", "(", "im_size", ")", "==", "1", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "-", "1", ")", ".", "to", "(", "device", "=", "y", ".", "device", ")", "\n", "", "if", "len", "(", "im_size", ")", "==", "2", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "1", ",", "3", "-", "i", ",", "2", "+", "i", ")", ".", "to", "(", "device", "=", "y", ".", "device", ")", "\n", "", "if", "len", "(", "im_size", ")", "==", "3", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "1", ",", "1", ",", "-", "1", ")", ".", "to", "(", "device", "=", "y", ".", "device", ")", "\n", "if", "i", "==", "0", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "3", ")", "\n", "", "if", "i", "==", "1", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "2", ",", "4", ",", "3", ")", "\n", "", "if", "i", "==", "2", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "2", ",", "3", ",", "4", ")", "\n", "", "", "xrd", "=", "xforward", "*", "r", "\n", "AFxr", "=", "ctx", ".", "A", "*", "xrd", "\n", "del", "xrd", "\n", "dldwd", "=", "(", "torch", ".", "conj", "(", "AFxr", ".", "mul_", "(", "0", "-", "1j", ")", ")", ".", "mul_", "(", "y", ")", ")", ".", "real", "\n", "dldom", "[", ":", ",", "i", ",", ":", "]", "=", "torch", ".", "sum", "(", "torch", ".", "sum", "(", "dldwd", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "", "return", "ctx", ".", "A", ".", "H", "*", "y", ",", "dldom", ",", "None", "\n", "\n", "", "", "self", ".", "forward_op", "=", "Aforward", ".", "apply", "\n", "\n", "class", "Aadjoint", "(", "torch", ".", "autograd", ".", "Function", ")", ":", "\n", "            ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "y", ",", "ktraj", ",", "A", ")", ":", "\n", "                ", "ctx", ".", "save_for_backward", "(", "ktraj", ",", "y", ")", "\n", "ctx", ".", "A", "=", "A", "\n", "return", "A", ".", "H", "*", "y", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "x", ")", ":", "\n", "                ", "ktraj", ",", "yforward", "=", "ctx", ".", "saved_tensors", "\n", "dldom", "=", "torch", ".", "zeros_like", "(", "ktraj", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "im_size", ")", ")", ":", "\n", "                    ", "if", "len", "(", "im_size", ")", "==", "1", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "-", "1", ")", ".", "to", "(", "device", "=", "x", ".", "device", ")", "\n", "", "if", "len", "(", "im_size", ")", "==", "2", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "1", ",", "3", "-", "i", ",", "2", "+", "i", ")", ".", "to", "(", "device", "=", "x", ".", "device", ")", "\n", "", "if", "len", "(", "im_size", ")", "==", "3", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "1", ",", "1", ",", "-", "1", ")", ".", "to", "(", "device", "=", "x", ".", "device", ")", "\n", "if", "i", "==", "0", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "3", ")", "\n", "", "if", "i", "==", "1", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "2", ",", "4", ",", "3", ")", "\n", "", "if", "i", "==", "2", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "2", ",", "3", ",", "4", ")", "\n", "", "", "diagrx", "=", "x", "*", "r", "\n", "Adiagrx", "=", "ctx", ".", "A", "*", "diagrx", "\n", "del", "diagrx", "\n", "dldwd", "=", "(", "Adiagrx", ".", "mul_", "(", "torch", ".", "conj", "(", "yforward", ")", "*", "(", "0", "-", "1j", ")", ")", ")", ".", "real", "\n", "dldom", "[", ":", ",", "i", ",", ":", "]", "=", "torch", ".", "sum", "(", "torch", ".", "sum", "(", "dldwd", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "", "return", "ctx", ".", "A", "*", "x", ",", "dldom", ",", "None", "\n", "\n", "", "", "self", ".", "adjoint_op", "=", "Aadjoint", ".", "apply", "\n", "super", "(", "NuSense_om", ",", "self", ")", ".", "__init__", "(", "tuple", "(", "self", ".", "A", ".", "size_in", ")", ",", "tuple", "(", "self", ".", "A", ".", "size_out", ")", ",", "device", "=", "smaps", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.sys_op.NuSense_om._apply": [[98, 100], ["sys_op.NuSense_om.forward_op"], "methods", ["None"], ["", "def", "_apply", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "forward_op", "(", "x", ",", "self", ".", "traj", ",", "self", ".", "A", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.sys_op.NuSense_om._apply_adjoint": [[101, 103], ["sys_op.NuSense_om.adjoint_op"], "methods", ["None"], ["", "def", "_apply_adjoint", "(", "self", ",", "y", ")", ":", "\n", "        ", "return", "self", ".", "adjoint_op", "(", "y", ",", "self", ".", "traj", ",", "self", ".", "A", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.sys_op.NuSenseFrame_om.__init__": [[115, 168], ["mirtorch.linear.NuSense", "mirtorch.linear.NuSenseFrame", "mirtorch.linear.LinearMap.__init__", "tuple", "tuple", "ctx.save_for_backward", "torch.zeros_like", "range", "len", "torch.sum", "len", "torch.arange().expand().to", "len", "torch.arange().expand().permute().to", "len", "torch.arange().expand().to", "torch.conj().mul_().mul_().add_", "torch.sum", "r.permute.permute.permute", "r.permute.permute.permute", "r.permute.permute.permute", "Ardx.mul_().mul_", "torch.arange().expand", "torch.arange().expand().permute", "torch.arange().expand", "torch.conj().mul_().mul_", "Ardx.mul_", "torch.arange", "torch.arange().expand", "torch.arange", "torch.conj().mul_", "torch.conj", "torch.arange", "torch.conj"], "methods", ["home.repos.pwc.inspect_result.guanhuaw_Bjork.None.bspline.SamplingLayerBspline2D.__init__"], ["def", "__init__", "(", "self", ",", "\n", "smaps", ":", "Tensor", ",", "\n", "traj", ":", "Tensor", ",", "\n", "norm", "=", "'ortho'", ",", "\n", "numpoints", ":", "Union", "[", "int", ",", "Sequence", "[", "int", "]", "]", "=", "6", ",", "\n", "grid_size", ":", "float", "=", "2", ")", ":", "\n", "        ", "self", ".", "traj", "=", "traj", "\n", "batchmode", "=", "True", "\n", "self", ".", "A", "=", "NuSense", "(", "smaps", ",", "traj", ",", "norm", "=", "norm", ",", "batchmode", "=", "True", ",", "numpoints", "=", "numpoints", ",", "grid_size", "=", "grid_size", ")", "\n", "# self.AHA = self.A.H*self.A", "\n", "self", ".", "AHA", "=", "NuSenseFrame", "(", "smaps", ",", "traj", ",", "norm", "=", "norm", ",", "batchmode", "=", "batchmode", ",", "numpoints", "=", "numpoints", ",", "grid_size", "=", "grid_size", ")", "\n", "im_size", "=", "smaps", ".", "shape", "[", "2", ":", "]", "\n", "\n", "class", "Aforward", "(", "torch", ".", "autograd", ".", "Function", ")", ":", "\n", "            ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "x", ",", "ktraj", ",", "AHA", ",", "A", ")", ":", "\n", "                ", "ctx", ".", "save_for_backward", "(", "ktraj", ",", "x", ")", "\n", "ctx", ".", "AHA", "=", "AHA", "\n", "ctx", ".", "A", "=", "A", "\n", "# print('allocate forward frame', torch.cuda.max_memory_allocated())", "\n", "return", "AHA", "*", "x", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "dx", ")", ":", "\n", "                ", "ktraj", ",", "xforward", "=", "ctx", ".", "saved_tensors", "\n", "dldom", "=", "torch", ".", "zeros_like", "(", "ktraj", ")", "\n", "Ax", "=", "ctx", ".", "A", "*", "xforward", "\n", "Adx", "=", "ctx", ".", "A", "*", "dx", "\n", "for", "i", "in", "range", "(", "len", "(", "im_size", ")", ")", ":", "\n", "                    ", "if", "len", "(", "im_size", ")", "==", "1", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "-", "1", ")", ".", "to", "(", "device", "=", "dx", ".", "device", ")", "\n", "", "if", "len", "(", "im_size", ")", "==", "2", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "1", ",", "3", "-", "i", ",", "2", "+", "i", ")", ".", "to", "(", "\n", "device", "=", "dx", ".", "device", ")", "\n", "", "if", "len", "(", "im_size", ")", "==", "3", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "1", ",", "1", ",", "-", "1", ")", ".", "to", "(", "device", "=", "dx", ".", "device", ")", "\n", "if", "i", "==", "0", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "3", ")", "\n", "", "if", "i", "==", "1", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "2", ",", "4", ",", "3", ")", "\n", "", "if", "i", "==", "2", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "2", ",", "3", ",", "4", ")", "\n", "", "", "xr", "=", "xforward", "*", "r", "\n", "Axr", "=", "ctx", ".", "A", "*", "xr", "\n", "Ardx", "=", "ctx", ".", "A", "*", "(", "r", "*", "dx", ")", "\n", "del", "xr", "\n", "dldwd", "=", "(", "torch", ".", "conj", "(", "Axr", ")", ".", "mul_", "(", "Adx", ")", ".", "mul_", "(", "0", "+", "1j", ")", ".", "add_", "(", "Ardx", ".", "mul_", "(", "torch", ".", "conj", "(", "Ax", ")", ")", ".", "mul_", "(", "(", "0", "-", "1j", ")", ")", ")", ")", ".", "real", "\n", "dldom", "[", ":", ",", "i", ",", ":", "]", "=", "torch", ".", "sum", "(", "torch", ".", "sum", "(", "dldwd", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "", "return", "ctx", ".", "AHA", "*", "dx", ",", "dldom", ",", "None", ",", "None", "\n", "\n", "", "", "self", ".", "forward_op", "=", "Aforward", ".", "apply", "\n", "\n", "super", "(", "NuSenseFrame_om", ",", "self", ")", ".", "__init__", "(", "tuple", "(", "self", ".", "A", ".", "size_in", ")", ",", "tuple", "(", "self", ".", "A", ".", "size_in", ")", ",", "device", "=", "smaps", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.sys_op.NuSenseFrame_om._apply": [[169, 171], ["sys_op.NuSenseFrame_om.forward_op"], "methods", ["None"], ["", "def", "_apply", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "forward_op", "(", "x", ",", "self", ".", "traj", ",", "self", ".", "AHA", ",", "self", ".", "A", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.sys_op.NuSenseFrame_om._apply_adjoint": [[172, 174], ["sys_op.NuSenseFrame_om.forward_op"], "methods", ["None"], ["", "def", "_apply_adjoint", "(", "self", ",", "y", ")", ":", "\n", "        ", "return", "self", ".", "forward_op", "(", "y", ",", "self", ".", "traj", ",", "self", ".", "AHA", ",", "self", ".", "A", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.sys_op.Frame_inv.__init__": [[186, 252], ["mirtorch.linear.NuSense", "mirtorch.linear.Identity", "mirtorch.alg.CG", "mirtorch.linear.LinearMap.__init__", "mirtorch.linear.NuSenseFrame", "tuple", "tuple", "solver_forward.run", "ctx.save_for_backward", "torch.zeros_like", "ctx.solver_forward.run", "range", "torch.zeros_like", "len", "torch.sum", "len", "torch.arange().expand().to", "len", "torch.arange().expand().permute().to", "len", "torch.arange().expand().to", "torch.conj().mul_().mul_().add_", "torch.sum", "r.permute.permute.permute", "r.permute.permute.permute", "r.permute.permute.permute", "APdxr.mul_().mul_", "torch.arange().expand", "torch.arange().expand().permute", "torch.arange().expand", "torch.conj().mul_().mul_", "APdxr.mul_", "torch.arange", "torch.arange().expand", "torch.arange", "torch.conj().mul_", "torch.conj", "torch.arange", "torch.conj"], "methods", ["home.repos.pwc.inspect_result.guanhuaw_Bjork.None.bspline.SamplingLayerBspline2D.__init__"], ["def", "__init__", "(", "self", ",", "\n", "smaps", ":", "Tensor", ",", "\n", "traj", ":", "Tensor", ",", "\n", "lambd", ":", "float", ",", "\n", "tol", ":", "float", ",", "\n", "max_iter", "=", "100", ",", "\n", "norm", "=", "'ortho'", ",", "\n", "numpoints", ":", "Union", "[", "int", ",", "Sequence", "[", "int", "]", "]", "=", "6", ",", "\n", "grid_size", ":", "float", "=", "2", ",", "\n", "alert", "=", "False", ",", "\n", "x0", "=", "None", "\n", ")", ":", "\n", "        ", "self", ".", "traj", "=", "traj", "\n", "batchmode", "=", "True", "\n", "self", ".", "A", "=", "NuSense", "(", "smaps", ",", "traj", ",", "norm", "=", "norm", ",", "batchmode", "=", "batchmode", ",", "numpoints", "=", "numpoints", ",", "grid_size", "=", "grid_size", ")", "\n", "im_size", "=", "smaps", ".", "shape", "[", "2", ":", "]", "\n", "I", "=", "Identity", "(", "self", ".", "A", ".", "size_in", ")", "\n", "# self.AHA = self.A.H*self.A + lambd * I", "\n", "self", ".", "AHA", "=", "NuSenseFrame", "(", "smaps", ",", "traj", ",", "norm", "=", "norm", ",", "batchmode", "=", "batchmode", ",", "numpoints", "=", "numpoints", ",", "grid_size", "=", "grid_size", ")", "+", "lambd", "*", "I", "\n", "self", ".", "x0", "=", "x0", "\n", "self", ".", "solver_forward", "=", "CG", "(", "self", ".", "AHA", ",", "max_iter", "=", "max_iter", ",", "tol", "=", "tol", ",", "alert", "=", "alert", ")", "\n", "\n", "class", "Aforward", "(", "torch", ".", "autograd", ".", "Function", ")", ":", "\n", "            ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "b", ",", "ktraj", ",", "A", ",", "solver_forward", ",", "x0", ")", ":", "\n", "# print('allocate before forward CG', torch.cuda.memory_allocated())", "\n", "                ", "Pb", "=", "solver_forward", ".", "run", "(", "x0", ",", "b", ")", "\n", "ctx", ".", "A", "=", "A", "\n", "ctx", ".", "save_for_backward", "(", "ktraj", ",", "b", ",", "Pb", ")", "\n", "ctx", ".", "solver_forward", "=", "solver_forward", "\n", "return", "Pb", "\n", "\n", "", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "dx", ")", ":", "\n", "                ", "ktraj", ",", "b", ",", "Pb", "=", "ctx", ".", "saved_tensors", "\n", "dldom", "=", "torch", ".", "zeros_like", "(", "ktraj", ")", "\n", "Pdx", "=", "ctx", ".", "solver_forward", ".", "run", "(", "torch", ".", "zeros_like", "(", "dx", ")", ",", "dx", ")", "\n", "APb", "=", "ctx", ".", "A", "*", "Pb", "\n", "APdx", "=", "ctx", ".", "A", "*", "Pdx", "\n", "for", "i", "in", "range", "(", "len", "(", "im_size", ")", ")", ":", "\n", "                    ", "if", "len", "(", "im_size", ")", "==", "1", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "-", "1", ")", ".", "to", "(", "device", "=", "dx", ".", "device", ")", "\n", "", "if", "len", "(", "im_size", ")", "==", "2", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", ".", "permute", "(", "0", ",", "1", ",", "3", "-", "i", ",", "2", "+", "i", ")", ".", "to", "(", "\n", "device", "=", "dx", ".", "device", ")", "\n", "", "if", "len", "(", "im_size", ")", "==", "3", ":", "\n", "                        ", "r", "=", "torch", ".", "arange", "(", "im_size", "[", "i", "]", ")", ".", "expand", "(", "1", ",", "1", ",", "1", ",", "1", ",", "-", "1", ")", ".", "to", "(", "device", "=", "dx", ".", "device", ")", "\n", "if", "i", "==", "0", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "4", ",", "2", ",", "3", ")", "\n", "", "if", "i", "==", "1", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "2", ",", "4", ",", "3", ")", "\n", "", "if", "i", "==", "2", ":", "\n", "                            ", "r", "=", "r", ".", "permute", "(", "0", ",", "1", ",", "2", ",", "3", ",", "4", ")", "\n", "", "", "Pdxr", "=", "Pdx", "*", "r", "\n", "APdxr", "=", "ctx", ".", "A", "*", "Pdxr", "\n", "Pbr", "=", "Pb", "*", "r", "\n", "APbr", "=", "ctx", ".", "A", "*", "Pbr", "\n", "dldwd", "=", "(", "\n", "torch", ".", "conj", "(", "APbr", ")", ".", "mul_", "(", "(", "0", "-", "1j", ")", ")", ".", "mul_", "(", "APdx", ")", ".", "add_", "(", "APdxr", ".", "mul_", "(", "torch", ".", "conj", "(", "APb", ")", ")", ".", "mul_", "(", "0", "+", "1j", ")", ")", ")", ".", "real", "\n", "dldom", "[", ":", ",", "i", ",", ":", "]", "=", "torch", ".", "sum", "(", "torch", ".", "sum", "(", "dldwd", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "\n", "\n", "", "return", "Pdx", ",", "dldom", ",", "None", ",", "None", ",", "None", "\n", "\n", "", "", "self", ".", "forward_op", "=", "Aforward", ".", "apply", "\n", "\n", "super", "(", "Frame_inv", ",", "self", ")", ".", "__init__", "(", "tuple", "(", "self", ".", "A", ".", "size_in", ")", ",", "tuple", "(", "self", ".", "A", ".", "size_in", ")", ",", "device", "=", "smaps", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.sys_op.Frame_inv._apply": [[253, 259], ["sys_op.Frame_inv.forward_op", "torch.clone", "x.detach"], "methods", ["None"], ["", "def", "_apply", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "x0", "is", "None", ":", "\n", "            ", "x0", "=", "torch", ".", "clone", "(", "x", ".", "detach", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "x0", "=", "self", ".", "x0", "\n", "", "return", "self", ".", "forward_op", "(", "x", ",", "self", ".", "traj", ",", "self", ".", "A", ",", "self", ".", "solver_forward", ",", "x0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.sys_op.Frame_inv._apply_adjoint": [[260, 266], ["sys_op.Frame_inv.forward_op", "torch.clone", "y.detach"], "methods", ["None"], ["", "def", "_apply_adjoint", "(", "self", ",", "y", ")", ":", "\n", "        ", "if", "self", ".", "x0", "is", "None", ":", "\n", "            ", "x0", "=", "torch", ".", "clone", "(", "y", ".", "detach", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "x0", "=", "self", ".", "x0", "\n", "", "return", "self", ".", "forward_op", "(", "y", ",", "self", ".", "traj", ",", "self", ".", "A", ",", "self", ".", "solver_forward", ",", "x0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.bspline.SamplingLayerBspline2D.__init__": [[65, 107], ["torch.Module.__init__", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "np.load", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "bspline.bspline2_1ndsynth", "bspline.SamplingLayerBspline2D.B.to", "bspline.SamplingLayerBspline2D.dB1.to", "bspline.SamplingLayerBspline2D.dB2.to", "bspline.SamplingLayerBspline2D.B.permute().cpu().numpy", "len", "np.reshape", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "range", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "range", "bspline.SamplingLayerBspline2D.B.permute().cpu", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "np.zeros", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "bspline.SamplingLayerBspline2D.B.permute", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "np.linalg.lstsq"], "methods", ["home.repos.pwc.inspect_result.guanhuaw_Bjork.None.bspline.SamplingLayerBspline2D.__init__", "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.bspline.bspline2_1ndsynth"], ["def", "__init__", "(", "self", ",", "num_shots", ",", "nfe", ",", "decim", "=", "4", ",", "gamma", "=", "4.2576e+03", ",", "dt", "=", "4e-6", ",", "res", "=", "0.1", ",", "init_traj", "=", "None", ",", "ndims", "=", "2", ",", "gpu_ids", "=", "[", "]", ",", "\n", "ext", "=", "40", ")", ":", "\n", "        ", "super", "(", "SamplingLayerBspline2D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "nfe", "=", "nfe", "\n", "self", ".", "num_kernels", "=", "nfe", "//", "decim", "\n", "self", ".", "ndims", "=", "ndims", "\n", "self", ".", "num_shots", "=", "num_shots", "\n", "self", ".", "coeff", "=", "torch", ".", "ones", "(", "self", ".", "ndims", ",", "num_shots", ",", "self", ".", "num_kernels", ")", ".", "to", "(", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "kmax", "=", "1", "/", "res", "\n", "self", ".", "gamma", "=", "gamma", "\n", "self", ".", "dt", "=", "dt", "\n", "self", ".", "decim", "=", "decim", "\n", "\n", "if", "decim", ">", "1", ":", "\n", "# zero-paddind length", "\n", "            ", "self", ".", "ext", "=", "ext", "\n", "# build B:", "\n", "self", ".", "B", ",", "self", ".", "dB1", ",", "self", ".", "dB2", "=", "bspline2_1ndsynth", "(", "torch", ".", "ones", "(", "self", ".", "num_kernels", ")", ",", "nfe", ",", "dt", ",", "gamma", ",", "self", ".", "ext", ")", "\n", "self", ".", "B", "=", "self", ".", "B", ".", "to", "(", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "dB1", "=", "self", ".", "dB1", ".", "to", "(", "gpu_ids", "[", "0", "]", ")", "\n", "self", ".", "dB2", "=", "self", ".", "dB2", ".", "to", "(", "gpu_ids", "[", "0", "]", ")", "\n", "B", "=", "self", ".", "B", ".", "permute", "(", "1", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "# The shape of traj_ref should be [ndim, nshot, npoints]", "\n", "# Load the traj from pre-computed numpy file", "\n", "", "traj_ref", "=", "np", ".", "load", "(", "init_traj", ")", "\n", "if", "len", "(", "traj_ref", ".", "shape", ")", "==", "2", ":", "\n", "            ", "traj_ref", "=", "np", ".", "reshape", "(", "traj_ref", ",", "(", "self", ".", "ndims", ",", "self", ".", "num_shots", ",", "self", ".", "nfe", ")", ")", "\n", "", "traj_ref", "=", "traj_ref", "/", "np", ".", "pi", "*", "self", ".", "kmax", "/", "2", "\n", "# No parameterization", "\n", "if", "decim", "==", "1", ":", "\n", "            ", "self", ".", "coeff", "=", "torch", ".", "tensor", "(", "traj_ref", ")", ".", "to", "(", "dtype", "=", "self", ".", "coeff", ".", "dtype", ",", "device", "=", "gpu_ids", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "            ", "for", "ii", "in", "range", "(", "self", ".", "ndims", ")", ":", "\n", "                ", "for", "jj", "in", "range", "(", "self", ".", "num_shots", ")", ":", "\n", "                    ", "traj_ref_i", "=", "np", ".", "zeros", "(", "nfe", "+", "self", ".", "ext", ")", "\n", "traj_ref_i", "[", "0", ":", "self", ".", "ext", "//", "2", "]", "=", "traj_ref", "[", "ii", ",", "jj", ",", "0", "]", "\n", "traj_ref_i", "[", "nfe", "+", "self", ".", "ext", "//", "2", ":", "nfe", "+", "self", ".", "ext", "]", "=", "traj_ref", "[", "ii", ",", "jj", ",", "nfe", "-", "1", "]", "\n", "traj_ref_i", "[", "self", ".", "ext", "//", "2", ":", "nfe", "+", "self", ".", "ext", "//", "2", "]", "=", "traj_ref", "[", "ii", ",", "jj", ",", ":", "]", "\n", "self", ".", "coeff", "[", "ii", ",", "jj", ",", ":", "]", "=", "torch", ".", "tensor", "(", "np", ".", "linalg", ".", "lstsq", "(", "B", ",", "traj_ref_i", ")", "[", "0", "]", ")", ".", "to", "(", "\n", "dtype", "=", "self", ".", "coeff", ".", "dtype", ",", "device", "=", "self", ".", "coeff", ".", "device", ")", "\n", "", "", "", "self", ".", "coeff", "=", "torch", ".", "nn", ".", "Parameter", "(", "self", ".", "coeff", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.bspline.SamplingLayerBspline2D.forward": [[108, 125], ["torch.reshape().unsqueeze", "torch.reshape().unsqueeze", "torch.reshape().unsqueeze", "torch.reshape().unsqueeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "_", ")", ":", "\n", "# Extract the locations for maximum gradient and slew rate", "\n", "        ", "if", "self", ".", "decim", "==", "1", ":", "\n", "            ", "self", ".", "traj", "=", "self", ".", "coeff", "*", "1", "\n", "self", ".", "gradient", "=", "(", "self", ".", "traj", "[", ":", ",", ":", ",", ":", "-", "1", "]", "-", "self", ".", "traj", "[", ":", ",", ":", ",", "1", ":", "]", ")", "/", "self", ".", "gamma", "/", "self", ".", "dt", "\n", "self", ".", "slew", "=", "(", "self", ".", "gradient", "[", ":", ",", ":", ",", ":", "-", "1", "]", "-", "self", ".", "gradient", "[", ":", ",", ":", ",", "1", ":", "]", ")", "/", "self", ".", "dt", "\n", "", "else", ":", "\n", "            ", "self", ".", "traj", "=", "torch", ".", "matmul", "(", "self", ".", "coeff", ",", "self", ".", "B", ")", "[", ":", ",", ":", ",", "self", ".", "ext", "//", "2", ":", "self", ".", "nfe", "+", "self", ".", "ext", "//", "2", "]", "\n", "self", ".", "gradient", "=", "torch", ".", "matmul", "(", "self", ".", "coeff", ",", "self", ".", "dB1", ")", "\n", "self", ".", "slew", "=", "torch", ".", "matmul", "(", "self", ".", "coeff", ",", "self", ".", "dB2", ")", "\n", "\n", "\n", "", "self", ".", "traj", "=", "torch", ".", "reshape", "(", "self", ".", "traj", ",", "(", "self", ".", "ndims", ",", "self", ".", "num_shots", "*", "self", ".", "nfe", ")", ")", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "# transfer trajectory to om (normalization, between -pi to pi)", "\n", "self", ".", "traj", "=", "self", ".", "traj", "/", "self", ".", "kmax", "*", "2", "*", "np", ".", "pi", "\n", "return", "self", ".", "traj", ",", "self", ".", "gradient", ",", "self", ".", "slew", "\n", "\n"]], "home.repos.pwc.inspect_result.guanhuaw_Bjork.None.bspline.bspline2_1ndsynth": [[8, 43], ["torch.linspace", "torch.linspace", "torch.max", "torch.max", "torch.min", "torch.min", "torch.floor().to", "torch.floor().to", "torch.zeros", "torch.zeros", "range", "torch.max", "torch.max", "torch.min", "torch.min", "torch.max", "torch.max", "torch.min", "torch.min", "np.union1d", "torch.tensor", "torch.tensor", "np.union1d", "torch.tensor", "torch.tensor", "torch.zeros().to", "torch.zeros().to", "b1max.numpy", "b1min.numpy", "b2max.numpy", "b2min.numpy", "torch.zeros.permute", "dB1.permute", "dB2.permute", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.floor", "torch.floor", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.zeros", "torch.zeros", "bspline.bspline2_1ndsynth.b2f1"], "function", ["None"], ["def", "bspline2_1ndsynth", "(", "coeff", ",", "nfe", ",", "dt", ",", "gam", ",", "ext", ")", ":", "\n", "# Coeff: [Ncycle]: Contain coefficient. Default should be ones.", "\n", "# length: The length of time points", "\n", "    ", "num_kernels", "=", "coeff", ".", "shape", "[", "0", "]", "\n", "ti", "=", "torch", ".", "linspace", "(", "0", ",", "num_kernels", ",", "nfe", "+", "ext", ")", "\n", "ti", "=", "torch", ".", "max", "(", "ti", ",", "-", "1.5", "*", "torch", ".", "ones_like", "(", "ti", ")", ")", "\n", "ti", "=", "torch", ".", "min", "(", "ti", ",", "(", "num_kernels", "+", "0.5", ")", "*", "torch", ".", "ones_like", "(", "ti", ")", ")", "\n", "ti", "=", "ti", "+", "2", "\n", "n0", "=", "torch", ".", "floor", "(", "ti", "-", "0.5", ")", ".", "to", "(", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "# Construct the quadratic b-spline kernel", "\n", "def", "b2f0", "(", "t", ")", ":", "\n", "        ", "return", "3", "/", "4", "-", "torch", ".", "pow", "(", "t", ",", "2", ")", "\n", "", "def", "b2f1", "(", "t", ")", ":", "\n", "        ", "return", "torch", ".", "pow", "(", "torch", ".", "abs", "(", "t", ")", "-", "1.5", ",", "2", ")", "/", "2", "\n", "", "B", "=", "torch", ".", "zeros", "(", "nfe", "+", "ext", ",", "num_kernels", ")", "\n", "for", "i", "in", "range", "(", "coeff", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "coeff_i", "=", "torch", ".", "zeros", "(", "coeff", ".", "shape", "[", "0", "]", "+", "5", ")", ".", "to", "(", "dtype", "=", "coeff", ".", "dtype", ",", "device", "=", "coeff", ".", "device", ")", "\n", "coeff_i", "[", "i", "+", "2", "]", "=", "coeff", "[", "i", "]", "\n", "ft", "=", "coeff_i", "[", "0", "+", "n0", "]", "*", "b2f1", "(", "ti", "-", "n0", ")", "+", "coeff_i", "[", "1", "+", "n0", "]", "*", "b2f0", "(", "ti", "-", "(", "n0", "+", "1", ")", ")", "+", "coeff_i", "[", "2", "+", "n0", "]", "*", "b2f1", "(", "ti", "-", "(", "n0", "+", "2", ")", ")", "\n", "B", "[", ":", ",", "i", "]", "=", "ft", "\n", "\n", "", "dB1", "=", "B", "[", "ext", "//", "2", ":", "nfe", "+", "ext", "//", "2", "-", "1", ",", ":", "]", "-", "B", "[", "ext", "//", "2", "+", "1", ":", "nfe", "+", "ext", "//", "2", ",", ":", "]", "\n", "dB2", "=", "dB1", "[", "0", ":", "-", "1", ",", ":", "]", "-", "dB1", "[", "1", ":", ",", ":", "]", "\n", "(", "_", ",", "b1max", ")", "=", "torch", ".", "max", "(", "dB1", ",", "dim", "=", "0", ")", "\n", "(", "_", ",", "b1min", ")", "=", "torch", ".", "min", "(", "dB1", ",", "dim", "=", "0", ")", "\n", "(", "_", ",", "b2max", ")", "=", "torch", ".", "max", "(", "dB2", ",", "dim", "=", "0", ")", "\n", "(", "_", ",", "b2min", ")", "=", "torch", ".", "min", "(", "dB2", ",", "dim", "=", "0", ")", "\n", "b1ind", "=", "np", ".", "union1d", "(", "b1max", ".", "numpy", "(", ")", ",", "b1min", ".", "numpy", "(", ")", ")", "\n", "b1ind", "=", "torch", ".", "tensor", "(", "b1ind", ")", "\n", "b2ind", "=", "np", ".", "union1d", "(", "b2max", ".", "numpy", "(", ")", ",", "b2min", ".", "numpy", "(", ")", ")", "\n", "b2ind", "=", "torch", ".", "tensor", "(", "b2ind", ")", "\n", "dB1", "=", "dB1", "[", "b1ind", ",", ":", "]", "/", "gam", "/", "dt", "\n", "dB2", "=", "dB2", "[", "b2ind", ",", ":", "]", "/", "dt", "/", "gam", "/", "dt", "\n", "return", "B", ".", "permute", "(", "1", ",", "0", ")", ",", "dB1", ".", "permute", "(", "1", ",", "0", ")", ",", "dB2", ".", "permute", "(", "1", ",", "0", ")", "\n", "\n"]]}