{"home.repos.pwc.inspect_result.flowersteam_rl-difference-testing.None.test_RL_difference.welch_test": [[59, 93], ["data1.squeeze.squeeze", "data2.squeeze.squeeze", "scipy.ttest_ind", "print", "print", "print", "print"], "function", ["None"], ["def", "welch_test", "(", "data1", ",", "data2", ",", "alpha", "=", "0.05", ",", "tail", "=", "2", ")", ":", "\n", "    ", "\"\"\"\n    Wraps around ttest_ind function of scipy, without assuming equal variances.\n\n    Params\n    ------\n\n    - data1 (ndarray of dim 1)\n    The performance measures of Algo1.\n    - data2 (ndarray of dim 1)\n    The performance measures of Algo2.\n    - alpha (float in ]0,1[)\n    The significance level used by the Welch's t-test.\n    - tail (1 or 2)\n    Perform a one tail or two tail test.\n\n    \"\"\"", "\n", "assert", "tail", "==", "1", "or", "tail", "==", "2", ",", "\"tail should be one or two, referring to the one-sided or two-sided t-test.\"", "\n", "data1", "=", "data1", ".", "squeeze", "(", ")", "\n", "data2", "=", "data2", ".", "squeeze", "(", ")", "\n", "assert", "alpha", "<", "1", "and", "alpha", ">", "0", ",", "\"alpha should be between 0 and 1\"", "\n", "\n", "t", ",", "p", "=", "stats", ".", "ttest_ind", "(", "data1", ",", "data2", ",", "equal_var", "=", "False", ")", "\n", "\n", "if", "tail", "==", "1", ":", "\n", "        ", "alpha", "=", "2", "*", "alpha", "\n", "", "if", "p", "<=", "alpha", ":", "\n", "        ", "if", "t", "<", "0", ":", "\n", "            ", "print", "(", "\"\\n\\nResult of the Welch's t-test at level %02g: \u03bc2>\u03bc1, the test passed with p-value = %02g.\"", "%", "(", "alpha", ",", "p", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"\\n\\nResult of the Welch's t-test level %02g: \u03bc1>\u03bc2, the test passed with p-value = %02g.\"", "%", "(", "alpha", ",", "p", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"\\n\\nResults of the Welch's t-test level %02g: there is not enough evidence to prove any order relation between \u03bc1 and \u03bc2.\"", "%", "alpha", ")", "\n", "", "print", "(", "\"Welch's t-test done.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.flowersteam_rl-difference-testing.None.test_RL_difference.bootstrap_test": [[95, 128], ["data1.squeeze.squeeze", "data2.squeeze.squeeze", "bootstrapped.bootstrap_ab", "print", "numpy.sign", "numpy.sign", "print", "numpy.sign", "print", "print"], "function", ["None"], ["", "def", "bootstrap_test", "(", "data1", ",", "data2", ",", "alpha", "=", "0.05", ")", ":", "\n", "    ", "\"\"\"\n    Wraps around bootstrap test from https://github.com/facebookincubator/bootstrapped/.\n\n    Params\n    ------\n\n    - data1 (ndarray of dim 1)\n    The performance measures of Algo1.\n    - data2 (ndarray of dim 1)\n    The performance measures of Algo2.\n    - alpha (float in ]0,1[)\n    The significance level used by the Welch's t-test.\n\n    \"\"\"", "\n", "data1", "=", "data1", ".", "squeeze", "(", ")", "\n", "data2", "=", "data2", ".", "squeeze", "(", ")", "\n", "assert", "alpha", "<", "1", "and", "alpha", ">", "0", ",", "\"alpha should be between 0 and 1\"", "\n", "\n", "res", "=", "bs", ".", "bootstrap_ab", "(", "data1", ",", "data2", ",", "bs_stats", ".", "mean", ",", "bs_compare", ".", "difference", ",", "alpha", "=", "alpha", ",", "num_iterations", "=", "10000", ")", "\n", "decision", "=", "np", ".", "sign", "(", "res", ".", "upper_bound", ")", "==", "np", ".", "sign", "(", "res", ".", "lower_bound", ")", "\n", "\n", "\n", "if", "decision", ":", "\n", "        ", "if", "np", ".", "sign", "(", "res", ".", "upper_bound", ")", "<", "0", ":", "\n", "            ", "print", "(", "\"\\n\\nResult of the bootstrap test at level %02g: \u03bc2>\u03bc1, the test passed with a confidence interval \u03bc1-\u03bc2 in %02g, %02g.\"", "\n", "%", "(", "alpha", ",", "res", ".", "lower_bound", ",", "res", ".", "upper_bound", ")", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "\"\\n\\nResult of the bootstrap test level %02g: \u03bc1>\u03bc2, the test passed with a confidence interval \u03bc1-\u03bc2 in %02g, %02g.\"", "\n", "%", "(", "alpha", ",", "res", ".", "lower_bound", ",", "res", ".", "upper_bound", ")", ")", "\n", "", "", "else", ":", "\n", "        ", "print", "(", "\"\\n\\nResults of the bootstrap test level %02g: there is not enough evidence to prove any order relation between \u03bc1 and \u03bc2.\"", "%", "alpha", ")", "\n", "", "print", "(", "\"Bootstrap test done.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.flowersteam_rl-difference-testing.None.test_RL_difference.empirical_false_pos_rate": [[131, 180], ["print", "data.squeeze.squeeze", "range", "numpy.zeros", "enumerate", "np.zeros.mean", "matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "print", "print", "print", "list", "range", "len", "range", "numpy.random.shuffle", "bootstrapped.bootstrap_ab", "numpy.ones", "numpy.sign", "numpy.sign", "len", "scipy.ttest_ind"], "function", ["None"], ["", "def", "empirical_false_pos_rate", "(", "data", ",", "alpha", "=", "0.05", ")", ":", "\n", "    ", "\"\"\"\n    Compute and plot empirical estimates of the probability of type-I error given a list of performance measures.\n    If this list is of size N_data\n    This is done for N=2:floor(N_data/2). Two different tests are used: the bootstrap confidence interval test and the\n    Welch's t-test, both with significance level alpha.\n\n    Params\n    ------\n    - data1 (ndarray of dim 1)\n    The performance measures of the considered algorithm.\n    - alpha (float in ]0,1[)\n    The significance level used by the two tests.\n    \"\"\"", "\n", "print", "(", "'\\n\\nComputing empirical false positive rate ..'", ")", "\n", "data", "=", "data", ".", "squeeze", "(", ")", "\n", "sizes", "=", "range", "(", "2", ",", "data", ".", "size", "//", "2", ")", "\n", "nb_reps", "=", "1000", "\n", "results", "=", "np", ".", "zeros", "(", "[", "nb_reps", ",", "len", "(", "sizes", ")", ",", "2", "]", ")", "\n", "blue", "=", "[", "0", ",", "0.447", ",", "0.7410", ",", "1", "]", "\n", "orange", "=", "[", "0.85", ",", "0.325", ",", "0.098", ",", "1", "]", "\n", "\n", "for", "i_n", ",", "n", "in", "enumerate", "(", "sizes", ")", ":", "\n", "        ", "print", "(", "'     N ='", ",", "n", ")", "\n", "ind", "=", "list", "(", "range", "(", "2", "*", "n", ")", ")", "\n", "for", "rep", "in", "range", "(", "nb_reps", ")", ":", "\n", "# take two groups of size n in data, at random", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "ind", ")", "\n", "sample_1", "=", "data", "[", "ind", "[", ":", "n", "]", "]", "\n", "sample_2", "=", "data", "[", "ind", "[", "n", ":", "2", "*", "n", "]", "]", "\n", "# perform the two-tail Welch's t-test", "\n", "results", "[", "rep", ",", "i_n", ",", "0", "]", "=", "stats", ".", "ttest_ind", "(", "sample_1", ",", "sample_2", ",", "equal_var", "=", "False", ")", "[", "1", "]", "<", "alpha", "\n", "# perform the bootstrap confidence interval test", "\n", "res_final", "=", "bs", ".", "bootstrap_ab", "(", "sample_1", ",", "sample_2", ",", "bs_stats", ".", "mean", ",", "bs_compare", ".", "difference", ",", "num_iterations", "=", "10000", ")", "\n", "results", "[", "rep", ",", "i_n", ",", "1", "]", "=", "np", ".", "sign", "(", "res_final", ".", "upper_bound", ")", "==", "np", ".", "sign", "(", "res_final", ".", "lower_bound", ")", "\n", "\n", "", "", "res_mean", "=", "results", ".", "mean", "(", "axis", "=", "0", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "16", ",", "10", ")", ",", "frameon", "=", "False", ")", "\n", "plt", ".", "plot", "(", "sizes", ",", "alpha", "*", "np", ".", "ones", "(", "len", "(", "sizes", ")", ")", ",", "c", "=", "'k'", ",", "linewidth", "=", "5", ",", "linestyle", "=", "'--'", ")", "\n", "plt", ".", "plot", "(", "sizes", ",", "res_mean", "[", ":", ",", "0", "]", ",", "color", "=", "blue", ",", "linewidth", "=", "4", ")", "\n", "plt", ".", "plot", "(", "sizes", ",", "res_mean", "[", ":", ",", "1", "]", ",", "color", "=", "orange", ",", "linewidth", "=", "4", ")", "\n", "\n", "plt", ".", "legend", "(", "[", "u'\u03b1=%02d'", "%", "alpha", "]", "+", "[", "\"Welch's $t$-test\"", ",", "'bootstrap test'", "]", ")", "\n", "plt", ".", "xlabel", "(", "'sample size (N)'", ")", "\n", "plt", ".", "ylabel", "(", "'P(false positive)'", ")", "\n", "plt", ".", "title", "(", "u'Estimation of type-I error rate as a function of $N$ when $\u03b1=0.05$'", ")", "\n", "print", "(", "\"\\n   Given N=%i and \u03b1=%02g, you can expect false positive rates: \\n     For the Welch's t-test: %02g \\n     For the bootstrap test: %02g.\"", "\n", "%", "(", "data", ".", "size", "//", "2", ",", "alpha", ",", "res_mean", "[", "-", "1", ",", "0", "]", ",", "res_mean", "[", "-", "1", ",", "1", "]", ")", ")", "\n", "print", "(", "'Done.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.flowersteam_rl-difference-testing.None.test_RL_difference.compute_beta": [[185, 265], ["print", "numpy.zeros", "enumerate", "str", "range", "print", "print", "len", "type", "len", "data1.std", "data2.std", "enumerate", "type", "type", "t_dist.ppf", "t_dist.cdf", "selected_sample_size.append", "numpy.sqrt", "selected_sample_size.append", "str", "str"], "function", ["None"], ["", "def", "compute_beta", "(", "epsilon", ",", "sample_size", ",", "alpha", "=", "0.05", ",", "data1", "=", "None", ",", "data2", "=", "None", ",", "s1", "=", "None", ",", "s2", "=", "None", ",", "beta_requirement", "=", "0.2", ")", ":", "\n", "    ", "\"\"\"\n    Computes the probability of type-II error (or false positive rate) beta to detect and effect size epsilon\n    when testing for a difference between performances of Algo1 versus Algo2, using a Welch's t-test\n    with significance alpha and sample size N.\n\n    Params\n    ------\n    - epsilon (int, float or list of int or float)\n    The effect size one wants to be able to detect.\n    - sample_size (int or list of int)\n    The sample size (assumed equal for both algorithms).\n    - alpha (float in ]0,1[)\n    The significance level used by the Welch's t-test.\n    - data1 (ndarray of dim 1)\n    The performance measures of Algo1. Optional if s1 is provided.\n    - data2 (ndarray of dim 1)\n    The performance measures of Algo2. Optional if s2 is provided.\n    - s1 (float)\n    The standard deviation of Algo1, optional if data1 is provided.\n    - s2 (float)\n    The standard deviation of Algo2, optional if data2 is provided.\n    - beta_requirement (float in ]0,1[, optional)\n    Requirements on the value of beta.\n    \"\"\"", "\n", "print", "(", "'\\n\\nComputing the false negative rate as a function of sample size, for various effect sizes ..'", ")", "\n", "assert", "alpha", "<", "1", "and", "alpha", ">", "0", ",", "\"alpha must be in ]0,1[\"", "\n", "assert", "data1", "is", "not", "None", "or", "s1", "is", "not", "None", ",", "\"data1 or s1 should be provided\"", "\n", "assert", "data2", "is", "not", "None", "or", "s2", "is", "not", "None", ",", "\"data1 or s2 should be provided\"", "\n", "\n", "if", "type", "(", "epsilon", ")", "is", "int", "or", "type", "(", "epsilon", ")", "is", "float", ":", "\n", "        ", "epsilon", "=", "[", "epsilon", "]", "\n", "n_eps", "=", "1", "\n", "", "else", ":", "\n", "        ", "n_eps", "=", "len", "(", "epsilon", ")", "\n", "\n", "", "if", "type", "(", "sample_size", ")", "is", "int", ":", "\n", "        ", "sample_size", "=", "[", "sample_size", "]", "\n", "n_sample_size", "=", "1", "\n", "", "else", ":", "\n", "        ", "n_sample_size", "=", "len", "(", "sample_size", ")", "\n", "\n", "", "if", "data1", "is", "not", "None", ":", "\n", "        ", "s1", "=", "data1", ".", "std", "(", "ddof", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "s1", "=", "s1", "\n", "\n", "", "if", "data2", "is", "not", "None", ":", "\n", "        ", "s2", "=", "data2", ".", "std", "(", "ddof", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "s2", "=", "s2", "\n", "\n", "\n", "\n", "", "results", "=", "np", ".", "zeros", "(", "[", "n_sample_size", ",", "n_eps", "]", ")", "\n", "t_dist", "=", "stats", ".", "distributions", ".", "t", "\n", "\n", "selected_sample_size", "=", "[", "]", "\n", "for", "i_diff", ",", "eps", "in", "enumerate", "(", "epsilon", ")", ":", "\n", "        ", "sample_size_found", "=", "False", "# True if a previous sample size satisfied beta requirements for the current epsilon", "\n", "for", "i_n", ",", "n", "in", "enumerate", "(", "sample_size", ")", ":", "\n", "            ", "nu", "=", "(", "s1", "**", "2", "+", "s2", "**", "2", ")", "**", "2", "*", "(", "n", "-", "1", ")", "/", "(", "s1", "**", "4", "+", "s2", "**", "4", ")", "\n", "t_eps", "=", "eps", "/", "np", ".", "sqrt", "(", "(", "s1", "**", "2", "+", "s2", "**", "2", ")", "/", "n", ")", "\n", "t_crit", "=", "t_dist", ".", "ppf", "(", "1", "-", "alpha", ",", "nu", ")", "\n", "results", "[", "i_n", ",", "i_diff", "]", "=", "t_dist", ".", "cdf", "(", "t_crit", "-", "t_eps", ",", "nu", ")", "\n", "if", "results", "[", "i_n", ",", "i_diff", "]", "<", "beta_requirement", "and", "not", "sample_size_found", ":", "\n", "                ", "sample_size_found", "=", "True", "\n", "selected_sample_size", ".", "append", "(", "str", "(", "n", ")", ")", "\n", "", "", "if", "not", "sample_size_found", ":", "\n", "            ", "selected_sample_size", ".", "append", "(", "'>'", "+", "str", "(", "n", ")", ")", "\n", "\n", "", "", "eps_str", "=", "str", "(", ")", "\n", "for", "i", "in", "range", "(", "n_eps", ")", ":", "\n", "        ", "eps_str", "+=", "'    \u03b5 = %0g  -->  N: %s \\n '", "%", "(", "epsilon", "[", "i", "]", ",", "selected_sample_size", "[", "i", "]", ")", "\n", "\n", "", "print", "(", "'\\nSample sizes satisfying \u03b2=%02g are:\\n %s'", "%", "(", "beta_requirement", ",", "eps_str", ")", ")", "\n", "print", "(", "'Done.'", ")", "\n", "\n", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.flowersteam_rl-difference-testing.None.test_RL_difference.plot_beta": [[268, 313], ["matplotlib.figure", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.title", "len", "type", "len", "type", "type", "print", "numpy.ones", "range"], "function", ["None"], ["", "def", "plot_beta", "(", "beta", ",", "epsilon", ",", "sample_size", ",", "beta_requirement", "=", "0.2", ")", ":", "\n", "    ", "\"\"\"\n    Plot the probability of type-II error beta as a function of the sample size, for various effect sizes epsilon\n\n    Params\n    ------\n    - beta (ndarray of shape (size(N), size(epsilon))\n    Contains values of beta for various epsilon and N\n    - epsilon (int, float or list of int or float)\n    The effect size one wants to be able to detect.\n    - sample_size (int or list of int)\n    The sample size (assumed equal for both algorithms).\n    - beta_requirement (float in ]0,1[, optional)\n    Requirements on the value of beta.\n    \"\"\"", "\n", "if", "type", "(", "epsilon", ")", "is", "int", "or", "type", "(", "epsilon", ")", "is", "float", ":", "\n", "        ", "epsilon", "=", "[", "epsilon", "]", "\n", "n_eps", "=", "1", "\n", "", "else", ":", "\n", "        ", "n_eps", "=", "len", "(", "epsilon", ")", "\n", "\n", "", "if", "type", "(", "sample_size", ")", "is", "int", ":", "\n", "        ", "sample_size", "=", "[", "sample_size", "]", "\n", "n_sample_size", "=", "1", "\n", "", "else", ":", "\n", "        ", "n_sample_size", "=", "len", "(", "sample_size", ")", "\n", "\n", "", "try", ":", "\n", "        ", "assert", "n_sample_size", ">", "1", "\n", "", "except", ":", "\n", "        ", "print", "(", "\"Beta cannot be plotted as a function of only one sample size.\"", ")", "\n", "return", "\n", "\n", "", "legend", "=", "[", "u'$\u03b2_{requirement}$'", "]", "\n", "plt", ".", "figure", "(", "figsize", "=", "(", "16", ",", "10", ")", ",", "frameon", "=", "False", ")", "\n", "plt", ".", "plot", "(", "sample_size", ",", "beta_requirement", "*", "np", ".", "ones", "(", "n_sample_size", ")", ",", "'k'", ",", "linewidth", "=", "3", ",", "linestyle", "=", "'--'", ")", "\n", "plt", ".", "plot", "(", "sample_size", ",", "beta", ",", "linewidth", "=", "2", ")", "\n", "if", "n_eps", ">", "1", ":", "\n", "        ", "legend", "+=", "[", "u'\u03b5 = %02d'", "%", "epsilon", "[", "i", "]", "for", "i", "in", "range", "(", "n_eps", ")", "]", "\n", "", "else", ":", "\n", "        ", "legend", "+=", "u'\u03b5 = %02d'", "%", "epsilon", "[", "0", "]", "\n", "", "plt", ".", "legend", "(", "legend", ")", "\n", "plt", ".", "xlabel", "(", "'sample size (N)'", ")", "\n", "plt", ".", "ylabel", "(", "'P(false negative)'", ")", "\n", "plt", ".", "title", "(", "u'Estimation of type-II error rate as a function of \u03b5 and $N$'", ")", "\n", "\n"]]}