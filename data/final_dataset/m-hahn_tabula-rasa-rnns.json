{"home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.plus": [[49, 54], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.parameters": [[94, 98], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.encodeWord": [[129, 134], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.choice": [[147, 166], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.choiceList": [[169, 190], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.encodeSequenceBatchForward": [[193, 203], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.encodeSequenceBatchBackward": [[206, 218], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.predictNext": [[222, 227], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.keepGenerating": [[228, 252], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.doChoiceList": [[278, 286], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.doChoiceListLosses": [[286, 294], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.doChoice": [[297, 303], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_WORDS.encodeWord", "x.split", "y.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", ",", "encodeWord", "(", "y", ".", "split", "(", "\" \"", ")", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.plus": [[46, 51], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.parameters": [[106, 110], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.encodeWord": [[136, 141], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.choice": [[154, 173], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.choiceList": [[176, 197], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.encodeSequenceBatchForward": [[200, 210], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.encodeSequenceBatchBackward": [[213, 225], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.predictNext": [[229, 234], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.keepGenerating": [[235, 259], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.doChoiceList": [[285, 293], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.doChoice": [[295, 301], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.plus": [[40, 45], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.parameters": [[100, 104], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.encodeWord": [[130, 135], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.choice": [[148, 167], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.choiceList": [[170, 191], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.encodeSequenceBatchForward": [[194, 204], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.encodeSequenceBatchBackward": [[207, 219], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.predictNext": [[223, 228], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.keepGenerating": [[229, 253], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.doChoiceList": [[279, 287], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.doChoice": [[289, 295], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_frequency.plus": [[20, 25], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.2_syntax_italian.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-adv_aoadj_frequency.doChoiceList": [[40, 52], ["print", "len", "random.choice", "random.choice", "numpy.argmin", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "[", "-", "stoi", "[", "x", "]", "for", "x", "in", "xs", "]", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "assert", "len", "(", "losses", ")", "==", "2", "\n", "if", "losses", "[", "0", "]", "==", "losses", "[", "1", "]", ":", "\n", "        ", "return", "random", ".", "choice", "(", "[", "0", ",", "1", "]", ")", "\n", "", "else", ":", "\n", "       ", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_Test.plus": [[65, 70], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_Test.parameters": [[128, 132], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_Test.prepareDatasetChunks": [[152, 182], ["print", "print", "range", "range", "len", "numeric.append", "len", "len", "len", "len", "len", "random.randint", "random.randint", "range", "range", "random.random", "random.random", "len"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "count", "=", "0", "\n", "currentWord", "=", "\"\"", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "          ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "word", "in", "chunk", ":", "\n", "#             assert word != \"popula\"", "\n", "             ", "for", "char", "in", "word", ":", "\n", "                ", "if", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "is", "None", ":", "\n", "                      ", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "", "count", "+=", "1", "\n", "currentWord", "+=", "char", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "                   ", "yield", "numeric", ",", "boundaries", ",", "boundariesAll", "\n", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "", "", "assert", "currentWord", "==", "word", ",", "(", "currentWord", ",", "word", ")", "\n", "boundaries", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "currentWord", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_Test.forward": [[194, 231], ["zip", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "print", "range", "[].cuda", "[].cuda", "len", "len", "rnn_drop", "range", "embedded[].unsqueeze", "len", "hidden_states.append", "labels.append", "relevantWords.append", "relevantNextWords.append", "abs", "[].unsqueeze().cpu().detach().numpy", "print", "relevantNextWords[].startswith", "print", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "relevantNextWords[].startswith", "list", "list", "[].unsqueeze().cpu().detach", "zip", "zip", "torch.LongTensor", "torch.LongTensor", "range", "len", "len", "[].unsqueeze().cpu", "[].unsqueeze", "[].flatten"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "labels_sum", "\n", "numeric", ",", "boundaries", ",", "boundariesAll", "=", "zip", "(", "*", "numeric", ")", "\n", "\n", "numeric_selected", "=", "numeric", "\n", "input_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", ":", "-", "1", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", "1", ":", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "\n", "hidden", "=", "None", "\n", "print", "(", "len", "(", "embedded", ")", ")", "\n", "for", "i", "in", "range", "(", "40", ",", "len", "(", "embedded", ")", ")", ":", "\n", "            ", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "hidden", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "embedded", "[", "0", "]", ")", ")", ":", "\n", "                 ", "nextRelevantWord", "=", "(", "[", "boundaries", "[", "j", "]", "[", "k", "]", "for", "k", "in", "range", "(", "i", "+", "2", ",", "len", "(", "boundaries", "[", "j", "]", ")", ")", "if", "boundaries", "[", "j", "]", "[", "k", "]", "is", "not", "None", "]", "+", "[", "\"END_OF_SEQUENCE\"", "]", ")", "[", "0", "]", "\n", "if", "nextRelevantWord", "==", "\"END_OF_SEQUENCE\"", ":", "\n", "                    ", "continue", "\n", "", "target", "=", "1", "if", "boundaries", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "else", "0", "\n", "if", "abs", "(", "target", "+", "labels_sum", "-", "len", "(", "labels", ")", "/", "2", ")", ">", "2", ":", "\n", "                    ", "continue", "\n", "", "hidden_states", ".", "append", "(", "(", "hidden", "[", "1", "]", "[", ":", ",", "j", ",", ":", "]", ".", "flatten", "(", ")", "[", "neuron", "[", "0", "]", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "#                 hidden_states.append((hidden[1][:,j,:].flatten()[neuron]).cpu().detach().numpy())", "\n", "\n", "labels", ".", "append", "(", "target", ")", "\n", "labels_sum", "+=", "labels", "[", "-", "1", "]", "\n", "\n", "relevantWords", ".", "append", "(", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", ")", "\n", "\n", "relevantNextWords", ".", "append", "(", "nextRelevantWord", ")", "\n", "assert", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "\n", "if", "j", "==", "0", ":", "\n", "                   ", "print", "(", "hidden_states", "[", "-", "1", "]", ",", "labels", "[", "-", "1", "]", ",", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "0", ")", "and", "not", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "\n", "                     ", "assert", "False", ",", "(", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "1", ")", "and", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "# this is actually not a hard assertion, it should just be quite unlikely in languages such as English", "\n", "                     ", "print", "(", "\"WARNING\"", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "#                     if len(relevantWords[-1]) > 1:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RNN.plus": [[62, 67], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RNN.parameters": [[125, 129], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RNN.prepareDatasetChunks": [[149, 179], ["print", "print", "range", "range", "len", "numeric.append", "len", "len", "len", "len", "len", "random.randint", "random.randint", "range", "range", "random.random", "random.random", "len"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "count", "=", "0", "\n", "currentWord", "=", "\"\"", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "          ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "word", "in", "chunk", ":", "\n", "#             assert word != \"popula\"", "\n", "             ", "for", "char", "in", "word", ":", "\n", "                ", "if", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "is", "None", ":", "\n", "                      ", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "", "count", "+=", "1", "\n", "currentWord", "+=", "char", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "                   ", "yield", "numeric", ",", "boundaries", ",", "boundariesAll", "\n", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "", "", "assert", "currentWord", "==", "word", ",", "(", "currentWord", ",", "word", ")", "\n", "boundaries", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "currentWord", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RNN.forward": [[191, 231], ["zip", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "print", "range", "[].cuda", "[].cuda", "len", "len", "rnn_drop", "range", "embedded[].unsqueeze", "len", "hidden_states.append", "labels.append", "relevantWords.append", "relevantNextWords.append", "abs", "[].unsqueeze().cpu().detach().numpy", "print", "relevantNextWords[].startswith", "print", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "relevantNextWords[].startswith", "list", "list", "[].unsqueeze().cpu().detach", "zip", "zip", "torch.LongTensor", "torch.LongTensor", "range", "len", "len", "[].unsqueeze().cpu", "[].unsqueeze"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ",", "enforceBalancing", "=", "True", ")", ":", "\n", "      ", "global", "labels_sum", "\n", "numeric", ",", "boundaries", ",", "boundariesAll", "=", "zip", "(", "*", "numeric", ")", "\n", "\n", "numeric_selected", "=", "numeric", "\n", "input_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", ":", "-", "1", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", "1", ":", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "\n", "hidden", "=", "None", "\n", "print", "(", "len", "(", "embedded", ")", ")", "\n", "for", "i", "in", "range", "(", "10", ",", "len", "(", "embedded", ")", ")", ":", "\n", "            ", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "hidden", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "embedded", "[", "0", "]", ")", ")", ":", "\n", "                 ", "nextRelevantWord", "=", "(", "[", "boundaries", "[", "j", "]", "[", "k", "]", "for", "k", "in", "range", "(", "i", "+", "2", ",", "len", "(", "boundaries", "[", "j", "]", ")", ")", "if", "boundaries", "[", "j", "]", "[", "k", "]", "is", "not", "None", "]", "+", "[", "\"END_OF_SEQUENCE\"", "]", ")", "[", "0", "]", "\n", "#                 print(i,j,[boundariesAll[j][k] for k in range(i+2, len(boundariesAll[j])) if boundariesAll[j][k] is not None]+[\"END_OF_SEQUENCE\"])", "\n", "if", "nextRelevantWord", "==", "\"END_OF_SEQUENCE\"", ":", "\n", "#                   print(\"end\",i,j)", "\n", "                    ", "continue", "\n", "", "target", "=", "1", "if", "boundaries", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "else", "0", "\n", "if", "abs", "(", "target", "+", "labels_sum", "-", "len", "(", "labels", ")", "/", "2", ")", ">", "2", ":", "\n", "#                    print(\"stop for balance\")", "\n", "                    ", "continue", "\n", "", "hidden_states", ".", "append", "(", "(", "hidden", "[", "1", "]", "[", "j", ",", ":", "]", "[", "neuron", "[", "0", "]", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "#                 hidden_states.append((hidden[1][:,j,:].flatten()[neuron]).cpu().detach().numpy())", "\n", "\n", "labels", ".", "append", "(", "target", ")", "\n", "labels_sum", "+=", "labels", "[", "-", "1", "]", "\n", "\n", "relevantWords", ".", "append", "(", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", ")", "\n", "\n", "relevantNextWords", ".", "append", "(", "nextRelevantWord", ")", "\n", "assert", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "\n", "if", "j", "==", "0", ":", "\n", "                   ", "print", "(", "hidden_states", "[", "-", "1", "]", ",", "labels", "[", "-", "1", "]", ",", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "0", ")", "and", "not", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "\n", "                     ", "assert", "False", ",", "(", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "1", ")", "and", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "# this is actually not a hard assertion, it should just be quite unlikely in languages such as English", "\n", "                     ", "print", "(", "\"WARNING\"", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "#                     if len(relevantWords[-1]) > 1:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_FullClassifier.plus": [[51, 56], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_FullClassifier.parameters": [[95, 99], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_FullClassifier.prepareDatasetChunks": [[119, 149], ["print", "print", "range", "range", "len", "numeric.append", "len", "len", "len", "len", "len", "random.randint", "random.randint", "range", "range", "random.random", "random.random", "len"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "count", "=", "0", "\n", "currentWord", "=", "\"\"", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "          ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "word", "in", "chunk", ":", "\n", "#             assert word != \"popula\"", "\n", "             ", "for", "char", "in", "word", ":", "\n", "                ", "if", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "is", "None", ":", "\n", "                      ", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "", "count", "+=", "1", "\n", "currentWord", "+=", "char", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "                   ", "yield", "numeric", ",", "boundaries", ",", "boundariesAll", "\n", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "", "", "assert", "currentWord", "==", "word", ",", "(", "currentWord", ",", "word", ")", "\n", "boundaries", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "currentWord", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_FullClassifier.forward": [[163, 201], ["zip", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "print", "range", "[].cuda", "[].cuda", "len", "len", "rnn_drop", "range", "embedded[].unsqueeze", "len", "hidden_states.append", "boundary_positions.append", "labels.append", "relevantWords.append", "relevantNextWords.append", "[].flatten().cpu().detach().numpy", "print", "relevantNextWords[].startswith", "print", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "abs", "relevantNextWords[].startswith", "list", "list", "[].flatten().cpu().detach", "zip", "zip", "torch.LongTensor", "torch.LongTensor", "range", "len", "len", "[].flatten().cpu", "[].flatten"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "labels_sum", "\n", "numeric", ",", "boundaries", ",", "boundariesAll", "=", "zip", "(", "*", "numeric", ")", "\n", "\n", "numeric_selected", "=", "numeric", "\n", "input_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", ":", "-", "1", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", "1", ":", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "\n", "hidden", "=", "None", "\n", "print", "(", "len", "(", "embedded", ")", ")", "\n", "for", "i", "in", "range", "(", "40", ",", "len", "(", "embedded", ")", ")", ":", "\n", "            ", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "hidden", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "embedded", "[", "0", "]", ")", ")", ":", "\n", "                 ", "nextRelevantWord", "=", "(", "[", "boundaries", "[", "j", "]", "[", "k", "]", "for", "k", "in", "range", "(", "i", "+", "2", ",", "len", "(", "boundaries", "[", "j", "]", ")", ")", "if", "boundaries", "[", "j", "]", "[", "k", "]", "is", "not", "None", "]", "+", "[", "\"END_OF_SEQUENCE\"", "]", ")", "[", "0", "]", "\n", "if", "nextRelevantWord", "==", "\"END_OF_SEQUENCE\"", ":", "\n", "                    ", "continue", "\n", "", "target", "=", "1", "if", "boundaries", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "else", "0", "\n", "if", "train", "and", "abs", "(", "target", "+", "labels_sum", "-", "len", "(", "labels", ")", "/", "2", ")", ">", "2", ":", "\n", "                    ", "continue", "\n", "", "hidden_states", ".", "append", "(", "(", "hidden", "[", "1", "]", "[", ":", ",", "j", ",", ":", "]", ".", "flatten", "(", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "boundary_positions", ".", "append", "(", "(", "j", ",", "i", ")", ")", "\n", "#                 hidden_states.append((hidden[1][:,j,:].flatten()[neuron]).cpu().detach().numpy())", "\n", "\n", "labels", ".", "append", "(", "target", ")", "\n", "labels_sum", "+=", "labels", "[", "-", "1", "]", "\n", "\n", "relevantWords", ".", "append", "(", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", ")", "\n", "\n", "relevantNextWords", ".", "append", "(", "nextRelevantWord", ")", "\n", "assert", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "\n", "if", "j", "==", "0", ":", "\n", "                   ", "print", "(", "hidden_states", "[", "-", "1", "]", ",", "labels", "[", "-", "1", "]", ",", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "0", ")", "and", "not", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "\n", "                     ", "assert", "False", ",", "(", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "1", ")", "and", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "# this is actually not a hard assertion, it should just be quite unlikely in languages such as English", "\n", "                     ", "print", "(", "\"WARNING\"", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "#                     if len(relevantWords[-1]) > 1:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_RNN_FullClassifier.plus": [[62, 67], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_RNN_FullClassifier.parameters": [[106, 110], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_RNN_FullClassifier.prepareDatasetChunks": [[130, 160], ["print", "print", "range", "range", "len", "numeric.append", "len", "len", "len", "len", "len", "random.randint", "random.randint", "range", "range", "random.random", "random.random", "len"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "count", "=", "0", "\n", "currentWord", "=", "\"\"", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "          ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "word", "in", "chunk", ":", "\n", "#             assert word != \"popula\"", "\n", "             ", "for", "char", "in", "word", ":", "\n", "                ", "if", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "is", "None", ":", "\n", "                      ", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "", "count", "+=", "1", "\n", "currentWord", "+=", "char", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "                   ", "yield", "numeric", ",", "boundaries", ",", "boundariesAll", "\n", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "", "", "assert", "currentWord", "==", "word", ",", "(", "currentWord", ",", "word", ")", "\n", "boundaries", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "currentWord", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_RNN_FullClassifier.forward": [[174, 212], ["zip", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "print", "range", "[].cuda", "[].cuda", "len", "len", "rnn_drop", "range", "embedded[].unsqueeze", "len", "hidden_states.append", "boundary_positions.append", "labels.append", "relevantWords.append", "relevantNextWords.append", "hidden[].flatten().cpu().detach().numpy", "print", "relevantNextWords[].startswith", "print", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "abs", "relevantNextWords[].startswith", "list", "list", "hidden[].flatten().cpu().detach", "zip", "zip", "torch.LongTensor", "torch.LongTensor", "range", "len", "len", "hidden[].flatten().cpu", "hidden[].flatten"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "labels_sum", "\n", "numeric", ",", "boundaries", ",", "boundariesAll", "=", "zip", "(", "*", "numeric", ")", "\n", "\n", "numeric_selected", "=", "numeric", "\n", "input_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", ":", "-", "1", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", "1", ":", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "\n", "hidden", "=", "None", "\n", "print", "(", "len", "(", "embedded", ")", ")", "\n", "for", "i", "in", "range", "(", "20", ",", "len", "(", "embedded", ")", ")", ":", "\n", "            ", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "hidden", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "embedded", "[", "0", "]", ")", ")", ":", "\n", "                 ", "nextRelevantWord", "=", "(", "[", "boundaries", "[", "j", "]", "[", "k", "]", "for", "k", "in", "range", "(", "i", "+", "2", ",", "len", "(", "boundaries", "[", "j", "]", ")", ")", "if", "boundaries", "[", "j", "]", "[", "k", "]", "is", "not", "None", "]", "+", "[", "\"END_OF_SEQUENCE\"", "]", ")", "[", "0", "]", "\n", "if", "nextRelevantWord", "==", "\"END_OF_SEQUENCE\"", ":", "\n", "                    ", "continue", "\n", "", "target", "=", "1", "if", "boundaries", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "else", "0", "\n", "if", "train", "and", "abs", "(", "target", "+", "labels_sum", "-", "len", "(", "labels", ")", "/", "2", ")", ">", "2", ":", "\n", "                    ", "continue", "\n", "", "hidden_states", ".", "append", "(", "(", "hidden", "[", ":", ",", "j", ",", ":", "]", ".", "flatten", "(", ")", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "boundary_positions", ".", "append", "(", "(", "j", ",", "i", ")", ")", "\n", "#                 hidden_states.append((hidden[1][:,j,:].flatten()[neuron]).cpu().detach().numpy())", "\n", "\n", "labels", ".", "append", "(", "target", ")", "\n", "labels_sum", "+=", "labels", "[", "-", "1", "]", "\n", "\n", "relevantWords", ".", "append", "(", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", ")", "\n", "\n", "relevantNextWords", ".", "append", "(", "nextRelevantWord", ")", "\n", "assert", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "\n", "if", "j", "==", "0", ":", "\n", "                   ", "print", "(", "hidden_states", "[", "-", "1", "]", ",", "labels", "[", "-", "1", "]", ",", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "0", ")", "and", "not", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "\n", "                     ", "assert", "False", ",", "(", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "1", ")", "and", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "# this is actually not a hard assertion, it should just be quite unlikely in languages such as English", "\n", "                     ", "print", "(", "\"WARNING\"", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "#                     if len(relevantWords[-1]) > 1:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_NoWhitespace_RNN.plus": [[53, 58], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_NoWhitespace_RNN.parameters": [[116, 120], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_NoWhitespace_RNN.prepareDatasetChunks": [[140, 171], ["print", "print", "range", "range", "len", "numeric.append", "len", "len", "len", "random.randint", "random.randint", "range", "range", "len", "len", "random.random", "random.random", "len"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "count", "=", "0", "\n", "currentWord", "=", "\"\"", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "boundaries", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "currentWord", "=", "\"\"", "\n", "continue", "\n", "", "else", ":", "\n", "           ", "if", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "is", "None", ":", "\n", "               ", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "", "", "count", "+=", "1", "\n", "currentWord", "+=", "char", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", ",", "boundaries", ",", "boundariesAll", "\n", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_NoWhitespace_RNN.forward": [[200, 252], ["zip", "range", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "len", "sum", "range", "len", "numeric_selected.append", "[].cuda", "[].cuda", "char_dropout", "hidden_states.append", "labels.append", "relevantWords.append", "relevantNextWords.append", "int", "len", "[].detach().data.cpu().numpy", "random.random", "random.random", "len", "len", "len", "random.random", "random.random", "selected.append", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "[].detach().data.cpu", "list", "zip", "int", "len", "torch.LongTensor", "torch.LongTensor", "range", "[].detach", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "labels_sum", "\n", "numeric", ",", "boundaries", ",", "boundariesAll", "=", "zip", "(", "*", "numeric", ")", "\n", "\n", "\n", "selected", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "boundaries", ")", ")", ":", "# for each batch sample", "\n", "         ", "target", "=", "(", "labels_sum", "+", "10", "<", "len", "(", "labels", ")", "*", "0.7", ")", "or", "(", "random", ".", "random", "(", ")", "<", "0.5", ")", "# decide whether to get positive or negative sample", "\n", "true", "=", "sum", "(", "[", "(", "(", "x", "==", "None", ")", "if", "target", "==", "False", "else", "(", "x", "is", "not", "None", "and", "y", "not", "in", "wordsSoFar", ")", ")", "for", "x", ",", "y", "in", "list", "(", "zip", "(", "boundaries", "[", "i", "]", ",", "boundariesAll", "[", "i", "]", ")", ")", "[", "int", "(", "args", ".", "sequence_length", "/", "2", ")", ":", "-", "10", "]", "]", ")", "# condidates", "\n", "#        print(target, true)", "\n", "if", "true", "==", "0", ":", "\n", "            ", "continue", "\n", "", "soFar", "=", "0", "\n", "for", "j", "in", "range", "(", "int", "(", "len", "(", "boundaries", "[", "i", "]", ")", "/", "2", ")", ",", "len", "(", "boundaries", "[", "i", "]", ")", "-", "10", ")", ":", "\n", "           ", "if", "(", "lambda", "x", ",", "y", ":", "(", "(", "x", "is", "None", "if", "target", "==", "False", "else", "(", "x", "is", "not", "None", "and", "y", "not", "in", "wordsSoFar", ")", ")", ")", ")", "(", "boundaries", "[", "i", "]", "[", "j", "]", ",", "boundariesAll", "[", "i", "]", "[", "j", "]", ")", ":", "\n", "              ", "if", "random", ".", "random", "(", ")", "<", "1", "/", "(", "true", "-", "soFar", ")", ":", "\n", "                  ", "selected", ".", "append", "(", "(", "len", "(", "selected", ")", ",", "i", ",", "j", ",", "target", ")", ")", "\n", "assert", "(", "boundaries", "[", "i", "]", "[", "j", "]", "is", "not", "None", ")", "==", "target", ",", "(", "boundaries", "[", "i", "]", "[", "j", "]", ",", "boundariesAll", "[", "i", "]", "[", "j", "]", ",", "target", ")", "\n", "break", "\n", "", "soFar", "+=", "1", "\n", "", "", "assert", "soFar", "<", "true", "\n", "\n", "", "if", "len", "(", "selected", ")", "==", "0", ":", "\n", "         ", "return", "\n", "\n", "", "numeric_selected", "=", "[", "]", "\n", "for", "_", ",", "i", ",", "j", ",", "_", "in", "selected", ":", "\n", "        ", "numeric_selected", ".", "append", "(", "numeric", "[", "i", "]", "[", "j", "-", "10", ":", "j", "+", "1", "]", ")", "# do not include the actual boundary", "\n", "#      print(numeric_selected)", "\n", "", "input_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", ":", "-", "1", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", "1", ":", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "#assert False", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "#      print(embedded.size())", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "None", ")", "\n", "\n", "for", "i", ",", "i2", ",", "j", ",", "target", "in", "selected", ":", "\n", "                  ", "assert", "i", "<", "len", "(", "numeric_selected", ")", "\n", "#            print(hidden[0].size())", "\n", "#                  quit()", "\n", "hidden_states", ".", "append", "(", "hidden", "[", "1", "]", "[", "i", ",", ":", "]", ".", "detach", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "labels", ".", "append", "(", "1", "if", "target", "else", "0", ")", "\n", "relevantWords", ".", "append", "(", "boundariesAll", "[", "i2", "]", "[", "j", "]", ")", "\n", "relevantNextWords", ".", "append", "(", "(", "[", "boundaries", "[", "i2", "]", "[", "k", "]", "for", "k", "in", "range", "(", "j", "+", "1", ",", "len", "(", "boundaries", "[", "i2", "]", ")", ")", "if", "boundaries", "[", "i2", "]", "[", "k", "]", "is", "not", "None", "]", "+", "[", "\"END_OF_SEQUENCE\"", "]", ")", "[", "0", "]", ")", "\n", "#                  print(target, relevantWords[-1], relevantNextWords[-1])", "\n", "assert", "boundariesAll", "[", "i2", "]", "[", "j", "]", "is", "not", "None", "\n", "\n", "labels_sum", "+=", "labels", "[", "-", "1", "]", "\n", "##      print(hidden_states)", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_RNN.plus": [[62, 67], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_RNN.parameters": [[106, 110], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_RNN.prepareDatasetChunks": [[130, 160], ["print", "print", "range", "range", "len", "numeric.append", "len", "len", "len", "len", "len", "random.randint", "random.randint", "range", "range", "random.random", "random.random", "len"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "count", "=", "0", "\n", "currentWord", "=", "\"\"", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "          ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "word", "in", "chunk", ":", "\n", "#             assert word != \"popula\"", "\n", "             ", "for", "char", "in", "word", ":", "\n", "                ", "if", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "is", "None", ":", "\n", "                      ", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "", "count", "+=", "1", "\n", "currentWord", "+=", "char", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "                   ", "yield", "numeric", ",", "boundaries", ",", "boundariesAll", "\n", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "", "", "assert", "currentWord", "==", "word", ",", "(", "currentWord", ",", "word", ")", "\n", "boundaries", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "currentWord", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText_RNN.forward": [[174, 212], ["zip", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "print", "range", "[].cuda", "[].cuda", "len", "len", "rnn_drop", "range", "embedded[].unsqueeze", "len", "hidden_states.append", "boundary_positions.append", "labels.append", "relevantWords.append", "relevantNextWords.append", "[].unsqueeze().cpu().detach().numpy", "print", "relevantNextWords[].startswith", "print", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "abs", "relevantNextWords[].startswith", "list", "list", "[].unsqueeze().cpu().detach", "zip", "zip", "torch.LongTensor", "torch.LongTensor", "range", "len", "len", "[].unsqueeze().cpu", "[].unsqueeze", "hidden[].flatten"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "labels_sum", "\n", "numeric", ",", "boundaries", ",", "boundariesAll", "=", "zip", "(", "*", "numeric", ")", "\n", "\n", "numeric_selected", "=", "numeric", "\n", "input_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", ":", "-", "1", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", "1", ":", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "\n", "hidden", "=", "None", "\n", "print", "(", "len", "(", "embedded", ")", ")", "\n", "for", "i", "in", "range", "(", "20", ",", "len", "(", "embedded", ")", ")", ":", "\n", "            ", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "hidden", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "embedded", "[", "0", "]", ")", ")", ":", "\n", "                 ", "nextRelevantWord", "=", "(", "[", "boundaries", "[", "j", "]", "[", "k", "]", "for", "k", "in", "range", "(", "i", "+", "2", ",", "len", "(", "boundaries", "[", "j", "]", ")", ")", "if", "boundaries", "[", "j", "]", "[", "k", "]", "is", "not", "None", "]", "+", "[", "\"END_OF_SEQUENCE\"", "]", ")", "[", "0", "]", "\n", "if", "nextRelevantWord", "==", "\"END_OF_SEQUENCE\"", ":", "\n", "                    ", "continue", "\n", "", "target", "=", "1", "if", "boundaries", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "else", "0", "\n", "if", "train", "and", "abs", "(", "target", "+", "labels_sum", "-", "len", "(", "labels", ")", "/", "2", ")", ">", "2", ":", "\n", "                    ", "continue", "\n", "", "hidden_states", ".", "append", "(", "(", "hidden", "[", ":", ",", "j", ",", ":", "]", ".", "flatten", "(", ")", "[", "neuron", "[", "0", "]", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "boundary_positions", ".", "append", "(", "(", "j", ",", "i", ")", ")", "\n", "#                 hidden_states.append((hidden[1][:,j,:].flatten()[neuron]).cpu().detach().numpy())", "\n", "\n", "labels", ".", "append", "(", "target", ")", "\n", "labels_sum", "+=", "labels", "[", "-", "1", "]", "\n", "\n", "relevantWords", ".", "append", "(", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", ")", "\n", "\n", "relevantNextWords", ".", "append", "(", "nextRelevantWord", ")", "\n", "assert", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "\n", "if", "j", "==", "0", ":", "\n", "                   ", "print", "(", "hidden_states", "[", "-", "1", "]", ",", "labels", "[", "-", "1", "]", ",", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "0", ")", "and", "not", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "\n", "                     ", "assert", "False", ",", "(", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "1", ")", "and", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "# this is actually not a hard assertion, it should just be quite unlikely in languages such as English", "\n", "                     ", "print", "(", "\"WARNING\"", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "#                     if len(relevantWords[-1]) > 1:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_NoWhitespace.plus": [[50, 55], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_NoWhitespace.parameters": [[113, 117], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_NoWhitespace.prepareDatasetChunks": [[133, 164], ["print", "print", "range", "range", "len", "numeric.append", "len", "len", "len", "random.randint", "random.randint", "range", "range", "len", "len", "random.random", "random.random", "len"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "count", "=", "0", "\n", "currentWord", "=", "\"\"", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "boundaries", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "currentWord", "=", "\"\"", "\n", "continue", "\n", "", "else", ":", "\n", "           ", "if", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "is", "None", ":", "\n", "               ", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "", "", "count", "+=", "1", "\n", "currentWord", "+=", "char", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", ",", "boundaries", ",", "boundariesAll", "\n", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_NoWhitespace.forward": [[174, 220], ["zip", "range", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "len", "sum", "range", "len", "numeric_selected.append", "[].cuda", "[].cuda", "char_dropout", "hidden_states.append", "labels.append", "relevantWords.append", "relevantNextWords.append", "int", "len", "[].flatten().detach().data.cpu().numpy", "random.random", "random.random", "len", "len", "len", "random.random", "random.random", "selected.append", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "[].flatten().detach().data.cpu", "list", "zip", "int", "len", "torch.LongTensor", "torch.LongTensor", "range", "[].flatten().detach", "len", "[].flatten"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "labels_sum", "\n", "numeric", ",", "boundaries", ",", "boundariesAll", "=", "zip", "(", "*", "numeric", ")", "\n", "\n", "\n", "selected", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "boundaries", ")", ")", ":", "# for each batch sample", "\n", "         ", "target", "=", "(", "labels_sum", "+", "10", "<", "len", "(", "labels", ")", "*", "0.7", ")", "or", "(", "random", ".", "random", "(", ")", "<", "0.5", ")", "# decide whether to get positive or negative sample", "\n", "true", "=", "sum", "(", "[", "(", "(", "x", "==", "None", ")", "if", "target", "==", "False", "else", "(", "x", "is", "not", "None", "and", "y", "not", "in", "wordsSoFar", ")", ")", "for", "x", ",", "y", "in", "list", "(", "zip", "(", "boundaries", "[", "i", "]", ",", "boundariesAll", "[", "i", "]", ")", ")", "[", "int", "(", "args", ".", "sequence_length", "/", "2", ")", ":", "-", "10", "]", "]", ")", "# condidates", "\n", "#        print(target, true)", "\n", "if", "true", "==", "0", ":", "\n", "            ", "continue", "\n", "", "soFar", "=", "0", "\n", "for", "j", "in", "range", "(", "int", "(", "len", "(", "boundaries", "[", "i", "]", ")", "/", "2", ")", ",", "len", "(", "boundaries", "[", "i", "]", ")", "-", "10", ")", ":", "\n", "           ", "if", "(", "lambda", "x", ",", "y", ":", "(", "(", "x", "is", "None", "if", "target", "==", "False", "else", "(", "x", "is", "not", "None", "and", "y", "not", "in", "wordsSoFar", ")", ")", ")", ")", "(", "boundaries", "[", "i", "]", "[", "j", "]", ",", "boundariesAll", "[", "i", "]", "[", "j", "]", ")", ":", "\n", "              ", "if", "random", ".", "random", "(", ")", "<", "1", "/", "(", "true", "-", "soFar", ")", ":", "\n", "                  ", "selected", ".", "append", "(", "(", "len", "(", "selected", ")", ",", "i", ",", "j", ",", "target", ")", ")", "\n", "assert", "(", "boundaries", "[", "i", "]", "[", "j", "]", "is", "not", "None", ")", "==", "target", ",", "(", "boundaries", "[", "i", "]", "[", "j", "]", ",", "boundariesAll", "[", "i", "]", "[", "j", "]", ",", "target", ")", "\n", "break", "\n", "", "soFar", "+=", "1", "\n", "", "", "assert", "soFar", "<", "true", "\n", "\n", "", "if", "len", "(", "selected", ")", "==", "0", ":", "\n", "         ", "return", "\n", "\n", "", "numeric_selected", "=", "[", "]", "\n", "for", "_", ",", "i", ",", "j", ",", "_", "in", "selected", ":", "\n", "        ", "numeric_selected", ".", "append", "(", "numeric", "[", "i", "]", "[", "j", "-", "40", ":", "j", "+", "1", "]", ")", "# do not include the actual boundary", "\n", "", "input_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", ":", "-", "1", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", "1", ":", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "None", ")", "\n", "\n", "for", "i", ",", "i2", ",", "j", ",", "target", "in", "selected", ":", "\n", "                  ", "assert", "i", "<", "len", "(", "numeric_selected", ")", "\n", "hidden_states", ".", "append", "(", "hidden", "[", "1", "]", "[", ":", ",", "i", ",", ":", "]", ".", "flatten", "(", ")", ".", "detach", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "labels", ".", "append", "(", "1", "if", "target", "else", "0", ")", "\n", "relevantWords", ".", "append", "(", "boundariesAll", "[", "i2", "]", "[", "j", "]", ")", "\n", "relevantNextWords", ".", "append", "(", "(", "[", "boundaries", "[", "i2", "]", "[", "k", "]", "for", "k", "in", "range", "(", "j", "+", "1", ",", "len", "(", "boundaries", "[", "i2", "]", ")", ")", "if", "boundaries", "[", "i2", "]", "[", "k", "]", "is", "not", "None", "]", "+", "[", "\"END_OF_SEQUENCE\"", "]", ")", "[", "0", "]", ")", "\n", "assert", "boundariesAll", "[", "i2", "]", "[", "j", "]", "is", "not", "None", "\n", "\n", "labels_sum", "+=", "labels", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_Classifier.plus": [[62, 67], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_Classifier.parameters": [[125, 129], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_Classifier.prepareDatasetChunks": [[149, 201], ["print", "iter", "next", "next", "range", "range", "numeric.append", "len", "len", "len", "len", "len", "len", "next.replace", "next.startswith", "print", "next", "random.randint", "random.randint", "range", "range", "len", "len", "len", "len", "iter", "next", "random.random", "random.random", "len", "next"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "data_c", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "count", "=", "0", "\n", "currentWord", "=", "\"\"", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "currentChunk", "=", "iter", "(", "next", "(", "data", ")", ")", "\n", "currentToken", "=", "next", "(", "currentChunk", ")", "\n", "for", "chunk", "in", "data_c", ":", "\n", "          ", "for", "char", "in", "chunk", ":", "\n", "                ", "assert", "len", "(", "currentWord", ")", "<", "1000", ",", "currentWord", "\n", "\n", "count", "+=", "1", "\n", "if", "(", "char", "!=", "\" \"", "and", "char", "!=", "\"\u00a0\"", "and", "char", "!=", "\"\u202f\"", "and", "char", "not", "in", "[", "\"\u2009\"", ",", "\"\u00fe\"", ",", "\"\u00ff\"", "]", ")", "or", "currentWord", "!=", "\"\"", ":", "# certain specific characters that the tagger seems to treat as if they were whitespace", "\n", "                   ", "currentWord", "+=", "char", "\n", "", "else", ":", "\n", "                   ", "assert", "currentWord", "==", "\"\"", "or", "currentToken", ".", "startswith", "(", "currentWord", ")", ",", "(", "\"##\"", "+", "currentWord", "+", "\"##\"", "+", "currentToken", "+", "\"##\"", ")", "\n", "\n", "\n", "", "assert", "len", "(", "numeric", ")", "<", "len", "(", "boundaries", ")", "\n", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "                   ", "yield", "numeric", ",", "boundaries", ",", "boundariesAll", "\n", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "", "if", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "is", "None", ":", "\n", "                      ", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "\n", "", "if", "len", "(", "currentWord", ")", "==", "len", "(", "currentToken", ")", ":", "\n", "\n", "#                    print(f\"#{currentWord}#{currentToken}#\")", "\n", "                    ", "if", "currentWord", "!=", "currentToken", ":", "\n", "                        ", "print", "(", "f\"WARNING#{currentWord}#{currentToken}#\"", ")", "\n", "assert", "False", "\n", "\n", "", "boundaries", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "currentWord", "=", "\"\"", "\n", "try", ":", "\n", "                        ", "currentToken", "=", "next", "(", "currentChunk", ")", "\n", "", "except", "StopIteration", ":", "\n", "                        ", "currentChunk", "=", "iter", "(", "next", "(", "data", ")", ")", "\n", "currentToken", "=", "next", "(", "currentChunk", ")", "\n", "", "currentToken", "=", "currentToken", ".", "replace", "(", "\"\u00fe\"", ",", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_Classifier.forward": [[214, 252], ["zip", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "print", "range", "[].cuda", "[].cuda", "len", "len", "rnn_drop", "range", "embedded[].unsqueeze", "len", "hidden_states.append", "labels.append", "relevantWords.append", "relevantNextWords.append", "abs", "[].unsqueeze().cpu().detach().numpy", "print", "relevantNextWords[].startswith", "print", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "relevantNextWords[].startswith", "list", "list", "[].unsqueeze().cpu().detach", "zip", "zip", "torch.LongTensor", "torch.LongTensor", "range", "len", "len", "[].unsqueeze().cpu", "[].unsqueeze", "[].flatten"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ",", "enforceBalancing", "=", "True", ")", ":", "\n", "      ", "global", "labels_sum", "\n", "numeric", ",", "boundaries", ",", "boundariesAll", "=", "zip", "(", "*", "numeric", ")", "\n", "\n", "numeric_selected", "=", "numeric", "\n", "input_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", ":", "-", "1", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", "1", ":", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "\n", "hidden", "=", "None", "\n", "print", "(", "len", "(", "embedded", ")", ")", "\n", "for", "i", "in", "range", "(", "40", ",", "len", "(", "embedded", ")", ")", ":", "\n", "            ", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "hidden", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "embedded", "[", "0", "]", ")", ")", ":", "\n", "                 ", "nextRelevantWord", "=", "(", "[", "boundaries", "[", "j", "]", "[", "k", "]", "for", "k", "in", "range", "(", "i", "+", "2", ",", "len", "(", "boundaries", "[", "j", "]", ")", ")", "if", "boundaries", "[", "j", "]", "[", "k", "]", "is", "not", "None", "]", "+", "[", "\"END_OF_SEQUENCE\"", "]", ")", "[", "0", "]", "\n", "if", "nextRelevantWord", "==", "\"END_OF_SEQUENCE\"", ":", "\n", "                    ", "continue", "\n", "", "target", "=", "1", "if", "boundaries", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "else", "0", "\n", "if", "abs", "(", "target", "+", "labels_sum", "-", "len", "(", "labels", ")", "/", "2", ")", ">", "2", ":", "\n", "                    ", "continue", "\n", "#print(boundariesAll[j][i+1], \"\\t\\t\", \"\".join([itos[x-3] for x in numeric_selected[j][:i+1]]))", "\n", "", "hidden_states", ".", "append", "(", "(", "hidden", "[", "1", "]", "[", ":", ",", "j", ",", ":", "]", ".", "flatten", "(", ")", "[", "neuron", "[", "0", "]", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "#                 hidden_states.append((hidden[1][:,j,:].flatten()[neuron]).cpu().detach().numpy())", "\n", "\n", "labels", ".", "append", "(", "target", ")", "\n", "labels_sum", "+=", "labels", "[", "-", "1", "]", "\n", "\n", "relevantWords", ".", "append", "(", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", ")", "\n", "\n", "relevantNextWords", ".", "append", "(", "nextRelevantWord", ")", "\n", "assert", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "\n", "if", "j", "==", "0", ":", "\n", "                   ", "print", "(", "hidden_states", "[", "-", "1", "]", ",", "labels", "[", "-", "1", "]", ",", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "0", ")", "and", "not", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "\n", "                     ", "assert", "False", ",", "(", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "1", ")", "and", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "# this is actually not a hard assertion, it should just be quite unlikely in languages such as English", "\n", "                     ", "print", "(", "\"WARNING\"", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "#                     if len(relevantWords[-1]) > 1:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText.plus": [[65, 70], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText.parameters": [[109, 113], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText.prepareDatasetChunks": [[133, 163], ["print", "print", "range", "range", "len", "numeric.append", "len", "len", "len", "len", "len", "random.randint", "random.randint", "range", "range", "random.random", "random.random", "len"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "count", "=", "0", "\n", "currentWord", "=", "\"\"", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "          ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "word", "in", "chunk", ":", "\n", "#             assert word != \"popula\"", "\n", "             ", "for", "char", "in", "word", ":", "\n", "                ", "if", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "is", "None", ":", "\n", "                      ", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "", "count", "+=", "1", "\n", "currentWord", "+=", "char", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "                   ", "yield", "numeric", ",", "boundaries", ",", "boundariesAll", "\n", "numeric", "=", "[", "0", "]", "\n", "boundaries", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "boundariesAll", "=", "[", "None", "for", "_", "in", "range", "(", "args", ".", "sequence_length", "+", "1", ")", "]", "\n", "\n", "", "", "assert", "currentWord", "==", "word", ",", "(", "currentWord", ",", "word", ")", "\n", "boundaries", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "boundariesAll", "[", "len", "(", "numeric", ")", "]", "=", "currentWord", "\n", "\n", "currentWord", "=", "\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.4_boundary_tracking.detectBoundariesUnit_Hidden_ExtractPattern_NoWhitespace_Classifier_RealText.forward": [[177, 215], ["zip", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "print", "range", "[].cuda", "[].cuda", "len", "len", "rnn_drop", "range", "embedded[].unsqueeze", "len", "hidden_states.append", "boundary_positions.append", "labels.append", "relevantWords.append", "relevantNextWords.append", "[].unsqueeze().cpu().detach().numpy", "print", "relevantNextWords[].startswith", "print", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "abs", "relevantNextWords[].startswith", "list", "list", "[].unsqueeze().cpu().detach", "zip", "zip", "torch.LongTensor", "torch.LongTensor", "range", "len", "len", "[].unsqueeze().cpu", "[].unsqueeze", "[].flatten"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "labels_sum", "\n", "numeric", ",", "boundaries", ",", "boundariesAll", "=", "zip", "(", "*", "numeric", ")", "\n", "\n", "numeric_selected", "=", "numeric", "\n", "input_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", ":", "-", "1", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric_selected", ")", ".", "transpose", "(", "0", ",", "1", ")", "[", "1", ":", "]", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "\n", "hidden", "=", "None", "\n", "print", "(", "len", "(", "embedded", ")", ")", "\n", "for", "i", "in", "range", "(", "40", ",", "len", "(", "embedded", ")", ")", ":", "\n", "            ", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", "[", "i", "]", ".", "unsqueeze", "(", "0", ")", ",", "hidden", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "embedded", "[", "0", "]", ")", ")", ":", "\n", "                 ", "nextRelevantWord", "=", "(", "[", "boundaries", "[", "j", "]", "[", "k", "]", "for", "k", "in", "range", "(", "i", "+", "2", ",", "len", "(", "boundaries", "[", "j", "]", ")", ")", "if", "boundaries", "[", "j", "]", "[", "k", "]", "is", "not", "None", "]", "+", "[", "\"END_OF_SEQUENCE\"", "]", ")", "[", "0", "]", "\n", "if", "nextRelevantWord", "==", "\"END_OF_SEQUENCE\"", ":", "\n", "                    ", "continue", "\n", "", "target", "=", "1", "if", "boundaries", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "else", "0", "\n", "if", "train", "and", "abs", "(", "target", "+", "labels_sum", "-", "len", "(", "labels", ")", "/", "2", ")", ">", "2", ":", "\n", "                    ", "continue", "\n", "", "hidden_states", ".", "append", "(", "(", "hidden", "[", "1", "]", "[", ":", ",", "j", ",", ":", "]", ".", "flatten", "(", ")", "[", "neuron", "[", "0", "]", "]", ")", ".", "unsqueeze", "(", "0", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", ")", "\n", "boundary_positions", ".", "append", "(", "(", "j", ",", "i", ")", ")", "\n", "#                 hidden_states.append((hidden[1][:,j,:].flatten()[neuron]).cpu().detach().numpy())", "\n", "\n", "labels", ".", "append", "(", "target", ")", "\n", "labels_sum", "+=", "labels", "[", "-", "1", "]", "\n", "\n", "relevantWords", ".", "append", "(", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", ")", "\n", "\n", "relevantNextWords", ".", "append", "(", "nextRelevantWord", ")", "\n", "assert", "boundariesAll", "[", "j", "]", "[", "i", "+", "1", "]", "is", "not", "None", "\n", "if", "j", "==", "0", ":", "\n", "                   ", "print", "(", "hidden_states", "[", "-", "1", "]", ",", "labels", "[", "-", "1", "]", ",", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "0", ")", "and", "not", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "\n", "                     ", "assert", "False", ",", "(", "relevantWords", "[", "-", "1", "]", ",", "relevantNextWords", "[", "-", "1", "]", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "", "if", "(", "labels", "[", "-", "1", "]", "==", "1", ")", "and", "relevantNextWords", "[", "-", "1", "]", ".", "startswith", "(", "relevantWords", "[", "-", "1", "]", ")", ":", "# this is actually not a hard assertion, it should just be quite unlikely in languages such as English", "\n", "                     ", "print", "(", "\"WARNING\"", ",", "list", "(", "zip", "(", "boundaries", "[", "j", "]", "[", "i", ":", "]", ",", "boundariesAll", "[", "j", "]", "[", "i", ":", "]", ")", ")", ")", "\n", "#                     if len(relevantWords[-1]) > 1:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.parameters": [[90, 94], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.encodeWord": [[120, 125], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.choice": [[137, 156], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.encodeListOfWords": [[158, 170], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-completion-words-VOCAB.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "input_cut", "=", "input_tensor_forward", "#[:-1]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.choiceList": [[174, 195], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.encodeSequenceBatchForward": [[198, 208], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.encodeSequenceBatchBackward": [[211, 223], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.predictNext": [[227, 232], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.keepGenerating": [[233, 257], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.doChoiceList": [[259, 267], ["char-lm-ud-stationary-completion-words-VOCAB.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-completion-words-VOCAB.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words-VOCAB.doChoiceListLosses": [[267, 275], ["char-lm-ud-stationary-completion-words-VOCAB.choiceList", "print", "print", "char-lm-ud-stationary-completion-words-VOCAB.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.corpusIteratorHolmes.load": [[5, 17], ["open", "chunks.append", "line.strip().lower", "len", "random.shuffle", "line.strip"], "function", ["None"], ["def", "load", "(", "language", ",", "partition", ")", ":", "\n", "    ", "assert", "language", "==", "\"english\"", "\n", "chunks", "=", "[", "]", "\n", "path", "=", "MSR_COMP_HOME", "+", "\"//holmes\"", "\n", "with", "open", "(", "path", "+", "\"-\"", "+", "partition", "+", "\".txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "      ", "for", "line", "in", "inFile", ":", "\n", "        ", "chunks", ".", "append", "(", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ")", "\n", "if", "len", "(", "chunks", ")", ">", "10000", ":", "\n", "           ", "random", ".", "shuffle", "(", "chunks", ")", "\n", "yield", "\"\"", ".", "join", "(", "chunks", ")", "\n", "chunks", "=", "[", "]", "\n", "", "", "", "yield", "\"\"", ".", "join", "(", "chunks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.corpusIteratorHolmes.training": [[18, 20], ["corpusIteratorHolmes.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "training", "(", "language", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"train\"", ")", "\n", "", "def", "dev", "(", "language", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.corpusIteratorHolmes.dev": [[20, 22], ["corpusIteratorHolmes.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "dev", "(", "language", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"valid\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.plusL": [[43, 47], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.plus": [[48, 53], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.parameters": [[457, 461], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.encodeWord": [[138, 143], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.choice": [[155, 174], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.encodeListOfWords": [[176, 188], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-completion-rnn.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "input_cut", "=", "input_tensor_forward", "#[:-1]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.choiceList": [[192, 213], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.encodeSequenceBatchForward": [[216, 226], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.encodeSequenceBatchBackward": [[229, 241], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.predictNext": [[245, 250], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.keepGenerating": [[251, 275], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.doChoiceList": [[277, 285], ["char-lm-ud-stationary-completion-rnn.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-completion-rnn.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.doChoiceListLosses": [[285, 293], ["char-lm-ud-stationary-completion-rnn.choiceList", "print", "print", "char-lm-ud-stationary-completion-rnn.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.computeCosine": [[374, 378], ["print", "char-lm-ud-stationary-completion-rnn.encodeListOfWords", "char-lm-ud-stationary-completion-rnn.encodeListOfWords", "scipy.spatial.distance.cosine"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords"], ["def", "computeCosine", "(", "word1", ",", "word2", ")", ":", "\n", "   ", "vector0", "=", "encodeListOfWords", "(", "[", "word1", "]", ")", "[", "0", "]", "\n", "vector1", "=", "encodeListOfWords", "(", "[", "word2", "]", ")", "[", "0", "]", "\n", "print", "(", "word1", ",", "word2", ",", "1", "-", "spatial", ".", "distance", ".", "cosine", "(", "vector0", ",", "vector1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.forwardProject": [[488, 518], ["embeddingsCNLM().view", "embeddingsCNLM().view", "projection", "projection", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "final", "torch.mm", "torch.mm", "len", "torch.autograd.Variable", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.div().view", "torch.div().view", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.transpose", "torch.transpose", "embeddingsCNLM", "embeddingsCNLM", "torch.bernoulli", "torch.bernoulli", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.eye", "torch.eye", "torch.LongTensor().view", "torch.LongTensor().view", "torch.LongTensor().view", "torch.LongTensor().view", "embeddingsCNLM().view.data.new().fill_", "torch.div", "torch.div", "torch.dot", "torch.dot", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "embeddingsCNLM().view.data.new", "embeddingsCNLM().view.data.size"], "function", ["None"], ["def", "forwardProject", "(", "pair", ",", "train", ")", ":", "\n", "  ", "assert", "itosSim", "[", "pair", "[", "0", "]", "]", "<", "len", "(", "testVocabulary", ")", "\n", "#  print(embeddingsCNLM)", "\n", "# print(itosSim[pair[0]])", "\n", "emb1", "=", "embeddingsCNLM", "(", "torch", ".", "LongTensor", "(", "[", "itosSim", "[", "pair", "[", "0", "]", "]", "]", ")", ".", "view", "(", "1", ",", "1", ",", "-", "1", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "emb2", "=", "embeddingsCNLM", "(", "torch", ".", "LongTensor", "(", "[", "itosSim", "[", "pair", "[", "1", "]", "]", "]", ")", ".", "view", "(", "1", ",", "1", ",", "-", "1", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "if", "train", ":", "\n", "    ", "mask", "=", "Variable", "(", "torch", ".", "bernoulli", "(", "emb1", ".", "data", ".", "new", "(", "emb1", ".", "data", ".", "size", "(", ")", ")", ".", "fill_", "(", "0.4", ")", ")", ")", "\n", "emb1", "=", "emb1", "*", "mask", "/", "0.4", "\n", "emb2", "=", "emb2", "*", "mask", "/", "0.4", "\n", "\n", "", "proj1", "=", "projection", "(", "emb1", ")", "\n", "proj2", "=", "projection", "(", "emb2", ")", "\n", "norm1", "=", "torch", ".", "sqrt", "(", "torch", ".", "dot", "(", "proj1", ",", "proj1", ")", ")", "\n", "norm2", "=", "torch", ".", "sqrt", "(", "torch", ".", "dot", "(", "proj2", ",", "proj2", ")", ")", "\n", "#  print(\"Norm\", norm1 * norm2)", "\n", "# print(\"Dot\", torch.dot(proj1, proj2))", "\n", "similarity", "=", "final", "(", "torch", ".", "div", "(", "torch", ".", "dot", "(", "proj1", ",", "proj2", ")", ",", "(", "norm1", "*", "norm2", "+", "1e-8", ")", ")", ".", "view", "(", "1", ")", ")", "\n", "\n", "loss", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "(", "pair", "[", "2", "]", ",", "similarity", ")", "\n", "\n", "\n", "\n", "product", "=", "torch", ".", "mm", "(", "projection", ".", "weight", ",", "torch", ".", "transpose", "(", "projection", ".", "weight", ",", "0", ",", "1", ")", ")", "\n", "lossOrthog", "=", "0.1", "*", "torch", ".", "nn", ".", "MSELoss", "(", ")", "(", "product", ",", "torch", ".", "eye", "(", "100", ")", ")", "\n", "#  print(lossOrthog)", "\n", "loss", "+=", "lossOrthog", "\n", "\n", "\n", "return", "loss", "\n", "#print(similarity.data.numpy(), pair[2], loss.data.numpy())", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-rnn.backwardProject": [[520, 524], ["optim.zero_grad", "loss.backward", "optim.step"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backwardProject", "(", "loss", ")", ":", "\n", "    ", "optim", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes.plus": [[45, 50], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes.parameters": [[106, 110], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes.prepareDatasetChunks": [[133, 161], ["print", "print", "torch.LongTensor().view().transpose().transpose().cuda", "range", "len", "numerified.append", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "len", "random.randint", "random.randint", "torch.LongTensor().view().transpose", "random.random", "random.random", "len", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ")", "*", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "args", ".", "sequence_length", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "           ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes.prepareDatasetChunksPrevious": [[162, 178], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes.prepareDataset": [[184, 197], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes.forward": [[203, 256], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "tuple", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable().detach", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.autograd.Variable", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "tuple", "(", "[", "Variable", "(", "x", ".", "data", ")", ".", "detach", "(", ")", "for", "x", "in", "hidden", "]", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", "and", "args", ".", "verbose", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "\"OOV\"", "if", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "==", "2", "else", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes.backward": [[257, 264], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words.plus": [[48, 53], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words.parameters": [[93, 97], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words.prepareDatasetChunks": [[122, 166], ["print", "numerified.append", "len", "torch.LongTensor().view().transpose().transpose().cuda", "range", "print", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "random.randint", "random.randint", "len", "random.random", "random.random", "len", "torch.LongTensor().view().transpose", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "#print(len(chunk))", "\n", "       ", "for", "char", "in", "chunk", ":", "\n", "#         if char == \" \":", "\n", "#          continue", "\n", "         ", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "#     print(len(numerified))", "\n", "#      print(args.batchSize)", "\n", "#       print(args.sequence_length)", "\n", "\n", "", "if", "len", "(", "numerified", ")", ">", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ":", "\n", "         ", "sequenceLengthHere", "=", "args", ".", "sequence_length", "\n", "#         elif len(numerified) > args.batchSize:", "\n", "#            print(\"Taking small sequence\")", "\n", "#            sequenceLengthHere = int(len(numerified) / args.batchSize)", "\n", "#            assert sequenceLengthHere < args.sequence_length", "\n", "#            assert  sequenceLengthHere > 0", "\n", "\n", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", ")", "*", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "\n", "#print(len(numerifiedCurrent))", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "sequenceLengthHere", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "             ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "", "else", ":", "\n", "         ", "print", "(", "\"Skipping\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words.prepareDatasetChunksPrevious": [[167, 183], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words.prepareDataset": [[189, 202], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words.forward": [[208, 261], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "tuple", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable().detach", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.autograd.Variable", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "tuple", "(", "[", "Variable", "(", "x", ".", "data", ")", ".", "detach", "(", ")", "for", "x", "in", "hidden", "]", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words.backward": [[262, 269], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "args", ".", "clip_grad_limit", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.plusL": [[41, 45], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.plus": [[46, 51], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.parameters": [[455, 459], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.encodeWord": [[136, 141], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.choice": [[153, 172], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.encodeListOfWords": [[174, 186], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-completion.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "input_cut", "=", "input_tensor_forward", "#[:-1]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.choiceList": [[190, 211], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.encodeSequenceBatchForward": [[214, 224], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.encodeSequenceBatchBackward": [[227, 239], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.predictNext": [[243, 248], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.keepGenerating": [[249, 273], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.doChoiceList": [[275, 283], ["char-lm-ud-stationary-completion.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-completion.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.doChoiceListLosses": [[283, 291], ["char-lm-ud-stationary-completion.choiceList", "print", "print", "char-lm-ud-stationary-completion.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.computeCosine": [[372, 376], ["print", "char-lm-ud-stationary-completion.encodeListOfWords", "char-lm-ud-stationary-completion.encodeListOfWords", "scipy.spatial.distance.cosine"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords"], ["def", "computeCosine", "(", "word1", ",", "word2", ")", ":", "\n", "   ", "vector0", "=", "encodeListOfWords", "(", "[", "word1", "]", ")", "[", "0", "]", "\n", "vector1", "=", "encodeListOfWords", "(", "[", "word2", "]", ")", "[", "0", "]", "\n", "print", "(", "word1", ",", "word2", ",", "1", "-", "spatial", ".", "distance", ".", "cosine", "(", "vector0", ",", "vector1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.forwardProject": [[486, 516], ["embeddingsCNLM().view", "embeddingsCNLM().view", "projection", "projection", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "final", "torch.mm", "torch.mm", "len", "torch.autograd.Variable", "torch.dot", "torch.dot", "torch.dot", "torch.dot", "torch.div().view", "torch.div().view", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.transpose", "torch.transpose", "embeddingsCNLM", "embeddingsCNLM", "torch.bernoulli", "torch.bernoulli", "torch.nn.MSELoss", "torch.nn.MSELoss", "torch.eye", "torch.eye", "torch.LongTensor().view", "torch.LongTensor().view", "torch.LongTensor().view", "torch.LongTensor().view", "embeddingsCNLM().view.data.new().fill_", "torch.div", "torch.div", "torch.dot", "torch.dot", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "embeddingsCNLM().view.data.new", "embeddingsCNLM().view.data.size"], "function", ["None"], ["def", "forwardProject", "(", "pair", ",", "train", ")", ":", "\n", "  ", "assert", "itosSim", "[", "pair", "[", "0", "]", "]", "<", "len", "(", "testVocabulary", ")", "\n", "#  print(embeddingsCNLM)", "\n", "# print(itosSim[pair[0]])", "\n", "emb1", "=", "embeddingsCNLM", "(", "torch", ".", "LongTensor", "(", "[", "itosSim", "[", "pair", "[", "0", "]", "]", "]", ")", ".", "view", "(", "1", ",", "1", ",", "-", "1", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "emb2", "=", "embeddingsCNLM", "(", "torch", ".", "LongTensor", "(", "[", "itosSim", "[", "pair", "[", "1", "]", "]", "]", ")", ".", "view", "(", "1", ",", "1", ",", "-", "1", ")", ")", ".", "view", "(", "-", "1", ")", "\n", "if", "train", ":", "\n", "    ", "mask", "=", "Variable", "(", "torch", ".", "bernoulli", "(", "emb1", ".", "data", ".", "new", "(", "emb1", ".", "data", ".", "size", "(", ")", ")", ".", "fill_", "(", "0.4", ")", ")", ")", "\n", "emb1", "=", "emb1", "*", "mask", "/", "0.4", "\n", "emb2", "=", "emb2", "*", "mask", "/", "0.4", "\n", "\n", "", "proj1", "=", "projection", "(", "emb1", ")", "\n", "proj2", "=", "projection", "(", "emb2", ")", "\n", "norm1", "=", "torch", ".", "sqrt", "(", "torch", ".", "dot", "(", "proj1", ",", "proj1", ")", ")", "\n", "norm2", "=", "torch", ".", "sqrt", "(", "torch", ".", "dot", "(", "proj2", ",", "proj2", ")", ")", "\n", "#  print(\"Norm\", norm1 * norm2)", "\n", "# print(\"Dot\", torch.dot(proj1, proj2))", "\n", "similarity", "=", "final", "(", "torch", ".", "div", "(", "torch", ".", "dot", "(", "proj1", ",", "proj2", ")", ",", "(", "norm1", "*", "norm2", "+", "1e-8", ")", ")", ".", "view", "(", "1", ")", ")", "\n", "\n", "loss", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "(", "pair", "[", "2", "]", ",", "similarity", ")", "\n", "\n", "\n", "\n", "product", "=", "torch", ".", "mm", "(", "projection", ".", "weight", ",", "torch", ".", "transpose", "(", "projection", ".", "weight", ",", "0", ",", "1", ")", ")", "\n", "lossOrthog", "=", "0.1", "*", "torch", ".", "nn", ".", "MSELoss", "(", ")", "(", "product", ",", "torch", ".", "eye", "(", "100", ")", ")", "\n", "#  print(lossOrthog)", "\n", "loss", "+=", "lossOrthog", "\n", "\n", "\n", "return", "loss", "\n", "#print(similarity.data.numpy(), pair[2], loss.data.numpy())", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion.backwardProject": [[518, 522], ["optim.zero_grad", "loss.backward", "optim.step"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backwardProject", "(", "loss", ")", ":", "\n", "    ", "optim", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-rnn.plus": [[47, 52], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-rnn.parameters": [[108, 112], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-rnn.prepareDatasetChunks": [[135, 163], ["print", "print", "torch.LongTensor().view().transpose().transpose().cuda", "range", "len", "numerified.append", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "len", "random.randint", "random.randint", "torch.LongTensor().view().transpose", "random.random", "random.random", "len", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ")", "*", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "args", ".", "sequence_length", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "           ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-rnn.prepareDatasetChunksPrevious": [[164, 180], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-rnn.prepareDataset": [[186, 199], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-rnn.forward": [[205, 258], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "torch.autograd.Variable().detach", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "Variable", "(", "hidden", ".", "data", ")", ".", "detach", "(", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", "and", "args", ".", "verbose", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "\"OOV\"", "if", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "==", "2", "else", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-rnn.backward": [[259, 266], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.parameters": [[91, 95], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.encodeWord": [[121, 126], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.choice": [[138, 157], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.encodeListOfWords": [[159, 171], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-completion-words.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "input_cut", "=", "input_tensor_forward", "#[:-1]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.choiceList": [[175, 196], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.encodeSequenceBatchForward": [[199, 209], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.encodeSequenceBatchBackward": [[212, 224], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.predictNext": [[228, 233], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.keepGenerating": [[234, 258], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.doChoiceList": [[260, 268], ["char-lm-ud-stationary-completion-words.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-completion-words.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-completion-words.doChoiceListLosses": [[268, 276], ["char-lm-ud-stationary-completion-words.choiceList", "print", "print", "char-lm-ud-stationary-completion-words.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words-VOCAB.plus": [[48, 53], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words-VOCAB.parameters": [[92, 96], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words-VOCAB.prepareDatasetChunks": [[121, 165], ["print", "numerified.append", "len", "torch.LongTensor().view().transpose().transpose().cuda", "range", "print", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "random.randint", "random.randint", "len", "random.random", "random.random", "len", "torch.LongTensor().view().transpose", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "#print(len(chunk))", "\n", "       ", "for", "char", "in", "chunk", ":", "\n", "#         if char == \" \":", "\n", "#          continue", "\n", "         ", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "#     print(len(numerified))", "\n", "#      print(args.batchSize)", "\n", "#       print(args.sequence_length)", "\n", "\n", "", "if", "len", "(", "numerified", ")", ">", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ":", "\n", "         ", "sequenceLengthHere", "=", "args", ".", "sequence_length", "\n", "#         elif len(numerified) > args.batchSize:", "\n", "#            print(\"Taking small sequence\")", "\n", "#            sequenceLengthHere = int(len(numerified) / args.batchSize)", "\n", "#            assert sequenceLengthHere < args.sequence_length", "\n", "#            assert  sequenceLengthHere > 0", "\n", "\n", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", ")", "*", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "\n", "#print(len(numerifiedCurrent))", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "sequenceLengthHere", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "             ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "", "else", ":", "\n", "         ", "print", "(", "\"Skipping\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words-VOCAB.prepareDatasetChunksPrevious": [[166, 182], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words-VOCAB.prepareDataset": [[188, 201], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words-VOCAB.forward": [[207, 260], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "tuple", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable().detach", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.autograd.Variable", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "tuple", "(", "[", "Variable", "(", "x", ".", "data", ")", ".", "detach", "(", ")", "for", "x", "in", "hidden", "]", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-holmes-words-VOCAB.backward": [[261, 268], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "args", ".", "clip_grad_limit", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.corpusIteratorHolmesWords.load": [[5, 21], ["open", "line.find", "chunk.append", "word.lower", "len"], "function", ["None"], ["def", "load", "(", "language", ",", "partition", ")", ":", "\n", "    ", "assert", "language", "==", "\"english\"", "\n", "chunk", "=", "[", "]", "\n", "path", "=", "MSR_COMP_HOME", "+", "\"//holmes-tokenized\"", "\n", "with", "open", "(", "path", "+", "\"-\"", "+", "partition", "+", "\".txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "     ", "for", "line", "in", "inFile", ":", "\n", "      ", "index", "=", "line", ".", "find", "(", "\"\\t\"", ")", "\n", "if", "index", "==", "-", "1", ":", "\n", "          ", "continue", "\n", "", "word", "=", "line", "[", ":", "index", "]", "\n", "chunk", ".", "append", "(", "word", ".", "lower", "(", ")", ")", "\n", "if", "len", "(", "chunk", ")", ">", "10000", ":", "\n", "#   random.shuffle(chunk)", "\n", "         ", "yield", "chunk", "\n", "chunk", "=", "[", "]", "\n", "", "", "", "yield", "chunk", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.corpusIteratorHolmesWords.training": [[22, 24], ["corpusIteratorHolmesWords.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "training", "(", "language", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"train\"", ")", "\n", "", "def", "dev", "(", "language", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.3_completion.corpusIteratorHolmesWords.dev": [[24, 26], ["corpusIteratorHolmesWords.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "dev", "(", "language", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"valid\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.util.weight_drop.WeightDrop.__init__": [[8, 14], ["super().__init__", "weight_drop.WeightDrop._setup"], "methods", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.__init__", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.util.weight_drop.WeightDrop._setup"], ["    ", "def", "__init__", "(", "self", ",", "module", ",", "weights", ",", "variational", "=", "False", ")", ":", "\n", "        ", "super", "(", "WeightDrop", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "module", "=", "module", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "variational", "=", "variational", "\n", "self", ".", "_setup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.util.weight_drop.WeightDrop.widget_demagnetizer_y2k_edition": [[15, 21], ["None"], "methods", ["None"], ["", "def", "widget_demagnetizer_y2k_edition", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "# We need to replace flatten_parameters with a nothing function", "\n", "# It must be a function rather than a lambda as otherwise pickling explodes", "\n", "# We can't write boring code though, so ... WIDGET DEMAGNETIZER Y2K EDITION!", "\n", "# (\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b", "\n", "        ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.util.weight_drop.WeightDrop._setup": [[22, 32], ["issubclass", "type", "print", "getattr", "weight_drop.WeightDrop.module.register_parameter", "torch.nn.Parameter"], "methods", ["None"], ["", "def", "_setup", "(", "self", ")", ":", "\n", "# Terrible temporary solution to an issue regarding compacting weights re: CUDNN RNN", "\n", "        ", "if", "issubclass", "(", "type", "(", "self", ".", "module", ")", ",", "torch", ".", "nn", ".", "RNNBase", ")", ":", "\n", "            ", "self", ".", "module", ".", "flatten_parameters", "=", "self", ".", "widget_demagnetizer_y2k_edition", "\n", "\n", "", "for", "name_w", ",", "dropout", "in", "self", ".", "weights", ":", "\n", "            ", "print", "(", "'Applying weight drop of {} to {}'", ".", "format", "(", "dropout", ",", "name_w", ")", ")", "\n", "w", "=", "getattr", "(", "self", ".", "module", ",", "name_w", ")", "\n", "del", "self", ".", "module", ".", "_parameters", "[", "name_w", "]", "\n", "self", ".", "module", ".", "register_parameter", "(", "name_w", "+", "'_raw'", ",", "Parameter", "(", "w", ".", "data", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.util.weight_drop.WeightDrop._setweights": [[33, 45], ["getattr", "setattr", "torch.autograd.Variable", "torch.nn.functional.dropout", "torch.nn.functional.dropout", "torch.ones", "mask.cuda.cuda.cuda", "mask.cuda.cuda.expand_as", "getattr.size"], "methods", ["None"], ["", "", "def", "_setweights", "(", "self", ")", ":", "\n", "        ", "for", "name_w", ",", "dropout", "in", "self", ".", "weights", ":", "\n", "            ", "raw_w", "=", "getattr", "(", "self", ".", "module", ",", "name_w", "+", "'_raw'", ")", "\n", "w", "=", "None", "\n", "if", "self", ".", "variational", ":", "\n", "                ", "mask", "=", "torch", ".", "autograd", ".", "Variable", "(", "torch", ".", "ones", "(", "raw_w", ".", "size", "(", "0", ")", ",", "1", ")", ")", "\n", "if", "raw_w", ".", "is_cuda", ":", "mask", "=", "mask", ".", "cuda", "(", ")", "\n", "mask", "=", "torch", ".", "nn", ".", "functional", ".", "dropout", "(", "mask", ",", "p", "=", "dropout", ",", "training", "=", "True", ")", "\n", "w", "=", "mask", ".", "expand_as", "(", "raw_w", ")", "*", "raw_w", "\n", "", "else", ":", "\n", "                ", "w", "=", "torch", ".", "nn", ".", "functional", ".", "dropout", "(", "raw_w", ",", "p", "=", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "", "setattr", "(", "self", ".", "module", ",", "name_w", ",", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.util.weight_drop.WeightDrop.forward": [[46, 49], ["weight_drop.WeightDrop._setweights", "weight_drop.WeightDrop.module.forward"], "methods", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.util.weight_drop.WeightDrop._setweights", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.forward"], ["", "", "def", "forward", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "self", ".", "_setweights", "(", ")", "\n", "return", "self", ".", "module", ".", "forward", "(", "*", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.1_syntax_german.getGermanNounDeclension.processTable": [[26, 55], ["print", "print", "len", "line.split", "tuple", "key.endswith", "len", "key.endswith", "key.endswith", "table[].append", "len", "print", "value.strip"], "function", ["None"], ["def", "processTable", "(", "word", ",", "declensionTable", ")", ":", "\n", "   ", "if", "len", "(", "declensionTable", ")", "==", "0", ":", "\n", "      ", "return", "\n", "#   if not declensionTable[0].startswith(\"|Genus\"):", "\n", "#     print(declensionTable)", "\n", "#    return", "\n", "#gender = declensionTable[0][7]", "\n", "", "table", "=", "{", "key", ":", "[", "]", "for", "key", "in", "keys", "}", "\n", "for", "line", "in", "declensionTable", ":", "\n", "     ", "keyValue", "=", "line", ".", "split", "(", "\"=\"", ")", "\n", "if", "len", "(", "keyValue", ")", "!=", "2", ":", "\n", "#         print(keyValue)", "\n", "         ", "continue", "\n", "", "key", ",", "value", "=", "tuple", "(", "keyValue", ")", "\n", "key", "=", "key", "[", "1", ":", "]", "\n", "if", "key", ".", "endswith", "(", "\"*\"", ")", ":", "\n", "         ", "key", "=", "key", "[", ":", "-", "1", "]", "\n", "", "if", "key", ".", "endswith", "(", "\" 1\"", ")", "or", "key", ".", "endswith", "(", "\" 2\"", ")", ":", "\n", "         ", "key", "=", "key", "[", ":", "-", "2", "]", "\n", "", "if", "key", "in", "table", ":", "\n", "        ", "table", "[", "key", "]", ".", "append", "(", "value", ".", "strip", "(", ")", ")", "\n", "", "else", ":", "\n", "       ", "continue", "\n", "#      print(key)", "\n", "", "", "print", "(", "\"###\"", ")", "\n", "print", "(", "word", ")", "\n", "for", "key", "in", "keys", ":", "\n", "      ", "if", "len", "(", "table", "[", "key", "]", ")", ">", "0", ":", "\n", "         ", "print", "(", "\"\\t\"", ".", "join", "(", "[", "key", "]", "+", "table", "[", "key", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.4.2.1_syntax_german.getGermanVerbConjugation.recordTable": [[29, 41], ["len", "print", "print", "len", "len", "len"], "function", ["None"], ["def", "recordTable", "(", "table", ",", "tableIndices", ")", ":", "\n", "     ", "table", "=", "[", "x", "for", "x", "in", "table", "if", "len", "(", "\"\"", ".", "join", "(", "x", ")", ")", ">", "0", "and", "len", "(", "x", ")", ">", "2", "]", "\n", "if", "len", "(", "table", ")", ">", "2", ":", "\n", "         ", "print", "(", "\"################## \"", "+", "tableIndices", "[", "0", "]", ")", "\n", "index", "=", "tableIndices", "[", "0", "]", "\n", "print", "(", "\"\\n\"", ".", "join", "(", "[", "\"\\t\"", ".", "join", "(", "x", ")", "for", "x", "in", "table", "]", ")", ")", "\n", "# if \"Infinitiv\" in index or \"Imperativ\" in index:", "\n", "#       _ = 0", "\n", "# else:", "\n", "#     assert len(table) in [6, 7, 8]", "\n", "del", "tableIndices", "[", "0", "]", "\n", "lengths", "=", "[", "len", "(", "x", ")", "for", "x", "in", "table", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.plus": [[48, 53], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.parameters": [[93, 97], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.encodeWord": [[128, 133], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.choice": [[146, 165], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.choiceList": [[168, 189], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.encodeSequenceBatchForward": [[192, 202], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.encodeSequenceBatchBackward": [[205, 217], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.predictNext": [[221, 226], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.keepGenerating": [[227, 251], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.doChoiceList": [[277, 285], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.doChoiceListLosses": [[285, 293], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.doChoice": [[296, 302], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS.encodeWord", "x.split", "y.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", ",", "encodeWord", "(", "y", ".", "split", "(", "\" \"", ")", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.plus": [[48, 53], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.parameters": [[108, 112], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.encodeWord": [[138, 143], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.choice": [[156, 175], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.choiceList": [[178, 199], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.encodeSequenceBatchForward": [[202, 212], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.encodeSequenceBatchBackward": [[215, 227], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.predictNext": [[231, 236], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.keepGenerating": [[237, 261], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.doChoiceList": [[287, 295], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.doChoice": [[297, 303], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.plus": [[42, 47], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.parameters": [[102, 106], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.encodeWord": [[132, 137], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.choice": [[150, 169], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.choiceList": [[172, 193], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.encodeSequenceBatchForward": [[196, 206], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.encodeSequenceBatchBackward": [[209, 221], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.predictNext": [[225, 230], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.keepGenerating": [[231, 255], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.doChoiceList": [[281, 289], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.doChoice": [[291, 297], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.plus": [[48, 53], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.parameters": [[93, 97], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.encodeWord": [[128, 133], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.choice": [[146, 165], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.choiceList": [[168, 189], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.encodeSequenceBatchForward": [[192, 202], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.encodeSequenceBatchBackward": [[205, 217], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.predictNext": [[221, 226], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.keepGenerating": [[227, 251], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.doChoiceList": [[277, 285], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.doChoiceListLosses": [[285, 293], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.doChoice": [[296, 302], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-WORDS-generateStimuli.encodeWord", "x.split", "y.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", ",", "encodeWord", "(", "y", ".", "split", "(", "\" \"", ")", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.plus": [[48, 53], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.parameters": [[117, 121], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.encodeWord": [[147, 152], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.choice": [[165, 184], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.choiceList": [[187, 208], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.encodeSequenceBatchForward": [[211, 221], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.encodeSequenceBatchBackward": [[224, 236], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.predictNext": [[240, 245], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.keepGenerating": [[246, 270], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.doChoiceList": [[296, 304], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.doChoice": [[306, 312], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-RNN-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.plus": [[42, 47], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.parameters": [[111, 115], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.encodeWord": [[141, 146], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.choice": [[159, 178], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.choiceList": [[181, 202], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.encodeSequenceBatchForward": [[205, 215], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.encodeSequenceBatchBackward": [[218, 230], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.predictNext": [[234, 239], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.keepGenerating": [[240, 264], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.doChoiceList": [[290, 298], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.doChoice": [[300, 306], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.plus": [[42, 47], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.parameters": [[102, 106], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.encodeWord": [[132, 137], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.choice": [[150, 169], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.choiceList": [[172, 193], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.encodeSequenceBatchForward": [[196, 206], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.encodeSequenceBatchBackward": [[209, 221], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.predictNext": [[225, 230], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.keepGenerating": [[231, 255], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.doChoiceList": [[281, 289], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.doChoice": [[291, 297], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.plus": [[42, 47], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.parameters": [[102, 106], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.encodeWord": [[132, 137], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.choice": [[150, 169], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.choiceList": [[172, 193], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.encodeSequenceBatchForward": [[196, 206], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.encodeSequenceBatchBackward": [[209, 221], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.predictNext": [[225, 230], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.keepGenerating": [[231, 255], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.doChoiceList": [[281, 289], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.case.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.doChoice": [[291, 297], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-art-adj-noun-cleaned-generateStimuli.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.plus": [[41, 46], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.parameters": [[101, 105], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.encodeWord": [[131, 136], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "0", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.choice": [[149, 168], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.choiceList": [[171, 192], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.encodeSequenceBatchForward": [[195, 205], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.encodeSequenceBatchBackward": [[208, 220], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.predictNext": [[224, 229], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.keepGenerating": [[230, 254], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.doChoiceList": [[280, 288], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.doChoiceListLosses": [[289, 297], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.doChoice": [[297, 303], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.plus": [[42, 47], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.parameters": [[102, 106], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.encodeWord": [[132, 137], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.choice": [[150, 169], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.choiceList": [[172, 193], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.encodeSequenceBatchForward": [[196, 206], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.encodeSequenceBatchBackward": [[209, 221], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.predictNext": [[225, 230], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.keepGenerating": [[231, 255], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.doChoiceList": [[281, 289], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.doChoice": [[291, 297], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.plus": [[48, 53], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.parameters": [[117, 121], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.encodeWord": [[147, 152], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "0", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.choice": [[165, 184], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.choiceList": [[187, 208], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.encodeSequenceBatchForward": [[211, 221], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.encodeSequenceBatchBackward": [[224, 236], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.predictNext": [[240, 245], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.keepGenerating": [[246, 270], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.doChoiceList": [[296, 304], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.doChoiceListLosses": [[305, 313], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.doChoice": [[313, 319], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.plus": [[42, 47], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.parameters": [[111, 115], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.encodeWord": [[141, 146], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "0", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.choice": [[159, 178], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.choiceList": [[181, 202], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.encodeSequenceBatchForward": [[205, 215], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.encodeSequenceBatchBackward": [[218, 230], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.predictNext": [[234, 239], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.keepGenerating": [[240, 264], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.doChoiceList": [[290, 298], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.doChoiceListLosses": [[299, 307], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.doChoice": [[307, 313], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.plus": [[48, 53], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.parameters": [[108, 112], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.encodeWord": [[138, 143], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "0", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.choice": [[156, 175], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.choiceList": [[178, 199], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.encodeSequenceBatchForward": [[202, 212], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.encodeSequenceBatchBackward": [[215, 227], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.predictNext": [[231, 236], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.keepGenerating": [[237, 261], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.doChoiceList": [[287, 295], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.doChoiceListLosses": [[296, 304], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.doChoice": [[304, 310], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.plus": [[48, 53], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.parameters": [[93, 97], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.encodeWord": [[128, 133], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.choice": [[146, 165], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.choiceList": [[168, 189], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.encodeSequenceBatchForward": [[192, 202], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.encodeSequenceBatchBackward": [[205, 217], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.predictNext": [[221, 226], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.keepGenerating": [[227, 251], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.doChoiceList": [[277, 285], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.doChoiceListLosses": [[285, 293], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.subcat.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.doChoice": [[296, 302], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-prep-noun-cleaned-WORDS.encodeWord", "x.split", "y.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", ",", "encodeWord", "(", "y", ".", "split", "(", "\" \"", ")", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.plus": [[45, 50], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.parameters": [[90, 94], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.encodeWord": [[125, 130], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.choice": [[143, 162], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.choiceList": [[165, 186], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.encodeSequenceBatchForward": [[189, 199], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.encodeSequenceBatchBackward": [[202, 214], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.predictNext": [[218, 223], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.keepGenerating": [[224, 248], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.doChoiceList": [[256, 264], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.doChoiceListLosses": [[264, 272], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.doChoice": [[275, 281], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.encodeWord", "x.split", "y.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", ",", "encodeWord", "(", "y", ".", "split", "(", "\" \"", ")", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.genderTest": [[285, 314], ["dict", "enumerate", "range", "open", "set", "next().strip", "next().strip", "next().strip", "random.random", "random.random", "print", "next", "next", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS.doChoiceList", "next", "round", "range", "random.random", "random.random", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.doChoiceList"], ["def", "genderTest", "(", "mode", ")", ":", "\n", "   ", "genders", "=", "dict", "(", "[", "(", "\"Gender=\"", "+", "x", ",", "set", "(", ")", ")", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", "\n", "\n", "#print(genders)", "\n", "counter", "=", "0", "\n", "\n", "results", "=", "[", "[", "0", ",", "0", ",", "0", "]", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "for", "genderIndex", ",", "gender", "in", "enumerate", "(", "[", "\"Gender=\"", "+", "x", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", ":", "\n", "     ", "with", "open", "(", "f\"stimuli/german-gender-{gender}-{mode}-noOOVs.txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "       ", "counter", "=", "0", "\n", "while", "True", ":", "\n", "         ", "counter", "+=", "1", "\n", "#    adverbs = [\"sehr\"]", "\n", "#   adjective = \"\" #\"\".join(adverbs)+random.choice(adjectives)+\"e\"", "\n", "\n", "try", ":", "\n", "            ", "stimulusDer", "=", "next", "(", "inFile", ")", ".", "strip", "(", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "break", "\n", "", "stimulusDie", "=", "next", "(", "inFile", ")", ".", "strip", "(", ")", "\n", "stimulusDas", "=", "next", "(", "inFile", ")", ".", "strip", "(", ")", "\n", "\n", "\n", "#       noun = f\"{adjective}{noun}\"", "\n", "results", "[", "genderIndex", "]", "[", "doChoiceList", "(", "[", "f\". {stimulusDer} .\"", ",", "f\". {stimulusDie} .\"", ",", "f\". {stimulusDas} .\"", "]", ",", "printHere", "=", "(", "random", ".", "random", "(", ")", ">", "0.98", ")", ")", "]", "+=", "1", "\n", "if", "random", ".", "random", "(", ")", ">", "0.98", ":", "\n", "           ", "print", "(", "[", "[", "round", "(", "x", "/", "(", "counter", "if", "genderIndex", "==", "i", "else", "1", ")", ",", "2", ")", "for", "x", "in", "results", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "results", ")", ")", "]", ")", "\n", "", "", "results", "[", "genderIndex", "]", "=", "[", "x", "/", "counter", "for", "x", "in", "results", "[", "genderIndex", "]", "]", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.plus": [[39, 44], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.parameters": [[108, 112], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.encodeWord": [[138, 143], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.choice": [[156, 175], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.choiceList": [[178, 199], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.encodeSequenceBatchForward": [[202, 212], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.encodeSequenceBatchBackward": [[215, 227], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.predictNext": [[231, 236], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.keepGenerating": [[237, 261], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.doChoiceList": [[269, 277], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.doChoiceListLosses": [[277, 285], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.doChoice": [[288, 294], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.genderTest": [[321, 378], ["corpusIterator.CorpusIterator", "dict", "corpusIterator.CorpusIterator.iterator", "enumerate", "range", "open", "set", "print", "print", "print", "random.random", "random.random", "print", "len", "genders[].add", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-LEXICON.doChoiceList", "x.startswith", "line[].lower", "random.choice", "random.choice", "random.choice", "random.choice", "round", "range", "random.choice", "random.choice", "random.random", "random.random", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.iterator", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.doChoiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "", "", "", "def", "genderTest", "(", "mode", ")", ":", "\n", "   ", "training", "=", "CorpusIterator", "(", "\"German\"", ",", "partition", "=", "\"train\"", ",", "storeMorph", "=", "True", ",", "removePunctuation", "=", "True", ")", "\n", "genders", "=", "dict", "(", "[", "(", "\"Gender=\"", "+", "x", ",", "set", "(", ")", ")", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", "\n", "for", "sentence", "in", "training", ".", "iterator", "(", ")", ":", "\n", "       ", "for", "line", "in", "sentence", ":", "\n", "        ", "if", "line", "[", "\"posUni\"", "]", "==", "\"NOUN\"", "and", "\"|\"", "not", "in", "line", "[", "\"lemma\"", "]", ":", "\n", "\n", "           ", "morph", "=", "line", "[", "\"morph\"", "]", "\n", "if", "\"Number=Sing\"", "in", "morph", "and", "\"Case=Nom\"", "in", "morph", ":", "\n", "            ", "gender", "=", "[", "x", "for", "x", "in", "morph", "if", "x", ".", "startswith", "(", "\"Gender=\"", ")", "]", "\n", "if", "len", "(", "gender", ")", ">", "0", ":", "\n", "              ", "genders", "[", "gender", "[", "0", "]", "]", ".", "add", "(", "line", "[", "\"lemma\"", "]", ".", "lower", "(", ")", ")", "\n", "\n", "#print(genders)", "\n", "", "", "", "", "", "counter", "=", "0", "\n", "\n", "results", "=", "[", "[", "0", ",", "0", ",", "0", "]", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "for", "genderIndex", ",", "gender", "in", "enumerate", "(", "[", "\"Gender=\"", "+", "x", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", ":", "\n", "     ", "with", "open", "(", "f\"stimuli/german-restricted-gender-{gender}-{mode}.txt\"", ",", "\"w\"", ")", "as", "outFile", ":", "\n", "       ", "counter", "=", "0", "\n", "for", "noun", "in", "genders", "[", "gender", "]", ":", "\n", "         ", "if", "noun", "not", "in", "stoi_words", ":", "\n", "            ", "continue", "\n", "", "counter", "+=", "1", "\n", "#    adverbs = [\"sehr\"]", "\n", "#   adjective = \"\" #\"\".join(adverbs)+random.choice(adjectives)+\"e\"", "\n", "if", "mode", "==", "\"nothing\"", ":", "\n", "           ", "noun", "=", "noun", "\n", "nounStimulus", "=", "[", "noun", "]", "\n", "", "elif", "mode", "==", "\"adjective\"", ":", "\n", "            ", "adjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "nounStimulus", "=", "[", "adjective", ",", "noun", "]", "\n", "noun", "=", "adjective", "+", "noun", "\n", "", "elif", "mode", "==", "\"sehr + adjective\"", ":", "\n", "            ", "adjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "nounStimulus", "=", "[", "\"sehr\"", ",", "adjective", ",", "noun", "]", "\n", "noun", "=", "\"sehr\"", "+", "adjective", "+", "noun", "\n", "", "elif", "mode", "==", "\"sehr + extrem + adjective\"", ":", "\n", "            ", "adjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "nounStimulus", "=", "[", "\"sehr\"", ",", "\"extrem\"", ",", "adjective", ",", "noun", "]", "\n", "noun", "=", "\"sehr\"", "+", "\"extrem\"", "+", "adjective", "+", "noun", "\n", "\n", "\n", "\n", "", "stimuli", "=", "[", "]", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"der\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"die\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"das\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "\n", "\n", "#       noun = f\"{adjective}{noun}\"", "\n", "results", "[", "genderIndex", "]", "[", "doChoiceList", "(", "[", "f\".der{noun}.\"", ",", "f\".die{noun}.\"", ",", "f\".das{noun}.\"", "]", ",", "printHere", "=", "(", "random", ".", "random", "(", ")", ">", "0.98", ")", ")", "]", "+=", "1", "\n", "#       results[doChoiceList([\".ein\"+noun+\".\", \".eine\"+noun+\".\"])] += 1", "\n", "if", "random", ".", "random", "(", ")", ">", "0.98", ":", "\n", "            ", "print", "(", "[", "[", "round", "(", "x", "/", "(", "counter", "if", "genderIndex", "==", "i", "else", "1", ")", ",", "2", ")", "for", "x", "in", "results", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "results", ")", ")", "]", ")", "\n", "", "", "results", "[", "genderIndex", "]", "=", "[", "x", "/", "counter", "for", "x", "in", "results", "[", "genderIndex", "]", "]", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.plus": [[39, 44], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.parameters": [[99, 103], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.encodeWord": [[129, 134], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.choice": [[147, 166], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.choiceList": [[169, 190], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.encodeSequenceBatchForward": [[193, 203], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.encodeSequenceBatchBackward": [[206, 218], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.predictNext": [[222, 227], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.keepGenerating": [[228, 252], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.doChoiceList": [[260, 268], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.doChoiceListLosses": [[268, 276], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.doChoice": [[279, 285], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.genderTest": [[311, 366], ["corpusIterator.CorpusIterator", "dict", "corpusIterator.CorpusIterator.iterator", "enumerate", "range", "open", "set", "print", "print", "print", "random.random", "random.random", "print", "len", "genders[].add", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-generateStimuli.doChoiceList", "x.startswith", "line[].lower", "random.choice", "random.choice", "random.choice", "random.choice", "round", "range", "random.choice", "random.choice", "random.random", "random.random", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.iterator", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.doChoiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "", "", "def", "genderTest", "(", "mode", ")", ":", "\n", "   ", "training", "=", "CorpusIterator", "(", "\"German\"", ",", "partition", "=", "\"train\"", ",", "storeMorph", "=", "True", ",", "removePunctuation", "=", "True", ")", "\n", "genders", "=", "dict", "(", "[", "(", "\"Gender=\"", "+", "x", ",", "set", "(", ")", ")", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", "\n", "for", "sentence", "in", "training", ".", "iterator", "(", ")", ":", "\n", "       ", "for", "line", "in", "sentence", ":", "\n", "        ", "if", "line", "[", "\"posUni\"", "]", "==", "\"NOUN\"", "and", "\"|\"", "not", "in", "line", "[", "\"lemma\"", "]", ":", "\n", "\n", "           ", "morph", "=", "line", "[", "\"morph\"", "]", "\n", "if", "\"Number=Sing\"", "in", "morph", "and", "\"Case=Nom\"", "in", "morph", ":", "\n", "            ", "gender", "=", "[", "x", "for", "x", "in", "morph", "if", "x", ".", "startswith", "(", "\"Gender=\"", ")", "]", "\n", "if", "len", "(", "gender", ")", ">", "0", ":", "\n", "              ", "genders", "[", "gender", "[", "0", "]", "]", ".", "add", "(", "line", "[", "\"lemma\"", "]", ".", "lower", "(", ")", ")", "\n", "\n", "#print(genders)", "\n", "", "", "", "", "", "counter", "=", "0", "\n", "\n", "results", "=", "[", "[", "0", ",", "0", ",", "0", "]", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "for", "genderIndex", ",", "gender", "in", "enumerate", "(", "[", "\"Gender=\"", "+", "x", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", ":", "\n", "     ", "with", "open", "(", "f\"stimuli/german-gender-{gender}-{mode}.txt\"", ",", "\"w\"", ")", "as", "outFile", ":", "\n", "       ", "counter", "=", "0", "\n", "for", "noun", "in", "genders", "[", "gender", "]", ":", "\n", "         ", "counter", "+=", "1", "\n", "#    adverbs = [\"sehr\"]", "\n", "#   adjective = \"\" #\"\".join(adverbs)+random.choice(adjectives)+\"e\"", "\n", "if", "mode", "==", "\"nothing\"", ":", "\n", "           ", "noun", "=", "noun", "\n", "nounStimulus", "=", "[", "noun", "]", "\n", "", "elif", "mode", "==", "\"adjective\"", ":", "\n", "            ", "adjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "nounStimulus", "=", "[", "adjective", ",", "noun", "]", "\n", "noun", "=", "adjective", "+", "noun", "\n", "", "elif", "mode", "==", "\"sehr + adjective\"", ":", "\n", "            ", "adjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "nounStimulus", "=", "[", "\"sehr\"", ",", "adjective", ",", "noun", "]", "\n", "noun", "=", "\"sehr\"", "+", "adjective", "+", "noun", "\n", "", "elif", "mode", "==", "\"sehr + extrem + adjective\"", ":", "\n", "            ", "adjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "nounStimulus", "=", "[", "\"sehr\"", ",", "\"extrem\"", ",", "adjective", ",", "noun", "]", "\n", "noun", "=", "\"sehr\"", "+", "\"extrem\"", "+", "adjective", "+", "noun", "\n", "\n", "\n", "\n", "", "stimuli", "=", "[", "]", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"der\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"die\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"das\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "\n", "\n", "#       noun = f\"{adjective}{noun}\"", "\n", "results", "[", "genderIndex", "]", "[", "doChoiceList", "(", "[", "f\".der{noun}.\"", ",", "f\".die{noun}.\"", ",", "f\".das{noun}.\"", "]", ",", "printHere", "=", "(", "random", ".", "random", "(", ")", ">", "0.98", ")", ")", "]", "+=", "1", "\n", "#       results[doChoiceList([\".ein\"+noun+\".\", \".eine\"+noun+\".\"])] += 1", "\n", "if", "random", ".", "random", "(", ")", ">", "0.98", ":", "\n", "            ", "print", "(", "[", "[", "round", "(", "x", "/", "(", "counter", "if", "genderIndex", "==", "i", "else", "1", ")", ",", "2", ")", "for", "x", "in", "results", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "results", ")", ")", "]", ")", "\n", "", "", "results", "[", "genderIndex", "]", "=", "[", "x", "/", "counter", "for", "x", "in", "results", "[", "genderIndex", "]", "]", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.plus": [[51, 56], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.parameters": [[111, 115], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.encodeWord": [[141, 146], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.choice": [[159, 178], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.choiceList": [[181, 202], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.encodeSequenceBatchForward": [[205, 215], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.encodeSequenceBatchBackward": [[218, 230], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.predictNext": [[234, 239], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.keepGenerating": [[240, 264], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.doChoiceList": [[272, 280], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.doChoiceListLosses": [[280, 288], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.doChoice": [[291, 297], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.genderTest": [[301, 331], ["dict", "enumerate", "range", "open", "set", "next().strip().replace", "next().strip().replace", "next().strip().replace", "random.random", "random.random", "print", "next().strip", "next().strip", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN.doChoiceList", "next().strip", "next", "next", "round", "range", "next", "random.random", "random.random", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.doChoiceList"], ["def", "genderTest", "(", "mode", ")", ":", "\n", "   ", "genders", "=", "dict", "(", "[", "(", "\"Gender=\"", "+", "x", ",", "set", "(", ")", ")", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", "\n", "\n", "#print(genders)", "\n", "counter", "=", "0", "\n", "\n", "results", "=", "[", "[", "0", ",", "0", ",", "0", "]", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "for", "genderIndex", ",", "gender", "in", "enumerate", "(", "[", "\"Gender=\"", "+", "x", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", ":", "\n", "     ", "with", "open", "(", "f\"stimuli/german-gender-{gender}-{mode}.txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "       ", "counter", "=", "0", "\n", "while", "True", ":", "\n", "         ", "counter", "+=", "1", "\n", "#    adverbs = [\"sehr\"]", "\n", "#   adjective = \"\" #\"\".join(adverbs)+random.choice(adjectives)+\"e\"", "\n", "\n", "try", ":", "\n", "            ", "stimulusDer", "=", "next", "(", "inFile", ")", ".", "strip", "(", ")", ".", "replace", "(", "\" \"", ",", "\"\"", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "break", "\n", "", "stimulusDie", "=", "next", "(", "inFile", ")", ".", "strip", "(", ")", ".", "replace", "(", "\" \"", ",", "\"\"", ")", "\n", "stimulusDas", "=", "next", "(", "inFile", ")", ".", "strip", "(", ")", ".", "replace", "(", "\" \"", ",", "\"\"", ")", "\n", "\n", "\n", "#       noun = f\"{adjective}{noun}\"", "\n", "results", "[", "genderIndex", "]", "[", "doChoiceList", "(", "[", "f\".{stimulusDer}.\"", ",", "f\".{stimulusDie}.\"", ",", "f\".{stimulusDas}.\"", "]", ",", "printHere", "=", "(", "random", ".", "random", "(", ")", ">", "0.98", ")", ")", "]", "+=", "1", "\n", "#       results[doChoiceList([\".ein\"+noun+\".\", \".eine\"+noun+\".\"])] += 1", "\n", "if", "random", ".", "random", "(", ")", ">", "0.98", ":", "\n", "            ", "print", "(", "[", "[", "round", "(", "x", "/", "(", "counter", "if", "genderIndex", "==", "i", "else", "1", ")", ",", "2", ")", "for", "x", "in", "results", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "results", ")", ")", "]", ")", "\n", "", "", "results", "[", "genderIndex", "]", "=", "[", "x", "/", "counter", "for", "x", "in", "results", "[", "genderIndex", "]", "]", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.plus": [[45, 50], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.parameters": [[114, 118], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.encodeWord": [[144, 149], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.choice": [[162, 181], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.choiceList": [[184, 205], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.encodeSequenceBatchForward": [[208, 218], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.encodeSequenceBatchBackward": [[221, 233], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.predictNext": [[237, 242], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.keepGenerating": [[243, 267], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.doChoiceList": [[275, 283], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.doChoiceListLosses": [[283, 291], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.doChoice": [[294, 300], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.genderTest": [[327, 384], ["corpusIterator.CorpusIterator", "dict", "corpusIterator.CorpusIterator.iterator", "enumerate", "range", "open", "set", "print", "print", "print", "random.random", "random.random", "print", "len", "genders[].add", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-RNN-LEXICON.doChoiceList", "x.startswith", "line[].lower", "random.choice", "random.choice", "random.choice", "random.choice", "round", "range", "random.choice", "random.choice", "random.random", "random.random", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.iterator", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.doChoiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "", "", "", "def", "genderTest", "(", "mode", ")", ":", "\n", "   ", "training", "=", "CorpusIterator", "(", "\"German\"", ",", "partition", "=", "\"train\"", ",", "storeMorph", "=", "True", ",", "removePunctuation", "=", "True", ")", "\n", "genders", "=", "dict", "(", "[", "(", "\"Gender=\"", "+", "x", ",", "set", "(", ")", ")", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", "\n", "for", "sentence", "in", "training", ".", "iterator", "(", ")", ":", "\n", "       ", "for", "line", "in", "sentence", ":", "\n", "        ", "if", "line", "[", "\"posUni\"", "]", "==", "\"NOUN\"", "and", "\"|\"", "not", "in", "line", "[", "\"lemma\"", "]", ":", "\n", "\n", "           ", "morph", "=", "line", "[", "\"morph\"", "]", "\n", "if", "\"Number=Sing\"", "in", "morph", "and", "\"Case=Nom\"", "in", "morph", ":", "\n", "            ", "gender", "=", "[", "x", "for", "x", "in", "morph", "if", "x", ".", "startswith", "(", "\"Gender=\"", ")", "]", "\n", "if", "len", "(", "gender", ")", ">", "0", ":", "\n", "              ", "genders", "[", "gender", "[", "0", "]", "]", ".", "add", "(", "line", "[", "\"lemma\"", "]", ".", "lower", "(", ")", ")", "\n", "\n", "#print(genders)", "\n", "", "", "", "", "", "counter", "=", "0", "\n", "\n", "results", "=", "[", "[", "0", ",", "0", ",", "0", "]", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "for", "genderIndex", ",", "gender", "in", "enumerate", "(", "[", "\"Gender=\"", "+", "x", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", ":", "\n", "     ", "with", "open", "(", "f\"stimuli/german-gender-{gender}-{mode}.txt\"", ",", "\"w\"", ")", "as", "outFile", ":", "\n", "       ", "counter", "=", "0", "\n", "for", "noun", "in", "genders", "[", "gender", "]", ":", "\n", "         ", "if", "noun", "not", "in", "stoi_words", ":", "\n", "            ", "continue", "\n", "", "counter", "+=", "1", "\n", "#    adverbs = [\"sehr\"]", "\n", "#   adjective = \"\" #\"\".join(adverbs)+random.choice(adjectives)+\"e\"", "\n", "if", "mode", "==", "\"nothing\"", ":", "\n", "           ", "noun", "=", "noun", "\n", "nounStimulus", "=", "[", "noun", "]", "\n", "", "elif", "mode", "==", "\"adjective\"", ":", "\n", "            ", "adjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "nounStimulus", "=", "[", "adjective", ",", "noun", "]", "\n", "noun", "=", "adjective", "+", "noun", "\n", "", "elif", "mode", "==", "\"sehr + adjective\"", ":", "\n", "            ", "adjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "nounStimulus", "=", "[", "\"sehr\"", ",", "adjective", ",", "noun", "]", "\n", "noun", "=", "\"sehr\"", "+", "adjective", "+", "noun", "\n", "", "elif", "mode", "==", "\"sehr + extrem + adjective\"", ":", "\n", "            ", "adjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "nounStimulus", "=", "[", "\"sehr\"", ",", "\"extrem\"", ",", "adjective", ",", "noun", "]", "\n", "noun", "=", "\"sehr\"", "+", "\"extrem\"", "+", "adjective", "+", "noun", "\n", "\n", "\n", "\n", "", "stimuli", "=", "[", "]", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"der\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"die\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"das\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "\n", "\n", "#       noun = f\"{adjective}{noun}\"", "\n", "results", "[", "genderIndex", "]", "[", "doChoiceList", "(", "[", "f\".der{noun}.\"", ",", "f\".die{noun}.\"", ",", "f\".das{noun}.\"", "]", ",", "printHere", "=", "(", "random", ".", "random", "(", ")", ">", "0.98", ")", ")", "]", "+=", "1", "\n", "#       results[doChoiceList([\".ein\"+noun+\".\", \".eine\"+noun+\".\"])] += 1", "\n", "if", "random", ".", "random", "(", ")", ">", "0.98", ":", "\n", "            ", "print", "(", "[", "[", "round", "(", "x", "/", "(", "counter", "if", "genderIndex", "==", "i", "else", "1", ")", ",", "2", ")", "for", "x", "in", "results", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "results", ")", ")", "]", ")", "\n", "", "", "results", "[", "genderIndex", "]", "=", "[", "x", "/", "counter", "for", "x", "in", "results", "[", "genderIndex", "]", "]", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.plus": [[45, 50], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.parameters": [[90, 94], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.encodeWord": [[125, 130], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.choice": [[143, 162], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.choiceList": [[165, 186], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.encodeSequenceBatchForward": [[189, 199], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.encodeSequenceBatchBackward": [[202, 214], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.predictNext": [[218, 223], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.keepGenerating": [[224, 248], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.doChoiceList": [[256, 264], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.doChoiceListLosses": [[264, 272], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.encodeWord", "x.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.doChoice": [[275, 281], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.encodeWord", "x.split", "y.split"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ".", "split", "(", "\" \"", ")", ")", ",", "encodeWord", "(", "y", ".", "split", "(", "\" \"", ")", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.genderTest": [[309, 374], ["corpusIterator.CorpusIterator", "dict", "corpusIterator.CorpusIterator.iterator", "enumerate", "print", "range", "open", "set", "sum", "len", "print", "print", "print", "random.random", "random.random", "print", "len", "genders[].add", "random.choice", "random.choice", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender-WORDS-generateStimuli.doChoiceList", "x.startswith", "line[].lower", "round", "range", "random.random", "random.random", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.iterator", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.doChoiceList"], ["def", "genderTest", "(", "mode", ")", ":", "\n", "   ", "training", "=", "CorpusIterator", "(", "\"German\"", ",", "partition", "=", "\"train\"", ",", "storeMorph", "=", "True", ",", "removePunctuation", "=", "True", ")", "\n", "genders", "=", "dict", "(", "[", "(", "\"Gender=\"", "+", "x", ",", "set", "(", ")", ")", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", "\n", "\n", "\n", "for", "sentence", "in", "training", ".", "iterator", "(", ")", ":", "\n", "       ", "for", "line", "in", "sentence", ":", "\n", "        ", "if", "line", "[", "\"posUni\"", "]", "==", "\"NOUN\"", "and", "\"|\"", "not", "in", "line", "[", "\"lemma\"", "]", ":", "\n", "\n", "           ", "morph", "=", "line", "[", "\"morph\"", "]", "\n", "if", "\"Number=Sing\"", "in", "morph", "and", "\"Case=Nom\"", "in", "morph", ":", "\n", "            ", "gender", "=", "[", "x", "for", "x", "in", "morph", "if", "x", ".", "startswith", "(", "\"Gender=\"", ")", "]", "\n", "if", "len", "(", "gender", ")", ">", "0", ":", "\n", "              ", "genders", "[", "gender", "[", "0", "]", "]", ".", "add", "(", "line", "[", "\"lemma\"", "]", ".", "lower", "(", ")", ")", "\n", "\n", "", "", "", "", "", "for", "gender", "in", "genders", ":", "\n", "       ", "print", "(", "\"OOV Ratio for \"", ",", "gender", ",", "sum", "(", "[", "0", "if", "x", "in", "stoi", "else", "1", "for", "x", "in", "genders", "[", "gender", "]", "]", ")", "/", "len", "(", "genders", "[", "gender", "]", ")", ")", "\n", "\n", "\n", "#print(genders)", "\n", "", "counter", "=", "0", "\n", "\n", "results", "=", "[", "[", "0", ",", "0", ",", "0", "]", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "for", "genderIndex", ",", "gender", "in", "enumerate", "(", "[", "\"Gender=\"", "+", "x", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", ":", "\n", "     ", "with", "open", "(", "f\"stimuli/german-gender-{gender}-{mode}-noOOVs.txt\"", ",", "\"w\"", ")", "as", "outFile", ":", "\n", "       ", "counter", "=", "0", "\n", "for", "noun", "in", "genders", "[", "gender", "]", ":", "\n", "         ", "if", "noun", "not", "in", "stoi", ":", "\n", "            ", "continue", "\n", "", "counter", "+=", "1", "\n", "#    adverbs = [\"sehr\"]", "\n", "#   adjective = \"\" #\"\".join(adverbs)+random.choice(adjectives)+\"e\"", "\n", "chosenAdjective", "=", "\"_NONE_\"", "\n", "while", "chosenAdjective", "not", "in", "stoi", ":", "\n", "              ", "chosenAdjective", "=", "random", ".", "choice", "(", "adjectives", ")", "+", "\"e\"", "\n", "\n", "", "if", "mode", "==", "\"nothing\"", ":", "\n", "           ", "noun", "=", "noun", "\n", "nounStimulus", "=", "[", "noun", "]", "\n", "", "elif", "mode", "==", "\"adjective\"", ":", "\n", "            ", "adjective", "=", "chosenAdjective", "\n", "nounStimulus", "=", "[", "adjective", ",", "noun", "]", "\n", "noun", "=", "adjective", "+", "noun", "\n", "", "elif", "mode", "==", "\"sehr + adjective\"", ":", "\n", "            ", "adjective", "=", "chosenAdjective", "\n", "nounStimulus", "=", "[", "\"sehr\"", ",", "adjective", ",", "noun", "]", "\n", "noun", "=", "\"sehr\"", "+", "adjective", "+", "noun", "\n", "", "elif", "mode", "==", "\"sehr + extrem + adjective\"", ":", "\n", "            ", "adjective", "=", "chosenAdjective", "\n", "nounStimulus", "=", "[", "\"sehr\"", ",", "\"extrem\"", ",", "adjective", ",", "noun", "]", "\n", "noun", "=", "\"sehr\"", "+", "\"extrem\"", "+", "adjective", "+", "noun", "\n", "\n", "\n", "\n", "", "stimuli", "=", "[", "]", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"der\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"die\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "print", "(", "\" \"", ".", "join", "(", "[", "\"das\"", "]", "+", "nounStimulus", ")", ",", "file", "=", "outFile", ")", "\n", "\n", "\n", "results", "[", "genderIndex", "]", "[", "doChoiceList", "(", "[", "f\". der \"", "+", "\" \"", ".", "join", "(", "nounStimulus", ")", "+", "\" .\"", ",", "f\". die \"", "+", "\" \"", ".", "join", "(", "nounStimulus", ")", "+", "\" .\"", ",", "f\". das \"", "+", "\" \"", ".", "join", "(", "nounStimulus", ")", "+", "\" .\"", "]", ",", "printHere", "=", "(", "random", ".", "random", "(", ")", ">", "0.98", ")", ")", "]", "+=", "1", "\n", "if", "random", ".", "random", "(", ")", ">", "0.98", ":", "\n", "           ", "print", "(", "[", "[", "round", "(", "x", "/", "(", "counter", "if", "genderIndex", "==", "i", "else", "1", ")", ",", "2", ")", "for", "x", "in", "results", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "results", ")", ")", "]", ")", "\n", "", "", "results", "[", "genderIndex", "]", "=", "[", "x", "/", "counter", "for", "x", "in", "results", "[", "genderIndex", "]", "]", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.plus": [[45, 50], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.parameters": [[105, 109], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.encodeWord": [[135, 140], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.choice": [[153, 172], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.choiceList": [[175, 196], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.encodeSequenceBatchForward": [[199, 209], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.encodeSequenceBatchBackward": [[212, 224], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.predictNext": [[228, 233], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.keepGenerating": [[234, 258], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.doChoiceList": [[266, 274], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.choiceList", "numpy.argmin", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.doChoiceListLosses": [[274, 282], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.choiceList", "print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoiceListLosses", "(", "xs", ",", "printHere", "=", "True", ")", ":", "\n", "    ", "if", "printHere", ":", "\n", "      ", "for", "x", "in", "xs", ":", "\n", "         ", "print", "(", "x", ")", "\n", "", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "if", "printHere", ":", "\n", "      ", "print", "(", "losses", ")", "\n", "", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.doChoice": [[285, 291], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.gender.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.genderTest": [[295, 325], ["dict", "enumerate", "range", "open", "set", "next().strip().replace", "next().strip().replace", "next().strip().replace", "random.random", "random.random", "print", "next().strip", "next().strip", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-gender.doChoiceList", "next().strip", "next", "next", "round", "range", "next", "random.random", "random.random", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.doChoiceList"], ["def", "genderTest", "(", "mode", ")", ":", "\n", "   ", "genders", "=", "dict", "(", "[", "(", "\"Gender=\"", "+", "x", ",", "set", "(", ")", ")", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", "\n", "\n", "#print(genders)", "\n", "counter", "=", "0", "\n", "\n", "results", "=", "[", "[", "0", ",", "0", ",", "0", "]", "for", "_", "in", "range", "(", "3", ")", "]", "\n", "for", "genderIndex", ",", "gender", "in", "enumerate", "(", "[", "\"Gender=\"", "+", "x", "for", "x", "in", "[", "\"Masc\"", ",", "\"Fem\"", ",", "\"Neut\"", "]", "]", ")", ":", "\n", "     ", "with", "open", "(", "f\"stimuli/german-gender-{gender}-{mode}.txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "       ", "counter", "=", "0", "\n", "while", "True", ":", "\n", "         ", "counter", "+=", "1", "\n", "#    adverbs = [\"sehr\"]", "\n", "#   adjective = \"\" #\"\".join(adverbs)+random.choice(adjectives)+\"e\"", "\n", "\n", "try", ":", "\n", "            ", "stimulusDer", "=", "next", "(", "inFile", ")", ".", "strip", "(", ")", ".", "replace", "(", "\" \"", ",", "\"\"", ")", "\n", "", "except", "StopIteration", ":", "\n", "            ", "break", "\n", "", "stimulusDie", "=", "next", "(", "inFile", ")", ".", "strip", "(", ")", ".", "replace", "(", "\" \"", ",", "\"\"", ")", "\n", "stimulusDas", "=", "next", "(", "inFile", ")", ".", "strip", "(", ")", ".", "replace", "(", "\" \"", ",", "\"\"", ")", "\n", "\n", "\n", "#       noun = f\"{adjective}{noun}\"", "\n", "results", "[", "genderIndex", "]", "[", "doChoiceList", "(", "[", "f\".{stimulusDer}.\"", ",", "f\".{stimulusDie}.\"", ",", "f\".{stimulusDas}.\"", "]", ",", "printHere", "=", "(", "random", ".", "random", "(", ")", ">", "0.98", ")", ")", "]", "+=", "1", "\n", "#       results[doChoiceList([\".ein\"+noun+\".\", \".eine\"+noun+\".\"])] += 1", "\n", "if", "random", ".", "random", "(", ")", ">", "0.98", ":", "\n", "            ", "print", "(", "[", "[", "round", "(", "x", "/", "(", "counter", "if", "genderIndex", "==", "i", "else", "1", ")", ",", "2", ")", "for", "x", "in", "results", "[", "i", "]", "]", "for", "i", "in", "range", "(", "len", "(", "results", ")", ")", "]", ")", "\n", "", "", "results", "[", "genderIndex", "]", "=", "[", "x", "/", "counter", "for", "x", "in", "results", "[", "genderIndex", "]", "]", "\n", "", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS.parameters": [[105, 109], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS.encodeWord": [[138, 143], ["numeric.append"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", ".", "append", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "# 2 is the code for OOV", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS.encodeListOfWords": [[148, 160], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS.encodeWord", "len", "torch.LongTensor().transpose().cuda", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "# transforms each word into a list of integers", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "# pad at the beginning, if necessary, so that all lists have the same length", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "# create a tensor from the integer lists", "\n", "\n", "input_cut", "=", "input_tensor_forward", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "# run through the embedding layer", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "# run the LSTM", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "# obtain the final hidden state of the LSTM", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "# return, for each input word, the corresponding final LSTM state", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS.detectVerb": [[170, 175], ["pos.startswith", "pos.startswith"], "function", ["None"], ["def", "detectVerb", "(", "pos", ")", ":", "\n", "  ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"v\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"ver\"", ")", "\n", "", "", "def", "detectNoun", "(", "pos", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS.detectNoun": [[175, 180], ["pos.startswith"], "function", ["None"], ["", "", "def", "detectNoun", "(", "pos", ")", ":", "\n", "   ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"n\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "       ", "return", "pos", "==", "\"noun\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS.criterion": [[209, 214], ["word.endswith", "word.endswith"], "function", ["None"], ["def", "criterion", "(", "word", ")", ":", "\n", "    ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "       ", "return", "word", ".", "endswith", "(", "\"en\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "       ", "return", "word", ".", "endswith", "(", "\"re\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.plusL": [[46, 50], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.plus": [[51, 56], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.parameters": [[111, 115], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.encodeWord": [[141, 146], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.choice": [[158, 177], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.encodeListOfWords": [[179, 191], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward.data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.encodeWord", "len", "hidden_forward.data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "input_cut", "=", "input_tensor_forward", "#[:-1]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.choiceList": [[195, 216], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.encodeSequenceBatchForward": [[219, 229], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.encodeSequenceBatchBackward": [[232, 244], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.predictNext": [[248, 253], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.keepGenerating": [[254, 278], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.detectVerb": [[283, 288], ["pos.startswith", "pos.startswith"], "function", ["None"], ["def", "detectVerb", "(", "pos", ")", ":", "\n", "  ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"v\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"ver\"", ")", "\n", "", "", "def", "detectNoun", "(", "pos", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.detectNoun": [[288, 293], ["pos.startswith"], "function", ["None"], ["", "", "def", "detectNoun", "(", "pos", ")", ":", "\n", "   ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"n\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "       ", "return", "pos", "==", "\"noun\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-POS-rnn.criterion": [[320, 325], ["word.endswith", "word.endswith"], "function", ["None"], ["def", "criterion", "(", "word", ")", ":", "\n", "    ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "       ", "return", "word", ".", "endswith", "(", "\"en\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "       ", "return", "word", ".", "endswith", "(", "\"re\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.plusL": [[45, 49], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.plus": [[50, 55], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.parameters": [[95, 99], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.encodeWord": [[179, 184], ["output.weight[].data.cpu().numpy", "output.weight[].data.cpu().numpy", "output.weight[].data.cpu", "output.weight[].data.cpu"], "function", ["None"], ["def", "encodeWord", "(", "x", ")", ":", "\n", " ", "if", "x", "in", "stoi", ":", "\n", "   ", "return", "output", ".", "weight", "[", "stoi", "[", "x", "]", "+", "3", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "else", ":", "\n", "   ", "return", "output", ".", "weight", "[", "2", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.encodeListOfWords": [[166, 172], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.similarity": [[186, 190], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.encodeWord", "numpy.dot", "numpy.sqrt", "numpy.dot", "numpy.dot"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "", "def", "similarity", "(", "x", ",", "y", ")", ":", "\n", "   ", "x", "=", "encodeWord", "(", "x", ")", "\n", "y", "=", "encodeWord", "(", "y", ")", "\n", "return", "np", ".", "dot", "(", "x", ",", "y", ")", "/", "np", ".", "sqrt", "(", "np", ".", "dot", "(", "x", ",", "x", ")", "*", "np", ".", "dot", "(", "y", ",", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.predictNext": [[267, 272], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.keepGenerating": [[273, 297], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.detectVerb": [[302, 307], ["pos.startswith", "pos.startswith"], "function", ["None"], ["def", "detectVerb", "(", "pos", ")", ":", "\n", "  ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"v\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"ver\"", ")", "\n", "", "", "def", "detectNoun", "(", "pos", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.detectNoun": [[307, 312], ["pos.startswith"], "function", ["None"], ["", "", "def", "detectNoun", "(", "pos", ")", ":", "\n", "   ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"n\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "       ", "return", "pos", "==", "\"noun\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings-withOOV.criterion": [[343, 348], ["word.endswith", "word.endswith"], "function", ["None"], ["def", "criterion", "(", "word", ")", ":", "\n", "    ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "       ", "return", "word", ".", "endswith", "(", "\"en\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "       ", "return", "word", ".", "endswith", "(", "\"re\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.plusL": [[45, 49], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.plus": [[50, 55], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.parameters": [[95, 99], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.encodeWord": [[179, 181], ["output.weight[].data.cpu().numpy", "output.weight[].data.cpu"], "function", ["None"], ["def", "encodeWord", "(", "x", ")", ":", "\n", "   ", "return", "output", ".", "weight", "[", "stoi", "[", "x", "]", "+", "3", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.encodeListOfWords": [[166, 172], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.similarity": [[182, 186], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.encodeWord", "numpy.dot", "numpy.sqrt", "numpy.dot", "numpy.dot"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "similarity", "(", "x", ",", "y", ")", ":", "\n", "   ", "x", "=", "encodeWord", "(", "x", ")", "\n", "y", "=", "encodeWord", "(", "y", ")", "\n", "return", "np", ".", "dot", "(", "x", ",", "y", ")", "/", "np", ".", "sqrt", "(", "np", ".", "dot", "(", "x", ",", "x", ")", "*", "np", ".", "dot", "(", "y", ",", "y", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.predictNext": [[263, 268], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.keepGenerating": [[269, 293], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.detectVerb": [[298, 303], ["pos.startswith", "pos.startswith"], "function", ["None"], ["def", "detectVerb", "(", "pos", ")", ":", "\n", "  ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"v\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"ver\"", ")", "\n", "", "", "def", "detectNoun", "(", "pos", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.detectNoun": [[303, 308], ["pos.startswith"], "function", ["None"], ["", "", "def", "detectNoun", "(", "pos", ")", ":", "\n", "   ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "      ", "return", "pos", ".", "startswith", "(", "\"n\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "       ", "return", "pos", "==", "\"noun\"", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.word_classes.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-forms-newtests-embeddings.criterion": [[339, 344], ["word.endswith", "word.endswith"], "function", ["None"], ["def", "criterion", "(", "word", ")", ":", "\n", "    ", "if", "args", ".", "language", "==", "\"german\"", ":", "\n", "       ", "return", "word", ".", "endswith", "(", "\"en\"", ")", "\n", "", "elif", "args", ".", "language", "==", "\"italian\"", ":", "\n", "       ", "return", "word", ".", "endswith", "(", "\"re\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.parameters": [[107, 111], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.encodeWord": [[137, 142], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.choice": [[154, 173], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.encodeListOfWords": [[175, 188], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.choiceList": [[192, 213], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.encodeSequenceBatchForward": [[216, 226], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.encodeSequenceBatchBackward": [[229, 241], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.predictNext": [[245, 250], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.keepGenerating": [[251, 275], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.doChoiceList": [[296, 302], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.doChoice": [[304, 310], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.plusL": [[47, 51], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.plus": [[52, 57], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.parameters": [[112, 116], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeWord": [[143, 148], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWordsOld": [[151, 164], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsOld", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWords": [[167, 195], ["max", "range", "torch.autograd.Variable", "char_embeddings", "range", "range", "len", "len", "torch.LongTensor().transpose().cuda", "len", "rnn_drop", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeWord", "lengthsToWords.get", "embedded_forward[].unsqueeze", "torch.LongTensor().transpose", "[].flatten().data.cpu().numpy", "len", "torch.LongTensor", "[].flatten().data.cpu", "[].flatten"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "lengths", "=", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", "\n", "maxLength", "=", "max", "(", "lengths", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "numeric", "[", "i", "]", "+", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "\n", "result", "=", "[", "None", "for", "_", "in", "words", "]", "\n", "\n", "lengthsToWords", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "lengths", ")", ")", ":", "\n", "        ", "lengthsToWords", "[", "lengths", "[", "i", "]", "]", "=", "lengthsToWords", ".", "get", "(", "lengths", "[", "i", "]", ",", "[", "]", ")", "+", "[", "i", "]", "\n", "\n", "", "hidden_forward", "=", "None", "\n", "for", "i", "in", "range", "(", "1", ",", "maxLength", "+", "1", ")", ":", "\n", "       ", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", "[", "i", "-", "1", "]", ".", "unsqueeze", "(", "0", ")", ",", "hidden_forward", ")", "\n", "if", "i", "in", "lengthsToWords", ":", "\n", "          ", "for", "j", "in", "lengthsToWords", "[", "i", "]", ":", "\n", "#               print(j, len(result), hidden_forward[0].size())", "\n", "               ", "result", "[", "j", "]", "=", "hidden_forward", "[", "0", "]", "[", ":", ",", "j", "]", ".", "flatten", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.redprod1": [[265, 288], ["dict", "dict", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWords", "range", "len", "max"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords"], ["def", "redprod1", "(", "stimuli", ")", ":", "\n", "     ", "encodedPluralsTotalD", "=", "dict", "(", "encodedPluralsTotal", ")", "\n", "encodedSingularsTotalD", "=", "dict", "(", "encodedSingularsTotal", ")", "\n", "\n", "encodedPluralsR", "=", "[", "encodedPluralsTotalD", "[", "y", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "encodedSingularsR", "=", "[", "encodedSingularsTotalD", "[", "x", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "\n", "encodedPlurals2", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "y", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "encodedSingulars2", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "x", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "\n", "encodedPlurals3", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "y", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "encodedSingulars3", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "x", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "stimuli", ")", ")", ":", "\n", "\n", "#      print(stimuli[i])", "\n", "#      print(encodedPluralsR[i] - encodedPlurals2[i])", "\n", "#      print(encodedSingularsR[i] - encodedSingulars2[i])", "\n", "#      print(encodedSingularsR[i] - encodedSingulars3[i])", "\n", "\n", "         ", "if", "max", "(", "encodedSingularsR", "[", "i", "]", "-", "encodedSingulars2", "[", "i", "]", ")", ">", "0.00000001", ":", "\n", "            ", "assert", "False", ",", "stimuli", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.redprod2": [[292, 313], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.encodeListOfWords", "range", "len", "max"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords"], ["", "", "", "def", "redprod2", "(", "stimuli", ")", ":", "\n", "\n", "     ", "encodedPluralsR", "=", "[", "encodedPluralsTotal", "[", "y", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "encodedSingularsR", "=", "[", "encodedSingularsTotal", "[", "x", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "\n", "encodedPlurals2", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "y", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "encodedSingulars2", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "x", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "\n", "encodedPlurals3", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "y", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "encodedSingulars3", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "x", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "stimuli", ")", ")", ":", "\n", "\n", "#         print(stimuli[i])", "\n", "#         print(encodedPluralsR[i] - encodedPlurals2[i])", "\n", "#         print(encodedSingularsR[i] - encodedSingulars2[i])", "\n", "#         print(encodedSingularsR[i] - encodedSingulars3[i])", "\n", "\n", "         ", "if", "max", "(", "encodedSingularsR", "[", "i", "]", "-", "encodedSingulars2", "[", "i", "]", ")", ">", "0.00000001", ":", "\n", "            ", "assert", "False", ",", "stimuli", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.getResult": [[386, 396], ["logisticRegr.score"], "function", ["None"], ["def", "getResult", "(", "stimuli", ",", "logisticRegr", ")", ":", "\n", "     ", "encodedPluralsR", "=", "[", "encodedPluralsTotal", "[", "y", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "encodedSingularsR", "=", "[", "encodedSingularsTotal", "[", "x", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "\n", "predictors", "=", "encodedSingularsR", "+", "encodedPluralsR", "\n", "dependent", "=", "[", "0", "for", "_", "in", "encodedSingularsR", "]", "+", "[", "1", "for", "_", "in", "encodedPluralsR", "]", "\n", "\n", "score", "=", "logisticRegr", ".", "score", "(", "predictors", ",", "dependent", ")", "\n", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-wiktionary.selectTrainingSet": [[399, 431], ["range", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "list", "random.random", "random.random", "random.random", "singulars[].append", "list", "random.random", "random.random", "random.random", "plurals[].append", "zip", "zip", "range", "len", "range", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["def", "selectTrainingSet", "(", "formations", ")", ":", "\n", "     ", "global", "N", "\n", "singulars", "=", "{", "}", "\n", "plurals", "=", "{", "}", "\n", "for", "typ", "in", "TRAINING_CLASSES", ":", "\n", "        ", "singulars", "[", "typ", "]", "=", "[", "]", "\n", "plurals", "[", "typ", "]", "=", "[", "]", "\n", "\n", "#        formations[typ] = sorted(list(formations[typ]))", "\n", "for", "_", "in", "range", "(", "N", ")", ":", "\n", "           ", "while", "True", ":", "\n", "              ", "index", ",", "sampledS", "=", "random", ".", "choice", "(", "list", "(", "zip", "(", "range", "(", "len", "(", "formations", "[", "typ", "]", ")", ")", ",", "formations", "[", "typ", "]", ")", ")", ")", "\n", "sampledS", "=", "sampledS", "[", "0", "]", "\n", "ratio", "=", "lengths", "[", "len", "(", "sampledS", ")", "]", "/", "(", "ratioS", "*", "lengthsS", "[", "len", "(", "sampledS", ")", "]", ")", "\n", "assert", "0", "<=", "ratio", "\n", "assert", "ratio", "<=", "1", "\n", "if", "random", ".", "random", "(", ")", "<", "ratio", ":", "\n", "                  ", "del", "formations", "[", "typ", "]", "[", "index", "]", "\n", "singulars", "[", "typ", "]", ".", "append", "(", "sampledS", ")", "\n", "break", "\n", "\n", "", "", "while", "True", ":", "\n", "              ", "index", ",", "sampledP", "=", "random", ".", "choice", "(", "list", "(", "zip", "(", "range", "(", "len", "(", "formations", "[", "typ", "]", ")", ")", ",", "formations", "[", "typ", "]", ")", ")", ")", "\n", "sampledP", "=", "sampledP", "[", "1", "]", "\n", "ratio", "=", "lengths", "[", "len", "(", "sampledP", ")", "]", "/", "(", "ratioP", "*", "lengthsP", "[", "len", "(", "sampledP", ")", "]", ")", "\n", "assert", "0", "<=", "ratio", "\n", "assert", "ratio", "<=", "1", "\n", "if", "random", ".", "random", "(", ")", "<", "ratio", ":", "\n", "                 ", "del", "formations", "[", "typ", "]", "[", "index", "]", "\n", "plurals", "[", "typ", "]", ".", "append", "(", "sampledP", ")", "\n", "break", "\n", "", "", "", "", "return", "singulars", ",", "plurals", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.plusL": [[43, 47], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.plus": [[48, 53], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.parameters": [[108, 112], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeWord": [[139, 144], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWordsOld": [[147, 160], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsOld", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWords": [[163, 191], ["max", "range", "torch.autograd.Variable", "char_embeddings", "range", "range", "len", "len", "torch.LongTensor().transpose().cuda", "len", "rnn_drop", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeWord", "lengthsToWords.get", "embedded_forward[].unsqueeze", "torch.LongTensor().transpose", "[].flatten().data.cpu().numpy", "len", "torch.LongTensor", "[].flatten().data.cpu", "[].flatten"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "lengths", "=", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", "\n", "maxLength", "=", "max", "(", "lengths", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "numeric", "[", "i", "]", "+", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "\n", "result", "=", "[", "None", "for", "_", "in", "words", "]", "\n", "\n", "lengthsToWords", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "lengths", ")", ")", ":", "\n", "        ", "lengthsToWords", "[", "lengths", "[", "i", "]", "]", "=", "lengthsToWords", ".", "get", "(", "lengths", "[", "i", "]", ",", "[", "]", ")", "+", "[", "i", "]", "\n", "\n", "", "hidden_forward", "=", "None", "\n", "for", "i", "in", "range", "(", "1", ",", "maxLength", "+", "1", ")", ":", "\n", "       ", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", "[", "i", "-", "1", "]", ".", "unsqueeze", "(", "0", ")", ",", "hidden_forward", ")", "\n", "if", "i", "in", "lengthsToWords", ":", "\n", "          ", "for", "j", "in", "lengthsToWords", "[", "i", "]", ":", "\n", "#               print(j, len(result), hidden_forward[0].size())", "\n", "               ", "result", "[", "j", "]", "=", "hidden_forward", "[", "0", "]", "[", ":", ",", "j", "]", ".", "flatten", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.redprod1": [[217, 240], ["dict", "dict", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWords", "range", "len", "max"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords"], ["def", "redprod1", "(", "stimuli", ")", ":", "\n", "     ", "encodedPluralsTotalD", "=", "dict", "(", "encodedPluralsTotal", ")", "\n", "encodedSingularsTotalD", "=", "dict", "(", "encodedSingularsTotal", ")", "\n", "\n", "encodedPluralsR", "=", "[", "encodedPluralsTotalD", "[", "y", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "encodedSingularsR", "=", "[", "encodedSingularsTotalD", "[", "x", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "\n", "encodedPlurals2", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "y", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "encodedSingulars2", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "x", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "\n", "encodedPlurals3", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "y", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "encodedSingulars3", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "x", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "stimuli", ")", ")", ":", "\n", "\n", "#      print(stimuli[i])", "\n", "#      print(encodedPluralsR[i] - encodedPlurals2[i])", "\n", "#      print(encodedSingularsR[i] - encodedSingulars2[i])", "\n", "#      print(encodedSingularsR[i] - encodedSingulars3[i])", "\n", "\n", "         ", "if", "max", "(", "encodedSingularsR", "[", "i", "]", "-", "encodedSingulars2", "[", "i", "]", ")", ">", "0.00000001", ":", "\n", "            ", "assert", "False", ",", "stimuli", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.redprod2": [[244, 265], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWords", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.encodeListOfWords", "range", "len", "max"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords"], ["", "", "", "def", "redprod2", "(", "stimuli", ")", ":", "\n", "\n", "     ", "encodedPluralsR", "=", "[", "encodedPluralsTotal", "[", "y", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "encodedSingularsR", "=", "[", "encodedSingularsTotal", "[", "x", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "\n", "encodedPlurals2", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "y", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "encodedSingulars2", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "x", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "\n", "encodedPlurals3", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "y", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "encodedSingulars3", "=", "encodeListOfWords", "(", "[", "\".\"", "+", "x", "for", "x", ",", "y", "in", "stimuli", "]", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "stimuli", ")", ")", ":", "\n", "\n", "#         print(stimuli[i])", "\n", "#         print(encodedPluralsR[i] - encodedPlurals2[i])", "\n", "#         print(encodedSingularsR[i] - encodedSingulars2[i])", "\n", "#         print(encodedSingularsR[i] - encodedSingulars3[i])", "\n", "\n", "         ", "if", "max", "(", "encodedSingularsR", "[", "i", "]", "-", "encodedSingulars2", "[", "i", "]", ")", ">", "0.00000001", ":", "\n", "            ", "assert", "False", ",", "stimuli", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.getResult": [[338, 348], ["logisticRegr.score"], "function", ["None"], ["def", "getResult", "(", "stimuli", ",", "logisticRegr", ")", ":", "\n", "     ", "encodedPluralsR", "=", "[", "encodedPluralsTotal", "[", "y", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "encodedSingularsR", "=", "[", "encodedSingularsTotal", "[", "x", "]", "for", "x", ",", "y", "in", "stimuli", "]", "\n", "\n", "predictors", "=", "encodedSingularsR", "+", "encodedPluralsR", "\n", "dependent", "=", "[", "0", "for", "_", "in", "encodedSingularsR", "]", "+", "[", "1", "for", "_", "in", "encodedPluralsR", "]", "\n", "\n", "score", "=", "logisticRegr", ".", "score", "(", "predictors", ",", "dependent", ")", "\n", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-fromfile.selectTrainingSet": [[351, 383], ["range", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "random.choice", "list", "random.random", "random.random", "random.random", "singulars[].append", "list", "random.random", "random.random", "random.random", "plurals[].append", "zip", "zip", "range", "len", "range", "len", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "selectTrainingSet", "(", "formations", ")", ":", "\n", "     ", "global", "N", "\n", "singulars", "=", "{", "}", "\n", "plurals", "=", "{", "}", "\n", "for", "typ", "in", "[", "\"n\"", ",", "\"s\"", ",", "\"e\"", "]", ":", "\n", "        ", "singulars", "[", "typ", "]", "=", "[", "]", "\n", "plurals", "[", "typ", "]", "=", "[", "]", "\n", "\n", "#        formations[typ] = sorted(list(formations[typ]))", "\n", "for", "_", "in", "range", "(", "N", ")", ":", "\n", "           ", "while", "True", ":", "\n", "              ", "index", ",", "sampledS", "=", "random", ".", "choice", "(", "list", "(", "zip", "(", "range", "(", "len", "(", "formations", "[", "typ", "]", ")", ")", ",", "formations", "[", "typ", "]", ")", ")", ")", "\n", "sampledS", "=", "sampledS", "[", "0", "]", "\n", "ratio", "=", "lengths", "[", "len", "(", "sampledS", ")", "]", "/", "(", "ratioS", "*", "lengthsS", "[", "len", "(", "sampledS", ")", "]", ")", "\n", "assert", "0", "<=", "ratio", "\n", "assert", "ratio", "<=", "1", "\n", "if", "random", ".", "random", "(", ")", "<", "ratio", ":", "\n", "                  ", "del", "formations", "[", "typ", "]", "[", "index", "]", "\n", "singulars", "[", "typ", "]", ".", "append", "(", "sampledS", ")", "\n", "break", "\n", "\n", "", "", "while", "True", ":", "\n", "              ", "index", ",", "sampledP", "=", "random", ".", "choice", "(", "list", "(", "zip", "(", "range", "(", "len", "(", "formations", "[", "typ", "]", ")", ")", ",", "formations", "[", "typ", "]", ")", ")", ")", "\n", "sampledP", "=", "sampledP", "[", "1", "]", "\n", "ratio", "=", "lengths", "[", "len", "(", "sampledP", ")", "]", "/", "(", "ratioP", "*", "lengthsP", "[", "len", "(", "sampledP", ")", "]", ")", "\n", "assert", "0", "<=", "ratio", "\n", "assert", "ratio", "<=", "1", "\n", "if", "random", ".", "random", "(", ")", "<", "ratio", ":", "\n", "                 ", "del", "formations", "[", "typ", "]", "[", "index", "]", "\n", "plurals", "[", "typ", "]", ".", "append", "(", "sampledP", ")", "\n", "break", "\n", "", "", "", "", "return", "singulars", ",", "plurals", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.plusL": [[40, 44], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.plus": [[45, 50], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.parameters": [[90, 94], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.encodeWord": [[120, 123], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.choice": [[135, 154], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.encodeListOfWordsIn": [[156, 162], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.encodeListOfWords": [[163, 169], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.choiceList": [[173, 194], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.predictNext": [[226, 231], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.keepGenerating": [[232, 256], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.doChoiceList": [[278, 284], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.doChoice": [[286, 292], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.parameters": [[107, 111], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.encodeWord": [[137, 142], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.choice": [[154, 173], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.encodeListOfWords": [[175, 188], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.choiceList": [[192, 213], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.encodeSequenceBatchForward": [[216, 226], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.encodeSequenceBatchBackward": [[229, 241], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.predictNext": [[245, 250], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.keepGenerating": [[251, 275], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.counts": [[311, 316], ["sorted", "c.items", "c.get"], "function", ["None"], ["", "", "", "", "", "", "", "def", "counts", "(", "l", ")", ":", "\n", "   ", "c", "=", "{", "}", "\n", "for", "x", "in", "l", ":", "\n", "      ", "c", "[", "x", "]", "=", "c", ".", "get", "(", "x", ",", "0", ")", "+", "1", "\n", "", "return", "sorted", "(", "c", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.mean": [[326, 328], ["sum", "len"], "function", ["None"], ["def", "mean", "(", "x", ")", ":", "\n", "   ", "return", "sum", "(", "x", ")", "/", "len", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.doChoiceList": [[346, 352], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.doChoice": [[354, 360], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigate.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.parameters": [[107, 111], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.encodeWord": [[137, 142], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.choice": [[154, 173], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.encodeListOfWords": [[175, 188], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.choiceList": [[192, 213], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.encodeSequenceBatchForward": [[216, 226], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.encodeSequenceBatchBackward": [[229, 241], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.predictNext": [[245, 250], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.keepGenerating": [[251, 275], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.counts": [[311, 316], ["sorted", "c.items", "c.get"], "function", ["None"], ["", "", "", "", "", "", "", "def", "counts", "(", "l", ")", ":", "\n", "   ", "c", "=", "{", "}", "\n", "for", "x", "in", "l", ":", "\n", "      ", "c", "[", "x", "]", "=", "c", ".", "get", "(", "x", ",", "0", ")", "+", "1", "\n", "", "return", "sorted", "(", "c", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.mean": [[326, 328], ["sum", "len"], "function", ["None"], ["def", "mean", "(", "x", ")", ":", "\n", "   ", "return", "sum", "(", "x", ")", "/", "len", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.doChoiceList": [[349, 355], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.doChoice": [[357, 363], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.parameters": [[107, 111], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.encodeWord": [[137, 142], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.choice": [[154, 173], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.encodeListOfWords": [[175, 188], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.choiceList": [[192, 213], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.encodeSequenceBatchForward": [[216, 226], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.encodeSequenceBatchBackward": [[229, 241], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.predictNext": [[245, 250], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.keepGenerating": [[251, 275], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.counts": [[311, 316], ["sorted", "c.items", "c.get"], "function", ["None"], ["", "", "", "", "", "", "", "def", "counts", "(", "l", ")", ":", "\n", "   ", "c", "=", "{", "}", "\n", "for", "x", "in", "l", ":", "\n", "      ", "c", "[", "x", "]", "=", "c", ".", "get", "(", "x", ",", "0", ")", "+", "1", "\n", "", "return", "sorted", "(", "c", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.mean": [[326, 328], ["sum", "len"], "function", ["None"], ["def", "mean", "(", "x", ")", ":", "\n", "   ", "return", "sum", "(", "x", ")", "/", "len", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.doChoiceList": [[349, 355], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.doChoice": [[357, 363], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-distractors-balanceE.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.plusL": [[47, 51], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.plus": [[52, 57], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.parameters": [[112, 116], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.encodeWord": [[142, 147], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.choice": [[159, 178], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.encodeListOfWords": [[180, 193], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward.data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.encodeWord", "len", "hidden_forward.data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", ",", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.choiceList": [[197, 218], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.encodeSequenceBatchForward": [[221, 231], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.encodeSequenceBatchBackward": [[234, 246], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.predictNext": [[250, 255], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.keepGenerating": [[256, 280], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.doChoiceList": [[321, 327], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.doChoice": [[329, 335], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.plusL": [[46, 50], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.plus": [[51, 56], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.parameters": [[111, 115], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.encodeWord": [[141, 146], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.choice": [[158, 177], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.encodeListOfWords": [[179, 192], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward.data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.encodeWord", "len", "hidden_forward.data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", ",", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.choiceList": [[196, 217], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.encodeSequenceBatchForward": [[220, 230], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.encodeSequenceBatchBackward": [[233, 245], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.predictNext": [[249, 254], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.keepGenerating": [[255, 279], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.doChoiceList": [[300, 306], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.doChoice": [[308, 314], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.parameters": [[92, 96], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.encodeWord": [[122, 125], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.choice": [[137, 156], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.encodeListOfWordsIn": [[158, 164], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.encodeListOfWords": [[165, 171], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.choiceList": [[175, 196], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.predictNext": [[228, 233], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.keepGenerating": [[234, 258], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.doChoiceList": [[302, 308], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.doChoice": [[310, 316], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.plusL": [[46, 50], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.plus": [[51, 56], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.parameters": [[111, 115], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.encodeWord": [[141, 146], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.choice": [[158, 177], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.encodeListOfWords": [[179, 192], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward.data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.encodeWord", "len", "hidden_forward.data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", ",", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.choiceList": [[196, 217], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.encodeSequenceBatchForward": [[220, 230], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.encodeSequenceBatchBackward": [[233, 245], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.predictNext": [[249, 254], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.keepGenerating": [[255, 279], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.doChoiceList": [[300, 306], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.doChoice": [[308, 314], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-RNN-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.parameters": [[92, 96], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.encodeWord": [[122, 125], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.choice": [[137, 156], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.encodeListOfWordsIn": [[158, 164], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.encodeListOfWords": [[165, 171], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.choiceList": [[175, 196], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.predictNext": [[228, 233], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.keepGenerating": [[234, 258], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.doChoiceList": [[316, 322], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.doChoice": [[324, 330], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-withOOV.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.plusL": [[41, 45], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.plus": [[46, 51], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.parameters": [[106, 110], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.encodeWord": [[136, 141], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.choice": [[153, 172], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.encodeListOfWords": [[174, 187], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.choiceList": [[191, 212], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.encodeSequenceBatchForward": [[215, 225], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.encodeSequenceBatchBackward": [[228, 240], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.predictNext": [[244, 249], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.keepGenerating": [[250, 274], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.doChoiceList": [[295, 301], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.doChoice": [[303, 309], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.parameters": [[107, 111], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.encodeWord": [[137, 142], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.choice": [[154, 173], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.encodeListOfWords": [[175, 188], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.choiceList": [[192, 213], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.encodeSequenceBatchForward": [[216, 226], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.encodeSequenceBatchBackward": [[229, 241], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.predictNext": [[245, 250], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.keepGenerating": [[251, 275], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.doChoiceList": [[316, 322], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.doChoice": [[324, 330], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.plusL": [[38, 42], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.plus": [[43, 48], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.parameters": [[102, 106], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeWord": [[132, 137], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.choice": [[149, 168], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeListOfWords": [[170, 183], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.choiceList": [[187, 208], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeSequenceBatchForward": [[211, 221], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeSequenceBatchBackward": [[224, 236], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.predictNext": [[240, 245], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.keepGenerating": [[246, 270], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.doChoiceList": [[305, 311], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "", "def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.doChoice": [[313, 319], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.padWords": [[872, 878], ["max", "enumerate", "len", "len", "len"], "function", ["None"], ["def", "padWords", "(", "words", ")", ":", "\n", "   ", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "words", "]", ")", "\n", "for", "i", ",", "word", "in", "enumerate", "(", "words", ")", ":", "\n", "      ", "if", "len", "(", "word", ")", "<", "maxLength", ":", "\n", "         ", "words", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "word", ")", ")", ")", "+", "word", "#word.append(0)", "\n", "", "", "return", "words", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.getEncodingsForList": [[882, 884], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.getEncodingsForListGeneral"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.getEncodingsForListGeneral"], ["", "def", "getEncodingsForList", "(", "wordsToBeEncoded", ")", ":", "\n", "    ", "return", "getEncodingsForListGeneral", "(", "wordsToBeEncoded", ",", "encodeSequenceBatchForward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.getEncodingsForListGeneral": [[887, 901], ["sorted", "range", "list", "len", "enumerate", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.padWords", "codes1[].cpu", "[].cpu", "[].cpu", "modelVectors.append", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2.encodeSequenceBatchForward"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.padWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeSequenceBatchForward"], ["", "def", "getEncodingsForListGeneral", "(", "wordsToBeEncoded", ",", "encodingFunction", ")", ":", "\n", "    ", "modelVectors", "=", "[", "]", "\n", "byLength", "=", "sorted", "(", "list", "(", "wordsToBeEncoded", ")", ",", "reverse", "=", "True", ")", "\n", "\n", "for", "offset", "in", "range", "(", "0", ",", "len", "(", "wordsToBeEncoded", ")", ",", "100", ")", ":", "\n", "#      print(offset)", "\n", "      ", "codes1", ",", "codes2", "=", "encodingFunction", "(", "padWords", "(", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "byLength", "[", "offset", ":", "offset", "+", "100", "]", "]", ")", ")", "\n", "for", "index", ",", "word", "in", "enumerate", "(", "byLength", "[", "offset", ":", "offset", "+", "100", "]", ")", ":", "\n", "         ", "code1", "=", "codes1", "[", "index", "]", ".", "cpu", "(", ")", "#,len(word)]", "\n", "code2", "=", "codes2", "[", "0", "]", "[", "0", ",", "index", "]", ".", "cpu", "(", ")", "#,len(word)]", "\n", "code3", "=", "codes2", "[", "1", "]", "[", "0", ",", "index", "]", ".", "cpu", "(", ")", "#,len(word)]", "\n", "modelVectors", ".", "append", "(", "(", "code1", ",", "(", "code2", ",", "code3", ")", ")", ")", "\n", "#     print((code1,code2,code3))", "\n", "", "", "return", "modelVectors", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.plusL": [[47, 51], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.plus": [[52, 57], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.parameters": [[112, 116], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.encodeWord": [[142, 147], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.choice": [[159, 178], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.encodeListOfWords": [[180, 193], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward.data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.encodeWord", "len", "hidden_forward.data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", ",", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.choiceList": [[197, 218], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.encodeSequenceBatchForward": [[221, 231], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.encodeSequenceBatchBackward": [[234, 246], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.predictNext": [[250, 255], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.keepGenerating": [[256, 280], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.doChoiceList": [[321, 327], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.doChoice": [[329, 335], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-balanceE-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.plusL": [[40, 44], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.plus": [[45, 50], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.parameters": [[90, 94], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.encodeWord": [[120, 123], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.choice": [[135, 154], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.encodeListOfWordsIn": [[156, 162], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.encodeListOfWords": [[163, 169], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.choiceList": [[173, 194], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.predictNext": [[226, 231], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.keepGenerating": [[232, 256], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.doChoiceList": [[278, 284], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.doChoice": [[286, 292], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors-wikisource-OOV.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.plusL": [[36, 40], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.plus": [[41, 46], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.baseline_parameters": [[94, 98], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "baseline_parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "baseline_modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeWord": [[126, 131], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.choice": [[143, 162], ["max", "range", "torch.autograd.Variable", "char_embeddings", "baseline_rnn_encoder_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "baseline_rnn_encoder_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeListOfWords": [[164, 177], ["max", "range", "torch.autograd.Variable", "baseline_char_embeddings", "baseline_rnn_encoder_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "baseline_char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "baseline_rnn_encoder_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.choiceList": [[181, 202], ["max", "range", "torch.autograd.Variable", "char_embeddings", "baseline_rnn_encoder_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "baseline_rnn_encoder_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeSequenceBatchForward": [[205, 215], ["torch.autograd.Variable", "char_embeddings", "baseline_rnn_encoder_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "baseline_rnn_encoder_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeSequenceBatchBackward": [[218, 230], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.predictNext": [[234, 239], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.keepGenerating": [[240, 264], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "baseline_rnn_encoder_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.doChoiceList": [[299, 305], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "", "def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.doChoice": [[307, 313], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.padWords": [[799, 805], ["max", "enumerate", "len", "len", "len"], "function", ["None"], ["def", "padWords", "(", "words", ")", ":", "\n", "   ", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "words", "]", ")", "\n", "for", "i", ",", "word", "in", "enumerate", "(", "words", ")", ":", "\n", "      ", "if", "len", "(", "word", ")", "<", "maxLength", ":", "\n", "         ", "words", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "word", ")", ")", ")", "+", "word", "#word.append(0)", "\n", "", "", "return", "words", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.getEncodingsForList": [[809, 811], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.getEncodingsForListGeneral"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.getEncodingsForListGeneral"], ["", "def", "getEncodingsForList", "(", "wordsToBeEncoded", ")", ":", "\n", "    ", "return", "getEncodingsForListGeneral", "(", "wordsToBeEncoded", ",", "encodeSequenceBatchForward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.getEncodingsForListGeneral": [[814, 828], ["sorted", "range", "list", "len", "enumerate", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.padWords", "codes1[].cpu", "[].cpu", "[].cpu", "modelVectors.append", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-baseline.encodeSequenceBatchForward"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.padWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeSequenceBatchForward"], ["", "def", "getEncodingsForListGeneral", "(", "wordsToBeEncoded", ",", "encodingFunction", ")", ":", "\n", "    ", "modelVectors", "=", "[", "]", "\n", "byLength", "=", "sorted", "(", "list", "(", "wordsToBeEncoded", ")", ",", "reverse", "=", "True", ")", "\n", "\n", "for", "offset", "in", "range", "(", "0", ",", "len", "(", "wordsToBeEncoded", ")", ",", "100", ")", ":", "\n", "#      print(offset)", "\n", "      ", "codes1", ",", "codes2", "=", "encodingFunction", "(", "padWords", "(", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "byLength", "[", "offset", ":", "offset", "+", "100", "]", "]", ")", ")", "\n", "for", "index", ",", "word", "in", "enumerate", "(", "byLength", "[", "offset", ":", "offset", "+", "100", "]", ")", ":", "\n", "         ", "code1", "=", "codes1", "[", "index", "]", ".", "cpu", "(", ")", "#,len(word)]", "\n", "code2", "=", "codes2", "[", "0", "]", "[", "0", ",", "index", "]", ".", "cpu", "(", ")", "#,len(word)]", "\n", "code3", "=", "codes2", "[", "1", "]", "[", "0", ",", "index", "]", ".", "cpu", "(", ")", "#,len(word)]", "\n", "modelVectors", ".", "append", "(", "(", "code1", ",", "(", "code2", ",", "code3", ")", ")", ")", "\n", "#     print((code1,code2,code3))", "\n", "", "", "return", "modelVectors", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.plusL": [[40, 44], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.plus": [[45, 50], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.parameters": [[90, 94], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.encodeWord": [[120, 123], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.choice": [[135, 154], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.encodeListOfWordsIn": [[156, 162], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.encodeListOfWords": [[163, 169], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.choiceList": [[173, 194], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.predictNext": [[226, 231], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.keepGenerating": [[232, 256], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.doChoiceList": [[277, 283], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.doChoice": [[285, 291], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV-distractors.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.parameters": [[107, 111], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.encodeWord": [[137, 142], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.choice": [[154, 173], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.encodeListOfWords": [[175, 188], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.choiceList": [[192, 213], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.encodeSequenceBatchForward": [[216, 226], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.encodeSequenceBatchBackward": [[229, 241], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.predictNext": [[245, 250], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.keepGenerating": [[251, 275], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.doChoiceList": [[316, 322], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.doChoice": [[324, 330], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.meanEqual": [[347, 350], ["len", "len", "sum", "len", "zip"], "function", ["None"], ["", "def", "meanEqual", "(", "x", ",", "y", ")", ":", "\n", "  ", "assert", "len", "(", "x", ")", "==", "len", "(", "y", ")", "\n", "return", "sum", "(", "[", "a", "==", "b", "for", "a", ",", "b", "in", "zip", "(", "x", ",", "y", ")", "]", ")", "/", "len", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-wikisource-investigateE.mean": [[352, 354], ["sum", "len"], "function", ["None"], ["", "def", "mean", "(", "x", ")", ":", "\n", "  ", "return", "sum", "(", "x", ")", "/", "len", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.plusL": [[40, 44], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.plus": [[45, 50], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.parameters": [[105, 109], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.encodeWord": [[135, 140], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.choice": [[152, 171], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.encodeListOfWords": [[173, 186], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward.data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.encodeWord", "len", "hidden_forward.data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.choiceList": [[190, 211], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.encodeSequenceBatchForward": [[214, 224], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.encodeSequenceBatchBackward": [[227, 239], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.predictNext": [[243, 248], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.keepGenerating": [[249, 273], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.doChoiceList": [[314, 320], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.doChoice": [[322, 328], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-RNN.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.parameters": [[107, 111], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.encodeWord": [[137, 142], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.choice": [[154, 173], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.encodeListOfWords": [[175, 188], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.choiceList": [[192, 213], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.encodeSequenceBatchForward": [[216, 226], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.encodeSequenceBatchBackward": [[229, 241], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.predictNext": [[245, 250], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.keepGenerating": [[251, 275], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.doChoiceList": [[296, 302], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.doChoice": [[304, 310], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-unit.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.plusL": [[38, 42], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.plus": [[43, 48], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.parameters": [[103, 107], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.encodeWord": [[133, 138], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.choice": [[150, 169], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.encodeListOfWords": [[171, 184], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.choiceList": [[188, 209], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.encodeSequenceBatchForward": [[212, 222], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.encodeSequenceBatchBackward": [[225, 237], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.predictNext": [[241, 246], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.keepGenerating": [[247, 271], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.doChoiceList": [[315, 321], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.doChoice": [[323, 329], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-look_at_data.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.parameters": [[92, 96], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.encodeWord": [[122, 125], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.choice": [[137, 156], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.encodeListOfWordsIn": [[158, 164], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.encodeListOfWords": [[165, 171], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.choiceList": [[175, 196], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.predictNext": [[228, 233], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.keepGenerating": [[234, 258], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.doChoiceList": [[302, 308], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.doChoice": [[310, 316], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE-withOOV.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.plusL": [[41, 45], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.plus": [[46, 51], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.parameters": [[106, 110], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.encodeWord": [[136, 141], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.choice": [[153, 172], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.encodeListOfWords": [[174, 187], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.choiceList": [[191, 212], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.encodeSequenceBatchForward": [[215, 225], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.encodeSequenceBatchBackward": [[228, 240], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.predictNext": [[244, 249], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.keepGenerating": [[250, 274], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.doChoiceList": [[295, 301], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.doChoice": [[303, 309], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors-wikisource-e.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.plusL": [[37, 41], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.plus": [[42, 47], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.parameters": [[87, 91], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.encodeWord": [[117, 120], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.choice": [[132, 151], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.encodeListOfWordsIn": [[153, 159], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.encodeListOfWords": [[160, 166], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.choiceList": [[170, 191], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.predictNext": [[223, 228], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.keepGenerating": [[229, 253], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.doChoiceList": [[296, 302], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.doChoice": [[304, 310], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.plusL": [[40, 44], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.plus": [[45, 50], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.parameters": [[90, 94], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.encodeWord": [[120, 123], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.choice": [[135, 154], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.encodeListOfWordsIn": [[156, 162], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.encodeListOfWords": [[163, 169], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.choiceList": [[173, 194], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.predictNext": [[226, 231], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.keepGenerating": [[232, 256], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.doChoiceList": [[278, 284], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.doChoice": [[286, 292], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-distractors.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.plusL": [[41, 45], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.plus": [[46, 51], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.parameters": [[106, 110], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.encodeWord": [[136, 141], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.choice": [[153, 172], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.encodeListOfWords": [[174, 187], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.choiceList": [[191, 212], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.encodeSequenceBatchForward": [[215, 225], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.encodeSequenceBatchBackward": [[228, 240], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.predictNext": [[244, 249], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.keepGenerating": [[250, 274], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.doChoiceList": [[295, 301], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.doChoice": [[303, 309], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-redone-distractors.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.plusL": [[42, 46], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.plus": [[47, 52], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.parameters": [[92, 96], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.encodeWord": [[122, 125], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.choice": [[137, 156], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.encodeListOfWordsIn": [[158, 164], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.encodeListOfWords": [[165, 171], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.choiceList": [[175, 196], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.predictNext": [[228, 233], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.keepGenerating": [[234, 258], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.doChoiceList": [[302, 308], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.doChoice": [[310, 316], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-wikisource-balanceE.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.plusL": [[41, 45], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.plus": [[46, 51], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.parameters": [[106, 110], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.encodeWord": [[136, 141], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.choice": [[153, 172], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.encodeListOfWords": [[174, 187], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.choiceList": [[191, 212], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.encodeSequenceBatchForward": [[215, 225], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.encodeSequenceBatchBackward": [[228, 240], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.predictNext": [[244, 249], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-extract-stimuli.keepGenerating": [[250, 274], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.plusL": [[38, 42], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.plus": [[43, 48], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.parameters": [[103, 107], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.encodeWord": [[133, 138], ["numeric[].append", "random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.choice": [[150, 169], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.encodeListOfWords": [[171, 184], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "hidden_forward[].data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.encodeWord", "len", "hidden_forward[].data.cpu", "range", "torch.LongTensor().transpose", "len", "len", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numeric", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "hidden", "=", "hidden_forward", "[", "0", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "[", "hidden", "[", "0", "]", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.choiceList": [[188, 209], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.encodeSequenceBatchForward": [[212, 222], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.encodeSequenceBatchBackward": [[225, 237], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.predictNext": [[241, 246], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.keepGenerating": [[247, 271], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.doChoiceList": [[312, 318], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.doChoice": [[320, 326], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.plusL": [[37, 41], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.plus": [[42, 47], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.parameters": [[87, 91], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeWord": [[117, 120], ["random.randint", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "(", "(", "stoi", "[", "word", "]", "+", "3", "if", "word", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.choice": [[132, 151], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWordsIn": [[153, 159], ["torch.autograd.Variable", "char_embeddings", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWordsIn", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeListOfWords": [[160, 166], ["torch.autograd.Variable", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeWord", "torch.LongTensor().cuda", "embedded_forward[].data.cpu().numpy", "range", "torch.LongTensor", "embedded_forward[].data.cpu", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "encodeListOfWords", "(", "words", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "for", "word", "in", "words", "]", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "numeric", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "[", "output", ".", "weight", "[", "word", "]", "for", "word", "in", "numeric", "]", "#char_embeddings(input_tensor_forward)", "\n", "return", "[", "embedded_forward", "[", "i", "]", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "for", "i", "in", "range", "(", "len", "(", "words", ")", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.choiceList": [[170, 191], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.predictNext": [[223, 228], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.keepGenerating": [[229, 253], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.doChoiceList": [[296, 302], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.doChoice": [[304, 310], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-words-withOOV.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-collect-stimuli.plusL": [[33, 37], ["None"], "function", ["None"], ["def", "plusL", "(", "its", ")", ":", "\n", "  ", "for", "it", "in", "its", ":", "\n", "       ", "for", "x", "in", "it", ":", "\n", "           ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals-2-tests-collect-stimuli.plus": [[38, 43], ["None"], "function", ["None"], ["", "", "", "def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.plus": [[39, 44], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.parameters": [[99, 103], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeWord": [[129, 134], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice": [[147, 166], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "len", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["def", "choice", "(", "numeric1", ",", "numeric2", ")", ":", "\n", "     ", "assert", "len", "(", "numeric1", ")", "==", "1", "\n", "assert", "len", "(", "numeric2", ")", "==", "1", "\n", "numeric", "=", "[", "numeric1", "[", "0", "]", ",", "numeric2", "[", "0", "]", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "2", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList": [[169, 190], ["max", "range", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "logsoftmax", "lossModule().view", "losses.sum().data.cpu().numpy.sum().data.cpu().numpy", "len", "torch.LongTensor().transpose().cuda", "output", "len", "len", "len", "len", "numeric[].append", "lossModule", "losses.sum().data.cpu().numpy.sum().data.cpu", "torch.LongTensor().transpose", "logsoftmax.view", "target.view", "torch.LongTensor", "len", "losses.sum().data.cpu().numpy.sum"], "function", ["None"], ["", "def", "choiceList", "(", "numeric", ")", ":", "\n", "     ", "for", "x", "in", "numeric", ":", "\n", "       ", "assert", "len", "(", "x", ")", "==", "1", "\n", "#     assert len(numeric1) == 1", "\n", "#    assert len(numeric2) == 1", "\n", "", "numeric", "=", "[", "x", "[", "0", "]", "for", "x", "in", "numeric", "]", "#, numeric2[0]]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "        ", "while", "len", "(", "numeric", "[", "i", "]", ")", "<", "maxLength", ":", "\n", "              ", "numeric", "[", "i", "]", ".", "append", "(", "0", ")", "\n", "", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "target", "=", "input_tensor_forward", "[", "1", ":", "]", "\n", "input_cut", "=", "input_tensor_forward", "[", ":", "-", "1", "]", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_cut", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out_forward", ")", ")", "#.data.cpu().view(-1, 3+len(itos)).numpy() #.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "losses", "=", "lossModule", "(", "prediction", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "maxLength", ",", "len", "(", "numeric", ")", ")", "\n", "losses", "=", "losses", ".", "sum", "(", "0", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeSequenceBatchForward": [[193, 203], ["torch.autograd.Variable", "char_embeddings", "rnn_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchForward", "(", "numeric", ")", ":", "\n", "      ", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "#      target_tensor_forward = Variable(torch.LongTensor(numeric).transpose(0,1)[2:].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "#      out_forward = out_forward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#     logits_forward = output(out_forward) ", "\n", "#    log_probs_forward = logsoftmax(logits_forward)", "\n", "return", "(", "out_forward", "[", "-", "1", "]", ",", "hidden_forward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeSequenceBatchBackward": [[206, 218], ["torch.autograd.Variable", "char_embeddings", "rnn_backward_drop", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose", "torch.LongTensor"], "function", ["None"], ["", "def", "encodeSequenceBatchBackward", "(", "numeric", ")", ":", "\n", "#      print([itos[x-3] for x in numeric[0]])", "\n", "#      print([[0]+(x[::-1]) for x in numeric])", "\n", "      ", "input_tensor_backward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "(", "x", "[", ":", ":", "-", "1", "]", ")", "for", "x", "in", "numeric", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "#      target_tensor_backward = Variable(torch.LongTensor([x[::-1] for x in numeric]).transpose(0,1)[:-2].cuda(), requires_grad=False).view(args.sequence_length+1, len(numeric), 1, 1)", "\n", "embedded_backward", "=", "char_embeddings", "(", "input_tensor_backward", ")", "\n", "out_backward", ",", "hidden_backward", "=", "rnn_backward_drop", "(", "embedded_backward", ",", "None", ")", "\n", "#      out_backward = out_backward.view(args.sequence_length+1, len(numeric), -1)", "\n", "#      logits_backward = output(out_backward) ", "\n", "#      log_probs_backward = logsoftmax(logits_backward)", "\n", "\n", "return", "(", "out_backward", "[", "-", "1", "]", ",", "hidden_backward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.predictNext": [[222, 227], ["logsoftmax().data.cpu().view().numpy", "numpy.argmax", "logsoftmax().data.cpu().view", "logsoftmax().data.cpu", "len", "logsoftmax", "output", "out.unsqueeze"], "function", ["None"], ["def", "predictNext", "(", "encoded", ",", "preventBoundary", "=", "True", ")", ":", "\n", "     ", "out", ",", "hidden", "=", "encoded", "\n", "prediction", "=", "logsoftmax", "(", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "predicted", "=", "np", ".", "argmax", "(", "prediction", "[", ":", "-", "1", "]", "if", "preventBoundary", "else", "prediction", ")", "\n", "return", "itos", "[", "predicted", "-", "3", "]", "#, prediction", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.keepGenerating": [[228, 252], ["range", "logsoftmax().data.cpu().view().numpy", "numpy.random.choice", "torch.autograd.Variable", "char_embeddings", "torch.LongTensor().transpose().cuda", "logsoftmax().data.cpu().view", "len", "numpy.exp", "torch.LongTensor().transpose", "logsoftmax().data.cpu", "len", "torch.LongTensor", "logsoftmax", "output", "out.unsqueeze"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["", "def", "keepGenerating", "(", "encoded", ",", "length", "=", "100", ",", "backwards", "=", "False", ")", ":", "\n", "    ", "out", ",", "hidden", "=", "encoded", "\n", "output_string", "=", "\"\"", "\n", "\n", "#    rnn_forward_drop.train(True)", "\n", "\n", "for", "_", "in", "range", "(", "length", ")", ":", "\n", "      ", "prediction", "=", "logsoftmax", "(", "2", "*", "output", "(", "out", ".", "unsqueeze", "(", "0", ")", ")", ")", ".", "data", ".", "cpu", "(", ")", ".", "view", "(", "3", "+", "len", "(", "itos", ")", ")", ".", "numpy", "(", ")", "#.view(1,1,-1))).view(3+len(itos)).data.cpu().numpy()", "\n", "#      predicted = np.argmax(prediction).items()", "\n", "predicted", "=", "np", ".", "random", ".", "choice", "(", "3", "+", "len", "(", "itos", ")", ",", "p", "=", "np", ".", "exp", "(", "prediction", ")", ")", "\n", "\n", "output_string", "+=", "itos", "[", "predicted", "-", "3", "]", "\n", "\n", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "predicted", "]", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "\n", "out", ",", "hidden", "=", "(", "rnn_drop", "if", "not", "backwards", "else", "rnn_backward_drop", ")", "(", "embedded_forward", ",", "hidden", ")", "\n", "out", "=", "out", "[", "-", "1", "]", "\n", "\n", "#   rnn_forward_drop.train(False)", "\n", "\n", "\n", "", "return", "output_string", "if", "not", "backwards", "else", "output_string", "[", ":", ":", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.doChoiceList": [[287, 293], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "print", "numpy.argmin", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choiceList", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "", "def", "doChoiceList", "(", "xs", ")", ":", "\n", "    ", "for", "x", "in", "xs", ":", "\n", "       ", "print", "(", "x", ")", "\n", "", "losses", "=", "choiceList", "(", "[", "encodeWord", "(", "x", ")", "for", "x", "in", "xs", "]", ")", "#, encodeWord(y))", "\n", "print", "(", "losses", ")", "\n", "return", "np", ".", "argmin", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.doChoice": [[295, 301], ["print", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "print", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeWord"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "doChoice", "(", "x", ",", "y", ")", ":", "\n", "    ", "print", "(", "x", ")", "\n", "print", "(", "y", ")", "\n", "losses", "=", "choice", "(", "encodeWord", "(", "x", ")", ",", "encodeWord", "(", "y", ")", ")", "\n", "print", "(", "losses", ")", "\n", "return", "0", "if", "losses", "[", "0", "]", "<", "losses", "[", "1", "]", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.padWords": [[419, 425], ["max", "enumerate", "len", "len", "len"], "function", ["None"], ["def", "padWords", "(", "words", ")", ":", "\n", "   ", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "words", "]", ")", "\n", "for", "i", ",", "word", "in", "enumerate", "(", "words", ")", ":", "\n", "      ", "if", "len", "(", "word", ")", "<", "maxLength", ":", "\n", "         ", "words", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "word", ")", ")", ")", "+", "word", "#word.append(0)", "\n", "", "", "return", "words", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.getEncodingsForList": [[429, 431], ["char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.getEncodingsForListGeneral"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.getEncodingsForListGeneral"], ["", "def", "getEncodingsForList", "(", "wordsToBeEncoded", ")", ":", "\n", "    ", "return", "getEncodingsForListGeneral", "(", "wordsToBeEncoded", ",", "encodeSequenceBatchForward", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.getEncodingsForListGeneral": [[434, 448], ["sorted", "range", "list", "len", "enumerate", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.padWords", "codes1[].cpu", "[].cpu", "[].cpu", "modelVectors.append", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeWord", "char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeSequenceBatchForward"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.padWords", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.encodeSequenceBatchForward"], ["", "def", "getEncodingsForListGeneral", "(", "wordsToBeEncoded", ",", "encodingFunction", ")", ":", "\n", "    ", "modelVectors", "=", "[", "]", "\n", "byLength", "=", "sorted", "(", "list", "(", "wordsToBeEncoded", ")", ",", "reverse", "=", "True", ")", "\n", "\n", "for", "offset", "in", "range", "(", "0", ",", "len", "(", "wordsToBeEncoded", ")", ",", "100", ")", ":", "\n", "#      print(offset)", "\n", "      ", "codes1", ",", "codes2", "=", "encodingFunction", "(", "padWords", "(", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "byLength", "[", "offset", ":", "offset", "+", "100", "]", "]", ")", ")", "\n", "for", "index", ",", "word", "in", "enumerate", "(", "byLength", "[", "offset", ":", "offset", "+", "100", "]", ")", ":", "\n", "         ", "code1", "=", "codes1", "[", "index", "]", ".", "cpu", "(", ")", "#,len(word)]", "\n", "code2", "=", "codes2", "[", "0", "]", "[", "0", ",", "index", "]", ".", "cpu", "(", ")", "#,len(word)]", "\n", "code3", "=", "codes2", "[", "1", "]", "[", "0", ",", "index", "]", ".", "cpu", "(", ")", "#,len(word)]", "\n", "modelVectors", ".", "append", "(", "(", "code1", ",", "(", "code2", ",", "code3", ")", ")", ")", "\n", "#     print((code1,code2,code3))", "\n", "", "", "return", "modelVectors", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.__init__": [[79, 101], ["language.startswith", "random.shuffle", "accessISWOCData.readISWOCCorpus", "language.startswith", "len", "language.replace", "accessTOROTData.readTOROTCorpus", "corpusIterator.readUDCorpus", "language.replace"], "methods", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.readUDCorpus"], ["   ", "def", "__init__", "(", "self", ",", "language", ",", "partition", "=", "\"train\"", ",", "storeMorph", "=", "False", ",", "splitLemmas", "=", "False", ",", "removePunctuation", "=", "True", ",", "lowerCaseLemmas", "=", "False", ")", ":", "\n", "      ", "if", "splitLemmas", ":", "\n", "           ", "assert", "language", "==", "\"Korean\"", "\n", "", "self", ".", "splitLemmas", "=", "splitLemmas", "\n", "\n", "self", ".", "lowerCaseLemmas", "=", "lowerCaseLemmas", "\n", "if", "removePunctuation", ":", "\n", "         ", "self", ".", "removePunctuation", "=", "True", "\n", "", "else", ":", "\n", "         ", "self", ".", "removePunctuation", "=", "False", "\n", "", "self", ".", "storeMorph", "=", "storeMorph", "\n", "if", "language", ".", "startswith", "(", "\"ISWOC_\"", ")", ":", "\n", "          ", "data", "=", "accessISWOCData", ".", "readISWOCCorpus", "(", "language", ".", "replace", "(", "\"ISWOC_\"", ",", "\"\"", ")", ",", "partition", ")", "\n", "", "elif", "language", ".", "startswith", "(", "\"TOROT_\"", ")", ":", "\n", "          ", "data", "=", "accessTOROTData", ".", "readTOROTCorpus", "(", "language", ".", "replace", "(", "\"TOROT_\"", ",", "\"\"", ")", ",", "partition", ")", "\n", "", "else", ":", "\n", "          ", "data", "=", "readUDCorpus", "(", "language", ",", "partition", ")", "\n", "", "random", ".", "shuffle", "(", "data", ")", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "partition", "=", "partition", "\n", "self", ".", "language", "=", "language", "\n", "assert", "len", "(", "data", ")", ">", "0", ",", "(", "language", ",", "partition", ")", "\n", "", "def", "permute", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.permute": [[101, 103], ["random.shuffle"], "methods", ["None"], ["", "def", "permute", "(", "self", ")", ":", "\n", "      ", "random", ".", "shuffle", "(", "self", ".", "data", ")", "\n", "", "def", "length", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.length": [[103, 105], ["len"], "methods", ["None"], ["", "def", "length", "(", "self", ")", ":", "\n", "      ", "return", "len", "(", "self", ".", "data", ")", "\n", "", "def", "processSentence", "(", "self", ",", "sentence", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.processSentence": [[105, 141], ["list", "range", "map", "len", "[].startswith", "dict", "int", "int", "[].lower", "result.append", "list.split", "[].lower", "[].split", "[].split", "x.split", "enumerate"], "methods", ["None"], ["", "def", "processSentence", "(", "self", ",", "sentence", ")", ":", "\n", "        ", "sentence", "=", "list", "(", "map", "(", "lambda", "x", ":", "x", ".", "split", "(", "\"\\t\"", ")", ",", "sentence", ".", "split", "(", "\"\\n\"", ")", ")", ")", "\n", "result", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "sentence", ")", ")", ":", "\n", "#           print sentence[i]", "\n", "           ", "if", "sentence", "[", "i", "]", "[", "0", "]", ".", "startswith", "(", "\"#\"", ")", ":", "\n", "              ", "continue", "\n", "", "if", "\"-\"", "in", "sentence", "[", "i", "]", "[", "0", "]", ":", "# if it is NUM-NUM", "\n", "              ", "continue", "\n", "", "if", "\".\"", "in", "sentence", "[", "i", "]", "[", "0", "]", ":", "\n", "              ", "continue", "\n", "", "sentence", "[", "i", "]", "=", "dict", "(", "[", "(", "y", ",", "sentence", "[", "i", "]", "[", "x", "]", ")", "for", "x", ",", "y", "in", "enumerate", "(", "header", ")", "]", ")", "\n", "if", "self", ".", "removePunctuation", ":", "\n", "             ", "if", "sentence", "[", "i", "]", "[", "\"posUni\"", "]", "==", "\"PUNCT\"", ":", "\n", "                ", "continue", "\n", "", "", "sentence", "[", "i", "]", "[", "\"head\"", "]", "=", "int", "(", "sentence", "[", "i", "]", "[", "\"head\"", "]", ")", "\n", "sentence", "[", "i", "]", "[", "\"index\"", "]", "=", "int", "(", "sentence", "[", "i", "]", "[", "\"index\"", "]", ")", "\n", "sentence", "[", "i", "]", "[", "\"word\"", "]", "=", "sentence", "[", "i", "]", "[", "\"word\"", "]", ".", "lower", "(", ")", "\n", "if", "self", ".", "lowerCaseLemmas", ":", "\n", "              ", "sentence", "[", "i", "]", "[", "\"lemma\"", "]", "=", "sentence", "[", "i", "]", "[", "\"lemma\"", "]", ".", "lower", "(", ")", "\n", "\n", "", "if", "self", ".", "language", "==", "\"Thai-Adap\"", ":", "\n", "              ", "assert", "sentence", "[", "i", "]", "[", "\"lemma\"", "]", "==", "\"_\"", "\n", "sentence", "[", "i", "]", "[", "\"lemma\"", "]", "=", "sentence", "[", "i", "]", "[", "\"word\"", "]", "\n", "", "if", "\"ISWOC\"", "in", "self", ".", "language", "or", "\"TOROT\"", "in", "self", ".", "language", ":", "\n", "              ", "if", "sentence", "[", "i", "]", "[", "\"head\"", "]", "==", "0", ":", "\n", "                  ", "sentence", "[", "i", "]", "[", "\"dep\"", "]", "=", "\"root\"", "\n", "\n", "", "", "if", "self", ".", "splitLemmas", ":", "\n", "              ", "sentence", "[", "i", "]", "[", "\"lemmas\"", "]", "=", "sentence", "[", "i", "]", "[", "\"lemma\"", "]", ".", "split", "(", "\"+\"", ")", "\n", "\n", "", "if", "self", ".", "storeMorph", ":", "\n", "              ", "sentence", "[", "i", "]", "[", "\"morph\"", "]", "=", "sentence", "[", "i", "]", "[", "\"morph\"", "]", ".", "split", "(", "\"|\"", ")", "\n", "", "result", ".", "append", "(", "sentence", "[", "i", "]", ")", "\n", "#          print sentence[i]", "\n", "", "return", "result", "\n", "", "def", "getSentence", "(", "self", ",", "index", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.getSentence": [[141, 144], ["corpusIterator.CorpusIterator.processSentence"], "methods", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.processSentence"], ["", "def", "getSentence", "(", "self", ",", "index", ")", ":", "\n", "      ", "result", "=", "self", ".", "processSentence", "(", "self", ".", "data", "[", "index", "]", ")", "\n", "return", "result", "\n", "", "def", "iterator", "(", "self", ",", "rejectShortSentences", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.iterator": [[144, 149], ["corpusIterator.CorpusIterator.processSentence", "len"], "methods", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.CorpusIterator.processSentence"], ["", "def", "iterator", "(", "self", ",", "rejectShortSentences", "=", "False", ")", ":", "\n", "     ", "for", "sentence", "in", "self", ".", "data", ":", "\n", "        ", "if", "len", "(", "sentence", ")", "<", "3", "and", "rejectShortSentences", ":", "\n", "           ", "continue", "\n", "", "yield", "self", ".", "processSentence", "(", "sentence", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIterator.readUDCorpus": [[11, 77], ["print", "len", "os.listdir", "list", "os.listdir", "list", "len", "len", "print", "filter", "print", "print", "print", "language.endswith", "filter", "len", "print", "len", "filter", "len", "len", "language.endswith", "open", "inFile.read().strip().split", "print", "x.startswith", "len", "language.endswith", "random.Random().shuffle", "x.endswith", "inFile.read().strip", "str", "language.replace", "random.Random", "len", "inFile.read", "str", "len"], "function", ["None"], ["def", "readUDCorpus", "(", "language", ",", "partition", ")", ":", "\n", "      ", "basePaths", "=", "[", "UD_HOME", "]", "\n", "files", "=", "[", "]", "\n", "while", "len", "(", "files", ")", "==", "0", ":", "\n", "        ", "if", "len", "(", "basePaths", ")", "==", "0", ":", "\n", "           ", "print", "(", "\"No files found\"", ")", "\n", "raise", "IOError", "\n", "", "basePath", "=", "basePaths", "[", "0", "]", "\n", "del", "basePaths", "[", "0", "]", "\n", "files", "=", "os", ".", "listdir", "(", "basePath", ")", "\n", "files", "=", "list", "(", "filter", "(", "lambda", "x", ":", "x", ".", "startswith", "(", "\"UD_\"", "+", "language", ".", "replace", "(", "\"-Adap\"", ",", "\"\"", ")", ")", ",", "files", ")", ")", "\n", "", "data", "=", "[", "]", "\n", "for", "name", "in", "files", ":", "\n", "        ", "if", "\"Sign\"", "in", "name", ":", "\n", "           ", "print", "(", "\"Skipping \"", "+", "name", ")", "\n", "continue", "\n", "", "assert", "(", "\"Sign\"", "not", "in", "name", ")", "\n", "if", "\"Chinese-CFL\"", "in", "name", ":", "\n", "           ", "print", "(", "\"Skipping \"", "+", "name", ")", "\n", "continue", "\n", "", "suffix", "=", "name", "[", "len", "(", "\"UD_\"", "+", "language", ")", ":", "]", "\n", "if", "name", "==", "\"UD_French-FTB\"", ":", "\n", "            ", "subDirectory", "=", "\"/juicier/scr120/scr/mhahn/corpus-temp/UD_French-FTB/\"", "\n", "", "else", ":", "\n", "            ", "subDirectory", "=", "basePath", "+", "\"/\"", "+", "name", "\n", "", "subDirFiles", "=", "os", ".", "listdir", "(", "subDirectory", ")", "\n", "partitionHere", "=", "partition", "\n", "if", "(", "name", "in", "[", "\"UD_North_Sami\"", ",", "\"UD_Irish\"", ",", "\"UD_Buryat-BDT\"", ",", "\"UD_Armenian-ArmTDP\"", "]", ")", "and", "partition", "==", "\"dev\"", "and", "(", "not", "language", ".", "endswith", "(", "\"-Adap\"", ")", ")", ":", "\n", "            ", "print", "(", "\"Substituted test for dev partition\"", ")", "\n", "partitionHere", "=", "\"test\"", "\n", "", "elif", "language", ".", "endswith", "(", "\"-Adap\"", ")", ":", "\n", "          ", "if", "(", "name", "in", "[", "\"UD_Kazakh-KTB\"", ",", "\"UD_Cantonese-HK\"", ",", "\"UD_Naija-NSC\"", ",", "\"UD_Buryat-BDT\"", ",", "\"UD_Thai-PUD\"", ",", "\"UD_Breton-KEB\"", ",", "\"UD_Faroese-OFT\"", ",", "\"UD_Amharic-ATT\"", "]", ")", ":", "\n", "             ", "partitionHere", "=", "\"test\"", "\n", "", "elif", "name", "==", "\"UD_Armenian-ArmTDP\"", ":", "\n", "             ", "partitionHere", "=", "(", "\"train\"", "if", "partition", "==", "\"dev\"", "else", "\"test\"", ")", "\n", "\n", "", "", "candidates", "=", "list", "(", "filter", "(", "lambda", "x", ":", "\"-ud-\"", "+", "partitionHere", "+", "\".\"", "in", "x", "and", "x", ".", "endswith", "(", "\".conllu\"", ")", ",", "subDirFiles", ")", ")", "\n", "if", "len", "(", "candidates", ")", "==", "0", ":", "\n", "           ", "print", "(", "\"Did not find \"", "+", "partitionHere", "+", "\" file in \"", "+", "subDirectory", ")", "\n", "continue", "\n", "", "if", "len", "(", "candidates", ")", "==", "2", ":", "\n", "           ", "candidates", "=", "filter", "(", "lambda", "x", ":", "\"merged\"", "in", "x", ",", "candidates", ")", "\n", "", "assert", "len", "(", "candidates", ")", "==", "1", ",", "candidates", "\n", "try", ":", "\n", "           ", "dataPath", "=", "subDirectory", "+", "\"/\"", "+", "candidates", "[", "0", "]", "\n", "with", "open", "(", "dataPath", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "              ", "newData", "=", "inFile", ".", "read", "(", ")", ".", "strip", "(", ")", ".", "split", "(", "\"\\n\\n\"", ")", "\n", "assert", "len", "(", "newData", ")", ">", "1", "\n", "if", "language", ".", "endswith", "(", "\"-Adap\"", ")", "and", "(", "name", "in", "[", "\"UD_Kazakh-KTB\"", ",", "\"UD_Cantonese-HK\"", ",", "\"UD_Naija-NSC\"", ",", "\"UD_Buryat-BDT\"", ",", "\"UD_Thai-PUD\"", ",", "\"UD_Breton-KEB\"", ",", "\"UD_Faroese-OFT\"", ",", "\"UD_Amharic-ATT\"", "]", ")", ":", "# \"UD_Armenian-ArmTDP\",", "\n", "                  ", "random", ".", "Random", "(", "4", ")", ".", "shuffle", "(", "newData", ")", "\n", "devLength", "=", "100", "\n", "if", "partition", "==", "\"dev\"", ":", "\n", "                       ", "newData", "=", "newData", "[", ":", "devLength", "]", "\n", "", "elif", "partition", "==", "\"train\"", ":", "\n", "                       ", "newData", "=", "newData", "[", "devLength", ":", "]", "\n", "", "else", ":", "\n", "                       ", "assert", "False", "\n", "", "", "data", "=", "data", "+", "newData", "\n", "", "", "except", "IOError", ":", "\n", "           ", "print", "(", "\"Did not find \"", "+", "dataPath", ")", "\n", "\n", "", "", "assert", "len", "(", "data", ")", ">", "0", ",", "(", "language", ",", "partition", ",", "files", ")", "\n", "\n", "\n", "print", "(", "\"Read \"", "+", "str", "(", "len", "(", "data", ")", ")", "+", "\" sentences from \"", "+", "str", "(", "len", "(", "files", ")", ")", "+", "\" \"", "+", "partition", "+", "\" datasets.\"", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-WHITESPACE.plus": [[45, 50], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-WHITESPACE.parameters": [[108, 112], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-WHITESPACE.prepareDatasetChunks": [[136, 164], ["print", "print", "torch.LongTensor().view().transpose().transpose().cuda", "range", "len", "numerified.append", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "len", "random.randint", "random.randint", "torch.LongTensor().view().transpose", "random.random", "random.random", "len", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "#         if char == \" \":", "\n", "#           continue", "\n", "         ", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ")", "*", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "args", ".", "sequence_length", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "           ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-WHITESPACE.prepareDatasetChunksPrevious": [[165, 181], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "#         if char == \" \":", "\n", "#           continue", "\n", "         ", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-WHITESPACE.prepareDataset": [[187, 200], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "#         if char == \" \":", "\n", "#           continue", "\n", "         ", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-WHITESPACE.forward": [[206, 259], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "tuple", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable().detach", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.autograd.Variable", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "tuple", "(", "[", "Variable", "(", "x", ".", "data", ")", ".", "detach", "(", ")", "for", "x", "in", "hidden", "]", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", "and", "args", ".", "verbose", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-WHITESPACE.backward": [[260, 267], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiShuffle.load": [[5, 19], ["open", "print", "inFile.read().strip().lower().split", "print", "random.shuffle", "print", "open", "inFile.read().strip().lower", "line.lower", "inFile.read().strip", "inFile.read"], "function", ["None"], ["def", "load", "(", "language", ",", "partition", ")", ":", "\n", "  ", "if", "language", "==", "\"italian\"", ":", "\n", "    ", "with", "open", "(", "WIKIPEDIA_HOME", "+", "\"\"", "+", "language", "+", "\"-\"", "+", "partition", "+", "\".txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "       ", "print", "(", "\"Reading data file\"", ")", "\n", "data", "=", "inFile", ".", "read", "(", ")", ".", "strip", "(", ")", ".", "lower", "(", ")", ".", "split", "(", "\"\\n\"", ")", "\n", "print", "(", "\"Shuffling\"", ")", "\n", "random", ".", "shuffle", "(", "data", ")", "\n", "print", "(", "\"Finished shuffling\"", ")", "\n", "return", "\"\"", ".", "join", "(", "data", ")", "\n", "", "", "else", ":", "\n", "    ", "chunks", "=", "[", "]", "\n", "with", "open", "(", "WIKIPEDIA_HOME", "+", "\"\"", "+", "language", "+", "\"-\"", "+", "partition", "+", "\".txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "      ", "for", "line", "in", "inFile", ":", "\n", "        ", "yield", "line", ".", "lower", "(", ")", "\n", "#        chunks.append(line.strip().lower())", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiShuffle.training": [[26, 28], ["corpusIteratorWikiShuffle.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "", "", "", "def", "training", "(", "language", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"train\"", ")", "\n", "#   with open(WIKIPEDIA_HOME+\"\"+language+\"-train.txt\", \"r\") as inFile:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiShuffle.dev": [[34, 36], ["corpusIteratorWikiShuffle.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "dev", "(", "language", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"valid\"", ")", "\n", "#   with open(WIKIPEDIA_HOME+\"\"+language+\"-valid.txt\", \"r\") as inFile:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.createGermanCharModel.extractArguments": [[55, 63], ["result.append", "result.append", "range", "len", "result.append", "result.append"], "function", ["None"], ["def", "extractArguments", "(", "x", ")", ":", "\n", "   ", "result", "=", "[", "]", "\n", "result", ".", "append", "(", "\"--language\"", ")", "\n", "result", ".", "append", "(", "language", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "bounds", ")", ")", ":", "\n", "      ", "result", ".", "append", "(", "\"--\"", "+", "bounds", "[", "i", "]", "[", "0", "]", ")", "\n", "result", ".", "append", "(", "x", "[", "i", "]", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2.plus": [[45, 50], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2.parameters": [[106, 110], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2.prepareDatasetChunks": [[133, 161], ["print", "print", "torch.LongTensor().view().transpose().transpose().cuda", "range", "len", "numerified.append", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "len", "random.randint", "random.randint", "torch.LongTensor().view().transpose", "random.random", "random.random", "len", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ")", "*", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "args", ".", "sequence_length", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "           ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2.prepareDatasetChunksPrevious": [[162, 178], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2.prepareDataset": [[184, 197], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2.forward": [[203, 256], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "tuple", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable().detach", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.autograd.Variable", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "tuple", "(", "[", "Variable", "(", "x", ".", "data", ")", ".", "detach", "(", ")", "for", "x", "in", "hidden", "]", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", "and", "args", ".", "verbose", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2.backward": [[257, 264], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-TEST.plus": [[42, 47], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-TEST.parameters": [[103, 107], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-TEST.prepareDatasetChunks": [[132, 160], ["print", "print", "torch.LongTensor().view().transpose().transpose().cuda", "range", "len", "numerified.append", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "len", "random.randint", "random.randint", "torch.LongTensor().view().transpose", "random.random", "random.random", "len", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ")", "*", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "args", ".", "sequence_length", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "           ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-TEST.prepareDatasetChunksPrevious": [[161, 177], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-TEST.prepareDataset": [[183, 196], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-TEST.forward": [[202, 255], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "tuple", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable().detach", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.autograd.Variable", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "tuple", "(", "[", "Variable", "(", "x", ".", "data", ")", ".", "detach", "(", ")", "for", "x", "in", "hidden", "]", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", "and", "args", ".", "verbose", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-TEST.backward": [[256, 263], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-TEST.plus": [[41, 46], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-TEST.parameters": [[86, 90], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-TEST.prepareDatasetChunks": [[115, 159], ["print", "numerified.append", "len", "torch.LongTensor().view().transpose().transpose().cuda", "range", "print", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "random.randint", "random.randint", "len", "random.random", "random.random", "len", "torch.LongTensor().view().transpose", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "#print(len(chunk))", "\n", "       ", "for", "char", "in", "chunk", ":", "\n", "#         if char == \" \":", "\n", "#          continue", "\n", "         ", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "#     print(len(numerified))", "\n", "#      print(args.batchSize)", "\n", "#       print(args.sequence_length)", "\n", "\n", "", "if", "len", "(", "numerified", ")", ">", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ":", "\n", "         ", "sequenceLengthHere", "=", "args", ".", "sequence_length", "\n", "#         elif len(numerified) > args.batchSize:", "\n", "#            print(\"Taking small sequence\")", "\n", "#            sequenceLengthHere = int(len(numerified) / args.batchSize)", "\n", "#            assert sequenceLengthHere < args.sequence_length", "\n", "#            assert  sequenceLengthHere > 0", "\n", "\n", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", ")", "*", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "\n", "#print(len(numerifiedCurrent))", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "sequenceLengthHere", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "             ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "", "else", ":", "\n", "         ", "print", "(", "\"Skipping\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-TEST.prepareDatasetChunksPrevious": [[160, 176], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-TEST.prepareDataset": [[182, 195], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-TEST.forward": [[201, 254], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "tuple", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable().detach", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.autograd.Variable", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "tuple", "(", "[", "Variable", "(", "x", ".", "data", ")", ".", "detach", "(", ")", "for", "x", "in", "hidden", "]", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", "and", "args", ".", "verbose", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-TEST.backward": [[255, 262], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-EVAL_DEV.plus": [[46, 51], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-EVAL_DEV.parameters": [[91, 95], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-EVAL_DEV.prepareDatasetChunks": [[118, 162], ["print", "numerified.append", "len", "torch.LongTensor().view().transpose().transpose().cuda", "range", "print", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "random.randint", "random.randint", "len", "random.random", "random.random", "len", "torch.LongTensor().view().transpose", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "#print(len(chunk))", "\n", "       ", "for", "char", "in", "chunk", ":", "\n", "#         if char == \" \":", "\n", "#          continue", "\n", "         ", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "#     print(len(numerified))", "\n", "#      print(args.batchSize)", "\n", "#       print(args.sequence_length)", "\n", "\n", "", "if", "len", "(", "numerified", ")", ">", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ":", "\n", "         ", "sequenceLengthHere", "=", "args", ".", "sequence_length", "\n", "#         elif len(numerified) > args.batchSize:", "\n", "#            print(\"Taking small sequence\")", "\n", "#            sequenceLengthHere = int(len(numerified) / args.batchSize)", "\n", "#            assert sequenceLengthHere < args.sequence_length", "\n", "#            assert  sequenceLengthHere > 0", "\n", "\n", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", ")", "*", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "\n", "#print(len(numerifiedCurrent))", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "sequenceLengthHere", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "             ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "", "else", ":", "\n", "         ", "print", "(", "\"Skipping\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-EVAL_DEV.prepareDatasetChunksPrevious": [[163, 179], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-EVAL_DEV.prepareDataset": [[185, 198], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-EVAL_DEV.forward": [[204, 257], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "tuple", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable().detach", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.autograd.Variable", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "tuple", "(", "[", "Variable", "(", "x", ".", "data", ")", ".", "detach", "(", ")", "for", "x", "in", "hidden", "]", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words-EVAL_DEV.backward": [[258, 265], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiWords.load": [[5, 30], ["open", "line.find", "chunk.append", "word.lower", "len", "len"], "function", ["None"], ["def", "load", "(", "language", ",", "partition", ",", "removeMarkup", "=", "True", ")", ":", "\n", "  ", "if", "language", "==", "\"italian\"", ":", "\n", "    ", "path", "=", "WIKIPEDIA_HOME", "+", "\"/itwiki-\"", "+", "partition", "+", "\"-tagged.txt\"", "\n", "", "elif", "language", "==", "\"english\"", ":", "\n", "    ", "path", "=", "WIKIPEDIA_HOME", "+", "\"/english-\"", "+", "partition", "+", "\"-tagged.txt\"", "\n", "", "elif", "language", "==", "\"german\"", ":", "\n", "    ", "path", "=", "WIKIPEDIA_HOME", "+", "\"\"", "+", "language", "+", "\"-\"", "+", "partition", "+", "\"-tagged.txt\"", "\n", "", "else", ":", "\n", "    ", "assert", "False", "\n", "", "chunk", "=", "[", "]", "\n", "with", "open", "(", "path", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "    ", "for", "line", "in", "inFile", ":", "\n", "      ", "index", "=", "line", ".", "find", "(", "\"\\t\"", ")", "\n", "if", "index", "==", "-", "1", ":", "\n", "        ", "if", "removeMarkup", ":", "\n", "          ", "continue", "\n", "", "else", ":", "\n", "          ", "index", "=", "len", "(", "line", ")", "-", "1", "\n", "", "", "word", "=", "line", "[", ":", "index", "]", "\n", "chunk", ".", "append", "(", "word", ".", "lower", "(", ")", ")", "\n", "if", "len", "(", "chunk", ")", ">", "40000", ":", "\n", "#   random.shuffle(chunk)", "\n", "         ", "yield", "chunk", "\n", "chunk", "=", "[", "]", "\n", "", "", "", "yield", "chunk", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiWords.training": [[31, 33], ["corpusIteratorWikiWords.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "training", "(", "language", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"train\"", ")", "\n", "#   with open(WIKIPEDIA_HOME+\"\"+language+\"-train.txt\", \"r\") as inFile:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiWords.dev": [[39, 41], ["corpusIteratorWikiWords.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "dev", "(", "language", ",", "removeMarkup", "=", "True", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"valid\"", ",", "removeMarkup", "=", "removeMarkup", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiWords.test": [[42, 44], ["corpusIteratorWikiWords.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "test", "(", "language", ",", "removeMarkup", "=", "True", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"test\"", ",", "removeMarkup", "=", "removeMarkup", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWiki.load": [[5, 29], ["open", "open", "chunks.append", "chunks.append", "line.strip().lower", "len", "line.strip().lower", "len", "random.shuffle", "random.shuffle", "line.strip", "line.strip"], "function", ["None"], ["def", "load", "(", "language", ",", "partition", ",", "doShuffling", "=", "True", ")", ":", "\n", "  ", "if", "language", "==", "\"italian\"", ":", "\n", "    ", "chunks", "=", "[", "]", "\n", "with", "open", "(", "WIKIPEDIA_HOME", "+", "\"/itwiki-\"", "+", "partition", "+", "\".txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "      ", "for", "line", "in", "inFile", ":", "\n", "        ", "chunks", ".", "append", "(", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ")", "\n", "if", "len", "(", "chunks", ")", ">", "20000", ":", "\n", "           ", "if", "doShuffling", ":", "\n", "              ", "random", ".", "shuffle", "(", "chunks", ")", "\n", "", "yield", "\"\"", ".", "join", "(", "chunks", ")", "\n", "chunks", "=", "[", "]", "\n", "", "", "", "yield", "\"\"", ".", "join", "(", "chunks", ")", "\n", "", "else", ":", "\n", "    ", "chunks", "=", "[", "]", "\n", "pathInfix", "=", "{", "\"german\"", ":", "\"\"", ",", "\"english\"", ":", "\"//\"", "}", "[", "language", "]", "\n", "with", "open", "(", "WIKIPEDIA_HOME", "+", "\"\"", "+", "pathInfix", "+", "language", "+", "\"-\"", "+", "partition", "+", "\".txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "      ", "for", "line", "in", "inFile", ":", "\n", "        ", "chunks", ".", "append", "(", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ")", "\n", "if", "len", "(", "chunks", ")", ">", "20000", ":", "\n", "           ", "if", "doShuffling", ":", "\n", "              ", "random", ".", "shuffle", "(", "chunks", ")", "\n", "", "yield", "\"\"", ".", "join", "(", "chunks", ")", "\n", "chunks", "=", "[", "]", "\n", "", "", "", "yield", "\"\"", ".", "join", "(", "chunks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWiki.training": [[30, 32], ["corpusIteratorWiki.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "", "def", "training", "(", "language", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"train\"", ")", "\n", "#   with open(WIKIPEDIA_HOME+\"\"+language+\"-train.txt\", \"r\") as inFile:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWiki.dev": [[38, 40], ["corpusIteratorWiki.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "dev", "(", "language", ",", "doShuffling", "=", "True", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"valid\"", ",", "doShuffling", "=", "doShuffling", ")", "\n", "#   with open(WIKIPEDIA_HOME+\"\"+language+\"-valid.txt\", \"r\") as inFile:", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load": [[7, 40], ["open", "line.strip().lower.strip().lower", "chunks.append", "len", "random.shuffle", "line.strip().lower.strip", "line.strip().lower.replace", "print", "line.strip().lower.replace", "print"], "function", ["None"], ["def", "load", "(", "language", ",", "partition", ",", "sequence", ",", "sequences", "=", "None", ")", ":", "\n", "    ", "chunks", "=", "[", "]", "\n", "skippedLines", "=", "0", "\n", "totalLines", "=", "0", "\n", "with", "open", "(", "WIKIPEDIA_HOME", "+", "\"\"", "+", "language", "+", "\"-\"", "+", "partition", "+", "\".txt\"", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "      ", "for", "line", "in", "inFile", ":", "\n", "        ", "line", "=", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", "\n", "totalLines", "+=", "1", "\n", "if", "sequence", "is", "not", "None", "and", "sequence", "in", "line", ".", "replace", "(", "\" \"", ",", "\"\"", ")", ":", "\n", "          ", "skippedLines", "+=", "1", "\n", "if", "skippedLines", "%", "1000", "==", "0", ":", "\n", "              ", "print", "(", "\"SKIPPED LINES\"", ",", "skippedLines", "/", "totalLines", ")", "\n", "", "continue", "\n", "", "if", "sequences", "is", "not", "None", ":", "\n", "           ", "foundViolation", "=", "0", "\n", "for", "seq", "in", "sequences", ":", "\n", "#              print(seq)", "\n", "              ", "if", "seq", "is", "not", "None", "and", "seq", "in", "line", ".", "replace", "(", "\" \"", ",", "\"\"", ")", ":", "\n", "                ", "skippedLines", "+=", "1", "\n", "if", "skippedLines", "%", "1000", "==", "0", ":", "\n", "                    ", "print", "(", "\"SKIPPED LINES \"", ",", "skippedLines", "/", "totalLines", ",", "seq", ")", "\n", "", "foundViolation", "=", "True", "\n", "break", "\n", "", "", "if", "foundViolation", ":", "\n", "               ", "continue", "\n", "", "assert", "sequences", "[", "0", "]", "not", "in", "line", ",", "(", "sequences", "[", "0", "]", ",", "line", ")", "\n", "assert", "sequences", "[", "1", "]", "not", "in", "line", ",", "(", "sequences", "[", "0", "]", ",", "line", ")", "\n", "", "chunks", ".", "append", "(", "line", ")", "\n", "if", "len", "(", "chunks", ")", ">", "20000", ":", "\n", "           ", "random", ".", "shuffle", "(", "chunks", ")", "\n", "yield", "\"\"", ".", "join", "(", "chunks", ")", "\n", "chunks", "=", "[", "]", "\n", "", "", "", "yield", "\"\"", ".", "join", "(", "chunks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.training": [[41, 43], ["corpusIteratorWikiSequences.load"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.corpusIteratorWikiSequences.load"], ["", "def", "training", "(", "language", ",", "sequence", ",", "sequences", "=", "None", ")", ":", "\n", "  ", "return", "load", "(", "language", ",", "\"train\"", ",", "sequence", ",", "sequences", "=", "sequences", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearchStat.expected_improvement": [[43, 79], ["x.reshape", "gaussian_process.predict", "numpy.max", "numpy.min", "numpy.errstate", "scipy.stats.norm.cdf", "scipy.stats.norm.pdf"], "function", ["None"], ["def", "expected_improvement", "(", "x", ",", "gaussian_process", ",", "evaluated_loss", ",", "greater_is_better", "=", "False", ",", "n_params", "=", "1", ")", ":", "\n", "    ", "\"\"\" expected_improvement\n    Expected improvement acquisition function.\n    Arguments:\n    ----------\n        x: array-like, shape = [n_samples, n_hyperparams]\n            The point for which the expected improvement needs to be computed.\n        gaussian_process: GaussianProcessRegressor object.\n            Gaussian process trained on previously evaluated hyperparameters.\n        evaluated_loss: Numpy array.\n            Numpy array that contains the values off the loss function for the previously\n            evaluated hyperparameters.\n        greater_is_better: Boolean.\n            Boolean flag that indicates whether the loss function is to be maximised or minimised.\n        n_params: int.\n            Dimension of the hyperparameter space.\n    \"\"\"", "\n", "\n", "x_to_predict", "=", "x", ".", "reshape", "(", "-", "1", ",", "n_params", ")", "\n", "\n", "mu", ",", "sigma", "=", "gaussian_process", ".", "predict", "(", "x_to_predict", ",", "return_std", "=", "True", ")", "\n", "\n", "if", "greater_is_better", ":", "\n", "        ", "loss_optimum", "=", "np", ".", "max", "(", "evaluated_loss", ")", "\n", "", "else", ":", "\n", "        ", "loss_optimum", "=", "np", ".", "min", "(", "evaluated_loss", ")", "\n", "\n", "", "scaling_factor", "=", "(", "-", "1", ")", "**", "(", "not", "greater_is_better", ")", "\n", "\n", "# In case sigma equals zero", "\n", "with", "np", ".", "errstate", "(", "divide", "=", "'ignore'", ")", ":", "\n", "        ", "Z", "=", "scaling_factor", "*", "(", "mu", "-", "loss_optimum", ")", "/", "sigma", "\n", "expected_improvement", "=", "scaling_factor", "*", "(", "mu", "-", "loss_optimum", ")", "*", "norm", ".", "cdf", "(", "Z", ")", "+", "sigma", "*", "norm", ".", "pdf", "(", "Z", ")", "\n", "expected_improvement", "[", "sigma", "==", "0.0", "]", "==", "0.0", "\n", "\n", "", "return", "expected_improvement", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearchStat.sample": [[108, 114], ["random.choice", "random.choice", "random.choice", "range", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["def", "sample", "(", ")", ":", "\n", "   ", "while", "True", ":", "\n", "     ", "result", "=", "[", "random", ".", "choice", "(", "values", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "bounds", ")", ")", "]", "\n", "#     if result[names.index(\"lstm_dim\")] == 1024 and result[names.index(\"layers\")] == 3:", "\n", "#        continue", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearchStat.represent": [[115, 118], ["float", "len", "range", "values[].index", "len"], "function", ["None"], ["", "", "def", "represent", "(", "x", ")", ":", "\n", "   ", "result", "=", "[", "float", "(", "values", "[", "i", "]", ".", "index", "(", "x", "[", "i", "]", ")", ")", "/", "len", "(", "values", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "x", ")", ")", "]", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearchStat.extractArguments": [[160, 170], ["result.append", "result.append", "range", "result.append", "result.append", "len", "result.append", "result.append"], "function", ["None"], ["def", "extractArguments", "(", "x", ",", "idForProcess", ")", ":", "\n", "   ", "result", "=", "[", "]", "\n", "result", ".", "append", "(", "\"--language\"", ")", "\n", "result", ".", "append", "(", "language", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "bounds", ")", ")", ":", "\n", "      ", "result", ".", "append", "(", "\"--\"", "+", "bounds", "[", "i", "]", "[", "0", "]", ")", "\n", "result", ".", "append", "(", "x", "[", "i", "]", ")", "\n", "", "result", ".", "append", "(", "\"--myID\"", ")", "\n", "result", ".", "append", "(", "idForProcess", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearchStat.getResult": [[175, 183], ["runningProcesses[].poll", "open", "float", "str", "next().split", "next"], "function", ["None"], ["def", "getResult", "(", "i", ")", ":", "\n", "#   return theirXPs[i][0]", "\n", "   ", "if", "runningProcesses", "[", "i", "]", ".", "poll", "(", ")", "is", "not", "None", ":", "\n", "      ", "with", "open", "(", "\"/checkpoint/mhahn/\"", "+", "language", "+", "\"_\"", "+", "version", "+", "\"_\"", "+", "str", "(", "theirIDs", "[", "i", "]", ")", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "         ", "loss", "=", "float", "(", "next", "(", "inFile", ")", ".", "split", "(", "\" \"", ")", "[", "-", "2", "]", ")", "\n", "return", "loss", "\n", "", "", "else", ":", "\n", "      ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearch.expected_improvement": [[43, 79], ["x.reshape", "gaussian_process.predict", "numpy.max", "numpy.min", "numpy.errstate", "scipy.stats.norm.cdf", "scipy.stats.norm.pdf"], "function", ["None"], ["def", "expected_improvement", "(", "x", ",", "gaussian_process", ",", "evaluated_loss", ",", "greater_is_better", "=", "False", ",", "n_params", "=", "1", ")", ":", "\n", "    ", "\"\"\" expected_improvement\n    Expected improvement acquisition function.\n    Arguments:\n    ----------\n        x: array-like, shape = [n_samples, n_hyperparams]\n            The point for which the expected improvement needs to be computed.\n        gaussian_process: GaussianProcessRegressor object.\n            Gaussian process trained on previously evaluated hyperparameters.\n        evaluated_loss: Numpy array.\n            Numpy array that contains the values off the loss function for the previously\n            evaluated hyperparameters.\n        greater_is_better: Boolean.\n            Boolean flag that indicates whether the loss function is to be maximised or minimised.\n        n_params: int.\n            Dimension of the hyperparameter space.\n    \"\"\"", "\n", "\n", "x_to_predict", "=", "x", ".", "reshape", "(", "-", "1", ",", "n_params", ")", "\n", "\n", "mu", ",", "sigma", "=", "gaussian_process", ".", "predict", "(", "x_to_predict", ",", "return_std", "=", "True", ")", "\n", "\n", "if", "greater_is_better", ":", "\n", "        ", "loss_optimum", "=", "np", ".", "max", "(", "evaluated_loss", ")", "\n", "", "else", ":", "\n", "        ", "loss_optimum", "=", "np", ".", "min", "(", "evaluated_loss", ")", "\n", "\n", "", "scaling_factor", "=", "(", "-", "1", ")", "**", "(", "not", "greater_is_better", ")", "\n", "\n", "# In case sigma equals zero", "\n", "with", "np", ".", "errstate", "(", "divide", "=", "'ignore'", ")", ":", "\n", "        ", "Z", "=", "scaling_factor", "*", "(", "mu", "-", "loss_optimum", ")", "/", "sigma", "\n", "expected_improvement", "=", "scaling_factor", "*", "(", "mu", "-", "loss_optimum", ")", "*", "norm", ".", "cdf", "(", "Z", ")", "+", "sigma", "*", "norm", ".", "pdf", "(", "Z", ")", "\n", "expected_improvement", "[", "sigma", "==", "0.0", "]", "==", "0.0", "\n", "\n", "", "return", "expected_improvement", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearch.sample": [[107, 113], ["random.choice", "random.choice", "random.choice", "range", "len"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice", "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.number.char-lm-ud-stationary-separate-bidir-with-spaces-probe-baseline-prediction-wiki-plurals.choice"], ["def", "sample", "(", ")", ":", "\n", "   ", "while", "True", ":", "\n", "     ", "result", "=", "[", "random", ".", "choice", "(", "values", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "bounds", ")", ")", "]", "\n", "#     if result[names.index(\"lstm_dim\")] == 1024 and result[names.index(\"layers\")] == 3:", "\n", "#        continue", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearch.represent": [[114, 117], ["float", "len", "range", "values[].index", "len"], "function", ["None"], ["", "", "def", "represent", "(", "x", ")", ":", "\n", "   ", "result", "=", "[", "float", "(", "values", "[", "i", "]", ".", "index", "(", "x", "[", "i", "]", ")", ")", "/", "len", "(", "values", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "x", ")", ")", "]", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearch.extractArguments": [[159, 169], ["result.append", "result.append", "range", "result.append", "result.append", "len", "result.append", "result.append"], "function", ["None"], ["def", "extractArguments", "(", "x", ",", "idForProcess", ")", ":", "\n", "   ", "result", "=", "[", "]", "\n", "result", ".", "append", "(", "\"--language\"", ")", "\n", "result", ".", "append", "(", "language", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "bounds", ")", ")", ":", "\n", "      ", "result", ".", "append", "(", "\"--\"", "+", "bounds", "[", "i", "]", "[", "0", "]", ")", "\n", "result", ".", "append", "(", "x", "[", "i", "]", ")", "\n", "", "result", ".", "append", "(", "\"--myID\"", ")", "\n", "result", ".", "append", "(", "idForProcess", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.hyperParameterSearch.getResult": [[174, 182], ["runningProcesses[].poll", "open", "float", "str", "next().split", "next"], "function", ["None"], ["def", "getResult", "(", "i", ")", ":", "\n", "#   return theirXPs[i][0]", "\n", "   ", "if", "runningProcesses", "[", "i", "]", ".", "poll", "(", ")", "is", "not", "None", ":", "\n", "      ", "with", "open", "(", "\"/checkpoint/mhahn/\"", "+", "language", "+", "\"_\"", "+", "version", "+", "\"_\"", "+", "str", "(", "theirIDs", "[", "i", "]", ")", ",", "\"r\"", ")", "as", "inFile", ":", "\n", "         ", "loss", "=", "float", "(", "next", "(", "inFile", ")", ".", "split", "(", "\" \"", ")", "[", "-", "2", "]", ")", "\n", "return", "loss", "\n", "", "", "else", ":", "\n", "      ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.plus": [[45, 50], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.parameters": [[107, 111], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.prepareDatasetChunks": [[134, 146], ["print", "print", "len", "words.append", "len"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "words", "=", "[", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "word", "in", "chunk", ":", "\n", "         ", "words", ".", "append", "(", "word", ")", "\n", "if", "len", "(", "words", ")", "==", "args", ".", "batchSize", ":", "\n", "            ", "yield", "words", "\n", "words", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord": [[152, 157], ["numeric[].append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "encodeWord", "(", "word", ")", ":", "\n", "      ", "numeric", "=", "[", "[", "]", "]", "\n", "for", "char", "in", "word", ":", "\n", "           ", "numeric", "[", "-", "1", "]", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "True", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "", "return", "numeric", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.forward": [[160, 181], ["max", "sum", "range", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "rnn_decoder", "logsoftmax", "train_loss", "len", "torch.LongTensor().transpose().cuda", "torch.LongTensor().transpose().cuda", "char_embeddings", "output", "logsoftmax.view", "target_tensor.view", "print", "char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord", "len", "len", "torch.LongTensor().transpose", "torch.LongTensor().transpose", "len", "len", "len", "torch.LongTensor", "torch.LongTensor"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.encodeWord"], ["", "def", "forward", "(", "words", ",", "printHere", "=", "False", ",", "train", "=", "False", ")", ":", "\n", "    ", "numeric", "=", "[", "encodeWord", "(", "word", ")", "[", "0", "]", "for", "word", "in", "words", "]", "\n", "maxLength", "=", "max", "(", "[", "len", "(", "x", ")", "for", "x", "in", "numeric", "]", ")", "\n", "charCount", "=", "sum", "(", "[", "len", "(", "x", ")", "+", "1", "for", "x", "in", "numeric", "]", ")", "\n", "numericIn", "=", "[", "None", "for", "_", "in", "numeric", "]", "\n", "numericOut", "=", "[", "None", "for", "_", "in", "numeric", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "numeric", ")", ")", ":", "\n", "       ", "numericIn", "[", "i", "]", "=", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "+", "numeric", "[", "i", "]", "\n", "numericOut", "[", "i", "]", "=", "numeric", "[", "i", "]", "+", "[", "1", "]", "+", "(", "[", "0", "]", "*", "(", "maxLength", "-", "len", "(", "numeric", "[", "i", "]", ")", ")", ")", "\n", "\n", "", "input_tensor_forward", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numericIn", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "input_tensor_decoder", "=", "Variable", "(", "torch", ".", "LongTensor", "(", "[", "[", "0", "]", "+", "x", "for", "x", "in", "numericOut", "]", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "cuda", "(", ")", ",", "requires_grad", "=", "False", ")", "\n", "embedded_forward", "=", "char_embeddings", "(", "input_tensor_forward", ")", "\n", "out_forward", ",", "hidden_forward", "=", "rnn_drop", "(", "embedded_forward", ",", "None", ")", "\n", "out_decoder", ",", "_", "=", "rnn_decoder", "(", "char_embeddings", "(", "input_tensor_decoder", "[", ":", "-", "1", "]", ")", ",", "hidden_forward", ")", "\n", "softmaxDecoder", "=", "logsoftmax", "(", "output", "(", "out_decoder", ")", ")", "\n", "target_tensor", "=", "input_tensor_decoder", "[", "1", ":", "]", "\n", "loss", "=", "train_loss", "(", "softmaxDecoder", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "if", "printHere", ":", "\n", "       ", "print", "(", "loss", ")", "\n", "", "return", "loss", ",", "charCount", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-encoderbaseline.backward": [[183, 190], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words.plus": [[46, 51], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words.parameters": [[91, 95], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words.prepareDatasetChunks": [[118, 162], ["print", "numerified.append", "len", "torch.LongTensor().view().transpose().transpose().cuda", "range", "print", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "random.randint", "random.randint", "len", "random.random", "random.random", "len", "torch.LongTensor().view().transpose", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "#print(len(chunk))", "\n", "       ", "for", "char", "in", "chunk", ":", "\n", "#         if char == \" \":", "\n", "#          continue", "\n", "         ", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "#     print(len(numerified))", "\n", "#      print(args.batchSize)", "\n", "#       print(args.sequence_length)", "\n", "\n", "", "if", "len", "(", "numerified", ")", ">", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ":", "\n", "         ", "sequenceLengthHere", "=", "args", ".", "sequence_length", "\n", "#         elif len(numerified) > args.batchSize:", "\n", "#            print(\"Taking small sequence\")", "\n", "#            sequenceLengthHere = int(len(numerified) / args.batchSize)", "\n", "#            assert sequenceLengthHere < args.sequence_length", "\n", "#            assert  sequenceLengthHere > 0", "\n", "\n", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", ")", "*", "(", "args", ".", "batchSize", "*", "sequenceLengthHere", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "\n", "#print(len(numerifiedCurrent))", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "sequenceLengthHere", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "             ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "", "else", ":", "\n", "         ", "print", "(", "\"Skipping\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words.prepareDatasetChunksPrevious": [[163, 179], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words.prepareDataset": [[185, 198], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words.forward": [[204, 257], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "tuple", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable().detach", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.autograd.Variable", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "tuple", "(", "[", "Variable", "(", "x", ".", "data", ")", ".", "detach", "(", ")", "for", "x", "in", "hidden", "]", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-words.backward": [[258, 265], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.plus": [[47, 52], ["None"], "function", ["None"], ["def", "plus", "(", "it1", ",", "it2", ")", ":", "\n", "   ", "for", "x", "in", "it1", ":", "\n", "      ", "yield", "x", "\n", "", "for", "x", "in", "it2", ":", "\n", "      ", "yield", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters": [[107, 111], ["module.parameters"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.parameters"], ["def", "parameters", "(", ")", ":", "\n", "   ", "for", "module", "in", "modules", ":", "\n", "       ", "for", "param", "in", "module", ".", "parameters", "(", ")", ":", "\n", "            ", "yield", "param", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.prepareDatasetChunks": [[134, 162], ["print", "print", "torch.LongTensor().view().transpose().transpose().cuda", "range", "len", "numerified.append", "int", "torch.LongTensor().view().transpose().transpose().cuda.size", "torch.LongTensor().view().transpose().transpose", "len", "random.randint", "random.randint", "torch.LongTensor().view().transpose", "random.random", "random.random", "len", "torch.LongTensor().view", "torch.LongTensor"], "function", ["None"], ["def", "prepareDatasetChunks", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "numerified", "=", "[", "]", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numerified", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "#  if len(numeric) > args.sequence_length:", "\n", "#    yield numeric", "\n", "#   numeric = [0]", "\n", "", "cutoff", "=", "int", "(", "len", "(", "numerified", ")", "/", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", ")", "*", "(", "args", ".", "batchSize", "*", "args", ".", "sequence_length", ")", "\n", "numerifiedCurrent", "=", "numerified", "[", ":", "cutoff", "]", "\n", "numerified", "=", "numerified", "[", "cutoff", ":", "]", "\n", "numerifiedCurrent", "=", "torch", ".", "LongTensor", "(", "numerifiedCurrent", ")", ".", "view", "(", "args", ".", "batchSize", ",", "-", "1", ",", "args", ".", "sequence_length", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "cuda", "(", ")", "\n", "#print(numerifiedCurrent.size())", "\n", "#quit()", "\n", "numberOfSequences", "=", "numerifiedCurrent", ".", "size", "(", ")", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "numberOfSequences", ")", ":", "\n", "#           print(numerifiedCurrent[i].size())", "\n", "           ", "yield", "numerifiedCurrent", "[", "i", "]", "\n", "", "hidden", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.prepareDatasetChunksPrevious": [[163, 179], ["print", "print", "len", "numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "def", "prepareDatasetChunksPrevious", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "print", "(", "\"Prepare chunks\"", ")", "\n", "for", "chunk", "in", "data", ":", "\n", "       ", "print", "(", "len", "(", "chunk", ")", ")", "\n", "for", "char", "in", "chunk", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.prepareDataset": [[185, 198], ["numeric.append", "len", "random.randint", "random.randint", "random.random", "random.random", "len"], "function", ["None"], ["", "", "", "", "def", "prepareDataset", "(", "data", ",", "train", "=", "True", ")", ":", "\n", "      ", "numeric", "=", "[", "0", "]", "\n", "count", "=", "0", "\n", "for", "char", "in", "data", ":", "\n", "         ", "if", "char", "==", "\" \"", ":", "\n", "           ", "continue", "\n", "", "count", "+=", "1", "\n", "#         if count % 100000 == 0:", "\n", "#             print(count/len(data))", "\n", "numeric", ".", "append", "(", "(", "stoi", "[", "char", "]", "+", "3", "if", "char", "in", "stoi", "else", "2", ")", "if", "(", "not", "train", ")", "or", "random", ".", "random", "(", ")", ">", "args", ".", "char_noise_prob", "else", "2", "+", "random", ".", "randint", "(", "0", ",", "len", "(", "itos", ")", ")", ")", "\n", "if", "len", "(", "numeric", ")", ">", "args", ".", "sequence_length", ":", "\n", "            ", "yield", "numeric", "\n", "numeric", "=", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.forward": [[204, 257], ["torch.cat", "numeric[].view", "torch.autograd.Variable", "torch.autograd.Variable", "char_embeddings", "rnn_drop", "output", "logsoftmax", "train_loss", "char_dropout", "logsoftmax.view", "torch.autograd.Variable.view", "print_loss().view", "print_loss().view.data.cpu().numpy", "torch.cat.cpu().data.numpy", "print", "range", "torch.autograd.Variable().detach", "print", "torch.autograd.Variable.view().size", "random.random", "random.random", "len", "print_loss", "print_loss().view.data.cpu", "torch.autograd.Variable", "logsoftmax.view", "torch.autograd.Variable.view", "torch.cat.cpu", "torch.autograd.Variable.view", "torch.cat.size", "len"], "function", ["None"], ["def", "forward", "(", "numeric", ",", "train", "=", "True", ",", "printHere", "=", "False", ")", ":", "\n", "      ", "global", "hidden", "\n", "global", "beginning", "\n", "if", "hidden", "is", "None", "or", "(", "train", "and", "random", ".", "random", "(", ")", ">", "0.9", ")", ":", "\n", "          ", "hidden", "=", "None", "\n", "beginning", "=", "zeroBeginning", "\n", "", "elif", "hidden", "is", "not", "None", ":", "\n", "          ", "hidden", "=", "Variable", "(", "hidden", ".", "data", ")", ".", "detach", "(", ")", "\n", "\n", "", "numeric", "=", "torch", ".", "cat", "(", "[", "beginning", ",", "numeric", "]", ",", "dim", "=", "0", ")", "\n", "\n", "beginning", "=", "numeric", "[", "numeric", ".", "size", "(", ")", "[", "0", "]", "-", "1", "]", ".", "view", "(", "1", ",", "args", ".", "batchSize", ")", "\n", "\n", "\n", "input_tensor", "=", "Variable", "(", "numeric", "[", ":", "-", "1", "]", ",", "requires_grad", "=", "False", ")", "\n", "target_tensor", "=", "Variable", "(", "numeric", "[", "1", ":", "]", ",", "requires_grad", "=", "False", ")", "\n", "\n", "\n", "#  print(char_embeddings)", "\n", "#if train and (embedding_full_dropout_prob is not None):", "\n", "#   embedded = embedded_dropout(char_embeddings, input_tensor, dropout=embedding_full_dropout_prob, scale=None) #char_embeddings(input_tensor)", "\n", "#else:", "\n", "embedded", "=", "char_embeddings", "(", "input_tensor", ")", "\n", "if", "train", ":", "\n", "         ", "embedded", "=", "char_dropout", "(", "embedded", ")", "\n", "\n", "", "out", ",", "hidden", "=", "rnn_drop", "(", "embedded", ",", "hidden", ")", "\n", "#      if train:", "\n", "#          out = dropout(out)", "\n", "\n", "logits", "=", "output", "(", "out", ")", "\n", "log_probs", "=", "logsoftmax", "(", "logits", ")", "\n", "#   print(logits)", "\n", "#    print(log_probs)", "\n", "#     print(target_tensor)", "\n", "\n", "\n", "loss", "=", "train_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", "\n", "\n", "if", "printHere", ":", "\n", "         ", "lossTensor", "=", "print_loss", "(", "log_probs", ".", "view", "(", "-", "1", ",", "len", "(", "itos", ")", "+", "3", ")", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ")", ".", "view", "(", "-", "1", ",", "args", ".", "batchSize", ")", "\n", "losses", "=", "lossTensor", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "numericCPU", "=", "numeric", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "\n", "#         boundaries_index = [0 for _ in numeric]", "\n", "print", "(", "(", "\"NONE\"", ",", "itos", "[", "numericCPU", "[", "0", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "for", "i", "in", "range", "(", "(", "args", ".", "sequence_length", ")", ")", ":", "\n", "#           if boundaries_index[0] < len(boundaries[0]) and i+1 == boundaries[0][boundaries_index[0]]:", "\n", "#             boundary = True", "\n", "#            boundaries_index[0] += 1", "\n", "#        else:", "\n", "#          boundary = False", "\n", "            ", "print", "(", "(", "losses", "[", "i", "]", "[", "0", "]", ",", "itos", "[", "numericCPU", "[", "i", "+", "1", "]", "[", "0", "]", "-", "3", "]", ")", ")", "\n", "", "", "return", "loss", ",", "target_tensor", ".", "view", "(", "-", "1", ")", ".", "size", "(", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward": [[258, 265], ["optim.zero_grad", "loss.backward", "torch.nn.utils.clip_grad_value_", "optim.step", "print"], "function", ["home.repos.pwc.inspect_result.m-hahn_tabula-rasa-rnns.3_setup.char-lm-ud-stationary-vocab-wiki-nospaces-bptt-2-rnn.backward"], ["", "def", "backward", "(", "loss", ",", "printHere", ")", ":", "\n", "      ", "optim", ".", "zero_grad", "(", ")", "\n", "if", "printHere", ":", "\n", "         ", "print", "(", "loss", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "parameters_cached", ",", "5.0", ")", "#, norm_type=\"inf\")", "\n", "optim", ".", "step", "(", ")", "\n", "\n"]]}