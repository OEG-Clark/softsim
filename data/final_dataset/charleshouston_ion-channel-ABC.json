{"home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.parameter_sensitivity.calculate_parameter_sensitivity": [[12, 124], ["numpy.random.lognormal", "summary_statistics", "numpy.asarray", "distance_fn", "numpy.empty", "numpy.empty", "numpy.divide", "numpy.divide", "sklearn.linear_model.LinearRegression", "linear_model.LinearRegression.fit", "numpy.dot", "range", "pandas.DataFrame", "range", "pandas.DataFrame", "model", "list", "max", "range", "d_by_exp.items", "numpy.multiply", "summary_statistics", "parameter_sensitivity.calculate_parameter_sensitivity.dist"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_original.summary_statistics", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_original.summary_statistics"], ["def", "calculate_parameter_sensitivity", "(", "\n", "model", ":", "Callable", ",", "\n", "summary_statistics", ":", "Callable", ",", "\n", "exp_map", ":", "List", "[", "int", "]", ",", "\n", "parameters", ":", "Dict", "[", "str", ",", "float", "]", ",", "\n", "distance_fn", ":", "IonChannelDistance", ",", "\n", "sigma", ":", "float", "=", "0.1", ",", "\n", "n_samples", ":", "int", "=", "500", ")", "->", "Tuple", "[", "pd", ".", "DataFrame", ",", "pd", ".", "DataFrame", ",", "List", "[", "float", "]", "]", ":", "\n", "    ", "\"\"\"Estimate of sensitivity to parameter variation and regression fit.\n\n    Based on work of:\n    Sobie EA. Parameter sensitivity analysis in electrophysiological models\n    using multivariable regression. Biophys J. 2009 Feb 18;96(4):1264-74.\n\n    Args:\n        model (Callable): Model to interrogate.\n        summary_statistics (Callable): Summary statistics function\n        exp_map (List[int]): List of experiment number for each data point.\n        parameters (Dict[str, float]): Parameters and base values to perturb from.\n        distance_fn (IonChannelDistance): ABC distance function.\n        sigma (float): Standard deviation of normalised log-normal distribution.\n        n_samples (int): Number of parameter samples for training data.\n\n    Returns:\n        Dataframes of sensitivty of each parameter and goodness of regression fit.\n        List of r2 scores for regression fits.\n        All outputs are used in subsequent functions to produce plots.\n    \"\"\"", "\n", "\n", "# Generate lognormal distribution for parameters", "\n", "scale_dist_ln", "=", "np", ".", "random", ".", "lognormal", "(", "mean", "=", "0.0", ",", "sigma", "=", "sigma", ",", "\n", "size", "=", "(", "n_samples", ",", "len", "(", "parameters", ".", "keys", "(", ")", ")", ")", ")", "\n", "\n", "# Get original parameter values", "\n", "observations", "=", "summary_statistics", "(", "model", "(", "parameters", ")", ")", "\n", "original_vals", "=", "np", ".", "asarray", "(", "list", "(", "parameters", ".", "values", "(", ")", ")", ")", "\n", "\n", "# Initialize weights", "\n", "_", "=", "distance_fn", "(", "observations", ",", "observations", ",", "0", ")", "\n", "\n", "p", "=", "distance_fn", ".", "p", "\n", "w", "=", "distance_fn", ".", "w", "[", "0", "]", "\n", "\n", "m", "=", "max", "(", "exp_map", ")", "+", "1", "\n", "X", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "len", "(", "original_vals", ")", ")", ")", "\n", "Y", "=", "np", ".", "empty", "(", "(", "n_samples", ",", "m", ")", ")", "\n", "def", "dist", "(", "x", ",", "y", ")", ":", "\n", "        ", "d", "=", "[", "pow", "(", "abs", "(", "w", "[", "key", "]", "*", "(", "x", "[", "key", "]", "-", "y", "[", "key", "]", ")", ")", ",", "p", ")", "\n", "if", "key", "in", "x", "and", "key", "in", "y", "else", "0", "\n", "for", "key", "in", "w", "]", "\n", "d_by_exp", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "d", ")", ")", ":", "\n", "            ", "if", "exp_map", "[", "i", "]", "not", "in", "d_by_exp", ".", "keys", "(", ")", ":", "\n", "                ", "d_by_exp", "[", "exp_map", "[", "i", "]", "]", "=", "[", "]", "\n", "", "d_by_exp", "[", "exp_map", "[", "i", "]", "]", ".", "append", "(", "d", "[", "i", "]", ")", "\n", "\n", "", "d_out", "=", "[", "]", "\n", "for", "_", ",", "val", "in", "d_by_exp", ".", "items", "(", ")", ":", "\n", "            ", "d_out", ".", "append", "(", "pow", "(", "sum", "(", "val", ")", ",", "1", "/", "p", ")", ")", "\n", "", "return", "d_out", "\n", "\n", "# Loop through requested samples and eliminate NaN values", "\n", "", "i", "=", "0", "\n", "while", "i", "<", "n_samples", ":", "\n", "        ", "X", "[", "i", ",", ":", "]", "=", "np", ".", "multiply", "(", "original_vals", ",", "scale_dist_ln", "[", "i", ",", ":", "]", ")", "\n", "results", "=", "summary_statistics", "(", "\n", "model", "(", "dict", "(", "zip", "(", "parameters", ".", "keys", "(", ")", ",", "X", "[", "i", ",", ":", "]", ")", ")", ")", ")", "\n", "if", "not", "np", ".", "all", "(", "np", ".", "isfinite", "(", "list", "(", "results", ".", "values", "(", ")", ")", ")", ")", ":", "\n", "# Change scale multiplier for this sample", "\n", "            ", "scale_dist_ln", "[", "i", ",", ":", "]", "=", "np", ".", "random", ".", "lognormal", "(", "mean", "=", "0.0", ",", "sigma", "=", "sigma", ",", "\n", "size", "=", "(", "1", ",", "len", "(", "parameters", ".", "keys", "(", ")", ")", ")", ")", "\n", "continue", "\n", "# Otherwise continue and add to results", "\n", "", "Y", "[", "i", ",", ":", "]", "=", "dist", "(", "results", ",", "observations", ")", "\n", "i", "=", "i", "+", "1", "\n", "\n", "# Mean center and normalise", "\n", "", "X", "=", "np", ".", "divide", "(", "X", "-", "np", ".", "mean", "(", "X", ",", "axis", "=", "0", ")", ",", "np", ".", "std", "(", "X", ",", "axis", "=", "0", ")", ")", "\n", "Y", "=", "np", ".", "divide", "(", "Y", "-", "np", ".", "nanmean", "(", "Y", ",", "axis", "=", "0", ")", ",", "np", ".", "nanstd", "(", "Y", ",", "axis", "=", "0", ")", ")", "\n", "\n", "# Ordinary least squares regression", "\n", "reg", "=", "linear_model", ".", "LinearRegression", "(", ")", "\n", "reg", ".", "fit", "(", "X", ",", "Y", ")", "\n", "beta", "=", "reg", ".", "coef_", "\n", "\n", "# Predicted values", "\n", "Ypred", "=", "np", ".", "dot", "(", "X", ",", "beta", ".", "transpose", "(", ")", ")", "\n", "\n", "# Create dataframe for plotting", "\n", "parameter_names", "=", "[", "p", ".", "split", "(", "'.'", ")", "[", "-", "1", "]", "for", "p", "in", "parameters", ".", "keys", "(", ")", "]", "\n", "exp", "=", "[", "0", ",", "]", "*", "len", "(", "parameter_names", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "m", ")", ":", "\n", "        ", "exp", "+=", "[", "i", ",", "]", "*", "len", "(", "parameter_names", ")", "\n", "", "d", "=", "{", "'param'", ":", "parameter_names", "*", "m", ",", "\n", "'beta'", ":", "beta", ".", "reshape", "(", "-", "1", ")", ",", "\n", "'exp'", ":", "exp", "}", "\n", "fitted", "=", "pd", ".", "DataFrame", "(", "data", "=", "d", ")", "\n", "\n", "# Error measure (r2)", "\n", "r2", "=", "[", "]", "\n", "exp", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "m", ")", ":", "\n", "        ", "r2", ".", "append", "(", "r2_score", "(", "Y", "[", ":", ",", "i", "]", ",", "Ypred", "[", ":", ",", "i", "]", ")", ")", "\n", "exp", "+=", "[", "i", ",", "]", "*", "Y", ".", "shape", "[", "0", "]", "\n", "# Need to transpose Y and Ypred to correctly match up", "\n", "# with experiment map.", "\n", "", "d", "=", "{", "'Y'", ":", "Y", ".", "transpose", "(", ")", ".", "reshape", "(", "-", "1", ")", ",", "\n", "'Y_predicted'", ":", "Ypred", ".", "transpose", "(", ")", ".", "reshape", "(", "-", "1", ")", ",", "\n", "'exp'", ":", "exp", "}", "\n", "regression_fit", "=", "pd", ".", "DataFrame", "(", "data", "=", "d", ")", "\n", "\n", "return", "(", "fitted", ",", "regression_fit", ",", "r2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.parameter_sensitivity.plot_parameter_sensitivity": [[126, 150], ["fitted.param.unique", "len", "seaborn.cubehelix_palette", "seaborn.catplot().despine", "sns.catplot().despine.axes.flatten", "len", "ax.axhline", "ax.axhline", "seaborn.catplot", "len"], "function", ["None"], ["", "def", "plot_parameter_sensitivity", "(", "\n", "fitted", ":", "pd", ".", "DataFrame", ",", "\n", "plot_cutoff", ":", "float", "=", "0.0", ")", "->", "sns", ".", "FacetGrid", ":", "\n", "    ", "\"\"\"Plot sensitivity of each model measure to parameters.\"\"\"", "\n", "\n", "parameter_names", "=", "fitted", ".", "param", ".", "unique", "(", ")", "\n", "m", "=", "len", "(", "fitted", "[", "fitted", ".", "param", "==", "parameter_names", "[", "0", "]", "]", ")", "\n", "\n", "# Setup seaborn", "\n", "pal", "=", "sns", ".", "cubehelix_palette", "(", "len", "(", "parameter_names", ")", ",", "rot", "=", "-", ".25", ",", "light", "=", ".7", ")", "\n", "\n", "# Plot parameter sensitivity", "\n", "grid", "=", "(", "sns", ".", "catplot", "(", "x", "=", "'param'", ",", "y", "=", "'beta'", ",", "\n", "row", "=", "'exp'", ",", "\n", "data", "=", "fitted", ",", "kind", "=", "'bar'", ",", "\n", "aspect", "=", "len", "(", "parameter_names", ")", "/", "m", ",", "\n", "sharey", "=", "False", ",", "\n", "palette", "=", "pal", ")", "\n", ".", "despine", "(", "left", "=", "True", ",", "bottom", "=", "True", ")", ")", "\n", "for", "ax", "in", "grid", ".", "axes", ".", "flatten", "(", ")", ":", "\n", "        ", "ax", ".", "axhline", "(", "y", "=", "plot_cutoff", ",", "linewidth", "=", "1", ",", "color", "=", "'k'", ",", "linestyle", "=", "'--'", ")", "\n", "ax", ".", "axhline", "(", "y", "=", "-", "1", "*", "plot_cutoff", ",", "linewidth", "=", "1", ",", "color", "=", "'k'", ",", "linestyle", "=", "'--'", ")", "\n", "\n", "", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.parameter_sensitivity.plot_regression_fit": [[152, 170], ["seaborn.relplot", "enumerate", "sns.relplot.axes.flatten", "ax.plot", "ax.set_title", "numpy.min", "numpy.max", "ax.get_xlim", "ax.get_ylim", "ax.get_xlim", "ax.get_ylim"], "function", ["None"], ["", "def", "plot_regression_fit", "(", "\n", "regression_fit", ":", "pd", ".", "DataFrame", ",", "\n", "r2", ":", "List", "[", "float", "]", ")", "->", "sns", ".", "FacetGrid", ":", "\n", "    ", "\"\"\"Plot goodness of fit of regression for sensitivity study.\"\"\"", "\n", "\n", "grid", "=", "(", "sns", ".", "relplot", "(", "x", "=", "'Y'", ",", "y", "=", "'Y_predicted'", ",", "\n", "col", "=", "'exp'", ",", "\n", "data", "=", "regression_fit", ",", "\n", "palette", "=", "'Purples'", ",", "\n", "facet_kws", "=", "{", "'sharex'", ":", "False", ",", "\n", "'sharey'", ":", "False", "}", ")", ")", "\n", "for", "i", ",", "ax", "in", "enumerate", "(", "grid", ".", "axes", ".", "flatten", "(", ")", ")", ":", "\n", "        ", "lims", "=", "[", "np", ".", "min", "(", "[", "ax", ".", "get_xlim", "(", ")", ",", "ax", ".", "get_ylim", "(", ")", "]", ")", ",", "\n", "np", ".", "max", "(", "[", "ax", ".", "get_xlim", "(", ")", ",", "ax", ".", "get_ylim", "(", ")", "]", ")", "]", "\n", "ax", ".", "plot", "(", "lims", ",", "lims", ",", "'k--'", ",", "alpha", "=", "0.75", ",", "zorder", "=", "0", ")", "\n", "ax", ".", "set_title", "(", "'exp={exp}\\nr_2 score={r2:.2f}'", ".", "format", "(", "exp", "=", "i", ",", "r2", "=", "r2", "[", "i", "]", ")", ")", "\n", "\n", "", "return", "grid", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.distance.IonChannelDistance.__init__": [[35, 63], ["numpy.asarray", "numpy.asarray", "dict", "numpy.mean", "dict.keys", "abclogger.debug", "pyabc.distance.PNormDistance.__init__", "str", "zip", "list", "max", "range", "dict.values", "sum", "numpy.sqrt", "len"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.IonChannelAcceptor.__init__"], ["def", "__init__", "(", "self", ",", "\n", "exp_id", ":", "List", "[", "int", "]", ",", "\n", "variance", ":", "List", "[", "float", "]", ",", "\n", "p", ":", "float", "=", "2", ",", "\n", "delta", ":", "float", "=", "0.001", ")", ":", "\n", "\n", "# Calculate weighting due to number of data points.", "\n", "        ", "w_iexp", "=", "np", ".", "asarray", "(", "[", "1.", "/", "(", "sum", "(", "1.", "for", "id_", "in", "exp_id", "if", "id_", "==", "id", ")", ")", "\n", "for", "id", "in", "exp_id", "]", ")", "\n", "\n", "# Calculate weighting due to variance in experiment data points.", "\n", "w_ivar", "=", "np", ".", "asarray", "(", "[", "max", "(", "delta", ",", "np", ".", "sqrt", "(", "var", ")", ")", "for", "var", "in", "variance", "]", ")", "\n", "w_ivar", "=", "1.", "/", "w_ivar", "\n", "\n", "# Create dictionary of weights.", "\n", "ids", "=", "[", "str", "(", "i", ")", "for", "i", "in", "range", "(", "len", "(", "exp_id", ")", ")", "]", "\n", "w", "=", "w_iexp", "*", "w_ivar", "\n", "weights", "=", "dict", "(", "zip", "(", "ids", ",", "w", ")", ")", "\n", "\n", "# Balance weights.", "\n", "w_mean", "=", "np", ".", "mean", "(", "list", "(", "weights", ".", "values", "(", ")", ")", ")", "\n", "for", "k", "in", "weights", ".", "keys", "(", ")", ":", "\n", "            ", "weights", "[", "k", "]", "/=", "w_mean", "\n", "\n", "", "abclogger", ".", "debug", "(", "'ion channel weights: {}'", ".", "format", "(", "weights", ")", ")", "\n", "\n", "# now initialize PNormDistance", "\n", "super", "(", ")", ".", "__init__", "(", "p", "=", "p", ",", "weights", "=", "{", "0", ":", "weights", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.distance.IonChannelDistance.__call__": [[64, 97], ["any", "warnings.catch_warnings", "warnings.simplefilter", "len", "super().__call__", "numpy.isinf", "x.values"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.__call__"], ["", "def", "__call__", "(", "self", ",", "\n", "x", ":", "Dict", "[", "str", ",", "float", "]", ",", "\n", "x_0", ":", "Dict", "[", "str", ",", "float", "]", ",", "\n", "t", ":", "int", ",", "\n", "par", ":", "Dict", "[", "str", ",", "float", "]", "=", "None", ")", "->", "float", ":", "\n", "        ", "\"\"\"Calculate the error for measured model output.\n\n        This wraps PNormDistance call to check for np.inf in model output.\n\n        Args:\n            x (Dict[str, float]): Simulated output measurements.\n            x_0 (Dict[str, float]): Observed data.\n            t (int): ABC iteration number.\n            par (Dict[str, float]): Parameters which may be\n                required by some distance functions (pyabc requirement).\n\n        Returns:\n            float: Error between x and x_0. If distance gives\n                overflow warning will return inf.\n        \"\"\"", "\n", "# x is the simulated output", "\n", "if", "(", "len", "(", "x", ")", "is", "0", "or", "\n", "any", "(", "np", ".", "isinf", "(", "xi", ")", "for", "xi", "in", "x", ".", "values", "(", ")", ")", ")", ":", "\n", "            ", "return", "np", ".", "inf", "\n", "\n", "# Catch possible runtime overflow warnings", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "distance", "=", "super", "(", ")", ".", "__call__", "(", "x", ",", "x_0", ",", "t", ",", "par", ")", "\n", "return", "distance", "\n", "", "except", "RuntimeWarning", ":", "\n", "                ", "return", "np", ".", "inf", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.distance.DiscrepancyKernel.__init__": [[118, 140], ["pyabc.distance.StochasticKernel.__init__", "numpy.array", "min", "numpy.array", "max"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.IonChannelAcceptor.__init__"], ["def", "__init__", "(", "\n", "self", ",", "\n", "measure_var", ":", "Union", "[", "Callable", ",", "List", "[", "float", "]", ",", "float", "]", "=", "None", ",", "\n", "keys", ":", "List", "[", "str", "]", "=", "None", ",", "\n", "eps_keys", ":", "List", "[", "str", "]", "=", "None", ",", "\n", "exp_mask", ":", "List", "[", "int", "]", "=", "None", ",", "\n", "pdf_max", ":", "float", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "ret_scale", "=", "\"SCALE_LOG\"", ",", "keys", "=", "keys", ",", "pdf_max", "=", "pdf_max", ")", "\n", "\n", "self", ".", "keys", "=", "keys", "\n", "\n", "if", "measure_var", "is", "not", "None", ":", "\n", "# regularize by smallest value to avoid divide by zero errors", "\n", "            ", "measure_var", "=", "np", ".", "array", "(", "measure_var", ")", "\n", "min_measure_var", "=", "min", "(", "measure_var", "[", "measure_var", ">", "0.", "]", ")", "\n", "self", ".", "measure_var", "=", "np", ".", "array", "(", "[", "max", "(", "vi", ",", "min_measure_var", ")", "\n", "for", "vi", "in", "measure_var", "]", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "measure_var", "=", "measure_var", "\n", "", "self", ".", "eps_keys", "=", "eps_keys", "\n", "self", ".", "exp_mask", "=", "exp_mask", "\n", "self", ".", "pdf_max", "=", "pdf_max", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.distance.DiscrepancyKernel.initialize": [[141, 162], ["super().initialize", "sum", "int", "numpy.sum", "numpy.size", "numpy.log", "numpy.log", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.distance.DiscrepancyKernel.initialize"], ["", "def", "initialize", "(", "\n", "self", ",", "\n", "t", ":", "int", ",", "\n", "get_sum_stats", ":", "Callable", "[", "[", "]", ",", "List", "[", "dict", "]", "]", ",", "\n", "x_0", ":", "dict", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "initialize", "(", "\n", "t", "=", "t", ",", "\n", "get_sum_stats", "=", "get_sum_stats", ",", "\n", "x_0", "=", "x_0", ")", "\n", "\n", "# dimensionality of summary statistics", "\n", "self", ".", "dim", "=", "sum", "(", "np", ".", "size", "(", "x_0", "[", "key", "]", ")", "for", "key", "in", "self", ".", "keys", ")", "\n", "\n", "# make sure this is in number format", "\n", "self", ".", "exp_mask", "=", "[", "int", "(", "e", ")", "for", "e", "in", "self", ".", "exp_mask", "]", "\n", "\n", "# pdf will be normalised by distance_function", "\n", "if", "self", ".", "pdf_max", "is", "None", "and", "self", ".", "measure_var", "is", "not", "None", ":", "\n", "            ", "self", ".", "pdf_max", "=", "np", ".", "sum", "(", "-", "0.5", "*", "(", "np", ".", "log", "(", "self", ".", "measure_var", ")", "+", "np", ".", "log", "(", "2", ")", "+", "np", ".", "log", "(", "np", ".", "pi", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "pdf_max", "=", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.distance.DiscrepancyKernel.__call__": [[163, 211], ["numpy.any", "numpy.array", "distance._diff_arr", "numpy.sum", "numpy.sum", "distance.DiscrepancyKernel.initialize_keys", "numpy.isinf", "list", "numpy.log", "x.values", "numpy.log", "numpy.log", "Exception"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.distance._diff_arr"], ["", "", "def", "__call__", "(", "\n", "self", ",", "\n", "x", ":", "dict", ",", "\n", "x_0", ":", "dict", ",", "\n", "t", ":", "int", "=", "None", ",", "\n", "par", ":", "dict", "=", "None", ")", "->", "float", ":", "\n", "        ", "\"\"\"Calculate log probability density.\"\"\"", "\n", "\n", "# safety check", "\n", "if", "self", ".", "keys", "is", "None", ":", "\n", "            ", "self", ".", "initialize_keys", "(", "x_0", ")", "\n", "\n", "# check for inf values returned by model", "\n", "", "if", "np", ".", "any", "(", "np", ".", "isinf", "(", "list", "(", "x", ".", "values", "(", ")", ")", ")", ")", ":", "\n", "# return a very small probability", "\n", "            ", "return", "-", "1e10", "# TODO there has to be a better way?", "\n", "\n", "# array to hold variance for each summary statistic", "\n", "", "var", "=", "np", ".", "array", "(", "[", "0.", ",", "]", "*", "self", ".", "dim", ")", "\n", "\n", "# add any model variance by experiment", "\n", "if", "par", "is", "not", "None", ":", "\n", "            ", "if", "self", ".", "eps_keys", "is", "not", "None", ":", "\n", "                ", "model_var", "=", "[", "par", "[", "k", "]", "for", "k", "in", "self", ".", "eps_keys", "]", "\n", "# arrange separately for per-experiment model_var", "\n", "if", "self", ".", "exp_mask", "is", "not", "None", ":", "\n", "                    ", "tmp_var", "=", "[", "model_var", "[", "i", "]", "for", "i", "in", "self", ".", "exp_mask", "]", "\n", "var", "+=", "tmp_var", "\n", "", "else", ":", "\n", "# assuming that only one value was passed", "\n", "                    ", "try", ":", "\n", "                        ", "var", "+=", "model_var", "\n", "", "except", ":", "\n", "                        ", "raise", "Exception", "(", "'error adding model variance'", ")", "\n", "\n", "# add measurement variance", "\n", "", "", "", "", "if", "self", ".", "measure_var", "is", "not", "None", ":", "\n", "            ", "var", "+=", "self", ".", "measure_var", "\n", "\n", "# difference from experimental data", "\n", "", "diff", "=", "_diff_arr", "(", "x", ",", "x_0", ",", "self", ".", "keys", ")", "\n", "\n", "# compute pdf (log-likelihood of multiple independent gaussians)", "\n", "log_2_pi", "=", "np", ".", "sum", "(", "np", ".", "log", "(", "2", ")", "+", "np", ".", "log", "(", "np", ".", "pi", ")", "+", "np", ".", "log", "(", "var", ")", ")", "\n", "squares", "=", "np", ".", "sum", "(", "(", "diff", "**", "2", ")", "/", "var", ")", "\n", "log_pd", "=", "-", "0.5", "*", "(", "log_2_pi", "+", "squares", ")", "\n", "\n", "return", "log_pd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.distance._diff_arr": [[213, 227], ["numpy.array", "np.array.extend", "np.array.append"], "function", ["None"], ["", "", "def", "_diff_arr", "(", "x", ",", "x_0", ",", "keys", ")", ":", "\n", "    ", "\"\"\"Get difference array.\n\n    See `pyabc/distance/kernel.py`.\n    \"\"\"", "\n", "diff", "=", "[", "]", "\n", "for", "key", "in", "keys", ":", "\n", "        ", "d", "=", "x", "[", "key", "]", "-", "x_0", "[", "key", "]", "\n", "try", ":", "\n", "            ", "diff", ".", "extend", "(", "d", ")", "\n", "", "except", "Exception", ":", "\n", "            ", "diff", ".", "append", "(", "d", ")", "\n", "", "", "diff", "=", "np", ".", "array", "(", "diff", ")", "\n", "return", "diff", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.visualization.normalise": [[17, 29], ["df.copy", "df[].max", "df[].min"], "function", ["None"], ["def", "normalise", "(", "df", ",", "limits", "=", "None", ")", ":", "\n", "    ", "result", "=", "df", ".", "copy", "(", ")", "\n", "for", "feature_name", "in", "df", ".", "columns", ":", "\n", "        ", "if", "limits", "is", "None", ":", "\n", "            ", "max_value", "=", "df", "[", "feature_name", "]", ".", "max", "(", ")", "\n", "min_value", "=", "df", "[", "feature_name", "]", ".", "min", "(", ")", "\n", "", "else", ":", "\n", "            ", "max_value", "=", "limits", "[", "feature_name", "]", "[", "1", "]", "\n", "min_value", "=", "limits", "[", "feature_name", "]", "[", "0", "]", "\n", "", "result", "[", "feature_name", "]", "=", "(", "(", "df", "[", "feature_name", "]", "-", "min_value", ")", "/", "\n", "(", "max_value", "-", "min_value", ")", ")", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.visualization.plot_sim_results": [[31, 229], ["pandas.DataFrame", "enumerate", "enumerate", "seaborn.relplot", "seaborn.color_palette", "enumerate", "grid.map_dataframe.axes.flatten", "grid.map_dataframe.map_dataframe", "isinstance", "isinstance", "isinstance", "isinstance", "experiment.setup", "myokit.load_model", "myokit.load_model.name", "model_names.append", "enumerate", "all_observations.append", "model_obs[].unique", "kwargs.pop", "kwargs.pop", "matplotlib.errorbar", "model_samples[].unique", "enumerate", "range", "df[].sample().to_dict", "pandas.DataFrame", "model_samples.append.append", "numpy.nanmean", "data[].unique", "grid.map_dataframe.axes.flatten", "model_samples[].unique", "enumerate", "l.set_linestyle", "len", "float", "summary_statistics", "numpy.sqrt", "hpd.append", "data[].unique", "enumerate", "ax.fill_between", "enumerate", "isinstance", "df[].sample", "summary_statistics", "Exception", "model", "list", "numpy.zeros", "pymc3.stats.hpd", "data[].unique", "range", "exp_map.append", "numpy.all", "model", "summary_statistics.values", "int", "len", "exp_map.append", "str", "numpy.isfinite", "int", "len", "str", "list", "data[].unique", "summary_statistics.values"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.setup", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_original.summary_statistics", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.sample", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_original.summary_statistics"], ["", "def", "plot_sim_results", "(", "modelfiles", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ",", "\n", "*", "experiments", ":", "Experiment", ",", "\n", "temp_match_model", ":", "int", "=", "0", ",", "\n", "masks", ":", "List", "[", "List", "[", "Union", "[", "int", ",", "Tuple", "[", "int", "]", "]", "]", "]", "=", "None", ",", "\n", "pacevar", ":", "str", "=", "'membrane.V'", ",", "\n", "tvar", ":", "str", "=", "'phys.T'", ",", "\n", "prev_runs", ":", "List", "[", "str", "]", "=", "[", "]", ",", "\n", "additional_pars", ":", "Distribution", "=", "None", ",", "\n", "df", ":", "Union", "[", "pd", ".", "DataFrame", ",", "List", "[", "pd", ".", "DataFrame", "]", "]", "=", "None", ",", "\n", "w", ":", "Union", "[", "np", ".", "ndarray", ",", "List", "[", "np", ".", "ndarray", "]", "]", "=", "None", ",", "\n", "n_samples", ":", "int", "=", "100", ",", "\n", "credible_interval", ":", "Union", "[", "float", ",", "List", "[", "float", "]", "]", "=", "0.89", ",", "\n", "alpha", ":", "float", "=", "0.2", ",", "\n", "exclude_infs", ":", "bool", "=", "False", ")", "->", "sns", ".", "FacetGrid", ":", "\n", "    ", "\"\"\"Plot output of ABC against experimental and/or original output.\n\n    Note that excluding infinite values assumes that previous runs or\n    additional parameters have been passed which gives a stochastic model\n    on each parameter sample (i.e. the parameter is not re-sampled on each\n    attempt).\n\n    Args:\n        modelfile (str): Path to Myokit MMT file.\n        *experiments (Experiment): Experiments to plot.\n        temp_match_model (int): index of modelfile that all simulation\n            output will be temperature adjusted to.\n        masks (list): Optional masking list for the case when comparing\n            multiple models and you only want some models to plot on\n            a subset of the experiments. Format is a list of lists with\n            experiments to use having a value not None. A tuple value should\n            be used in the case that an experiment produces more than\n            one plot.\n        pacevar (str): Name of pacing variable in model.\n        tvar (str): Name of temperature variable in model.\n        prev_runs (list): Previous pyabc.History objects to randomly\n            sample from when producing plots.\n        df (pd.DataFrame): Dataframe of parameters (see pyabc.History).\n            If `None` runs model with current parameter settings.\n        w (np.ndarray): The corresponding weights (see pyabc.History).\n        n_samples (int): Number of ABC posterior samples used to\n            generate summary output.\n        credible_interval (float, List[float]): % interval to plot for high density\n            posterior interval.\n        alpha (float): Transparency value for shaded region.\n\n    Returns\n        sns.FacetGrid: Plots of measured output.\n    \"\"\"", "\n", "model_samples", "=", "pd", ".", "DataFrame", "(", "{", "}", ")", "\n", "\n", "# wrap inputs if necessary and only one", "\n", "if", "not", "isinstance", "(", "modelfiles", ",", "list", ")", ":", "\n", "        ", "modelfiles", "=", "[", "modelfiles", "]", "\n", "", "if", "not", "isinstance", "(", "df", ",", "list", ")", ":", "\n", "        ", "df", "=", "[", "df", "]", "\n", "", "if", "not", "isinstance", "(", "w", ",", "list", ")", ":", "\n", "        ", "w", "=", "[", "w", "]", "\n", "", "if", "not", "isinstance", "(", "credible_interval", ",", "list", ")", ":", "\n", "        ", "credible_interval", "=", "[", "credible_interval", ",", "]", "\n", "\n", "", "all_observations", "=", "[", "]", "\n", "model_names", "=", "[", "]", "\n", "plot_observations", "=", "[", "]", "\n", "for", "i", ",", "modelfile", "in", "enumerate", "(", "modelfiles", ")", ":", "\n", "        ", "if", "masks", "is", "not", "None", "and", "masks", "[", "i", "]", "is", "not", "None", ":", "\n", "            ", "experiment_list", "=", "[", "experiments", "[", "j", "]", "for", "j", ",", "val", "in", "enumerate", "(", "masks", "[", "i", "]", ")", "\n", "if", "val", "is", "not", "None", "]", "\n", "", "else", ":", "\n", "            ", "experiment_list", "=", "experiments", "\n", "", "observations", ",", "model", ",", "summary_statistics", "=", "setup", "(", "modelfile", ",", "\n", "*", "experiment_list", ",", "\n", "pacevar", "=", "pacevar", ",", "\n", "tvar", "=", "tvar", ",", "\n", "prev_runs", "=", "prev_runs", ",", "\n", "additional_pars", "=", "additional_pars", ",", "\n", "normalise", "=", "False", ")", "\n", "\n", "# save the correct observations for plotting later", "\n", "if", "temp_match_model", "==", "i", ":", "\n", "            ", "plot_observations", "=", "observations", "\n", "\n", "", "m", "=", "myokit", ".", "load_model", "(", "modelfile", ")", "\n", "name", "=", "m", ".", "name", "(", ")", "\n", "model_names", ".", "append", "(", "name", ")", "\n", "\n", "# Create list of exp_ids to map to", "\n", "exp_map", "=", "[", "]", "\n", "if", "masks", "is", "not", "None", "and", "masks", "[", "i", "]", "is", "not", "None", ":", "\n", "            ", "for", "j", "in", "range", "(", "len", "(", "masks", "[", "i", "]", ")", ")", ":", "\n", "                ", "if", "masks", "[", "i", "]", "[", "j", "]", "is", "not", "None", ":", "\n", "                    ", "if", "isinstance", "(", "masks", "[", "i", "]", "[", "j", "]", ",", "tuple", ")", ":", "\n", "                        ", "for", "k", "in", "range", "(", "len", "(", "masks", "[", "i", "]", "[", "j", "]", ")", ")", ":", "\n", "                            ", "exp_map", ".", "append", "(", "str", "(", "masks", "[", "i", "]", "[", "j", "]", "[", "k", "]", ")", ")", "\n", "", "", "else", ":", "\n", "                        ", "exp_map", ".", "append", "(", "str", "(", "masks", "[", "i", "]", "[", "j", "]", ")", ")", "\n", "\n", "# Generate model samples from ABC approximate posterior or create default", "\n", "# samples if posterior was not provided as input.", "\n", "", "", "", "", "if", "df", "is", "not", "None", "and", "df", "[", "i", "]", "is", "not", "None", ":", "\n", "            ", "posterior_samples", "=", "(", "df", "[", "i", "]", ".", "sample", "(", "n", "=", "n_samples", ",", "weights", "=", "w", "[", "i", "]", ",", "replace", "=", "True", ")", "\n", ".", "to_dict", "(", "orient", "=", "'records'", ")", ")", "\n", "", "else", ":", "\n", "            ", "posterior_samples", "=", "[", "{", "}", "]", "\n", "\n", "", "for", "j", ",", "th", "in", "enumerate", "(", "posterior_samples", ")", ":", "\n", "            ", "results", "=", "{", "'0'", ":", "float", "(", "'inf'", ")", "}", "\n", "if", "exclude_infs", ":", "\n", "                ", "try_limit", "=", "100", "\n", "try_cnt", "=", "0", "\n", "while", "not", "np", ".", "all", "(", "np", ".", "isfinite", "(", "list", "(", "results", ".", "values", "(", ")", ")", ")", ")", "and", "try_cnt", "<", "try_limit", ":", "\n", "                    ", "results", "=", "summary_statistics", "(", "model", "(", "th", ")", ")", "\n", "try_cnt", "+=", "1", "\n", "", "if", "try_cnt", "==", "try_limit", ":", "\n", "                    ", "raise", "Exception", "(", "'exclude_infs failed in 100 iterations'", ")", "\n", "", "", "else", ":", "\n", "                ", "results", "=", "summary_statistics", "(", "model", "(", "th", ")", ")", "\n", "", "output", "=", "pd", ".", "DataFrame", "(", "{", "'x'", ":", "observations", ".", "x", ",", "\n", "'y'", ":", "list", "(", "results", ".", "values", "(", ")", ")", ",", "\n", "'exp_id'", ":", "observations", ".", "exp_id", "}", ")", "\n", "output", "[", "'sample'", "]", "=", "j", "\n", "output", "[", "'model'", "]", "=", "name", "\n", "if", "masks", "is", "not", "None", "and", "masks", "[", "i", "]", "is", "not", "None", ":", "\n", "                ", "output", ".", "exp_id", "=", "[", "exp_map", "[", "int", "(", "exp_id", ")", "]", "for", "exp_id", "in", "output", ".", "exp_id", "]", "\n", "", "model_samples", "=", "model_samples", ".", "append", "(", "output", ",", "ignore_index", "=", "True", ")", "\n", "\n", "", "if", "masks", "is", "not", "None", "and", "masks", "[", "i", "]", "is", "not", "None", ":", "\n", "            ", "observations", ".", "exp_id", "=", "[", "exp_map", "[", "int", "(", "exp_id", ")", "]", "for", "exp_id", "in", "observations", ".", "exp_id", "]", "\n", "", "all_observations", ".", "append", "(", "observations", ")", "\n", "\n", "# Temperature adjust to model temperature specified in index", "\n", "# i.e. scale those model variables not at the same temperature", "\n", "# This is done by checking the observation y values (which are scaled", "\n", "# to model temperature in `setup`", "\n", "", "plot_obs", "=", "all_observations", "[", "temp_match_model", "]", "\n", "for", "i", ",", "model_obs", "in", "enumerate", "(", "all_observations", ")", ":", "\n", "        ", "name", "=", "model_names", "[", "i", "]", "\n", "for", "exp_id", "in", "model_obs", "[", "'exp_id'", "]", ".", "unique", "(", ")", ":", "\n", "            ", "po_temp", "=", "plot_obs", "[", "plot_obs", "[", "'exp_id'", "]", "==", "exp_id", "]", "\n", "mo_temp", "=", "model_obs", "[", "model_obs", "[", "'exp_id'", "]", "==", "exp_id", "]", "\n", "temp_adjust_factor", "=", "np", ".", "nanmean", "(", "po_temp", "[", "'y'", "]", ".", "values", "/", "mo_temp", "[", "'y'", "]", ".", "values", ")", "\n", "model_samples", ".", "loc", "[", "(", "model_samples", "[", "'model'", "]", "==", "name", ")", "&", "\n", "(", "model_samples", "[", "'exp_id'", "]", "==", "exp_id", ")", ",", "'y'", "]", "*=", "temp_adjust_factor", "\n", "\n", "\n", "# Function for mapping observations onto plot later", "\n", "", "", "def", "measured_plot", "(", "**", "kwargs", ")", ":", "\n", "        ", "measurements", "=", "kwargs", ".", "pop", "(", "'measurements'", ")", "\n", "data", "=", "kwargs", ".", "pop", "(", "'data'", ")", "\n", "exp", "=", "data", "[", "'exp_id'", "]", ".", "unique", "(", ")", "[", "0", "]", "\n", "plt", ".", "errorbar", "(", "measurements", ".", "loc", "[", "measurements", "[", "'exp_id'", "]", "==", "exp", "]", "[", "'x'", "]", ",", "\n", "measurements", ".", "loc", "[", "measurements", "[", "'exp_id'", "]", "==", "exp", "]", "[", "'y'", "]", ",", "\n", "yerr", "=", "np", ".", "sqrt", "(", "measurements", ".", "loc", "[", "measurements", "[", "'exp_id'", "]", "==", "exp", "]", "[", "'variance'", "]", ")", ",", "\n", "ls", "=", "'None'", ",", "marker", "=", "'x'", ",", "c", "=", "'k'", ")", "\n", "\n", "# Actually make the plot", "\n", "", "grid", "=", "sns", ".", "relplot", "(", "x", "=", "'x'", ",", "y", "=", "'y'", ",", "\n", "col", "=", "'exp_id'", ",", "kind", "=", "'line'", ",", "\n", "hue", "=", "'model'", ",", "style", "=", "'model'", ",", "\n", "data", "=", "model_samples", ",", "\n", "estimator", "=", "np", ".", "median", ",", "\n", "ci", "=", "None", ",", "\n", "markers", "=", "True", ",", "\n", "facet_kws", "=", "{", "'sharex'", ":", "'col'", ",", "\n", "'sharey'", ":", "'col'", "}", ")", "\n", "\n", "current_palette", "=", "sns", ".", "color_palette", "(", ")", "\n", "\n", "# calculate HPDI for each sample", "\n", "for", "j", ",", "exp_id", "in", "enumerate", "(", "model_samples", "[", "'exp_id'", "]", ".", "unique", "(", ")", ")", ":", "\n", "        ", "ax", "=", "grid", ".", "axes", ".", "flatten", "(", ")", "[", "j", "]", "\n", "for", "mi", ",", "model", "in", "enumerate", "(", "model_samples", "[", "'model'", "]", ".", "unique", "(", ")", ")", ":", "\n", "            ", "data", "=", "model_samples", "[", "(", "model_samples", "[", "'exp_id'", "]", "==", "exp_id", ")", "&", "(", "model_samples", "[", "'model'", "]", "==", "model", ")", "]", "\n", "hpd", "=", "[", "]", "\n", "for", "ci", "in", "credible_interval", ":", "\n", "                ", "hpd", ".", "append", "(", "np", ".", "zeros", "(", "(", "len", "(", "data", "[", "'x'", "]", ".", "unique", "(", ")", ")", ",", "2", ")", ")", ")", "\n", "\n", "", "for", "i", ",", "xi", "in", "enumerate", "(", "data", "[", "'x'", "]", ".", "unique", "(", ")", ")", ":", "\n", "                ", "data_xi", "=", "data", "[", "data", "[", "'x'", "]", "==", "xi", "]", "\n", "for", "cnt", ",", "hpdi", "in", "enumerate", "(", "hpd", ")", ":", "\n", "                    ", "hpdi", "[", "i", ",", ":", "]", "=", "pymc3", ".", "stats", ".", "hpd", "(", "data_xi", "[", "'y'", "]", ",", "\n", "credible_interval", "=", "credible_interval", "[", "cnt", "]", ")", "\n", "\n", "\n", "# plot on graph", "\n", "", "", "for", "hpdi", "in", "hpd", ":", "\n", "                ", "ax", ".", "fill_between", "(", "data", "[", "'x'", "]", ".", "unique", "(", ")", ",", "hpdi", "[", ":", ",", "0", "]", ",", "hpdi", "[", ":", ",", "1", "]", ",", "\n", "alpha", "=", "alpha", ",", "color", "=", "current_palette", "[", "mi", "]", ")", "\n", "\n", "# Format lines in all plots", "\n", "", "", "", "for", "ax", "in", "grid", ".", "axes", ".", "flatten", "(", ")", ":", "\n", "        ", "for", "l", "in", "ax", ".", "lines", ":", "\n", "            ", "l", ".", "set_linestyle", "(", "'-'", ")", "\n", "\n", "# Plot observations", "\n", "", "", "grid", "=", "grid", ".", "map_dataframe", "(", "measured_plot", ",", "measurements", "=", "plot_observations", ")", "\n", "\n", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.visualization.plot_experiment_traces": [[231, 342], ["experiment.setup", "pandas.DataFrame", "enumerate", "seaborn.relplot", "df.sample().to_dict", "pandas.DataFrame", "enumerate", "model_samples.append.append", "len", "enumerate", "model", "split_f", "enumerate", "model_samples[].unique", "model_samples[].unique", "enumerate", "df.sample", "model", "Exception", "pandas.DataFrame", "output.append.append", "exp_samples[].unique", "seaborn.color_palette", "enumerate", "pandas.DataFrame", "output.append.append", "len", "measure_samples[].unique", "numpy.zeros", "enumerate", "sns.relplot.axes[].fill_between", "measure_samples[].unique", "data[].unique", "pymc3.stats.hpd", "data[].unique", "len", "data[].unique"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.setup", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.sample"], ["", "def", "plot_experiment_traces", "(", "modelfile", ":", "str", ",", "\n", "recordvars", ":", "List", "[", "str", "]", ",", "\n", "split_data_fns", ":", "List", "[", "Callable", "]", ",", "\n", "*", "experiments", ":", "Experiment", ",", "\n", "df", ":", "pd", ".", "DataFrame", "=", "None", ",", "\n", "w", ":", "np", ".", "ndarray", "=", "None", ",", "\n", "prev_runs", ":", "List", "[", "str", "]", "=", "[", "]", ",", "\n", "additional_pars", ":", "Distribution", "=", "None", ",", "\n", "credible_interval", ":", "float", "=", "0.89", ",", "\n", "alpha", ":", "float", "=", "0.2", ",", "\n", "pacevar", ":", "str", "=", "'membrane.V'", ",", "\n", "timevar", ":", "str", "=", "'engine.time'", ",", "\n", "log_interval", ":", "float", "=", "None", ",", "\n", "n_samples", ":", "int", "=", "100", ",", "\n", "timeout", ":", "int", "=", "None", ",", "\n", "exclude_fails", ":", "bool", "=", "False", ",", "\n", "try_limit", ":", "int", "=", "100", "\n", ")", "->", "sns", ".", "FacetGrid", ":", "\n", "\n", "    ", "if", "timevar", "not", "in", "recordvars", ":", "\n", "        ", "recordvars", "=", "[", "timevar", ",", "]", "+", "recordvars", "\n", "", "_", ",", "model", ",", "_", "=", "setup", "(", "modelfile", ",", "\n", "*", "experiments", ",", "\n", "log_interval", "=", "log_interval", ",", "\n", "logvars", "=", "[", "pacevar", ",", "]", "+", "recordvars", ",", "\n", "pacevar", "=", "pacevar", ",", "\n", "prev_runs", "=", "prev_runs", ",", "\n", "timeout", "=", "timeout", ",", "\n", "additional_pars", "=", "additional_pars", ",", "\n", "normalise", "=", "False", ")", "\n", "\n", "model_samples", "=", "pd", ".", "DataFrame", "(", "{", "}", ")", "\n", "if", "df", "is", "not", "None", ":", "\n", "        ", "posterior_samples", "=", "(", "df", ".", "sample", "(", "n", "=", "n_samples", ",", "weights", "=", "w", ",", "replace", "=", "True", ")", "\n", ".", "to_dict", "(", "orient", "=", "'records'", ")", ")", "\n", "", "else", ":", "\n", "        ", "posterior_samples", "=", "[", "{", "}", "]", "\n", "\n", "", "for", "i", ",", "th", "in", "enumerate", "(", "posterior_samples", ")", ":", "\n", "        ", "data", "=", "None", "\n", "if", "exclude_fails", ":", "\n", "            ", "try_limit", "=", "try_limit", "\n", "try_cnt", "=", "0", "\n", "while", "data", "is", "None", "and", "try_cnt", "<", "try_limit", ":", "\n", "                ", "data", "=", "model", "(", "th", ")", "\n", "try_cnt", "+=", "1", "\n", "", "if", "try_cnt", "==", "try_limit", ":", "\n", "                ", "raise", "Exception", "(", "'failed to simulate after 100 attempts'", ")", "\n", "", "", "else", ":", "\n", "            ", "data", "=", "model", "(", "th", ")", "\n", "\n", "", "output", "=", "pd", ".", "DataFrame", "(", "{", "}", ")", "\n", "for", "j", ",", "d", "in", "enumerate", "(", "data", ")", ":", "\n", "            ", "split_f", "=", "split_data_fns", "[", "j", "]", "\n", "data_exp", "=", "split_f", "(", "data", "[", "j", "]", ")", "\n", "for", "k", ",", "step", "in", "enumerate", "(", "data_exp", ")", ":", "\n", "                ", "output_exp", "=", "pd", ".", "DataFrame", "(", "{", "'time'", ":", "step", "[", "timevar", "]", ",", "\n", "'y'", ":", "step", "[", "pacevar", "]", ",", "\n", "'measure'", ":", "'pace'", ",", "\n", "'step'", ":", "k", ",", "\n", "'exp_id'", ":", "j", "}", ")", "\n", "output", "=", "output", ".", "append", "(", "output_exp", ",", "ignore_index", "=", "True", ")", "\n", "for", "rvar", "in", "recordvars", ":", "\n", "                    ", "if", "rvar", "==", "timevar", ":", "\n", "                        ", "continue", "\n", "", "output_exp", "=", "pd", ".", "DataFrame", "(", "{", "'time'", ":", "step", "[", "timevar", "]", ",", "\n", "'y'", ":", "step", "[", "rvar", "]", ",", "\n", "'measure'", ":", "rvar", ",", "\n", "'step'", ":", "k", ",", "\n", "'exp_id'", ":", "j", "}", ")", "\n", "output", "=", "output", ".", "append", "(", "output_exp", ",", "ignore_index", "=", "True", ")", "\n", "\n", "", "", "", "output", "[", "'sample'", "]", "=", "i", "\n", "model_samples", "=", "model_samples", ".", "append", "(", "output", ",", "ignore_index", "=", "True", ")", "\n", "\n", "# plotting code", "\n", "", "grid", "=", "sns", ".", "relplot", "(", "x", "=", "'time'", ",", "y", "=", "'y'", ",", "\n", "hue", "=", "'step'", ",", "\n", "col", "=", "'exp_id'", ",", "row", "=", "'measure'", ",", "\n", "palette", "=", "'viridis'", ",", "\n", "legend", "=", "False", ",", "\n", "data", "=", "model_samples", ",", "\n", "kind", "=", "'line'", ",", "\n", "estimator", "=", "np", ".", "median", ",", "\n", "ci", "=", "None", ",", "\n", "facet_kws", "=", "{", "'sharex'", ":", "'col'", ",", "\n", "'sharey'", ":", "'row'", "}", ")", "\n", "\n", "\n", "if", "len", "(", "model_samples", "[", "'sample'", "]", ".", "unique", "(", ")", ")", ">", "1", ":", "\n", "# calculate HPDI for each sample", "\n", "        ", "for", "j", ",", "exp_id", "in", "enumerate", "(", "model_samples", "[", "'exp_id'", "]", ".", "unique", "(", ")", ")", ":", "\n", "            ", "exp_samples", "=", "model_samples", "[", "model_samples", "[", "'exp_id'", "]", "==", "exp_id", "]", "\n", "for", "k", ",", "measure", "in", "enumerate", "(", "exp_samples", "[", "'measure'", "]", ".", "unique", "(", ")", ")", ":", "\n", "                ", "if", "measure", "==", "'pace'", ":", "\n", "                    ", "continue", "\n", "", "measure_samples", "=", "exp_samples", "[", "exp_samples", "[", "'measure'", "]", "==", "measure", "]", "\n", "palette", "=", "sns", ".", "color_palette", "(", "\"viridis\"", ",", "len", "(", "measure_samples", "[", "'step'", "]", ".", "unique", "(", ")", ")", ")", "\n", "for", "si", ",", "step_id", "in", "enumerate", "(", "measure_samples", "[", "'step'", "]", ".", "unique", "(", ")", ")", ":", "\n", "                    ", "data", "=", "measure_samples", "[", "(", "measure_samples", "[", "'step'", "]", "==", "step_id", ")", "]", "\n", "hpd", "=", "np", ".", "zeros", "(", "(", "len", "(", "data", "[", "'time'", "]", ".", "unique", "(", ")", ")", ",", "2", ")", ")", "\n", "for", "i", ",", "ti", "in", "enumerate", "(", "data", "[", "'time'", "]", ".", "unique", "(", ")", ")", ":", "\n", "                        ", "data_ti", "=", "data", "[", "data", "[", "'time'", "]", "==", "ti", "]", "\n", "hpd", "[", "i", ",", ":", "]", "=", "pymc3", ".", "stats", ".", "hpd", "(", "data_ti", "[", "'y'", "]", ",", "\n", "credible_interval", "=", "credible_interval", ")", "\n", "\n", "# plot on graph", "\n", "", "grid", ".", "axes", "[", "k", ",", "j", "]", ".", "fill_between", "(", "data", "[", "'time'", "]", ".", "unique", "(", ")", ",", "hpd", "[", ":", ",", "0", "]", ",", "hpd", "[", ":", ",", "1", "]", ",", "\n", "alpha", "=", "alpha", ",", "color", "=", "palette", "[", "si", "]", ")", "\n", "\n", "", "", "", "", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.visualization.plot_distance_weights": [[343, 378], ["distance_fn", "numpy.max", "pandas.DataFrame", "seaborn.cubehelix_palette", "seaborn.catplot().set", "sns.catplot().set.axes.flatten", "len", "ax.axhline", "list", "list", "seaborn.catplot", "w.keys", "w.values"], "function", ["None"], ["", "def", "plot_distance_weights", "(", "\n", "observations", ":", "pd", ".", "DataFrame", ",", "\n", "distance_fn", ":", "IonChannelDistance", ",", "\n", "sum_stats_fn", ":", "Callable", ")", "->", "sns", ".", "FacetGrid", ":", "\n", "    ", "\"\"\"Plots weights of each sampling statistic in distance function.\n\n    Args:\n        observations (pd.DataFrame): Observation results.\n        distance_fn (IonChannelDistance): ABC distance function.\n        sum_stats_fn (Callable): ABC summary statistics calculator.\n\n    Returns:\n        sns.FacetGrid: Bar graph showing relative weights for each\n            data point in distance function.\n    \"\"\"", "\n", "# Initialize weights", "\n", "_", "=", "distance_fn", "(", "observations", ",", "observations", ",", "0", ")", "\n", "\n", "w", "=", "distance_fn", ".", "w", "[", "0", "]", "\n", "exp", "=", "distance_fn", ".", "exp_map", "\n", "m", "=", "np", ".", "max", "(", "exp", ")", "\n", "\n", "df", "=", "pd", ".", "DataFrame", "(", "{", "'data_point'", ":", "list", "(", "w", ".", "keys", "(", ")", ")", ",", "\n", "'weights'", ":", "list", "(", "w", ".", "values", "(", ")", ")", "}", ")", "\n", "\n", "pal", "=", "sns", ".", "cubehelix_palette", "(", "len", "(", "w", ")", ",", "rot", "=", "-", ".25", ",", "light", "=", ".7", ")", "\n", "grid", "=", "(", "sns", ".", "catplot", "(", "x", "=", "'data_point'", ",", "y", "=", "'weights'", ",", "\n", "data", "=", "df", ",", "aspect", "=", "m", ",", "\n", "kind", "=", "'bar'", ",", "\n", "palette", "=", "pal", ")", "\n", ".", "set", "(", "xticklabels", "=", "[", "]", ",", "\n", "xticks", "=", "[", "]", ")", ")", "\n", "for", "ax", "in", "grid", ".", "axes", ".", "flatten", "(", ")", ":", "\n", "        ", "ax", ".", "axhline", "(", "y", "=", "1", ",", "color", "=", "'k'", ",", "linestyle", "=", "'--'", ")", "\n", "", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.visualization.plot_variables": [[380, 505], ["matplotlib.subplots", "pandas.DataFrame", "enumerate", "seaborn.color_palette", "enumerate", "matplotlib.tight_layout", "isinstance", "isinstance", "isinstance", "isinstance", "isinstance", "len", "myokit.load_model", "variables[].keys", "seaborn.lineplot", "seaborn.despine", "enumerate", "len", "len", "[].keys", "enumerate", "pandas.DataFrame", "variables[].items", "myokit.load_model.name", "samples.append.append", "samples[].unique", "enumerate", "p.startswith", "myokit.load_model.value", "pars.items", "pandas.DataFrame", "variables[].items", "myokit.load_model.name", "samples.append.append", "original_vals.items", "hpd.append", "data[].unique", "enumerate", "[].fill_between", "p.startswith", "myokit.load_model.set_value", "myokit.load_model.set_value", "ax.flatten", "ax.flatten", "numpy.zeros", "pymc3.stats.hpd", "data[].unique", "myokit.load_model.get().pyfunc", "myokit.load_model.get().pyfunc", "Exception", "len", "ax.flatten", "myokit.load_model.get", "myokit.load_model.get", "data[].unique"], "function", ["None"], ["", "def", "plot_variables", "(", "v", ":", "np", ".", "ndarray", ",", "\n", "variables", ":", "Union", "[", "dict", ",", "List", "[", "dict", "]", "]", ",", "\n", "modelfiles", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ",", "\n", "par_samples", ":", "Union", "[", "dict", ",", "List", "[", "dict", "]", "]", "=", "None", ",", "\n", "original", ":", "Union", "[", "bool", ",", "List", "[", "bool", "]", "]", "=", "False", ",", "\n", "credible_interval", ":", "Union", "[", "float", ",", "List", "[", "float", "]", "]", "=", "0.89", ",", "\n", "alpha", ":", "float", "=", "0.2", ",", "\n", "figshape", ":", "Tuple", "[", "int", "]", "=", "None", ")", ":", "\n", "    ", "\"\"\"Plot model variables over voltage range.\n\n    v (np.ndarray): Voltage range to plot over.\n    variables (dict): Dictionary mapping common names to variables in the\n        model to be plotted.\n    modelfiles (str): Location of modelfiles to plot.\n    par_samples (dict): Samples of parameter values to set in model to\n        plot summarised results.\n    original (bool): Whether to plot original parameter values as\n        dashed lines.\n    credible_interval (float, List[float]): % interval to plot for high density\n        posterior interval.\n    alpha (float): Transparency value for shaded region.\n    figshape (Tuple[int]): Shape of figure. Defaults to single row\n    \"\"\"", "\n", "if", "original", ":", "\n", "        ", "assert", "par_samples", "is", "not", "None", ",", "'Require parameter value samples to plot original values.'", "\n", "\n", "", "if", "not", "isinstance", "(", "variables", ",", "list", ")", ":", "\n", "        ", "variables", "=", "[", "variables", "]", "\n", "", "if", "not", "isinstance", "(", "modelfiles", ",", "list", ")", ":", "\n", "        ", "modelfiles", "=", "[", "modelfiles", "]", "\n", "", "if", "not", "isinstance", "(", "par_samples", ",", "list", ")", ":", "\n", "        ", "par_samples", "=", "[", "par_samples", ",", "]", "*", "len", "(", "variables", ")", "\n", "", "if", "not", "isinstance", "(", "original", ",", "list", ")", ":", "\n", "        ", "original", "=", "[", "original", ",", "]", "*", "len", "(", "variables", ")", "\n", "", "if", "not", "isinstance", "(", "credible_interval", ",", "list", ")", ":", "\n", "        ", "credible_interval", "=", "[", "credible_interval", ",", "]", "\n", "\n", "", "if", "figshape", "is", "None", ":", "\n", "        ", "ncols", "=", "len", "(", "variables", "[", "0", "]", ")", "\n", "nrows", "=", "1", "\n", "", "else", ":", "\n", "        ", "ncols", "=", "figshape", "[", "0", "]", "\n", "nrows", "=", "figshape", "[", "1", "]", "\n", "\n", "", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "ncols", "=", "ncols", ",", "nrows", "=", "nrows", ",", "\n", "figsize", "=", "(", "ncols", "*", "5", ",", "nrows", "*", "5", ")", ",", "\n", "sharex", "=", "True", ")", "\n", "\n", "samples", "=", "pd", ".", "DataFrame", "(", "{", "}", ")", "\n", "for", "i", ",", "modelfile", "in", "enumerate", "(", "modelfiles", ")", ":", "\n", "        ", "m", "=", "myokit", ".", "load_model", "(", "modelfile", ")", "\n", "\n", "original_vals", "=", "{", "}", "\n", "if", "original", "[", "i", "]", ":", "\n", "            ", "for", "p", "in", "par_samples", "[", "i", "]", "[", "0", "]", ".", "keys", "(", ")", ":", "\n", "                ", "name", "=", "p", "\n", "if", "p", ".", "startswith", "(", "\"log\"", ")", ":", "\n", "                    ", "name", "=", "p", "[", "4", ":", "]", "\n", "", "original_vals", "[", "name", "]", "=", "m", ".", "value", "(", "name", ")", "\n", "\n", "", "", "if", "par_samples", "[", "i", "]", "is", "not", "None", ":", "\n", "            ", "for", "j", ",", "pars", "in", "enumerate", "(", "par_samples", "[", "i", "]", ")", ":", "\n", "                ", "for", "p", ",", "val", "in", "pars", ".", "items", "(", ")", ":", "\n", "                    ", "if", "p", ".", "startswith", "(", "\"log\"", ")", ":", "\n", "                        ", "val", "=", "10", "**", "val", "\n", "p", "=", "p", "[", "4", ":", "]", "\n", "", "m", ".", "set_value", "(", "p", ",", "val", ")", "\n", "\n", "", "output", "=", "pd", ".", "DataFrame", "(", "{", "}", ")", "\n", "for", "key", ",", "var", "in", "variables", "[", "i", "]", ".", "items", "(", ")", ":", "\n", "                    ", "output", "[", "key", "]", "=", "m", ".", "get", "(", "var", ")", ".", "pyfunc", "(", ")", "(", "v", ")", "\n", "", "output", "[", "'V'", "]", "=", "v", "\n", "output", "[", "'samples'", "]", "=", "j", "\n", "output", "[", "'model'", "]", "=", "m", ".", "name", "(", ")", "\n", "output", "[", "'data'", "]", "=", "'recalibrated'", "\n", "samples", "=", "samples", ".", "append", "(", "output", ",", "ignore_index", "=", "True", ")", "\n", "\n", "# Plot original values", "\n", "", "", "if", "par_samples", "[", "i", "]", "is", "None", "or", "original", "[", "i", "]", ":", "\n", "            ", "output", "=", "pd", ".", "DataFrame", "(", "{", "}", ")", "\n", "if", "original", ":", "\n", "                ", "for", "p", ",", "val", "in", "original_vals", ".", "items", "(", ")", ":", "\n", "                    ", "m", ".", "set_value", "(", "p", ",", "val", ")", "\n", "", "", "for", "key", ",", "var", "in", "variables", "[", "i", "]", ".", "items", "(", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "output", "[", "key", "]", "=", "m", ".", "get", "(", "var", ")", ".", "pyfunc", "(", ")", "(", "v", ")", "\n", "", "except", ":", "\n", "                    ", "raise", "Exception", "(", "'Could not find variable '", "+", "key", "+", "' in modelfile '", "+", "modelfile", ")", "\n", "", "output", "[", "'V'", "]", "=", "v", "\n", "", "output", "[", "'model'", "]", "=", "m", ".", "name", "(", ")", "\n", "output", "[", "'data'", "]", "=", "'original'", "\n", "samples", "=", "samples", ".", "append", "(", "output", ")", "\n", "\n", "", "", "current_palette", "=", "sns", ".", "color_palette", "(", ")", "\n", "\n", "# redorder axes for plotting", "\n", "for", "i", ",", "key", "in", "enumerate", "(", "variables", "[", "0", "]", ".", "keys", "(", ")", ")", ":", "\n", "        ", "sns", ".", "lineplot", "(", "x", "=", "'V'", ",", "y", "=", "key", ",", "hue", "=", "'model'", ",", "style", "=", "'data'", ",", "\n", "data", "=", "samples", ",", "\n", "estimator", "=", "np", ".", "median", ",", "\n", "ci", "=", "None", ",", "\n", "ax", "=", "ax", ".", "flatten", "(", ")", "[", "i", "]", ",", "\n", "legend", "=", "False", ")", "\n", "sns", ".", "despine", "(", "ax", "=", "ax", ".", "flatten", "(", ")", "[", "i", "]", ")", "\n", "for", "mi", ",", "model", "in", "enumerate", "(", "samples", "[", "'model'", "]", ".", "unique", "(", ")", ")", ":", "\n", "            ", "data", "=", "samples", "[", "(", "samples", "[", "'model'", "]", "==", "model", ")", "]", "\n", "hpd", "=", "[", "]", "\n", "for", "ci", "in", "credible_interval", ":", "\n", "                ", "hpd", ".", "append", "(", "np", ".", "zeros", "(", "(", "len", "(", "data", "[", "'V'", "]", ".", "unique", "(", ")", ")", ",", "2", ")", ")", ")", "\n", "\n", "", "for", "k", ",", "vk", "in", "enumerate", "(", "data", "[", "'V'", "]", ".", "unique", "(", ")", ")", ":", "\n", "                ", "data_vk", "=", "data", "[", "data", "[", "'V'", "]", "==", "vk", "]", "\n", "for", "cnt", ",", "hpdi", "in", "enumerate", "(", "hpd", ")", ":", "\n", "                    ", "hpdi", "[", "k", ",", ":", "]", "=", "pymc3", ".", "stats", ".", "hpd", "(", "data_vk", "[", "key", "]", ",", "\n", "credible_interval", "=", "credible_interval", "[", "cnt", "]", ")", "\n", "\n", "# plot on graph", "\n", "", "", "for", "hpdi", "in", "hpd", ":", "\n", "                ", "ax", ".", "flatten", "(", ")", "[", "i", "]", ".", "fill_between", "(", "\n", "data", "[", "'V'", "]", ".", "unique", "(", ")", ",", "hpdi", "[", ":", ",", "0", "]", ",", "hpdi", "[", ":", ",", "1", "]", ",", "\n", "alpha", "=", "alpha", ",", "color", "=", "current_palette", "[", "mi", "]", ")", "\n", "\n", "", "", "", "plt", ".", "tight_layout", "(", ")", "\n", "\n", "return", "fig", ",", "ax", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.visualization.plot_parameters_kde": [[507, 574], ["seaborn.set", "seaborn.cubehelix_palette", "pandas.melt", "seaborn.FacetGrid", "sns.FacetGrid.map", "sns.FacetGrid.map", "sns.FacetGrid.map", "sns.FacetGrid.map", "sns.FacetGrid.map", "sns.FacetGrid.fig.subplots_adjust", "sns.FacetGrid.set_xlabels", "sns.FacetGrid.set_titles", "sns.FacetGrid.set", "sns.FacetGrid.despine", "len", "visualization.normalise", "pandas.concat", "pyabc.visualization.kde.kde_1d", "kwargs.pop", "matplotlib.gca", "plt.gca.plot", "line.get_color", "line.remove", "kwargs.pop", "plt.gca.plot", "dict", "plt.gca.set_ylim", "matplotlib.gca", "plt.gca.text", "matplotlib.gca", "plt.gca.set", "plt.gca.set", "plt.gca.fill_between", "pdf.min", "pdf.max", "pdf.min", "kwargs.get", "kwargs.get", "kwargs.get"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_nrvm.normalise"], ["", "def", "plot_parameters_kde", "(", "df", ",", "w", ",", "limits", ",", "aspect", "=", "None", ",", "height", "=", "None", ")", ":", "\n", "    ", "\"\"\"Plot grid of parameter KDE density estimates.\n\n    EXPERIMENTAL: probably better off using functions from `pyabc`\n    library to plot KDEs.\n    \"\"\"", "\n", "\n", "if", "aspect", "is", "None", ":", "\n", "        ", "aspect", "=", "5", "\n", "", "if", "height", "is", "None", ":", "\n", "        ", "height", "=", ".5", "\n", "", "sns", ".", "set", "(", "style", "=", "\"white\"", ",", "rc", "=", "{", "\"axes.facecolor\"", ":", "(", "0", ",", "0", ",", "0", ",", "0", ")", "}", ")", "\n", "pal", "=", "sns", ".", "cubehelix_palette", "(", "len", "(", "limits", ")", ",", "rot", "=", "-", ".25", ",", "light", "=", ".7", ")", "\n", "\n", "df_melt", "=", "pd", ".", "melt", "(", "normalise", "(", "df", ",", "limits", ")", ")", "\n", "g", "=", "sns", ".", "FacetGrid", "(", "df_melt", ",", "row", "=", "\"name\"", ",", "hue", "=", "\"name\"", ",", "aspect", "=", "aspect", ",", "\n", "height", "=", "height", ",", "palette", "=", "pal", ",", "sharex", "=", "False", ")", "\n", "\n", "def", "custom_kde", "(", "x", ",", "shade", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "df", "=", "pd", ".", "concat", "(", "(", "x", ",", ")", ",", "axis", "=", "1", ")", "\n", "x_vals", ",", "pdf", "=", "kde_1d", "(", "df", ",", "w", ",", "x", ".", "name", ",", "xmin", "=", "0.0", ",", "xmax", "=", "1.0", ",", "numx", "=", "1000", ")", "\n", "pdf", "=", "(", "pdf", "-", "pdf", ".", "min", "(", ")", ")", "/", "(", "pdf", ".", "max", "(", ")", "-", "pdf", ".", "min", "(", ")", ")", "\n", "facecolor", "=", "kwargs", ".", "pop", "(", "\"facecolor\"", ",", "None", ")", "\n", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "line", ",", "=", "ax", ".", "plot", "(", "x_vals", ",", "pdf", ",", "**", "kwargs", ")", "\n", "color", "=", "line", ".", "get_color", "(", ")", "\n", "line", ".", "remove", "(", ")", "\n", "kwargs", ".", "pop", "(", "\"color\"", ",", "None", ")", "\n", "facecolor", "=", "color", "if", "facecolor", "is", "None", "else", "facecolor", "\n", "ax", ".", "plot", "(", "x_vals", ",", "pdf", ",", "color", "=", "color", ",", "**", "kwargs", ")", "\n", "shade_kws", "=", "dict", "(", "\n", "facecolor", "=", "facecolor", ",", "\n", "alpha", "=", "kwargs", ".", "get", "(", "\"alpha\"", ",", "0.25", ")", ",", "\n", "clip_on", "=", "kwargs", ".", "get", "(", "\"clip_on\"", ",", "True", ")", ",", "\n", "zorder", "=", "kwargs", ".", "get", "(", "\"zorder\"", ",", "1", ")", "\n", ")", "\n", "if", "shade", ":", "\n", "            ", "ax", ".", "fill_between", "(", "x_vals", ",", "0", ",", "pdf", ",", "**", "shade_kws", ")", "\n", "", "ax", ".", "set_ylim", "(", "0", ",", "auto", "=", "None", ")", "\n", "return", "ax", "\n", "\n", "", "g", ".", "map", "(", "custom_kde", ",", "\"value\"", ",", "alpha", "=", "1", ",", "lw", "=", "1", ",", "shade", "=", "True", ")", "\n", "g", ".", "map", "(", "custom_kde", ",", "\"value\"", ",", "color", "=", "\"w\"", ",", "lw", "=", "1", ")", "\n", "g", ".", "map", "(", "plt", ".", "axhline", ",", "y", "=", "0", ",", "lw", "=", "2", ",", "clip_on", "=", "False", ")", "\n", "\n", "def", "label", "(", "x", ",", "color", ",", "label", ")", ":", "\n", "        ", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "ax", ".", "text", "(", "0", ",", ".2", ",", "label", ",", "fontweight", "=", "\"bold\"", ",", "color", "=", "color", ",", "\n", "ha", "=", "\"left\"", ",", "va", "=", "\"center\"", ",", "transform", "=", "ax", ".", "transAxes", ")", "\n", "", "g", ".", "map", "(", "label", ",", "\"name\"", ")", "\n", "\n", "def", "xlims", "(", "x", ",", "color", ",", "label", ")", ":", "\n", "        ", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "ax", ".", "set", "(", "xticks", "=", "[", "0", ",", "1", "]", ")", "\n", "ax", ".", "set", "(", "xticklabels", "=", "[", "limits", "[", "label", "]", "[", "0", "]", ",", "limits", "[", "label", "]", "[", "1", "]", "]", ")", "\n", "", "g", ".", "map", "(", "xlims", ",", "\"name\"", ")", "\n", "\n", "# Set subplots to overlap", "\n", "g", ".", "fig", ".", "subplots_adjust", "(", "hspace", "=", "-", ".25", ")", "\n", "\n", "# Update axes details", "\n", "g", ".", "set_xlabels", "(", "\"posterior\"", ")", "\n", "g", ".", "set_titles", "(", "\"\"", ")", "\n", "g", ".", "set", "(", "yticks", "=", "[", "]", ")", "\n", "g", ".", "despine", "(", "bottom", "=", "True", ",", "left", "=", "True", ")", "\n", "\n", "return", "g", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.visualization.plot_kde_matrix_custom": [[575, 591], ["pyabc.visualization.kde.plot_kde_matrix", "range", "matplotlib.set_cmap", "range", "ax.set_title"], "function", ["None"], ["", "def", "plot_kde_matrix_custom", "(", "df", ",", "w", ",", "limits", "=", "None", ",", "refval", "=", "None", ")", ":", "\n", "    ", "\"\"\"Wrapper around pyabc.visualization.plot_kde_matrix.\"\"\"", "\n", "\n", "arr_ax", "=", "plot_kde_matrix", "(", "df", ",", "w", ",", "limits", "=", "limits", ",", "refval", "=", "refval", ")", "\n", "\n", "# Remove titles", "\n", "n_par", "=", "df", ".", "shape", "[", "1", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "n_par", ")", ":", "\n", "        ", "for", "j", "in", "range", "(", "0", ",", "i", ")", ":", "\n", "# lower axis is 2D density", "\n", "            ", "ax", "=", "arr_ax", "[", "i", ",", "j", "]", "\n", "ax", ".", "set_title", "(", "None", ")", "\n", "\n", "", "", "plt", ".", "set_cmap", "(", "'viridis'", ")", "\n", "\n", "return", "arr_ax", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.visualization.plot_data_adjustment": [[593, 662], ["enumerate", "pandas.DataFrame", "experiment.get_observations_df", "seaborn.relplot", "grid.map_dataframe.map_dataframe", "isinstance", "len", "myokit.load_model", "temperatures.append", "experiment.get_observations_df", "observations.append.append", "list", "kwargs.pop", "kwargs.pop", "data[].unique", "data[].unique", "myokit.load_model.get().value", "list", "str", "matplotlib.errorbar", "matplotlib.errorbar", "myokit.load_model.get", "numpy.sqrt", "numpy.sqrt"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.get_observations_df", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.get_observations_df"], ["", "def", "plot_data_adjustment", "(", "modelfiles", ":", "List", "[", "str", "]", ",", "\n", "*", "experiments", ":", "Experiment", ",", "\n", "tvar", ":", "str", "=", "'phys.T'", ")", "->", "sns", ".", "FacetGrid", ":", "\n", "    ", "\"\"\"Plots raw data before and after adjustment to model temperature.\n\n    Args:\n        modelfiles (List[str]): Models with temperature to adjust.\n        experiments (Experiment): Experimental data to plot.\n        tvar (str): Name of temperature variable in model file.\n\n    Returns:\n        sns.FacetGrid: Plots of experimental data.\n    \"\"\"", "\n", "if", "not", "isinstance", "(", "modelfiles", ",", "list", ")", ":", "\n", "        ", "modelfiles", "=", "[", "modelfiles", "]", "\n", "\n", "", "tvars", "=", "[", "tvar", ",", "]", "*", "len", "(", "modelfiles", ")", "\n", "\n", "temperatures", "=", "[", "]", "\n", "for", "i", ",", "model", "in", "enumerate", "(", "modelfiles", ")", ":", "\n", "        ", "m", "=", "myokit", ".", "load_model", "(", "model", ")", "\n", "temperatures", ".", "append", "(", "m", ".", "get", "(", "tvars", "[", "i", "]", ")", ".", "value", "(", ")", ")", "\n", "\n", "", "observations", "=", "pd", ".", "DataFrame", "(", "{", "}", ")", "\n", "# get adjusted for each model", "\n", "for", "temp", "in", "temperatures", ":", "\n", "        ", "observations_temp", "=", "get_observations_df", "(", "\n", "list", "(", "experiments", ")", ",", "\n", "normalise", "=", "False", ",", "\n", "temp_adjust", "=", "True", ",", "\n", "model_temperature", "=", "temp", ")", "\n", "observations_temp", "[", "'T'", "]", "=", "str", "(", "temp", ")", "+", "'K'", "\n", "observations", "=", "observations", ".", "append", "(", "observations_temp", ")", "\n", "\n", "# get unadjusted raw data", "\n", "", "observations_unadjusted", "=", "get_observations_df", "(", "list", "(", "experiments", ")", ",", "\n", "normalise", "=", "False", ",", "\n", "temp_adjust", "=", "False", ",", "\n", "model_temperature", "=", "None", ")", "\n", "observations_unadjusted", "[", "'T'", "]", "=", "'unadjusted'", "\n", "\n", "grid", "=", "sns", ".", "relplot", "(", "x", "=", "'x'", ",", "y", "=", "'y'", ",", "\n", "col", "=", "'exp_id'", ",", "\n", "kind", "=", "'scatter'", ",", "\n", "hue", "=", "'T'", ",", "style", "=", "'T'", ",", "\n", "data", "=", "observations", ",", "\n", "markers", "=", "True", ",", "\n", "facet_kws", "=", "{", "'sharex'", ":", "'col'", ",", "\n", "'sharey'", ":", "'col'", "}", ")", "\n", "\n", "def", "error_bars", "(", "**", "kwargs", ")", ":", "\n", "        ", "measurements", "=", "kwargs", ".", "pop", "(", "'measurements'", ")", "\n", "data", "=", "kwargs", ".", "pop", "(", "'data'", ")", "\n", "# add error bars to adjusted", "\n", "for", "temp", "in", "data", "[", "'T'", "]", ".", "unique", "(", ")", ":", "\n", "            ", "plt", ".", "errorbar", "(", "data", ".", "loc", "[", "data", "[", "'T'", "]", "==", "temp", "]", "[", "'x'", "]", ",", "\n", "data", ".", "loc", "[", "data", "[", "'T'", "]", "==", "temp", "]", "[", "'y'", "]", ",", "\n", "yerr", "=", "np", ".", "sqrt", "(", "data", ".", "loc", "[", "data", "[", "'T'", "]", "==", "temp", "]", "[", "'variance'", "]", ")", ",", "\n", "ls", "=", "'None'", ",", "marker", "=", "None", ")", "\n", "# add unadjusted data and error bars", "\n", "", "for", "exp_id", "in", "data", "[", "'exp_id'", "]", ".", "unique", "(", ")", ":", "\n", "            ", "plt", ".", "errorbar", "(", "measurements", ".", "loc", "[", "measurements", "[", "'exp_id'", "]", "==", "exp_id", "]", "[", "'x'", "]", ",", "\n", "measurements", ".", "loc", "[", "measurements", "[", "'exp_id'", "]", "==", "exp_id", "]", "[", "'y'", "]", ",", "\n", "yerr", "=", "np", ".", "sqrt", "(", "measurements", ".", "loc", "[", "measurements", "[", "'exp_id'", "]", "==", "exp_id", "]", "[", "'variance'", "]", ")", ",", "\n", "ls", "=", "'None'", ",", "marker", "=", "'x'", ",", "color", "=", "'k'", ")", "\n", "\n", "", "", "grid", "=", "grid", ".", "map_dataframe", "(", "error_bars", ",", "measurements", "=", "observations_unadjusted", ")", "\n", "\n", "return", "grid", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.full_parameters.min_fn": [[14, 30], ["ion_channel_pyabc.ion_channel_sum_stats_calculator", "sum", "model.sample", "len", "numpy.any", "abs", "dict", "zip", "numpy.isfinite", "list", "x.values"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.ion_channel_sum_stats_calculator", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.sample"], ["def", "min_fn", "(", "macro_vals", ",", "*", "args", ")", ":", "\n", "    ", "(", "model", ",", "macro_parameters", ",", "abc_parameters", ",", "\n", "observations", ",", "w", ")", "=", "args", "\n", "result", "=", "ion_channel_sum_stats_calculator", "(", "\n", "model", ".", "sample", "(", "{", "**", "dict", "(", "zip", "(", "macro_parameters", ",", "macro_vals", ")", ")", ",", "\n", "**", "abc_parameters", "}", ")", ")", "\n", "x", "=", "result", "\n", "if", "len", "(", "x", ")", "==", "0", "|", "np", ".", "any", "(", "~", "np", ".", "isfinite", "(", "list", "(", "x", ".", "values", "(", ")", ")", ")", ")", ":", "\n", "        ", "return", "np", ".", "inf", "\n", "", "y", "=", "observations", "\n", "# always going to be separate experiments in full model so no need to", "\n", "# do exp_map step", "\n", "d", "=", "[", "abs", "(", "w", "[", "key", "]", "*", "(", "x", "[", "key", "]", "-", "y", "[", "key", "]", ")", ")", "\n", "if", "key", "in", "x", "and", "key", "in", "y", "else", "0", "\n", "for", "key", "in", "w", "]", "\n", "return", "sum", "(", "d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.full_parameters.generate_training_data": [[32, 94], ["warnings.warn", "numpy.asarray", "ion_channel_pyabc.ion_channel_sum_stats_calculator", "distance_fn", "numpy.empty", "enumerate", "numpy.empty", "enumerate", "list", "model.get_experiment_data", "numpy.array", "scipy.differential_evolution", "model.get_parameter_vals().values", "len", "len", "list", "len", "len", "print", "print", "sample.values", "tuple", "len", "model.get_parameter_vals", "limits.values", "copy.deepcopy"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.ion_channel_sum_stats_calculator", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.get_experiment_data", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.get_parameter_vals"], ["", "def", "generate_training_data", "(", "\n", "macro_parameters", ":", "List", "[", "str", "]", ",", "\n", "abc_samples", ":", "List", "[", "Dict", "[", "str", ",", "float", "]", "]", ",", "\n", "model", ":", "IonChannelModel", ",", "\n", "distance_fn", ":", "IonChannelDistance", ",", "\n", "limits", ":", "List", "[", "Tuple", "[", "float", ",", "float", "]", "]", ",", "\n", "disp", ":", "bool", "=", "False", ",", "\n", "workers", ":", "int", "=", "1", ",", "\n", "optimise_args", ":", "dict", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Fit final parameters of full model by least squares regression.\n    \"\"\"", "\n", "# Send warning about experimental feature", "\n", "warnings", ".", "warn", "(", "\"experimental feature may produce unexpected results\"", ")", "\n", "\n", "# Get original values for perturbing later", "\n", "macro_original_vals", "=", "(", "np", ".", "asarray", "(", "list", "(", "\n", "model", ".", "get_parameter_vals", "(", "macro_parameters", ")", "\n", ".", "values", "(", ")", "\n", ")", ")", ")", "\n", "\n", "observations", "=", "ion_channel_sum_stats_calculator", "(", "\n", "model", ".", "get_experiment_data", "(", ")", ")", "\n", "_", "=", "distance_fn", "(", "0", ",", "observations", ",", "observations", ")", "\n", "\n", "w", "=", "distance_fn", ".", "w", "[", "0", "]", "\n", "\n", "# Dependent variable for fitting - ABC parameter samples", "\n", "X", "=", "np", ".", "empty", "(", "(", "len", "(", "abc_samples", ")", ",", "len", "(", "abc_samples", "[", "0", "]", ")", ")", ")", "\n", "for", "i", ",", "sample", "in", "enumerate", "(", "abc_samples", ")", ":", "\n", "        ", "X", "[", "i", ",", ":", "]", "=", "np", ".", "array", "(", "list", "(", "sample", ".", "values", "(", ")", ")", ")", "\n", "\n", "", "Y", "=", "np", ".", "empty", "(", "(", "len", "(", "abc_samples", ")", ",", "len", "(", "macro_parameters", ")", ")", ")", "\n", "for", "i", ",", "abc_parameters", "in", "enumerate", "(", "abc_samples", ")", ":", "\n", "        ", "if", "disp", ":", "\n", "            ", "print", "(", "'=> Running ABC sample {}...'", ".", "format", "(", "i", ")", ")", "\n", "\n", "# Fit macro parameters by differential evolution algorithm", "\n", "", "result", "=", "so", ".", "differential_evolution", "(", "min_fn", ",", "\n", "bounds", "=", "tuple", "(", "limits", ".", "values", "(", ")", ")", ",", "\n", "args", "=", "(", "copy", ".", "deepcopy", "(", "model", ")", ",", "\n", "macro_parameters", ",", "\n", "abc_parameters", ",", "\n", "observations", ",", "\n", "w", ")", ",", "\n", "disp", "=", "disp", ",", "\n", "workers", "=", "workers", ",", "\n", "**", "optimise_args", ")", "\n", "#                                 updating='deferred',", "\n", "#                                 tol=.05,", "\n", "#                                 maxiter=200)", "\n", "\n", "if", "result", ".", "success", ":", "\n", "            ", "Y", "[", "i", ",", ":", "]", "=", "result", ".", "x", "\n", "", "else", ":", "\n", "            ", "print", "(", "'differential_evolution failed with message: {}'", "\n", ".", "format", "(", "result", ".", "message", ")", ")", "\n", "# fill results vector with nan if optimisation fails", "\n", "Y", "[", "i", ",", ":", "]", "=", "[", "np", ".", "nan", ",", "]", "*", "len", "(", "macro_parameters", ")", "\n", "continue", "\n", "\n", "", "", "return", "(", "X", ",", "Y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.protocol.recovery": [[5, 52], ["myokit.Protocol", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule"], "function", ["None"], ["def", "recovery", "(", "twait", ":", "List", "[", "float", "]", ",", "\n", "vhold", ":", "float", ",", "\n", "vstep1", ":", "float", ",", "\n", "vstep2", ":", "float", ",", "\n", "tpre", ":", "float", ",", "\n", "tstep1", ":", "float", ",", "\n", "tstep2", ":", "float", ",", "\n", "vwait", ":", "float", "=", "None", ",", "\n", "tpost", ":", "float", "=", "0.", ")", "->", "myokit", ".", "Protocol", ":", "\n", "    ", "\"\"\"Standard double-pulse recovery protocol.\"\"\"", "\n", "\n", "# Check time arguments", "\n", "if", "tpre", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpre can not be negative.'", ")", "\n", "", "if", "tstep1", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "tstep2", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "tpost", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "", "for", "t", "in", "twait", ":", "\n", "        ", "if", "t", "<", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'Time twait can not be negative.'", ")", "\n", "\n", "", "", "if", "vwait", "is", "None", ":", "\n", "        ", "vwait", "=", "vhold", "\n", "\n", "# Create protocol", "\n", "", "p", "=", "myokit", ".", "Protocol", "(", ")", "\n", "time", "=", "0", "\n", "for", "t", "in", "twait", ":", "\n", "        ", "if", "tpre", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpre", ")", "\n", "time", "+=", "tpre", "\n", "", "if", "tstep1", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vstep1", ",", "time", ",", "tstep1", ")", "\n", "time", "+=", "tstep1", "\n", "", "if", "t", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vwait", ",", "time", ",", "t", ")", "\n", "time", "+=", "t", "\n", "", "if", "tstep2", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vstep2", ",", "time", ",", "tstep2", ")", "\n", "time", "+=", "tstep2", "\n", "", "if", "tpost", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpost", ")", "\n", "time", "+=", "tpost", "\n", "", "", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.protocol.availability": [[54, 95], ["myokit.Protocol", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule"], "function", ["None"], ["", "def", "availability", "(", "vsteps", ":", "List", "[", "float", "]", ",", "\n", "vhold", ":", "float", ",", "\n", "vtest", ":", "float", ",", "\n", "tpre", ":", "float", ",", "\n", "tstep", ":", "float", ",", "\n", "twait", ":", "float", ",", "\n", "ttest", ":", "float", ",", "\n", "tpost", ":", "float", "=", "0.", ")", "->", "myokit", ".", "Protocol", ":", "\n", "    ", "\"\"\"Standard availability (inactivation) protocol.\"\"\"", "\n", "# Check time arguments", "\n", "if", "tpre", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpre can not be negative.'", ")", "\n", "", "if", "tstep", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "twait", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "ttest", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "", "if", "tpost", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "\n", "# Create protocol", "\n", "", "p", "=", "myokit", ".", "Protocol", "(", ")", "\n", "time", "=", "0.", "\n", "for", "vstep", "in", "vsteps", ":", "\n", "        ", "if", "tpre", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpre", ")", "\n", "time", "+=", "tpre", "\n", "", "if", "tstep", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vstep", ",", "time", ",", "tstep", ")", "\n", "time", "+=", "tstep", "\n", "", "if", "twait", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "twait", ")", "\n", "time", "+=", "twait", "\n", "", "if", "ttest", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vtest", ",", "time", ",", "ttest", ")", "\n", "time", "+=", "ttest", "\n", "", "if", "tpost", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpost", ")", "\n", "time", "+=", "tpost", "\n", "", "", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.protocol.availability_linear": [[97, 149], ["myokit.Protocol", "range", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "int", "ValueError", "ValueError", "abs", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule"], "function", ["None"], ["", "def", "availability_linear", "(", "vstart", ":", "float", ",", "\n", "vend", ":", "float", ",", "\n", "dv", ":", "float", ",", "\n", "vhold", ":", "float", ",", "\n", "vtest", ":", "float", ",", "\n", "tpre", ":", "float", ",", "\n", "tstep", ":", "float", ",", "\n", "twait", ":", "float", ",", "\n", "ttest", ":", "float", ",", "\n", "tpost", ":", "float", "=", "0.", ")", "->", "myokit", ".", "Protocol", ":", "\n", "    ", "\"\"\"Standard availability (inactivation) protocol with linear steps.\"\"\"", "\n", "\n", "# Check v arguments", "\n", "if", "vend", ">", "vstart", ":", "\n", "        ", "if", "dv", "<=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'vend > vstart so dv must be strictly positive.'", ")", "\n", "", "", "else", ":", "\n", "        ", "if", "dv", ">=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'vend < vstart so dv must be negative.'", ")", "\n", "\n", "# Check time arguments", "\n", "", "", "if", "tpre", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpre can not be negative.'", ")", "\n", "", "if", "tstep", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "twait", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "ttest", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "", "if", "tpost", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "\n", "# Create protocol", "\n", "", "p", "=", "myokit", ".", "Protocol", "(", ")", "\n", "time", "=", "0.", "\n", "for", "i", "in", "range", "(", "int", "(", "abs", "(", "(", "vend", "-", "vstart", ")", "/", "dv", ")", ")", ")", ":", "\n", "        ", "if", "tpre", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpre", ")", "\n", "time", "+=", "tpre", "\n", "", "if", "tstep", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vstart", "+", "i", "*", "dv", ",", "time", ",", "tstep", ")", "\n", "time", "+=", "tstep", "\n", "", "if", "twait", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "twait", ")", "\n", "time", "+=", "twait", "\n", "", "if", "ttest", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vtest", ",", "time", ",", "ttest", ")", "\n", "time", "+=", "ttest", "\n", "", "if", "tpost", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpost", ")", "\n", "time", "+=", "tpost", "\n", "", "", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.protocol.varying_test_duration": [[151, 181], ["myokit.Protocol", "range", "ValueError", "ValueError", "len", "ValueError", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule"], "function", ["None"], ["", "def", "varying_test_duration", "(", "tstep", ":", "List", "[", "float", "]", ",", "\n", "vhold", ":", "float", ",", "\n", "vstep", ":", "float", ",", "\n", "tpre", ":", "float", ",", "\n", "tpost", ":", "float", "=", "0.", ")", "->", "myokit", ".", "Protocol", ":", "\n", "    ", "\"\"\"Varying duration of test pulses to same potential.\"\"\"", "\n", "\n", "# Check time arguments", "\n", "if", "tpre", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpre can not be negative.'", ")", "\n", "", "for", "ts", "in", "tstep", ":", "\n", "        ", "if", "ts", "<", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "", "if", "tpost", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "\n", "# Create protocol", "\n", "", "p", "=", "myokit", ".", "Protocol", "(", ")", "\n", "time", "=", "0.", "\n", "for", "i", "in", "range", "(", "len", "(", "tstep", ")", ")", ":", "\n", "        ", "if", "tpre", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpre", ")", "\n", "time", "+=", "tpre", "\n", "", "if", "tstep", "[", "i", "]", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vstep", ",", "time", ",", "tstep", "[", "i", "]", ")", "\n", "time", "+=", "tstep", "[", "i", "]", "\n", "", "if", "tpost", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpost", ")", "\n", "time", "+=", "tpost", "\n", "", "", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.__init__": [[51, 75], ["warnings.warn", "weakref.finalize", "pyabc.model.Model.__init__"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.IonChannelAcceptor.__init__"], ["def", "__init__", "(", "self", ",", "\n", "channel", ":", "str", ",", "\n", "modelfile", ":", "str", ",", "\n", "vvar", ":", "str", ",", "\n", "logvars", ":", "List", "[", "str", "]", "=", "myokit", ".", "LOG_ALL", ",", "\n", "external_par_samples", ":", "List", "[", "Dict", "[", "str", ",", "float", "]", "]", "=", "None", ")", ":", "\n", "\n", "        ", "warnings", ".", "warn", "(", "\n", "\"The IonChannelModel class is deprecated and will be removed.\"", "\n", ")", "\n", "self", ".", "channel", "=", "channel", "\n", "self", ".", "external_par_samples", "=", "external_par_samples", "\n", "self", ".", "modelfile", "=", "modelfile", "\n", "\n", "self", ".", "vvar", "=", "vvar", "\n", "self", ".", "logvars", "=", "logvars", "\n", "\n", "self", ".", "_sim", "=", "None", "\n", "self", ".", "experiments", "=", "[", "]", "\n", "\n", "# Attempt to force cleanup during parallel subprocesses", "\n", "self", ".", "_finalizer", "=", "weakref", ".", "finalize", "(", "self", ",", "self", ".", "_remove_simulation", ")", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "name", "=", "channel", "+", "\"_model\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.sample": [[76, 107], ["dict", "ion_channel_pyabc.IonChannelModel._simulate", "numpy.random.choice", "pandas.DataFrame"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel._simulate"], ["", "def", "sample", "(", "self", ",", "\n", "pars", ":", "Dict", "[", "str", ",", "float", "]", ",", "\n", "n_x", ":", "int", "=", "None", ",", "\n", "exp_num", ":", "int", "=", "None", ",", "\n", "logvars", ":", "List", "[", "str", "]", "=", "None", ")", "->", "pd", ".", "DataFrame", ":", "\n", "        ", "\"\"\"Sample from the ion channel model.\n\n        Args:\n            pars (Dict[str, float]): Dictionary mapping the name of \n                individual parameters to their values for this sample.\n            n_x (int): Override the default independent variable for\n                simulations. Defaults to None.\n            exp_num (int): Only run a specific experiment. Default to\n                run all.\n            logvars (List[str]): Variables to log during simulation.\n        \n        Returns:\n            pd.DataFrame: Output from experiment measurements.\n        \"\"\"", "\n", "if", "self", ".", "external_par_samples", "is", "not", "None", ":", "\n", "            ", "full_pars", "=", "dict", "(", "np", ".", "random", ".", "choice", "(", "self", ".", "external_par_samples", ")", ",", "\n", "**", "pars", ")", "\n", "", "else", ":", "\n", "            ", "full_pars", "=", "pars", "\n", "\n", "# Run myokit simulation and return empty dataframe if failure.", "\n", "", "try", ":", "\n", "            ", "results", "=", "self", ".", "_simulate", "(", "n_x", ",", "exp_num", ",", "logvars", ",", "**", "full_pars", ")", "\n", "", "except", ":", "\n", "            ", "results", "=", "pd", ".", "DataFrame", "(", "{", "}", ")", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.add_external_par_samples": [[108, 122], ["None"], "methods", ["None"], ["", "def", "add_external_par_samples", "(", "self", ",", "\n", "samples", ":", "List", "[", "Dict", "[", "str", ",", "float", "]", "]", "=", "None", ")", ":", "\n", "        ", "\"\"\"Add defined sample values for removing stochasticity.\n\n        Useful for testing purposes or for sequentially fitting\n        larger models.\n\n        Args:\n            samples (List[Dict[str, float]]): Each element in the\n                list is a sample which could be randomly chosen in\n                the simulation. Passing a simple value will ensure it\n                is always chosen.\n        \"\"\"", "\n", "self", ".", "external_par_samples", "=", "samples", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel._simulate": [[123, 182], ["ion_channel_pyabc.IonChannelModel.get_parameter_vals", "ion_channel_pyabc.IonChannelModel.set_parameters", "pandas.DataFrame", "enumerate", "ion_channel_pyabc.IonChannelModel.set_parameters", "ValueError", "list", "pars.keys", "all_results.append.append.append", "ion_channel_pyabc.time_limit", "e.run", "ion_channel_pyabc.IonChannelModel.set_parameters", "RuntimeError", "len"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.get_parameter_vals", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.set_parameters", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.set_parameters", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.time_limit", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.set_parameters"], ["", "def", "_simulate", "(", "self", ",", "\n", "n_x", ":", "int", "=", "None", ",", "\n", "exp_num", ":", "int", "=", "None", ",", "\n", "logvars", ":", "List", "[", "str", "]", "=", "None", ",", "\n", "**", "pars", ":", "float", ")", "->", "pd", ".", "DataFrame", ":", "\n", "        ", "\"\"\"Simulate model in Myokit and measure using defined experiments.\n\n        Args:\n            n_x (int): Override resolution of independent variable. If None will\n                use the default resolution defined by the experiment.\n            exp_num (int): Number of specific experiment to run on its own.\n            logvars (List[str]): List of variables to log from simulation.\n            pars (float): Values of named parameters passed as kwargs.\n\n        Returns:\n            pd.DataFrame: Summary measurements from simulated output.\n\n        Raises:\n            RuntimeError: Myokit fails to run simulation.\n            ValueError: `exp_num` is outside of the range of experiments.\n        \"\"\"", "\n", "if", "logvars", "is", "None", ":", "\n", "            ", "logvars", "=", "self", ".", "logvars", "\n", "\n", "# Sanity check for experiment number", "\n", "", "if", "(", "exp_num", "is", "not", "None", "and", "\n", "(", "exp_num", "<", "0", "or", "exp_num", ">", "len", "(", "self", ".", "experiments", ")", "-", "1", ")", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"Experiment number is outside range.\"", ")", "\n", "\n", "# Get original parameter values to reset later", "\n", "", "original_vals", "=", "self", ".", "get_parameter_vals", "(", "list", "(", "pars", ".", "keys", "(", ")", ")", ")", "\n", "\n", "self", ".", "set_parameters", "(", "**", "pars", ")", "\n", "all_results", "=", "pd", ".", "DataFrame", "(", "{", "}", ")", "\n", "\n", "for", "i", ",", "e", "in", "enumerate", "(", "self", ".", "experiments", ")", ":", "\n", "            ", "if", "exp_num", "is", "not", "None", "and", "i", "is", "not", "exp_num", ":", "\n", "                ", "continue", "\n", "", "try", ":", "\n", "                ", "with", "time_limit", "(", "5", ")", ":", "\n", "                    ", "results", "=", "e", ".", "run", "(", "sim", "=", "self", ".", "_sim", ",", "\n", "vvar", "=", "self", ".", "vvar", ",", "\n", "logvars", "=", "logvars", ",", "\n", "n_x", "=", "n_x", ")", "\n", "", "", "except", ":", "\n", "                ", "self", ".", "set_parameters", "(", "**", "original_vals", ")", "\n", "raise", "RuntimeError", "(", "\"Failed simulation.\"", ")", "\n", "\n", "", "results", "[", "'exp'", "]", "=", "i", "\n", "\n", "if", "i", "is", "0", ":", "\n", "                ", "all_results", "=", "results", "\n", "", "else", ":", "\n", "                ", "all_results", "=", "all_results", ".", "append", "(", "results", ")", "\n", "\n", "# Reset to original values", "\n", "", "", "self", ".", "set_parameters", "(", "**", "original_vals", ")", "\n", "\n", "return", "all_results", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.set_parameters": [[183, 211], ["pars.items", "ion_channel_pyabc.IonChannelModel._build_simulation", "ion_channel_pyabc.IonChannelModel._sim.reset", "ValueError", "ion_channel_pyabc.IonChannelModel._sim.set_constant", "ion_channel_pyabc.IonChannelModel._sim.set_constant"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel._build_simulation"], ["", "def", "set_parameters", "(", "self", ",", "**", "pars", ":", "float", ")", ":", "\n", "        ", "\"\"\"Set parameters of the Myokit model.\n\n        Args:\n            pars (float): Values of parameter values passed as kwargs.\n\n        Raises:\n            ValueError: Fails to set a parameter value.\n        \"\"\"", "\n", "\n", "# Make sure a myokit simulation exists", "\n", "if", "self", ".", "_sim", "is", "None", ":", "\n", "            ", "self", ".", "_build_simulation", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_sim", ".", "reset", "(", ")", "\n", "\n", "# Set parameters", "\n", "", "for", "name", ",", "value", "in", "pars", ".", "items", "(", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "if", "value", "is", "not", "None", ":", "\n", "                    ", "if", "'.'", "not", "in", "name", ":", "\n", "                        ", "self", ".", "_sim", ".", "set_constant", "(", "\n", "self", ".", "channel", "+", "'.'", "+", "name", ",", "value", ")", "\n", "", "else", ":", "\n", "                        ", "self", ".", "_sim", ".", "set_constant", "(", "name", ",", "value", ")", "\n", "", "", "", "except", ":", "\n", "                ", "raise", "ValueError", "(", "'Could not set parameter {0} to {1}'", "\n", ".", "format", "(", "name", ",", "value", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.get_parameter_vals": [[212, 226], ["myokit.load", "m.has_variable", "m.get().value", "m.get"], "methods", ["None"], ["", "", "", "def", "get_parameter_vals", "(", "self", ",", "parameters", ":", "List", "[", "str", "]", ")", "->", "Dict", "[", "str", ",", "float", "]", ":", "\n", "        ", "\"\"\"Get the value of current model parameters.\n\n        Args:\n            parameters (List[str]): Names of parameter values to retrieve.\n        \"\"\"", "\n", "m", ",", "_", ",", "_", "=", "myokit", ".", "load", "(", "self", ".", "modelfile", ")", "\n", "parameter_values", "=", "{", "}", "\n", "for", "p", "in", "parameters", ":", "\n", "            ", "if", "m", ".", "has_variable", "(", "p", ")", ":", "\n", "                ", "parameter_values", "[", "p", "]", "=", "m", ".", "get", "(", "p", ")", ".", "value", "(", ")", "\n", "", "else", ":", "\n", "                ", "parameter_values", "[", "p", "]", "=", "np", ".", "nan", "\n", "", "", "return", "parameter_values", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel._build_simulation": [[227, 244], ["myokit.load", "m.get.is_state", "m.get.set_rhs", "m.get.set_binding", "myokit.Simulation", "m.get", "m.get.demote", "ValueError"], "methods", ["None"], ["", "def", "_build_simulation", "(", "self", ")", ":", "\n", "        ", "\"\"\"Creates a class instance of myokit.Model and myokit.Simulation.\n\n        Raises:\n            ValueError: Cannot find voltage parameter in model.\n        \"\"\"", "\n", "m", ",", "_", ",", "_", "=", "myokit", ".", "load", "(", "self", ".", "modelfile", ")", "\n", "try", ":", "\n", "            ", "v", "=", "m", ".", "get", "(", "self", ".", "vvar", ")", "\n", "", "except", ":", "\n", "            ", "raise", "ValueError", "(", "'Model does not have vvar: {}'", "\n", ".", "format", "(", "self", ".", "vvar", ")", ")", "\n", "", "if", "v", ".", "is_state", "(", ")", ":", "\n", "            ", "v", ".", "demote", "(", ")", "\n", "", "v", ".", "set_rhs", "(", "0", ")", "\n", "v", ".", "set_binding", "(", "None", ")", "\n", "self", ".", "_sim", "=", "myokit", ".", "Simulation", "(", "m", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel._remove_simulation": [[245, 252], ["None"], "methods", ["None"], ["", "def", "_remove_simulation", "(", "self", ")", ":", "\n", "        ", "\"\"\"Removes reference to simulation object.\n        \n        This is part attempt for the object to be cleanup up\n        in parallel ABC runs.\n        \"\"\"", "\n", "self", ".", "_sim", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.add_experiments": [[253, 262], ["ion_channel_pyabc.IonChannelModel.experiments.extend"], "methods", ["None"], ["", "def", "add_experiments", "(", "self", ",", "\n", "experiments", ":", "Union", "[", "Experiment", ",", "List", "[", "Experiment", "]", "]", ")", ":", "\n", "        ", "\"\"\"Add Experiment measurement for model output.\n\n        Args:\n            experiments (Union[Experiment, List[Experiment]]): Either a\n                single or multiple instances of ionchannelABC.Experiment.\n        \"\"\"", "\n", "self", ".", "experiments", ".", "extend", "(", "experiments", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.get_experiment_data": [[263, 276], ["pandas.DataFrame", "enumerate", "measurements.append.append.append"], "methods", ["None"], ["", "def", "get_experiment_data", "(", "self", ")", "->", "pd", ".", "DataFrame", ":", "\n", "        ", "\"\"\"Returns experimental data from Experiments.\n\n        Returns:\n            pd.DataFrame: Experimental data in columns exp, x, y, err.\n        \"\"\"", "\n", "measurements", "=", "pd", ".", "DataFrame", "(", "columns", "=", "[", "'exp'", ",", "'x'", ",", "'y'", ",", "'errs'", "]", ")", "\n", "for", "i", ",", "exp", "in", "enumerate", "(", "self", ".", "experiments", ")", ":", "\n", "            ", "data", "=", "exp", ".", "data", ".", "df", "\n", "data", "[", "'exp'", "]", "=", "i", "\n", "measurements", "=", "measurements", ".", "append", "(", "data", ",", "ignore_index", "=", "True", ",", "\n", "sort", "=", "True", ")", "\n", "", "return", "measurements", "\n", "", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.time_limit": [[26, 36], ["signal.signal", "signal.alarm", "ion_channel_pyabc.TimeoutException", "signal.alarm"], "function", ["None"], ["@", "contextmanager", "\n", "def", "time_limit", "(", "seconds", ")", ":", "\n", "    ", "def", "signal_handler", "(", "signum", ",", "frame", ")", ":", "\n", "        ", "raise", "TimeoutException", "(", "\"Timed out!\"", ")", "\n", "", "signal", ".", "signal", "(", "signal", ".", "SIGALRM", ",", "signal_handler", ")", "\n", "signal", ".", "alarm", "(", "seconds", ")", "\n", "try", ":", "\n", "        ", "yield", "\n", "", "finally", ":", "\n", "        ", "signal", ".", "alarm", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.__init__": [[34, 96], ["isinstance", "isinstance", "conditions.copy", "conditions.copy.pop", "isinstance", "isinstance", "len", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "dataset", ":", "Union", "[", "np", ".", "ndarray", ",", "List", "[", "np", ".", "ndarray", "]", "]", ",", "\n", "protocol", ":", "myokit", ".", "Protocol", ",", "\n", "conditions", ":", "Dict", "[", "str", ",", "float", "]", ",", "\n", "sum_stats", ":", "Union", "[", "Callable", ",", "List", "[", "Callable", "]", "]", ",", "\n", "tvar", ":", "str", "=", "'phys.T'", ",", "\n", "Q10", ":", "Union", "[", "float", ",", "List", "[", "float", "]", "]", "=", "None", ",", "\n", "Q10_factor", ":", "Union", "[", "int", ",", "List", "[", "int", "]", "]", "=", "0", ",", "\n", "description", ":", "str", "=", "\"\"", ")", ":", "\n", "        ", "\"\"\"Initialisation.\n\n        Args:\n            dataset (Union[np.ndarray, List[np.ndarray]]):\n                Experimental data in format (x, y, variance). More than one\n                dataset can be supplied in a list and will be assigned\n                separate exp_id. Care must be taken in this case that sum stats\n                function produces appropriate output.\n            protocol (myokit.Protocol): Voltage step protocol from experiment.\n            conditions (Dict[str, float]): Reported experimental conditions.\n            sum_stats (Union[Callable, List[Callable]]): Summary statistics\n                function(s) which may be list of functions as more than one\n                measurement could be made from one protocol.\n            tvar: Name of temperature condition variable in `conditions`.\n            Q10 (float, List[float]): Optional Q10 value(s) to adjust\n                values to temperature defined in modelfile.\n            Q10_factor (int, List[int]): Optional factor for Q10 temperature\n                conversion. The factor is used when adjusting values\n                using the Q10 equation to differentiate between\n                different types of data.\n                Defaults to zero which will give no adjustment.\n                Set to 1 for IV datasets, 0 for no conversion and\n                -1 for rate constant datasets.\n                Can accept a list if separate exp_id generated by the experiment\n                which are adjusted differently.\n            description (str): Optional descriptor.\n        \"\"\"", "\n", "if", "isinstance", "(", "dataset", ",", "list", ")", ":", "\n", "            ", "self", ".", "_dataset", "=", "dataset", "\n", "if", "not", "isinstance", "(", "Q10_factor", ",", "list", ")", ":", "\n", "                ", "self", ".", "_Q10_factor", "=", "[", "Q10_factor", ",", "]", "*", "len", "(", "dataset", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "_Q10_factor", "=", "Q10_factor", "\n", "", "if", "not", "isinstance", "(", "Q10", ",", "list", ")", ":", "\n", "                ", "self", ".", "_Q10", "=", "[", "Q10", ",", "]", "*", "len", "(", "dataset", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "_Q10", "=", "Q10", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "_dataset", "=", "[", "dataset", "]", "\n", "self", ".", "_Q10_factor", "=", "[", "Q10_factor", "]", "\n", "self", ".", "_Q10", "=", "[", "Q10", "]", "\n", "\n", "", "self", ".", "_protocol", "=", "protocol", "\n", "\n", "if", "isinstance", "(", "sum_stats", ",", "list", ")", ":", "\n", "            ", "self", ".", "_sum_stats", "=", "sum_stats", "\n", "", "else", ":", "\n", "            ", "self", ".", "_sum_stats", "=", "[", "sum_stats", "]", "\n", "\n", "", "conditions_exp", "=", "conditions", ".", "copy", "(", ")", "# in case conditions used by other experiments", "\n", "self", ".", "_temperature", "=", "conditions_exp", ".", "pop", "(", "tvar", ",", "None", ")", "\n", "self", ".", "_conditions", "=", "conditions_exp", "\n", "self", ".", "_description", "=", "description", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.__call__": [[97, 100], ["print"], "methods", ["None"], ["", "def", "__call__", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Print descriptor\"\"\"", "\n", "print", "(", "self", ".", "_description", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.dataset": [[101, 104], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "dataset", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "return", "self", ".", "_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.protocol": [[105, 108], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "protocol", "(", "self", ")", "->", "myokit", ".", "Protocol", ":", "\n", "        ", "return", "self", ".", "_protocol", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.conditions": [[109, 112], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "conditions", "(", "self", ")", "->", "Dict", ":", "\n", "        ", "return", "self", ".", "_conditions", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.sum_stats": [[113, 116], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "sum_stats", "(", "self", ")", "->", "List", "[", "Callable", "]", ":", "\n", "        ", "return", "self", ".", "_sum_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.temperature": [[117, 120], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "temperature", "(", "self", ")", "->", "float", ":", "\n", "        ", "return", "self", ".", "_temperature", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.Q10": [[121, 124], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "Q10", "(", "self", ")", "->", "List", "[", "float", "]", ":", "\n", "        ", "return", "self", ".", "_Q10", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.Experiment.Q10_factor": [[125, 128], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "Q10_factor", "(", "self", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "return", "self", ".", "_Q10_factor", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.log_transform": [[12, 20], ["functools.wraps", "dict", "f", "key.startswith", "log_kwargs.items"], "function", ["None"], ["def", "log_transform", "(", "f", ")", ":", "\n", "    ", "@", "wraps", "(", "f", ")", "\n", "def", "log_transformed", "(", "**", "log_kwargs", ")", ":", "\n", "        ", "kwargs", "=", "dict", "(", "[", "(", "key", "[", "4", ":", "]", ",", "10", "**", "value", ")", "if", "key", ".", "startswith", "(", "\"log\"", ")", "\n", "else", "(", "key", ",", "value", ")", "\n", "for", "key", ",", "value", "in", "log_kwargs", ".", "items", "(", ")", "]", ")", "\n", "return", "f", "(", "**", "kwargs", ")", "\n", "", "return", "log_transformed", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.combine_sum_stats": [[22, 30], ["enumerate", "experiment.combine_sum_stats.sum_stats_fn"], "function", ["None"], ["", "def", "combine_sum_stats", "(", "*", "functions", ")", ":", "\n", "    ", "def", "sum_stats_fn", "(", "x", ")", ":", "\n", "        ", "sum_stats", "=", "[", "]", "\n", "for", "i", ",", "flist", "in", "enumerate", "(", "functions", ")", ":", "\n", "            ", "for", "f", "in", "flist", ":", "\n", "                ", "sum_stats", "=", "sum_stats", "+", "f", "(", "x", "[", "i", "]", ")", "\n", "", "", "return", "sum_stats", "\n", "", "return", "lambda", "x", ":", "sum_stats_fn", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.setup": [[130, 262], ["myokit.load_model", "myokit.load_model.get", "myokit.load_model.get().value", "experiment.get_observations_df", "list", "enumerate", "experiment.combine_sum_stats", "m.get.binding", "m.get.is_state", "m.get.set_rhs", "m.get.set_binding", "list", "myokit.Simulation", "exp.conditions.items", "simulations.append", "times.append", "pyabc.History", "pyabc.History.get_distribution", "sample_df.append", "sample_w.append", "zip", "zip", "m.get.demote", "myokit.load_model.get", "myokit.Simulation.set_constant", "exp.protocol.characteristic_time", "dict", "dict", "myokit.Timeout", "dict.items", "sim.reset", "experiment.log_transform", "str", "sim_output.append", "str", "enumerate", "sim.set_constant", "sim.run", "list", "range", "combine_sum_stats.", "key.startswith", "[].items", "key.startswith", "dict().items", "warnings.warn", "len", "dict", "df.sample().to_dict", "additional_pars.rvs", "df.sample"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.get_observations_df", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.combine_sum_stats", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.log_transform", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.EfficientMultivariateNormalTransition.rvs", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.sample"], ["", "", "def", "setup", "(", "modelfile", ":", "str", ",", "\n", "*", "experiments", ":", "Experiment", ",", "\n", "timeout", ":", "int", "=", "None", ",", "\n", "err_pars", ":", "List", "[", "str", "]", "=", "None", ",", "\n", "pacevar", ":", "str", "=", "'membrane.V'", ",", "\n", "tvar", ":", "str", "=", "'phys.T'", ",", "\n", "prev_runs", ":", "List", "[", "str", "]", "=", "[", "]", ",", "\n", "additional_pars", ":", "Distribution", "=", "None", ",", "\n", "logvars", ":", "List", "[", "str", "]", "=", "myokit", ".", "LOG_ALL", ",", "\n", "log_interval", ":", "float", "=", "None", ",", "\n", "normalise", ":", "bool", "=", "True", "\n", ")", "->", "Tuple", "[", "pd", ".", "DataFrame", ",", "Callable", ",", "Callable", "]", ":", "\n", "    ", "\"\"\"Combine chosen experiments into inputs for ABC.\n\n    Args:\n        modelfile (str): Path to Myokit MMT file.\n        *experiments (Experiment): Any number of experiments to run in ABC.\n        err_pars (List[str]): Optional list of parameters representing model\n            discrepancy variance for each experiment.\n        pacevar (str): Optionally specify name of pacing variable in modelfile.\n            Defaults to `membrane.V` assuming voltage clamp protocol but could\n            also be set to stimulating current.\n        tvar (str): Optionally specify name of temperature in modelfile.\n            Defaults to `phys.T`.\n        prev_runs (List[str]): Path to previous pyABC runs containing samples\n            to randomly sample outside of ABC algorithm.\n        logvars (List[str]): Optionally specify variables to log in simulations.\n\n    Returns:\n        Tuple[pd.DataFrame, Callable, Callable]:\n            Observations combined from experiments.\n            Model function to run combined protocols from experiments.\n            Summary statistics function to convert 'raw' simulation output.\n    \"\"\"", "\n", "\n", "# Create Myokit model instance", "\n", "m", "=", "myokit", ".", "load_model", "(", "modelfile", ")", "\n", "\n", "# Set pacing variable", "\n", "pace", "=", "m", ".", "get", "(", "pacevar", ")", "\n", "if", "pace", ".", "binding", "(", ")", "!=", "'pace'", ":", "\n", "        ", "if", "pace", ".", "is_state", "(", ")", ":", "\n", "            ", "pace", ".", "demote", "(", ")", "\n", "", "pace", ".", "set_rhs", "(", "0", ")", "\n", "pace", ".", "set_binding", "(", "'pace'", ")", "\n", "", "model_temperature", "=", "m", ".", "get", "(", "tvar", ")", ".", "value", "(", ")", "\n", "\n", "# Initialise combined variables", "\n", "observations", "=", "get_observations_df", "(", "list", "(", "experiments", ")", ",", "\n", "normalise", "=", "normalise", ",", "\n", "temp_adjust", "=", "True", ",", "\n", "model_temperature", "=", "model_temperature", ")", "\n", "\n", "# Combine protocols into Myokit simulations", "\n", "simulations", ",", "times", "=", "[", "]", ",", "[", "]", "\n", "for", "exp", "in", "list", "(", "experiments", ")", ":", "\n", "        ", "s", "=", "myokit", ".", "Simulation", "(", "m", ",", "exp", ".", "protocol", ")", "\n", "for", "ci", ",", "vi", "in", "exp", ".", "conditions", ".", "items", "(", ")", ":", "\n", "            ", "s", ".", "set_constant", "(", "ci", ",", "vi", ")", "\n", "", "simulations", ".", "append", "(", "s", ")", "\n", "times", ".", "append", "(", "exp", ".", "protocol", ".", "characteristic_time", "(", ")", ")", "\n", "\n", "# Get previous pyABC runs", "\n", "# Note: defaults to latest run in database file", "\n", "", "sample_df", ",", "sample_w", "=", "[", "]", ",", "[", "]", "\n", "for", "run", "in", "prev_runs", ":", "\n", "        ", "h", "=", "History", "(", "run", ")", "\n", "df", ",", "w", "=", "h", ".", "get_distribution", "(", ")", "\n", "sample_df", ".", "append", "(", "df", ")", "\n", "sample_w", ".", "append", "(", "w", ")", "\n", "\n", "# Create model function", "\n", "", "def", "simulate_model", "(", "**", "pars", ")", ":", "\n", "        ", "sim_output", "=", "[", "]", "\n", "# Previously calibrated parameters", "\n", "for", "df", ",", "w", "in", "zip", "(", "sample_df", ",", "sample_w", ")", ":", "\n", "            ", "pars", "=", "dict", "(", "[", "(", "key", "[", "4", ":", "]", ",", "10", "**", "value", ")", "if", "key", ".", "startswith", "(", "\"log\"", ")", "\n", "else", "(", "key", ",", "value", ")", "\n", "for", "key", ",", "value", "in", "df", ".", "sample", "(", "weights", "=", "w", ",", "replace", "=", "True", ")", ".", "to_dict", "(", "'records'", ")", "[", "0", "]", ".", "items", "(", ")", "]", ",", "\n", "**", "pars", ")", "\n", "# Additional parameters that are not refined during calibration", "\n", "", "if", "additional_pars", "is", "not", "None", ":", "\n", "            ", "pars", "=", "dict", "(", "[", "(", "key", "[", "4", ":", "]", ",", "10", "**", "value", ")", "if", "key", ".", "startswith", "(", "\"log\"", ")", "\n", "else", "(", "key", ",", "value", ")", "\n", "for", "key", ",", "value", "in", "dict", "(", "additional_pars", ".", "rvs", "(", ")", ")", ".", "items", "(", ")", "]", ",", "\n", "**", "pars", ")", "\n", "\n", "# Create timeout ProgressReporter if necessary", "\n", "", "progress", "=", "None", "\n", "if", "timeout", "is", "not", "None", ":", "\n", "            ", "progress", "=", "myokit", ".", "Timeout", "(", "timeout", ")", "\n", "\n", "", "for", "sim", ",", "time", "in", "zip", "(", "simulations", ",", "times", ")", ":", "\n", "            ", "for", "p", ",", "v", "in", "pars", ".", "items", "(", ")", ":", "\n", "                ", "if", "err_pars", "is", "not", "None", "and", "p", "in", "err_pars", ":", "\n", "                    ", "continue", "\n", "", "try", ":", "\n", "                    ", "sim", ".", "set_constant", "(", "p", ",", "v", ")", "\n", "", "except", ":", "\n", "                    ", "warnings", ".", "warn", "(", "\"Could not set value of {}\"", "\n", ".", "format", "(", "p", ")", ")", "\n", "return", "None", "\n", "", "", "sim", ".", "reset", "(", ")", "\n", "try", ":", "\n", "                ", "sim_output", ".", "append", "(", "\n", "sim", ".", "run", "(", "time", ",", "\n", "log", "=", "logvars", ",", "\n", "log_interval", "=", "log_interval", ",", "\n", "progress", "=", "progress", ")", "\n", ")", "\n", "", "except", ":", "\n", "                ", "del", "(", "sim_output", ")", "\n", "return", "None", "\n", "", "", "return", "sim_output", "\n", "", "def", "model", "(", "x", ")", ":", "\n", "        ", "return", "log_transform", "(", "simulate_model", ")", "(", "**", "x", ")", "\n", "\n", "# Combine summary statistic functions", "\n", "", "normalise_factor", "=", "{", "}", "\n", "for", "i", ",", "f", "in", "enumerate", "(", "observations", ".", "normalise_factor", ")", ":", "\n", "        ", "normalise_factor", "[", "i", "]", "=", "f", "\n", "", "sum_stats_combined", "=", "combine_sum_stats", "(", "\n", "*", "[", "e", ".", "sum_stats", "for", "e", "in", "list", "(", "experiments", ")", "]", "\n", ")", "\n", "def", "summary_statistics", "(", "data", ")", ":", "\n", "        ", "if", "data", "is", "None", ":", "\n", "            ", "return", "{", "str", "(", "i", ")", ":", "np", ".", "inf", "for", "i", "in", "range", "(", "len", "(", "observations", ")", ")", "}", "\n", "", "ss", "=", "{", "str", "(", "i", ")", ":", "val", "/", "normalise_factor", "[", "i", "]", "\n", "for", "i", ",", "val", "in", "enumerate", "(", "sum_stats_combined", "(", "data", ")", ")", "}", "\n", "return", "ss", "\n", "\n", "", "return", "observations", ",", "model", ",", "summary_statistics", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.get_observations_df": [[264, 320], ["pandas.DataFrame", "enumerate", "warnings.warn", "numpy.copy", "adjust_for_temperature.T.tolist", "observations.append.append", "experiment.adjust_for_temperature", "experiment.normalise_dataset", "pandas.DataFrame", "str"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.adjust_for_temperature", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.normalise_dataset"], ["", "def", "get_observations_df", "(", "experiments", ":", "List", "[", "Experiment", "]", ",", "\n", "normalise", ":", "bool", "=", "True", ",", "\n", "temp_adjust", ":", "bool", "=", "False", ",", "\n", "model_temperature", ":", "float", "=", "None", ")", "->", "pd", ".", "DataFrame", ":", "\n", "    ", "\"\"\"Returns observations dataframe with combined datasets.\n\n    Args:\n        *experiments (Experiment): Any number of experiments to run in ABC.\n        normalise (bool): Whether to normalise dependent variable and\n            variance in output dataframe. Defaults to True.\n        temp_adjust (bool): Whether to adjust to temperature in\n            modelfile. Defaults to False.\n        model_temperature (float): Temperature to adjust values to. Must\n            be supplied if `temp_adjust=True`.\n\n    Returns:\n        pd.DataFrame: Combined datasets in dataframe with columns\n            `x`, `y`, `variance` and `exp_id`.\n    \"\"\"", "\n", "cols", "=", "[", "'x'", ",", "'y'", ",", "'variance'", ",", "'exp_id'", ",", "'normalise_factor'", "]", "\n", "observations", "=", "pd", ".", "DataFrame", "(", "columns", "=", "cols", ")", "\n", "\n", "exp_id", "=", "0", "\n", "for", "exp", "in", "experiments", ":", "\n", "        ", "if", "exp", ".", "temperature", "is", "None", "and", "temp_adjust", ":", "\n", "            ", "warnings", ".", "warn", "(", "'No experimental temperature provided so data not adjusted'", ")", "\n", "\n", "# Combine datasets", "\n", "", "for", "i", ",", "d", "in", "enumerate", "(", "exp", ".", "dataset", ")", ":", "\n", "            ", "dataset", "=", "np", ".", "copy", "(", "d", ")", "\n", "\n", "if", "(", "temp_adjust", "and", "\n", "exp", ".", "temperature", "is", "not", "None", "and", "\n", "model_temperature", "is", "not", "None", "and", "\n", "model_temperature", "!=", "exp", ".", "temperature", "and", "\n", "exp", ".", "Q10", "[", "i", "]", "is", "not", "None", "and", "\n", "exp", ".", "Q10_factor", "[", "i", "]", "is", "not", "None", ")", ":", "\n", "                ", "dataset", "=", "adjust_for_temperature", "(", "dataset", ",", "\n", "exp", ".", "temperature", ",", "\n", "model_temperature", ",", "\n", "exp", ".", "Q10", "[", "i", "]", ",", "\n", "exp", ".", "Q10_factor", "[", "i", "]", ")", "\n", "\n", "", "if", "normalise", ":", "\n", "                ", "normalise_factor", ",", "dataset", "=", "normalise_dataset", "(", "dataset", ")", "\n", "", "else", ":", "\n", "                ", "normalise_factor", "=", "1.", "\n", "\n", "", "dataset", "=", "dataset", ".", "T", ".", "tolist", "(", ")", "\n", "dataset", "=", "[", "d_", "+", "[", "str", "(", "exp_id", ")", ",", "normalise_factor", "]", "for", "d_", "in", "dataset", "]", "\n", "observations", "=", "observations", ".", "append", "(", "\n", "pd", ".", "DataFrame", "(", "dataset", ",", "columns", "=", "cols", ")", ",", "\n", "ignore_index", "=", "True", "\n", ")", "\n", "exp_id", "+=", "1", "\n", "", "", "return", "observations", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.normalise_dataset": [[322, 337], ["numpy.max", "numpy.abs", "numpy.array", "numpy.sqrt"], "function", ["None"], ["", "def", "normalise_dataset", "(", "dataset", ":", "np", ".", "ndarray", ")", "->", "Tuple", "[", "float", ",", "np", ".", "ndarray", "]", ":", "\n", "    ", "\"\"\"Normalise the dependent variable and variance.\n\n    Returns both the normalising factor and normalised dataset.\n    \"\"\"", "\n", "# Dependent variable", "\n", "y", "=", "dataset", "[", "1", "]", "\n", "max_y", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "y", ")", ")", "\n", "y", "=", "[", "y_", "/", "max_y", "for", "y_", "in", "y", "]", "\n", "\n", "# Variance (convert back to SD to normalise)", "\n", "variance", "=", "dataset", "[", "2", "]", "\n", "variance", "=", "(", "np", ".", "sqrt", "(", "variance", ")", "/", "max_y", ")", "**", "2", "\n", "\n", "return", "max_y", ",", "np", ".", "array", "(", "[", "dataset", "[", "0", "]", ",", "y", ",", "variance", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.experiment.adjust_for_temperature": [[339, 354], ["numpy.array", "numpy.sqrt"], "function", ["None"], ["", "def", "adjust_for_temperature", "(", "dataset", ":", "List", "[", "float", "]", ",", "\n", "exp_temperature", ":", "float", ",", "\n", "model_temperature", ":", "float", ",", "\n", "Q10", ":", "float", ",", "\n", "Q10_factor", ":", "int", ")", "->", "List", "[", "float", "]", ":", "\n", "    ", "\"\"\"Adjusts dependent variable and variance for temperature.\"\"\"", "\n", "A", "=", "Q10", "**", "(", "Q10_factor", "*", "(", "model_temperature", "-", "exp_temperature", ")", "/", "10", ")", "\n", "\n", "# Dependent variable", "\n", "y", "=", "A", "*", "dataset", "[", "1", "]", "\n", "\n", "# Variance (convert back to SD to adjust)", "\n", "variance", "=", "(", "A", "*", "np", ".", "sqrt", "(", "dataset", "[", "2", "]", ")", ")", "**", "2", "\n", "\n", "return", "np", ".", "array", "(", "[", "dataset", "[", "0", "]", ",", "y", ",", "variance", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.IonChannelAcceptor.__init__": [[62, 64], ["pyabc.UniformAcceptor.__init__"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.IonChannelAcceptor.__init__"], ["def", "__init__", "(", "self", ",", "use_complete_history", ":", "bool", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "use_complete_history", "=", "use_complete_history", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.EfficientMultivariateNormalTransition.rvs": [[71, 83], ["utils.EfficientMultivariateNormalTransition.rvs_single", "pandas.DataFrame", "numpy.random.multivariate_normal", "utils.EfficientMultivariateNormalTransition.X.sample", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.ion_channel_pyabc.IonChannelModel.sample"], ["def", "rvs", "(", "self", ",", "size", "=", "None", ")", ":", "\n", "        ", "if", "size", "is", "None", ":", "\n", "            ", "return", "self", ".", "rvs_single", "(", ")", "\n", "", "else", ":", "\n", "            ", "sample", "=", "(", "self", ".", "X", ".", "sample", "(", "n", "=", "size", ",", "replace", "=", "True", ",", "weights", "=", "self", ".", "w", ")", "\n", ".", "iloc", "[", ":", "]", ")", "\n", "perturbed", "=", "(", "sample", "+", "\n", "np", ".", "random", ".", "multivariate_normal", "(", "\n", "np", ".", "zeros", "(", "self", ".", "cov", ".", "shape", "[", "0", "]", ")", ",", "\n", "self", ".", "cov", ",", "\n", "size", "=", "size", ")", ")", "\n", "return", "pd", ".", "DataFrame", "(", "perturbed", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.ion_channel_sum_stats_calculator": [[12, 26], ["range", "dict", "len", "zip"], "function", ["None"], ["def", "ion_channel_sum_stats_calculator", "(", "model_output", ":", "pd", ".", "DataFrame", ")", "->", "dict", ":", "\n", "    ", "\"\"\"Converts myokit simulation wrapper output into ABC-readable output.\n\n    Args:\n        model_output (pd.DataFrame): Simulation measurements\n\n    Returns:\n        dict: Mapping of number for each measurement.\n    \"\"\"", "\n", "if", "not", "model_output", ".", "empty", ":", "\n", "        ", "keys", "=", "range", "(", "len", "(", "model_output", ")", ")", "\n", "return", "dict", "(", "zip", "(", "keys", ",", "model_output", ".", "y", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.theoretical_population_size": [[28, 44], ["int", "numpy.log10"], "function", ["None"], ["", "", "def", "theoretical_population_size", "(", "sampling_density", ":", "int", ",", "\n", "n_parameters", ":", "int", ")", "->", "int", ":", "\n", "    ", "\"\"\"Calculate theoretical minimum particule population size.\n\n    Determines theoretical particle population size required to\n    sample hyperspace with sufficient fidelity.\n\n    Args:\n        sampling_density (int): Number of particles per dimension.\n        n_parameters (int): Number of parameters (= number of\n            of the parameter hyperspace).\n\n    Returns:\n        Theoretical minimum particle population size.\n    \"\"\"", "\n", "return", "int", "(", "(", "10", "**", "(", "np", ".", "log10", "(", "sampling_density", ")", ")", ")", "**", "n_parameters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.utils.weighted_cv": [[46, 54], ["df.apply", "abs", "pyabc.weighted_statistics.weighted_std", "pyabc.weighted_statistics.weighted_mean"], "function", ["None"], ["", "def", "weighted_cv", "(", "df", ",", "w", ",", "sample_size", "=", "None", ")", "->", "pd", ".", "DataFrame", ":", "\n", "    ", "\"\"\"Calculates weighted coefficient of variation.\"\"\"", "\n", "def", "weighted_cv_", "(", "points", ")", ":", "\n", "        ", "multiplier", "=", "1.", "\n", "if", "sample_size", "is", "not", "None", ":", "\n", "            ", "multipler", "=", "(", "1", "+", "1", "/", "(", "4", "*", "sample_size", ")", ")", "\n", "", "return", "multipler", "*", "weighted_std", "(", "points", ",", "w", ")", "/", "abs", "(", "weighted_mean", "(", "points", ",", "w", ")", ")", "\n", "", "return", "df", ".", "apply", "(", "weighted_cv_", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_sum_stats": [[259, 273], ["data.split_periodic", "max", "d.trim_left.trim_left", "range", "len", "range", "max", "len", "float"], "function", ["None"], ["", "sakakibara_rec_protocol", "=", "tmp_protocols", "[", "0", "]", "\n", "tsplit_rec", "=", "tmp_protocols", "[", "0", "]", ".", "characteristic_time", "(", ")", "\n", "for", "p", "in", "tmp_protocols", "[", "1", ":", "]", ":", "\n", "    ", "for", "e", "in", "p", ".", "events", "(", ")", ":", "\n", "        ", "sakakibara_rec_protocol", ".", "add_step", "(", "e", ".", "level", "(", ")", ",", "e", ".", "duration", "(", ")", ")", "\n", "\n", "", "", "tsplits_rec", "=", "[", "t", "+", "tstep1", "+", "tstep2", "+", "tpre", "for", "t", "in", "twaits_rec", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "tsplits_rec", ")", "-", "1", ")", ":", "\n", "    ", "tsplits_rec", "[", "i", "+", "1", "]", "+=", "tsplits_rec", "[", "i", "]", "\n", "\n", "", "def", "sakakibara_rec_sum_stats", "(", "data", ",", "fast", "=", "True", ",", "slow", "=", "True", ")", ":", "\n", "    ", "def", "double_exp", "(", "t", ",", "tau_r1", ",", "tau_r2", ",", "A0", ",", "A1", ",", "A2", ")", ":", "\n", "        ", "return", "A0", "-", "A1", "*", "np", ".", "exp", "(", "-", "t", "/", "tau_r1", ")", "-", "A2", "*", "np", ".", "exp", "(", "-", "t", "/", "tau_r2", ")", "\n", "", "output1", "=", "[", "]", "\n", "output2", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_sum_stats": [[365, 422], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "scipy.curve_fit", "numpy.sum", "numpy.sum", "min", "max", "numpy.exp", "numpy.exp", "Exception", "ina_sakakibara.sakakibara_inact_kin_sum_stats.double_exp"], "function", ["None"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_fast_sum_stats": [[423, 425], ["ina_sakakibara.sakakibara_inact_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_sum_stats"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_slow_sum_stats": [[426, 428], ["ina_sakakibara.sakakibara_inact_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_sum_stats"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec_sum_stats": [[686, 744], ["enumerate", "data.split_periodic", "d.split", "d_.trim", "d_.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "max", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "min", "max", "numpy.exp", "ina_sakakibara.sakakibara_inact_kin_sum_stats.double_exp"], "function", ["None"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec_fast_sum_stats": [[745, 747], ["ina_sakakibara.sakakibara_rec_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec_sum_stats"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec_slow_sum_stats": [[747, 749], ["ina_sakakibara.sakakibara_rec_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec_sum_stats"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha.max_curr": [[24, 26], ["max"], "function", ["None"], ["def", "max_curr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'iha.i_ha'", "]", ",", "key", "=", "abs", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha.fit_mono_exp": [[45, 65], ["warnings.catch_warnings", "warnings.simplefilter", "so.curve_fit", "float", "float", "numpy.exp"], "function", ["None"], ["def", "fit_mono_exp", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "curr", "=", "data", "[", "0", "]", "[", "'iha.i_ha'", "]", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "(", "t", "-", "t0", ")", "/", "1000", "for", "t", "in", "time", "]", "# Units in seconds.", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ")", "\n", "try", ":", "\n", "            ", "def", "single_exp", "(", "t", ",", "I_max", ",", "I_diff", ",", "tau", ")", ":", "\n", "                ", "return", "I_max", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "+", "I_diff", "\n", "", "[", "I_max", ",", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "\n", "single_exp", ",", "time", ",", "curr", ",", "bounds", "=", "(", "[", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", ",", "0", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "return", "[", "I_max", ",", "tau", "]", "\n", "", "except", ":", "\n", "            ", "return", "[", "float", "(", "\"inf\"", ")", ",", "float", "(", "\"inf\"", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha.takesecond": [[66, 68], ["None"], "function", ["None"], ["", "", "", "def", "takesecond", "(", "data", ",", "ind_var", ")", ":", "\n", "    ", "return", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ",", "False", "\n", "", "def", "normalise", "(", "data", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha.normalise": [[68, 73], ["max"], "function", ["None"], ["", "def", "normalise", "(", "data", ",", "ind_var", ")", ":", "\n", "    ", "sim_results", "=", "[", "d", "[", "0", "]", "for", "d", "in", "data", "]", "\n", "m", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "m", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.tail_curr": [[27, 29], ["None"], "function", ["None"], ["def", "tail_curr", "(", "data", ")", ":", "\n", "    ", "return", "data", "[", "0", "]", "[", "'ikr.i_Kr'", "]", "[", "-", "1", "]", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.max_gkr": [[45, 47], ["max"], "function", ["None"], ["def", "max_gkr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ikr.G_Kr'", "]", ",", "key", "=", "abs", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.normalise": [[47, 51], ["abs", "max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "max_cond", "=", "abs", "(", "max", "(", "sim_results", ",", "key", "=", "abs", ")", ")", "\n", "sim_results", "=", "[", "result", "/", "max_cond", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "act_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.measure_maxes": [[68, 73], ["maxes.append", "max"], "function", ["None"], ["", "def", "measure_maxes", "(", "data", ")", ":", "\n", "    ", "maxes", "=", "[", "]", "\n", "for", "d", "in", "data", ":", "\n", "        ", "maxes", ".", "append", "(", "max", "(", "d", "[", "'ikr.i_Kr'", "]", ",", "key", "=", "abs", ")", ")", "\n", "", "return", "maxes", "\n", "", "def", "fit_single_exp", "(", "data", ",", "xvar", "=", "intervals", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.fit_single_exp": [[73, 93], ["warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "so.curve_fit", "numpy.isclose", "Exception", "float", "numpy.exp"], "function", ["None"], ["", "def", "fit_single_exp", "(", "data", ",", "xvar", "=", "intervals", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "            ", "def", "single_exp", "(", "t", ",", "Ass", ",", "A", ",", "tau", ")", ":", "\n", "                ", "return", "Ass", "+", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "[", "_", ",", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "xvar", ",", "data", ",", "\n", "bounds", "=", "(", "[", "-", "50", ",", "-", "50", ",", "0", "]", ",", "\n", "[", "50", ",", "50", ",", "5000", "]", ")", ")", "\n", "\n", "if", "np", ".", "isclose", "(", "tau", ",", "5000", ")", ":", "\n", "                ", "raise", "Exception", "(", "'Optimisation hit bounds'", ")", "\n", "\n", "", "return", "tau", "\n", "", "except", "(", "Exception", ",", "OptimizeWarning", ",", "RuntimeWarning", ")", ":", "\n", "            ", "return", "float", "(", "\"inf\"", ")", "\n", "", "", "", "def", "map_return", "(", "func", ",", "iterable", ",", "ind_var", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.map_return": [[93, 98], ["out.append", "func"], "function", ["None"], ["", "", "", "def", "map_return", "(", "func", ",", "iterable", ",", "ind_var", "=", "None", ")", ":", "\n", "    ", "out", "=", "[", "]", "\n", "for", "i", "in", "iterable", ":", "\n", "        ", "out", ".", "append", "(", "func", "(", "i", ")", ")", "\n", "", "return", "out", ",", "False", "\n", "", "akin_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.double_exp_decay_fit": [[116, 157], ["warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.argwhere", "so.curve_fit", "abs", "abs", "numpy.isclose", "Exception", "max", "len", "len", "float", "float", "float", "numpy.exp", "numpy.exp"], "function", ["None"], ["def", "double_exp_decay_fit", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "            ", "curr", "=", "data", "[", "0", "]", "[", "'ikr.i_Kr'", "]", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "\n", "\n", "# Get peak current", "\n", "index", "=", "np", ".", "argwhere", "(", "np", ".", "isclose", "(", "curr", ",", "max", "(", "curr", ",", "key", "=", "abs", ")", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "index", "=", "index", "[", "0", "]", "[", "0", "]", "\n", "curr", "=", "curr", "[", "index", ":", "]", "\n", "\n", "# Zero time from peak current time", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "if", "len", "(", "time", ")", "==", "0", "or", "len", "(", "curr", ")", "==", "0", ":", "\n", "                ", "raise", "Exception", "(", "'Could not find peak current'", ")", "\n", "\n", "", "def", "sum_of_exp", "(", "t", ",", "Ass", ",", "Af", ",", "tauf", ",", "As", ",", "taus", ")", ":", "\n", "                ", "return", "(", "Ass", "+", "Af", "*", "np", ".", "exp", "(", "-", "t", "/", "tauf", ")", "+", "As", "*", "np", ".", "exp", "(", "-", "t", "/", "taus", ")", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "sum_of_exp", ",", "time", ",", "curr", ",", "\n", "p0", "=", "[", "1", ",", "1", ",", "5", ",", "0.2", ",", "70", "]", ",", "\n", "bounds", "=", "(", "[", "-", "50", ",", "-", "50", ",", "0", ",", "-", "50", ",", "50", "]", ",", "\n", "[", "50", ",", "50", ",", "100", ",", "50", ",", "2000", "]", ")", ")", "\n", "\n", "tauf", "=", "popt", "[", "2", "]", "\n", "taus", "=", "popt", "[", "4", "]", "\n", "Af", "=", "abs", "(", "popt", "[", "1", "]", ")", "\n", "As", "=", "abs", "(", "popt", "[", "3", "]", ")", "\n", "A_rel", "=", "Af", "/", "(", "Af", "+", "As", ")", "\n", "\n", "return", "(", "tauf", ",", "taus", ",", "A_rel", ")", "\n", "", "except", "(", "Exception", ",", "RuntimeWarning", ",", "OptimizeWarning", ",", "RuntimeError", ")", ":", "\n", "            ", "return", "(", "float", "(", "\"inf\"", ")", ",", "float", "(", "\"inf\"", ")", ",", "float", "(", "\"inf\"", ")", ")", "\n", "", "", "", "def", "takefirst", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "0", "]", "for", "d", "in", "data", "]", ",", "False", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.takefirst": [[157, 158], ["None"], "function", ["None"], ["", "", "", "def", "takefirst", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "0", "]", "for", "d", "in", "data", "]", ",", "False", "\n", "def", "takesecond", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ",", "False", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.takesecond": [[158, 159], ["None"], "function", ["None"], ["def", "takesecond", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ",", "False", "\n", "def", "takethird", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "2", "]", "for", "d", "in", "data", "]", ",", "False", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.takethird": [[159, 160], ["None"], "function", ["None"], ["def", "takethird", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "2", "]", "for", "d", "in", "data", "]", ",", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_generic.fit_exp_rising_phase": [[184, 221], ["warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.argwhere", "so.curve_fit", "numpy.isclose", "numpy.isclose", "Exception", "Exception", "float", "max", "len", "len", "numpy.exp"], "function", ["None"], ["def", "fit_exp_rising_phase", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "            ", "curr", "=", "data", "[", "0", "]", "[", "'ikr.i_Kr'", "]", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "\n", "\n", "# Get peak current", "\n", "index", "=", "np", ".", "argwhere", "(", "np", ".", "isclose", "(", "curr", ",", "max", "(", "curr", ",", "key", "=", "abs", ")", ")", ")", "\n", "\n", "# Take subset up to peak current", "\n", "index", "=", "index", "[", "0", "]", "[", "0", "]", "\n", "curr", "=", "curr", "[", ":", "index", "+", "1", "]", "\n", "\n", "# Zero time", "\n", "time", "=", "time", "[", ":", "index", "+", "1", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "if", "len", "(", "time", ")", "==", "0", "or", "len", "(", "curr", ")", "==", "0", ":", "\n", "                ", "raise", "Exception", "(", "'Could not find a peak current'", ")", "\n", "\n", "", "def", "single_exp", "(", "t", ",", "Ass", ",", "A", ",", "tau", ")", ":", "\n", "                ", "return", "Ass", "+", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "[", "_", ",", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "curr", ",", "\n", "p0", "=", "[", "1", ",", "-", "1", ",", "5", "]", ",", "\n", "bounds", "=", "(", "[", "-", "50", ",", "-", "50", ",", "0", "]", ",", "\n", "[", "50", ",", "50", ",", "100", "]", ")", ")", "\n", "if", "np", ".", "isclose", "(", "tau", ",", "100", ")", ":", "\n", "                ", "raise", "Exception", "(", "'Optimisation hit bounds'", ")", "\n", "\n", "", "return", "tau", "\n", "", "except", "(", "Exception", ",", "OptimizeWarning", ",", "RuntimeWarning", ")", ":", "\n", "            ", "return", "float", "(", "\"inf\"", ")", "\n", "", "", "", "inact_kin_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha_generic.max_curr": [[25, 27], ["max"], "function", ["None"], ["def", "max_curr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'iha.i_ha'", "]", ",", "key", "=", "abs", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha_generic.fit_mono_exp": [[46, 66], ["warnings.catch_warnings", "warnings.simplefilter", "so.curve_fit", "float", "float", "numpy.exp"], "function", ["None"], ["def", "fit_mono_exp", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "curr", "=", "data", "[", "0", "]", "[", "'iha.i_ha'", "]", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "(", "t", "-", "t0", ")", "/", "1000", "for", "t", "in", "time", "]", "# Units in seconds.", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "try", ":", "\n", "            ", "def", "single_exp", "(", "t", ",", "I_max", ",", "I_diff", ",", "tau", ")", ":", "\n", "                ", "return", "I_max", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "+", "I_diff", "\n", "", "[", "I_max", ",", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "\n", "single_exp", ",", "time", ",", "curr", ",", "bounds", "=", "(", "[", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", ",", "0", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "return", "[", "I_max", ",", "tau", "]", "\n", "", "except", ":", "\n", "            ", "return", "[", "float", "(", "\"inf\"", ")", ",", "float", "(", "\"inf\"", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha_generic.takesecond": [[67, 69], ["None"], "function", ["None"], ["", "", "", "def", "takesecond", "(", "data", ",", "ind_var", ")", ":", "\n", "    ", "return", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ",", "False", "\n", "", "def", "max_gha", "(", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha_generic.max_gha": [[69, 71], ["max"], "function", ["None"], ["", "def", "max_gha", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'iha.G_ha'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha_generic.normalise": [[71, 76], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "#sim_results = [d[0] for d in data]", "\n", "    ", "m", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "m", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ik1.ss_curr": [[28, 30], ["None"], "function", ["None"], ["def", "ss_curr", "(", "data", ")", ":", "\n", "    ", "return", "data", "[", "0", "]", "[", "'ik1.i_K1'", "]", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat_generic.max_icat": [[24, 27], ["max", "abs"], "function", ["None"], ["def", "max_icat", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'icat.i_CaT'", "]", ",", "\n", "key", "=", "lambda", "x", ":", "abs", "(", "x", ")", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat_generic.max_gcat": [[41, 43], ["max"], "function", ["None"], ["def", "max_gcat", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'icat.G_CaT'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat_generic.normalise": [[43, 47], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "cond_max", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "cond_max", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "act_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat_generic.ratio_cond": [[69, 71], ["max", "max"], "function", ["None"], ["def", "ratio_cond", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "1", "]", "[", "'icat.G_CaT'", "]", ")", "/", "max", "(", "data", "[", "0", "]", "[", "'icat.G_CaT'", "]", ")", "\n", "", "rec_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat_generic.interpolate_align": [[86, 95], ["min", "abs", "max", "numpy.interp"], "function", ["None"], ["def", "interpolate_align", "(", "data", ",", "time", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "simtime", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "\n", "simtime_min", "=", "min", "(", "simtime", ")", "\n", "simtime", "=", "[", "t", "-", "simtime_min", "for", "t", "in", "simtime", "]", "\n", "curr", "=", "data", "[", "0", "]", "[", "'icat.i_CaT'", "]", "\n", "max_curr", "=", "abs", "(", "max", "(", "curr", ",", "key", "=", "abs", ")", ")", "\n", "curr", "=", "[", "c", "/", "max_curr", "for", "c", "in", "curr", "]", "\n", "return", "np", ".", "interp", "(", "time", ",", "simtime", ",", "curr", ")", ",", "False", "\n", "", "trace_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina.peak_curr": [[60, 62], ["max"], "function", ["None"], ["def", "peak_curr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina.max_gna": [[75, 77], ["max"], "function", ["None"], ["def", "max_gna", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ina.G_Na'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina.normalise": [[77, 81], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "m", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "m", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "act_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina.ratio_cond": [[103, 105], ["max", "max"], "function", ["None"], ["def", "ratio_cond", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "1", "]", "[", "'ina.G_Na'", "]", ")", "/", "max", "(", "data", "[", "0", "]", "[", "'ina.G_Na'", "]", ")", "\n", "", "rec_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina.interpolate_align": [[120, 129], ["min", "abs", "max", "numpy.interp"], "function", ["None"], ["def", "interpolate_align", "(", "data", ",", "time", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "simtime", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "\n", "simtime_min", "=", "min", "(", "simtime", ")", "\n", "simtime", "=", "[", "t", "-", "simtime_min", "for", "t", "in", "simtime", "]", "\n", "curr", "=", "data", "[", "0", "]", "[", "'ina.i_Na'", "]", "\n", "max_curr", "=", "abs", "(", "max", "(", "curr", ",", "key", "=", "abs", ")", ")", "\n", "curr", "=", "[", "c", "/", "max_curr", "for", "c", "in", "curr", "]", "\n", "return", "np", ".", "interp", "(", "time", ",", "simtime", ",", "curr", ")", ",", "False", "\n", "", "trace_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikur_generic.max_ikur": [[83, 85], ["max"], "function", ["None"], ["def", "max_ikur", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ikur.G_Kur'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikur_generic.rising_exponential_fit": [[39, 68], ["numpy.diff", "warnings.catch_warnings", "warnings.simplefilter", "so.curve_fit", "numpy.argwhere", "numpy.argwhere", "float", "numpy.exp"], "function", ["None"], ["def", "rising_exponential_fit", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "# First subset so only rising phase of current", "\n", "curr", "=", "data", "[", "0", "]", "[", "'ikur.i_Kur'", "]", "\n", "curr_diff", "=", "np", ".", "diff", "(", "curr", ")", "\n", "index", "=", "0", "\n", "if", "curr_diff", "[", "0", "]", ">", "0", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", "<", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", ">", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "curr", "=", "curr", "[", ":", "index", "+", "1", "]", "\n", "i0", "=", "curr", "[", "0", "]", "\n", "curr", "=", "[", "i", "-", "i0", "for", "i", "in", "curr", "]", "\n", "# Get time and move to zero", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "[", ":", "index", "+", "1", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ")", "\n", "try", ":", "\n", "            ", "def", "single_exp", "(", "t", ",", "I_max", ",", "tau", ")", ":", "\n", "                ", "return", "I_max", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "\n", "", "[", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "curr", ")", "\n", "return", "tau", "\n", "", "except", ":", "\n", "            ", "return", "float", "(", "\"inf\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikur_generic.normalise": [[85, 89], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "cond_max", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "cond_max", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "inact_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikur_generic.ratio_ikur": [[103, 105], ["max", "max"], "function", ["None"], ["def", "ratio_ikur", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "1", "]", "[", "'ikur.G_Kur'", "]", ")", "/", "max", "(", "data", "[", "0", "]", "[", "'ikur.G_Kur'", "]", ")", "\n", "", "rec_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_markov.dias_iv_tau_sum_stats": [[52, 131], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs", "numpy.exp", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "scipy.curve_fit", "numpy.sum", "numpy.sum", "scipy.curve_fit", "numpy.sum", "numpy.sum", "numpy.exp", "ina_markov.dias_iv_tau_sum_stats.activation_exp"], "function", ["None"], ["def", "dias_iv_tau_sum_stats", "(", "data", ",", "ss", "=", "True", ",", "taua", "=", "True", ",", "taui", "=", "True", ")", ":", "\n", "    ", "out1", "=", "[", "]", "\n", "out2", "=", "[", "]", "\n", "out3", "=", "[", "]", "\n", "def", "activation_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "**", "3", "+", "A0", "\n", "", "def", "inactivation_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "+", "A0", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "5100", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5000", ",", "5100", ",", "adjust", "=", "True", ")", "\n", "curr", "=", "d", "[", "'ina.i_Na'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "curr", ")", ")", "\n", "if", "ss", ":", "\n", "            ", "out1", "=", "out1", "+", "[", "curr", "[", "index", "]", "]", "\n", "", "if", "(", "taua", "and", "\n", "d", "[", "'membrane.V'", "]", "[", "0", "]", ">=", "vsteps_taua", "[", "0", "]", "and", "\n", "d", "[", "'membrane.V'", "]", "[", "0", "]", "<=", "vsteps_taua", "[", "-", "1", "]", ")", ":", "\n", "# Separate activation portion", "\n", "            ", "time", "=", "d", "[", "'engine.time'", "]", "\n", "rise", "=", "curr", "[", ":", "index", "]", "\n", "time", "=", "time", "[", ":", "index", "]", "\n", "# fit to activation exponential", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "                ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                    ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "activation_exp", ",", "time", ",", "rise", ",", "\n", "p0", "=", "[", "0.5", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "fit", "=", "[", "activation_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "\n", "# calculate r squared of fit", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "rise", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "rise", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "rise", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "taua", "=", "popt", "[", "0", "]", "\n", "\n", "# only accept reasonable curve fits", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "out2", "=", "out2", "+", "[", "taua", "]", "\n", "", "else", ":", "\n", "                        ", "out2", "=", "out2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "except", ":", "\n", "                    ", "out2", "=", "out2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "if", "(", "taui", "and", "\n", "d", "[", "'membrane.V'", "]", "[", "0", "]", ">=", "vsteps_taui", "[", "0", "]", "and", "\n", "d", "[", "'membrane.V'", "]", "[", "0", "]", "<=", "vsteps_taui", "[", "-", "1", "]", ")", ":", "\n", "# Separate decay portion", "\n", "            ", "time", "=", "d", "[", "'engine.time'", "]", "\n", "decay", "=", "curr", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "# fit to single exponential", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "                ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                    ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "inactivation_exp", ",", "time", ",", "decay", ",", "\n", "p0", "=", "[", "2.", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "fit", "=", "[", "inactivation_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "\n", "# calculate r squared of fit", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "decay", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "decay", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "decay", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "taui", "=", "popt", "[", "0", "]", "\n", "\n", "# only accept reasonable curve fits", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "out3", "=", "out3", "+", "[", "taui", "]", "\n", "", "else", ":", "\n", "                        ", "out3", "=", "out3", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "except", ":", "\n", "                    ", "out3", "=", "out3", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "", "return", "out1", "+", "out2", "+", "out3", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_markov.dias_iv_sum_stats": [[132, 134], ["ina_markov.dias_iv_tau_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_markov.dias_iv_tau_sum_stats"], ["", "def", "dias_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "dias_iv_tau_sum_stats", "(", "data", ",", "ss", "=", "True", ",", "tau", "=", "False", ")", "\n", "", "def", "dias_taua_sum_stats", "(", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_markov.dias_taua_sum_stats": [[134, 136], ["ina_markov.dias_iv_tau_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_markov.dias_iv_tau_sum_stats"], ["", "def", "dias_taua_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "dias_iv_tau_sum_stats", "(", "data", ",", "ss", "=", "False", ",", "taua", "=", "True", ",", "taui", "=", "False", ")", "\n", "", "def", "dias_taui_sum_stats", "(", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_markov.dias_taui_sum_stats": [[136, 138], ["ina_markov.dias_iv_tau_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_markov.dias_iv_tau_sum_stats"], ["", "def", "dias_taui_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "dias_iv_tau_sum_stats", "(", "data", ",", "ss", "=", "False", ",", "taua", "=", "False", ",", "taui", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_markov.nakajima_inact_sum_stats": [[198, 208], ["data.split_periodic", "range", "d.trim.trim", "len", "max"], "function", ["None"], ["def", "nakajima_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "5600", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5500", ",", "5600", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "]", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "0", "]", "\n", "", "output", "[", "0", "]", "=", "1.", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_markov.zhang_rec_sum_stats": [[244, 279], ["enumerate", "data.split", "dsplit.append", "numpy.max", "numpy.max", "split_temp[].trim", "d.trim", "d.trim", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "def", "zhang_rec_sum_stats", "(", "data", ")", ":", "\n", "    ", "dsplit", "=", "[", "]", "\n", "tkey", "=", "'engine.time'", "\n", "# First need to split data by differing time periods", "\n", "for", "i", ",", "time", "in", "enumerate", "(", "split_times", ")", ":", "\n", "        ", "split_temp", "=", "data", ".", "split", "(", "time", ")", "\n", "dsplit", ".", "append", "(", "\n", "split_temp", "[", "0", "]", ".", "trim", "(", "split_temp", "[", "0", "]", "[", "tkey", "]", "[", "0", "]", "+", "3000", ",", "\n", "split_temp", "[", "0", "]", "[", "tkey", "]", "[", "0", "]", "+", "3040", "+", "tsteps_rec", "[", "i", "]", ",", "\n", "adjust", "=", "True", ")", "\n", ")", "\n", "data", "=", "split_temp", "[", "1", "]", "\n", "\n", "", "output", "=", "[", "]", "\n", "# Process data in each time period", "\n", "for", "d", "in", "dsplit", ":", "\n", "# Interested in two 20ms pulses", "\n", "        ", "pulse1", "=", "d", ".", "trim", "(", "0", ",", "20", ",", "adjust", "=", "True", ")", "[", "'ina.i_Na'", "]", "\n", "endtime", "=", "d", "[", "tkey", "]", "[", "-", "1", "]", "\n", "pulse2", "=", "d", ".", "trim", "(", "endtime", "-", "20", ",", "endtime", ",", "adjust", "=", "True", ")", "[", "'ina.i_Na'", "]", "\n", "\n", "max1", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "pulse1", ")", ")", "\n", "max2", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "pulse2", ")", ")", "\n", "output", "=", "output", "+", "[", "max2", "/", "max1", "]", "\n", "#with warnings.catch_warnings():", "\n", "#    warnings.simplefilter('error', RuntimeWarning)", "\n", "#    try:", "\n", "#        wait = d.trim(20, endtime-20, adjust=True)['ina.i_Na']", "\n", "#        if np.max(np.abs(wait))>=max2:", "\n", "#            output = output+[float('inf')]", "\n", "#        else:", "\n", "#            output = output+[max2/max1]", "\n", "#    except:", "\n", "#        output = output+[float('inf')]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_generic.peak_curr": [[24, 26], ["max"], "function", ["None"], ["def", "peak_curr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ical.i_CaL'", "]", ",", "key", "=", "abs", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_generic.max_gcal": [[40, 42], ["max"], "function", ["None"], ["def", "max_gcal", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ical.G_CaL'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_generic.normalise": [[42, 46], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "m", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "m", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "act_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_generic.gcal_inact_max": [[57, 59], ["max"], "function", ["None"], ["def", "gcal_inact_max", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ical.G_CaL'", "]", ",", "key", "=", "abs", ")", "\n", "", "inact_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_generic.ratio_cond": [[71, 73], ["max", "max"], "function", ["None"], ["def", "ratio_cond", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "1", "]", "[", "'ical.G_CaL'", "]", ")", "/", "max", "(", "data", "[", "0", "]", "[", "'ical.G_CaL'", "]", ")", "\n", "", "rec_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha_markov.sartiani_iv_sum_stats": [[46, 75], ["data.split_periodic", "d.trim.trim", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "float"], "function", ["None"], ["def", "sartiani_iv_sum_stats", "(", "data", ")", ":", "\n", "# Current amplitudes are measured by fitting a mono exponential", "\n", "# decay function to the activating trace", "\n", "# and subtracting the", "\n", "# steady-state from the current at the beginning of the tail step.", "\n", "    ", "output", "=", "[", "]", "\n", "def", "decay", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "+", "A0", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "7500", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "6500", ",", "7500", ",", "adjust", "=", "True", ")", "\n", "\n", "curr", "=", "d", "[", "'iha.i_ha'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "try", ":", "\n", "                ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "decay", ",", "\n", "time", ",", "curr", ",", "\n", "p0", "=", "[", "1000", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "steady_state", "=", "popt", "[", "2", "]", "\n", "amplitude", "=", "d", "[", "'iha.i_ha'", "]", "[", "0", "]", "-", "steady_state", "\n", "output", "=", "output", "+", "[", "amplitude", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.iha_markov.sartiani_act_sum_stats": [[117, 153], ["data.split_periodic", "max", "d.trim", "d.trim", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "scipy.curve_fit", "numpy.exp", "iha_markov.sartiani_act_sum_stats.simple_exp"], "function", ["None"], ["", "def", "sartiani_act_sum_stats", "(", "data", ")", ":", "\n", "    ", "out_ss", "=", "[", "]", "\n", "out_tau", "=", "[", "]", "\n", "def", "simple_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "+", "A0", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "7500", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "activating_trace", "=", "d", ".", "trim", "(", "5000", ",", "6500", ",", "adjust", "=", "True", ")", "\n", "curr_act", "=", "activating_trace", "[", "'iha.i_ha'", "]", "\n", "time_act", "=", "activating_trace", "[", "'engine.time'", "]", "\n", "\n", "tail_trace", "=", "d", ".", "trim", "(", "6500", ",", "7500", ",", "adjust", "=", "True", ")", "\n", "curr_tail", "=", "tail_trace", "[", "'iha.i_ha'", "]", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "try", ":", "\n", "                ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "simple_exp", ",", "\n", "time_act", ",", "\n", "curr_act", ",", "\n", "p0", "=", "[", "1000.", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "tau_a", "=", "popt", "[", "0", "]", "\n", "steady_state", "=", "popt", "[", "1", "]", "+", "popt", "[", "2", "]", "\n", "amplitude", "=", "curr_tail", "[", "0", "]", "-", "steady_state", "\n", "\n", "fit", "=", "[", "simple_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time_act", "]", "\n", "out_ss", "=", "out_ss", "+", "[", "amplitude", "]", "\n", "out_tau", "=", "out_tau", "+", "[", "tau_a", "]", "\n", "", "except", ":", "\n", "                ", "out_ss", "=", "out_ss", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "out_tau", "=", "out_tau", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "\n", "", "", "", "max_out_ss", "=", "max", "(", "out_ss", ",", "key", "=", "abs", ")", "\n", "out_ss", "=", "[", "o", "/", "max_out_ss", "for", "o", "in", "out_ss", "]", "\n", "return", "out_ss", "+", "out_tau", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_markov.toyoda_iv_sum_stats": [[36, 42], ["data.split_periodic", "d.trim.trim"], "function", ["None"], ["def", "toyoda_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5000", ",", "6000", ",", "adjust", "=", "True", ")", "\n", "output", "=", "output", "+", "[", "d", "[", "'ikr.i_Kr'", "]", "[", "-", "1", "]", "]", "# / max_observed_peak_iv]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_markov.toyoda_taua_sum_stats": [[88, 115], ["data.split_periodic", "enumerate", "d.split", "trace.trim.trim", "peak_tail.append", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "scipy.curve_fit", "numpy.exp", "max", "float"], "function", ["None"], ["", "def", "toyoda_taua_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "single_exp", "(", "t", ",", "taua", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "taua", ")", ")", "+", "A0", "\n", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "characteristic_time", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "peak_tail", "=", "[", "]", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "tsplit", ")", ":", "\n", "            ", "trace", ",", "d", "=", "d", ".", "split", "(", "t", ")", "\n", "trace", "=", "trace", ".", "trim", "(", "t", "-", "5000", ",", "t", ")", "\n", "peak_tail", ".", "append", "(", "max", "(", "trace", "[", "'ikr.i_Kr'", "]", ")", "-", "trace", "[", "'ikr.i_Kr'", "]", "[", "-", "1", "]", ")", "\n", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "intervals", ",", "\n", "peak_tail", ",", "\n", "p0", "=", "[", "500", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "taua", "=", "popt", "[", "0", "]", "\n", "output", "=", "output", "+", "[", "taua", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_markov.toyoda_deact_single_exp_sum_stats": [[154, 187], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "Exception", "len", "len", "float"], "function", ["None"], ["def", "toyoda_deact_single_exp_sum_stats", "(", "data", ")", ":", "\n", "    ", "out", "=", "[", "]", "\n", "\n", "def", "single_exp", "(", "t", ",", "tauf", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tauf", ")", "+", "A0", "\n", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "11000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5000", ",", "6000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ikr.i_Kr'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "10.", ",", "1.0", ",", "0.0", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "taud", "=", "popt", "[", "0", "]", "\n", "out", "=", "out", "+", "[", "taud", "]", "\n", "", "except", ":", "\n", "                ", "out", "=", "out", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_markov.toyoda_deact_double_exp_sum_stats": [[188, 235], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.exp", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "max", "scipy.curve_fit", "numpy.exp", "numpy.exp", "Exception", "len", "len", "float", "float", "float"], "function", ["None"], ["", "def", "toyoda_deact_double_exp_sum_stats", "(", "data", ")", ":", "\n", "    ", "out1", "=", "[", "]", "\n", "out2", "=", "[", "]", "\n", "out3", "=", "[", "]", "\n", "\n", "def", "simple_exp", "(", "t", ",", "tauf", ",", "A", ")", ":", "\n", "        ", "return", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tauf", ")", "\n", "\n", "", "def", "double_exp", "(", "t", ",", "tauf", ",", "taus", ",", "Frac", ",", "Amp", ")", ":", "\n", "        ", "return", "Amp", "*", "(", "Frac", "*", "np", ".", "exp", "(", "-", "t", "/", "tauf", ")", "+", "(", "1", "-", "Frac", ")", "*", "np", ".", "exp", "(", "-", "t", "/", "taus", ")", ")", "\n", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "11000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5000", ",", "6000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ikr.i_Kr'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "double_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "10.", ",", "1000.", ",", "0.5", ",", "1.0", "]", ",", "\n", "bounds", "=", "(", "[", "1.", ",", "100.", ",", "0.0", ",", "0.", "]", ",", "\n", "[", "1000.", ",", "5000.", ",", "1.0", ",", "np", ".", "inf", "]", ")", ")", "\n", "taui_f", "=", "popt", "[", "0", "]", "\n", "taui_s", "=", "popt", "[", "1", "]", "\n", "taui_relamp", "=", "popt", "[", "2", "]", "\n", "out1", "=", "out1", "+", "[", "taui_f", "]", "\n", "out2", "=", "out2", "+", "[", "taui_s", "]", "\n", "out3", "=", "out3", "+", "[", "taui_relamp", "]", "\n", "", "except", ":", "\n", "                ", "out1", "=", "out1", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "out2", "=", "out2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "out3", "=", "out3", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "output", "=", "out1", "+", "out2", "+", "out3", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_markov.toyoda_trec_sum_stats": [[289, 319], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "scipy.curve_fit", "numpy.exp", "Exception", "len", "len", "float"], "function", ["None"], ["", "def", "toyoda_trec_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "single_exp", "(", "t", ",", "taur", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "taur", ")", ")", "+", "A0", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "7000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "6000", ",", "7000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ikr.i_Kr'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "# only initial increasing phase of tail current", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "current", "=", "current", "[", ":", "index", "+", "1", "]", "\n", "time", "=", "time", "[", ":", "index", "+", "1", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "#imax = max(current, key=abs)", "\n", "#current = [c_/imax for c_ in current]", "\n", "                ", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'failed sim'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "1.", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "taur", "=", "popt", "[", "0", "]", "\n", "output", "=", "output", "+", "[", "taur", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr_markov.toyoda_inact_sum_stats": [[368, 376], ["data.split_periodic", "numpy.max", "d.trim.trim", "max"], "function", ["None"], ["", "def", "toyoda_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11010", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "6010", ",", "11010", ",", "adjust", "=", "True", ")", "\n", "output", "=", "output", "+", "[", "max", "(", "d", "[", "'ikr.i_Kr'", "]", ")", "]", "\n", "", "max_curr", "=", "np", ".", "max", "(", "output", ")", "\n", "output", "=", "[", "curr", "/", "max_curr", "for", "curr", "in", "output", "]", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat.max_icat": [[24, 27], ["max", "abs"], "function", ["None"], ["def", "max_icat", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'icat.i_CaT'", "]", ",", "\n", "key", "=", "lambda", "x", ":", "abs", "(", "x", ")", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat.max_gcat": [[41, 43], ["max"], "function", ["None"], ["def", "max_gcat", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'icat.G_CaT'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat.normalise": [[43, 47], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "cond_max", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "cond_max", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "act_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat.ratio_cond": [[69, 71], ["max", "max"], "function", ["None"], ["def", "ratio_cond", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "1", "]", "[", "'icat.G_CaT'", "]", ")", "/", "max", "(", "data", "[", "0", "]", "[", "'icat.G_CaT'", "]", ")", "\n", "", "rec_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat.interpolate_align": [[86, 95], ["min", "abs", "max", "numpy.interp"], "function", ["None"], ["def", "interpolate_align", "(", "data", ",", "time", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "simtime", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "\n", "simtime_min", "=", "min", "(", "simtime", ")", "\n", "simtime", "=", "[", "t", "-", "simtime_min", "for", "t", "in", "simtime", "]", "\n", "curr", "=", "data", "[", "0", "]", "[", "'icat.i_CaT'", "]", "\n", "max_curr", "=", "abs", "(", "max", "(", "curr", ",", "key", "=", "abs", ")", ")", "\n", "curr", "=", "[", "c", "/", "max_curr", "for", "c", "in", "curr", "]", "\n", "return", "np", ".", "interp", "(", "time", ",", "simtime", ",", "curr", ")", ",", "False", "\n", "", "trace_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito.peak_curr": [[37, 39], ["max"], "function", ["None"], ["def", "peak_curr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ito.i_to'", "]", ",", "key", "=", "abs", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito.fit_exp_rising_phase": [[52, 80], ["numpy.diff", "warnings.catch_warnings", "warnings.simplefilter", "so.curve_fit", "numpy.argwhere", "numpy.argwhere", "float", "numpy.exp"], "function", ["None"], ["def", "fit_exp_rising_phase", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "# Only want rising phase of current", "\n", "curr", "=", "data", "[", "0", "]", "[", "'ito.i_to'", "]", "\n", "curr_diff", "=", "np", ".", "diff", "(", "curr", ")", "\n", "index", "=", "0", "\n", "if", "curr_diff", "[", "0", "]", ">", "0", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", "<", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", ">", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "curr", "=", "curr", "[", ":", "index", "+", "1", "]", "\n", "i0", "=", "curr", "[", "0", "]", "\n", "curr", "=", "[", "i", "-", "i0", "for", "i", "in", "curr", "]", "\n", "# Corresponding time variable", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "[", ":", "index", "+", "1", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ")", "\n", "try", ":", "\n", "            ", "def", "single_exp", "(", "t", ",", "I_max", ",", "tau", ")", ":", "\n", "                ", "return", "I_max", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "\n", "", "[", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "curr", ")", "\n", "return", "tau", "\n", "", "except", ":", "\n", "            ", "return", "float", "(", "\"inf\"", ")", "\n", "", "", "", "act_kin_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito.max_gto": [[94, 96], ["max"], "function", ["None"], ["def", "max_gto", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ito.G_to'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito.normalise": [[96, 100], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "m", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "m", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "inact_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_generic.peak_curr": [[24, 26], ["max"], "function", ["None"], ["def", "peak_curr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_generic.max_gna": [[39, 41], ["max"], "function", ["None"], ["def", "max_gna", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ina.G_Na'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_generic.normalise": [[41, 45], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "m", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "m", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "act_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_generic.ratio_cond": [[67, 69], ["max", "max"], "function", ["None"], ["def", "ratio_cond", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "1", "]", "[", "'ina.G_Na'", "]", ")", "/", "max", "(", "data", "[", "0", "]", "[", "'ina.G_Na'", "]", ")", "\n", "", "rec_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_generic.interpolate_align": [[84, 93], ["min", "abs", "max", "numpy.interp"], "function", ["None"], ["def", "interpolate_align", "(", "data", ",", "time", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "simtime", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "\n", "simtime_min", "=", "min", "(", "simtime", ")", "\n", "simtime", "=", "[", "t", "-", "simtime_min", "for", "t", "in", "simtime", "]", "\n", "curr", "=", "data", "[", "0", "]", "[", "'ina.i_Na'", "]", "\n", "max_curr", "=", "abs", "(", "max", "(", "curr", ",", "key", "=", "abs", ")", ")", "\n", "curr", "=", "[", "c", "/", "max_curr", "for", "c", "in", "curr", "]", "\n", "return", "np", ".", "interp", "(", "time", ",", "simtime", ",", "curr", ")", ",", "False", "\n", "", "trace_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.whole_cell.ap_sum_stats": [[44, 82], ["data.trim_left", "numpy.min", "numpy.argmax", "numpy.max", "numpy.argmax", "numpy.argmax", "numpy.max", "numpy.gradient", "numpy.gradient", "numpy.max", "float", "data.trim_left.trim_left", "float", "data.trim_left.trim_left", "float", "float", "numpy.argwhere", "numpy.argwhere", "numpy.argwhere", "numpy.max"], "function", ["None"], ["def", "ap_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "d", "=", "data", ".", "trim_left", "(", "1000", "*", "100", ",", "adjust", "=", "True", ")", "\n", "t", "=", "d", "[", "'engine.time'", "]", "\n", "v", "=", "d", "[", "'membrane.V'", "]", "\n", "CaT", "=", "d", "[", "'calcium.Ca_i'", "]", "\n", "# minimum diastolic potential", "\n", "mdp", "=", "np", ".", "min", "(", "v", ")", "\n", "# maximum upstroke gradient", "\n", "dvdt_max_idx", "=", "np", ".", "argmax", "(", "np", ".", "gradient", "(", "v", ",", "t", ")", ")", "\n", "dvdt_max", "=", "np", ".", "max", "(", "np", ".", "gradient", "(", "v", ",", "t", ")", ")", "\n", "# amplitude", "\n", "peak_idx", "=", "np", ".", "argmax", "(", "v", ")", "\n", "amp", "=", "np", ".", "max", "(", "v", ")", "-", "mdp", "\n", "# action potential duration (90% repolarisation)", "\n", "try", ":", "\n", "        ", "decay", "=", "d", ".", "trim_left", "(", "t", "[", "peak_idx", "]", ")", "[", "'membrane.V'", "]", "\n", "apd90_idx", "=", "np", ".", "argwhere", "(", "decay", "<", "np", ".", "max", "(", "v", ")", "-", "0.9", "*", "amp", ")", "[", "0", "]", "[", "0", "]", "\n", "apd90", "=", "t", "[", "peak_idx", "+", "apd90_idx", "]", "-", "t", "[", "dvdt_max_idx", "]", "\n", "", "except", ":", "\n", "        ", "apd90", "=", "float", "(", "'inf'", ")", "\n", "# CaT time to peak", "\n", "", "peak_cat_idx", "=", "np", ".", "argmax", "(", "CaT", ")", "\n", "cat_t2p", "=", "t", "[", "peak_cat_idx", "]", "-", "2", "# offset 2ms", "\n", "if", "cat_t2p", "<", "0", ":", "\n", "        ", "cat_t2p", "=", "float", "(", "'inf'", ")", "\n", "# CaT time to repolarisation 50% and 90%", "\n", "", "peak_cat", "=", "np", ".", "max", "(", "CaT", ")", "\n", "try", ":", "\n", "        ", "decay", "=", "d", ".", "trim_left", "(", "t", "[", "peak_cat_idx", "]", ")", "[", "'calcium.Ca_i'", "]", "\n", "cat_r50_idx", "=", "np", ".", "argwhere", "(", "decay", "<", "peak_cat", "-", "0.5", "*", "CaT", "[", "0", "]", ")", "[", "0", "]", "[", "0", "]", "\n", "cat_r50", "=", "t", "[", "peak_cat_idx", "+", "cat_r50_idx", "]", "-", "2", "\n", "cat_r90_idx", "=", "np", ".", "argwhere", "(", "decay", "<", "peak_cat", "-", "0.9", "*", "CaT", "[", "0", "]", ")", "[", "0", "]", "[", "0", "]", "\n", "cat_r90", "=", "t", "[", "peak_cat_idx", "+", "cat_r90_idx", "]", "-", "2", "\n", "", "except", ":", "\n", "        ", "cat_r50", "=", "float", "(", "'inf'", ")", "\n", "cat_r90", "=", "float", "(", "'inf'", ")", "\n", "", "return", "[", "mdp", ",", "dvdt_max", ",", "amp", ",", "apd90", ",", "cat_t2p", ",", "cat_r50", ",", "cat_r90", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikur.max_ikur": [[94, 96], ["max"], "function", ["None"], ["def", "max_ikur", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ikur.G_Kur'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikur.rising_exponential_fit": [[50, 79], ["numpy.diff", "warnings.catch_warnings", "warnings.simplefilter", "so.curve_fit", "numpy.argwhere", "numpy.argwhere", "float", "numpy.exp"], "function", ["None"], ["def", "rising_exponential_fit", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "# First subset so only rising phase of current", "\n", "curr", "=", "data", "[", "0", "]", "[", "'ikur.i_Kur'", "]", "\n", "curr_diff", "=", "np", ".", "diff", "(", "curr", ")", "\n", "index", "=", "0", "\n", "if", "curr_diff", "[", "0", "]", ">", "0", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", "<", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", ">", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "curr", "=", "curr", "[", ":", "index", "+", "1", "]", "\n", "i0", "=", "curr", "[", "0", "]", "\n", "curr", "=", "[", "i", "-", "i0", "for", "i", "in", "curr", "]", "\n", "# Get time and move to zero", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "[", ":", "index", "+", "1", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ")", "\n", "try", ":", "\n", "            ", "def", "single_exp", "(", "t", ",", "I_max", ",", "tau", ")", ":", "\n", "                ", "return", "I_max", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "\n", "", "[", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "curr", ")", "\n", "return", "tau", "\n", "", "except", ":", "\n", "            ", "return", "float", "(", "\"inf\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikur.normalise": [[96, 100], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "cond_max", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "cond_max", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "inact_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikur.ratio_ikur": [[114, 116], ["max", "max"], "function", ["None"], ["def", "ratio_ikur", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "1", "]", "[", "'ikur.G_Kur'", "]", ")", "/", "max", "(", "data", "[", "0", "]", "[", "'ikur.G_Kur'", "]", ")", "\n", "", "rec_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ik1_markov.goldoni_iv_sum_stats": [[31, 37], ["data.split_periodic", "d.trim.trim", "max"], "function", ["None"], ["def", "goldoni_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "out_peak", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "5100", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5000", ",", "5100", ",", "adjust", "=", "True", ")", "\n", "out_peak", "=", "out_peak", "+", "[", "max", "(", "d", "[", "'ik1.i_k1'", "]", ",", "key", "=", "abs", ")", "]", "\n", "", "return", "out_peak", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.tail_curr": [[54, 56], ["None"], "function", ["None"], ["def", "tail_curr", "(", "data", ")", ":", "\n", "    ", "return", "data", "[", "0", "]", "[", "'ikr.i_Kr'", "]", "[", "-", "1", "]", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.max_gkr": [[72, 74], ["max"], "function", ["None"], ["def", "max_gkr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ikr.G_Kr'", "]", ",", "key", "=", "abs", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.normalise": [[74, 78], ["abs", "max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "max_cond", "=", "abs", "(", "max", "(", "sim_results", ",", "key", "=", "abs", ")", ")", "\n", "sim_results", "=", "[", "result", "/", "max_cond", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "act_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.measure_maxes": [[95, 100], ["maxes.append", "max"], "function", ["None"], ["", "def", "measure_maxes", "(", "data", ")", ":", "\n", "    ", "maxes", "=", "[", "]", "\n", "for", "d", "in", "data", ":", "\n", "        ", "maxes", ".", "append", "(", "max", "(", "d", "[", "'ikr.G_Kr'", "]", ")", ")", "\n", "", "return", "maxes", "\n", "", "def", "fit_single_exp", "(", "data", ",", "xvar", "=", "intervals", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.fit_single_exp": [[100, 113], ["warnings.catch_warnings", "warnings.simplefilter", "so.curve_fit", "float", "numpy.exp"], "function", ["None"], ["", "def", "fit_single_exp", "(", "data", ",", "xvar", "=", "intervals", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ")", "\n", "try", ":", "\n", "            ", "def", "single_exp", "(", "t", ",", "I_max", ",", "tau", ")", ":", "\n", "                ", "return", "I_max", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "\n", "", "[", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "xvar", ",", "data", ")", "\n", "return", "tau", "\n", "", "except", ":", "\n", "            ", "return", "float", "(", "\"inf\"", ")", "\n", "", "", "", "def", "map_return", "(", "func", ",", "iterable", ",", "ind_var", "=", "None", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.map_return": [[113, 118], ["out.append", "func"], "function", ["None"], ["", "", "", "def", "map_return", "(", "func", ",", "iterable", ",", "ind_var", "=", "None", ")", ":", "\n", "    ", "out", "=", "[", "]", "\n", "for", "i", "in", "iterable", ":", "\n", "        ", "out", ".", "append", "(", "func", "(", "i", ")", ")", "\n", "", "return", "out", ",", "False", "\n", "", "akin_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.double_exp_decay_fit": [[136, 182], ["numpy.seterr", "warnings.catch_warnings", "numpy.diff", "so.curve_fit", "max", "min", "tau.index", "tau.index", "abs", "abs", "numpy.seterr", "numpy.seterr", "float", "max", "min", "numpy.seterr", "len", "len", "float", "float", "float", "numpy.argwhere", "numpy.argwhere", "numpy.exp", "numpy.exp"], "function", ["None"], ["def", "double_exp_decay_fit", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "old_settings", "=", "np", ".", "seterr", "(", "all", "=", "\"warn\"", ")", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "curr", "=", "data", "[", "0", "]", "[", "'ikr.i_Kr'", "]", "\n", "curr_diff", "=", "np", ".", "diff", "(", "curr", ")", "\n", "if", "curr_diff", "[", "0", "]", ">", "0", ":", "\n", "                ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", "<", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "                ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", ">", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "curr", "=", "curr", "[", "index", ":", "]", "\n", "i0", "=", "curr", "[", "0", "]", "\n", "curr", "=", "[", "i", "-", "i0", "for", "i", "in", "curr", "]", "\n", "# Get time and move to zero", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "if", "len", "(", "time", ")", "==", "0", "or", "len", "(", "curr", ")", "==", "0", ":", "\n", "                ", "np", ".", "seterr", "(", "**", "old_settings", ")", "\n", "return", "float", "(", "\"inf\"", ")", "\n", "\n", "", "def", "double_exp", "(", "t", ",", "I_maxf", ",", "I_maxs", ",", "tauf", ",", "taus", ")", ":", "\n", "                ", "return", "(", "I_maxf", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tauf", ")", ")", "+", "\n", "I_maxs", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "taus", ")", ")", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "double_exp", ",", "time", ",", "curr", ",", "\n", "bounds", "=", "(", "[", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", ",", "10", ",", "0", "]", ",", "\n", "[", "np", ".", "inf", ",", "np", ".", "inf", ",", "1000", ",", "100", "]", ")", "\n", ")", "\n", "I_max", "=", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "tau", "=", "(", "popt", "[", "2", "]", ",", "popt", "[", "3", "]", ")", "\n", "tauf", "=", "max", "(", "tau", ")", "\n", "taus", "=", "min", "(", "tau", ")", "\n", "tauf_i", "=", "tau", ".", "index", "(", "max", "(", "tau", ")", ")", "\n", "taus_i", "=", "tau", ".", "index", "(", "min", "(", "tau", ")", ")", "\n", "I_maxf", "=", "abs", "(", "I_max", "[", "tauf_i", "]", ")", "\n", "I_maxs", "=", "abs", "(", "I_max", "[", "taus_i", "]", ")", "\n", "A_rel", "=", "I_maxf", "/", "(", "I_maxf", "+", "I_maxs", ")", "\n", "\n", "np", ".", "seterr", "(", "**", "old_settings", ")", "\n", "return", "(", "tauf", ",", "taus", ",", "A_rel", ")", "\n", "", "except", ":", "\n", "            ", "np", ".", "seterr", "(", "**", "old_settings", ")", "\n", "return", "(", "float", "(", "\"inf\"", ")", ",", "float", "(", "\"inf\"", ")", ",", "float", "(", "\"inf\"", ")", ")", "\n", "", "", "", "def", "takefirst", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "0", "]", "for", "d", "in", "data", "]", ",", "False", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.takefirst": [[182, 183], ["None"], "function", ["None"], ["", "", "", "def", "takefirst", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "0", "]", "for", "d", "in", "data", "]", ",", "False", "\n", "def", "takesecond", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ",", "False", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.takesecond": [[183, 184], ["None"], "function", ["None"], ["def", "takesecond", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "1", "]", "for", "d", "in", "data", "]", ",", "False", "\n", "def", "takethird", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "2", "]", "for", "d", "in", "data", "]", ",", "False", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.takethird": [[184, 185], ["None"], "function", ["None"], ["def", "takethird", "(", "data", ",", "ind_var", ")", ":", "return", "[", "d", "[", "2", "]", "for", "d", "in", "data", "]", ",", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikr.fit_exp_rising_phase": [[209, 239], ["numpy.diff", "numpy.seterr", "warnings.catch_warnings", "so.curve_fit", "numpy.seterr", "numpy.argwhere", "numpy.argwhere", "numpy.seterr", "float", "numpy.exp"], "function", ["None"], ["def", "fit_exp_rising_phase", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "# First subset so only rising phase of current", "\n", "curr", "=", "data", "[", "0", "]", "[", "'ikr.i_Kr'", "]", "\n", "curr_diff", "=", "np", ".", "diff", "(", "curr", ")", "\n", "index", "=", "0", "\n", "if", "curr_diff", "[", "0", "]", ">", "0", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", "<", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", ">", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "curr", "=", "curr", "[", ":", "index", "+", "1", "]", "\n", "i0", "=", "curr", "[", "0", "]", "\n", "curr", "=", "[", "i", "-", "i0", "for", "i", "in", "curr", "]", "\n", "# Get time and move to zero", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "[", ":", "index", "+", "1", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "old_settings", "=", "np", ".", "seterr", "(", "all", "=", "\"ignore\"", ")", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "def", "single_exp", "(", "t", ",", "I_max", ",", "tau", ")", ":", "\n", "                ", "return", "I_max", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "\n", "", "[", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "curr", ")", "\n", "np", ".", "seterr", "(", "**", "old_settings", ")", "\n", "return", "tau", "\n", "", "except", ":", "\n", "            ", "np", ".", "seterr", "(", "**", "old_settings", ")", "\n", "return", "float", "(", "\"inf\"", ")", "\n", "", "", "", "inact_kin_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical.peak_curr": [[43, 45], ["max"], "function", ["None"], ["def", "peak_curr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ical.i_CaL'", "]", ",", "key", "=", "abs", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical.max_gcal": [[59, 61], ["max"], "function", ["None"], ["def", "max_gcal", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ical.G_CaL'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical.normalise": [[61, 65], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "m", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "m", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "act_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical.gcal_inact_max": [[76, 78], ["max"], "function", ["None"], ["def", "gcal_inact_max", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ical.G_CaL'", "]", ",", "key", "=", "abs", ")", "\n", "", "inact_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical.ratio_cond": [[90, 92], ["max", "max"], "function", ["None"], ["def", "ratio_cond", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "1", "]", "[", "'ical.G_CaL'", "]", ")", "/", "max", "(", "data", "[", "0", "]", "[", "'ical.G_CaL'", "]", ")", "\n", "", "rec_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_markov.yang_iv_sum_stats": [[43, 50], ["enumerate", "data.split_periodic", "d.trim.trim", "numpy.max"], "function", ["None"], ["def", "yang_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "out_pk", "=", "[", "]", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "data", ".", "split_periodic", "(", "5450", ",", "adjust", "=", "True", ")", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5000", ",", "5450", ",", "adjust", "=", "True", ")", "\n", "peak_curr", "=", "np", ".", "max", "(", "d", "[", "'ito.i_to'", "]", ")", "\n", "out_pk", "=", "out_pk", "+", "[", "peak_curr", "]", "\n", "", "return", "out_pk", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_markov.lu_iv_sum_stats": [[92, 99], ["data.split_periodic", "d.trim.trim", "max"], "function", ["None"], ["def", "lu_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "5330", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5030", ",", "5330", ",", "adjust", "=", "True", ")", "\n", "peak_curr", "=", "max", "(", "d", "[", "'ito.i_to'", "]", ",", "key", "=", "abs", ")", "\n", "output", "=", "output", "+", "[", "peak_curr", "/", "max_peak", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_markov.xu_ta_sum_stats": [[135, 165], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "max", "scipy.curve_fit", "Exception", "len", "len", "float"], "function", ["None"], ["def", "xu_ta_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ")", ":", "\n", "        ", "return", "A", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "19500", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "15000", ",", "19500", ",", "adjust", "=", "True", ")", "\n", "curr", "=", "d", "[", "'ito.i_to'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "\n", "# Get rising phase of current", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "curr", ")", ")", "\n", "curr", "=", "curr", "[", ":", "index", "+", "1", "]", "\n", "time", "=", "time", "[", ":", "index", "+", "1", "]", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "curr", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'failed simulation'", ")", "\n", "", "imax", "=", "max", "(", "curr", ",", "key", "=", "abs", ")", "\n", "curr", "=", "[", "c_", "/", "imax", "for", "c_", "in", "curr", "]", "\n", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "curr", ",", "\n", "p0", "=", "[", "10.", ",", "1.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", "]", ",", "\n", "[", "np", ".", "inf", ",", "np", ".", "inf", "]", ")", ")", "\n", "taua", "=", "popt", "[", "0", "]", "\n", "output", "=", "output", "+", "[", "taua", "]", "#/max_taua]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_markov.xu_inact_sum_stats": [[199, 209], ["data.split_periodic", "range", "d.trim.trim", "len", "max"], "function", ["None"], ["def", "xu_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "25000.", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "20000.", ",", "25000.", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ito.i_to'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "]", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "0", "]", "\n", "", "output", "[", "0", "]", "=", "1.", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_generic.peak_curr": [[24, 26], ["max"], "function", ["None"], ["def", "peak_curr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ito.i_to'", "]", ",", "key", "=", "abs", ")", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_generic.fit_exp_rising_phase": [[39, 67], ["numpy.diff", "warnings.catch_warnings", "warnings.simplefilter", "so.curve_fit", "numpy.argwhere", "numpy.argwhere", "float", "numpy.exp"], "function", ["None"], ["def", "fit_exp_rising_phase", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "import", "scipy", ".", "optimize", "as", "so", "\n", "import", "warnings", "\n", "# Only want rising phase of current", "\n", "curr", "=", "data", "[", "0", "]", "[", "'ito.i_to'", "]", "\n", "curr_diff", "=", "np", ".", "diff", "(", "curr", ")", "\n", "index", "=", "0", "\n", "if", "curr_diff", "[", "0", "]", ">", "0", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", "<", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "index", "=", "np", ".", "argwhere", "(", "curr_diff", ">", "0", ")", "[", "0", "]", "[", "0", "]", "\n", "", "curr", "=", "curr", "[", ":", "index", "+", "1", "]", "\n", "i0", "=", "curr", "[", "0", "]", "\n", "curr", "=", "[", "i", "-", "i0", "for", "i", "in", "curr", "]", "\n", "# Corresponding time variable", "\n", "time", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "[", ":", "index", "+", "1", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ")", "\n", "try", ":", "\n", "            ", "def", "single_exp", "(", "t", ",", "I_max", ",", "tau", ")", ":", "\n", "                ", "return", "I_max", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "\n", "", "[", "_", ",", "tau", "]", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "curr", ")", "\n", "return", "tau", "\n", "", "except", ":", "\n", "            ", "return", "float", "(", "\"inf\"", ")", "\n", "", "", "", "act_kin_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_generic.max_gto": [[81, 83], ["max"], "function", ["None"], ["def", "max_gto", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ito.G_to'", "]", ")", "\n", "", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_generic.normalise": [[83, 87], ["max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ",", "ind_var", ")", ":", "\n", "    ", "m", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "result", "/", "m", "for", "result", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "inact_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ik1_generic.ss_curr": [[22, 24], ["None"], "function", ["None"], ["def", "ss_curr", "(", "data", ")", ":", "\n", "    ", "return", "data", "[", "0", "]", "[", "'ik1.i_K1'", "]", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_markov.dias_iv_sum_stats": [[47, 59], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs", "len", "float"], "function", ["None"], ["def", "dias_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "5450", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5200", ",", "5450", ",", "adjust", "=", "True", ")", "\n", "# ical should peak within the 250ms step", "\n", "curr", "=", "d", "[", "'ical.i_CaL'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "curr", ")", ")", "\n", "if", "index", "==", "len", "(", "curr", ")", "-", "1", ":", "\n", "            ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "else", ":", "\n", "            ", "output", "=", "output", "+", "[", "curr", "[", "index", "]", "]", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_markov.dias_iv_tau_sum_stats": [[60, 92], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "float"], "function", ["None"], ["", "def", "dias_iv_tau_sum_stats", "(", "data", ")", ":", "\n", "    ", "out1", "=", "[", "]", "\n", "out2", "=", "[", "]", "\n", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "+", "A0", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "5450", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5200", ",", "5450", ",", "adjust", "=", "True", ")", "\n", "curr", "=", "d", "[", "'ical.i_CaL'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "curr", ")", ")", "\n", "out1", "=", "out1", "+", "[", "curr", "[", "index", "]", "]", "\n", "if", "(", "d", "[", "'membrane.V'", "]", "[", "0", "]", ">=", "vsteps_tau", "[", "0", "]", "and", "\n", "d", "[", "'membrane.V'", "]", "[", "0", "]", "<=", "vsteps_tau", "[", "-", "1", "]", ")", ":", "\n", "# Separate decay portion", "\n", "            ", "time", "=", "d", "[", "'engine.time'", "]", "\n", "decay", "=", "curr", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "# fit to single exponential", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "                ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                    ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "decay", ",", "\n", "p0", "=", "[", "5.", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "taui", "=", "popt", "[", "0", "]", "\n", "out2", "=", "out2", "+", "[", "taui", "]", "\n", "", "except", ":", "\n", "                    ", "out2", "=", "out2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "", "return", "out1", "+", "out2", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_markov.rao_inact_sum_stats": [[134, 144], ["data.split_periodic", "range", "d.trim.trim", "len", "max"], "function", ["None"], ["def", "rao_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "6400", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "6000", ",", "6400", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ical.i_CaL'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "]", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "0", "]", "\n", "", "output", "[", "0", "]", "=", "1.", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_markov.rao_rec_sum_stats": [[175, 195], ["enumerate", "enumerate", "data.split", "pulse_traces.append", "numpy.max", "numpy.max", "d_.trim", "d.trim", "d.trim", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "def", "rao_rec_sum_stats", "(", "data", ")", ":", "\n", "    ", "pulse_traces", "=", "[", "]", "\n", "for", "i", ",", "time", "in", "enumerate", "(", "split_times", ")", ":", "\n", "        ", "d_", ",", "data", "=", "data", ".", "split", "(", "time", ")", "\n", "pulse_traces", ".", "append", "(", "\n", "d_", ".", "trim", "(", "d_", "[", "'engine.time'", "]", "[", "0", "]", "+", "10000", ",", "\n", "d_", "[", "'engine.time'", "]", "[", "0", "]", "+", "10800", "+", "times_rec", "[", "i", "]", ",", "\n", "adjust", "=", "True", ")", "\n", ")", "\n", "", "output", "=", "[", "]", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "pulse_traces", ")", ":", "\n", "        ", "pulse1", "=", "d", ".", "trim", "(", "0", ",", "400", ",", "adjust", "=", "True", ")", "[", "'ical.i_CaL'", "]", "\n", "endtime", "=", "800", "+", "times_rec", "[", "i", "]", "\n", "pulse2", "=", "d", ".", "trim", "(", "endtime", "-", "400", ",", "endtime", ",", "adjust", "=", "True", ")", "[", "'ical.i_CaL'", "]", "\n", "\n", "max1", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "pulse1", ")", ")", "\n", "max2", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "pulse2", ")", ")", "\n", "\n", "output", "=", "output", "+", "[", "max2", "/", "max1", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_markov.rao_taui_sum_stats": [[221, 261], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.exp", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "scipy.curve_fit", "numpy.sum", "numpy.sum", "ical_markov.dias_iv_tau_sum_stats.single_exp"], "function", ["None"], ["def", "rao_taui_sum_stats", "(", "data", ")", ":", "\n", "    ", "out", "=", "[", "]", "\n", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ")", ":", "\n", "        ", "return", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "5100", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5000", ",", "5100", ",", "adjust", "=", "True", ")", "\n", "curr", "=", "d", "[", "'ical.i_CaL'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "curr", ")", ")", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "\n", "# separate decay portion", "\n", "decay", "=", "curr", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "# fit to single exponential", "\n", "                ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "decay", ",", "\n", "p0", "=", "[", "50.", ",", "1.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "for", "t", "in", "time", "]", "\n", "\n", "# calculate r squared for fit", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "decay", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "decay", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "decay", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taui", "=", "popt", "[", "0", "]", "\n", "if", "r2", ">", "0.99", ":", "\n", "                    ", "out", "=", "out", "+", "[", "taui", "]", "\n", "", "else", ":", "\n", "                    ", "out", "=", "out", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "except", ":", "\n", "                ", "out", "=", "out", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat_markov.nguyen_iv_sum_stats": [[33, 41], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs"], "function", ["None"], ["def", "nguyen_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "5300", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5000", ",", "5300", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'icat.i_CaT'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "output", "=", "output", "+", "[", "current", "[", "index", "]", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat_markov.nguyen_inact_sum_stats": [[68, 78], ["data.split_periodic", "range", "d.trim.trim", "len", "max"], "function", ["None"], ["def", "nguyen_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "6150", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "6000", ",", "6150", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'icat.i_CaT'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "]", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "0", "]", "\n", "", "output", "[", "0", "]", "=", "1.", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.icat_markov.deng_rec_sum_stats": [[112, 133], ["enumerate", "data.split", "pulse_traces.append", "numpy.max", "numpy.max", "d_.trim", "d.trim", "d.trim", "numpy.abs", "numpy.abs"], "function", ["None"], ["", "def", "deng_rec_sum_stats", "(", "data", ")", ":", "\n", "    ", "pulse_traces", "=", "[", "]", "\n", "for", "i", ",", "time", "in", "enumerate", "(", "split_times", ")", ":", "\n", "        ", "d_", ",", "data", "=", "data", ".", "split", "(", "time", ")", "\n", "pulse_traces", ".", "append", "(", "\n", "d_", ".", "trim", "(", "d_", "[", "'engine.time'", "]", "[", "0", "]", "+", "5000", ",", "\n", "d_", "[", "'engine.time'", "]", "[", "0", "]", "+", "5600", "+", "tsteps_rec", "[", "i", "]", ",", "\n", "adjust", "=", "True", ")", "\n", ")", "\n", "", "output", "=", "[", "]", "\n", "for", "d", "in", "pulse_traces", ":", "\n", "# Interested in two 300ms pulses", "\n", "        ", "pulse1", "=", "d", ".", "trim", "(", "0", ",", "300", ",", "adjust", "=", "True", ")", "[", "'icat.i_CaT'", "]", "\n", "endtime", "=", "d", "[", "'engine.time'", "]", "[", "-", "1", "]", "\n", "pulse2", "=", "d", ".", "trim", "(", "endtime", "-", "300", ",", "endtime", ",", "adjust", "=", "True", ")", "[", "'icat.i_CaT'", "]", "\n", "\n", "max1", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "pulse1", ")", ")", "\n", "max2", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "pulse2", ")", ")", "\n", "\n", "output", "=", "output", "+", "[", "max2", "/", "max1", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikss_markov.lu_iv_sum_stats": [[47, 54], ["data.split_periodic", "d.trim.trim", "max"], "function", ["None"], ["def", "lu_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "5330", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5030", ",", "5330", ",", "adjust", "=", "True", ")", "\n", "peak_curr", "=", "max", "(", "d", "[", "'ikss.i_Kss'", "]", ",", "key", "=", "abs", ")", "\n", "output", "=", "output", "+", "[", "peak_curr", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikss_markov.yang_iv_sum_stats": [[91, 98], ["enumerate", "data.split_periodic", "d.trim.trim", "numpy.max"], "function", ["None"], ["def", "yang_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "out_pk", "=", "[", "]", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "data", ".", "split_periodic", "(", "5450", ",", "adjust", "=", "True", ")", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "5000", ",", "5450", ",", "adjust", "=", "True", ")", "\n", "peak_curr", "=", "np", ".", "max", "(", "d", "[", "'ikss.i_Kss'", "]", ")", "\n", "out_pk", "=", "out_pk", "+", "[", "peak_curr", "]", "\n", "", "return", "out_pk", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ikss_markov.xu_ta_sum_stats": [[134, 163], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "scipy.curve_fit", "numpy.exp", "Exception", "ikss_markov.xu_ta_sum_stats.single_exp"], "function", ["None"], ["def", "xu_ta_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A", "*", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", ")", "+", "A0", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "19500", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "15000", ",", "19500", ",", "adjust", "=", "True", ")", "\n", "curr", "=", "d", "[", "'ikss.i_Kss'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "\n", "# Get rising phase of current", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "curr", ")", ")", "\n", "curr", "=", "curr", "[", ":", "index", "+", "1", "]", "\n", "time", "=", "time", "[", ":", "index", "+", "1", "]", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "curr", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "time", ",", "curr", ",", "\n", "p0", "=", "[", "50.", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "[", "10000.", ",", "np", ".", "inf", ",", "np", ".", "inf", "]", ")", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "taua", "=", "popt", "[", "0", "]", "\n", "output", "=", "output", "+", "[", "taua", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.hl1.ap_measurements": [[32, 137], ["pulses.append", "min", "enumerate", "len", "len", "sum", "Vrp.append", "Cai.append", "Nai.append", "Ki.append", "APA.append", "numpy.diff", "range", "APD90.append", "ca_amplitude.append", "t_ca_rise.append", "range", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "data.extend.extend", "numpy.max", "range", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "max", "max", "t_ca50.append", "t_ca50.append", "t_ca90.append", "t_ca90.append", "pulses.append", "float", "numpy.where", "numpy.nonzero", "numpy.nonzero", "float", "float", "len", "len", "numpy.array", "numpy.array", "max", "numpy.array", "max"], "function", ["None"], ["def", "ap_measurements", "(", "data_list", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "data", "=", "data_list", "[", "0", "]", "\n", "pulses", "=", "[", "0", "]", "\n", "counter", "=", "1", "\n", "if", "len", "(", "data_list", ")", ">", "1", ":", "\n", "        ", "for", "log", "in", "data_list", "[", "1", ":", "]", ":", "\n", "            ", "if", "counter", "%", "2", "==", "0", ":", "\n", "# Log every other index as start of pulse", "\n", "                ", "pulses", ".", "append", "(", "len", "(", "data", "[", "'environment.time'", "]", ")", ")", "\n", "", "counter", "=", "counter", "+", "1", "\n", "data", "=", "data", ".", "extend", "(", "log", ")", "\n", "", "", "pulses", ".", "append", "(", "len", "(", "data", "[", "'environment.time'", "]", ")", ")", "\n", "\n", "# Set time to start at 0 after steady state is reached", "\n", "mintime", "=", "min", "(", "data", "[", "'environment.time'", "]", ")", "\n", "data", "[", "'environment.time'", "]", "=", "[", "t", "-", "mintime", "for", "t", "in", "data", "[", "'environment.time'", "]", "]", "\n", "\n", "# Detect triggered action potentials", "\n", "V", "=", "data", "[", "'membrane.V'", "]", "\n", "triggers", "=", "[", "np", ".", "max", "(", "V", "[", "pulses", "[", "i", "]", ":", "pulses", "[", "i", "+", "1", "]", "]", ")", ">", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "pulses", ")", "-", "1", ")", "]", "\n", "if", "sum", "(", "triggers", ")", "==", "0", ":", "\n", "# No action potentials", "\n", "        ", "return", "[", "float", "(", "'inf'", ")", "]", "*", "6", "\n", "\n", "", "Vrp", "=", "[", "]", "\n", "Cai", "=", "[", "]", "\n", "Nai", "=", "[", "]", "\n", "Ki", "=", "[", "]", "\n", "APA", "=", "[", "]", "\n", "APD90", "=", "[", "]", "\n", "ca_amplitude", "=", "[", "]", "\n", "t_ca_rise", "=", "[", "]", "\n", "t_ca50", "=", "[", "]", "\n", "t_ca90", "=", "[", "]", "\n", "for", "i", ",", "fire", "in", "enumerate", "(", "triggers", ")", ":", "\n", "        ", "tsubset", "=", "data", "[", "'environment.time'", "]", "[", "pulses", "[", "i", "]", ":", "pulses", "[", "i", "+", "1", "]", "]", "\n", "Vsubset", "=", "data", "[", "'membrane.V'", "]", "[", "pulses", "[", "i", "]", ":", "pulses", "[", "i", "+", "1", "]", "]", "\n", "Casubset", "=", "data", "[", "'ca_conc.Ca_i'", "]", "[", "pulses", "[", "i", "]", ":", "pulses", "[", "i", "+", "1", "]", "]", "\n", "Ksubset", "=", "data", "[", "'k_conc.K_i'", "]", "[", "pulses", "[", "i", "]", ":", "pulses", "[", "i", "+", "1", "]", "]", "\n", "Nasubset", "=", "data", "[", "'na_conc.Na_i'", "]", "[", "pulses", "[", "i", "]", ":", "pulses", "[", "i", "+", "1", "]", "]", "\n", "\n", "# Take last 500ms as resting V", "\n", "t_index", "=", "np", ".", "where", "(", "np", ".", "array", "(", "tsubset", ")", ">", "tsubset", "[", "0", "]", "+", "100", ")", "[", "0", "]", "[", "0", "]", "\n", "Vrp", ".", "append", "(", "np", ".", "mean", "(", "Vsubset", "[", "t_index", ":", "]", ")", ")", "\n", "Cai", ".", "append", "(", "np", ".", "mean", "(", "Casubset", "[", "t_index", ":", "]", ")", ")", "\n", "Nai", ".", "append", "(", "np", ".", "mean", "(", "Nasubset", "[", "t_index", ":", "]", ")", ")", "\n", "Ki", ".", "append", "(", "np", ".", "mean", "(", "Ksubset", "[", "t_index", ":", "]", ")", ")", "\n", "\n", "if", "not", "fire", ":", "\n", "# if no action potential don't attempt to take measurements", "\n", "            ", "continue", "\n", "\n", "# Record AP amplitude", "\n", "", "APAi", "=", "max", "(", "Vsubset", ")", "-", "Vrp", "[", "-", "1", "]", "\n", "APA", ".", "append", "(", "APAi", ")", "\n", "\n", "# Find APD90", "\n", "V_diff", "=", "np", ".", "diff", "(", "Vsubset", ")", "\n", "peak_index", "=", "np", ".", "nonzero", "(", "np", ".", "array", "(", "Vsubset", ")", "==", "\n", "max", "(", "Vsubset", ")", ")", "[", "0", "]", "[", "0", "]", "\n", "APD90i", "=", "0.0", "\n", "for", "j", "in", "range", "(", "peak_index", ",", "pulses", "[", "i", "+", "1", "]", ")", ":", "\n", "            ", "if", "Vsubset", "[", "j", "]", "<=", "(", "Vrp", "[", "-", "1", "]", "+", "0.1", "*", "APAi", ")", ":", "\n", "                ", "APD90i", "=", "tsubset", "[", "j", "]", "-", "tsubset", "[", "0", "]", "\n", "break", "\n", "", "", "APD90", ".", "append", "(", "APD90i", ")", "\n", "\n", "# CaT measurements", "\n", "ca_peak_index", "=", "np", ".", "nonzero", "(", "np", ".", "array", "(", "Casubset", ")", "==", "\n", "max", "(", "Casubset", ")", ")", "[", "0", "]", "[", "0", "]", "\n", "ca_rp", "=", "Casubset", "[", "0", "]", "\n", "ca_amp", "=", "max", "(", "Casubset", ")", "-", "ca_rp", "\n", "ca_amplitude", ".", "append", "(", "ca_amp", ")", "\n", "t_ca_rise", ".", "append", "(", "tsubset", "[", "ca_peak_index", "]", "-", "tsubset", "[", "0", "]", ")", "\n", "t_ca50i", "=", "0.0", "\n", "t_ca90i", "=", "0.0", "\n", "for", "j", "in", "range", "(", "ca_peak_index", ",", "pulses", "[", "i", "+", "1", "]", ")", ":", "\n", "            ", "if", "(", "t_ca50i", "==", "0.0", "and", "\n", "Casubset", "[", "j", "]", "<=", "ca_rp", "+", "0.5", "*", "ca_amp", ")", ":", "\n", "                ", "t_ca50i", "=", "tsubset", "[", "j", "]", "-", "tsubset", "[", "0", "]", "\n", "", "if", "Casubset", "[", "j", "]", "<=", "ca_rp", "+", "0.1", "*", "ca_amp", ":", "\n", "                ", "t_ca90i", "=", "tsubset", "[", "j", "]", "-", "tsubset", "[", "0", "]", "\n", "break", "\n", "\n", "", "", "if", "t_ca50i", "==", "0.0", ":", "\n", "            ", "t_ca50", ".", "append", "(", "float", "(", "'inf'", ")", ")", "\n", "", "else", ":", "\n", "            ", "t_ca50", ".", "append", "(", "t_ca50i", ")", "\n", "", "if", "t_ca90i", "==", "0.0", ":", "\n", "            ", "t_ca90", ".", "append", "(", "float", "(", "'inf'", ")", ")", "\n", "", "else", ":", "\n", "            ", "t_ca90", ".", "append", "(", "t_ca90i", ")", "\n", "", "", "data_output", "=", "[", "np", ".", "mean", "(", "Vrp", ")", ",", "\n", "#                   np.mean(Cai),", "\n", "#                   np.mean(Ki),", "\n", "#                   np.mean(Nai),", "\n", "np", ".", "mean", "(", "APA", ")", ",", "\n", "np", ".", "mean", "(", "APD90", ")", ",", "\n", "#                   np.mean(ca_amplitude),", "\n", "np", ".", "mean", "(", "t_ca_rise", ")", ",", "\n", "np", ".", "mean", "(", "t_ca50", ")", ",", "\n", "np", ".", "mean", "(", "t_ca90", ")", "]", "\n", "return", "data_output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.hl1.unwrap": [[138, 140], ["None"], "function", ["None"], ["", "def", "unwrap", "(", "data", ",", "ind_var", ")", ":", "\n", "    ", "return", "data", "[", "0", "]", ",", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_courtemanche.courtemanche_kin_sum_stats": [[57, 145], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "numpy.exp", "numpy.exp", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "scipy.curve_fit", "numpy.sum", "numpy.sum", "scipy.curve_fit", "numpy.sum", "numpy.sum", "Exception", "ito_courtemanche.courtemanche_kin_sum_stats.single_exp_act"], "function", ["None"], ["def", "courtemanche_kin_sum_stats", "(", "data", ",", "act", "=", "True", ",", "inact", "=", "True", ")", ":", "\n", "    ", "def", "single_exp_act", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "-", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "def", "single_exp_inact", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "+", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output_act", "=", "[", "]", "\n", "output_inact", "=", "[", "]", "\n", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "20100", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "20000", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'ito.i_to'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "if", "act", ":", "\n", "# Set time zero to peak current", "\n", "            ", "current_act", "=", "current", "[", ":", "index", "]", "\n", "time_act", "=", "time", "[", ":", "index", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "                ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                    ", "norm", "=", "current_act", "[", "-", "1", "]", "\n", "current_act", "=", "[", "c", "/", "norm", "for", "c", "in", "current_act", "]", "\n", "if", "len", "(", "time_act", ")", "<=", "1", "or", "len", "(", "current_act", ")", "<=", "1", ":", "\n", "                        ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp_act", ",", "\n", "time_act", ",", "\n", "current_act", ",", "\n", "p0", "=", "[", "10", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit_act", "=", "[", "single_exp_act", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time_act", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current_act", ")", "-", "np", ".", "array", "(", "fit_act", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current_act", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current_act", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taua", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "output_act", "=", "output_act", "+", "[", "taua", "]", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                    ", "output_act", "=", "output_act", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "\n", "", "", "", "if", "inact", ":", "\n", "# Set time zero to peak current", "\n", "            ", "current_inact", "=", "current", "[", "index", ":", "]", "\n", "time_inact", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time_inact", "[", "0", "]", "\n", "time_inact", "=", "[", "t", "-", "t0", "for", "t", "in", "time_inact", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "                ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                    ", "norm", "=", "current_inact", "[", "0", "]", "\n", "current_inact", "=", "[", "c", "/", "norm", "for", "c", "in", "current_inact", "]", "\n", "if", "len", "(", "time_inact", ")", "<=", "1", "or", "len", "(", "current_inact", ")", "<=", "1", ":", "\n", "                        ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp_inact", ",", "\n", "time_inact", ",", "\n", "current_inact", ",", "\n", "p0", "=", "[", "100", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit_inact", "=", "[", "single_exp_inact", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time_inact", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current_inact", ")", "-", "np", ".", "array", "(", "fit_inact", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current_inact", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current_inact", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taui", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "output_inact", "=", "output_inact", "+", "[", "taui", "]", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                    ", "output_inact", "=", "output_inact", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "", "return", "output_act", "+", "output_inact", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_courtemanche.courtemanche_act_kin_sum_stats": [[146, 148], ["ito_courtemanche.courtemanche_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_courtemanche.courtemanche_kin_sum_stats"], ["", "def", "courtemanche_act_kin_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "courtemanche_kin_sum_stats", "(", "data", ",", "act", "=", "True", ",", "inact", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_courtemanche.courtemanche_inact_kin_sum_stats": [[149, 151], ["ito_courtemanche.courtemanche_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_courtemanche.courtemanche_kin_sum_stats"], ["", "def", "courtemanche_inact_kin_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "courtemanche_kin_sum_stats", "(", "data", ",", "act", "=", "False", ",", "inact", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_courtemanche.courtemanche_rec_sum_stats": [[219, 266], ["enumerate", "data.split_periodic", "d.split", "d_.trim", "d_.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "max", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "ito_courtemanche.courtemanche_rec_sum_stats.single_exp"], "function", ["None"], ["", "def", "courtemanche_rec_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "-", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "timename", "=", "'engine.time'", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "data", ".", "split_periodic", "(", "tsplit_rec", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ")", ":", "\n", "        ", "recov", "=", "[", "]", "\n", "for", "t", "in", "tsplits_rec", ":", "\n", "            ", "d_", ",", "d", "=", "d", ".", "split", "(", "t", ")", "\n", "step1", "=", "d_", ".", "trim", "(", "d_", "[", "timename", "]", "[", "0", "]", "+", "20000", ",", "\n", "d_", "[", "timename", "]", "[", "0", "]", "+", "20000", "+", "200", ",", "\n", "adjust", "=", "True", ")", "\n", "step2", "=", "d_", ".", "trim_left", "(", "t", "-", "200", ",", "adjust", "=", "True", ")", "\n", "try", ":", "\n", "                ", "max1", "=", "max", "(", "step1", "[", "'ito.i_to'", "]", ",", "key", "=", "abs", ")", "\n", "max2", "=", "max", "(", "step2", "[", "'ito.i_to'", "]", ",", "key", "=", "abs", ")", "\n", "recov", "=", "recov", "+", "[", "max2", "/", "max1", "]", "\n", "", "except", ":", "\n", "                ", "recov", "=", "recov", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "\n", "# now fit to exponential curve", "\n", "", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "twaits", ",", "\n", "recov", ",", "\n", "p0", "=", "[", "50", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "twaits", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "recov", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "tau", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output", "=", "output", "+", "[", "tau", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_courtemanche.courtemanche_deact_sum_stats": [[306, 353], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "numpy.sum", "numpy.sum", "Exception", "ito_courtemanche.courtemanche_rec_sum_stats.single_exp"], "function", ["None"], ["", "def", "courtemanche_deact_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "+", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "20110", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "20010", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'ito.i_to'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "norm", "=", "current", "[", "0", "]", "\n", "current", "=", "[", "c", "/", "norm", "for", "c", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "time", ",", "\n", "current", ",", "\n", "p0", "=", "[", "10", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taud", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output", "=", "output", "+", "[", "taud", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_wang.wang_act_and_kin_sum_stats": [[56, 121], ["data.split_periodic", "d.trim_left", "d.trim", "numpy.argmax", "range", "numpy.exp", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "len", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "len", "Exception", "isus_wang.wang_act_and_kin_sum_stats.single_exp"], "function", ["None"], ["def", "wang_act_and_kin_sum_stats", "(", "data", ",", "ss", "=", "True", ",", "tau", "=", "True", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "-", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "\n", "", "output_ss", "=", "[", "]", "\n", "output_tau", "=", "[", "]", "\n", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11220", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "if", "ss", ":", "\n", "            ", "d_ss", "=", "d", ".", "trim_left", "(", "11220", "-", "100", ",", "adjust", "=", "True", ")", "\n", "act_gate", "=", "d_ss", "[", "'isus.g'", "]", "\n", "output_ss", "=", "output_ss", "+", "[", "max", "(", "act_gate", ",", "key", "=", "abs", ")", "]", "\n", "\n", "", "if", "tau", ":", "\n", "            ", "d_tau", "=", "d", ".", "trim", "(", "11020", ",", "11120", ",", "adjust", "=", "True", ")", "\n", "\n", "# only -20 mV to +50 mV in tau_a dataset", "\n", "if", "d_tau", "[", "'membrane.V'", "]", "[", "0", "]", "<", "-", "20", ":", "\n", "                ", "continue", "\n", "\n", "", "current", "=", "d_tau", "[", "'isus.i_sus'", "]", "\n", "time", "=", "d_tau", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "                ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                    ", "current", "=", "current", "[", ":", "index", "]", "\n", "time", "=", "time", "[", ":", "index", "]", "\n", "norm", "=", "current", "[", "-", "1", "]", "\n", "current", "=", "[", "c", "/", "norm", "for", "c", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                        ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "time", ",", "\n", "current", ",", "\n", "p0", "=", "[", "10", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "taua", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "output_tau", "=", "output_tau", "+", "[", "taua", "]", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                    ", "output_tau", "=", "output_tau", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "\n", "", "", "", "", "if", "ss", ":", "\n", "        ", "norm", "=", "output_ss", "[", "-", "1", "]", "\n", "try", ":", "\n", "            ", "for", "i", "in", "range", "(", "len", "(", "output_ss", ")", ")", ":", "\n", "                ", "output_ss", "[", "i", "]", "/=", "norm", "\n", "", "", "except", ":", "\n", "            ", "output_ss", "=", "[", "float", "(", "'inf'", ")", ",", "]", "*", "len", "(", "output_ss", ")", "\n", "\n", "", "", "return", "output_ss", "+", "output_tau", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_wang.wang_act_sum_stats": [[122, 124], ["isus_wang.wang_act_and_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_wang.wang_act_and_kin_sum_stats"], ["", "def", "wang_act_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "wang_act_and_kin_sum_stats", "(", "data", ",", "ss", "=", "True", ",", "tau", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_wang.wang_act_kin_sum_stats": [[125, 127], ["isus_wang.wang_act_and_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_wang.wang_act_and_kin_sum_stats"], ["", "def", "wang_act_kin_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "wang_act_and_kin_sum_stats", "(", "data", ",", "ss", "=", "False", ",", "tau", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_wang.wang_inact_sum_stats": [[177, 190], ["data.split_periodic", "d.trim_left.trim_left", "range", "len", "len", "float"], "function", ["None"], ["def", "wang_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "23000", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "21000", ",", "adjust", "=", "True", ")", "\n", "inact_gate", "=", "d", "[", "'isus.g'", "]", "\n", "output", "=", "output", "+", "[", "inact_gate", "[", "-", "1", "]", "]", "\n", "", "norm", "=", "output", "[", "0", "]", "\n", "try", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "            ", "output", "[", "i", "]", "/=", "norm", "\n", "", "", "except", ":", "\n", "        ", "output", "=", "[", "float", "(", "'inf'", ")", ",", "]", "*", "len", "(", "output", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_courtemanche.courtemanche_inact_kin_sum_stats": [[51, 100], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "numpy.sum", "numpy.sum", "Exception", "isus_courtemanche.courtemanche_inact_kin_sum_stats.single_exp"], "function", ["None"], ["def", "courtemanche_inact_kin_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "+", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "22000", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "20000", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'isus.i_sus'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current_inact", "=", "current", "[", "index", ":", "]", "\n", "time_inact", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time_inact", "[", "0", "]", "\n", "time_inact", "=", "[", "t", "-", "t0", "for", "t", "in", "time_inact", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "norm", "=", "current_inact", "[", "0", "]", "\n", "current_inact", "=", "[", "c", "/", "norm", "for", "c", "in", "current_inact", "]", "\n", "if", "len", "(", "time_inact", ")", "<=", "1", "or", "len", "(", "current_inact", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "time_inact", ",", "\n", "current_inact", ",", "\n", "p0", "=", "[", "100", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit_inact", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time_inact", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current_inact", ")", "-", "np", ".", "array", "(", "fit_inact", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current_inact", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current_inact", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taui", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output", "=", "output", "+", "[", "taui", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_courtemanche.courtemanche_deact_sum_stats": [[140, 187], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "numpy.sum", "numpy.sum", "Exception", "isus_courtemanche.courtemanche_inact_kin_sum_stats.single_exp"], "function", ["None"], ["", "def", "courtemanche_deact_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "+", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "20110", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "20010", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'isus.i_sus'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "norm", "=", "current", "[", "0", "]", "\n", "current", "=", "[", "c", "/", "norm", "for", "c", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "time", ",", "\n", "current", ",", "\n", "p0", "=", "[", "10", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taud", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output", "=", "output", "+", "[", "taud", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_iv_80_sum_stats": [[62, 70], ["data.split_periodic", "d.trim_left.trim_left", "max"], "function", ["None"], ["def", "Li_iv_80_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_iv_Li", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_iv_Li", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "# the last value is sometimes a nan ", "\n", "# (because V =0 at the end of the simulation and that I in nygren model is not defined for V = 0)", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "-", "current", "[", "-", "1", "]", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_iv_60_sum_stats": [[120, 128], ["data.split_periodic", "d.trim_left.trim_left", "max"], "function", ["None"], ["def", "Li_iv_60_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_iv_Li", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_iv_Li", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "# the last value is sometimes a nan ", "\n", "# (because V =0 at the end of the simulation and that I in nygren model is not defined for V = 0)", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "-", "current", "[", "-", "1", "]", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_iv_40_sum_stats": [[177, 185], ["data.split_periodic", "d.trim_left.trim_left", "max"], "function", ["None"], ["def", "Li_iv_40_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_iv_Li", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_iv_Li", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "# the last value is sometimes a nan ", "\n", "# (because V =0 at the end of the simulation and that I in nygren model is not defined for V = 0)", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "-", "current", "[", "-", "1", "]", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_act_sum_stats": [[233, 244], ["data.split_periodic", "range", "d.trim_left.trim_left", "numpy.argmax", "len", "numpy.abs", "numpy.abs"], "function", ["None"], ["def", "Li_act_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_act_Li", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_act_Li", ",", "adjust", "=", "True", ")", "\n", "act_gate", "=", "d", "[", "'i_caL.G_Na_norm'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "act_gate", ")", ")", "\n", "output", "=", "output", "+", "[", "np", ".", "abs", "(", "act_gate", "[", "index", "]", ")", "]", "\n", "", "Norm", "=", "output", "[", "-", "1", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "/=", "Norm", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_inact_1000_sum_stats": [[300, 311], ["data.split_periodic", "range", "d.trim_left.trim_left", "numpy.argmax", "len", "numpy.abs", "numpy.abs"], "function", ["None"], ["def", "Li_inact_1000_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_inact_Li_1000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_inact_Li_1000", ",", "adjust", "=", "True", ")", "\n", "inact_gate", "=", "d", "[", "'i_caL.G_Na_norm'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "inact_gate", ")", ")", "\n", "output", "=", "output", "+", "[", "np", ".", "abs", "(", "inact_gate", "[", "index", "]", ")", "]", "\n", "", "Norm", "=", "output", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "/=", "Norm", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_inact_300_sum_stats": [[366, 377], ["data.split_periodic", "range", "d.trim_left.trim_left", "numpy.argmax", "len", "numpy.abs", "numpy.abs"], "function", ["None"], ["def", "Li_inact_300_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_inact_Li_300", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_inact_Li_300", ",", "adjust", "=", "True", ")", "\n", "inact_gate", "=", "d", "[", "'i_caL.G_Na_norm'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "inact_gate", ")", ")", "\n", "output", "=", "output", "+", "[", "np", ".", "abs", "(", "inact_gate", "[", "index", "]", ")", "]", "\n", "", "Norm", "=", "output", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "/=", "Norm", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_inact_150_sum_stats": [[432, 443], ["data.split_periodic", "range", "d.trim_left.trim_left", "numpy.argmax", "len", "numpy.abs", "numpy.abs"], "function", ["None"], ["def", "Li_inact_150_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_inact_Li_150", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_inact_Li_150", ",", "adjust", "=", "True", ")", "\n", "inact_gate", "=", "d", "[", "'i_caL.G_Na_norm'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "inact_gate", ")", ")", "\n", "output", "=", "output", "+", "[", "np", ".", "abs", "(", "inact_gate", "[", "index", "]", ")", "]", "\n", "", "Norm", "=", "output", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "/=", "Norm", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_inact_kin_80_sum_stats": [[508, 561], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "numpy.exp", "max", "scipy.curve_fit", "min", "max", "Exception", "len", "len", "float", "float"], "function", ["None"], ["def", "Li_inact_kin_80_sum_stats", "(", "data", ")", ":", "\n", "\n", "    ", "def", "double_exp", "(", "t", ",", "tauh", ",", "taus", ",", "Ah", ",", "As", ")", ":", "\n", "        ", "return", "Ah", "*", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "+", "As", "*", "np", ".", "exp", "(", "-", "t", "/", "taus", ")", "\n", "\n", "", "output", "=", "[", "]", "\n", "ss_list", "=", "[", "]", "\n", "\n", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_kin_80_Li", ",", "adjust", "=", "True", ")", ":", "\n", "\n", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_kin_80_Li", ",", "adjust", "=", "True", ")", "\n", "#d = d.trim(tpreMeasuring_kin_80_Li,tpreMeasuring_kin_80_Li+2, adjust = True)", "\n", "\n", "current", "=", "d", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "# sometimes, the last value is nan and crashes the following,", "\n", "# so getting rid of the last value is perhaps the solution", "\n", "time", "=", "d", "[", "'environment.time'", "]", "[", ":", "-", "1", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "\n", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "double_exp", ",", "time", ",", "current", ",", "p0", "=", "[", "5", ",", "1", ",", "1", ",", "1", "]", ",", "bounds", "=", "(", "[", "0.01", ",", "0.01", ",", "0.01", ",", "0.01", "]", ",", "[", "100.0", ",", "10", ",", "10", ",", "10", "]", ")", ")", "\n", "\n", "tauh", "=", "min", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "taus", "=", "max", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "output", "=", "output", "+", "[", "tauh", "]", "\n", "ss_list", "=", "ss_list", "+", "[", "taus", "]", "\n", "\n", "#debug", "\n", "#                plt.plot(time,current,time,double_exp(np.asarray(time), popt[0], popt[1], popt[2], popt[3]))", "\n", "#                plt.show()", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "ss_list", "=", "ss_list", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "\n", "", "", "", "output", "=", "output", "+", "ss_list", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_inact_kin_60_sum_stats": [[627, 670], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "numpy.exp", "max", "scipy.curve_fit", "min", "max", "Exception", "len", "len", "float", "float"], "function", ["None"], ["def", "Li_inact_kin_60_sum_stats", "(", "data", ")", ":", "\n", "\n", "    ", "def", "double_exp", "(", "t", ",", "tauh", ",", "taus", ",", "Ah", ",", "As", ")", ":", "\n", "        ", "return", "Ah", "*", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "+", "As", "*", "np", ".", "exp", "(", "-", "t", "/", "taus", ")", "\n", "\n", "", "output", "=", "[", "]", "\n", "ss_list", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_kin_60_Li", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_kin_60_Li", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "# sometimes, the last value is nan and crashes the following,", "\n", "# so getting rid of the last value is perhaps the solution", "\n", "time", "=", "d", "[", "'environment.time'", "]", "[", ":", "-", "1", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "\n", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "double_exp", ",", "time", ",", "current", ",", "p0", "=", "[", "5", ",", "1", ",", "1", ",", "1", "]", ",", "bounds", "=", "(", "[", "0.01", ",", "0.01", ",", "0.01", ",", "0.01", "]", ",", "[", "100.0", ",", "10", ",", "10", ",", "10", "]", ")", ")", "\n", "\n", "tauh", "=", "min", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "taus", "=", "max", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "output", "=", "output", "+", "[", "tauh", "]", "\n", "ss_list", "=", "ss_list", "+", "[", "taus", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "ss_list", "=", "ss_list", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "\n", "", "", "", "output", "=", "output", "+", "ss_list", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_inact_kin_40_sum_stats": [[736, 779], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "numpy.exp", "max", "scipy.curve_fit", "min", "max", "Exception", "len", "len", "float", "float"], "function", ["None"], ["def", "Li_inact_kin_40_sum_stats", "(", "data", ")", ":", "\n", "\n", "    ", "def", "double_exp", "(", "t", ",", "tauh", ",", "taus", ",", "Ah", ",", "As", ")", ":", "\n", "        ", "return", "Ah", "*", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "+", "As", "*", "np", ".", "exp", "(", "-", "t", "/", "taus", ")", "\n", "\n", "", "output", "=", "[", "]", "\n", "ss_list", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tperiod_kin_40_Li", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "tpreMeasuring_kin_40_Li", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "# sometimes, the last value is nan and crashes the following,", "\n", "# so getting rid of the last value is perhaps the solution", "\n", "time", "=", "d", "[", "'environment.time'", "]", "[", ":", "-", "1", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "\n", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "double_exp", ",", "time", ",", "current", ",", "p0", "=", "[", "5", ",", "1", ",", "1", ",", "1", "]", ",", "bounds", "=", "(", "[", "0.01", ",", "0.01", ",", "0.01", ",", "0.01", "]", ",", "[", "100.0", ",", "10", ",", "10", ",", "10", "]", ")", ")", "\n", "\n", "tauh", "=", "min", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "taus", "=", "max", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "output", "=", "output", "+", "[", "tauh", "]", "\n", "ss_list", "=", "ss_list", "+", "[", "taus", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "ss_list", "=", "ss_list", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "\n", "", "", "", "output", "=", "output", "+", "ss_list", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_recov_80_sum_stats": [[854, 879], ["data.split_periodic", "d.trim", "d.trim_left", "numpy.argmax", "numpy.argmax", "numpy.abs", "numpy.abs", "float"], "function", ["None"], ["def", "Li_recov_80_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "sub_loop", "=", "0", "\n", "\n", "d_split", "=", "data", ".", "split_periodic", "(", "tperiod_recov_80", ",", "adjust", "=", "True", ")", "\n", "\n", "for", "d", "in", "d_split", ":", "\n", "\n", "        ", "dcond", "=", "d", ".", "trim", "(", "tpreMeasuringList1_recov_80", "[", "sub_loop", "]", ",", "tpreMeasuringList1_recov_80", "[", "sub_loop", "]", "+", "tMeasuring1_recov_80", ",", "adjust", "=", "True", ")", "\n", "dtest", "=", "d", ".", "trim_left", "(", "tpreMeasuring2_recov_80", ",", "adjust", "=", "True", ")", "\n", "\n", "current_cond", "=", "dcond", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "\n", "current_test", "=", "dtest", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "\n", "\n", "\n", "index_cond", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current_cond", ")", ")", "\n", "index_test", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current_test", ")", ")", "\n", "try", ":", "\n", "            ", "output", "=", "output", "+", "[", "current_test", "[", "index_test", "]", "/", "current_cond", "[", "index_cond", "]", "]", "# should I still normalize ?", "\n", "sub_loop", "+=", "1", "\n", "", "except", ":", "\n", "            ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "sub_loop", "+=", "1", "\n", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ica_Li.Li_recov_40_sum_stats": [[950, 976], ["data.split_periodic", "d.trim", "d.trim_left", "numpy.argmax", "numpy.argmax", "numpy.abs", "numpy.abs", "float"], "function", ["None"], ["def", "Li_recov_40_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "sub_loop", "=", "0", "\n", "\n", "d_split", "=", "data", ".", "split_periodic", "(", "tperiod_recov_40", ",", "adjust", "=", "True", ")", "\n", "\n", "for", "d", "in", "d_split", "[", ":", "-", "1", "]", ":", "# for no reason the last split contains no information ", "\n", "\n", "\n", "        ", "dcond", "=", "d", ".", "trim", "(", "tpreMeasuringList1_recov_40", "[", "sub_loop", "]", ",", "tpreMeasuringList1_recov_40", "[", "sub_loop", "]", "+", "tMeasuring1_recov_40", ",", "adjust", "=", "True", ")", "\n", "dtest", "=", "d", ".", "trim_left", "(", "tpreMeasuring2_recov_40", ",", "adjust", "=", "True", ")", "\n", "\n", "current_cond", "=", "dcond", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "\n", "current_test", "=", "dtest", "[", "'i_caL.i_Ca_L'", "]", "[", ":", "-", "1", "]", "\n", "\n", "\n", "index_cond", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current_cond", ")", ")", "\n", "index_test", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current_test", ")", ")", "\n", "try", ":", "\n", "            ", "output", "=", "output", "+", "[", "current_test", "[", "index_test", "]", "/", "current_cond", "[", "index_cond", "]", "]", "# should I still normalize ?", "\n", "sub_loop", "+=", "1", "\n", "", "except", ":", "\n", "            ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "sub_loop", "+=", "1", "\n", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_iv_sum_stats": [[72, 80], ["data.split_periodic", "d.trim_left.trim_left", "max"], "function", ["None"], ["def", "li_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10300", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ical.i_CaL'", "]", "[", ":", "-", "1", "]", "# the last value for some models can be NaN", "\n", "# magnitude measured as difference between peak and steady-state at end of step", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "-", "current", "[", "-", "1", "]", "]", "\n", "", "return", "output", "\n", "", "def", "li_iv_norm_sum_stats", "(", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_iv_norm_sum_stats": [[80, 86], ["ical_li.li_iv_sum_stats", "max", "range", "len", "abs"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_iv_sum_stats"], ["", "def", "li_iv_norm_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "li_iv_sum_stats", "(", "data", ")", "\n", "norm", "=", "max", "(", "output", ",", "key", "=", "abs", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "/=", "abs", "(", "norm", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_act_sum_stats": [[150, 203], ["data.split_periodic", "d.trim_left.trim_left", "max", "range", "numpy.isclose", "numpy.argmax", "len", "numpy.exp", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "max", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "Exception", "ical_li.li_act_sum_stats.single_exp"], "function", ["None"], ["def", "li_act_sum_stats", "(", "data", ",", "ss", "=", "True", ",", "act_tau_10", "=", "False", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ")", ":", "\n", "        ", "return", "1", "-", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "output_tau", "=", "[", "]", "\n", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10300", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "act_gate", "=", "d", "[", "'ical.g'", "]", "\n", "if", "ss", ":", "\n", "            ", "output", "=", "output", "+", "[", "max", "(", "act_gate", ",", "key", "=", "abs", ")", "]", "\n", "\n", "", "if", "act_tau_10", "and", "np", ".", "isclose", "(", "d", "[", "'membrane.V'", "]", "[", "0", "]", ",", "10.0", ")", ":", "\n", "            ", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "act_gate", ")", "\n", "\n", "# trim anything after peak", "\n", "act_gate", "=", "act_gate", "[", ":", "index", "]", "\n", "time", "=", "time", "[", ":", "index", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "                ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                    ", "norm", "=", "max", "(", "act_gate", ",", "key", "=", "abs", ")", "\n", "act_gate", "=", "[", "a", "/", "norm", "for", "a", "in", "act_gate", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "act_gate", ")", "<=", "1", ":", "\n", "                        ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "time", ",", "\n", "act_gate", ",", "\n", "p0", "=", "[", "0.5", ",", "1", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "np", ".", "inf", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "for", "t", "in", "time", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "act_gate", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "act_gate", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "act_gate", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "tau", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "output_tau", "=", "[", "tau", "]", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                    ", "output_tau", "=", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "", "if", "ss", ":", "\n", "        ", "norm", "=", "max", "(", "output", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "            ", "output", "[", "i", "]", "/=", "norm", "\n", "", "", "return", "output", "+", "output_tau", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_act_and_tau_sum_stats": [[204, 206], ["ical_li.li_act_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_act_sum_stats"], ["", "def", "li_act_and_tau_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "li_act_sum_stats", "(", "data", ",", "act_tau_10", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_act_tau_sum_stats": [[207, 209], ["ical_li.li_act_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_act_sum_stats"], ["", "def", "li_act_tau_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "li_act_sum_stats", "(", "data", ",", "ss", "=", "False", ",", "act_tau_10", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_sum_stats": [[286, 301], ["data.split_periodic", "range", "d.trim_left.trim_left", "len", "max"], "function", ["None"], ["def", "li_inact_sum_stats", "(", "data", ",", "tstep", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10300", "+", "tstep", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", "+", "tstep", ",", "adjust", "=", "True", ")", "\n", "inact_gate", "=", "d", "[", "'ical.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "inact_gate", ",", "key", "=", "abs", ")", "]", "\n", "", "norm", "=", "output", "[", "0", "]", "# absence of prepulse", "\n", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "/=", "norm", "\n", "# account for incomplete voltage-dependent inactivation", "\n", "# (only if fitting to Boltzmann function", "\n", "#fmin = min(output)", "\n", "#for i in range(len(output)):", "\n", "#    output[i] = (output[i]-fmin)/(1-fmin)", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_1000_sum_stats": [[302, 304], ["ical_li.li_inact_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_sum_stats"], ["", "def", "li_inact_1000_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "li_inact_sum_stats", "(", "data", ",", "1000", ")", "\n", "", "def", "li_inact_300_sum_stats", "(", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_300_sum_stats": [[304, 306], ["ical_li.li_inact_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_sum_stats"], ["", "def", "li_inact_300_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "li_inact_sum_stats", "(", "data", ",", "300", ")", "\n", "", "def", "li_inact_150_sum_stats", "(", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_150_sum_stats": [[306, 308], ["ical_li.li_inact_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_sum_stats"], ["", "def", "li_inact_150_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "li_inact_sum_stats", "(", "data", ",", "150", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_kin_sum_stats": [[394, 449], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "numpy.sum", "numpy.sum", "min", "max", "numpy.exp", "Exception", "ical_li.li_inact_kin_sum_stats.double_exp"], "function", ["None"], ["def", "li_inact_kin_sum_stats", "(", "data", ",", "fast", "=", "True", ",", "slow", "=", "True", ")", ":", "\n", "    ", "def", "double_exp", "(", "t", ",", "tauh", ",", "taus", ",", "Ah", ",", "As", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "+", "Ah", "*", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "+", "As", "*", "np", ".", "exp", "(", "-", "t", "/", "taus", ")", "\n", "", "output_fast", "=", "[", "]", "\n", "output_slow", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10300", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'ical.i_CaL'", "]", "[", ":", "-", "1", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "[", ":", "-", "1", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "current", "=", "[", "c", "/", "current", "[", "0", "]", "for", "c", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "double_exp", ",", "\n", "time", ",", "\n", "current", ",", "\n", "p0", "=", "[", "10", ",", "80", ",", "0.5", ",", "0.5", ",", "0", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "np", ".", "inf", ",", "1.0", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "double_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ",", "popt", "[", "3", "]", ",", "popt", "[", "4", "]", ")", "for", "t", "in", "time", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "tauh", "=", "min", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "taus", "=", "max", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output_fast", "=", "output_fast", "+", "[", "tauh", "]", "\n", "output_slow", "=", "output_slow", "+", "[", "taus", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output_fast", "=", "output_slow", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "output_slow", "=", "output_slow", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "output", "=", "[", "]", "\n", "if", "fast", ":", "\n", "        ", "output", "+=", "output_fast", "\n", "", "if", "slow", ":", "\n", "        ", "output", "+=", "output_slow", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_kin_tauf_sum_stats": [[450, 452], ["ical_li.li_inact_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_kin_sum_stats"], ["", "def", "li_inact_kin_tauf_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "li_inact_kin_sum_stats", "(", "data", ",", "fast", "=", "True", ",", "slow", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_kin_taus_sum_stats": [[453, 455], ["ical_li.li_inact_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_inact_kin_sum_stats"], ["", "def", "li_inact_kin_taus_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "li_inact_kin_sum_stats", "(", "data", ",", "fast", "=", "False", ",", "slow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_recov_sum_stats": [[550, 635], ["enumerate", "data.split_periodic", "d.split", "d_.trim", "d_.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "numpy.exp", "max", "max", "numpy.exp", "scipy.curve_fit", "numpy.sum", "numpy.sum", "min", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "ical_li.li_inact_kin_sum_stats.double_exp"], "function", ["None"], ["", "def", "li_recov_sum_stats", "(", "data", ",", "fast", "=", "True", ",", "slow", "=", "True", ")", ":", "\n", "    ", "def", "double_exp", "(", "t", ",", "tau_f", ",", "tau_s", ",", "Af", ",", "As", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "-", "Af", "*", "np", ".", "exp", "(", "-", "t", "/", "tau_f", ")", "-", "As", "*", "np", ".", "exp", "(", "-", "t", "/", "tau_s", ")", "\n", "", "def", "single_exp", "(", "t", ",", "tau_s", ",", "As", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "-", "As", "*", "np", ".", "exp", "(", "-", "t", "/", "tau_s", ")", "\n", "\n", "", "output1", "=", "[", "]", "\n", "output2", "=", "[", "]", "\n", "timename", "=", "'engine.time'", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "data", ".", "split_periodic", "(", "tsplit_recov", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ")", ":", "\n", "        ", "recov", "=", "[", "]", "\n", "for", "t", "in", "tsplits_recov", ":", "\n", "            ", "d_", ",", "d", "=", "d", ".", "split", "(", "t", ")", "\n", "step1", "=", "d_", ".", "trim", "(", "d_", "[", "timename", "]", "[", "0", "]", "+", "10000", ",", "\n", "d_", "[", "timename", "]", "[", "0", "]", "+", "10300", ",", "\n", "adjust", "=", "True", ")", "\n", "step2", "=", "d_", ".", "trim_left", "(", "t", "-", "300", ",", "adjust", "=", "True", ")", "\n", "try", ":", "\n", "                ", "max1", "=", "max", "(", "step1", "[", "'ical.i_CaL'", "]", ",", "key", "=", "abs", ")", "\n", "max2", "=", "max", "(", "step2", "[", "'ical.i_CaL'", "]", ",", "key", "=", "abs", ")", "\n", "recov", "=", "recov", "+", "[", "max2", "/", "max1", "]", "\n", "", "except", ":", "\n", "                ", "recov", "=", "recov", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "# Now fit output to single/double exponential", "\n", "", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "if", "i", ">", "0", ":", "\n", "                ", "try", ":", "\n", "                    ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "double_exp", ",", "\n", "twaits_recov", ",", "\n", "recov", ",", "\n", "p0", "=", "[", "50.", ",", "500.", ",", "0.5", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "np", ".", "inf", ",", "1.0", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "\n", "fit", "=", "[", "double_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ",", "popt", "[", "3", "]", ",", "popt", "[", "4", "]", ")", "\n", "for", "t", "in", "twaits_recov", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "recov", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "tauf", "=", "min", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "taus", "=", "max", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "output1", "=", "output1", "+", "[", "tauf", "]", "\n", "output2", "=", "output2", "+", "[", "taus", "]", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "\n", "", "", "except", ":", "\n", "                    ", "output1", "=", "output1", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "output2", "=", "output2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "else", ":", "\n", "                ", "try", ":", "\n", "                    ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "twaits_recov", ",", "\n", "recov", ",", "\n", "p0", "=", "[", "50.", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "\n", "for", "t", "in", "twaits_recov", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "recov", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taus", "=", "popt", "[", "0", "]", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "output2", "=", "output2", "+", "[", "taus", "]", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                    ", "output2", "=", "output2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "", "output", "=", "[", "]", "\n", "if", "fast", ":", "\n", "        ", "output", "+=", "output1", "\n", "", "if", "slow", ":", "\n", "        ", "output", "+=", "output2", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_recov_tauf_sum_stats": [[636, 638], ["ical_li.li_recov_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_recov_sum_stats"], ["", "def", "li_recov_tauf_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "li_recov_sum_stats", "(", "data", ",", "fast", "=", "True", ",", "slow", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_recov_taus_sum_stats": [[639, 641], ["ical_li.li_recov_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_recov_sum_stats"], ["", "def", "li_recov_taus_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "li_recov_sum_stats", "(", "data", ",", "fast", "=", "False", ",", "slow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_li.li_use_inact_sum_stats": [[726, 782], ["data.split_periodic", "sum", "enumerate", "dvhold.split", "dtrain.trim_left.trim_left", "dtrain.trim_left.split_periodic", "numpy.exp", "sum", "d.trim_right.trim_right", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "range", "scipy.curve_fit", "numpy.sum", "numpy.sum", "max", "len", "list", "ical_li.li_act_sum_stats.single_exp"], "function", ["None"], ["", "", "def", "li_use_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "single_exp", "(", "n", ",", "k", ",", "D", ")", ":", "\n", "        ", "return", "(", "1", "-", "D", ")", "+", "D", "*", "np", ".", "exp", "(", "-", "k", "*", "n", ")", "\n", "\n", "", "output1", "=", "[", "]", "\n", "output2", "=", "[", "]", "\n", "\n", "# split separate vholds", "\n", "for", "dvhold", "in", "data", ".", "split_periodic", "(", "sum", "(", "tsplits", ")", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "for", "i", ",", "f", "in", "enumerate", "(", "freq", ")", ":", "\n", "            ", "pulses", "=", "[", "]", "# to hold the fitting data", "\n", "\n", "period", "=", "1000.", "/", "f", "\n", "\n", "dtrain", ",", "dvhold", "=", "dvhold", ".", "split", "(", "sum", "(", "tsplits", "[", ":", "i", "+", "1", "]", ")", ")", "\n", "t0", "=", "dtrain", "[", "'engine.time'", "]", "[", "0", "]", "\n", "dtrain", "[", "'engine.time'", "]", "=", "[", "t", "-", "t0", "for", "t", "in", "dtrain", "[", "'engine.time'", "]", "]", "\n", "dtrain", "=", "dtrain", ".", "trim_left", "(", "tpre", ",", "adjust", "=", "True", ")", "\n", "for", "d", "in", "dtrain", ".", "split_periodic", "(", "period", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "                ", "d", "=", "d", ".", "trim_right", "(", "period", "-", "tpulse", ")", "\n", "current", "=", "d", "[", "'ical.i_CaL'", "]", "\n", "pulses", "=", "pulses", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "]", "\n", "\n", "# fit to exponential equation", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "                ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "# normalise to first pulse", "\n", "                    ", "norm", "=", "pulses", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pulses", ")", ")", ":", "\n", "                        ", "pulses", "[", "i", "]", "/=", "norm", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "list", "(", "range", "(", "npulses", ")", ")", ",", "\n", "pulses", ",", "\n", "p0", "=", "[", "0.2", ",", "0.2", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "\n", "fit", "=", "[", "single_exp", "(", "n", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "for", "n", "in", "range", "(", "npulses", ")", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "pulses", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "pulses", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "pulses", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "pulse_const", "=", "1.", "/", "popt", "[", "0", "]", "\n", "ss_decay", "=", "1.", "-", "popt", "[", "1", "]", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "output1", "=", "output1", "+", "[", "pulse_const", "]", "\n", "output2", "=", "output2", "+", "[", "ss_decay", "]", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                    ", "output1", "=", "output1", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "output2", "=", "output2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "", "return", "output1", "+", "output2", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_sun.sun_inact_kin_sum_stats": [[205, 260], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "numpy.sum", "numpy.sum", "min", "max", "numpy.exp", "Exception", "ical_sun.sun_inact_kin_sum_stats.double_exp"], "function", ["None"], ["def", "sun_inact_kin_sum_stats", "(", "data", ",", "fast", "=", "True", ",", "slow", "=", "True", ")", ":", "\n", "    ", "def", "double_exp", "(", "t", ",", "tauh", ",", "taus", ",", "Ah", ",", "As", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "+", "Ah", "*", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "+", "As", "*", "np", ".", "exp", "(", "-", "t", "/", "taus", ")", "\n", "", "output_tf", "=", "[", "]", "\n", "output_ts", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11000", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'ical.i_CaL'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "current", "=", "[", "c", "/", "current", "[", "0", "]", "for", "c", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "double_exp", ",", "\n", "time", ",", "\n", "current", ",", "\n", "p0", "=", "[", "10", ",", "200", ",", "0.5", ",", "0.5", ",", "0", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "np", ".", "inf", ",", "1.0", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "double_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ",", "popt", "[", "3", "]", ",", "popt", "[", "4", "]", ")", "for", "t", "in", "time", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "tauf", "=", "min", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "taus", "=", "max", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "if", "fast", ":", "\n", "                        ", "output_tf", "=", "output_tf", "+", "[", "tauf", "]", "\n", "", "if", "slow", ":", "\n", "                        ", "output_ts", "=", "output_ts", "+", "[", "taus", "]", "\n", "", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "if", "fast", ":", "\n", "                    ", "output_tf", "=", "output_tf", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "if", "slow", ":", "\n", "                    ", "output_ts", "=", "output_ts", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "", "output", "=", "output_tf", "+", "output_ts", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_sun.sun_inact_kin_sum_stats_tf": [[261, 263], ["ical_sun.sun_inact_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_sun.sun_inact_kin_sum_stats"], ["", "def", "sun_inact_kin_sum_stats_tf", "(", "data", ")", ":", "\n", "    ", "return", "sun_inact_kin_sum_stats", "(", "data", ",", "fast", "=", "True", ",", "slow", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_sun.sun_inact_kin_sum_stats_ts": [[264, 266], ["ical_sun.sun_inact_kin_sum_stats"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_sun.sun_inact_kin_sum_stats"], ["", "def", "sun_inact_kin_sum_stats_ts", "(", "data", ")", ":", "\n", "    ", "return", "sun_inact_kin_sum_stats", "(", "data", ",", "fast", "=", "False", ",", "slow", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_sun.sun_rel_inact_sum_stats": [[267, 280], ["data.split_periodic", "d.trim_left.trim_left", "max", "float"], "function", ["None"], ["", "def", "sun_rel_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11000", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ical.i_CaL'", "]", "\n", "peak", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "ss", "=", "current", "[", "-", "1", "]", "\n", "\n", "try", ":", "\n", "            ", "output", "=", "output", "+", "[", "1", "-", "ss", "/", "peak", "]", "\n", "", "except", ":", "\n", "            ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_schneider.schneider_iv_sum_stats": [[72, 79], ["data.split_periodic", "d.trim_left.trim_left", "max"], "function", ["None"], ["def", "schneider_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10012", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "[", ":", "-", "1", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_schneider.schneider_iv_normalised_sum_stats": [[80, 90], ["data.split_periodic", "numpy.array", "numpy.max", "np.array.tolist", "d.trim_left.trim_left", "numpy.abs", "max"], "function", ["None"], ["", "def", "schneider_iv_normalised_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10012", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "[", ":", "-", "1", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "]", "\n", "", "output", "=", "np", ".", "array", "(", "output", ")", "\n", "norm_out", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "output", ")", ")", "\n", "output", "/=", "norm_out", "\n", "return", "output", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_schneider.schneider_tau_sum_stats": [[154, 201], ["enumerate", "data.split_periodic", "d.trim_left.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "Exception", "ina_schneider.schneider_tau_sum_stats.sum_of_exp"], "function", ["None"], ["def", "schneider_tau_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "sum_of_exp", "(", "t", ",", "taum", ",", "tauh", ",", "C", ")", ":", "\n", "        ", "return", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "taum", ")", ")", "**", "3", "*", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "+", "C", "\n", "", "output1", "=", "[", "]", "\n", "output2", "=", "[", "]", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "data", ".", "split_periodic", "(", "10012", ",", "adjust", "=", "True", ")", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "[", ":", "-", "1", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "[", ":", "-", "1", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "maxcurr", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c", "/", "maxcurr", "for", "c", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "sum_of_exp", ",", "\n", "time", ",", "\n", "current", ",", "\n", "p0", "=", "[", "0.5", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "0.", ",", "-", "1.0", "]", ",", "\n", "[", "np", ".", "inf", ",", "np", ".", "inf", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "\n", "fit", "=", "[", "sum_of_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taum", "=", "popt", "[", "0", "]", "\n", "tauh", "=", "popt", "[", "1", "]", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "if", "i", "<", "9", ":", "# only some data for activation time constants", "\n", "                        ", "output1", "=", "output1", "+", "[", "taum", "]", "\n", "", "output2", "=", "output2", "+", "[", "tauh", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "if", "i", "<", "9", ":", "\n", "                    ", "output1", "=", "output1", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "output2", "=", "output2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "output", "=", "output1", "+", "output2", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_schneider.schneider_taum_sum_stats": [[202, 242], ["enumerate", "data.split_periodic", "d.trim_left.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "Exception", "ina_schneider.schneider_tau_sum_stats.sum_of_exp"], "function", ["None"], ["", "def", "schneider_taum_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "sum_of_exp", "(", "t", ",", "taum", ",", "tauh", ",", "C", ")", ":", "\n", "        ", "return", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "taum", ")", ")", "**", "3", "*", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "+", "C", "\n", "", "output", "=", "[", "]", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "data", ".", "split_periodic", "(", "10012", ",", "adjust", "=", "True", ")", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "[", ":", "-", "1", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "[", ":", "-", "1", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "maxcurr", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c", "/", "maxcurr", "for", "c", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "sum_of_exp", ",", "\n", "time", ",", "\n", "current", ",", "\n", "p0", "=", "[", "0.05", ",", "1.", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "0.", ",", "-", "1.0", "]", ",", "\n", "[", "np", ".", "inf", ",", "np", ".", "inf", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "\n", "fit", "=", "[", "sum_of_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taum", "=", "popt", "[", "0", "]", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output", "=", "output", "+", "[", "taum", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_schneider.schneider_taus_sum_stats": [[321, 374], ["data.split_periodic", "numpy.exp", "d.split", "d_.trim_left.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "range", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "max", "len", "ina_schneider.schneider_taus_sum_stats.single_exp"], "function", ["None"], ["", "def", "schneider_taus_sum_stats", "(", "data", ")", ":", "\n", "#def single_exp(t, tau, A, C):", "\n", "#    return A*np.exp(-t/tau)+C", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ")", ":", "\n", "        ", "return", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "# Split by test pulse potential", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "tsplit_tests", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "peaks", "=", "[", "]", "\n", "for", "t", "in", "tsplits", ":", "\n", "            ", "d_", ",", "d", "=", "d", ".", "split", "(", "t", ")", "\n", "d_", "=", "d_", ".", "trim_left", "(", "t", "-", "ttest", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d_", "[", "'ina.i_Na'", "]", "[", ":", "-", "1", "]", "\n", "peaks", "=", "peaks", "+", "[", "max", "(", "current", ",", "key", "=", "abs", ")", "]", "\n", "\n", "# fit to single exponential", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "norm", "=", "peaks", "[", "0", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "peaks", ")", ")", ":", "\n", "                    ", "peaks", "[", "i", "]", "/=", "norm", "\n", "\n", "", "peaks", "=", "[", "p", "-", "peaks", "[", "-", "1", "]", "for", "p", "in", "peaks", "]", "\n", "maxpk", "=", "max", "(", "peaks", ",", "key", "=", "abs", ")", "\n", "peaks", "=", "[", "p", "/", "maxpk", "for", "p", "in", "peaks", "]", "\n", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "tprepulse", ",", "\n", "peaks", ",", "\n", "p0", "=", "1.", ",", "\n", "bounds", "=", "(", "0.", ",", "np", ".", "inf", ")", ",", "\n", "#p0=[1., peaks[0]-peaks[-1], peaks[0]],", "\n", "#bounds=(0.,", "\n", "#        [np.inf, 1.0, 1.0]),", "\n", "max_nfev", "=", "1000", ")", "\n", "\n", "#fit = [single_exp(t,popt[0],popt[1],popt[2]) for t in tprepulse]", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ")", "for", "t", "in", "tprepulse", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "peaks", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "peaks", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "peaks", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taus", "=", "popt", "[", "0", "]", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output", "=", "output", "+", "[", "taus", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_schneider.schneider_inact_sum_stats": [[436, 484], ["enumerate", "data.split", "d.trim_left.split_periodic", "d.trim_left.trim_left", "d_.trim_left.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "range", "scipy.curve_fit", "numpy.sum", "numpy.sum", "max", "len", "ina_schneider.schneider_inact_sum_stats.boltzmann_fn"], "function", ["None"], ["", "", "def", "schneider_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "boltzmann_fn", "(", "V", ",", "Vh", ",", "k", ")", ":", "\n", "        ", "return", "1", "/", "(", "1", "+", "np", ".", "exp", "(", "(", "V", "-", "Vh", ")", "/", "k", ")", ")", "\n", "", "output_Vh", "=", "[", "]", "\n", "output_k", "=", "[", "]", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "tsplits_inact", ")", ":", "\n", "        ", "inact", "=", "[", "]", "\n", "d", ",", "data", "=", "data", ".", "split", "(", "t", ")", "\n", "if", "i", ">", "0", ":", "\n", "            ", "d", "=", "d", ".", "trim_left", "(", "tsplits_inact", "[", "i", "-", "1", "]", ",", "adjust", "=", "True", ")", "\n", "", "for", "d_", "in", "d", ".", "split_periodic", "(", "10012", "+", "tsteps_inact", "[", "i", "]", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "            ", "d_", "=", "d_", ".", "trim_left", "(", "10000", "+", "tsteps_inact", "[", "i", "]", ",", "adjust", "=", "True", ")", "\n", "inact", "=", "inact", "+", "[", "max", "(", "d_", "[", "'ina.g'", "]", ",", "key", "=", "abs", ")", "]", "\n", "\n", "# fit to boltzmann function", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "norm", "=", "inact", "[", "0", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "inact", ")", ")", ":", "\n", "                    ", "inact", "[", "j", "]", "/=", "norm", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "boltzmann_fn", ",", "\n", "vsteps_inact", ",", "\n", "inact", ",", "\n", "p0", "=", "[", "-", "70", ",", "5", "]", ",", "\n", "bounds", "=", "(", "[", "-", "100.", ",", "0.", "]", ",", "\n", "100", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "\n", "fit", "=", "[", "boltzmann_fn", "(", "v", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "for", "v", "in", "vsteps_inact", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "inact", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "inact", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "inact", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "Vh", "=", "popt", "[", "0", "]", "\n", "k", "=", "popt", "[", "1", "]", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output_Vh", "=", "output_Vh", "+", "[", "Vh", "]", "\n", "output_k", "=", "output_k", "+", "[", "k", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output_Vh", "=", "output_Vh", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "output_k", "=", "output_k", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "output", "=", "output_Vh", "+", "output_k", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_schneider.schneider_recov_sum_stats": [[544, 627], ["enumerate", "data.split_periodic", "d.split", "d_.trim", "d_.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "numpy.exp", "max", "max", "len", "numpy.exp", "scipy.curve_fit", "numpy.sum", "numpy.sum", "min", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "ina_schneider.schneider_recov_sum_stats.double_exp"], "function", ["None"], ["", "def", "schneider_recov_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "double_exp", "(", "t", ",", "tau_r1", ",", "tau_r2", ",", "A0", ",", "A1", ",", "A2", ")", ":", "\n", "        ", "return", "A0", "-", "A1", "*", "np", ".", "exp", "(", "-", "t", "/", "tau_r1", ")", "-", "A2", "*", "np", ".", "exp", "(", "-", "t", "/", "tau_r2", ")", "\n", "# single_exp fn makes sense when looking at [Schneider1994]", "\n", "", "def", "single_exp", "(", "t", ",", "tau_r2", ",", "A0", ",", "A2", ")", ":", "\n", "        ", "return", "A0", "-", "A2", "*", "np", ".", "exp", "(", "-", "t", "/", "tau_r2", ")", "\n", "", "output1", "=", "[", "]", "\n", "output2", "=", "[", "]", "\n", "timename", "=", "'engine.time'", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "data", ".", "split_periodic", "(", "tsplit_recov", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "True", ")", ")", ":", "\n", "        ", "recov", "=", "[", "]", "\n", "for", "t", "in", "tsplits_recov", ":", "\n", "            ", "d_", ",", "d", "=", "d", ".", "split", "(", "t", ")", "\n", "step1", "=", "d_", ".", "trim", "(", "d_", "[", "timename", "]", "[", "0", "]", "+", "tpre", ",", "\n", "d_", "[", "timename", "]", "[", "0", "]", "+", "tpre", "+", "tstep1", ",", "\n", "adjust", "=", "True", ")", "\n", "step2", "=", "d_", ".", "trim_left", "(", "t", "-", "tstep2", ",", "adjust", "=", "True", ")", "\n", "try", ":", "\n", "                ", "max1", "=", "max", "(", "step1", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", "\n", "max2", "=", "max", "(", "step2", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", "\n", "recov", "=", "recov", "+", "[", "max2", "/", "max1", "]", "\n", "", "except", ":", "\n", "                ", "recov", "=", "recov", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "# Now fit output to double exponential", "\n", "", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "if", "i", "<", "len", "(", "prepulse_recov_r1", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "double_exp", ",", "\n", "twaits_recov", ",", "\n", "recov", ",", "\n", "p0", "=", "[", "5.", ",", "20.", ",", "0.", ",", "0.5", ",", "0.5", "]", ",", "\n", "bounds", "=", "(", "[", "0.", "]", ",", "\n", "[", "np", ".", "inf", ",", "np", ".", "inf", ",", "1.0", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "\n", "fit", "=", "[", "double_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ",", "popt", "[", "3", "]", ",", "popt", "[", "4", "]", ")", "\n", "for", "t", "in", "twaits_recov", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "recov", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taur1", "=", "min", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "taur2", "=", "max", "(", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "output1", "=", "output1", "+", "[", "taur1", "]", "\n", "output2", "=", "output2", "+", "[", "taur2", "]", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "\n", "", "", "except", ":", "\n", "                    ", "output1", "=", "output1", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "output2", "=", "output2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "else", ":", "\n", "                ", "try", ":", "\n", "                    ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "twaits_recov", ",", "\n", "recov", ",", "\n", "p0", "=", "[", "20.", ",", "0.", ",", "0.5", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "-", "np", ".", "inf", ",", "-", "np", ".", "inf", "]", ",", "\n", "np", ".", "inf", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "\n", "for", "t", "in", "twaits_recov", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "recov", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "taur2", "=", "popt", "[", "0", "]", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                        ", "output2", "=", "output2", "+", "[", "taur2", "]", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                    ", "output2", "=", "output2", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "", "output", "=", "output1", "+", "output2", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_firek.firek_inact_sum_stats": [[40, 53], ["data.split_periodic", "max", "d.trim_left.trim_left", "range", "len", "max", "len", "float"], "function", ["None"], ["def", "firek_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "20800", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "20400", ",", "adjust", "=", "True", ")", "\n", "inact_gate", "=", "d", "[", "'ito.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "inact_gate", ",", "key", "=", "abs", ")", "]", "\n", "", "norm", "=", "max", "(", "output", ")", "\n", "try", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "            ", "output", "[", "i", "]", "/=", "norm", "\n", "", "", "except", ":", "\n", "        ", "output", "=", "[", "float", "(", "'inf'", ")", ",", "]", "*", "len", "(", "output", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_nygren.nygren_inact_kin_sum_stats": [[61, 109], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "numpy.sum", "numpy.sum", "Exception", "ito_nygren.nygren_inact_kin_sum_stats.single_exp"], "function", ["None"], ["def", "nygren_inact_kin_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "+", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "20400", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "20000", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'ito.i_to'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "norm", "=", "current", "[", "0", "]", "\n", "current", "=", "[", "c", "/", "norm", "for", "c", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "time", ",", "\n", "current", ",", "\n", "p0", "=", "[", "10", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "tau", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output", "=", "output", "+", "[", "tau", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_nygren.nygren_rec_sum_stats": [[162, 209], ["enumerate", "data.split_periodic", "d.split", "d_.trim", "d_.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "max", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "ito_nygren.nygren_inact_kin_sum_stats.single_exp"], "function", ["None"], ["", "def", "nygren_rec_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "-", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "timename", "=", "'engine.time'", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "data", ".", "split_periodic", "(", "tsplit_rec", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ")", ":", "\n", "        ", "recov", "=", "[", "]", "\n", "for", "t", "in", "tsplits_rec", ":", "\n", "            ", "d_", ",", "d", "=", "d", ".", "split", "(", "t", ")", "\n", "step1", "=", "d_", ".", "trim", "(", "d_", "[", "timename", "]", "[", "0", "]", "+", "20000", ",", "\n", "d_", "[", "timename", "]", "[", "0", "]", "+", "20000", "+", "100", ",", "\n", "adjust", "=", "True", ")", "\n", "step2", "=", "d_", ".", "trim_left", "(", "t", "-", "100", ",", "adjust", "=", "True", ")", "\n", "try", ":", "\n", "                ", "max1", "=", "max", "(", "step1", "[", "'ito.i_to'", "]", ",", "key", "=", "abs", ")", "\n", "max2", "=", "max", "(", "step2", "[", "'ito.i_to'", "]", ",", "key", "=", "abs", ")", "\n", "recov", "=", "recov", "+", "[", "max2", "/", "max1", "]", "\n", "", "except", ":", "\n", "                ", "recov", "=", "recov", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "\n", "# now fit to exponential curve", "\n", "", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "twaits", ",", "\n", "recov", ",", "\n", "p0", "=", "[", "50", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "twaits", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "recov", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "tau", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output", "=", "output", "+", "[", "tau", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ical_mewes.mewes_act_sum_stats": [[42, 57], ["data.split_periodic", "max", "d.trim_left.trim_left", "range", "range", "len", "len", "max"], "function", ["None"], ["def", "mewes_act_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10450", ",", "adjust", "=", "True", ",", "\n", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "act_gate", "=", "d", "[", "'ical.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "act_gate", ",", "key", "=", "abs", ")", "]", "\n", "", "norm", "=", "max", "(", "output", ")", "\n", "if", "norm", ">", "0", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "            ", "output", "[", "i", "]", "/=", "norm", "\n", "", "", "else", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "            ", "output", "[", "i", "]", "=", "norm", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_iv_sum_stats": [[59, 66], ["data.split_periodic", "d.trim_left.trim_left", "max"], "function", ["None"], ["sakakibara_conditions", "=", "{", "'na_conc.Na_o'", ":", "5", ",", "# mM", "\n", "'na_conc.Na_i'", ":", "5", ",", "# mM", "\n", "'phys.T'", ":", "290.15", "}", "# K", "\n", "\n", "def", "sakakibara_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11030", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "11000", ",", "adjust", "=", "True", ")", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_act_sum_stats": [[182, 192], ["data.split_periodic", "max", "range", "d.trim_left.trim_left", "len", "max"], "function", ["None"], ["                ", "if", "fast", ":", "\n", "                    ", "output_fast", "=", "output_fast", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "if", "slow", ":", "\n", "                    ", "output_slow", "=", "output_slow", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "", "output", "=", "output_fast", "+", "output_slow", "\n", "return", "output", "\n", "\n", "", "def", "sakakibara_inact_kin_fast_sum_stats", "(", "data", ")", ":", "\n", "    ", "return", "sakakibara_inact_kin_sum_stats", "(", "data", ",", "fast", "=", "True", ",", "slow", "=", "False", ")", "\n", "\n", "", "def", "sakakibara_inact_kin_slow_sum_stats", "(", "data", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_sum_stats_wrapper": [[552, 563], ["range", "data.split", "d.trim_left.trim_left", "len", "max"], "function", ["None"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_80_sum_stats": [[564, 566], ["ina_sakakibara.sakakibara_inact_kin_sum_stats_wrapper"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_sum_stats_wrapper"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_100_sum_stats": [[566, 568], ["ina_sakakibara.sakakibara_inact_kin_sum_stats_wrapper"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_inact_kin_sum_stats_wrapper"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec_sum_stats_wrapper": [[882, 898], ["data.split", "d.trim", "d.trim_left", "max", "max", "float"], "function", ["None"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec140_sum_stats": [[899, 901], ["ina_sakakibara.sakakibara_rec_sum_stats_wrapper"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec_sum_stats_wrapper"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec120_sum_stats": [[901, 903], ["ina_sakakibara.sakakibara_rec_sum_stats_wrapper"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec_sum_stats_wrapper"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec100_sum_stats": [[903, 905], ["ina_sakakibara.sakakibara_rec_sum_stats_wrapper"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_sakakibara.sakakibara_rec_sum_stats_wrapper"], []], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_firek.firek_inact_sum_stats": [[40, 53], ["data.split_periodic", "max", "d.trim_left.trim_left", "range", "len", "len", "float"], "function", ["None"], ["def", "firek_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "22900", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "22500", ",", "adjust", "=", "True", ")", "\n", "inact_gate", "=", "d", "[", "'isus.g'", "]", "\n", "output", "=", "output", "+", "[", "inact_gate", "[", "-", "1", "]", "]", "\n", "", "norm", "=", "max", "(", "output", ")", "\n", "try", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "            ", "output", "[", "i", "]", "/=", "norm", "\n", "", "", "except", ":", "\n", "        ", "output", "=", "[", "float", "(", "'inf'", ")", ",", "]", "*", "len", "(", "output", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_nygren.nygren_inact_kin_sum_stats": [[61, 109], ["data.split_periodic", "d.trim_left.trim_left", "numpy.argmax", "numpy.abs", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "scipy.curve_fit", "numpy.sum", "numpy.sum", "Exception", "isus_nygren.nygren_inact_kin_sum_stats.single_exp"], "function", ["None"], ["def", "nygren_inact_kin_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "+", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "20400", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "20000", ",", "adjust", "=", "True", ")", "\n", "\n", "current", "=", "d", "[", "'isus.i_sus'", "]", "\n", "time", "=", "d", "[", "'engine.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "norm", "=", "current", "[", "0", "]", "\n", "current", "=", "[", "c", "/", "norm", "for", "c", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "time", ",", "\n", "current", ",", "\n", "p0", "=", "[", "300", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "time", "]", "\n", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "current", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "current", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "tau", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                    ", "output", "=", "output", "+", "[", "tau", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.isus_nygren.nygren_rec_sum_stats": [[154, 200], ["data.split", "d_.trim", "d_.trim_left", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "max", "max", "scipy.curve_fit", "numpy.sum", "numpy.sum", "numpy.exp", "isus_nygren.nygren_inact_kin_sum_stats.single_exp"], "function", ["None"], ["", "def", "nygren_rec_sum_stats", "(", "data", ")", ":", "\n", "    ", "def", "single_exp", "(", "t", ",", "tau", ",", "A", ",", "A0", ")", ":", "\n", "        ", "return", "A0", "-", "A", "*", "np", ".", "exp", "(", "-", "t", "/", "tau", ")", "\n", "", "output", "=", "[", "]", "\n", "timename", "=", "'engine.time'", "\n", "recov", "=", "[", "]", "\n", "for", "t", "in", "tsplits_rec", ":", "\n", "        ", "d_", ",", "data", "=", "data", ".", "split", "(", "t", ")", "\n", "step1", "=", "d_", ".", "trim", "(", "d_", "[", "timename", "]", "[", "0", "]", "+", "20000", ",", "\n", "d_", "[", "timename", "]", "[", "0", "]", "+", "20000", "+", "100", ",", "\n", "adjust", "=", "True", ")", "\n", "step2", "=", "d_", ".", "trim_left", "(", "t", "-", "100", ",", "adjust", "=", "True", ")", "\n", "try", ":", "\n", "            ", "max1", "=", "max", "(", "step1", "[", "'isus.i_sus'", "]", ",", "key", "=", "abs", ")", "\n", "max2", "=", "max", "(", "step2", "[", "'isus.i_sus'", "]", ",", "key", "=", "abs", ")", "\n", "recov", "=", "recov", "+", "[", "max2", "/", "max1", "]", "\n", "", "except", ":", "\n", "            ", "recov", "=", "recov", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "\n", "# now fit to exponential curve", "\n", "", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "            ", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "single_exp", ",", "\n", "twaits", ",", "\n", "recov", ",", "\n", "p0", "=", "[", "300", ",", "0.5", ",", "0.", "]", ",", "\n", "bounds", "=", "(", "0.", ",", "\n", "[", "np", ".", "inf", ",", "1.0", ",", "1.0", "]", ")", ",", "\n", "max_nfev", "=", "1000", ")", "\n", "fit", "=", "[", "single_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ",", "popt", "[", "2", "]", ")", "for", "t", "in", "twaits", "]", "\n", "# Calculate r2", "\n", "ss_res", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "array", "(", "fit", ")", ")", "**", "2", ")", "\n", "ss_tot", "=", "np", ".", "sum", "(", "(", "np", ".", "array", "(", "recov", ")", "-", "np", ".", "mean", "(", "np", ".", "array", "(", "recov", ")", ")", ")", "**", "2", ")", "\n", "r2", "=", "1", "-", "(", "ss_res", "/", "ss_tot", ")", "\n", "\n", "tau", "=", "popt", "[", "0", "]", "\n", "\n", "if", "r2", ">", "fit_threshold", ":", "\n", "                ", "output", "=", "output", "+", "[", "tau", "]", "\n", "", "else", ":", "\n", "                ", "raise", "RuntimeWarning", "(", "'scipy.optimize.curve_fit found a poor fit'", ")", "\n", "", "", "except", ":", "\n", "            ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_wang.wang_act_sum_stats": [[50, 63], ["data.split_periodic", "max", "d.trim_left.trim_left", "range", "len", "max", "len", "float"], "function", ["None"], ["def", "wang_act_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11000", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "act_gate", "=", "d", "[", "'ito.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "act_gate", ",", "key", "=", "abs", ")", "]", "\n", "", "norm", "=", "max", "(", "output", ")", "\n", "try", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "            ", "output", "[", "i", "]", "/=", "norm", "\n", "", "", "except", ":", "\n", "        ", "output", "=", "[", "float", "(", "'inf'", ")", ",", "]", "*", "len", "(", "output", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_wang.wang_inact_sum_stats": [[92, 105], ["data.split_periodic", "max", "d.trim_left.trim_left", "range", "len", "max", "len", "float"], "function", ["None"], ["def", "wang_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "22000", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "21000", ",", "adjust", "=", "True", ")", "\n", "inact_gate", "=", "d", "[", "'ito.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "inact_gate", ",", "key", "=", "abs", ")", "]", "\n", "", "norm", "=", "max", "(", "output", ")", "\n", "try", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "            ", "output", "[", "i", "]", "/=", "norm", "\n", "", "", "except", ":", "\n", "        ", "output", "=", "[", "float", "(", "'inf'", ")", ",", "]", "*", "len", "(", "output", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ito_shibata.shibata_act_sum_stats": [[43, 53], ["data.split_periodic", "max", "range", "d.trim_left.trim_left", "len", "max"], "function", ["None"], ["def", "shibata_act_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "20115", ",", "adjust", "=", "True", ",", "closed_intervals", "=", "False", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim_left", "(", "20015", ",", "adjust", "=", "True", ")", "\n", "act_gate", "=", "d", "[", "'ito.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "act_gate", ",", "key", "=", "abs", ")", "]", "\n", "", "norm", "=", "max", "(", "output", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "/=", "norm", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_original.temperature_correct": [[11, 13], ["None"], "function", ["None"], ["def", "temperature_correct", "(", "R0", ",", "T0", ",", "T1", ",", "Q10", ")", ":", "\n", "    ", "return", "R0", "*", "Q10", "**", "(", "(", "T0", "-", "T1", ")", "/", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_original.summary_statistics": [[221, 470], ["data[].split_periodic", "range", "data[].split_periodic", "range", "data[].split_periodic", "enumerate", "data[].split_periodic", "range", "d.trim.trim", "max", "d.trim.trim().npview", "max", "d.trim.trim", "d.trim.trim", "numpy.argmax", "numpy.argwhere", "str", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.abs", "numpy.isclose", "len", "numpy.exp", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "len", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "str", "str", "d.trim.trim", "str", "str", "numpy.exp", "max", "scipy.curve_fit", "max", "scipy.curve_fit", "enumerate", "scipy.curve_fit", "str", "str", "str", "str", "Exception", "cm_ina_original.summary_statistics.sum_of_exp"], "function", ["None"], ["", "def", "summary_statistics", "(", "data", ")", ":", "\n", "    ", "\"\"\"Converts raw simulation output to sensible results\"\"\"", "\n", "\n", "# Check for error", "\n", "if", "data", "is", "None", ":", "\n", "        ", "return", "{", "}", "\n", "\n", "# Process sensible results", "\n", "", "ss", "=", "{", "}", "\n", "cnt", "=", "0", "\n", "\n", "'''\n    # Summary statistic for Schneider data\n    # I-V curve (normalised)\n    d0 = data[0].split_periodic(512, adjust=True)\n    for d in d0:\n        d = d.trim(500, 512, adjust=True)\n        current = d['ina.i_Na']\n        index = np.argmax(np.abs(current))\n        ss[str(cnt)] = current[index] / max_observed_peak\n        cnt += 1\n    '''", "\n", "\n", "''' Summary statistic for Sakakibara IV curve (normalised)\n    d0 = data[0].split_periodic(10000, adjust=True)\n    for d in d0:\n        d = d.trim(9900, 10000, adjust=True)\n        current = d['ina.i_Na']\n        index = np.argmax(np.abs(current))\n        ss[str(cnt)] = current[index] / max_observed_peak\n        cnt += 1\n    '''", "\n", "\n", "# Activation data for Sakakibara", "\n", "d0", "=", "data", "[", "0", "]", ".", "split_periodic", "(", "10000", ",", "adjust", "=", "True", ")", "\n", "for", "d", "in", "d0", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "9900", ",", "10000", ",", "adjust", "=", "True", ")", "\n", "gate", "=", "d", "[", "'ina.g'", "]", "\n", "#gate = d.npview()['ina.m']**3", "\n", "ss", "[", "str", "(", "cnt", ")", "]", "=", "max", "(", "gate", ")", "\n", "cnt", "+=", "1", "\n", "", "for", "i", "in", "range", "(", "cnt", ")", ":", "\n", "        ", "ss", "[", "str", "(", "i", ")", "]", "=", "ss", "[", "str", "(", "i", ")", "]", "/", "ss", "[", "str", "(", "cnt", "-", "1", ")", "]", "\n", "", "cnt0", "=", "cnt", "\n", "\n", "# Inactivation data", "\n", "d1", "=", "data", "[", "1", "]", ".", "split_periodic", "(", "11030", ",", "adjust", "=", "True", ")", "\n", "for", "d", "in", "d1", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "11000", ",", "11030", ",", "adjust", "=", "True", ")", ".", "npview", "(", ")", "\n", "gate", "=", "d", "[", "'ina.g'", "]", "\n", "#gate = d['ina.h']*d['ina.j']", "\n", "ss", "[", "str", "(", "cnt", ")", "]", "=", "max", "(", "gate", ")", "#gate[0]", "\n", "cnt", "+=", "1", "\n", "", "for", "i", "in", "range", "(", "cnt0", "+", "1", ",", "cnt", ")", ":", "\n", "        ", "ss", "[", "str", "(", "i", ")", "]", "=", "ss", "[", "str", "(", "i", ")", "]", "/", "ss", "[", "str", "(", "cnt0", ")", "]", "\n", "", "ss", "[", "str", "(", "cnt0", ")", "]", "=", "1.0", "\n", "\n", "'''\n    # Inactivation data\n    d1 = data[1].split_periodic(10000+32+30, adjust=True)\n    cnt_normalise = cnt\n    for d in d1:\n        d = d.trim(10032, 10062, adjust=True).npview()\n        curr = d['ina.i_Na']\n        ss[str(cnt)] = max(curr, key=abs)\n        # normalise to maximum current\n        if cnt != cnt_normalise:\n            ss[str(cnt)] = ss[str(cnt)] / ss[str(cnt_normalise)]\n        cnt += 1\n    ss[str(cnt_normalise)] = 1.0 # finally normalise initial current\n\n    d2 = data[2].split_periodic(10000+64+30, adjust=True)\n    cnt_normalise = cnt\n    for d in d2:\n        d = d.trim(10064, 10094, adjust=True).npview()\n        curr = d['ina.i_Na']\n        ss[str(cnt)] = max(curr, key=abs)\n        # normalise to maximum current\n        if cnt != cnt_normalise:\n            ss[str(cnt)] = ss[str(cnt)] / ss[str(cnt_normalise)]\n        cnt += 1\n    ss[str(cnt_normalise)] = 1.0 # finally normalise initial current\n\n    d3 = data[3].split_periodic(10000+128+30, adjust=True)\n    cnt_normalise = cnt\n    for d in d3:\n        d = d.trim(10128, 10158, adjust=True).npview()\n        curr = d['ina.i_Na']\n        ss[str(cnt)] = max(curr, key=abs)\n        # normalise to maximum current\n        if cnt != cnt_normalise:\n            ss[str(cnt)] = ss[str(cnt)] / ss[str(cnt_normalise)]\n        cnt += 1\n    ss[str(cnt_normalise)] = 1.0 # finally normalise initial current\n\n    d4 = data[4].split_periodic(10000+256+30, adjust=True)\n    cnt_normalise = cnt\n    for d in d4:\n        d = d.trim(10256, 10286, adjust=True).npview()\n        curr = d['ina.i_Na']\n        ss[str(cnt)] = max(curr, key=abs)\n        # normalise to maximum current\n        if cnt != cnt_normalise:\n            ss[str(cnt)] = ss[str(cnt)] / ss[str(cnt_normalise)]\n        cnt += 1\n    ss[str(cnt_normalise)] = 1.0 # finally normalise initial current\n\n    d5 = data[5].split_periodic(10000+512+30, adjust=True)\n    cnt_normalise = cnt\n    for d in d5:\n        d = d.trim(10512, 10542, adjust=True).npview()\n        curr = d['ina.i_Na']\n        ss[str(cnt)] = max(curr, key=abs)\n        # normalise to maximum current\n        if cnt != cnt_normalise:\n            ss[str(cnt)] = ss[str(cnt)] / ss[str(cnt_normalise)]\n        cnt += 1\n    ss[str(cnt_normalise)] = 1.0 # finally normalise initial current\n    '''", "\n", "\n", "# Activation and inactivation kinetics (tm and th)", "\n", "d2", "=", "data", "[", "2", "]", ".", "split_periodic", "(", "600", ",", "adjust", "=", "True", ")", "\n", "for", "i", ",", "d", "in", "enumerate", "(", "d2", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "500", ",", "600", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "time", "=", "d", "[", "'environment.time'", "]", "\n", "\n", "# Remove constant", "\n", "c0", "=", "d", "[", "'ina.i_Na'", "]", "[", "0", "]", "\n", "current", "=", "[", "(", "c_", "-", "c0", ")", "for", "c_", "in", "current", "]", "\n", "\n", "def", "sum_of_exp", "(", "t", ",", "taum", ",", "tauh", ")", ":", "\n", "            ", "return", "(", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "taum", ")", ")", "**", "3", "*", "\n", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", ")", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "sum_of_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "0.5", ",", "1.", "]", ",", "#max(current, key=abs)/2],", "\n", "bounds", "=", "(", "[", "0.", ",", "0.", "]", ",", "#min(current)],", "\n", "[", "1.", ",", "100.", "]", ")", ")", "#, max(current)]))", "\n", "fit", "=", "[", "sum_of_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "for", "t", "in", "time", "]", "\n", "ss", "[", "str", "(", "cnt", ")", "]", "=", "popt", "[", "0", "]", "/", "max_tm", "\n", "#if i < 9:", "\n", "#    ss[str(cnt)] = popt[0]/max_tm", "\n", "#ss[str(cnt+9)] = popt[1]/max_th", "\n", "cnt", "+=", "1", "\n", "", "except", "(", "Exception", ",", "RuntimeWarning", ",", "OptimizeWarning", ",", "RuntimeError", ")", ":", "\n", "                ", "ss", "[", "str", "(", "cnt", ")", "]", "=", "float", "(", "'inf'", ")", "\n", "#if i < 9:", "\n", "#    ss[str(cnt)] = float('inf')", "\n", "#ss[str(cnt+9)] = float('inf')", "\n", "cnt", "+=", "1", "\n", "\n", "# Inactivation kinetics (th)", "\n", "", "", "", "d3", "=", "data", "[", "3", "]", ".", "split_periodic", "(", "1100", ",", "adjust", "=", "True", ")", "\n", "for", "d", "in", "d3", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "1000", ",", "1100", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "time", "=", "d", "[", "'environment.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "# Remove constant", "\n", "#c0 = current[-1]", "\n", "#current = [(c_-c0) for c_ in current]", "\n", "\n", "index", "=", "np", ".", "argwhere", "(", "np", ".", "isclose", "(", "current", ",", "0.0", ")", ")", "\n", "if", "len", "(", "index", ")", "!=", "0", ":", "\n", "            ", "current", "=", "current", "[", ":", "index", "[", "0", "]", "[", "0", "]", "]", "\n", "time", "=", "time", "[", ":", "index", "[", "0", "]", "[", "0", "]", "]", "\n", "\n", "", "def", "simple_exp", "(", "t", ",", "tauh", ")", ":", "\n", "            ", "return", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "\n", "#def sum_of_exp2(t, tauh, tauj, Arel):", "\n", "#    return Arel*np.exp(-t/tauh) + (1-Arel)*np.exp(-t/tauj)", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "simple_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "5", "]", ",", "bounds", "=", "(", "[", "0.01", "]", ",", "[", "20.0", "]", ")", ")", "\n", "#popt, _ = so.curve_fit(sum_of_exp2, time, current,", "\n", "#                       p0=[9, 60, 0.9],", "\n", "#                       bounds=([0.1, 10, 0.0],", "\n", "#                               [10, 100, 1.0]))", "\n", "tauh", "=", "popt", "[", "0", "]", "\n", "#tauj = popt[1]", "\n", "#Arel = popt[2]", "\n", "#fit = [sum_of_exp2(t, tauh, tauj, Arel) for t in time]", "\n", "\n", "ss", "[", "str", "(", "cnt", ")", "]", "=", "tauh", "/", "max_th", "\n", "#ss[str(cnt+4)] = tauj/max_tj", "\n", "#ss[str(cnt+8)] = Arel", "\n", "cnt", "+=", "1", "\n", "", "except", ":", "\n", "                ", "ss", "[", "str", "(", "cnt", ")", "]", "=", "float", "(", "'inf'", ")", "\n", "#ss[str(cnt+4)] = float('inf')", "\n", "#ss[str(cnt+8)] = float('inf')", "\n", "cnt", "+=", "1", "\n", "\n", "", "", "", "twaits_split", "=", "[", "t", "+", "3000", "for", "t", "in", "twaits", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "twaits_split", ")", "-", "1", ")", ":", "\n", "        ", "twaits_split", "[", "i", "+", "1", "]", "+=", "twaits_split", "[", "i", "]", "\n", "\n", "", "for", "d", "in", "data", "[", "4", ":", "]", ":", "\n", "        ", "rec", "=", "[", "]", "\n", "trim1", ",", "trim2", ",", "trim3", "=", "1000", ",", "2000", ",", "3000", "\n", "\n", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "# Get recovery curve", "\n", "                ", "for", "i", ",", "t", "in", "enumerate", "(", "twaits_split", ")", ":", "\n", "                    ", "trace", ",", "d", "=", "d", ".", "split", "(", "t", ")", "\n", "peak1", "=", "max", "(", "trace", ".", "trim", "(", "trim1", ",", "trim2", ")", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", "\n", "peak2", "=", "max", "(", "trace", ".", "trim", "(", "trim2", "+", "twaits", "[", "i", "]", ",", "trim3", "+", "twaits", "[", "i", "]", ")", "[", "'ina.i_Na'", "]", ",", "\n", "key", "=", "abs", ")", "\n", "rec", ".", "append", "(", "peak2", "/", "peak1", ")", "\n", "trim1", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "trim2", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "trim3", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "\n", "# Fit double exponential to recovery curve", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "simple_exp", ",", "twaits", ",", "1.", "-", "np", ".", "asarray", "(", "rec", ")", ",", "\n", "p0", "=", "[", "1", "]", ",", "\n", "bounds", "=", "(", "[", "0", "]", ",", "[", "100", "]", ")", ")", "\n", "tauh", "=", "popt", "[", "0", "]", "\n", "ss", "[", "str", "(", "cnt", ")", "]", "=", "tauh", "/", "max_th_depol", "\n", "cnt", "+=", "1", "\n", "", "except", ":", "\n", "                ", "ss", "[", "str", "(", "cnt", ")", "]", "=", "float", "(", "'inf'", ")", "\n", "cnt", "+=", "1", "\n", "", "", "", "return", "ss", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_markov.temperature_adjust": [[12, 14], ["None"], "function", ["None"], ["def", "temperature_adjust", "(", "R0", ",", "T0", ",", "T1", ",", "Q10", ")", ":", "\n", "    ", "return", "R0", "*", "Q10", "**", "(", "(", "T0", "-", "T1", ")", "/", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_markov.schneider_iv_sum_stats": [[47, 55], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs"], "function", ["None"], ["def", "schneider_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "512", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "500", ",", "512", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "output", "=", "output", "+", "[", "current", "[", "index", "]", "/", "schneider_iv_max_peak", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_markov.sakakibara_iv_sum_stats": [[90, 98], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs"], "function", ["None"], ["def", "sakakibara_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "9900", ",", "10000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "output", "=", "output", "+", "[", "current", "[", "index", "]", "/", "sakakibara_iv_max_peak", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_markov.sakakibara_act_sum_stats": [[116, 125], ["data.split_periodic", "range", "d.trim.trim", "len", "max"], "function", ["None"], ["def", "sakakibara_act_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "9900", ",", "10000", ",", "adjust", "=", "True", ")", "\n", "gate", "=", "d", "[", "'ina.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "gate", ")", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "-", "1", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_markov.sakakibara_inact_sum_stats": [[146, 156], ["data.split_periodic", "range", "d.trim().npview.trim().npview", "len", "d.trim().npview.trim", "max"], "function", ["None"], ["def", "sakakibara_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11030", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "11000", ",", "11030", ",", "adjust", "=", "True", ")", ".", "npview", "(", ")", "\n", "gate", "=", "d", "[", "'ina.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "gate", ")", "]", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "0", "]", "\n", "", "output", "[", "0", "]", "=", "1.", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_markov.schneider_taum_sum_stats": [[180, 211], ["data.split_periodic", "d.trim.trim", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "max", "scipy.curve_fit", "Exception", "cm_ina_markov.schneider_taum_sum_stats.sum_of_exp"], "function", ["None"], ["def", "schneider_taum_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "600", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "500", ",", "600", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "time", "=", "d", "[", "'environment.time'", "]", "\n", "\n", "# Remove constant", "\n", "c0", "=", "d", "[", "'ina.i_Na'", "]", "[", "0", "]", "\n", "current", "=", "[", "(", "c_", "-", "c0", ")", "for", "c_", "in", "current", "]", "\n", "\n", "def", "sum_of_exp", "(", "t", ",", "taum", ",", "tauh", ")", ":", "\n", "            ", "return", "(", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "taum", ")", ")", "**", "3", "*", "\n", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", ")", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "sum_of_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "0.5", ",", "1.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "100.", "]", ")", ")", "\n", "fit", "=", "[", "sum_of_exp", "(", "t", ",", "popt", "[", "0", "]", ",", "popt", "[", "1", "]", ")", "for", "t", "in", "time", "]", "\n", "output", "=", "output", "+", "[", "popt", "[", "0", "]", "/", "max_tm", "]", "\n", "", "except", "(", "Exception", ",", "RuntimeWarning", ",", "OptimizeWarning", ",", "RuntimeError", ")", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_markov.sakakibara_tauh_sum_stats": [[236, 274], ["data.split_periodic", "numpy.exp", "d.trim.trim", "numpy.argmax", "numpy.argwhere", "numpy.abs", "numpy.isclose", "len", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "max", "scipy.curve_fit", "Exception", "len", "len", "float"], "function", ["None"], ["def", "sakakibara_tauh_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "simple_exp", "(", "t", ",", "tauh", ")", ":", "\n", "        ", "return", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "\n", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "1100", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "1000", ",", "1100", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "time", "=", "d", "[", "'environment.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "# Keep only decay phase (i.e. not beyond when current=0)", "\n", "index", "=", "np", ".", "argwhere", "(", "np", ".", "isclose", "(", "current", ",", "0.0", ")", ")", "\n", "if", "len", "(", "index", ")", "!=", "0", ":", "\n", "            ", "current", "=", "current", "[", ":", "index", "[", "0", "]", "[", "0", "]", "]", "\n", "time", "=", "time", "[", ":", "index", "[", "0", "]", "[", "0", "]", "]", "\n", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "simple_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "5", "]", ",", "bounds", "=", "(", "[", "0.01", "]", ",", "[", "20.0", "]", ")", ")", "\n", "tauh", "=", "popt", "[", "0", "]", "\n", "output", "=", "output", "+", "[", "tauh", "/", "max_th", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.cm_ina_markov.sakakibara_tauh_depol_sum_stats": [[314, 349], ["numpy.exp", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "enumerate", "scipy.curve_fit", "data.split", "max", "max", "rec.append", "len", "len", "numpy.asarray", "trace.trim", "trace.trim", "float"], "function", ["None"], ["", "def", "sakakibara_tauh_depol_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "simple_exp", "(", "t", ",", "tauh", ")", ":", "\n", "           ", "return", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "\n", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "'error'", ",", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "# Get recovery curve", "\n", "            ", "rec", "=", "[", "]", "\n", "trim1", ",", "trim2", ",", "trim3", "=", "1000", ",", "2000", ",", "3000", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "twaits_split", "*", "len", "(", "vsteps_th_depol", ")", ")", ":", "\n", "                ", "trace", ",", "data", "=", "data", ".", "split", "(", "t", ")", "\n", "peak1", "=", "max", "(", "trace", ".", "trim", "(", "trim1", ",", "trim2", ")", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", "\n", "peak2", "=", "max", "(", "trace", ".", "trim", "(", "trim2", "+", "twaits", "[", "i", "]", ",", "trim3", "+", "twaits", "[", "i", "]", ")", "[", "'ina.i_Na'", "]", ",", "\n", "key", "=", "abs", ")", "\n", "rec", ".", "append", "(", "peak2", "/", "peak1", ")", "\n", "# Update trim times for next iteration (not adjusting time)", "\n", "if", "i", "==", "len", "(", "twaits_split", ")", ":", "\n", "                    ", "trim1", ",", "trim2", ",", "trim3", "=", "1000", ",", "2000", ",", "3000", "\n", "", "else", ":", "\n", "                    ", "trim1", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "trim2", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "trim3", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "\n", "# Fit double exponential to recovery curve", "\n", "", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "simple_exp", ",", "twaits", ",", "1.", "-", "np", ".", "asarray", "(", "rec", ")", ",", "\n", "p0", "=", "[", "1", "]", ",", "\n", "bounds", "=", "(", "[", "0", "]", ",", "[", "100", "]", ")", ")", "\n", "tauh", "=", "popt", "[", "0", "]", "\n", "output", "=", "output", "+", "[", "tauh", "/", "max_th_depol", "]", "\n", "", "except", ":", "\n", "            ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.crn_ina.temperature_adjust": [[11, 13], ["None"], "function", ["None"], ["def", "temperature_adjust", "(", "R0", ",", "T0", ",", "T1", ",", "Q10", ")", ":", "\n", "    ", "return", "R0", "*", "Q10", "**", "(", "(", "T0", "-", "T1", ")", "/", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.crn_ina.schneider_iv_sum_stats": [[47, 55], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs"], "function", ["None"], ["def", "schneider_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "512", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "500", ",", "512", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "output", "=", "output", "+", "[", "current", "[", "index", "]", "/", "schneider_iv_max_peak", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.crn_ina.sakakibara_iv_sum_stats": [[91, 99], ["data.split_periodic", "d.trim.trim", "numpy.argmax", "numpy.abs"], "function", ["None"], ["def", "sakakibara_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "9900", ",", "10000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "output", "=", "output", "+", "[", "current", "[", "index", "]", "/", "sakakibara_iv_max_peak", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.crn_ina.sakakibara_act_sum_stats": [[118, 127], ["data.split_periodic", "range", "d.trim.trim", "len", "max"], "function", ["None"], ["def", "sakakibara_act_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "9900", ",", "10000", ",", "adjust", "=", "True", ")", "\n", "gate", "=", "d", "[", "'ina.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "gate", ")", "]", "\n", "", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "-", "1", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.crn_ina.sakakibara_inact_sum_stats": [[149, 159], ["data.split_periodic", "range", "d.trim().npview.trim().npview", "len", "d.trim().npview.trim", "max"], "function", ["None"], ["def", "sakakibara_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11030", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "11000", ",", "11030", ",", "adjust", "=", "True", ")", ".", "npview", "(", ")", "\n", "gate", "=", "d", "[", "'ina.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "gate", ")", "]", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "0", "]", "\n", "", "output", "[", "0", "]", "=", "1.", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.crn_ina.schneider_taum_sum_stats": [[184, 214], ["data.split_periodic", "d.trim.trim", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "numpy.exp", "max", "scipy.curve_fit", "Exception", "numpy.exp", "len", "len", "float"], "function", ["None"], ["def", "schneider_taum_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "600", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "500", ",", "600", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "time", "=", "d", "[", "'environment.time'", "]", "\n", "\n", "# Remove constant", "\n", "c0", "=", "d", "[", "'ina.i_Na'", "]", "[", "0", "]", "\n", "current", "=", "[", "(", "c_", "-", "c0", ")", "for", "c_", "in", "current", "]", "\n", "\n", "def", "sum_of_exp", "(", "t", ",", "taum", ",", "tauh", ")", ":", "\n", "            ", "return", "(", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "taum", ")", ")", "**", "3", "*", "\n", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", ")", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "sum_of_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "0.5", ",", "1.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "100.", "]", ")", ")", "\n", "output", "=", "output", "+", "[", "popt", "[", "0", "]", "/", "max_tm", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.crn_ina.sakakibara_tauh_sum_stats": [[240, 278], ["data.split_periodic", "numpy.exp", "d.trim.trim", "numpy.argmax", "numpy.argwhere", "numpy.abs", "numpy.isclose", "len", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "max", "scipy.curve_fit", "Exception", "len", "len", "float"], "function", ["None"], ["def", "sakakibara_tauh_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "simple_exp", "(", "t", ",", "tauh", ")", ":", "\n", "        ", "return", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "\n", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "1100", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "1000", ",", "1100", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "time", "=", "d", "[", "'environment.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n", "\n", "# Keep only decay phase (i.e. not beyond when current=0)", "\n", "index", "=", "np", ".", "argwhere", "(", "np", ".", "isclose", "(", "current", ",", "0.0", ")", ")", "\n", "if", "len", "(", "index", ")", "!=", "0", ":", "\n", "            ", "current", "=", "current", "[", ":", "index", "[", "0", "]", "[", "0", "]", "]", "\n", "time", "=", "time", "[", ":", "index", "[", "0", "]", "[", "0", "]", "]", "\n", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "simple_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "5", "]", ",", "bounds", "=", "(", "[", "0.01", "]", ",", "[", "20.0", "]", ")", ")", "\n", "tauh", "=", "popt", "[", "0", "]", "\n", "output", "=", "output", "+", "[", "tauh", "/", "max_th", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.crn_ina.sakakibara_tauh_depol_sum_stats": [[319, 352], ["data.split_periodic", "numpy.exp", "sum", "warnings.catch_warnings", "warnings.simplefilter", "warnings.simplefilter", "len", "enumerate", "scipy.curve_fit", "d.split", "max", "max", "rec.append", "numpy.asarray", "trace.trim", "trace.trim", "float"], "function", ["None"], ["", "def", "sakakibara_tauh_depol_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "simple_exp", "(", "t", ",", "tauh", ")", ":", "\n", "           ", "return", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "\n", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "sum", "(", "twaits", ")", "+", "len", "(", "twaits", ")", "*", "3000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "# Get recovery curve", "\n", "                ", "rec", "=", "[", "]", "\n", "trim1", ",", "trim2", ",", "trim3", "=", "1000", ",", "2000", ",", "3000", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "twaits_split", ")", ":", "\n", "                    ", "trace", ",", "data", "=", "d", ".", "split", "(", "t", ")", "\n", "peak1", "=", "max", "(", "trace", ".", "trim", "(", "trim1", ",", "trim2", ")", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", "\n", "peak2", "=", "max", "(", "trace", ".", "trim", "(", "trim2", "+", "twaits", "[", "i", "]", ",", "trim3", "+", "twaits", "[", "i", "]", ")", "[", "'ina.i_Na'", "]", ",", "\n", "key", "=", "abs", ")", "\n", "rec", ".", "append", "(", "peak2", "/", "peak1", ")", "\n", "# Update trim times for next iteration (not adjusting time)", "\n", "trim1", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "trim2", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "trim3", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "\n", "# Fit double exponential to recovery curve", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "simple_exp", ",", "twaits", ",", "1.", "-", "np", ".", "asarray", "(", "rec", ")", ",", "\n", "p0", "=", "[", "1", "]", ",", "\n", "bounds", "=", "(", "[", "0", "]", ",", "[", "100", "]", ")", ")", "\n", "tauh", "=", "popt", "[", "0", "]", "\n", "output", "=", "output", "+", "[", "tauh", "/", "max_th_depol", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_nrvm.peak_curr": [[59, 61], ["max"], "function", ["None"], ["def", "peak_curr", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", "\n", "#def normalise_by_peak(sim_results):", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_nrvm.normalise": [[65, 69], ["abs", "max"], "function", ["None"], ["", "def", "normalise", "(", "sim_results", ")", ":", "\n", "    ", "m", "=", "abs", "(", "max", "(", "sim_results", ",", "key", "=", "abs", ")", ")", "\n", "sim_results", "=", "[", "r", "/", "m", "for", "r", "in", "sim_results", "]", "\n", "return", "sim_results", ",", "False", "\n", "", "iv_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_nrvm.max_gna": [[80, 82], ["max"], "function", ["None"], ["def", "max_gna", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "0", "]", "[", "'ina.G_Na'", "]", ")", "\n", "", "act_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_nrvm.normalise_curr": [[105, 112], ["max", "sim_results.append", "max"], "function", ["None"], ["def", "normalise_curr", "(", "data", ")", ":", "\n", "    ", "sim_results", "=", "[", "]", "\n", "for", "record", "in", "data", ":", "\n", "        ", "sim_results", ".", "append", "(", "max", "(", "record", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", ")", "\n", "", "m", "=", "max", "(", "sim_results", ",", "key", "=", "abs", ")", "\n", "sim_results", "=", "[", "r", "/", "m", "for", "r", "in", "sim_results", "]", "\n", "return", "sim_results", "\n", "", "rec_prot1", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_nrvm.ratio_cond": [[123, 125], ["max", "max"], "function", ["None"], ["def", "ratio_cond", "(", "data", ")", ":", "\n", "    ", "return", "max", "(", "data", "[", "1", "]", "[", "'ina.G_Na'", "]", ")", "/", "max", "(", "data", "[", "0", "]", "[", "'ina.G_Na'", "]", ")", "\n", "", "rec_prot2", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.experiments.ina_nrvm.interpolate_align": [[137, 146], ["min", "abs", "numpy.interp", "max"], "function", ["None"], ["def", "interpolate_align", "(", "data", ")", ":", "\n", "    ", "import", "numpy", "as", "np", "\n", "simtime", "=", "data", "[", "0", "]", "[", "'environment.time'", "]", "\n", "simtime_min", "=", "min", "(", "simtime", ")", "\n", "simtime", "=", "[", "t", "-", "simtime_min", "for", "t", "in", "simtime", "]", "\n", "curr", "=", "data", "[", "0", "]", "[", "'ina.i_Na'", "]", "\n", "max_curr", "=", "abs", "(", "max", "(", "curr", ",", "key", "=", "abs", ")", ")", "\n", "curr", "=", "[", "c", "/", "max_curr", "for", "c", "in", "curr", "]", "\n", "return", "np", ".", "interp", "(", "time", ",", "simtime", ",", "curr", ")", "\n", "", "trace_prot", "=", "ExperimentStimProtocol", "(", "stim_times", ",", "stim_levels", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.IV_Sakakibara": [[9, 23], ["None"], "function", ["None"], ["def", "IV_Sakakibara", "(", ")", ":", "\n", "   ", "\"\"\"\n   Data points in IV curve for i_Na in human atrial cells\n   from fig. 1B in Sakakibara 1992\n\n   Already converted to pA/pF ( cell capacitance = 0.1161 nF)\n\n   No errors reported in data.\n   \"\"\"", "\n", "\n", "x", "=", "[", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", "]", "\n", "y", "=", "[", "0.0", ",", "0.0", ",", "0.0", ",", "-", "0.1555", ",", "-", "1.3371", ",", "-", "6.6232", ",", "-", "14.6457", ",", "-", "17.0089", ",", "\n", "-", "13.7750", ",", "-", "7.1207", ",", "2.0212", ",", "11.5362", ",", "21.5487", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.IV_Sakakibara_fig3A_2": [[42, 61], ["y.tolist.tolist", "numpy.asarray"], "function", ["None"], ["", "def", "IV_Sakakibara_fig3A_2", "(", ")", ":", "\n", "    ", "\"\"\"\n    IV curve (nA) data from Figure 3A in Sakakibara 1992 with [Na+]o = 2mM\n    No error reported\n    Already converted to pA/pF ( cell capacitance = 0.1161 nF)\n    digitilized the 04/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "x", "=", "[", "-", "100.05277", ",", "-", "90.02083", ",", "-", "80.25387", ",", "-", "70.022995", ",", "-", "60.125435", ",", "\n", "-", "50.103706", ",", "-", "40.20615", ",", "-", "30.306698", ",", "-", "20.517422", ",", "-", "10.796095", ",", "\n", "-", "0.80107594", ",", "9.591806", ",", "19.985445", ",", "30.13301", ",", "40.60368", "]", "\n", "\n", "y", "=", "[", "-", "0.040171184", ",", "-", "0.04726624", ",", "-", "0.03767147", ",", "-", "0.05315843", ",", "-", "0.093163274", ",", "\n", "-", "0.32303375", ",", "-", "0.3630386", ",", "-", "0.36178875", ",", "0.13461158", ",", "0.5980551", ",", "\n", "1.2345805", ",", "1.8543221", ",", "2.4905655", ",", "3.5560458", ",", "4.423269", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "y", ")", "/", "0.1161", "# converting to pA/pF", "\n", "y", "=", "y", ".", "tolist", "(", ")", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.IV_Sakakibara_fig3A_5": [[62, 81], ["y.tolist.tolist", "numpy.asarray"], "function", ["None"], ["", "def", "IV_Sakakibara_fig3A_5", "(", ")", ":", "\n", "    ", "\"\"\"\n    IV curve (nA) data from Figure 3A in Sakakibara 1992 with [Na+]o = 5mM\n    No error reported\n    Already converted to pA/pF ( cell capacitance = 0.1161 nF)\n    digitilized the 04/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "x", "=", "[", "-", "100.11921", ",", "-", "90.087265", ",", "-", "80.18857", ",", "-", "70.35669", ",", "-", "60.14095", ",", "\n", "-", "50.00375", ",", "-", "40.259872", ",", "-", "30.298147", ",", "-", "20.716883", ",", "-", "10.588613", ",", "\n", "-", "0.65019345", ",", "9.621544", ",", "19.828358", ",", "29.975168", ",", "40.581738", "]", "\n", "\n", "y", "=", "[", "-", "0.040124197", ",", "-", "0.047219254", ",", "-", "0.062471278", ",", "-", "0.085927255", ",", "-", "0.4314519", ",", "\n", "-", "1.0409596", ",", "-", "1.5346723", ",", "-", "1.6242298", ",", "-", "1.3174602", ",", "-", "0.67277783", ",", "\n", "0.178319", ",", "1.0539337", ",", "1.9625992", ",", "3.0115776", ",", "3.944714", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "y", ")", "/", "0.1161", "# converting to pA/pF", "\n", "y", "=", "y", ".", "tolist", "(", ")", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.IV_Sakakibara_fig3A_20": [[82, 101], ["y.tolist.tolist", "numpy.asarray"], "function", ["None"], ["", "def", "IV_Sakakibara_fig3A_20", "(", ")", ":", "\n", "    ", "\"\"\"\n    IV curve (nA) data from Figure 3A in Sakakibara 1992 with [Na+]o = 20mM\n    No error reported\n    Already converted to pA/pF ( cell capacitance = 0.1161 nF)\n    digitilized the 04/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "x", "=", "[", "-", "100.11921", ",", "-", "90.087265", ",", "-", "80.3222", ",", "-", "70.1657", ",", "-", "60.301064", ",", "\n", "-", "50.18293", ",", "-", "40.455853", ",", "-", "30.70895", ",", "-", "20.923836", ",", "-", "10.911792", ",", "\n", "-", "0.97412926", ",", "9.379557", ",", "19.483387", ",", "29.70874", ",", "39.92766", "]", "\n", "\n", "y", "=", "[", "-", "0.040124197", ",", "-", "0.047219254", ",", "-", "0.078879185", ",", "-", "0.26758894", ",", "-", "1.0254257", ",", "\n", "-", "3.4996932", ",", "-", "5.80866", ",", "-", "6.236365", ",", "-", "5.830725", ",", "-", "4.8229074", ",", "\n", "-", "3.9883125", ",", "-", "2.774456", ",", "-", "1.2138723", ",", "0.099089295", ",", "1.2717849", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "y", ")", "/", "0.1161", "# converting to pA/pF", "\n", "y", "=", "y", ".", "tolist", "(", ")", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.IV_Sakakibara_fig3A_all": [[102, 120], ["data_Sakakibara1992.IV_Sakakibara_fig3A_2", "Exception", "data_Sakakibara1992.IV_Sakakibara_fig3A_5", "data_Sakakibara1992.IV_Sakakibara_fig3A_20"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.IV_Sakakibara_fig3A_2", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.IV_Sakakibara_fig3A_5", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.IV_Sakakibara_fig3A_20"], ["", "def", "IV_Sakakibara_fig3A_all", "(", "Na", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns the IV curve (nA) data from Figure 3A in Sakakibara 1992 with [Na+]o = 2,5 or 20 mM\n\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Na", "in", "[", "2", ",", "5", ",", "20", "]", ")", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong Na concentration, ( = {} mM)\"", ".", "format", "(", "Na", ")", ")", "\n", "\n", "", "if", "Na", "==", "2", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "IV_Sakakibara_fig3A_2", "(", ")", "\n", "", "elif", "Na", "==", "5", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "IV_Sakakibara_fig3A_5", "(", ")", "\n", "", "elif", "Na", "==", "20", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "IV_Sakakibara_fig3A_20", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Act_Sakakibara": [[122, 147], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Act_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Activation data from Figure 2 in Sakakibara 1992\n\n    error reported as + or - SEM (N=46)\n\n    digitilized the 04/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "-", "100.14268", ",", "-", "90.370346", ",", "-", "80.2372", ",", "-", "70.027534", ",", "-", "60.390915", ",", "\n", "-", "50.63003", ",", "-", "40.88111", ",", "-", "30.848124", ",", "-", "20.855667", ",", "-", "11.04513", ",", "\n", "-", "0.6865988", ",", "9.164298", ",", "19.583584", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.0023289563", ",", "0.0020447162", ",", "0.0052403254", ",", "0.018904742", ",", "0.036657896", ",", "\n", "0.17249742", ",", "0.44329727", ",", "0.70652646", ",", "0.87842613", ",", "0.9642359", ",", "\n", "0.9895305", ",", "1.0043688", ",", "1.0046475", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.0023289563", ",", "0.0020447162", ",", "0.0052403254", ",", "0.018904742", ",", "0.036657896", ",", "\n", "0.15296747", ",", "0.41819438", ",", "0.6863299", ",", "0.87842613", ",", "0.9642359", ",", "\n", "0.9895305", ",", "1.0043688", ",", "1.0046475", "]", ")", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "46", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Act_Sakakibara_fig7": [[149, 172], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Act_Sakakibara_fig7", "(", ")", ":", "\n", "    ", "\"\"\"Data points for activation curve of i_Na (gNa/gNaMax).\n    It's probably betteer to use the Act_Sakakibara function for the figure 2 (one more point)\n    Extracted from figure 7 in Nygren 1992. Reported as mean /pm SEM for n=46 cell.\n    \"\"\"", "\n", "\n", "x", "=", "[", "-", "90.1665", ",", "-", "80.1659", ",", "-", "70.3305", ",", "-", "60.2444", ",", "-", "50.3087", ",", "\n", "-", "40.2702", ",", "-", "30.1487", ",", "-", "19.9573", ",", "-", "9.77818", ",", "0.391688", ",", "\n", "10.6441", ",", "20.5609", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.00264315", ",", "0.00679469", ",", "0.0212131", ",", "0.0404606", ",", "0.172631", ",", "\n", "0.440670", ",", "0.705689", ",", "0.877712", ",", "0.964592", ",", "0.986858", ",", "\n", "1.00369", ",", "1.00482", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.00264315", ",", "0.00679469", ",", "0.0212131", ",", "0.0404606", ",", "0.172631", ",", "\n", "0.44067", ",", "0.685762", ",", "0.853256", ",", "0.9446645", ",", "0.986858", ",", "\n", "1.00369", ",", "1.00482", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "46", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Inact_Sakakibara": [[173, 196], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Inact_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"Data points for inactivation curve of i_Na (h infinity).\n\n    Extracted from figure 7 in Sakakibara 1992. Reported as mean /pm SEM for n=46 cell.\n    \"\"\"", "\n", "x", "=", "[", "-", "140.689", ",", "-", "130.856", ",", "-", "120.608", ",", "-", "110.454", ",", "-", "100.321", ",", "\n", "-", "90.2885", ",", "-", "80.3212", ",", "-", "70.4131", ",", "-", "60.3302", ",", "-", "50.3310", ",", "\n", "-", "40.4160", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.00242", ",", "1.00234", ",", "0.986563", ",", "0.904362", ",", "0.669383", ",", "\n", "0.313029", ",", "0.0859017", ",", "0.0260446", ",", "0.0229492", ",", "0.0174390", ",", "\n", "0.00589079", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "1.00242", ",", "1.00234", ",", "0.986563", ",", "0.904362", ",", "0.669383", ",", "\n", "0.2933275", ",", "0.0541988", ",", "-", "0.00257837", ",", "0.0114761", ",", "0.017439", ",", "\n", "0.00589079", "]", ")", "\n", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "46", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Reversal_potential_Sakakibara": [[198, 215], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Reversal_potential_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Reversal potential data from Figure 3B in Sakakibara 1992\n    x corresponds to [Na+]o and y to the Reversal potential\n    Error reported as + or - SEM (N=4)\n    digitilized the 08/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "x", "=", "[", "2", ",", "5", ",", "10", ",", "20", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "26.78964", ",", "-", "3.5984309", ",", "16.029884", ",", "28.931164", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "-", "29.294262", ",", "-", "5.9605193", ",", "13.596818", ",", "26.498098", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "4", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.TauF_Inactivation_Sakakibara": [[217, 233], ["numpy.array", "numpy.array", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "TauF_Inactivation_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for tau_f (fast) for i_Na\n    Data from Sakakibara 1992 Fig 5B\n\n    Errors reported as mean + or - SEM for 8 cells\n    \"\"\"", "\n", "x", "=", "[", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", "]", "\n", "\n", "y", "=", "np", ".", "array", "(", "[", "9.31", ",", "5.56", ",", "3.68", ",", "2.62", "]", ")", "\n", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.63", ",", "0.32", ",", "0.23", ",", "0.14", "]", ")", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.TauS_Inactivation_Sakakibara": [[234, 250], ["numpy.array", "numpy.array", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "TauS_Inactivation_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for tau_s (slow) for i_Na\n    Data from Sakakibara 1992 Fig 5B\n\n    Errors reported as mean + or - SEM for 8 cells\n    \"\"\"", "\n", "x", "=", "[", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", "]", "\n", "\n", "y", "=", "np", ".", "array", "(", "[", "59.2", ",", "40.7", ",", "16.9", ",", "11.9", "]", ")", "\n", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.6", ",", "5.7", ",", "2.0", ",", "1.0", "]", ")", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Rel_Tf_Sakakibara": [[251, 266], ["numpy.array", "numpy.sqrt", "sd.tolist"], "function", ["None"], ["", "def", "Rel_Tf_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for percentage fast inactivation for i_Na\n    Data from Sakakibara 1992 Figure 5B\n\n    Errors reported as mean + or - SEM for 8 cells\n    \"\"\"", "\n", "x", "=", "[", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", "]", "\n", "\n", "y", "=", "[", "0.88", ",", "0.91", ",", "0.92", ",", "0.91", "]", "\n", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.04", ",", "0.02", ",", "0.01", ",", "0.02", "]", ")", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Time_course_Inactivation_Sakakibara_100": [[268, 284], ["None"], "function", ["None"], ["", "def", "Time_course_Inactivation_Sakakibara_100", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for the time course inactivation at Vcond = -100mV for i_Na\n    Data from Sakakibara 1992 Fig 6\n\n    No Errors reported\n    \"\"\"", "\n", "x", "=", "[", "13.618383", ",", "48.543922", ",", "104.8536", ",", "209.70401", ",", "307.70993", ",", "\n", "406.94058", ",", "507.34506", ",", "608.8216", ",", "808.44904", ",", "1009.2071", ",", "\n", "1506.5621", ",", "2008.5006", "]", "\n", "\n", "y", "=", "[", "1.0001771", ",", "0.9633226", ",", "0.8897682", ",", "0.84734863", ",", "0.7554476", ",", "\n", "0.7322206", ",", "0.73836476", ",", "0.70938736", ",", "0.6887862", ",", "0.67025256", ",", "\n", "0.6111179", ",", "0.59258205", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Time_course_Inactivation_Sakakibara_80": [[285, 301], ["None"], "function", ["None"], ["", "def", "Time_course_Inactivation_Sakakibara_80", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for the time course inactivation at Vcond = -80mV for i_Na\n    Data from Sakakibara 1992 Fig 6\n\n    No Errors reported\n    \"\"\"", "\n", "x", "=", "[", "5.7145677", ",", "29.230057", ",", "59.41954", ",", "107.55055", ",", "209.5316", ",", "\n", "309.55435", ",", "406.0836", ",", "507.48373", ",", "605.4515", ",", "806.0798", ",", "\n", "1007.6961", "]", "\n", "\n", "y", "=", "[", "0.9936339", ",", "0.8555152", ",", "0.6790062", ",", "0.49132293", ",", "0.27539366", ",", "\n", "0.1996656", ",", "0.13169993", ",", "0.11845193", ",", "0.10217777", ",", "0.08887822", ",", "\n", "0.068500906", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Time_course_Inactivation_Sakakibara_all": [[302, 318], ["data_Sakakibara1992.Time_course_Inactivation_Sakakibara_80", "Exception", "data_Sakakibara1992.Time_course_Inactivation_Sakakibara_100"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Time_course_Inactivation_Sakakibara_80", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Time_course_Inactivation_Sakakibara_100"], ["", "def", "Time_course_Inactivation_Sakakibara_all", "(", "Vcond", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns the time course inactivation from Figure 6 in Sakakibara 1992 with Vcond = -80 or -100 mV\n\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Vcond", "in", "[", "-", "80", ",", "-", "100", "]", ")", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong Vcond, ( = {} mV)\"", ".", "format", "(", "Vcond", ")", ")", "\n", "\n", "", "if", "Vcond", "==", "-", "80", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Time_course_Inactivation_Sakakibara_80", "(", ")", "\n", "", "elif", "Vcond", "==", "-", "100", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Time_course_Inactivation_Sakakibara_100", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Recovery_Sakakibara_100": [[320, 341], ["None"], "function", ["None"], ["", "def", "Recovery_Sakakibara_100", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 8A with Vhold = -100 mV\n\n    No errors reported\n    digitilized the 08/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "12.087913", ",", "21.428572", ",", "25.824175", ",", "29.67033", ",", "32.967033", ",", "\n", "38.46154", ",", "43.956043", ",", "47.252747", ",", "58.241756", ",", "74.72527", ",", "\n", "99.45055", ",", "148.9011", ",", "200.54945", ",", "299.45056", ",", "396.7033", ",", "\n", "496.15384", ",", "597.25275", ",", "696.1539", ",", "800.0", ",", "898.901", ",", "\n", "1000.54944", "]", "\n", "\n", "y", "=", "[", "0.003197442", ",", "0.039168663", ",", "0.06235012", ",", "0.07993605", ",", "0.11350919", ",", "\n", "0.13669065", ",", "0.16466826", ",", "0.19664268", ",", "0.2669864", ",", "0.3261391", ",", "\n", "0.42605916", ",", "0.57633895", ",", "0.65067947", ",", "0.7665867", ",", "0.8465228", ",", "\n", "0.90407676", ",", "0.911271", ",", "0.9376499", ",", "0.940048", ",", "0.95683455", ",", "\n", "0.9688249", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Recovery_Sakakibara_120": [[342, 363], ["None"], "function", ["None"], ["", "def", "Recovery_Sakakibara_120", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 8A with Vhold = -120 mV\n\n    No errors reported\n    digitilized the 08/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "2", ",", "10.439561", ",", "13.736263", ",", "18.681318", ",", "\n", "22.527473", ",", "28.021978", ",", "32.967033", ",", "38.46154", ",", "43.956043", ",", "\n", "47.802197", ",", "58.241756", ",", "72.52747", ",", "98.35165", ",", "147.8022", ",", "\n", "197.25275", ",", "297.8022", ",", "395.05493", ",", "495.6044", ",", "596.7033", ",", "\n", "696.1539", ",", "798.3516", ",", "899.45056", ",", "1000.54944", "]", "\n", "\n", "y", "=", "[", "0.044764187", ",", "0.17585932", ",", "0.2797762", ",", "0.39568347", ",", "\n", "0.47881696", ",", "0.5115907", ",", "0.56754595", ",", "0.60751396", ",", "0.6434852", ",", "\n", "0.6722622", ",", "0.7282174", ",", "0.76978415", ",", "0.8201439", ",", "0.87929654", ",", "\n", "0.90407676", ",", "0.9416467", ",", "0.95363706", ",", "0.960032", ",", "0.97202235", ",", "\n", "0.9816147", ",", "0.9880096", ",", "0.9872102", ",", "0.9872102", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Recovery_Sakakibara_140": [[364, 385], ["None"], "function", ["None"], ["", "def", "Recovery_Sakakibara_140", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 8A with Vhold = -140 mV\n\n    No errors reported\n    digitilized the 08/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "2", ",", "8.791209", ",", "13.186813", ",", "18.681318", ",", "\n", "21.978022", ",", "26.923077", ",", "32.967033", ",", "37.912086", ",", "41.758244", ",", "\n", "49.45055", ",", "56.043957", ",", "71.42857", ",", "98.9011", ",", "147.8022", ",", "\n", "197.8022", ",", "297.8022", ",", "396.15384", ",", "495.6044", ",", "597.25275", ",", "\n", "697.8022", ",", "799.45056", ",", "898.9011", ",", "1002.1978", "]", "\n", "\n", "y", "=", "[", "0.27657872", ",", "0.54996", ",", "0.66746604", ",", "0.7553957", ",", "\n", "0.80255795", ",", "0.8321343", ",", "0.853717", ",", "0.86970425", ",", "0.8832934", ",", "\n", "0.8960831", ",", "0.9072742", ",", "0.92645884", ",", "0.95043963", ",", "0.9672262", ",", "\n", "0.9760192", ",", "0.99040765", ",", "0.9976019", ",", "0.9984013", ",", "1.0047961", ",", "\n", "1.0071943", ",", "1.0079936", ",", "1.0071943", ",", "1.008793", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Recovery_Sakakibara_all": [[386, 405], ["data_Sakakibara1992.Recovery_Sakakibara_140", "Exception", "data_Sakakibara1992.Recovery_Sakakibara_120", "data_Sakakibara1992.Recovery_Sakakibara_100"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Recovery_Sakakibara_140", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Recovery_Sakakibara_120", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Recovery_Sakakibara_100"], ["", "def", "Recovery_Sakakibara_all", "(", "Vhold", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns the Recovery data from Figure 8A with Vhold between -140 and -100\n    digitilized by Benjamin Marchand\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Vhold", "in", "[", "-", "140", ",", "-", "120", ",", "-", "100", "]", ")", "\n", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong Vhold, ( = {} mV)\"", ".", "format", "(", "Vhold", ")", ")", "\n", "\n", "", "if", "Vhold", "==", "-", "140", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Sakakibara_140", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "120", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Sakakibara_120", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "100", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Sakakibara_100", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.TauF_Recovery": [[407, 430], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "TauF_Recovery", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for fast recovery time constant\n    from Sakakibara Fig 9.\n    Errors reported as mean + or - SEM for 12,11,11,12,4 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "140", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "7.182494525483941", ",", "\n", "21.080778238617775", ",", "\n", "44.85613625942195", ",", "\n", "71.15848950350686", ",", "\n", "94.1204967268066", "]", ")", "\n", "\n", "sem", "=", "np", ".", "array", "(", "[", "7.921098705433488", ",", "\n", "22.607420491967787", ",", "\n", "48.78194467418629", ",", "\n", "77.38627950439239", ",", "\n", "102.35792127703817", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "[", "12", ",", "11", ",", "11", ",", "12", ",", "4", "]", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.TauS_Recovery": [[431, 453], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "TauS_Recovery", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for slow recovery time constant\n    from Sakakibara Fig 9.\n    Errors reported same as previous.\n    \"\"\"", "\n", "x", "=", "[", "-", "140", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "73.17664087948957", ",", "\n", "200.27163030670607", ",", "\n", "288.08070424186946", ",", "\n", "503.9983907936142", ",", "\n", "735.1852092122435", "]", ")", "\n", "sem", "=", "np", ".", "array", "(", "[", "63.62733372428446", ",", "\n", "166.9829252154457", ",", "\n", "257.591290037445", ",", "\n", "444.3992111457802", ",", "\n", "596.0787555812192", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "[", "12", ",", "11", ",", "11", ",", "12", ",", "4", "]", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.protocols_Sakakibara1992.Protocol_IV_Sakakibara_Fig1B": [[9, 38], ["myokit.pacing.steptrain_linear"], "function", ["None"], ["def", "Protocol_IV_Sakakibara_Fig1B", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the IV peak-current curve in the Sakakibara Paper figure 1B\n\n    page 3 of the paper : The holding potential (Vh) was -140 mV. Depolarizing pulses in 10-mVsteps were applied from\n     -70 to +20mV. Testpulses were applied at 0.1 Hz.\n    \n    \n    protocol used in figure 1B: single test pulse at a frequency of 0.1Hz : every 10s, the voltage step occurs. \n    \"\"\"", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "5", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "5", ",", "\n", "'membrane.T'", ":", "290.15", "}", "\n", "\n", "tperiod", "=", "10000", "# ms", "\n", "tstep", "=", "1000", "# ms (not precised in the paper, 1s seems enough to mesure the peak current)", "\n", "tpre", "=", "tperiod", "-", "tstep", "# before the first pulse occurs", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "# before the measurement", "\n", "tMeasuring", "=", "tstep", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "Vhold", "=", "-", "140", "# mV", "\n", "Vlower", "=", "-", "100.001", "# modified to not go through V = 0 that makes the nygren model crash ( expression of I_na)", "\n", "Vupper", "=", "20.002", "\n", "dV", "=", "10", "\n", "\n", "protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "Vlower", ",", "Vupper", ",", "dV", ",", "Vhold", ",", "tpre", ",", "tstep", ")", "\n", "\n", "return", "protocol", ",", "conditions", ",", "tpreMeasuring", ",", "tMeasuring", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.protocols_Sakakibara1992.Protocol_IV_Sakakibara_Fig3A": [[40, 73], ["myokit.pacing.steptrain_linear"], "function", ["None"], ["", "def", "Protocol_IV_Sakakibara_Fig3A", "(", "Na_c", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the IV peak-current curve in the Sakakibara Paper in figure 3A\n    takes the Na_c concentration in mM as input (by default, this value should be set to 5mM)\n    \n    page 5 of the paper :\n    Graph showing current-voltage relations generated in 2, 5, and 20 mM [Na+],.Vh,holdingpotential. \n    Test pulses were applied at 0.1 Hz.\n\n    \n    protocol used in figure 1B: single test pulse at a frequency of 0.1Hz : every 10s, the voltage step occurs. \n    \"\"\"", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "Na_c", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "5", ",", "\n", "'membrane.T'", ":", "290.15", "}", "\n", "\n", "\n", "\n", "tperiod", "=", "10000", "# ms", "\n", "tstep", "=", "1000", "# ms (not precised in the paper, 1s seems enough to mesure the peak current)", "\n", "tpre", "=", "tperiod", "-", "tstep", "# before the first pulse occurs", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "# before the measurement", "\n", "tMeasuring", "=", "tstep", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "Vhold", "=", "-", "140", "# mV", "\n", "Vlower", "=", "-", "100.001", "# modified to not go through V = 0 that makes the nygren model crash ( expression of I_na)", "\n", "Vupper", "=", "40", "\n", "dV", "=", "10", "\n", "\n", "protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "Vlower", ",", "Vupper", "+", "dV", ",", "dV", ",", "Vhold", ",", "tpre", ",", "tstep", ")", "\n", "\n", "return", "protocol", ",", "conditions", ",", "tpreMeasuring", ",", "tMeasuring", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.protocols_Sakakibara1992.Protocol_Act_Sakakibara": [[74, 104], ["myokit.pacing.steptrain_linear"], "function", ["None"], ["", "def", "Protocol_Act_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the activation curve in the Sakakibara Paper (figure 2)\n    \n    \n    The protocol is not described !\n    By hypothesis, this will be the same as the protocol used in figure 1B :\n    single test pulse at a frequency of 0.1Hz\n    \"\"\"", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "5", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "5", ",", "\n", "'membrane.T'", ":", "290.15", "}", "\n", "\n", "\n", "\n", "tperiod", "=", "10000", "# ms", "\n", "tstep", "=", "1000", "# ms (not precised in the paper, 1s seems enough)", "\n", "tpre", "=", "tperiod", "-", "tstep", "# before the first pulse occurs", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "# before the measurement", "\n", "tMeasuring", "=", "tstep", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "Vhold", "=", "-", "140", "# mV", "\n", "Vlower", "=", "-", "100.001", "# modified to not go through V = 0 that makes the nygren model crash ( expression of I_na)", "\n", "Vupper", "=", "20", "\n", "dV", "=", "10", "\n", "\n", "protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "Vlower", ",", "Vupper", "+", "dV", ",", "dV", ",", "Vhold", ",", "tpre", ",", "tstep", ")", "\n", "\n", "return", "protocol", ",", "conditions", ",", "tpreMeasuring", ",", "tMeasuring", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.protocols_Sakakibara1992.Protocol_Inact_Sakakibara": [[107, 147], ["ionchannelABC.protocol.availability"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.protocol.availability"], ["", "def", "Protocol_Inact_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the activation curve in the Sakakibara Paper (figure 2)\n    \n    page 7 of the paper : \n    The voltage dependence of h, was studied using a double-pulse protocol consisting of a\n    1-second conditioning pulse from holding a potential of-140 mV 0.1 Hz (inset at lower left).\n    Current amplitude elicited during the test pulse was normalized to that in absence of a conditioning pulse.\n\n    TODO : The corresponding block in summary statistics function need to be changed to normalize the conditionning pulse\n\n    The protocol is a double pulse protocol at the frequency of 0.1Hz\n    \n    \"\"\"", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "5", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "5", ",", "\n", "'membrane.T'", ":", "290.15", "}", "# not precised but by hypothesis, ", "\n", "# the same values as figure 1B were", "\n", "# used for the concentrations", "\n", "\n", "\n", "\n", "tperiod", "=", "10000", "# ms", "\n", "tstep", "=", "1000", "# ms (not precised in the paper, 1s seems enough to mesure the peak current)", "\n", "twait", "=", "2", "\n", "ttest", "=", "30", "\n", "tpre", "=", "tperiod", "-", "tstep", "-", "twait", "-", "ttest", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "-", "twait", "-", "ttest", "# tperiod - ttest", "\n", "tMeasuring", "=", "ttest", "# ttest # the sum tMeasuring, tpreMeasuring and tpostMeasuring should be equal to tperiod", "\n", "tpostMeasuring", "=", "tstep", "+", "twait", "\n", "Vhold", "=", "-", "140", "# mV", "\n", "Vtest", "=", "-", "20", "\n", "Vlower", "=", "-", "140", "\n", "dV", "=", "10", "\n", "Vupper", "=", "-", "40", "+", "dV", "\n", "\n", "protocol", "=", "availability", "(", "Vlower", ",", "Vupper", ",", "dV", ",", "Vhold", ",", "Vtest", ",", "tpre", ",", "tstep", ",", "twait", ",", "ttest", ")", "\n", "\n", "return", "protocol", ",", "conditions", ",", "tpreMeasuring", ",", "tMeasuring", ",", "tpostMeasuring", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.protocols_Sakakibara1992.Protocol_Reversal_Sakakibara": [[149, 190], ["myokit.pacing.steptrain_linear", "protocol_list.append", "conditions_list.append", "tpreMeasuring_list.append", "tMeasuring_list.append"], "function", ["None"], ["", "def", "Protocol_Reversal_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the reversal potential curve in the Sakakibara Paper (figure 3B)\n\n    page 5 of the paper :\n\n    The reversal potential was determined by the intersecting point on the current-voltage relation curve\n\n    the IV curve was plotted every 1mV and the protocol used for the IV curve is the same than the fig 1B\n    (single pulse protocol with a frequence of 0.1Hz)\n       \n    \"\"\"", "\n", "conditions_list", ",", "protocol_list", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list", ",", "tMeasuring_list", "=", "[", "]", ",", "[", "]", "\n", "\n", "for", "Na_c", "in", "[", "2", ",", "5", ",", "10", ",", "20", "]", ":", "\n", "        ", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "Na_c", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "5", ",", "\n", "'membrane.T'", ":", "290.15", "}", "\n", "\n", "\n", "\n", "tperiod", "=", "3000", "# ms", "\n", "tstep", "=", "500", "# ms (not precised in the paper, 1s seems enough to mesure the peak current)", "\n", "tpre", "=", "tperiod", "-", "tstep", "# before the first pulse occurs", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "# before the measurement", "\n", "tMeasuring", "=", "tstep", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "Vhold", "=", "-", "140", "# mV", "\n", "Vlower", "=", "-", "100.001", "# modified to not go through V = 0 that makes the nygren model crash ( expression of I_na)", "\n", "Vupper", "=", "40", "\n", "dV", "=", "1", "# needs to be small to ensure a smooth curve in the detection of Ina(V) = 0", "\n", "\n", "protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "Vlower", ",", "Vupper", "+", "dV", ",", "dV", ",", "Vhold", ",", "tpre", ",", "tstep", ")", "\n", "\n", "protocol_list", ".", "append", "(", "protocol", ")", "\n", "conditions_list", ".", "append", "(", "conditions", ")", "\n", "tpreMeasuring_list", ".", "append", "(", "tpreMeasuring", ")", "\n", "tMeasuring_list", ".", "append", "(", "tMeasuring", ")", "\n", "\n", "", "return", "protocol_list", ",", "conditions_list", ",", "tpreMeasuring_list", ",", "tMeasuring_list", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.protocols_Sakakibara1992.Protocol_Inactivation_Kinetics_Sakakibara_1": [[191, 225], ["myokit.pacing.steptrain_linear"], "function", ["None"], ["", "def", "Protocol_Inactivation_Kinetics_Sakakibara_1", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the inactivation kinetics (tau_f and tau_s) in the Sakakibara Paper (figure 5B)\n    \n    the Voltage goes from -50mV to -20mV for this function with a dV = 10 mV.\n\n    page 5 of the paper :\n    Figure 5A shows INa elicited at holding potentials of -140 to -40 mV (top)\n    and -20 mV (bottom). \n\n\n    single test pulse at a frequency of 1Hz (since the step is a 100 msec test pulse)\n    \"\"\"", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "5", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "5", ",", "\n", "'membrane.T'", ":", "290.15", "}", "\n", "\n", "\n", "\n", "tperiod", "=", "1000", "# ms", "\n", "tstep", "=", "100", "# ms ", "\n", "tpre", "=", "tperiod", "-", "tstep", "# before the first pulse occurs", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "# before the measurement", "\n", "tMeasuring", "=", "tstep", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "Vhold", "=", "-", "140", "# mV", "\n", "Vlower", "=", "-", "50", "\n", "Vupper", "=", "-", "20", "\n", "dV", "=", "10", "\n", "\n", "protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "Vlower", ",", "Vupper", "+", "dV", ",", "dV", ",", "Vhold", ",", "tpre", ",", "tstep", ")", "\n", "\n", "return", "protocol", ",", "conditions", ",", "tpreMeasuring", ",", "tMeasuring", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.protocols_Sakakibara1992.Protocol_Inactivation_Kinetics_Sakakibara_2": [[226, 300], ["ionchannelABC.protocol.manual_availability", "protocol_list.append", "conditions_list.append", "tpreMeasuring_list.append", "tMeasuring_list.append", "data.Time_course_Inactivation_Sakakibara_all", "ionchannelABC.protocol.availability_tstep_list", "protocol_list.append", "conditions_list.append", "tpreMeasuring_list.append", "tMeasuring_list.append", "tpreList.append"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Time_course_Inactivation_Sakakibara_all"], ["", "def", "Protocol_Inactivation_Kinetics_Sakakibara_2", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the inactivation kinetics in the Sakakibara Paper (figure 6)\n    \n    the Voltage used here is -100mV and -80mV\n    \n    page 7 of the paper : \n    Inactivation was induced by increasing\n    the conditioning pulse duration. Conditioning\n    pulses were applied to -80 and -100 mV Pulse\n    frequency was 0.1 Hz. Current magnitude during\n    the test pulse was normalized to levels obtained in\n    the absence of a conditioning pulse.\n\n    The protocol is a double pulse protocol at the frequency of 0.1Hz\n    \n    \"\"\"", "\n", "\n", "conditions_list", ",", "protocol_list", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list", ",", "tMeasuring_list", "=", "[", "]", ",", "[", "]", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "5", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "5", ",", "\n", "'membrane.T'", ":", "290.15", "}", "# not precised but by hypothesis, ", "\n", "# the same values as figure 1B were", "\n", "# used for the concentrations", "\n", "\n", "\n", "## This part is for initializing the protocol : to determine the max I_Na when there is no conditionning pulse", "\n", "tperiod", "=", "1000", "# ms", "\n", "twait", "=", "2", "\n", "ttest", "=", "30", "\n", "tstep", "=", "1", "\n", "tpre", "=", "tperiod", "-", "twait", "-", "ttest", "-", "tstep", "\n", "\n", "tpreMeasuring", "=", "tperiod", "-", "ttest", "\n", "tMeasuring", "=", "ttest", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "Vhold", "=", "-", "140", "# mV", "\n", "Vtest", "=", "-", "20", "\n", "protocol", "=", "manual_availability", "(", "[", "Vhold", "]", ",", "Vhold", ",", "Vtest", ",", "tpre", ",", "tstep", ",", "twait", ",", "ttest", ")", "\n", "\n", "protocol_list", ".", "append", "(", "protocol", ")", "\n", "conditions_list", ".", "append", "(", "conditions", ")", "\n", "tpreMeasuring_list", ".", "append", "(", "tpreMeasuring", ")", "\n", "tMeasuring_list", ".", "append", "(", "tMeasuring", ")", "\n", "\n", "# Here is the rest of the protocol", "\n", "for", "Vcond", "in", "[", "-", "100", ",", "-", "80", "]", ":", "\n", "        ", "tstepList", ",", "_", ",", "_", "=", "data", ".", "Time_course_Inactivation_Sakakibara_all", "(", "Vcond", ")", "\n", "\n", "tperiod", "=", "10000", "# ms", "\n", "twait", "=", "2", "\n", "ttest", "=", "30", "\n", "\n", "tpreList", "=", "[", "]", "\n", "for", "tstep", "in", "tstepList", ":", "\n", "            ", "tpre", "=", "tperiod", "-", "tstep", "-", "twait", "-", "ttest", "\n", "tpreList", ".", "append", "(", "tpre", ")", "\n", "", "tpreMeasuring", "=", "tperiod", "-", "ttest", "\n", "tMeasuring", "=", "ttest", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "Vhold", "=", "-", "140", "# mV", "\n", "Vtest", "=", "-", "20", "\n", "\n", "\n", "protocol", "=", "availability_tstep_list", "(", "Vcond", ",", "Vhold", ",", "Vtest", ",", "tpreList", ",", "tstepList", ",", "twait", ",", "ttest", ")", "\n", "\n", "protocol_list", ".", "append", "(", "protocol", ")", "\n", "conditions_list", ".", "append", "(", "conditions", ")", "\n", "tpreMeasuring_list", ".", "append", "(", "tpreMeasuring", ")", "\n", "tMeasuring_list", ".", "append", "(", "tMeasuring", ")", "\n", "\n", "", "return", "protocol_list", ",", "conditions_list", ",", "tpreMeasuring_list", ",", "tMeasuring_list", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.protocols_Sakakibara1992.Protocol_Recovery_Sakakibara": [[301, 361], ["data.Recovery_Sakakibara_all", "ionchannelABC.protocol.recovery_manual", "protocol_list.append", "conditions_list.append", "tMeasuring_list1.append", "tpreMeasuring_list2.append", "tMeasuring_list2.append", "tpreList.append", "tpreMeasuring_list1.append"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.data_Sakakibara1992.Recovery_Sakakibara_all"], ["", "def", "Protocol_Recovery_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the Recovery of I_na in the Sakakibara Paper (figure 8A)\n    \n    the Vhold used here is -140mV ,-120mV and -100mV\n    \n    page 8 of the paper : \n    The double-pulseprotocol shown in the inset was applied at various recovery potentials at a frequency of 0.1 Hz. The magnitude of the fast\n    Na+ current during the test pulse was normalized to that\n    induced by the conditioning pulse. \n\n\n    The protocol is a double pulse protocol at the frequency of 0.1Hz\n    \n    \"\"\"", "\n", "conditions_list", ",", "protocol_list", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list1", ",", "tMeasuring_list1", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list2", ",", "tMeasuring_list2", "=", "[", "]", ",", "[", "]", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "5", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "5", ",", "\n", "'membrane.T'", ":", "290.15", "}", "# not precised but by hypothesis, ", "\n", "# the same values as figure 1B were", "\n", "# used for the concentrations    ", "\n", "\n", "for", "Vhold", "in", "[", "-", "140", ",", "-", "120", ",", "-", "100", "]", ":", "\n", "        ", "twaitList", ",", "_", ",", "_", "=", "data", ".", "Recovery_Sakakibara_all", "(", "Vhold", ")", "\n", "\n", "tperiod", "=", "10000", "# ms", "\n", "tstep1", "=", "1000", "\n", "tstep2", "=", "1000", "\n", "\n", "tpreList", "=", "[", "]", "\n", "for", "twait", "in", "twaitList", ":", "\n", "            ", "tpre", "=", "tperiod", "-", "tstep1", "-", "twait", "-", "tstep2", "\n", "tpreList", ".", "append", "(", "tpre", ")", "\n", "tpreMeasuring_list1", ".", "append", "(", "tpre", ")", "\n", "\n", "\n", "", "tMeasuring1", "=", "tstep1", "# the sum tMeasuring, tpreMeasuring and tpostMeasuring should be equal to tperiod", "\n", "\n", "\n", "tpreMeasuring2", "=", "tperiod", "-", "tstep2", "\n", "tMeasuring2", "=", "tstep2", "\n", "\n", "Vstep1", "=", "-", "20", "\n", "Vstep2", "=", "-", "20", "\n", "\n", "protocol", "=", "recovery_manual", "(", "twaitList", ",", "Vhold", ",", "Vstep1", ",", "Vstep2", ",", "tpreList", ",", "tstep1", ",", "tstep2", ")", "\n", "\n", "protocol_list", ".", "append", "(", "protocol", ")", "\n", "conditions_list", ".", "append", "(", "conditions", ")", "\n", "\n", "tMeasuring_list1", ".", "append", "(", "tMeasuring1", ")", "\n", "\n", "tpreMeasuring_list2", ".", "append", "(", "tpreMeasuring2", ")", "\n", "tMeasuring_list2", ".", "append", "(", "tMeasuring2", ")", "\n", "\n", "", "return", "protocol_list", ",", "conditions_list", ",", "tpreMeasuring_list1", ",", "tMeasuring_list1", ",", "tpreMeasuring_list2", ",", "tMeasuring_list2", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sakakibara1992.protocols_Sakakibara1992.Protocol_Recovery_Fast_Time_Constant_Sakakibara": [[363, 419], ["ionchannelABC.protocol.recovery_manual", "protocol_list.append", "conditions_list.append", "tMeasuring_list1.append", "tpreMeasuring_list2.append", "tMeasuring_list2.append", "tpreList.append", "tpreMeasuring_list1.append"], "function", ["None"], ["", "def", "Protocol_Recovery_Fast_Time_Constant_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the fast time constant from the Recovery of I_na in the Sakakibara Paper (figure 9)\n    \n    the Vhold used here is -140mV ,-120mV -110mV, -100mV and -90mV\n    \n    The protocol is not decribed but was assumed to be the same as for the recovery protocol (fig 8A)\n    The protocol is a double pulse protocol at the frequency of 0.1Hz\n    \n    \"\"\"", "\n", "conditions_list", ",", "protocol_list", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list1", ",", "tMeasuring_list1", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list2", ",", "tMeasuring_list2", "=", "[", "]", ",", "[", "]", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "5", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "5", ",", "\n", "'membrane.T'", ":", "290.15", "}", "# not precised but by hypothesis, ", "\n", "# the same values as figure 1B were", "\n", "# used for the concentrations  ", "\n", "\n", "twaitList", "=", "[", "2", ",", "5", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", ",", "45", ",", "50", ",", "75", ",", "100", ",", "200", ",", "300", ",", "400", ",", "500", ",", "600", ",", "700", ",", "800", ",", "900", ",", "1000", "]", "\n", "\n", "for", "Vhold", "in", "[", "-", "140", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", "]", ":", "\n", "\n", "        ", "tperiod", "=", "10000", "# ms", "\n", "tstep1", "=", "1000", "\n", "tstep2", "=", "1000", "\n", "\n", "tpreList", "=", "[", "]", "\n", "for", "twait", "in", "twaitList", ":", "\n", "            ", "tpre", "=", "tperiod", "-", "tstep1", "-", "twait", "-", "tstep2", "\n", "tpreList", ".", "append", "(", "tpre", ")", "\n", "tpreMeasuring_list1", ".", "append", "(", "tpre", ")", "\n", "\n", "\n", "", "tMeasuring1", "=", "tstep1", "# the sum tMeasuring, tpreMeasuring and tpostMeasuring should be equal to tperiod", "\n", "\n", "\n", "tpreMeasuring2", "=", "tperiod", "-", "tstep2", "\n", "tMeasuring2", "=", "tstep2", "\n", "\n", "Vstep1", "=", "-", "20", "\n", "Vstep2", "=", "-", "20", "\n", "\n", "protocol", "=", "recovery_manual", "(", "twaitList", ",", "Vhold", ",", "Vstep1", ",", "Vstep2", ",", "tpreList", ",", "tstep1", ",", "tstep2", ")", "\n", "\n", "protocol_list", ".", "append", "(", "protocol", ")", "\n", "conditions_list", ".", "append", "(", "conditions", ")", "\n", "\n", "tMeasuring_list1", ".", "append", "(", "tMeasuring1", ")", "\n", "\n", "tpreMeasuring_list2", ".", "append", "(", "tpreMeasuring2", ")", "\n", "tMeasuring_list2", ".", "append", "(", "tMeasuring2", ")", "\n", "\n", "", "return", "protocol_list", ",", "conditions_list", ",", "tpreMeasuring_list1", ",", "tMeasuring_list1", ",", "tpreMeasuring_list2", ",", "tMeasuring_list2", ",", "twaitList", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.data.nrvm_ina.Trace_Lee": [[5, 24], ["None"], "function", ["None"], ["def", "Trace_Lee", "(", ")", ":", "\n", "    ", "\"\"\"Current trace from rat ventricular myocytes.\n\n    Data from Figure 1A in Lee 1999. Stimulated from HP of\n    -80mV to step of -30mV, current in pA.\n    \"\"\"", "\n", "x", "=", "[", "0.3916111337244619", ",", "0.6079178929377456", ",", "0.7402166477353855", ",", "\n", "1.0495672799265208", ",", "1.2590545156966257", ",", "1.5786770550740457", ",", "\n", "2.206840408233722", ",", "2.6077431426495146", ",", "3.095893155116457", ",", "\n", "3.8193167263730157", ",", "4.574152727489713", ",", "5.651509565447181", ",", "\n", "8.334310087993165", ",", "9.50181250146513", ",", "10.552701064058772", ",", "\n", "13.062541423277166", ",", "15.923928215991355", ",", "18.931124944324985", "]", "\n", "y", "=", "[", "9.738971754998545", ",", "-", "180.36734370041245", ",", "-", "427.5864804823866", ",", "\n", "-", "704.6017137416694", ",", "-", "786.0123770231675", ",", "-", "761.381307521422", ",", "\n", "-", "535.4887337353222", ",", "-", "410.26658203744853", ",", "-", "279.5620437956205", ",", "\n", "-", "175.90447476991426", ",", "-", "107.55712472231039", ",", "-", "60.7743573468739", ",", "\n", "-", "7.684068549666733", ",", "-", "1.614566804189053", ",", "1.674071723262557", ",", "\n", "19.34306569343073", ",", "18.18073627419875", ",", "19.81513805141236", "]", "\n", "return", "x", ",", "y", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.data.nrvm_ina.IV_Lee": [[25, 41], ["None"], "function", ["None"], ["", "def", "IV_Lee", "(", ")", ":", "\n", "    ", "\"\"\"IV curve for rat ventricular myocytes.\n\n    Data from Figure 3A in Lee 1999.\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "75", ",", "-", "70", ",", "-", "65", ",", "-", "60", ",", "-", "55", ",", "-", "50", ",", "-", "45", ",", "-", "40", ",", "-", "35", ",", "-", "30", ",", "-", "25", ",", "-", "20", ",", "\n", "-", "15", ",", "-", "10", ",", "-", "5", ",", "0", ",", "5", ",", "10", ",", "15", ",", "20", ",", "25", "]", "\n", "y", "=", "[", "1.7477685466693593E-4", ",", "4.430390036906928E-4", ",", "7.031719966832384E-4", ",", "\n", "-", "0.0017071227665144129", ",", "0.0012478254507617415", ",", "-", "0.046697936820199404", ",", "\n", "-", "0.14552815126733532", ",", "-", "0.4666948477409075", ",", "-", "0.7932186580389223", ",", "\n", "-", "0.924199684588746", ",", "-", "0.9641179052790739", ",", "-", "0.9370640740078365", ",", "\n", "-", "0.8725023168094687", ",", "-", "0.7918773472938038", ",", "-", "0.6844749378119565", ",", "\n", "-", "0.5797429560862991", ",", "-", "0.4696457313801682", ",", "-", "0.35151283593737304", ",", "\n", "-", "0.23875331263108246", ",", "-", "0.12597753101273024", ",", "0.008218576747362039", ",", "\n", "0.10491488773635516", "]", "\n", "return", "x", ",", "y", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.data.nrvm_ina.Act_Lee": [[42, 58], ["None"], "function", ["None"], ["", "def", "Act_Lee", "(", ")", ":", "\n", "    ", "\"\"\"Activation of i_Na in RVMs.\n\n    Data from Figure 3B in Lee 1999.\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "75", ",", "-", "70", ",", "-", "65", ",", "-", "60", ",", "-", "55", ",", "-", "50", ",", "-", "45", ",", "-", "40", ",", "-", "35", ",", "-", "30", ",", "-", "25", ",", "-", "20", ",", "\n", "-", "15", ",", "-", "10", ",", "-", "5", ",", "0", ",", "5", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", "]", "\n", "y", "=", "[", "0.0021594972337868334", ",", "0.0022447018865481283", ",", "0.004316056376099109", ",", "\n", "0.00240923500912249", ",", "0.002494439661884229", ",", "0.006560758262647681", ",", "\n", "0.006645962915408976", ",", "0.10035345240438653", ",", "0.29963832093948417", ",", "\n", "0.5527078920075099", ",", "0.682271849851773", ",", "0.8018756775973461", ",", "\n", "0.917495453303443", ",", "0.9912826825950398", ",", "0.9993330532352795", ",", "\n", "0.9994211959795156", ",", "0.9995005244493282", ",", "0.9995798529191406", ",", "\n", "0.9996679956633769", ",", "0.9997473241331896", ",", "0.9998295906944765", ",", "\n", "0.9999177334387128", ",", "0.9999970619085254", ",", "1.0000822665612872", "]", "\n", "return", "x", ",", "y", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.data.nrvm_ina.Inact_Lee": [[59, 73], ["None"], "function", ["None"], ["", "def", "Inact_Lee", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation of i_Na in RVMs.\n\n    Data from Figure 4B in Lee 1999.\n    \"\"\"", "\n", "x", "=", "[", "-", "160", ",", "-", "150", ",", "-", "140", ",", "-", "130", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "\n", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", "]", "\n", "y", "=", "[", "1.000270143773029", ",", "1.0005340051327316", ",", "0.9988283299146534", ",", "\n", "0.9853933890164568", ",", "0.9876205045406141", ",", "0.9722160270646365", ",", "\n", "0.9372481144907006", ",", "0.7887758403513123", ",", "0.5150636565530284", ",", "\n", "0.2746199925239279", ",", "0.08505759402416846", ",", "0.0070425853387319215", ",", "\n", "0.003398785609503907", ",", "0.005613336307008776", ",", "0.0019569717511283002", ",", "\n", "0.004184087275286075", "]", "\n", "return", "x", ",", "y", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.data.nrvm_ina.Rec_Lee1": [[74, 89], ["None"], "function", ["None"], ["", "def", "Rec_Lee1", "(", ")", ":", "\n", "    ", "\"\"\"Recovery of i_Na in RVMs for a pulse train.\n\n    Data From Figure 5A in Lee 1999.\n    \"\"\"", "\n", "x", "=", "[", "0", ",", "200", ",", "400", ",", "600", ",", "800", ",", "1000", ",", "1200", ",", "1400", ",", "1600", ",", "1800", ",", "2000", ",", "\n", "2200", ",", "2400", ",", "2600", ",", "2800", ",", "3000", ",", "3200", ",", "3400", ",", "3600", ",", "3800", "]", "\n", "y", "=", "[", "1.0012345679012347", ",", "0.9296296296296296", ",", "0.9148148148148147", ",", "\n", "0.9098765432098765", ",", "0.9037037037037037", ",", "0.9024691358024691", ",", "\n", "0.8987654320987655", ",", "0.8950617283950617", ",", "0.8913580246913579", ",", "\n", "0.8876543209876543", ",", "0.8839506172839506", ",", "0.8814814814814815", ",", "\n", "0.8802469135802469", ",", "0.874074074074074", ",", "0.8753086419753087", ",", "\n", "0.8703703703703703", ",", "0.8691358024691358", ",", "0.8666666666666667", ",", "\n", "0.8641975308641975", ",", "0.865432098765432", "]", "\n", "return", "x", ",", "y", ",", "None", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.data.nrvm_ina.Rec_Lee2": [[90, 102], ["None"], "function", ["None"], ["", "def", "Rec_Lee2", "(", ")", ":", "\n", "    ", "\"\"\"Recovery of i_Na in RVMs for two-pulse protocol.\n\n    Data from Figure 5B in Lee 1999.\n    \"\"\"", "\n", "x", "=", "[", "0", ",", "1", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "50", ",", "75", ",", "100", ",", "250", ",", "500", ",", "1000", ",", "2000", "]", "\n", "y", "=", "[", "0.0024049047968568438", ",", "0.08937437934458803", ",", "0.19465049004792556", ",", "\n", "0.2930529769871768", ",", "0.3731617805794225", ",", "0.444108630888131", ",", "\n", "0.5036181512024527", ",", "0.5928802728725011", ",", "0.6569794050343252", ",", "\n", "0.7645913388886492", ",", "0.828725011873408", ",", "0.9434825784724321", ",", "\n", "0.9692241267648201", ",", "0.9886706100772851", ",", "1.0028971115236822", "]", "\n", "return", "x", ",", "y", ",", "None", ",", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikur.data_ikur.IV_Maharani": [[6, 23], ["None"], "function", ["None"], ["def", "IV_Maharani", "(", ")", ":", "\n", "    ", "\"\"\"Data points in IV curve for i_Kur.\n\n    Data from figure 2B in Maharani 2015. Reported as mean \\pm SD with no\n    n number in the publication.\n    \"\"\"", "\n", "x", "=", "[", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "[", "-", "0.03234152652004951", ",", "-", "0.03234152652004951", ",", "-", "0.03234152652004951", ",", "\n", "0.679172056921086", ",", "1.8758085381630032", ",", "2.3285899094437283", ",", "\n", "3.10478654592497", ",", "3.783958602846056", ",", "3.8486416558861585", ",", "\n", "4.98059508408797", ",", "5.9831824062095755", ",", "6.985769728331178", ",", "\n", "7.988357050452784", "]", "\n", "errs", "=", "[", "0.0", ",", "-", "0.03234152652004951", ",", "0.0", ",", "1.131953428201811", ",", "\n", "2.4256144890038804", ",", "2.943078913324708", ",", "3.654592496765847", ",", "\n", "4.333764553686933", ",", "4.463130659767142", ",", "5.5627425614489", ",", "\n", "6.565329883570506", ",", "7.600258732212161", ",", "8.764553686934025", "]", "\n", "return", "x", ",", "y", ",", "errs", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikur.data_ikur.ActTau_Xu": [[27, 42], ["None"], "function", ["None"], ["", "def", "ActTau_Xu", "(", ")", ":", "\n", "    ", "\"\"\"Data points for activation time constants of i_Kur.\n\n    Determined by single exponential fit to rising phase from\n    depolarising step. Reported as i_K,slow in figure 8B in Xu 1999\n    as mean \\pm SEM.\n    \"\"\"", "\n", "x", "=", "[", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "[", "11.001327963485771", ",", "6.687798095181137", ",", "4.395491176586532", ",", "\n", "2.80242431491628", ",", "1.9085975101704165", ",", "1.6365348987988568", ",", "\n", "1.2862624420120454", "]", "\n", "errs", "=", "[", "11.545616293310026", ",", "7.465247997520784", ",", "5.094975894132645", ",", "\n", "1.947743209648337", ",", "1.1311476078307692", ",", "0.8588403358374848", ",", "\n", "0.5093018609158833", "]", "\n", "return", "x", ",", "y", ",", "errs", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikur.data_ikur.Inact_Xu": [[46, 62], ["None"], "function", ["None"], ["", "def", "Inact_Xu", "(", ")", ":", "\n", "    ", "\"\"\"Data points for inactivation curve of i_Kur.\n\n    Extracted from figure 9C in Xu 1999. Reported as mean \\pm SEM.\n    \"\"\"", "\n", "x", "=", "[", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", "]", "\n", "y", "=", "[", "0.9989331754339306", ",", "0.9945193518764771", ",", "0.9138481456019831", ",", "\n", "0.8198019901346326", ",", "0.7204106722600523", ",", "0.6919165207268055", ",", "\n", "0.6674357571895244", ",", "0.5881023469136856", ",", "0.3482304060055299", ",", "\n", "0.11505045588434548", "]", "\n", "N", "=", "None", "\n", "errs", "=", "[", "1.0163275342101432", ",", "1.023950863846891", ",", "0.8763898576396381", ",", "\n", "0.785019294169598", ",", "0.6816115775053567", ",", "0.6397424767792536", ",", "\n", "0.6192720904442427", ",", "0.538603894963444", ",", "0.305426955635955", ",", "\n", "0.07759818950939135", "]", "\n", "return", "x", ",", "y", ",", "errs", ",", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikur.data_ikur.Inact_Brouillette": [[64, 79], ["None"], "function", ["None"], ["", "def", "Inact_Brouillette", "(", ")", ":", "\n", "    ", "\"\"\"Data points for inactivation curve of i_Kur.\n\n    Extracted from figure 6B in Brouillette 2003. Data reported as mean\n    \\pm SEM for 11 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", "]", "\n", "y", "=", "[", "0.9764089483299438", ",", "0.9844645134604115", ",", "0.9731239874530351", ",", "\n", "0.9438661197476819", ",", "0.8489435041880666", ",", "0.5704387990762124", ",", "\n", "0.24118093137085928", ",", "0.08506428596049775", ",", "0.05879838681879268", "]", "\n", "N", "=", "11", "\n", "errs", "=", "[", "0.9629761125090482", ",", "0.9993967805315225", ",", "0.9910413291510116", ",", "\n", "0.9647685360725242", ",", "0.8743235324532075", ",", "0.6196856364827136", ",", "\n", "0.2904415566509255", ",", "0.10146840853469374", ",", "0.06626107338595699", "]", "\n", "return", "x", ",", "y", ",", "errs", ",", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikur.data_ikur.Rec_Xu": [[83, 94], ["None"], "function", ["None"], ["", "def", "Rec_Xu", "(", ")", ":", "\n", "    ", "\"\"\"Data points for recovery curve in i_Kur.\n\n    Extracted from figure 10C in Xu 1999.\n    \"\"\"", "\n", "x", "=", "[", "5", ",", "41", ",", "68", ",", "217", ",", "309", ",", "419", ",", "509", ",", "616", ",", "716", ",", "814", ",", "1081", ",", "2087", ",", "3092", ",", "4073", ",", "\n", "5073", ",", "6076", ",", "7076", ",", "8077", ",", "9087", "]", "\n", "y", "=", "[", "0.086498", ",", "0.161238", ",", "0.211569", ",", "0.276925", ",", "0.328654", ",", "0.423096", ",", "0.450398", ",", "\n", "0.477669", ",", "0.532435", ",", "0.565829", ",", "0.714924", ",", "0.810642", ",", "0.894146", ",", "0.960905", ",", "\n", "0.948233", ",", "0.987465", ",", "0.982426", ",", "0.983493", ",", "1.0", "]", "\n", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikur.data_ikur.Rec_Brouillette": [[96, 113], ["None"], "function", ["None"], ["", "def", "Rec_Brouillette", "(", ")", ":", "\n", "    ", "\"\"\"Data points for recovery curve in i_Kur.\n\n    Extracted from figure 6D in Brouillette 2003. Data reported as mean \\pm\n    SEM for \n    \"\"\"", "\n", "x", "=", "[", "50", ",", "100", ",", "150", ",", "200", ",", "250", ",", "500", ",", "750", ",", "1000", ",", "2000", ",", "3000", "]", "\n", "y", "=", "[", "0.2854284840068727", ",", "0.3561501165062254", ",", "0.4293136724174452", ",", "\n", "0.48785510862146064", ",", "0.5269199990585355", ",", "0.6259797114411466", ",", "\n", "0.6799962341422081", ",", "0.73032927719067", ",", "0.8281827382493467", ",", "\n", "0.9077600207122177", "]", "\n", "N", "=", "11", "\n", "errs", "=", "[", "0.3036987784498788", ",", "0.3768623343610986", ",", "0.4488078706427847", ",", "\n", "0.5146633087768022", ",", "0.5537164309082777", ",", "0.6430437545602183", ",", "\n", "0.6946065855438133", ",", "0.7534775343046107", ",", "0.8525372466872219", ",", "\n", "0.9175100619012874", "]", "\n", "return", "x", ",", "y", ",", "errs", ",", "N", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ito.data_ito.Peak_Yang": [[7, 40], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "Peak_Yang", "(", ")", ":", "\n", "    ", "\"\"\"Data points for peak outward rapidly-inactivating\n    4-AP sensitive current in HL-1 cells.\n\n    Figure 8B from 9 cells as mean \\pm SEM in Yang 2005.\n    \"\"\"", "\n", "x", "=", "[", "-", "60", ",", "-", "40", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "2.0137931034482506", ",", "\n", "2.5855799373040327", ",", "\n", "3.1623824451410485", ",", "\n", "3.791849529780535", ",", "\n", "5.803134796238226", ",", "\n", "7.127272727272697", ",", "\n", "11.897178683385533", ",", "\n", "23.563636363636306", ",", "\n", "38.67836990595609", ",", "\n", "67.58620689655169", ",", "\n", "104.76990595611282", "]", ")", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "-", "2.811285266457702", ",", "\n", "-", "1.549843260188112", ",", "\n", "-", "0.28589341692790526", ",", "\n", "-", "0.3435736677116097", ",", "\n", "1.6677115987460525", ",", "\n", "4.368652037617494", ",", "\n", "8.446394984325963", ",", "\n", "17.356739811912178", ",", "\n", "29.02319749216298", ",", "\n", "47.58620689655169", ",", "\n", "70.28714733542319", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "9", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ito.data_ito.SS_Yang": [[42, 75], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "SS_Yang", "(", ")", ":", "\n", "    ", "\"\"\"Data points for steady-state outward rapidly-inactivating\n    4-AP sensitive current in HL-1 cells.\n\n    Figure 8C from 9 cells as mean \\pm SEM in Yang 2005.\n    \"\"\"", "\n", "x", "=", "[", "-", "60", ",", "-", "40", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.1769911504424755", ",", "\n", "1.327433628318584", ",", "\n", "2.8318584070796433", ",", "\n", "4.86725663716814", ",", "\n", "6.814159292035395", ",", "\n", "8.141592920353983", ",", "\n", "9.292035398230084", ",", "\n", "10.265486725663717", ",", "\n", "11.150442477876103", ",", "\n", "12.920353982300883", ",", "\n", "15.221238938053094", "]", ")", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "-", "0.3539823008849545", ",", "\n", "0.7964601769911468", ",", "\n", "2.389380530973451", ",", "\n", "4.424778761061948", ",", "\n", "6.194690265486724", ",", "\n", "6.902654867256636", ",", "\n", "7.610619469026549", ",", "\n", "8.23008849557522", ",", "\n", "9.02654867256637", ",", "\n", "10.442477876106192", ",", "\n", "12.212389380530972", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "9", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ito.data_ito.TauInact_Yang": [[77, 86], ["None"], "function", ["None"], ["", "def", "TauInact_Yang", "(", ")", ":", "\n", "    ", "\"\"\"Time constants for inactivation of iTo in HL1 from Yang 2005.\n\n    Time constants obtained from single exponential fit to normalised\n    current traces in Figure 8A.\n    \"\"\"", "\n", "x", "=", "[", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "[", "11.5099", ",", "12.1994", ",", "14.1953", ",", "16.8687", ",", "16.4331", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ito.data_ito.IV_Kao": [[88, 106], ["None"], "function", ["None"], ["", "def", "IV_Kao", "(", ")", ":", "\n", "    ", "\"\"\"Data points in IV curve for i_to in HL-1.\n\n    Data from figure 6 in Kao 2016. Reported as mean \\pm SEM for\n    n=15 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "[", "0.0", ",", "0.27223230490018047", ",", "0.5626134301270405", ",", "0.7622504537205081", ",", "\n", "1.0526315789473681", ",", "1.7059891107078045", ",", "2.2323049001814876", ",", "\n", "2.940108892921959", ",", "3.7749546279491835", ",", "4.519056261343012", ",", "\n", "5.372050816696914", "]", "\n", "N", "=", "15", "\n", "errs", "=", "[", "0.07259528130671455", ",", "0.3992740471869318", ",", "0.7622504537205081", ",", "\n", "0.9981851179673313", ",", "1.3611615245009077", ",", "1.978221415607985", ",", "\n", "2.649727767695099", ",", "3.3030852994555353", ",", "4.192377495462795", ",", "\n", "4.918330308529946", ",", "5.8439201451905625", "]", "\n", "\n", "return", "x", ",", "y", ",", "errs", ",", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ito.data_ito.IV_Lu": [[107, 129], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "IV_Lu", "(", ")", ":", "\n", "    ", "\"\"\"Data points in IV curve for i_to in HL-1.\n\n    Recorded at 35C.\n\n    Data from figure 3A in Lu 2016.\n    Error bars are SEM for n=14 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.03659423788829841", ",", "0.9650303127850197", ",", "1.58526959600837", ",", "\n", "2.513705670905088", ",", "3.724710553141259", ",", "4.601830570309563", ",", "\n", "5.812775363485162", ",", "7.357785288910344", ",", "8.645794302269431", ",", "\n", "9.625666613015717", ",", "11.196244433714252", "]", ")", "\n", "N", "=", "14", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.01823021905769906", ",", "1.1462287650876135", ",", "1.8902551931321323", ",", "\n", "2.7879063899847143", ",", "4.0438756855575875", ",", "4.967091097640507", ",", "\n", "6.24862460844372", ",", "8.016446967510184", ",", "9.40032714326951", ",", "\n", "10.553919839208014", ",", "12.270523963779041", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ito.data_ito.ActTau_Xu": [[133, 156], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "ActTau_Xu", "(", ")", ":", "\n", "    ", "\"\"\"Activation time constant of i_to_f in mouse ventricular cells.\n\n    Using for HL-1 as i_to in mouse atrial cells (which HL-1 are derived\n    from) is similar to i_to_f in ventricular cells [Xu 1999], and no\n    existing data for HL-1.\n\n    Errors are sem for n=4 cells (see table iii and p669 Xu 1999).\n\n    Data from figure 8B in Xu 1999.\n    \"\"\"", "\n", "x", "=", "[", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "11.633340923253925", ",", "8.67159412300466", ",", "5.954232778869674", ",", "\n", "4.052088826039039", ",", "3.1280259814965916", ",", "2.4485283543454415", ",", "\n", "1.9322539667321905", "]", ")", "\n", "N", "=", "4", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "12.505602626942945", ",", "9.272287669427037", ",", "6.609631724650356", ",", "\n", "4.598438454993236", ",", "3.647400021571613", ",", "2.940570209604168", ",", "\n", "2.4783085459535243", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ito.data_ito.Inact_Xu": [[160, 184], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Inact_Xu", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation of ito_f in mouse ventricular cells.\n\n    Using for HL-1 as i_to in mouse atrial cells (which HL-1 are derived\n    from) is similar to i_to_f in ventricular cells [Xu 1999], and no\n    existing data for HL-1.\n\n    Data from figure 9 in Xu 1999. Reported as mean \\pm SEM in\n    n=7 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.0064935064935066", ",", "0.9653679653679654", ",", "0.9718614718614719", ",", "\n", "0.9848484848484849", ",", "1.0216450216450217", ",", "1.0151515151515151", ",", "\n", "0.9848484848484849", ",", "0.8095238095238095", ",", "0.24025974025974017", ",", "\n", "0.032467532467532534", "]", ")", "\n", "N", "=", "7", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "1.0173160173160174", ",", "1.0541125541125542", ",", "1.0389610389610389", ",", "\n", "1.0043290043290043", ",", "1.0454545454545454", ",", "1.0411255411255411", ",", "\n", "0.9978354978354979", ",", "0.8484848484848486", ",", "0.28787878787878785", ",", "\n", "0.04761904761904767", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ik1.data_ik1.IV_Goldoni": [[7, 26], ["None"], "function", ["None"], ["def", "IV_Goldoni", "(", ")", ":", "\n", "    ", "\"\"\"IV curve for i_K1 in HL-1 cell.\n\n    Data reported as single points in figure 3 from Goldoni 2010.\n    \"\"\"", "\n", "x", "=", "[", "-", "150", ",", "-", "140", ",", "-", "130", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "\n", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "[", "-", "8.610370907694442", ",", "-", "7.640677170562069", ",", "-", "7.095740481955988", ",", "\n", "-", "6.417375164012246", ",", "-", "5.690280874305283", ",", "-", "5.048312940699572", ",", "\n", "-", "4.066458295552736", ",", "-", "3.4365872651824665", ",", "-", "2.466744183565707", ",", "\n", "-", "1.7640357146666945", ",", "-", "1.0006507152534052", ",", "-", "0.6013675687784685", ",", "\n", "-", "0.28718944347844655", ",", "0.05139583755587118", ",", "0.26854271785626693", ",", "\n", "0.43702463117246193", ",", "0.532775780591618", ",", "0.5435072485412249", ",", "\n", "0.42070341252146815", "]", "\n", "# Max current at -150mV reported as -42.4 \\pm 9.4 pA/pF", "\n", "peak_out_curr", "=", "y", "[", "0", "]", "\n", "y", "=", "[", "yi", "*", "-", "42.4", "/", "peak_out_curr", "for", "yi", "in", "y", "]", "\n", "N", "=", "10", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ik1.data_ik1.Ko_Goldoni": [[27, 39], ["numpy.asarray", "np.asarray.tolist"], "function", ["None"], ["", "def", "Ko_Goldoni", "(", ")", ":", "\n", "    ", "\"\"\"Ko dependence of ik1 in HL-1 cell.\n\n    Data reported as single points at -150mV from figure 2 in Goldoni 2010\n    and normalised to maximum value at 100mM external Ko. This was done as\n    values are given in nA, but model output is pA/pF.\"\"\"", "\n", "x", "=", "[", "100", ",", "40", ",", "20", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "2.86764705882353", ",", "\n", "-", "0.41911764705882293", ",", "\n", "-", "0.1544117647058818", "]", ")", "\n", "y", "=", "y", "/", "y", "[", "0", "]", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.incx.data_incx.IV_Lu2016Fig2": [[18, 22], ["None"], "function", ["None"], ["def", "IV_Lu2016Fig2", "(", ")", ":", "\n", "    ", "x", "=", "[", "-", "100", ",", "-", "80", ",", "-", "60", ",", "-", "40", ",", "-", "20", ",", "0", ",", "20", ",", "40", ",", "60", ",", "80", ",", "100", "]", "\n", "y", "=", "[", "-", "1.355072", ",", "-", "0.826087", ",", "-", "0.340580", ",", "0.0", ",", "0.268116", ",", "0.637681", ",", "0.978261", ",", "1.485507", ",", "1.862319", ",", "2.311594", ",", "2.782609", "]", "\n", "return", "x", ",", "y", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikr.data_ikr.IV_Toyoda": [[7, 29], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "IV_Toyoda", "(", ")", ":", "\n", "    ", "\"\"\"Data points in IV curve for i_Kr.\n\n    Data from Figure 1E from Toyoda 2010. Reported as mean \\pm SEM from\n    10 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.015652640252213246", ",", "0.017761353533590096", ",", "0.12218171120781562", ",", "\n", "0.26069293359766377", ",", "1.0809824000541504", ",", "4.458125770428815", ",", "\n", "9.301137273329594", ",", "14.007824367613809", ",", "16.191748422695483", ",", "\n", "15.307494653370496", ",", "11.423322889562002", ",", "6.891346595664643", ",", "\n", "4.0639525877947165", "]", ")", "\n", "N", "=", "10", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.2201587783000427", ",", "0.22230654182737197", ",", "0.32668784925564154", ",", "\n", "0.6016015807539574", ",", "1.6605271002198556", ",", "5.753539579376788", ",", "\n", "11.142043967973596", ",", "16.666872765186966", ",", "19.498562300111555", ",", "\n", "18.989347092904445", ",", "14.321046390390517", ",", "8.561798966730493", ",", "\n", "5.666184179183357", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikr.data_ikr.Act_Toyoda": [[33, 54], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Act_Toyoda", "(", ")", ":", "\n", "    ", "\"\"\"Data points from activation curve for i_Kr.\n\n    Data from Figure 2B in Toyoda 2010. Reported as mean \\pm SEM for\n    10 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "9.784726905999186E-4", ",", "0.002037953817909388", ",", "0.006032853017018169", ",", "\n", "0.01100804532103461", ",", "0.0649050517407257", ",", "0.24600350793837167", ",", "\n", "0.5190802174666932", ",", "0.7735641254593133", ",", "0.9331361824637671", ",", "\n", "0.9860547161928584", ",", "1.0057060886487157", ",", "1.0018732063230271", ",", "\n", "0.9970627615138931", ",", "0.9991016255389565", "]", ")", "\n", "N", "=", "10", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.008805344008242733", ",", "0.007907879754353253", ",", "0.010926126677170744", ",", "\n", "0.016877971257478475", ",", "0.08251847037867321", ",", "0.2802500521093595", ",", "\n", "0.5631114885436777", ",", "0.8058537242491018", ",", "0.952704726068606", ",", "\n", "0.9929031148199019", ",", "1.0135338701735128", ",", "1.0087225151572248", ",", "\n", "1.005869925936444", ",", "1.0069294070637538", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikr.data_ikr.ActKin_Toyoda": [[58, 75], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "ActKin_Toyoda", "(", ")", ":", "\n", "    ", "\"\"\"Data points for activation time constants for i_Kr.\n\n    Data from Figure 3C in Toyoda 2010. Reported as mean \\pm SEM for\n    10 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "457.75075987841944", ",", "259.87841945288756", ",", "184.1945288753799", ",", "\n", "116.71732522796344", ",", "77.50759878419456", ",", "48.32826747720367", ",", "\n", "49.24012158054711", ",", "36.474164133738554", "]", ")", "\n", "N", "=", "10", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "350.15197568389056", ",", "234.34650455927044", ",", "164.13373860182367", ",", "\n", "99.39209726443767", ",", "64.741641337386", ",", "39.209726443769", ",", "\n", "40.121580547112444", ",", "27.355623100303887", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikr.data_ikr.DeactKinFast_Toyoda": [[79, 98], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "DeactKinFast_Toyoda", "(", ")", ":", "\n", "    ", "\"\"\"Data points for fast deactivation time constant for i_Kr.\n\n    Data from Figure 3C in Toyoda 2010. Reported as mean \\pm SEM for\n    10 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "4.430675707271462", ",", "6.125789104512478", ",", "7.817005689346161", ",", "\n", "3.1291403631829553", ",", "13.027043878107747", ",", "15.63011456628476", ",", "\n", "30.095082222741894", ",", "45.460213545320016", ",", "64.47665809367948", ",", "\n", "69.81918790429427", "]", ")", "\n", "N", "=", "10", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "15.372924947393017", ",", "17.068038344634147", ",", "18.759254929467716", ",", "\n", "14.979346894240507", ",", "23.05743901488586", ",", "26.572363806406315", ",", "\n", "40.121580547112444", ",", "56.40246278544157", ",", "79.0663237471748", ",", "\n", "88.0562699711636", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikr.data_ikr.DeactKinSlow_Toyoda": [[99, 118], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "DeactKinSlow_Toyoda", "(", ")", ":", "\n", "    ", "\"\"\"Data points for slow deactivation time constant for i_Kr.\n\n    Data from Figure 3C in Toyoda 2010. Reported as mean \\pm SEM for\n    10 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "55.49840230691302", ",", "57.18961889174648", ",", "60.700646870859714", ",", "\n", "47.80999142701285", ",", "55.88418673525064", ",", "86.75473462707498", ",", "\n", "246.20060790273556", ",", "438.46933208635335", ",", "551.4067492790898", ",", "\n", "565.8678201231394", "]", ")", "\n", "N", "=", "10", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "45.46411035772735", ",", "47.15922375496848", ",", "44.291169823084715", ",", "\n", "30.48086665107951", ",", "35.819499649286854", ",", "61.22281973345798", ",", "\n", "165.04169589275978", ",", "310.8097576182683", ",", "474.81490141064614", ",", "\n", "467.3875769620451", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikr.data_ikr.DeactKinRelAmp_Toyoda": [[119, 137], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "DeactKinRelAmp_Toyoda", "(", ")", ":", "\n", "    ", "\"\"\"Data points for relative amplitude of fast to slow component.\n\n    Data from Figure 3D in Toyoda 2010. Reported as mena \\pm SEM for 10 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.9269882659713168", ",", "0.908735332464146", ",", "0.8370273794002607", ",", "\n", "0.7131681877444589", ",", "0.7001303780964798", ",", "0.7561929595827901", ",", "\n", "0.740547588005215", ",", "0.7053455019556714", ",", "0.6453715775749673", ",", "\n", "0.5567144719687093", "]", ")", "\n", "N", "=", "10", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.9113428943937418", ",", "0.894393741851369", ",", "0.8161668839634941", ",", "\n", "0.681877444589309", ",", "0.620599739243807", ",", "0.741851368970013", ",", "\n", "0.7014341590612776", ",", "0.6792698826597132", ",", "0.6062581486310299", ",", "\n", "0.49543676662320724", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikr.data_ikr.Inact_Toyoda": [[141, 153], ["None"], "function", ["None"], ["", "def", "Inact_Toyoda", "(", ")", ":", "\n", "    ", "\"\"\"Data points for steady state inactivation.\n\n    Data from Figure 6B in Toyoda 2010. Reported for a single cell.\n    \"\"\"", "\n", "x", "=", "[", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", "]", "\n", "y", "=", "[", "1.0021276595744677", ",", "0.9654255319148934", ",", "0.9670212765957444", ",", "\n", "0.9877659574468083", ",", "0.9382978723404253", ",", "0.8393617021276594", ",", "\n", "0.7452127659574466", ",", "0.5920212765957444", ",", "0.4835106382978722", ",", "\n", "0.3829787234042552", ",", "0.27606382978723376", ",", "0.17074468085106376", ",", "\n", "0.13563829787234027", ",", "0.0494680851063829", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikr.data_ikr.InactKin_Toyoda": [[154, 172], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "InactKin_Toyoda", "(", ")", ":", "\n", "    ", "\"\"\"Data points for inactivation kinetics.\n\n    Data from Figure 5B in Toyoda 2010.\n    \"\"\"", "\n", "x", "=", "[", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.0140488976949733", ",", "1.0888568124153863", ",", "1.235334725970283", ",", "\n", "1.310268157326135", ",", "2.318292256520138", ",", "3.972601511578908", ",", "\n", "5.626910766637675", ",", "6.599037108096718", ",", "8.253346363155487", ",", "\n", "9.692269071804478", ",", "12.136328997032429", ",", "10.59573781367952", "]", ")", "\n", "N", "=", "4", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.7710716681472896", ",", "0.8342368149101667", ",", "1.0050945482894313", ",", "\n", "1.0683322153126547", ",", "2.0360788295229995", ",", "3.5638631542687254", ",", "\n", "5.3285711695705", ",", "6.037891836031692", ",", "7.630364233007597", ",", "\n", "8.770418985804161", ",", "10.29823957068006", ",", "9.736787715067898", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikach.data_ikach.IV_KaoFig6": [[18, 22], ["None"], "function", ["None"], ["def", "IV_KaoFig6", "(", ")", ":", "\n", "    ", "x", "=", "[", "-", "115", ",", "-", "105", ",", "-", "95", ",", "-", "85", ",", "-", "75", ",", "-", "65", ",", "-", "55", ",", "-", "45", ",", "-", "35", ",", "-", "25", ",", "-", "15", ",", "-", "5", ",", "5", ",", "15", ",", "25", ",", "35", ",", "45", "]", "\n", "y", "=", "[", "-", "1.682923", ",", "-", "1.191313", ",", "-", "0.781899", ",", "-", "0.427523", ",", "0.036762", ",", "0.418573", ",", "0.937841", ",", "1.319653", ",", "1.921395", ",", "2.440718", ",", "2.877512", ",", "3.231832", ",", "3.696174", ",", "4.105476", ",", "4.459796", ",", "4.869099", ",", "5.168437", "]", "\n", "return", "x", ",", "y", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.data_ina.IV_Dias": [[8, 28], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "IV_Dias", "(", ")", ":", "\n", "    ", "\"\"\"Data points in IV curve for i_Na in HL1-6 subclone.\n\n    Data from figure 6 in Dias 2014. Reported as mean \\pm SEM for n=12 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.1865311861209591", ",", "-", "0.11120577919429309", ",", "0.1503001913230264", ",", "\n", "0.13101595215640316", ",", "-", "4.915903186106931", ",", "-", "47.392361805051536", ",", "\n", "-", "80.65124628778395", ",", "-", "80.67023834150868", ",", "-", "75.94004822228533", ",", "\n", "-", "58.64062476259929", ",", "-", "39.66434905174137", ",", "-", "25.99620626422211", ",", "\n", "-", "12.327479105819037", ",", "24.245957030040174", ",", "49.366308213566526", "]", ")", "\n", "N", "=", "12", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "-", "7.075445787328732", ",", "-", "4.300560645425946", ",", "-", "4.319844884592598", ",", "\n", "-", "4.058923284959093", ",", "-", "8.82592876986422", ",", "-", "69.73841221755893", ",", "\n", "-", "99.08697893109215", ",", "-", "96.59229962798946", ",", "-", "86.83389023878559", ",", "\n", "-", "67.29983251930469", ",", "-", "46.64816548448434", ",", "-", "31.583084099151364", ",", "\n", "-", "17.355698375799562", ",", "15.027506337502246", ",", "38.75237985042443", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.data_ina.IV_Nakajima": [[30, 53], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "IV_Nakajima", "(", ")", ":", "\n", "    ", "\"\"\"Data points in IV curve for i_Na in HL-1.\n\n    Data from figure 4A in Nakajima 2009. Reported as mean \\pm SEM for\n    n=17 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "1.2973226211598643", ",", "-", "1.0570961503957221", ",", "-", "1.3277247263810494", ",", "\n", "-", "4.4075576643208905", ",", "-", "20.769372620163068", ",", "-", "80.81004166583597", ",", "\n", "-", "141.10638743246744", ",", "-", "160.02247762205695", ",", "-", "160.29310619804227", ",", "\n", "-", "146.0043659416678", ",", "-", "124.56315663563325", ",", "-", "99.54646039751995", ",", "\n", "-", "74.52926576423914", ",", "-", "48.23593030441977", ",", "-", "26.028189230677214", ",", "\n", "-", "0.500637945814475", "]", ")", "\n", "N", "=", "17", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "-", "6.405873088654516", ",", "-", "6.1658958154741725", ",", "-", "6.435278403540593", ",", "\n", "-", "7.983293793983364", ",", "-", "26.389276529574758", ",", "-", "89.23939913478597", ",", "\n", "-", "155.4103287414525", ",", "-", "176.11466079224894", ",", "-", "174.5977950997787", ",", "\n", "-", "158.7762405055720", ",", "-", "136.0578935826638", ",", "-", "109.50813380913459", ",", "\n", "-", "82.19308825581626", ",", "-", "55.13247343553758", ",", "-", "28.327036941049812", ",", "\n", "-", "6.886575227766585", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.data_ina.Act_Nakajima": [[57, 76], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Act_Nakajima", "(", ")", ":", "\n", "    ", "\"\"\"Activation of i_Na channel in HL-1.\n\n    Data from figure 4B in Nakajima 2009. Reported as mean \\pm SEM for\n    n=17 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "3.5219059432956E-4", ",", "0.0036995596059203883", ",", "0.01646568946763116", ",", "\n", "0.07559319181297108", ",", "0.3332689208942523", ",", "0.5634207991921433", ",", "\n", "0.8225458081527448", ",", "0.9266009867570104", ",", "0.9712325735782252", ",", "\n", "0.9796508638019754", "]", ")", "\n", "N", "=", "17", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.02863340699207395", ",", "0.03123899404392705", ",", "-", "9.287858151343364E-4", ",", "\n", "0.058198716530205585", ",", "0.25065373431115545", ",", "0.48804889527472406", ",", "\n", "0.7022618116310164", ",", "0.9454447419190959", ",", "0.9828361628055564", ",", "\n", "1.0144273474438132", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "sem", "-", "y", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.data_ina.Inact_Nakajima": [[80, 99], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Inact_Nakajima", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation data for HL-1 cells.\n\n    Data from figure 4D in Nakajima 2009. Reported as mean \\pm SEM for\n    N=19 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "130", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.9787835926449786", ",", "0.9830268741159829", ",", "0.9844413012729843", ",", "\n", "0.9816124469589815", ",", "0.9420084865629419", ",", "0.7270155586987269", ",", "\n", "0.3465346534653464", ",", "0.10325318246110315", ",", "0.032531824611032434", ",", "\n", "0.026874115983026803", ",", "0.021216407355021172", "]", ")", "\n", "N", "=", "19", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.9971711456859971", ",", "1.004243281471004", ",", "1.004243281471004", ",", "\n", "1.007072135785007", ",", "0.966053748231966", ",", "0.758132956152758", ",", "\n", "0.38896746817538885", ",", "0.12729844413012725", ",", "0.05516265912305496", ",", "\n", "0.03960396039603942", ",", "0.04526166902404505", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.data_ina.Recovery_Zhang": [[103, 122], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Recovery_Zhang", "(", ")", ":", "\n", "    ", "\"\"\"Recovery of i_Na channel in HL-1 cells.\n\n    Extracted from figure 4F in Zhang 2013. Data reported as mean \\pm SEM for\n    an unreported number of cells.\n\n    Assume 10 cells to generate approximate SD.\n    \"\"\"", "\n", "x", "=", "[", "2", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", "80", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.0", ",", "0.7037787468481477", ",", "0.8894270109940083", ",", "0.9240166438077417", ",", "\n", "0.9389746360072241", ",", "0.9493922229447606", ",", "0.9643502151442429", ",", "\n", "0.974773595262337", ",", "0.9776412196383027", "]", ")", "\n", "N", "=", "10", "#None", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.0", ",", "0.7279478961340657", ",", "0.9105750166191867", ",", "0.9663169999435165", ",", "\n", "0.9888249547045695", ",", "0.9947108261509964", ",", "1.006647674689739", ",", "\n", "1.0140513594422327", ",", "1.016913190637641", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.data_ina.Trace_Nakajima": [[125, 147], ["None"], "function", ["None"], ["", "def", "Trace_Nakajima", "(", ")", ":", "\n", "    ", "\"\"\"Current trace from HL-1 cells.\n\n    Data from highest peak curve in Figure 4C of control cells in\n    Nakajima 2009. Stimulated from HP of -120mV to step of -20mV.\n    Current in pA and time in ms.\n    \"\"\"", "\n", "x", "=", "[", "-", "29.855072463768114", ",", "-", "29.79710144927536", ",", "-", "29.681159420289855", ",", "\n", "-", "29.565217391304348", ",", "-", "29.463768115942027", ",", "-", "29.27536231884058", ",", "\n", "-", "29.07246376811594", ",", "-", "28.782608695652172", ",", "-", "28.217391304347824", ",", "\n", "-", "27.333333333333332", ",", "-", "26.3768115942029", ",", "-", "25.15942028985507", ",", "\n", "-", "23.89855072463768", ",", "-", "22.73913043478261", ",", "-", "20.217391304347824", "]", "\n", "y", "=", "[", "3.318681318681319", ",", "2.0329670329670333", ",", "0.1098901098901095", ",", "\n", "-", "0.604395604395604", ",", "-", "0.7692307692307692", ",", "-", "0.3736263736263741", ",", "\n", "0.5494505494505493", ",", "1.5054945054945055", ",", "2.4505494505494507", ",", "\n", "2.9450549450549453", ",", "3.1428571428571432", ",", "3.21978021978022", ",", "\n", "3.2527472527472527", ",", "3.274725274725275", ",", "3.285714285714286", "]", "\n", "x0", "=", "x", "[", "0", "]", "\n", "x", "=", "[", "xi", "-", "x0", "for", "xi", "in", "x", "]", "\n", "y0", "=", "y", "[", "0", "]", "\n", "y", "=", "[", "yi", "-", "y0", "for", "yi", "in", "y", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.data_ina.TauAct_Dias": [[150, 162], ["numpy.asarray", "sd.tolist"], "function", ["None"], ["", "def", "TauAct_Dias", "(", ")", ":", "\n", "    ", "\"\"\"Activation time constants.\n\n    Generated by fitting single exponential function to current traces\n    in Dias 2014 Fig 6. Voltage step values inferred from peak of trace.\n    Standard deviations assumed 10%.\n    See Matlab script file for details.\n    \"\"\"", "\n", "x", "=", "[", "-", "40", "]", "\n", "y", "=", "[", "0.3590", "]", "\n", "sd", "=", "np", ".", "asarray", "(", "y", ")", "*", "0.1", "\n", "return", "x", ",", "y", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.data_ina.TauInact_Dias": [[165, 183], ["numpy.asarray", "sd.tolist"], "function", ["None"], ["", "def", "TauInact_Dias", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation time constants.\n\n    Generated by fitting single exponential function to current traces\n    in Dias 2014 Fig 6. Voltage step values inferred from peak of trace.\n    Standard deviations assumed 10%.\n    See Matlab script file for details.\n    \"\"\"", "\n", "x", "=", "[", "-", "40", "]", "\n", "y", "=", "[", "2.7090", "]", "\n", "sd", "=", "np", ".", "asarray", "(", "y", ")", "*", "0.1", "\n", "#x = [-40, -30, -20]", "\n", "#y = [2.1329, 2.5981, 3.2569]", "\n", "#y = [1.2873, 1.6258, 2.4537, 2.9704]", "\n", "# assume 50% SD", "\n", "#sd = np.asarray(y)*0.5", "\n", "#sd = [0.0127,0.0383,0.3030,0.2347]", "\n", "return", "x", ",", "y", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.IV_Schneider": [[8, 36], ["None"], "function", ["None"], ["def", "IV_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data points in IV curve for i_Na in human atrial cells\n    from fig. 1B in Schenider 1994. No error reported.\n\n    Already converted to nA/pF\n    \"\"\"", "\n", "x", "=", "[", "-", "85", ",", "-", "75", ",", "-", "65", ",", "-", "55", ",", "-", "45", ",", "-", "35", ",", "-", "25", ",", "-", "15", ",", "-", "5", ",", "\n", "5", ",", "15", ",", "25", ",", "35", ",", "45", ",", "55", "]", "\n", "y", "=", "[", "-", "0.012040616536735271", ",", "\n", "-", "0.05741623375231519", ",", "\n", "-", "0.6072115075423579", ",", "\n", "-", "3.3836990774815483", ",", "\n", "-", "10.698462945627867", ",", "\n", "-", "12.088600358717478", ",", "\n", "-", "10.74769727674839", ",", "\n", "-", "8.44011490392517", ",", "\n", "-", "6.426723737521705", ",", "\n", "-", "3.2367821184339327", ",", "\n", "-", "0.6350085391909559", ",", "\n", "2.5547187069020936", ",", "\n", "5.324417798675175", ",", "\n", "8.135848166753608", ",", "\n", "10.527393295841879", "]", "\n", "#y = [-0.3969, -0.1152, -4.8705, -29.7854, -92.2440,", "\n", "#     -104.0544, -92.6832, -72.7459, -54.5716, -28.0836,", "\n", "#     -5.3740, 22.6277, 46.0932, 71.0738, 91.0111]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.IV_Sakakibara": [[37, 51], ["None"], "function", ["None"], ["", "def", "IV_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data points in IV curve for i_Na in human atrial cells\n    from fig. 1B in Sakakibara 1992\n\n    Already converted to nA/pF\n\n    No errors reported in data.\n    \"\"\"", "\n", "\n", "x", "=", "[", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", "]", "\n", "y", "=", "[", "0.0", ",", "0.0", ",", "0.0", ",", "-", "0.1555", ",", "-", "1.3371", ",", "-", "6.6232", ",", "-", "14.6457", ",", "-", "17.0089", ",", "\n", "-", "13.7750", ",", "-", "7.1207", ",", "2.0212", ",", "11.5362", ",", "21.5487", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.Act_Sakakibara": [[55, 71], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Act_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Activation curve of i_Na current\n    Data from Sakakibara 1992 - Fig. 2.\n\n    Data expressed as mean \\pm SEM for 46 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "0.0000", ",", "0.0012", ",", "0.0038", ",", "0.0203", ",", "0.0376", ",", "0.1744", ",", "0.4454", ",", "\n", "0.7081", ",", "0.8790", ",", "0.9671", ",", "0.9913", ",", "1.0071", ",", "1.0076", "]", ")", "\n", "N", "=", "46", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.0000", ",", "0.0019", ",", "0.0045", ",", "0.0217", ",", "0.0382", ",", "0.1938", ",", "0.4691", ",", "\n", "0.7248", ",", "0.8915", ",", "0.9678", ",", "0.9920", ",", "1.0064", ",", "1.0062", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.Inact_Sakakibara": [[74, 90], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Inact_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Inactivation curve for i_Na\n    Data from Sakakibara 1992 - Fig 7.\n\n    Data expressed as mean \\pm SEM for 46 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "140", ",", "-", "130", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "1.0000", ",", "1.0011", ",", "0.9849", ",", "0.9041", ",", "0.6699", ",", "0.3157", ",", "0.0901", ",", "\n", "0.0299", ",", "0.0284", ",", "0.0229", ",", "0.0093", "]", ")", "\n", "N", "=", "46", "\n", "sem", "=", "np", ".", "array", "(", "[", "1.0000", ",", "1.0011", ",", "0.9849", ",", "0.9041", ",", "0.6699", ",", "0.3357", ",", "0.1208", ",", "\n", "0.0566", ",", "0.0444", ",", "0.0229", ",", "0.0093", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.Inact_Schneider_32": [[91, 123], ["numpy.linspace"], "function", ["None"], ["", "def", "Inact_Schneider_32", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation curve for i_Na from Schneider 1994 - Fig 4.\n\n    32ms prepulse duration.\n    \"\"\"", "\n", "x", "=", "np", ".", "linspace", "(", "-", "135", ",", "5", ",", "25", ")", "\n", "y", "=", "[", "0.99883", ",", "\n", "0.99888", ",", "\n", "0.99776", ",", "\n", "0.99431", ",", "\n", "0.99786", ",", "\n", "0.98043", ",", "\n", "0.95833", ",", "\n", "0.94323", ",", "\n", "0.90015", ",", "\n", "0.84309", ",", "\n", "0.80002", ",", "\n", "0.69284", ",", "\n", "0.63229", ",", "\n", "0.55308", ",", "\n", "0.45756", ",", "\n", "0.37019", ",", "\n", "0.27467", ",", "\n", "0.18964", ",", "\n", "0.11043", ",", "\n", "0.06036", ",", "\n", "0.03477", ",", "\n", "0.00102", ",", "\n", "-", "0.00010", ",", "\n", "-", "0.00005", ",", "\n", "0.00117", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.Inact_Schneider_64": [[124, 156], ["numpy.linspace"], "function", ["None"], ["", "def", "Inact_Schneider_64", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation curve for i_Na from Schneider 1994 - Fig 4.\n\n    64ms prepulse duration.\n    \"\"\"", "\n", "x", "=", "np", ".", "linspace", "(", "-", "135", ",", "5", ",", "25", ")", "\n", "y", "=", "[", "0.99767", ",", "\n", "0.99538", ",", "\n", "0.99194", ",", "\n", "0.97217", ",", "\n", "0.96523", ",", "\n", "0.94779", ",", "\n", "0.91055", ",", "\n", "0.87796", ",", "\n", "0.79992", ",", "\n", "0.72305", ",", "\n", "0.62636", ",", "\n", "0.52151", ",", "\n", "0.42250", ",", "\n", "0.32814", ",", "\n", "0.23145", ",", "\n", "0.15924", ",", "\n", "0.10218", ",", "\n", "0.05910", ",", "\n", "0.03584", ",", "\n", "0.01141", ",", "\n", "0.00913", ",", "\n", "0.00335", ",", "\n", "0.00340", ",", "\n", "0.00462", ",", "\n", "0.00700", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.Inact_Schneider_128": [[157, 189], ["numpy.linspace"], "function", ["None"], ["", "def", "Inact_Schneider_128", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation curve for i_Na from Schneider 1994 - Fig 4.\n\n    128ms prepulse duration.\n    \"\"\"", "\n", "x", "=", "np", ".", "linspace", "(", "-", "135", ",", "5", ",", "25", ")", "\n", "y", "=", "[", "0.99767", ",", "\n", "0.99422", ",", "\n", "0.98494", ",", "\n", "0.96868", ",", "\n", "0.96640", ",", "\n", "0.94779", ",", "\n", "0.89773", ",", "\n", "0.83833", ",", "\n", "0.76729", ",", "\n", "0.64030", ",", "\n", "0.50515", ",", "\n", "0.36767", ",", "\n", "0.25233", ",", "\n", "0.15448", ",", "\n", "0.08926", ",", "\n", "0.04968", ",", "\n", "0.01010", ",", "\n", "0.00316", ",", "\n", "0.00321", ",", "\n", "0.00326", ",", "\n", "0.00097", ",", "\n", "0.00102", ",", "\n", "0.00224", ",", "\n", "0.00228", ",", "\n", "0.00233", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.Inact_Schneider_256": [[190, 222], ["numpy.linspace"], "function", ["None"], ["", "def", "Inact_Schneider_256", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation curve for i_Na from Schneider 1994 - Fig 4.\n\n    256ms prepulse duration.\n    \"\"\"", "\n", "x", "=", "np", ".", "linspace", "(", "-", "135", ",", "5", ",", "25", ")", "\n", "y", "=", "[", "1.00000", ",", "\n", "0.99072", ",", "\n", "0.98378", ",", "\n", "0.96518", ",", "\n", "0.92910", ",", "\n", "0.89535", ",", "\n", "0.86160", ",", "\n", "0.78472", ",", "\n", "0.68337", ",", "\n", "0.55638", ",", "\n", "0.41424", ",", "\n", "0.25228", ",", "\n", "0.14860", ",", "\n", "0.07289", ",", "\n", "0.04730", ",", "\n", "-", "0.00043", ",", "\n", "0.01010", ",", "\n", "0.00316", ",", "\n", "0.00204", ",", "\n", "0.00442", ",", "\n", "-", "0.00019", ",", "\n", "0.00219", ",", "\n", "0.00340", ",", "\n", "0.00578", ",", "\n", "0.00466", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.Inact_Schneider_512": [[223, 255], ["numpy.linspace"], "function", ["None"], ["", "def", "Inact_Schneider_512", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation curve for i_Na from Schneider 1994 - Fig 4.\n\n    512ms prepulse duration.\n    \"\"\"", "\n", "x", "=", "np", ".", "linspace", "(", "-", "135", ",", "5", ",", "25", ")", "\n", "y", "=", "[", "0.99767", ",", "\n", "0.98956", ",", "\n", "0.98728", ",", "\n", "0.96984", ",", "\n", "0.95940", ",", "\n", "0.90933", ",", "\n", "0.85344", ",", "\n", "0.77423", ",", "\n", "0.66356", ",", "\n", "0.52258", ",", "\n", "0.37461", ",", "\n", "0.21848", ",", "\n", "0.12646", ",", "\n", "0.06823", ",", "\n", "0.04380", ",", "\n", "-", "0.00277", ",", "\n", "0.00894", ",", "\n", "0.00083", ",", "\n", "0.00204", ",", "\n", "0.00209", ",", "\n", "-", "0.00019", ",", "\n", "0.00452", ",", "\n", "0.00340", ",", "\n", "0.00695", ",", "\n", "0.01166", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.TauM_Activation_Schneider": [[258, 273], ["numpy.array", "numpy.array", "numpy.abs", "np.array.tolist", "np.abs.tolist"], "function", ["None"], ["", "def", "TauM_Activation_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for tau_m for i_Na\n    Data from Schneider '94 figure 3C\n\n    Errors reported as mean \\pm SD for n=23\n    \"\"\"", "\n", "x", "=", "[", "-", "65", ",", "-", "55", ",", "-", "45", ",", "-", "35", ",", "-", "25", ",", "-", "15", ",", "-", "5", ",", "5", ",", "15", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "0.2793", ",", "0.3933", ",", "0.3348", ",", "0.2357", ",", "0.1969", ",", "\n", "0.1676", ",", "0.1939", ",", "0.1760", ",", "0.1611", "]", ")", "\n", "#N = 23", "\n", "sd", "=", "np", ".", "array", "(", "[", "0.5670", ",", "0.6416", ",", "0.5766", ",", "0.4136", ",", "0.2996", ",", "\n", "0.2464", ",", "0.2339", ",", "0.2834", ",", "0.1993", "]", ")", "\n", "sd", "=", "np", ".", "abs", "(", "y", "-", "sd", ")", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.TauH_Inactivation_Schneider": [[276, 294], ["numpy.asarray", "numpy.asarray", "numpy.abs", "np.asarray.tolist", "np.abs.tolist"], "function", ["None"], ["", "def", "TauH_Inactivation_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for tau_h for i_Na\n    Data from Schneider '94 figure 3B\n\n    Data reported as mean \\pm SD\n    \"\"\"", "\n", "x", "=", "[", "-", "65", ",", "-", "55", ",", "-", "45", ",", "-", "35", ",", "-", "25", ",", "-", "15", ",", "-", "5", ",", "5", ",", "15", ",", "25", ",", "35", ",", "45", ",", "\n", "55", ",", "65", ",", "75", ",", "85", ",", "95", ",", "105", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.6611", ",", "1.7457", ",", "1.2700", ",", "0.8196", ",", "0.6182", ",", "0.4986", ",", "0.3556", ",", "\n", "0.2923", ",", "0.2894", ",", "0.2729", ",", "0.2738", ",", "0.2748", ",", "0.2836", ",", "0.2690", ",", "\n", "0.2623", ",", "0.2437", ",", "0.2292", ",", "0.2263", "]", ")", "\n", "sd", "=", "np", ".", "asarray", "(", "[", "1.8750", ",", "2.0161", ",", "1.6124", ",", "1.0511", ",", "0.7661", ",", "0.6075", ",", "0.4626", ",", "\n", "0.3799", ",", "0.3458", ",", "0.3312", ",", "0.3128", ",", "0.3137", ",", "0.3303", ",", "0.3157", ",", "\n", "0.3011", ",", "0.2826", ",", "0.2681", ",", "0.2730", "]", ")", "\n", "sd", "=", "np", ".", "abs", "(", "y", "-", "sd", ")", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.TauH_Inactivation_Sakakibara": [[295, 309], ["numpy.array", "numpy.array", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "TauH_Inactivation_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for tau_h for i_Na\n    Data from Sakakibara 1992 Fig 5B\n\n    Errors reported as mean \\pm SEM for 8 cells\n    \"\"\"", "\n", "x", "=", "[", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "9.31", ",", "5.56", ",", "3.68", ",", "2.62", "]", ")", "\n", "N", "=", "8", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.63", ",", "0.32", ",", "0.23", ",", "0.14", "]", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.TauJ_Inactivation_Sakakibara": [[310, 324], ["numpy.array", "numpy.array", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "TauJ_Inactivation_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for tau_j for i_Na\n    Data from Sakakibara 1992 Fig 5B\n\n    Errors reported as mean \\pm SEM for 8 cells\n    \"\"\"", "\n", "x", "=", "[", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "59.2", ",", "40.7", ",", "16.9", ",", "11.9", "]", ")", "\n", "N", "=", "8", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.6", ",", "5.7", ",", "2.0", ",", "1.0", "]", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.Rel_Tf_Sakakibara": [[325, 338], ["numpy.array", "numpy.sqrt", "sd.tolist"], "function", ["None"], ["", "def", "Rel_Tf_Sakakibara", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for percentage fast inactivation for i_Na\n    Data from Sakakibara 1992 Figure 5B\n\n    Errors reported as mean \\pm SEM for 8 cells\n    \"\"\"", "\n", "x", "=", "[", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", "]", "\n", "y", "=", "[", "0.88", ",", "0.91", ",", "0.92", ",", "0.91", "]", "\n", "N", "=", "8", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.04", ",", "0.02", ",", "0.01", ",", "0.02", "]", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.TauH_Inactivation_Sakakibara_Depol": [[339, 353], ["None"], "function", ["None"], ["", "def", "TauH_Inactivation_Sakakibara_Depol", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for fast inactivation time constant\n    from Sakakibara Fig 9.\n\n    Errors reported as mean \\pm SEM for 12,11,11,12,4 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "140", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", "]", "\n", "y", "=", "[", "7.3419060624046795", ",", "\n", "20.79767110039968", ",", "\n", "45.124433704328595", ",", "\n", "70.37630653239292", ",", "\n", "93.05720409296985", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.cm_ina.TauJ_Inactivation_Sakakibara_Depol": [[354, 368], ["None"], "function", ["None"], ["", "def", "TauJ_Inactivation_Sakakibara_Depol", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for slow inactivation time constant\n    from Sakakibara Fig 9.\n\n    Errors reported same as previous.\n    \"\"\"", "\n", "x", "=", "[", "-", "140", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", "]", "\n", "y", "=", "[", "73.10895701613708", ",", "\n", "201.90499294522908", ",", "\n", "284.4750075672543", ",", "\n", "497.3832737043119", ",", "\n", "737.304795871682", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.IV_Schneider": [[8, 36], ["None"], "function", ["None"], ["import", "scipy", ".", "optimize", "as", "so", "\n", "\n", "\n", "def", "temperature_adjust", "(", "R0", ",", "T0", ",", "T1", ",", "Q10", ")", ":", "\n", "    ", "return", "R0", "*", "Q10", "**", "(", "(", "T0", "-", "T1", ")", "/", "10", ")", "\n", "\n", "\n", "# All experiments use conditions as defined in the", "\n", "# Courtemanche paper. Data is adjusted to these conditions.", "\n", "# Experimental conditions are included in experiment setup below", "\n", "# for reference.", "\n", "", "crn_conditions", "=", "{", "'membrane.Na_o'", ":", "140000", ",", "\n", "'membrane.Na_i'", ":", "11200", ",", "\n", "'membrane.T'", ":", "310", "}", "\n", "Q10", "=", "3.", "\n", "\n", "\n", "### IV curve - Schneider 1994", "\n", "schneider_iv_desc", "=", "\"\"\"IV curve from Schneider et al 1994.\"\"\"", "\n", "\n", "vsteps", ",", "peaks", ",", "sd", "=", "data", ".", "IV_Schneider", "(", ")", "\n", "cm_mean", "=", "89", "# pF", "\n", "cm_sd", "=", "26.7", "\n", "# convert nA to pA/pF", "\n", "peaks", "=", "np", ".", "array", "(", "peaks", ")", "\n", "peaks", "=", "peaks", "*", "1000", "/", "cm_mean", "\n", "sd", "=", "[", "(", "cm_sd", "/", "cm_mean", ")", "*", "p", "for", "p", "in", "peaks", "]", "\n", "schneider_iv_max_peak", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "peaks", ")", ")", "# normalising", "\n", "peaks", "=", "[", "p", "/", "schneider_iv_max_peak", "for", "p", "in", "peaks", "]", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.IV_Sakakibara": [[37, 51], ["None"], "function", ["None"], ["variances", "=", "[", "(", "sd_", "/", "schneider_iv_max_peak", ")", "**", "2", "for", "sd_", "in", "sd", "]", "\n", "schneider_iv_dataset", "=", "np", ".", "asarray", "(", "[", "vsteps", ",", "peaks", ",", "variances", "]", ")", "\n", "\n", "schneider_iv_protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "\n", "-", "85", ",", "65", ",", "10", ",", "-", "135", ",", "500", ",", "12", "\n", ")", "\n", "schneider_conditions", "=", "{", "'membrane.Na_o'", ":", "120000", ",", "\n", "'membrane.Na_i'", ":", "70000", ",", "\n", "'membrane.T'", ":", "297.15", "}", "\n", "\n", "def", "schneider_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "512", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "500", ",", "512", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.Act_Sakakibara": [[55, 71], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["\n", "", "schneider_iv", "=", "Experiment", "(", "\n", "dataset", "=", "schneider_iv_dataset", ",", "\n", "protocol", "=", "schneider_iv_protocol", ",", "\n", "conditions", "=", "crn_conditions", ",", "\n", "sum_stats", "=", "schneider_iv_sum_stats", ",", "\n", "description", "=", "schneider_iv_desc", "\n", ")", "\n", "\n", "\n", "### IV curve Sakakibara 1992 (voltage shifted +20mV)", "\n", "sakakibara_iv_desc", "=", "\"\"\"IV curve from Sakakibara 1992.\nVoltage shifted +20mV as in Courtemanche 1998.\"\"\"", "\n", "\n", "vsteps", ",", "peaks", ",", "_", "=", "data", ".", "IV_Sakakibara", "(", ")", "\n", "# Propagate errors in capacitance measure to IV", "\n", "cm_mean", "=", "126.8", "# pF", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.Inact_Sakakibara": [[74, 90], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["cm_sd", "=", "cm_sem", "*", "np", ".", "sqrt", "(", "cm_N", ")", "# pF", "\n", "# convert nA to pA/pF", "\n", "peaks", "=", "np", ".", "array", "(", "peaks", ")", "\n", "peaks", "=", "peaks", "*", "1000", "/", "cm_mean", "\n", "sd", "=", "[", "(", "cm_sd", "/", "cm_mean", ")", "*", "p", "for", "p", "in", "peaks", "]", "\n", "sakakibara_iv_max_peak", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "peaks", ")", ")", "# normalising", "\n", "peaks", "=", "[", "p", "/", "sakakibara_iv_max_peak", "for", "p", "in", "peaks", "]", "\n", "variances", "=", "[", "(", "sd_", "/", "sakakibara_iv_max_peak", ")", "**", "2", "for", "sd_", "in", "sd", "]", "\n", "sakakibara_iv_dataset", "=", "np", ".", "asarray", "(", "[", "vsteps", ",", "peaks", ",", "variances", "]", ")", "\n", "\n", "sakakibara_act_protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "\n", "-", "100", ",", "30", ",", "10", ",", "-", "140", ",", "9900", ",", "100", "\n", ")", "\n", "sakakibara_conditions", "=", "{", "'membrane.Na_o'", ":", "5000", ",", "\n", "'membrane.Na_i'", ":", "5000", ",", "\n", "'membrane.T'", ":", "290.15", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.Inact_Schneider_32": [[91, 123], ["numpy.linspace"], "function", ["None"], ["def", "sakakibara_iv_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "9900", ",", "10000", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "output", "=", "output", "+", "[", "current", "[", "index", "]", "/", "sakakibara_iv_max_peak", "]", "\n", "", "return", "output", "\n", "\n", "", "sakakibara_iv", "=", "Experiment", "(", "\n", "dataset", "=", "sakakibara_iv_dataset", ",", "\n", "protocol", "=", "sakakibara_act_protocol", ",", "\n", "conditions", "=", "crn_conditions", ",", "\n", "sum_stats", "=", "sakakibara_iv_sum_stats", ",", "\n", "description", "=", "sakakibara_iv_desc", "\n", ")", "\n", "\n", "\n", "### Activation Sakakibara (+20mV voltage shift as in CRN 1998)", "\n", "sakakibara_act_desc", "=", "\"\"\"Activation curve Sakakibara 1992.\nNote: Curve is voltage shifted +20mV as in Courtemanche 1998.\"\"\"", "\n", "\n", "vsteps_act", ",", "act", ",", "sd_act", "=", "data", ".", "Act_Sakakibara", "(", ")", "\n", "vsteps_act", "=", "[", "v_", "+", "20", "for", "v_", "in", "vsteps_act", "]", "\n", "variances_act", "=", "[", "sd", "**", "2", "for", "sd", "in", "sd_act", "]", "\n", "sakakibara_act_dataset", "=", "np", ".", "asarray", "(", "[", "vsteps_act", ",", "act", ",", "variances_act", "]", ")", "\n", "\n", "def", "sakakibara_act_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "10000", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "9900", ",", "10000", ",", "adjust", "=", "True", ")", "\n", "gate", "=", "d", "[", "'ina.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "gate", ")", "]", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.Inact_Schneider_64": [[124, 156], ["numpy.linspace"], "function", ["None"], ["", "for", "i", "in", "range", "(", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "-", "1", "]", "\n", "", "return", "output", "\n", "\n", "", "sakakibara_act", "=", "Experiment", "(", "\n", "dataset", "=", "sakakibara_act_dataset", ",", "\n", "protocol", "=", "sakakibara_act_protocol", ",", "\n", "conditions", "=", "crn_conditions", ",", "\n", "sum_stats", "=", "sakakibara_act_sum_stats", ",", "\n", "description", "=", "sakakibara_act_desc", "\n", ")", "\n", "\n", "\n", "### Inactivation Sakakibara 1992 (voltage shifted)", "\n", "sakakibara_inact_desc", "=", "\"\"\"Inactivation curve from Sakakibara 1992.\nVoltage shifted +20mV as in Courtemanche 1998.\"\"\"", "\n", "vsteps_inact", ",", "inact", ",", "sd_inact", "=", "data", ".", "Inact_Sakakibara", "(", ")", "\n", "vsteps_inact", "=", "[", "v_", "+", "20", "for", "v_", "in", "vsteps_inact", "]", "\n", "variances_inact", "=", "[", "sd", "**", "2", "for", "sd", "in", "sd_inact", "]", "\n", "sakakibara_inact_dataset", "=", "np", ".", "asarray", "(", "[", "vsteps_inact", ",", "inact", ",", "variances_inact", "]", ")", "\n", "\n", "sakakibara_inact_protocol", "=", "availability_linear", "(", "\n", "-", "120", ",", "-", "10", ",", "10", ",", "-", "140", ",", "-", "20", ",", "10000", ",", "1000", ",", "0", ",", "30", "\n", ")", "\n", "\n", "def", "sakakibara_inact_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "11030", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "11000", ",", "11030", ",", "adjust", "=", "True", ")", ".", "npview", "(", ")", "\n", "gate", "=", "d", "[", "'ina.g'", "]", "\n", "output", "=", "output", "+", "[", "max", "(", "gate", ")", "]", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "output", ")", ")", ":", "\n", "        ", "output", "[", "i", "]", "=", "output", "[", "i", "]", "/", "output", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.Inact_Schneider_128": [[157, 189], ["numpy.linspace"], "function", ["None"], ["", "output", "[", "0", "]", "=", "1.", "\n", "return", "output", "\n", "\n", "", "sakakibara_inact", "=", "Experiment", "(", "\n", "dataset", "=", "sakakibara_inact_dataset", ",", "\n", "protocol", "=", "sakakibara_inact_protocol", ",", "\n", "conditions", "=", "crn_conditions", ",", "\n", "sum_stats", "=", "sakakibara_inact_sum_stats", ",", "\n", "description", "=", "sakakibara_inact_desc", "\n", ")", "\n", "\n", "\n", "### Activation kinetics Schneider 1994", "\n", "schneider_taum_desc", "=", "\"\"\"Activation kinetics from Schneider 1994.\nTemperature adjusted from 297 to 310 using Q10 of 3.\"\"\"", "\n", "\n", "vsteps_tm", ",", "tm", ",", "sd_tm", "=", "data", ".", "TauM_Activation_Schneider", "(", ")", "\n", "tm", "=", "[", "temperature_adjust", "(", "tm_", ",", "297", ",", "310", ",", "Q10", ")", "for", "tm_", "in", "tm", "]", "\n", "max_tm", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "tm", ")", ")", "# normalising", "\n", "tm", "=", "[", "tm_", "/", "max_tm", "for", "tm_", "in", "tm", "]", "\n", "variances_tm", "=", "[", "(", "sd_", "/", "max_tm", ")", "**", "2", "for", "sd_", "in", "sd_tm", "]", "\n", "schneider_taum_dataset", "=", "np", ".", "asarray", "(", "[", "vsteps_tm", ",", "tm", ",", "variances_tm", "]", ")", "\n", "\n", "schneider_taum_protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "\n", "-", "65", ",", "25", ",", "10", ",", "-", "135", ",", "500", ",", "100", "\n", ")", "\n", "\n", "def", "schneider_taum_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "d", "in", "data", ".", "split_periodic", "(", "600", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "500", ",", "600", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "time", "=", "d", "[", "'environment.time'", "]", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.Inact_Schneider_256": [[190, 222], ["numpy.linspace"], "function", ["None"], ["\n", "# Remove constant", "\n", "c0", "=", "d", "[", "'ina.i_Na'", "]", "[", "0", "]", "\n", "current", "=", "[", "(", "c_", "-", "c0", ")", "for", "c_", "in", "current", "]", "\n", "\n", "def", "sum_of_exp", "(", "t", ",", "taum", ",", "tauh", ")", ":", "\n", "            ", "return", "(", "(", "1", "-", "np", ".", "exp", "(", "-", "t", "/", "taum", ")", ")", "**", "3", "*", "\n", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", ")", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "sum_of_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "0.5", ",", "1.", "]", ",", "\n", "bounds", "=", "(", "[", "0.", ",", "0.", "]", ",", "\n", "[", "1.", ",", "100.", "]", ")", ")", "\n", "output", "=", "output", "+", "[", "popt", "[", "0", "]", "/", "max_tm", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n", "", "schneider_taum", "=", "Experiment", "(", "\n", "dataset", "=", "schneider_taum_dataset", ",", "\n", "protocol", "=", "schneider_taum_protocol", ",", "\n", "conditions", "=", "crn_conditions", ",", "\n", "sum_stats", "=", "schneider_taum_sum_stats", ",", "\n", "description", "=", "schneider_taum_desc", "\n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.Inact_Schneider_512": [[223, 255], ["numpy.linspace"], "function", ["None"], ["\n", "### Inactivation kinetics Sakakibara 1992 (voltage shifted)", "\n", "sakakibara_tauh_desc", "=", "\"\"\"Inactivation time constants from Sakakibara 1992.\nVoltage shifted and temperature adjusted as in Courtemanche 1998.\"\"\"", "\n", "\n", "vsteps_th", ",", "th", ",", "sd_th", "=", "data", ".", "TauH_Inactivation_Sakakibara", "(", ")", "\n", "vsteps_th", "=", "[", "v_", "+", "20", "for", "v_", "in", "vsteps_th", "]", "\n", "th", "=", "[", "temperature_adjust", "(", "th_", ",", "290", ",", "310", ",", "Q10", ")", "for", "th_", "in", "th", "]", "\n", "max_th", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "th", ")", ")", "# normalising", "\n", "th", "=", "[", "th_", "/", "max_th", "for", "th_", "in", "th", "]", "\n", "variances_th", "=", "[", "(", "sd_", "/", "max_th", ")", "**", "2", "for", "sd_", "in", "sd_th", "]", "\n", "sakakibara_tauh_dataset", "=", "np", ".", "asarray", "(", "[", "vsteps_th", ",", "th", ",", "variances_th", "]", ")", "\n", "\n", "sakakibara_tauh_protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "\n", "-", "30", ",", "10", ",", "10", ",", "-", "140", ",", "1000", ",", "100", "\n", ")", "\n", "\n", "def", "sakakibara_tauh_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "simple_exp", "(", "t", ",", "tauh", ")", ":", "\n", "        ", "return", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "\n", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "1100", ",", "adjust", "=", "True", ")", ":", "\n", "        ", "d", "=", "d", ".", "trim", "(", "1000", ",", "1100", ",", "adjust", "=", "True", ")", "\n", "current", "=", "d", "[", "'ina.i_Na'", "]", "\n", "time", "=", "d", "[", "'environment.time'", "]", "\n", "index", "=", "np", ".", "argmax", "(", "np", ".", "abs", "(", "current", ")", ")", "\n", "\n", "# Set time zero to peak current", "\n", "current", "=", "current", "[", "index", ":", "]", "\n", "time", "=", "time", "[", "index", ":", "]", "\n", "t0", "=", "time", "[", "0", "]", "\n", "time", "=", "[", "t", "-", "t0", "for", "t", "in", "time", "]", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.TauM_Activation_Schneider": [[258, 273], ["numpy.array", "numpy.array", "numpy.abs", "np.array.tolist", "np.abs.tolist"], "function", ["None"], ["index", "=", "np", ".", "argwhere", "(", "np", ".", "isclose", "(", "current", ",", "0.0", ")", ")", "\n", "if", "len", "(", "index", ")", "!=", "0", ":", "\n", "            ", "current", "=", "current", "[", ":", "index", "[", "0", "]", "[", "0", "]", "]", "\n", "time", "=", "time", "[", ":", "index", "[", "0", "]", "[", "0", "]", "]", "\n", "\n", "", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "                ", "imax", "=", "max", "(", "current", ",", "key", "=", "abs", ")", "\n", "current", "=", "[", "c_", "/", "imax", "for", "c_", "in", "current", "]", "\n", "if", "len", "(", "time", ")", "<=", "1", "or", "len", "(", "current", ")", "<=", "1", ":", "\n", "                    ", "raise", "Exception", "(", "'Failed simulation'", ")", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "simple_exp", ",", "time", ",", "current", ",", "\n", "p0", "=", "[", "5", "]", ",", "bounds", "=", "(", "[", "0.01", "]", ",", "[", "20.0", "]", ")", ")", "\n", "tauh", "=", "popt", "[", "0", "]", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.TauH_Inactivation_Schneider": [[276, 294], ["numpy.asarray", "numpy.asarray", "numpy.abs", "np.asarray.tolist", "np.abs.tolist"], "function", ["None"], ["                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n", "", "sakakibara_tauh", "=", "Experiment", "(", "\n", "dataset", "=", "sakakibara_tauh_dataset", ",", "\n", "protocol", "=", "sakakibara_tauh_protocol", ",", "\n", "conditions", "=", "crn_conditions", ",", "\n", "sum_stats", "=", "sakakibara_tauh_sum_stats", ",", "\n", "description", "=", "sakakibara_tauh_desc", "\n", ")", "\n", "\n", "\n", "### Recovery kinetics Sakakibara 1992 (voltage shifted)", "\n", "sakakibara_tauh_depol_desc", "=", "\"\"\"Inactivation time constants obtained at low\nvoltage using recovery protocols.\nVoltage and temperature adjusted as in Courtemanche 1998.\"\"\"", "\n", "\n", "vsteps_th_depol", ",", "th_depol", ",", "_", "=", "data", ".", "TauH_Inactivation_Sakakibara_Depol", "(", ")", "\n", "vsteps_th_depol", "=", "[", "v_", "+", "20", "for", "v_", "in", "vsteps_th_depol", "]", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.TauH_Inactivation_Sakakibara": [[295, 309], ["numpy.array", "numpy.array", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["th_depol", "=", "[", "temperature_adjust", "(", "th_", ",", "290", ",", "310", ",", "Q10", ")", "for", "th_", "in", "th_depol", "]", "\n", "max_th_depol", "=", "np", ".", "max", "(", "np", ".", "abs", "(", "th_depol", ")", ")", "\n", "th_depol", "=", "[", "th_", "/", "max_th_depol", "for", "th_", "in", "th_depol", "]", "\n", "variances_th_depol", "=", "[", "0.", "]", "*", "len", "(", "th_depol", ")", "\n", "sakakibara_tauh_depol_dataset", "=", "np", ".", "asarray", "(", "[", "vsteps_th_depol", ",", "th_depol", ",", "variances_th_depol", "]", ")", "\n", "\n", "# Protocol creation a little more complicated as multiple recovery protocols", "\n", "# need to be combined. We therefore create the protocols for each depolarisation", "\n", "# potential separately then combine them with a large time gap.", "\n", "twaits", "=", "[", "0", ",", "2", ",", "5", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", ",", "45", ",", "50", ",", "75", ",", "100", ",", "200", ",", "300", ",", "400", ",", "500", ",", "600", ",", "700", ",", "800", ",", "900", ",", "1000", "]", "\n", "tmp_protocols", "=", "[", "]", "\n", "for", "v", "in", "vsteps_th_depol", ":", "\n", "    ", "tmp_protocols", ".", "append", "(", "\n", "recovery", "(", "twaits", ",", "v", ",", "-", "20", ",", "-", "20", ",", "1000", ",", "1000", ",", "1000", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.TauJ_Inactivation_Sakakibara": [[310, 324], ["numpy.array", "numpy.array", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "sakakibara_tauh_depol_protocol", "=", "tmp_protocols", "[", "0", "]", "\n", "for", "p", "in", "tmp_protocols", "[", "1", ":", "]", ":", "\n", "    ", "for", "e", "in", "p", ".", "events", "(", ")", ":", "\n", "        ", "sakakibara_tauh_depol_protocol", ".", "add_step", "(", "e", ".", "level", "(", ")", ",", "e", ".", "duration", "(", ")", ")", "\n", "\n", "", "", "twaits_split", "=", "[", "t", "+", "3000", "for", "t", "in", "twaits", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "twaits_split", ")", "-", "1", ")", ":", "\n", "    ", "twaits_split", "[", "i", "+", "1", "]", "+=", "twaits_split", "[", "i", "]", "\n", "\n", "", "def", "sakakibara_tauh_depol_sum_stats", "(", "data", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "def", "simple_exp", "(", "t", ",", "tauh", ")", ":", "\n", "           ", "return", "np", ".", "exp", "(", "-", "t", "/", "tauh", ")", "\n", "\n", "", "for", "d", "in", "data", ".", "split_periodic", "(", "sum", "(", "twaits", ")", "+", "len", "(", "twaits", ")", "*", "3000", ",", "adjust", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.Rel_Tf_Sakakibara": [[325, 338], ["numpy.array", "numpy.sqrt", "sd.tolist"], "function", ["None"], ["        ", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "simplefilter", "(", "'error'", ",", "so", ".", "OptimizeWarning", ")", "\n", "warnings", ".", "simplefilter", "(", "'error'", ",", "RuntimeWarning", ")", "\n", "try", ":", "\n", "# Get recovery curve", "\n", "                ", "rec", "=", "[", "]", "\n", "trim1", ",", "trim2", ",", "trim3", "=", "1000", ",", "2000", ",", "3000", "\n", "for", "i", ",", "t", "in", "enumerate", "(", "twaits_split", ")", ":", "\n", "                    ", "trace", ",", "data", "=", "d", ".", "split", "(", "t", ")", "\n", "peak1", "=", "max", "(", "trace", ".", "trim", "(", "trim1", ",", "trim2", ")", "[", "'ina.i_Na'", "]", ",", "key", "=", "abs", ")", "\n", "peak2", "=", "max", "(", "trace", ".", "trim", "(", "trim2", "+", "twaits", "[", "i", "]", ",", "trim3", "+", "twaits", "[", "i", "]", ")", "[", "'ina.i_Na'", "]", ",", "\n", "key", "=", "abs", ")", "\n", "rec", ".", "append", "(", "peak2", "/", "peak1", ")", "\n", "# Update trim times for next iteration (not adjusting time)", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.TauH_Inactivation_Sakakibara_Depol": [[339, 353], ["None"], "function", ["None"], ["trim1", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "trim2", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "trim3", "+=", "twaits", "[", "i", "]", "+", "3000", "\n", "\n", "# Fit double exponential to recovery curve", "\n", "", "popt", ",", "_", "=", "so", ".", "curve_fit", "(", "simple_exp", ",", "twaits", ",", "1.", "-", "np", ".", "asarray", "(", "rec", ")", ",", "\n", "p0", "=", "[", "1", "]", ",", "\n", "bounds", "=", "(", "[", "0", "]", ",", "[", "100", "]", ")", ")", "\n", "tauh", "=", "popt", "[", "0", "]", "\n", "output", "=", "output", "+", "[", "tauh", "/", "max_th_depol", "]", "\n", "", "except", ":", "\n", "                ", "output", "=", "output", "+", "[", "float", "(", "'inf'", ")", "]", "\n", "", "", "", "return", "output", "\n", "\n", "", "sakakibara_tauh_depol", "=", "Experiment", "(", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ina.crn_ina.TauJ_Inactivation_Sakakibara_Depol": [[354, 368], ["None"], "function", ["None"], ["dataset", "=", "sakakibara_tauh_depol_dataset", ",", "\n", "protocol", "=", "sakakibara_tauh_depol_protocol", ",", "\n", "conditions", "=", "crn_conditions", ",", "\n", "sum_stats", "=", "sakakibara_tauh_depol_sum_stats", ",", "\n", "description", "=", "sakakibara_tauh_depol_sum_stats", "\n", ")", "\n", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikss.data_ikss.SS_Yang": [[7, 40], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "SS_Yang", "(", ")", ":", "\n", "    ", "\"\"\"Data points for steady-state outward rapidly-inactivating\n    4-AP sensitive current in HL-1 cells.\n\n    Figure 8C from 9 cells as mean \\pm SEM in Yang 2005.\n    \"\"\"", "\n", "x", "=", "[", "-", "60", ",", "-", "40", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.1769911504424755", ",", "\n", "1.327433628318584", ",", "\n", "2.8318584070796433", ",", "\n", "4.86725663716814", ",", "\n", "6.814159292035395", ",", "\n", "8.141592920353983", ",", "\n", "9.292035398230084", ",", "\n", "10.265486725663717", ",", "\n", "11.150442477876103", ",", "\n", "12.920353982300883", ",", "\n", "15.221238938053094", "]", ")", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "-", "0.3539823008849545", ",", "\n", "0.7964601769911468", ",", "\n", "2.389380530973451", ",", "\n", "4.424778761061948", ",", "\n", "6.194690265486724", ",", "\n", "6.902654867256636", ",", "\n", "7.610619469026549", ",", "\n", "8.23008849557522", ",", "\n", "9.02654867256637", ",", "\n", "10.442477876106192", ",", "\n", "12.212389380530972", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "9", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikss.data_ikss.IV_Lu": [[42, 78], ["numpy.arange", "numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.arange.tolist", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "IV_Lu", "(", ")", ":", "\n", "    ", "\"\"\"IV curve for i_ss in HL-1 cells in Lu 2016.\n\n    Extracted from Figure 3A as 'IKsus'.\n\n    Recorded at 35C.\n\n    Values are mean \\pm SEM for n=14 cells.\n    \"\"\"", "\n", "x", "=", "np", ".", "arange", "(", "-", "40", ",", "70", ",", "10", ")", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.02191780821917888", ",", "\n", "0.5260273972602754", ",", "\n", "1.1835616438356205", ",", "\n", "2.147945205479454", ",", "\n", "3.090410958904112", ",", "\n", "4.558904109589042", ",", "\n", "6.0493150684931525", ",", "\n", "7.517808219178084", ",", "\n", "9.139726027397261", ",", "\n", "11.112328767123289", ",", "\n", "12.909589041095892", "]", ")", "\n", "N", "=", "14", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.04383561643836131", ",", "\n", "0.6356164383561662", ",", "\n", "1.3150684931506902", ",", "\n", "2.41095890410959", ",", "\n", "3.397260273972604", ",", "\n", "5.15068493150685", ",", "\n", "6.838356164383564", ",", "\n", "8.613698630136987", ",", "\n", "10.564383561643838", ",", "\n", "12.778082191780824", ",", "\n", "14.75068493150685", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ".", "tolist", "(", ")", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ikss.data_ikss.ActTau_Xu": [[82, 115], ["numpy.arange", "numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.arange.tolist", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "ActTau_Xu", "(", ")", ":", "\n", "    ", "\"\"\"Activation time constants from Xu 1999 in mouse\n    ventricular cells.\n\n    Using for HL-1 as i_to in mouse atrial cells (which HL-1 are derived\n    from) is similar to i_to_f in ventricular cells [Xu 1999], and no\n    existing data for HL-1.\n\n    Errors are sem for n=4 cells (see table iii and p669 Xu 1999).\n\n    Recorded at room temperature.\n\n    Figure 8B for 4 cells as mean \\pm SEM in Xu 1999.\n    \"\"\"", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "70", ",", "10", ")", "\n", "y", "=", "np", ".", "asarray", "(", "[", "52.28865080530902", ",", "\n", "29.094803280941257", ",", "\n", "22.135454920227254", ",", "\n", "16.598511161549872", ",", "\n", "15.329255059539328", ",", "\n", "14.06009372764018", ",", "\n", "10.949928211640618", "]", ")", "\n", "N", "=", "4", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "48.27191440363538", ",", "\n", "28.341759975738853", ",", "\n", "20.126991949279038", ",", "\n", "15.510645052763266", ",", "\n", "13.404568867070708", ",", "\n", "11.884266739955557", ",", "\n", "8.439373190483188", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ".", "tolist", "(", ")", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.icat.data_icat.IV_Deng": [[8, 44], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "IV_Deng", "(", ")", ":", "\n", "    ", "\"\"\"Data points in IV curve for i_CaT.\n\n    Data from figure 1B in Deng 2009. Reported as mean \\pm SEM for 19 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.0951474785918176", ",", "\n", "-", "0.2616555661274975", ",", "\n", "-", "2.283539486203615", ",", "\n", "-", "5.566127497621313", ",", "\n", "-", "11.298763082778304", ",", "\n", "-", "17.340627973358703", ",", "\n", "-", "20.028544243577542", ",", "\n", "-", "18.57754519505233", ",", "\n", "-", "14.747859181731684", ",", "\n", "-", "9.657469077069456", ",", "\n", "-", "5.256898192197905", ",", "\n", "-", "1.5223596574690768", ",", "\n", "0.0237868696479544", "]", ")", "\n", "N", "=", "19", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.0713606089438632", ",", "\n", "0.0237868696479544", ",", "\n", "-", "1.6175071360608944", ",", "\n", "-", "4.448144624167458", ",", "\n", "-", "9.919124643196954", ",", "\n", "-", "15.651760228353947", ",", "\n", "-", "18.268315889628923", ",", "\n", "-", "17.53092293054234", ",", "\n", "-", "13.986679352997143", ",", "\n", "-", "8.824928639391056", ",", "\n", "-", "4.424357754519505", ",", "\n", "-", "0.8325404376784014", ",", "\n", "0.0951474785918176", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.icat.data_icat.IV_Nguyen": [[46, 103], ["numpy.asarray", "numpy.asarray", "numpy.abs", "np.asarray.tolist", "np.abs.tolist"], "function", ["None"], ["", "def", "IV_Nguyen", "(", ")", ":", "\n", "    ", "\"\"\"Data points for IV curve in i_CaT.\n\n    Extracted from figure 5B in Nguyen 2013. Reported as mean \\pm SD\n    for 9 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "75", ",", "-", "70", ",", "-", "65", ",", "-", "60", ",", "-", "55", ",", "-", "50", ",", "-", "45", ",", "-", "40", ",", "-", "35", ",", "-", "30", ",", "-", "25", ",", "-", "20", ",", "\n", "-", "15", ",", "-", "10", ",", "-", "5", ",", "0", ",", "5", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.23612750885478206", ",", "\n", "0.18890200708382565", ",", "\n", "0.3305785123966949", ",", "\n", "0.2833530106257385", ",", "\n", "-", "0.023612750885478206", ",", "\n", "-", "0.8264462809917354", ",", "\n", "-", "2.762691853600944", ",", "\n", "-", "5.430932703659976", ",", "\n", "-", "8.429752066115704", ",", "\n", "-", "10.861865407319954", ",", "\n", "-", "11.971664698937428", ",", "\n", "-", "12.18417945690673", ",", "\n", "-", "11.66469893742621", ",", "\n", "-", "10.861865407319954", ",", "\n", "-", "9.58677685950413", ",", "\n", "-", "8.193624557260922", ",", "\n", "-", "6.706021251475797", ",", "\n", "-", "5.24203069657615", ",", "\n", "-", "3.8488783943329397", ",", "\n", "-", "2.6210153482880747", ",", "\n", "-", "1.4167650531286888", ",", "\n", "-", "0.6139315230224316", ",", "\n", "-", "0.07083825265643462", "]", ")", "\n", "N", "=", "9", "\n", "sd", "=", "np", ".", "asarray", "(", "[", "0.21251475796930386", ",", "\n", "0.11806375442739103", ",", "\n", "0.14167650531286924", ",", "\n", "0.11806375442739103", ",", "\n", "-", "0.330578512396694", ",", "\n", "-", "1.558441558441558", ",", "\n", "-", "4.037780401416765", ",", "\n", "-", "6.942148760330578", ",", "\n", "-", "9.940968122786305", ",", "\n", "-", "12.373081463990555", ",", "\n", "-", "13.506493506493506", ",", "\n", "-", "13.648170011806375", ",", "\n", "-", "12.987012987012989", ",", "\n", "-", "12.278630460448642", ",", "\n", "-", "10.838252656434474", ",", "\n", "-", "9.279811097992916", ",", "\n", "-", "7.697756788665878", ",", "\n", "-", "6.162927981109799", ",", "\n", "-", "4.580873671782762", ",", "\n", "-", "3.3057851239669427", ",", "\n", "-", "1.9598583234946867", ",", "\n", "-", "1.109799291617473", ",", "\n", "-", "0.6139315230224316", "]", ")", "\n", "sd", "=", "np", ".", "abs", "(", "y", "-", "sd", ")", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.icat.data_icat.Act_Deng": [[107, 135], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Act_Deng", "(", ")", ":", "\n", "    ", "\"\"\"Data points for normalised activation curve.\n\n    Extracted from figure 3B in Deng 2009. Reported as mean \\pm SEM for\n    19 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.0016477857878474111", ",", "\n", "0.026364572605561243", ",", "\n", "0.0016477857878474111", ",", "\n", "0.055200823892893824", ",", "\n", "0.2949536560247167", ",", "\n", "0.49845520082389283", ",", "\n", "0.8486096807415036", ",", "\n", "1.0018537590113286", "]", ")", "\n", "N", "=", "19", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "8.238928939237056E-4", ",", "\n", "0.017301750772399593", ",", "\n", "0.026364572605561243", ",", "\n", "0.06343975283213177", ",", "\n", "0.3559217301750772", ",", "\n", "0.5462409886714726", ",", "\n", "0.8634397528321318", ",", "\n", "1.0018537590113286", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.icat.data_icat.Act_Nguyen": [[137, 182], ["numpy.asarray", "numpy.asarray", "numpy.abs", "np.asarray.tolist", "np.abs.tolist"], "function", ["None"], ["", "def", "Act_Nguyen", "(", ")", ":", "\n", "    ", "\"\"\"Data points for normalised activation curve for i_CaT.\n\n    Data extracted from figure 5C in Nguyen 2013. Reported as mean \\pm SD\n    for 9 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "75", ",", "-", "70", ",", "-", "65", ",", "-", "60", ",", "-", "55", ",", "-", "50", ",", "-", "45", ",", "-", "40", ",", "-", "35", ",", "-", "30", ",", "-", "25", ",", "-", "20", ",", "\n", "-", "15", ",", "-", "10", ",", "-", "5", ",", "0", ",", "5", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.00592592592592589", ",", "\n", "0.00592592592592589", ",", "\n", "0.0", ",", "\n", "0.004444444444444473", ",", "\n", "0.014814814814814836", ",", "\n", "0.04888888888888876", ",", "\n", "0.13629629629629625", ",", "\n", "0.2785185185185185", ",", "\n", "0.4637037037037036", ",", "\n", "0.6444444444444444", ",", "\n", "0.7733333333333332", ",", "\n", "0.8666666666666666", ",", "\n", "0.9274074074074073", ",", "\n", "0.9777777777777776", ",", "\n", "0.994074074074074", ",", "\n", "1.0044444444444443", ",", "\n", "1.0029629629629628", "]", ")", "\n", "N", "=", "9", "\n", "sd", "=", "np", ".", "asarray", "(", "[", "0.0251851851851852", ",", "\n", "0.02370370370370356", ",", "\n", "0.020740740740740726", ",", "\n", "0.01185185185185178", ",", "\n", "0.020740740740740726", ",", "\n", "0.07703703703703701", ",", "\n", "0.18074074074074065", ",", "\n", "0.33333333333333326", ",", "\n", "0.514074074074074", ",", "\n", "0.6859259259259258", ",", "\n", "0.8029629629629629", ",", "\n", "0.8888888888888888", ",", "\n", "0.9422222222222221", ",", "\n", "0.9925925925925925", ",", "\n", "1.0014814814814814", ",", "\n", "1.0103703703703704", ",", "\n", "1.0162962962962963", "]", ")", "\n", "sd", "=", "np", ".", "abs", "(", "y", "-", "sd", ")", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.icat.data_icat.Inact_Deng": [[186, 216], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Inact_Deng", "(", ")", ":", "\n", "    ", "\"\"\"Data points for inactivation curve of i_CaT.\n\n    Extracted from figure 3B in Deng 2009. Reported as mean \\pm SEM\n    for 19 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.000205973223481", ",", "\n", "0.9868863714383797", ",", "\n", "0.9883968417439065", ",", "\n", "0.9767250257466529", ",", "\n", "0.910676278750429", ",", "\n", "0.5315482320631649", ",", "\n", "0.1730175077239956", ",", "\n", "6.875652927706977E-4", ",", "\n", "5.492619292823964E-4", "]", ")", "\n", "N", "=", "19", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.9820803295571575", ",", "\n", "0.9720562993477514", ",", "\n", "0.9768623412289735", ",", "\n", "0.9602471678681771", ",", "\n", "0.8694816340542395", ",", "\n", "0.4639890147614142", ",", "\n", "0.23233779608650862", ",", "\n", "0.01139817291377998", ",", "\n", "0.013731548232063018", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.icat.data_icat.Inact_Nguyen": [[218, 252], ["numpy.asarray", "numpy.asarray", "numpy.abs", "np.asarray.tolist", "np.abs.tolist"], "function", ["None"], ["", "def", "Inact_Nguyen", "(", ")", ":", "\n", "    ", "\"\"\"Data points for inactivation curve for i_CaT.\n\n    Extracted from figure 5E in Nguyen 2013. Data reported as mean \\pm SEM\n    for 7 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "75", ",", "-", "70", ",", "-", "65", ",", "-", "60", ",", "-", "55", ",", "-", "50", ",", "-", "45", ",", "-", "40", ",", "-", "35", ",", "-", "30", ",", "-", "25", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.9985915492957746", ",", "\n", "0.9900227169468424", ",", "\n", "0.9800454338936847", ",", "\n", "0.9658427987278511", ",", "\n", "0.9178388611237317", ",", "\n", "0.7853263668029684", ",", "\n", "0.5359139784946236", ",", "\n", "0.273824019385128", ",", "\n", "0.10610177192185377", ",", "\n", "0.04119491140390741", ",", "\n", "0.02276843858852029", ",", "\n", "0.02546721187339096", "]", ")", "\n", "N", "=", "7", "\n", "sd", "=", "np", ".", "asarray", "(", "[", "0.9943646827199758", ",", "\n", "0.9942465545963957", ",", "\n", "0.9856792367105861", ",", "\n", "0.9714766015447525", ",", "\n", "0.9347402695744359", ",", "\n", "0.8205376344086022", ",", "\n", "0.6091519006512192", ",", "\n", "0.3315704982583674", ",", "\n", "0.13849462365591403", ",", "\n", "0.05387096774193556", ",", "\n", "0.029810692109647263", ",", "\n", "0.012791155535362808", "]", ")", "\n", "sd", "=", "np", ".", "abs", "(", "y", "-", "sd", ")", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.icat.data_icat.Rec_Deng": [[256, 289], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Rec_Deng", "(", ")", ":", "\n", "    ", "\"\"\"Data points for recovery curve of i_CaT.\n\n    Extracted from figure 4B in Deng 2009. Data reported as mean \\pm SEM\n    for 19 cells.\n    \"\"\"", "\n", "x", "=", "[", "0", ",", "32", ",", "64", ",", "96", ",", "128", ",", "160", ",", "192", ",", "224", ",", "256", ",", "288", ",", "320", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.0", ",", "\n", "0.24120603015075381", ",", "\n", "0.44472361809045224", ",", "\n", "0.5787269681742044", ",", "\n", "0.6582914572864322", ",", "\n", "0.7738693467336684", ",", "\n", "0.8165829145728644", ",", "\n", "0.8961474036850922", ",", "\n", "0.9338358458961474", ",", "\n", "0.9706867671691792", ",", "\n", "0.9807370184254607", "]", ")", "\n", "N", "=", "19", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.0", ",", "\n", "0.24036850921273034", ",", "\n", "0.4061976549413736", ",", "\n", "0.5326633165829147", ",", "\n", "0.6072026800670017", ",", "\n", "0.7286432160804021", ",", "\n", "0.7654941373534339", ",", "\n", "0.8634840871021776", ",", "\n", "0.9053601340033501", ",", "\n", "0.9405360134003351", ",", "\n", "0.9514237855946399", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.icat.data_icat.CurrTrace_Deng": [[292, 316], ["None"], "function", ["None"], ["", "def", "CurrTrace_Deng", "(", ")", ":", "\n", "    ", "\"\"\"Data points for current trace of i_CaT in HL-1.\n\n    Trace from stimulation from HL=-80mV to -20mV (Fig 1A).\n    \"\"\"", "\n", "x", "=", "[", "-", "87.28295506275606", ",", "-", "86.08473694478766", ",", "-", "84.28497106067503", ",", "\n", "-", "82.43968264290822", ",", "-", "80.90004552253365", ",", "-", "78.81413799830915", ",", "\n", "-", "76.43883722442608", ",", "-", "73.34330493594328", ",", "-", "66.75554399427716", ",", "\n", "-", "57.87539832216948", ",", "-", "46.280158678545874", ",", "-", "32.618521167978145", ",", "\n", "-", "15.90524809780841", ",", "-", "2.809390648370936", ",", "8.875268257787624", ",", "\n", "26.204721337061855", ",", "43.745529036873265", ",", "58.060740066332826", ",", "\n", "70.15347597060544", "]", "\n", "x0", "=", "x", "[", "0", "]", "\n", "x", "=", "[", "xi", "-", "x0", "for", "xi", "in", "x", "]", "\n", "y", "=", "[", "798.1053669530921", ",", "542.7348922383435", ",", "291.78405409212587", ",", "\n", "-", "20.302155233131316", ",", "-", "192.6679814058316", ",", "-", "286.378363149739", ",", "\n", "-", "227.21510071841112", ",", "-", "52.26088181433988", ",", "306.4163966755882", ",", "\n", "564.8506831948164", ",", "696.8763206085365", ",", "761.3924496407947", ",", "\n", "789.0547964502044", ",", "801.1163544161152", ",", "813.054655585294", ",", "\n", "825.4859839414003", ",", "824.834483730103", ",", "823.9012536977041", ",", "\n", "829.3245527539092", "]", "\n", "y0", "=", "y", "[", "0", "]", "\n", "y", "=", "[", "yi", "-", "y0", "for", "yi", "in", "y", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.iha.data_iha.IV_Sartiani": [[7, 28], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "IV_Sartiani", "(", ")", ":", "\n", "    ", "\"\"\"Data points for IV curve in i_ha.\n\n    Extracted from Figure 5B in Sartiani 2002. Reported as mean \\pm SEM\n    for n=10 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "70", ",", "-", "65", ",", "-", "60", ",", "-", "55", ",", "-", "50", ",", "-", "45", ",", "-", "40", ",", "-", "35", ",", "-", "30", ",", "-", "25", ",", "-", "20", ",", "-", "15", ",", "-", "10", ",", "-", "5", ",", "0", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "4.660895835388045", ",", "-", "3.506892918135243", ",", "-", "3.515538783370623", ",", "\n", "-", "2.6199234869995394", ",", "-", "3.1083774987412234", ",", "-", "2.0189901737374587", ",", "\n", "-", "1.9722559915285487", ",", "-", "1.3257927712344353", ",", "-", "1.1683566315592788", ",", "\n", "-", "0.5956781055505678", ",", "-", "0.17987095568578937", ",", "0.5127533779399611", ",", "\n", "0.8824077198191498", ",", "1.685767232295337", ",", "2.1661650583710097", "]", ")", "\n", "N", "=", "10", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "-", "3.719709105254692", ",", "-", "2.833329353688354", ",", "-", "2.9895861342247763", ",", "\n", "-", "2.1308797956884895", ",", "-", "2.739287920393261", ",", "-", "1.6499005953894965", ",", "\n", "-", "1.6493192211661771", ",", "-", "1.0766490005035134", ",", "-", "0.9930473871900434", ",", "\n", "-", "0.37423266388783816", ",", "-", "0.00457001666260215", ",", "0.6880626223091966", ",", "\n", "1.0300518565043824", ",", "1.9164565241088614", ",", "2.3322553686275924", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.iha.data_iha.Act_Sartiani": [[32, 49], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Act_Sartiani", "(", ")", ":", "\n", "    ", "\"\"\"Data points for voltage dependence of activation.\n\n    Extracted from Figure 4B in Sartiani 2002. Reported as mean \\pm SEM\n    for n=50 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "130", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.003313293419899", ",", "0.9713908656681027", ",", "0.9208147831539932", ",", "\n", "0.8702231013299973", ",", "0.6573081206887407", ",", "0.44441809894330286", ",", "\n", "0.17555151360103838", ",", "0.052207770328240866", "]", ")", "\n", "N", "=", "50", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "1.042498759854864", ",", "1.0031136222533514", ",", "0.9488030649524064", ",", "\n", "0.9000739407288622", ",", "0.7002249420485638", ",", "0.479865970729455", ",", "\n", "0.2203277726993358", ",", "0.08019605212665404", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.iha.data_iha.ActTau_Sartiani": [[53, 70], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "ActTau_Sartiani", "(", ")", ":", "\n", "    ", "\"\"\"Data points for activation time constants.\n\n    Extracted from Figure 4C in Sartiani 2002. Reported as mean \\pm SEM\n    for n=50 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "130", ",", "-", "120", ",", "-", "110", ",", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.18389157250486043", ",", "0.31053363604087103", ",", "0.39540466504021055", ",", "\n", "0.7026549883227418", ",", "1.2181350913822797", ",", "2.205865012849869", ",", "\n", "3.59634796600729", ",", "7.125726774959528", "]", ")", "\n", "N", "=", "50", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.22555837489047548", ",", "0.3382854462601834", ",", "0.4510125176298896", ",", "\n", "0.8137664613510438", ",", "1.4264691033103478", ",", "2.4975326295491627", ",", "\n", "4.054682792249037", ",", "7.792395613129342", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ical.data_ical.IV_Dias": [[6, 47], ["numpy.arange", "numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "IV_Dias", "(", ")", ":", "\n", "    ", "\"\"\"IV curve for i_CaL in HL1-6.\n\n    Data extracted from figure 7 in Dias 2014. Reported as mean \\pm SEM\n    for 7 cells.\n    \"\"\"", "\n", "x", "=", "np", ".", "arange", "(", "-", "100", ",", "50", ",", "10", ")", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "0.01605136436596588", ",", "\n", "0.032102728731949526", ",", "\n", "-", "0.01605136436596588", ",", "\n", "-", "0.01605136436596588", ",", "\n", "0.032102728731949526", ",", "\n", "-", "0.01605136436596588", ",", "\n", "0.08025682182986138", ",", "\n", "-", "4.638844301765644", ",", "\n", "-", "14.028892455858745", ",", "\n", "-", "17.207062600321024", ",", "\n", "-", "13.113964686998393", ",", "\n", "-", "10.369181380417334", ",", "\n", "-", "9.357945425361152", ",", "\n", "-", "3.5794542536115515", ",", "\n", "7.399678972712688", "]", ")", "\n", "N", "=", "7", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "-", "0.01605136436596588", ",", "\n", "0.032102728731949526", ",", "\n", "-", "0.01605136436596588", ",", "\n", "-", "0.01605136436596588", ",", "\n", "0.032102728731949526", ",", "\n", "-", "0.01605136436596588", ",", "\n", "0.08025682182986138", ",", "\n", "-", "6.17977528089887", ",", "\n", "-", "20.14446227929374", ",", "\n", "-", "24.430176565008026", ",", "\n", "-", "19.807383627608345", ",", "\n", "-", "16.195826645264845", ",", "\n", "-", "13.788121990369177", ",", "\n", "-", "7.383627608346707", ",", "\n", "5.2808988764045015", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ical.data_ical.TauInact_Dias": [[49, 58], ["None"], "function", ["None"], ["", "def", "TauInact_Dias", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation time constants.\n\n    Generated by fitting single exponential function to current traces\n    in Dias 2014 Fig 7. Voltage step values inferred from peak of trace.\n    \"\"\"", "\n", "x", "=", "[", "-", "20", ",", "-", "10", ",", "0", "]", "\n", "y", "=", "[", "2.1395", ",", "2.7976", ",", "4.5435", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ical.data_ical.IV_Rao": [[60, 80], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "IV_Rao", "(", ")", ":", "\n", "    ", "\"\"\"IV curve for i_CaL in HL-1.\n\n    Data from figure 3B in Rao 2009. Reported as mean \\pm SEM for\n    n = 8 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "#x = [v + 0.0001 for v in x] # avoid nan errors", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "0.12103620322693764", ",", "-", "0.17723158329658872", ",", "-", "2.697690729237914", ",", "\n", "-", "10.923204855336389", ",", "-", "18.501404450493553", ",", "-", "21.583348668289275", ",", "\n", "-", "19.82415724290223", ",", "-", "15.557318593257945", ",", "-", "8.481023426025908", ",", "\n", "-", "3.911906754209012", ",", "-", "0.46685392673247605", "]", ")", "\n", "N", "=", "8", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "-", "0.3373285233652652", ",", "-", "0.6093474947311428", ",", "-", "3.604837281650479", ",", "\n", "-", "13.387312378260704", ",", "-", "22.218788735230703", ",", "-", "25.300732953026426", ",", "\n", "-", "23.066354643713993", ",", "-", "17.97819890074406", ",", "-", "10.729307357653996", ",", "\n", "-", "5.554853426755042", ",", "-", "0.8558988656762025", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ical.data_ical.Act_Rao": [[84, 102], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Act_Rao", "(", ")", ":", "\n", "    ", "\"\"\"Activation data for i_CaL in HL-1 cells.\n\n    Data extracted from figure 3C in Rao 2009. Reported as mean \\pm SEM\n    for n = 8 control cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", "]", "\n", "#x = [v + 0.001 for v in x] # avoid nan errors", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.0024607480881480015", ",", "0.005599519078786974", ",", "0.0067007664681828505", ",", "\n", "0.07807109825890612", ",", "0.4131862930544542", ",", "0.7931071414381685", ",", "\n", "1.0019494238100912", "]", ")", "\n", "N", "=", "8", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.01569990101729335", ",", "0.02189279810119027", ",", "0.028089150078857816", ",", "\n", "0.13306091495951722", ",", "0.4915951071794419", ",", "0.8440210472128508", ",", "\n", "1.0192610327713947", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ical.data_ical.Inact_Rao": [[106, 126], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Inact_Rao", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation dynamics of HL-1 cells i_CaL channel.\n\n    Data from figure 3C in Rao 2009. Reported as mean \\pm SEM\n    for n = 8 cells.\n    \"\"\"", "\n", "x", "=", "[", "-", "100", ",", "-", "90", ",", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", "]", "\n", "#x = [v + 0.0001 for v in x]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.0020366598778003", ",", "1.0021213047751814", ",", "0.9950785038237036", ",", "\n", "0.9809048021295965", ",", "0.8547173983267949", ",", "0.7733356481121596", ",", "\n", "0.705194778273555", ",", "0.5840955692714837", ",", "0.3173777701770113", ",", "\n", "0.018073413037732466", ",", "0.03852292926623213", ",", "0.019261896494837227", "]", ")", "\n", "N", "=", "8", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "1.0173098815144181", ",", "1.0153604577043267", ",", "1.0134075790004646", ",", "\n", "1.0104372340811452", ",", "0.963677838065674", ",", "0.849707802359347", ",", "\n", "0.8049928397326602", ",", "0.6563995861037263", ",", "0.360145036440492", ",", "\n", "0.10055641064176357", ",", "0.09657032695387158", ",", "0.03555517551724052", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ical.data_ical.TauInact_Rao": [[127, 140], ["None"], "function", ["None"], ["", "def", "TauInact_Rao", "(", ")", ":", "\n", "    ", "\"\"\"Inactivation time constants.\n\n    Generated by fitting single exponential function to current traces\n    in Rao 2009 Fig 3A (control).\n    Voltage step values inferred from peak of trace.\n    SD calculated from RMSE of returned fit.\n    See Matlab script file for details of fitting.\n    \"\"\"", "\n", "x", "=", "[", "0", ",", "10", ",", "20", "]", "\n", "y", "=", "[", "74.8693", ",", "51.9045", ",", "48.9801", "]", "\n", "sd", "=", "[", "116.7191", ",", "86.4887", ",", "95.5844", "]", "\n", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ical.data_ical.Rec_Rao": [[144, 169], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Rec_Rao", "(", ")", ":", "\n", "    ", "\"\"\"Relative recovery of HL-1 i_CaL current.\n\n    Data from figure 3D in Rao 2009. Reported as mean \\pm SEM for\n    n = 8 cells.\n    \"\"\"", "\n", "x", "=", "[", "0.7789678675754743", ",", "15.189873417721529", ",", "32.32716650438171", ",", "\n", "64.26484907497567", ",", "96.59201557935737", ",", "128.1402142161636", ",", "\n", "160.07789678675755", ",", "191.6260954235638", ",", "223.56377799415776", ",", "\n", "254.72249269717628", ",", "288.6075949367089", ",", "320.9347614410906", ",", "\n", "352.87244401168454", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.004744958481613271", ",", "0.1779359430604981", ",", "0.29893238434163694", ",", "\n", "0.4151838671411624", ",", "0.5527876631079478", ",", "0.6417556346381968", ",", "\n", "0.7413997627520759", ",", "0.7841043890865955", ",", "0.8825622775800712", ",", "\n", "0.8979833926453142", ",", "0.9525504151838671", ",", "0.9383155397390273", ",", "\n", "0.9406880189798339", "]", ")", "\n", "N", "=", "8", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "0.023724792408066353", ",", "0.20996441281138778", ",", "0.3428232502965598", ",", "\n", "0.44365361803084213", ",", "0.6346381969157769", ",", "0.6998813760379596", ",", "\n", "0.8208778173190985", ",", "0.8481613285883749", ",", "0.9727164887307236", ",", "\n", "0.9442467378410438", ",", "1.0154211150652432", ",", "0.9857651245551601", ",", "\n", "0.99644128113879", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.human-atrial.custom_protocols.recovery_tpreList": [[5, 54], ["myokit.Protocol", "range", "ValueError", "ValueError", "ValueError", "len", "len", "len", "ValueError", "ValueError", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule"], "function", ["None"], ["def", "recovery_tpreList", "(", "twait", ":", "List", "[", "float", "]", ",", "\n", "vhold", ":", "float", ",", "\n", "vstep1", ":", "float", ",", "\n", "vstep2", ":", "float", ",", "\n", "tpre", ":", "List", "[", "float", "]", ",", "\n", "tstep1", ":", "float", ",", "\n", "tstep2", ":", "float", ",", "\n", "tpost", ":", "float", "=", "0.", ")", "->", "myokit", ".", "Protocol", ":", "\n", "    ", "\"\"\"Standard double-pulse recovery protocol.\"\"\"", "\n", "\n", "# Check time arguments", "\n", "for", "t", "in", "tpre", ":", "\n", "        ", "if", "t", "<", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'Time tpre can not be negative.'", ")", "\n", "", "", "if", "tstep1", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "tstep2", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "tpost", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "", "for", "t", "in", "twait", ":", "\n", "        ", "if", "t", "<", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'Time twait can not be negative.'", ")", "\n", "\n", "", "", "assert", "(", "len", "(", "tpre", ")", "==", "len", "(", "twait", ")", ")", "\n", "\n", "\n", "# Create protocol", "\n", "p", "=", "myokit", ".", "Protocol", "(", ")", "\n", "time", "=", "0", "\n", "for", "i", "in", "range", "(", "len", "(", "twait", ")", ")", ":", "\n", "        ", "twait_i", "=", "twait", "[", "i", "]", "\n", "tpre_i", "=", "tpre", "[", "i", "]", "\n", "if", "tpre_i", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpre_i", ")", "\n", "time", "+=", "tpre_i", "\n", "", "if", "tstep1", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vstep1", ",", "time", ",", "tstep1", ")", "\n", "time", "+=", "tstep1", "\n", "", "if", "twait_i", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "twait_i", ")", "\n", "time", "+=", "twait_i", "\n", "", "if", "tstep2", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vstep2", ",", "time", ",", "tstep2", ")", "\n", "time", "+=", "tstep2", "\n", "", "if", "tpost", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpost", ")", "\n", "time", "+=", "tpost", "\n", "", "", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.human-atrial.custom_protocols.manual_steptrain_linear": [[56, 86], ["myokit.Protocol", "ValueError", "ValueError", "ValueError", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule"], "function", ["None"], ["", "def", "manual_steptrain_linear", "(", "vlist", ":", "List", "[", "float", "]", ",", "\n", "vhold", ":", "float", ",", "\n", "tpre", ":", "float", ",", "\n", "tstep", ":", "float", ",", "\n", "tpost", ":", "float", "=", "0.", "\n", ")", ":", "\n", "\n", "# Check time arguments", "\n", "    ", "if", "tpre", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpre can not be negative.'", ")", "\n", "", "if", "tstep", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "tpost", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "\n", "\n", "# Create protocol", "\n", "", "p", "=", "myokit", ".", "Protocol", "(", ")", "\n", "time", "=", "0", "\n", "for", "vstep", "in", "vlist", ":", "\n", "        ", "if", "tpre", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpre", ")", "\n", "time", "+=", "tpre", "\n", "", "if", "tstep", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vstep", ",", "time", ",", "tstep", ")", "\n", "time", "+=", "tstep", "\n", "", "if", "tpost", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpost", ")", "\n", "time", "+=", "tpost", "\n", "", "", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.human-atrial.custom_protocols.varying_test_duration_double_pulse": [[90, 135], ["myokit.Protocol", "ValueError", "ValueError", "ValueError", "ValueError", "ValueError", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule", "myokit.Protocol.schedule"], "function", ["None"], ["", "def", "varying_test_duration_double_pulse", "(", "\n", "vstep", ":", "float", ",", "\n", "vhold", ":", "float", ",", "\n", "vtest", ":", "float", ",", "\n", "tpre", ":", "float", ",", "\n", "tsteps", ":", "List", "[", "float", "]", ",", "\n", "twait", ":", "float", ",", "\n", "ttest", ":", "float", ",", "\n", "tpost", ":", "float", "=", "0.", ")", "->", "myokit", ".", "Protocol", ":", "\n", "    ", "\"\"\"Varying duration of conditioning pulse with test pulse.\"\"\"", "\n", "\n", "# Check time arguments", "\n", "for", "tstep", "in", "tsteps", ":", "\n", "        ", "if", "tstep", "<", "0", ":", "\n", "            ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "\n", "", "", "if", "tpre", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpre can not be negative.'", ")", "\n", "", "if", "twait", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tstep can not be negative.'", ")", "\n", "", "if", "ttest", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "", "if", "tpost", "<", "0", ":", "\n", "        ", "raise", "ValueError", "(", "'Time tpost can not be negative.'", ")", "\n", "\n", "# Create protocol", "\n", "", "p", "=", "myokit", ".", "Protocol", "(", ")", "\n", "time", "=", "0.", "\n", "for", "tstep", "in", "tsteps", ":", "\n", "        ", "if", "tpre", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpre", ")", "\n", "time", "+=", "tpre", "\n", "", "if", "tstep", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vstep", ",", "time", ",", "tstep", ")", "\n", "time", "+=", "tstep", "\n", "", "if", "twait", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "twait", ")", "\n", "time", "+=", "twait", "\n", "", "if", "ttest", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vtest", ",", "time", ",", "ttest", ")", "\n", "time", "+=", "ttest", "\n", "", "if", "tpost", ">", "0", ":", "\n", "            ", "p", ".", "schedule", "(", "vhold", ",", "time", ",", "tpost", ")", "\n", "time", "+=", "tpost", "\n", "", "", "return", "p", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Wang1993.data_Wang1993.Act_Wang": [[6, 36], ["numpy.arange().tolist", "numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist", "numpy.arange"], "function", ["None"], ["def", "Act_Wang", "(", ")", ":", "\n", "    ", "\"\"\"\n    Steady-State activation curve [Wang1993]\n    cf Fig 2c\n    \"\"\"", "\n", "x", "=", "np", ".", "arange", "(", "-", "30", ",", "60", ",", "10", ")", ".", "tolist", "(", ")", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.006968641114982743", ",", "\n", "0.03310104529616731", ",", "\n", "0.10801393728223019", ",", "\n", "0.2857142857142858", ",", "\n", "0.47560975609756106", ",", "\n", "0.6829268292682928", ",", "\n", "0.8222996515679444", ",", "\n", "0.9216027874564461", ",", "\n", "0.9965156794425089", "]", ")", "\n", "yerr", "=", "np", ".", "asarray", "(", "[", "0.020905923344947785", ",", "\n", "0.04703832752613257", ",", "\n", "0.1254355400696865", ",", "\n", "0.3344947735191639", ",", "\n", "0.5209059233449479", ",", "\n", "0.7212543554006969", ",", "\n", "0.848432055749129", ",", "\n", "0.9390243902439026", ",", "\n", "1.0139372822299653", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "yerr", ")", "\n", "N", "=", "7", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n", "\n", "# Steady State Inactivation", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Wang1993.data_Wang1993.Inact_Wang": [[70, 106], ["numpy.arange().tolist", "numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist", "numpy.arange"], "function", ["None"], ["N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Wang1993.data_Wang1993.Act_Kin_Wang": [[40, 66], ["numpy.arange().tolist", "numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist", "numpy.arange"], "function", ["None"], ["\n", "x", "=", "np", ".", "arange", "(", "-", "90", ",", "40", ",", "10", ")", ".", "tolist", "(", ")", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.0000000000000002", ",", "\n", "0.9773519163763068", ",", "\n", "0.9808362369337981", ",", "\n", "1.0034843205574915", ",", "\n", "0.986062717770035", ",", "\n", "0.8327526132404183", ",", "\n", "0.34843205574912905", ",", "\n", "0.0818815331010454", ",", "\n", "0.03135888501742157", ",", "\n", "0.005226480836237002", ",", "\n", "-", "0.0017421602787455193", ",", "\n", "0", ",", "0", "]", ")", "\n", "yerr", "=", "np", ".", "asarray", "(", "[", "0.9808362369337981", ",", "\n", "0.956445993031359", ",", "\n", "0.9581881533101047", ",", "\n", "0.9843205574912893", ",", "\n", "0.9651567944250873", ",", "\n", "0.7944250871080141", ",", "\n", "0.29790940766550533", ",", "\n", "0.10278745644599319", ",", "\n", "0.010452961672474004", ",", "\n", "-", "0.017421602787456303", ",", "\n", "-", "0.020905923344947563", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Shibata1989.data_Shibata1989.Act_Shibata": [[7, 39], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.arange().tolist", "numpy.sqrt", "np.asarray.tolist", "sd.tolist", "numpy.arange"], "function", ["None"], ["def", "Act_Shibata", "(", ")", ":", "\n", "    ", "\"\"\"\n    Steady-State activation curve [Shibata1989]\n    cf Fig 3a\n    \"\"\"", "\n", "x", "=", "np", ".", "arange", "(", "-", "30", ",", "70", ",", "10", ")", ".", "tolist", "(", ")", "+", "[", "80", ",", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.05186808768647655", ",", "\n", "0.12676019804355798", ",", "\n", "0.28385270591439526", ",", "\n", "0.4992526352308727", ",", "\n", "0.7266071584899667", ",", "\n", "0.8298926453470465", ",", "\n", "0.8973078656494293", ",", "\n", "0.9423021428779867", ",", "\n", "0.9693629080109075", ",", "\n", "0.9949224588787261", ",", "\n", "0.9922442666908765", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.04290295282036993", ",", "\n", "0.05202047876738325", ",", "\n", "0.27488757104828865", ",", "\n", "0.48878952846308743", ",", "\n", "0.7146493221839265", ",", "\n", "0.7491772502812752", ",", "\n", "0.8883394884198992", ",", "\n", "0.9094148506729527", ",", "\n", "0.9588998012431224", ",", "\n", "0.9814698930344308", ",", "\n", "0.9817779175596678", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "ylower", ")", "\n", "N", "=", "3", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Courtemanche1998.data_Courtemanche1998.Act_Kin_Courtemanche": [[6, 22], ["numpy.arange().tolist", "numpy.arange"], "function", ["None"], ["def", "Act_Kin_Courtemanche", "(", ")", ":", "\n", "    ", "\"\"\"\n    Activation kinetics [Courtemanche1998]\n    cf Fig 5d\n    \"\"\"", "\n", "x", "=", "np", ".", "arange", "(", "-", "30", ",", "60", ",", "10", ")", ".", "tolist", "(", ")", "\n", "y", "=", "[", "18.4251968503937", ",", "\n", "16.01049868766404", ",", "\n", "6.8241469816272975", ",", "\n", "4.199475065616795", ",", "\n", "2.939632545931758", ",", "\n", "2.047244094488189", ",", "\n", "1.5748031496063", ",", "\n", "1.2598425196850371", ",", "\n", "0.9973753280839901", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Courtemanche1998.data_Courtemanche1998.Deact_Kin_Courtemanche": [[7, 18], ["None"], "function", ["None"], ["    ", "\"\"\"\n    Activation kinetics [Courtemanche1998]\n    cf Fig 5d\n    \"\"\"", "\n", "x", "=", "np", ".", "arange", "(", "-", "30", ",", "60", ",", "10", ")", ".", "tolist", "(", ")", "\n", "y", "=", "[", "18.4251968503937", ",", "\n", "16.01049868766404", ",", "\n", "6.8241469816272975", ",", "\n", "4.199475065616795", ",", "\n", "2.939632545931758", ",", "\n", "2.047244094488189", ",", "\n", "1.5748031496063", ",", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Courtemanche1998.data_Courtemanche1998.Inact_Kin_Courtemanche": [[22, 36], ["numpy.arange().tolist", "numpy.asarray", "np.asarray.tolist", "numpy.arange"], "function", ["None"], ["\n", "\n", "# Deactivation kinetics", "\n", "\n", "", "def", "Deact_Kin_Courtemanche", "(", ")", ":", "\n", "    ", "\"\"\"\n    Deactivation kinetics [Courtemanche1998]\n    cf Fig 5d\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "50", ",", "-", "40", "]", "\n", "y", "=", "[", "4.829396325459314", ",", "\n", "6.141732283464567", ",", "\n", "8.766404199475065", ",", "\n", "12.388451443569553", "]", "\n", "return", "x", ",", "y", ",", "None", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Courtemanche1998.data_Courtemanche1998.Rec_Courtemanche": [[61, 73], ["numpy.arange().tolist", "numpy.arange"], "function", ["None"], ["", "def", "Rec_Courtemanche", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery kinetics [Courtemanche1998]\n    cd Fig 5d\n    \"\"\"", "\n", "x", "=", "np", ".", "arange", "(", "-", "80", ",", "-", "30", ",", "10", ")", ".", "tolist", "(", ")", "\n", "y", "=", "[", "27.559055118110166", ",", "\n", "40.944881889763735", ",", "\n", "70.86614173228344", ",", "\n", "142.51968503937005", ",", "\n", "257.48031496062987", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Nygren1998.data_Nygren1998.Inact_Kin_Nygren": [[6, 19], ["numpy.arange", "numpy.asarray", "np.arange.tolist", "np.asarray.tolist"], "function", ["None"], ["def", "Inact_Kin_Nygren", "(", ")", ":", "\n", "    ", "\"\"\"\n    Inactivation kinetics from [Nygren1998]\n    cf Fig 4c\n    \"\"\"", "\n", "x", "=", "np", ".", "arange", "(", "0", ",", "50", ",", "10", ")", "\n", "y", "=", "np", ".", "asarray", "(", "[", "12.535043950889689", ",", "\n", "11.239082354992732", ",", "\n", "15.040688796863812", ",", "\n", "14.565827181187226", ",", "\n", "16.203311113674975", "]", ")", "\n", "return", "x", ".", "tolist", "(", ")", ",", "y", ".", "tolist", "(", ")", ",", "None", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Nygren1998.data_Nygren1998.Rec_Nygren": [[23, 31], ["None"], "function", ["None"], ["\n", "x", "=", "[", "-", "100", ",", "-", "80", ",", "-", "60", "]", "\n", "y", "=", "[", "15", ",", "30", ",", "387", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Firek1995.data_Firek1995.Inact_Firek": [[6, 30], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "Inact_Firek", "(", ")", ":", "\n", "    ", "\"\"\"\n    Steady-State inactivation curve [Firek1995]\n    cf Fig 3c\n    \"\"\"", "\n", "x", "=", "[", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "35", ",", "-", "25", ",", "-", "15", ",", "-", "5", ",", "5", ",", "15", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.9608748465711434", ",", "\n", "0.9081016796087487", ",", "\n", "0.7481159254383455", ",", "\n", "0.5451859907529303", ",", "\n", "0.37155858279434495", ",", "\n", "0.293448190334459", ",", "\n", "0.1237161264062987", ",", "\n", "0.04364693237682782", ",", "\n", "0.0025725169964196937", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.9004413663276923", ",", "\n", "0.828172399977105", ",", "\n", "0.5064074434459646", ",", "\n", "0.3502502559797507", ",", "\n", "0.2097666609428961", ",", "\n", "0.13164990873765436", ",", "\n", "0.039888322871552084", ",", "\n", "-", "0.001189272381533879", ",", "\n", "-", "0.0403112459377124", "]", ")", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.protocols_Schneider1994.Protocol_IV_Schneider": [[8, 38], ["myokit.pacing.steptrain_linear"], "function", ["None"], ["def", "Protocol_IV_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the IV peak-current curve in the Schneider Paper figure 1B\n    \n    page 2 of the paper :\n\n    depolarizing the membrane from -135 mV to test\n    potentials varying from -85 to +55 mV in 10-mV.\n\n    simple pulse protocol at the frequency 1Hz (the frequency of the pulses is not given)\n    \"\"\"", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "120", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "70", ",", "\n", "'membrane.T'", ":", "297.15", "}", "\n", "\n", "tperiod", "=", "1000", "# ms (not precised in the paper, 1s seems enough)", "\n", "tstep", "=", "12", "# ms ", "\n", "tpre", "=", "tperiod", "-", "tstep", "# before the first pulse occurs", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "# before the measurement", "\n", "tMeasuring", "=", "tstep", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "Vhold", "=", "-", "135", "# mV", "\n", "Vlower", "=", "-", "85.001", "# modified to not go through V = 0 that makes the nygren model crash ( expression of I_na)", "\n", "Vupper", "=", "55", "\n", "dV", "=", "10", "\n", "\n", "protocol", "=", "myokit", ".", "pacing", ".", "steptrain_linear", "(", "Vlower", ",", "Vupper", "+", "dV", ",", "dV", ",", "Vhold", ",", "tpre", ",", "tstep", ")", "\n", "\n", "return", "protocol", ",", "conditions", ",", "tpreMeasuring", ",", "tMeasuring", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.protocols_Schneider1994.Protocol_TauM_Schneider": [[39, 64], ["data.TauM_Activation_Schneider", "ionchannelABC.protocol.manual_steptrain_linear"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.TauM_Activation_Schneider", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.human-atrial.custom_protocols.manual_steptrain_linear"], ["", "def", "Protocol_TauM_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the activation curve in the Schneider Paper (figure 3C)\n\n    The protocol is not described !\n    By hypothesis, this will be the same as the protocol used in figure 1B (IV curve)\n    \"\"\"", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "120", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "70", ",", "\n", "'membrane.T'", ":", "297.15", "}", "\n", "\n", "tperiod", "=", "1000", "# ms", "\n", "tstep", "=", "12", "# ms (not precised in the paper, 1s seems enough)", "\n", "tpre", "=", "tperiod", "-", "tstep", "# before the first pulse occurs", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "# before the measurement", "\n", "tMeasuring", "=", "tstep", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "\n", "Vlist", ",", "_", ",", "_", "=", "dataSc", ".", "TauM_Activation_Schneider", "(", ")", "\n", "Vhold", "=", "-", "135", "# mV", "\n", "\n", "protocol", "=", "manual_steptrain_linear", "(", "Vlist", ",", "Vhold", ",", "tpre", ",", "tstep", ")", "\n", "\n", "return", "protocol", ",", "conditions", ",", "tpreMeasuring", ",", "tMeasuring", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.protocols_Schneider1994.Protocol_TauF_Schneider": [[66, 94], ["data.TauF_Inactivation_Schneider", "ionchannelABC.protocol.manual_steptrain_linear"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.TauF_Inactivation_Schneider", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.human-atrial.custom_protocols.manual_steptrain_linear"], ["", "def", "Protocol_TauF_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the Inactivation curve in the Schneider Paper (figure 3B)\n    \n    \n    The protocol is not described !\n    By hypothesis, this will be the same as the protocol used in figure 1B (IV curve)\n    \"\"\"", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "120", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "70", ",", "\n", "'membrane.T'", ":", "297.15", "}", "\n", "\n", "\n", "tperiod", "=", "1000", "# ms", "\n", "tstep", "=", "12", "# ms (not precised in the paper, 1s seems enough)", "\n", "tpre", "=", "tperiod", "-", "tstep", "# before the first pulse occurs", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "# before the measurement", "\n", "tMeasuring", "=", "tstep", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "\n", "Vlist", ",", "_", ",", "_", "=", "dataSc", ".", "TauF_Inactivation_Schneider", "(", ")", "\n", "Vhold", "=", "-", "135", "# mV", "\n", "\n", "\n", "protocol", "=", "manual_steptrain_linear", "(", "Vlist", ",", "Vhold", ",", "tpre", ",", "tstep", ")", "\n", "\n", "return", "protocol", ",", "conditions", ",", "tpreMeasuring", ",", "tMeasuring", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.protocols_Schneider1994.Protocol_TauS_Schneider": [[95, 123], ["data.TauS_Inactivation_Schneider", "ionchannelABC.protocol.manual_steptrain_linear"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.TauS_Inactivation_Schneider", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.human-atrial.custom_protocols.manual_steptrain_linear"], ["", "def", "Protocol_TauS_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the Inactivation curve in the Schneider Paper (figure 5B)\n    \n    \n    The protocol is not described !\n    By hypothesis, this will be the same as the protocol used in figure 1B (IV curve)\n    \"\"\"", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "120", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "70", ",", "\n", "'membrane.T'", ":", "297.15", "}", "\n", "\n", "\n", "tperiod", "=", "1000", "# ms", "\n", "tstep", "=", "12", "# ms (not precised in the paper, 1s seems enough)", "\n", "tpre", "=", "tperiod", "-", "tstep", "# before the first pulse occurs", "\n", "tpreMeasuring", "=", "tperiod", "-", "tstep", "# before the measurement", "\n", "tMeasuring", "=", "tstep", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "\n", "Vlist", ",", "_", ",", "_", "=", "dataSc", ".", "TauS_Inactivation_Schneider", "(", ")", "\n", "Vhold", "=", "-", "135", "# mV", "\n", "\n", "\n", "protocol", "=", "manual_steptrain_linear", "(", "Vlist", ",", "Vhold", ",", "tpre", ",", "tstep", ")", "\n", "\n", "return", "protocol", ",", "conditions", ",", "tpreMeasuring", ",", "tMeasuring", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.protocols_Schneider1994.Protocol_Inact_Schneider": [[124, 172], ["ionchannelABC.protocol.availability", "protocol_list.append", "conditions_list.append", "tpreMeasuring_list.append", "tMeasuring_list.append"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.ionchannelABC.protocol.availability"], ["", "def", "Protocol_Inact_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the activation curve in the Schneider Paper (figure 4)\n    \n\n    page 4 of the paper :\n\n    Starting from a conditioning\n    potential of -135 mV, the cells were depolarized\n    with prepulses varying from -135 mV to +5 mV in\n    10-mV steps with a subsequent test pulse to -20 mV.\n    To test for fast and intermediate inactivation, h infinity curves\n    were determined with five different prepulse durations\n    (increasing from 32 ms to 512ms by factors of 2,\n    Fig. 4). \n\n    the double pulse protocol is not more described so the sakakibara one has been applied to complete the lack of information\n    \"\"\"", "\n", "\n", "conditions_list", ",", "protocol_list", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list", ",", "tMeasuring_list", "=", "[", "]", ",", "[", "]", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "120", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "70", ",", "\n", "'membrane.T'", ":", "297.15", "}", "\n", "\n", "for", "tstep", "in", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", "]", ":", "\n", "        ", "tperiod", "=", "3000", "# ms", "\n", "#tstep = 1000 # ms (not precised in the paper, 1s seems enough to mesure the peak current)", "\n", "twait", "=", "2", "\n", "ttest", "=", "30", "\n", "tpre", "=", "tperiod", "-", "tstep", "-", "twait", "-", "ttest", "\n", "tpreMeasuring", "=", "tperiod", "-", "ttest", "\n", "tMeasuring", "=", "ttest", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "Vhold", "=", "-", "135", "# mV", "\n", "Vtest", "=", "-", "20", "\n", "Vlower", "=", "-", "135.001", "\n", "Vupper", "=", "5", "\n", "dV", "=", "10", "\n", "\n", "protocol", "=", "availability", "(", "Vlower", ",", "Vupper", ",", "dV", ",", "Vhold", ",", "Vtest", ",", "tpre", ",", "tstep", ",", "twait", ",", "ttest", ")", "\n", "\n", "protocol_list", ".", "append", "(", "protocol", ")", "\n", "conditions_list", ".", "append", "(", "conditions", ")", "\n", "tpreMeasuring_list", ".", "append", "(", "tpreMeasuring", ")", "\n", "tMeasuring_list", ".", "append", "(", "tMeasuring", ")", "\n", "\n", "", "return", "protocol_list", ",", "conditions_list", ",", "tpreMeasuring_list", ",", "tMeasuring_list", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.protocols_Schneider1994.Protocol_Relative_Peak_Schneider": [[174, 221], ["data.Reduction_Schneider_all", "ionchannelABC.protocol.availability_tstep_list", "protocol_list.append", "conditions_list.append", "tpreMeasuring_list.append", "tMeasuring_list.append", "tpreList.append"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_all"], ["", "def", "Protocol_Relative_Peak_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the Relative_peak IV curve in the Schneider Paper (figure 5A)\n    \n    page 5 of the paper :\n\n    Reduction of the Na + current peak\n    amplitude elicited by pulses to -20 mV following prepotentials\n    varying in time (abscissa) and magnitude. Symbols represent\n    different inactivation potential values: -105 mV to -65 mV\n\n    the double pulse protocol is not more described so the sakakibara one has been applied to complete the lack of information\n    \"\"\"", "\n", "\n", "conditions_list", ",", "protocol_list", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list", ",", "tMeasuring_list", "=", "[", "]", ",", "[", "]", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "120", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "70", ",", "\n", "'membrane.T'", ":", "297.15", "}", "\n", "\n", "for", "Vinact", "in", "[", "-", "105", ",", "-", "95", ",", "-", "85", ",", "-", "75", ",", "-", "65", "]", ":", "\n", "        ", "tstepList", ",", "_", ",", "_", "=", "dataSc", ".", "Reduction_Schneider_all", "(", "Vinact", ")", "\n", "\n", "tperiod", "=", "3000", "# ms seems enough for a double pulse protocol", "\n", "twait", "=", "2", "\n", "ttest", "=", "30", "\n", "\n", "tpreList", "=", "[", "]", "\n", "for", "tstep", "in", "tstepList", ":", "\n", "            ", "tpre", "=", "tperiod", "-", "tstep", "-", "twait", "-", "ttest", "\n", "tpreList", ".", "append", "(", "tpre", ")", "\n", "", "tpreMeasuring", "=", "tperiod", "-", "ttest", "\n", "tMeasuring", "=", "ttest", "# the sum tMeasuring and tpreMeasuring should be equal to tperiod", "\n", "\n", "Vhold", "=", "-", "135", "# mV", "\n", "Vtest", "=", "-", "20", "\n", "\n", "\n", "protocol", "=", "availability_tstep_list", "(", "Vinact", ",", "Vhold", ",", "Vtest", ",", "tpreList", ",", "tstepList", ",", "twait", ",", "ttest", ")", "\n", "\n", "protocol_list", ".", "append", "(", "protocol", ")", "\n", "conditions_list", ".", "append", "(", "conditions", ")", "\n", "tpreMeasuring_list", ".", "append", "(", "tpreMeasuring", ")", "\n", "tMeasuring_list", ".", "append", "(", "tMeasuring", ")", "\n", "\n", "", "return", "protocol_list", ",", "conditions_list", ",", "tpreMeasuring_list", ",", "tMeasuring_list", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.protocols_Schneider1994.Protocol_Recovery_Schneider": [[223, 287], ["data.Recovery_Schneider_all", "ionchannelABC.protocol.recovery_manual", "protocol_list.append", "conditions_list.append", "tMeasuring_list1.append", "tpreMeasuring_list2.append", "tMeasuring_list2.append", "tpreList.append", "tpreMeasuring_list1.append"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_all"], ["", "def", "Protocol_Recovery_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    describes the protocol used to measure the Recovery of I_na in the Schneider Paper (figure 6)\n    \n    the Vhold used here is -75 mV, -85 mV, -95 mV, -105 mV,-115 mV -125 mV -135 mV \n    \n    page 5 of the paper : \n\n    For the study of the time course of recovery from inactivation\n    the cells were depolarized to -20 mV for 200 ms\n    to render all Na + channels inactivated. Hyperpolarizing\n    prepulses from -135 to -75 mV were then applied (recovery\n    potential). For each prepulse potential, the prepulse\n    duration was increased logarithmically from 2 to\n    1024ms. Following each prepulse, a 12-ms step to\n    -20 mV tested the fraction of Na + channels that had\n    recovered from inactivation.\n\n    The protocol is a double pulse protocol at the frequency of 0.1Hz\n    \n    \"\"\"", "\n", "conditions_list", ",", "protocol_list", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list1", ",", "tMeasuring_list1", "=", "[", "]", ",", "[", "]", "\n", "tpreMeasuring_list2", ",", "tMeasuring_list2", "=", "[", "]", ",", "[", "]", "\n", "\n", "conditions", "=", "{", "'cleft_space_ion_concentrations.Na_c'", ":", "120", ",", "\n", "'intracellular_ion_concentrations.Na_i'", ":", "70", ",", "\n", "'membrane.T'", ":", "297.15", "}", "\n", "\n", "for", "Vhold", "in", "[", "-", "135", ",", "-", "125", ",", "-", "115", ",", "-", "105", ",", "-", "95", ",", "-", "85", ",", "-", "75", "]", ":", "\n", "        ", "twaitList", ",", "_", ",", "_", "=", "dataSc", ".", "Recovery_Schneider_all", "(", "Vhold", ")", "\n", "\n", "tperiod", "=", "5000", "# ms", "\n", "tstep1", "=", "200", "\n", "tstep2", "=", "12", "\n", "\n", "tpreList", "=", "[", "]", "\n", "for", "twait", "in", "twaitList", ":", "\n", "            ", "tpre", "=", "tperiod", "-", "tstep1", "-", "twait", "-", "tstep2", "\n", "tpreList", ".", "append", "(", "tpre", ")", "\n", "tpreMeasuring_list1", ".", "append", "(", "tpre", ")", "\n", "\n", "\n", "", "tMeasuring1", "=", "tstep1", "# the sum tMeasuring, tpreMeasuring and tpostMeasuring should be equal to tperiod", "\n", "\n", "\n", "tpreMeasuring2", "=", "tperiod", "-", "tstep2", "\n", "tMeasuring2", "=", "tstep2", "\n", "\n", "Vstep1", "=", "-", "20", "\n", "Vstep2", "=", "-", "20", "\n", "\n", "protocol", "=", "recovery_manual", "(", "twaitList", ",", "Vhold", ",", "Vstep1", ",", "Vstep2", ",", "tpreList", ",", "tstep1", ",", "tstep2", ")", "\n", "\n", "protocol_list", ".", "append", "(", "protocol", ")", "\n", "conditions_list", ".", "append", "(", "conditions", ")", "\n", "\n", "tMeasuring_list1", ".", "append", "(", "tMeasuring1", ")", "\n", "\n", "tpreMeasuring_list2", ".", "append", "(", "tpreMeasuring2", ")", "\n", "tMeasuring_list2", ".", "append", "(", "tMeasuring2", ")", "\n", "\n", "", "return", "protocol_list", ",", "conditions_list", ",", "tpreMeasuring_list1", ",", "tMeasuring_list1", ",", "tpreMeasuring_list2", ",", "tMeasuring_list2", "", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.IV_Schneider": [[5, 19], ["None"], "function", ["None"], ["def", "IV_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data points in IV curve for i_Na (nA) in human atrial cells\n    from fig. 1B in Schenider 1994. No error reported.\n\n    \"\"\"", "\n", "x", "=", "[", "-", "85", ",", "-", "75", ",", "-", "65", ",", "-", "55", ",", "-", "45", ",", "-", "35", ",", "-", "25", ",", "-", "15", ",", "-", "5", ",", "\n", "5", ",", "15", ",", "25", ",", "35", ",", "45", ",", "55", "]", "\n", "y", "=", "[", "-", "0.012040616536735271", ",", "-", "0.05741623375231519", ",", "-", "0.6072115075423579", ",", "\n", "-", "3.3836990774815483", ",", "-", "10.698462945627867", ",", "-", "12.088600358717478", ",", "\n", "-", "10.74769727674839", ",", "-", "8.44011490392517", ",", "-", "6.426723737521705", ",", "\n", "-", "3.2367821184339327", ",", "-", "0.6350085391909559", ",", "2.5547187069020936", ",", "\n", "5.324417798675175", ",", "8.135848166753608", ",", "10.527393295841879", "]", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.TauM_Activation_Schneider": [[21, 40], ["numpy.asarray", "numpy.asarray", "numpy.abs", "np.asarray.tolist", "np.abs.tolist"], "function", ["None"], ["", "def", "TauM_Activation_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for tau_m for i_Na from Schneider 1994 figure 3C\n\n    Errors reported as mean + or - SD for n=23\n\n    digitilized the 01/07/19 by Benjamin Marchand\n    updated for corrected test pulses by Charles Houston 2019-09-20\n    \"\"\"", "\n", "x", "=", "[", "-", "65", ",", "-", "55", ",", "-", "45", ",", "-", "35", ",", "-", "25", ",", "-", "15", ",", "-", "5", ",", "5", ",", "15", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.2802096", ",", "0.39335337", ",", "0.3340908", ",", "0.23605047", ",", "0.1959645", ",", "\n", "0.16590016", ",", "0.1929139", ",", "0.17548873", ",", "0.15936272", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "-", "0.010131356", ",", "0.1502184", ",", "0.09879723", ",", "0.06263277", ",", "0.097489536", ",", "\n", "0.09139314", ",", "0.15936644", ",", "0.06917234", ",", "0.12407236", "]", ")", "\n", "\n", "sd", "=", "np", ".", "abs", "(", "y", "-", "ylower", ")", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.TauF_Inactivation_Schneider": [[42, 66], ["numpy.asarray", "numpy.asarray", "numpy.abs", "np.asarray.tolist", "np.abs.tolist"], "function", ["None"], ["", "def", "TauF_Inactivation_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for tau_f (fast) for i_Na from Schneider 1994 figure 3B\n\n    Errors reported as mean + or - SD for n=23\n\n    digitilized the 01/07/19 by Benjamin Marchand\n    updated for corrected test pulses by Charles Houston 2019-09-20\n    \"\"\"", "\n", "x", "=", "[", "-", "65", ",", "-", "55", ",", "-", "45", ",", "-", "35", ",", "-", "25", ",", "-", "15", ",", "-", "5", ",", "5", ",", "15", ",", "25", ",", "35", ",", "45", ",", "55", ",", "65", ",", "75", ",", "\n", "85", ",", "95", ",", "105", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.6562053", ",", "1.7388325", ",", "1.2643846", ",", "0.8249009", ",", "0.62296253", ",", "0.5015341", ",", "\n", "0.358666", ",", "0.29900438", ",", "0.2890414", ",", "0.27903038", ",", "0.27574855", ",", "\n", "0.273827", ",", "0.28131306", ",", "0.2646089", ",", "0.26001486", ",", "0.24330468", ",", "\n", "0.22935106", ",", "0.2300779", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "1.4159275", ",", "1.4676893", ",", "0.9127194", ",", "0.5873136", ",", "0.47397462", ",", "\n", "0.3847658", ",", "0.24457617", ",", "0.21712212", ",", "0.23132537", ",", "0.22534105", ",", "\n", "0.23548757", ",", "0.23088151", ",", "0.22896595", ",", "0.22434789", ",", "0.22378056", ",", "\n", "0.20303167", ",", "0.18774183", ",", "0.18175751", "]", ")", "\n", "\n", "sd", "=", "np", ".", "abs", "(", "y", "-", "ylower", ")", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.TauS_Inactivation_Schneider": [[68, 87], ["numpy.asarray", "numpy.asarray", "numpy.abs", "np.asarray.tolist", "np.abs.tolist"], "function", ["None"], ["", "def", "TauS_Inactivation_Schneider", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for tau_s (slow) for i_Na from Schneider 1994 figure 5B\n\n    Errors reported as mean + or - SD for n=40\n\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "x", "=", "[", "-", "115", ",", "-", "105", ",", "-", "95", ",", "-", "85", ",", "\n", "-", "75", ",", "-", "65", ",", "-", "55", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "76.365364", ",", "78.771286", ",", "74.83804", ",", "68.60557", ",", "\n", "43.78963", ",", "29.352915", ",", "20.07485", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "47.15486", ",", "55.65152", ",", "44.25995", ",", "42.377945", ",", "\n", "26.698391", ",", "13.380271", ",", "12.305942", "]", ")", "# lower point of the error bar", "\n", "\n", "sd", "=", "np", ".", "abs", "(", "y", "-", "ylower", ")", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_32": [[89, 113], ["None"], "function", ["None"], ["", "def", "Inact_Schneider_32", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data points for inactivation curve of i_Na (h infinity) from fig 4\n    prepulse duration 32 ms\n    n = 7\n\n    no error reported\n\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "-", "135.30276", ",", "-", "129.67128", ",", "-", "123.79758", ",", "-", "118.10554", ",", "-", "112.231834", ",", "-", "106.23702", ",", "\n", "-", "100.302765", ",", "-", "94.67128", ",", "-", "88.61591", ",", "-", "82.86332", ",", "-", "77.05017", ",", "-", "70.99481", ",", "\n", "-", "65.0", ",", "-", "59.307957", ",", "-", "53.373703", ",", "-", "47.5", ",", "-", "41.626297", ",", "-", "35.81315", ",", "\n", "-", "29.939445", ",", "-", "24.247404", ",", "-", "18.252596", ",", "-", "12.5", ",", "-", "6.444637", ",", "-", "0.8131488", ",", "\n", "4.818339", "]", "\n", "\n", "y", "=", "[", "1.0011135", ",", "1.0005568", ",", "1.0", ",", "0.99498886", ",", "0.99832964", ",", "0.9821826", ",", "\n", "0.9599109", ",", "0.94320714", ",", "0.903118", ",", "0.844098", ",", "0.798441", ",", "0.6937639", ",", "\n", "0.6330735", ",", "0.5545657", ",", "0.45935413", ",", "0.37082404", ",", "0.27449888", ",", "0.18875279", ",", "\n", "0.1091314", ",", "0.06013363", ",", "0.033407573", ",", "0.013919822", ",", "0.0061247214", ",", "0.004454343", ",", "\n", "0.0022271716", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_64": [[114, 136], ["None"], "function", ["None"], ["", "def", "Inact_Schneider_64", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data points for inactivation curve of i_Na (h infinity) from fig 4\n    prepulse duration 64 ms\n    n = 6\n\n    no error reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "-", "135.30276", ",", "-", "129.67128", ",", "-", "123.61591", ",", "-", "117.98443", ",", "-", "111.92907", ",", "-", "106.17647", ",", "\n", "-", "100.24222", ",", "-", "94.610725", ",", "-", "88.79758", ",", "-", "82.86332", ",", "-", "76.80796", ",", "-", "70.8737", ",", "-", "64.939445", ",", "\n", "-", "59.247406", ",", "-", "53.31315", ",", "-", "47.439445", ",", "-", "41.68685", ",", "-", "35.81315", ",", "-", "29.939445", ",", "-", "24.247404", ",", "\n", "-", "18.313148", ",", "-", "12.5", ",", "-", "6.565744", ",", "-", "0.8737024", ",", "4.878893", "]", "\n", "\n", "\n", "y", "=", "[", "0.99944323", ",", "0.9955457", ",", "0.9916481", ",", "0.97995543", ",", "0.967706", ",", "0.9482183", ",", "\n", "0.91258353", ",", "0.87861913", ",", "0.8006682", ",", "0.7243875", ",", "0.6252784", ",", "0.52115816", ",", "0.422049", ",", "\n", "0.33017817", ",", "0.23218262", ",", "0.15868597", ",", "0.1013363", ",", "0.059020046", ",", "0.033964366", ",", "0.012806236", ",", "\n", "0.0105790645", ",", "0.014476615", ",", "0.015033407", ",", "0.018374166", ",", "0.016703786", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_128": [[137, 159], ["None"], "function", ["None"], ["", "def", "Inact_Schneider_128", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data points for inactivation curve of i_Na (h infinity) from fig 4\n    prepulse duration 128 ms\n    n = 6\n\n    no error reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "-", "135.36333", ",", "-", "129.73183", ",", "-", "123.918686", ",", "-", "118.22665", ",", "-", "112.231834", ",", "-", "106.17647", ",", "\n", "-", "100.302765", ",", "-", "94.48962", ",", "-", "88.67647", ",", "-", "82.439445", ",", "-", "76.6263", ",", "-", "70.99481", ",", "-", "65.0", ",", "\n", "-", "59.18685", ",", "-", "53.373703", ",", "-", "47.439445", ",", "-", "41.444637", ",", "-", "35.570934", ",", "-", "29.818338", ",", "-", "24.186852", ",", "\n", "-", "18.131489", ",", "-", "12.439446", ",", "-", "6.3840833", ",", "-", "0.6314879", ",", "4.9394464", "]", "\n", "\n", "\n", "y", "=", "[", "1.0", ",", "0.99832964", ",", "0.9888641", ",", "0.97884184", ",", "0.9688196", ",", "0.95768374", ",", "0.8997773", ",", "\n", "0.8402004", ",", "0.766147", ",", "0.6408686", ",", "0.5044543", ",", "0.3674833", ",", "0.25", ",", "0.15534522", ",", "0.08741648", ",", "\n", "0.049554564", ",", "0.008908686", ",", "0.005567929", ",", "0.0061247214", ",", "0.004454343", ",", "0.0033407572", ",", "\n", "0.0022271716", ",", "0.0022271716", ",", "0.0022271716", ",", "5.567929e-4", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_256": [[160, 182], ["None"], "function", ["None"], ["", "def", "Inact_Schneider_256", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data points for inactivation curve of i_Na (h infinity) from fig 4\n    prepulse duration 256 ms\n    n = 6\n\n    no error reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "-", "135.24222", ",", "-", "129.79239", ",", "-", "123.918686", ",", "-", "118.16609", ",", "-", "112.110725", ",", "-", "106.17647", ",", "\n", "-", "100.18166", ",", "-", "94.42907", ",", "-", "88.55537", ",", "-", "82.802765", ",", "-", "76.747406", ",", "-", "70.93426", ",", "-", "64.87889", ",", "\n", "-", "59.126297", ",", "-", "53.31315", ",", "-", "47.31834", ",", "-", "41.50519", ",", "-", "35.752594", ",", "-", "29.757786", ",", "-", "23.884083", ",", "\n", "-", "18.192041", ",", "-", "12.378893", ",", "-", "6.5051904", ",", "-", "0.7525951", ",", "4.9394464", "]", "\n", "\n", "\n", "y", "=", "[", "0.9977728", ",", "0.9933185", ",", "0.98608017", ",", "0.97939867", ",", "0.9292873", ",", "0.89587975", ",", "\n", "0.86302894", ",", "0.78452116", ",", "0.68318486", ",", "0.5573497", ",", "0.4148107", ",", "0.25334075", ",", "0.1492205", ",", "\n", "0.07182628", ",", "0.04844098", ",", "-", "0.0027839644", ",", "0.0016703786", ",", "0.0033407572", ",", "0.0022271716", ",", "\n", "0.0027839644", ",", "0.0022271716", ",", "0.0016703786", ",", "0.0033407572", ",", "0.00389755", ",", "0.00389755", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_512": [[183, 205], ["None"], "function", ["None"], ["", "def", "Inact_Schneider_512", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data points for inactivation curve of i_Na (h infinity) from fig 4\n    prepulse duration 512 ms\n    n = 6\n\n    no error reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "-", "135.42387", ",", "-", "129.73183", ",", "-", "123.97924", ",", "-", "118.10554", ",", "-", "112.05017", ",", "-", "106.17647", ",", "\n", "-", "100.18166", ",", "-", "94.55017", ",", "-", "88.61591", ",", "-", "82.62111", ",", "-", "76.868515", ",", "-", "70.81315", ",", "-", "64.81834", ",", "\n", "-", "59.065742", ",", "-", "53.252594", ",", "-", "47.37889", ",", "-", "41.565742", ",", "-", "35.570934", ",", "-", "29.757786", ",", "-", "24.247404", ",", "\n", "-", "18.192041", ",", "-", "12.378893", ",", "-", "6.5051904", ",", "-", "0.9342561", ",", "4.9394464", "]", "\n", "\n", "\n", "y", "=", "[", "1.0005568", ",", "0.9927617", ",", "0.98608017", ",", "0.9682628", ",", "0.96213806", ",", "0.905902", ",", "0.85634744", ",", "\n", "0.7717149", ",", "0.6636971", ",", "0.5233853", ",", "0.37694877", ",", "0.21659243", ",", "0.1247216", ",", "0.067371935", ",", "\n", "0.041759465", ",", "-", "5.567929e-4", ",", "0.0066815144", ",", "0.0066815144", ",", "0.004454343", ",", "0.0066815144", ",", "\n", "0.0061247214", ",", "0.0072383075", ",", "0.008908686", ",", "0.016703786", ",", "0.016703786", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_all": [[206, 230], ["data_Schneider1994.Inact_Schneider_32", "data_Schneider1994.Inact_Schneider_64", "data_Schneider1994.Inact_Schneider_128", "data_Schneider1994.Inact_Schneider_256", "data_Schneider1994.Inact_Schneider_512"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_32", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_64", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_128", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_256", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_512"], ["", "def", "Inact_Schneider_all", "(", "tprepulse", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns the Data points for inactivation curve of i_Na (h infinity) from fig 4\n    prepulse duration 512 ms\n\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "tprepulse", "in", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", "]", ")", "\n", "\n", "", "except", ":", "\n", "        ", "raise", "(", "\"Wrong vhold, ( = {})\"", ".", "format", "(", "tprepulse", ")", ")", "\n", "\n", "", "if", "tprepulse", "==", "32", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Inact_Schneider_32", "(", ")", "\n", "", "elif", "tprepulse", "==", "64", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Inact_Schneider_64", "(", ")", "\n", "", "elif", "tprepulse", "==", "128", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Inact_Schneider_128", "(", ")", "\n", "", "elif", "tprepulse", "==", "256", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Inact_Schneider_256", "(", ")", "\n", "", "elif", "tprepulse", "==", "512", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Inact_Schneider_512", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_Vh": [[233, 245], ["None"], "function", ["None"], ["", "def", "Inact_Schneider_Vh", "(", ")", ":", "\n", "    ", "\"\"\"\n    Inflexion point from inactivation curves at different prepulse\n    durations.\n\n    Errors as SD. From Table 1.\n    \"\"\"", "\n", "\n", "x", "=", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "y", "=", "[", "-", "61.7", ",", "-", "66.6", ",", "-", "70.4", ",", "-", "73.3", ",", "-", "72.2", "]", "\n", "sd", "=", "[", "6.4", ",", "5.7", ",", "4.7", ",", "4.7", ",", "2.6", "]", "\n", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Inact_Schneider_k": [[246, 256], ["None"], "function", ["None"], ["", "def", "Inact_Schneider_k", "(", ")", ":", "\n", "    ", "\"\"\"Slope factor from inactivation curve fits with varying prepulse\n    duration.\n\n    Errors as SD. From Table 1.\n    \"\"\"", "\n", "x", "=", "[", "32", ",", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "y", "=", "[", "5.1", ",", "5.3", ",", "5.2", ",", "5.0", ",", "4.9", "]", "\n", "sd", "=", "[", "1.7", ",", "1.0", ",", "0.7", ",", "0.7", ",", "0.5", "]", "\n", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_65": [[259, 276], ["None"], "function", ["None"], ["", "def", "Reduction_Schneider_65", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 5A with Vinact = -65 mV\n\n    No errors reported\n    digitilized the 08/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "8.743764", ",", "16.193748", ",", "19.507229", ",", "24.475739", ",", "33.99996", ",", "\n", "46.834675", ",", "63.40293", ",", "89.90158", ",", "126.74833", ",", "176.42209", ",", "\n", "246.366", ",", "346.4942", ",", "487.5943", ",", "686.60205", ",", "970.8316", "]", "\n", "\n", "y", "=", "[", "0.98814225", ",", "0.9762854", ",", "0.96442544", ",", "0.95138055", ",", "0.9229179", ",", "\n", "0.89089906", ",", "0.829227", ",", "0.75985175", ",", "0.67150444", ",", "0.57249045", ",", "\n", "0.46993282", ",", "0.4012053", ",", "0.2755688", ",", "0.15946512", ",", "0.016141161", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_75": [[277, 294], ["None"], "function", ["None"], ["", "def", "Reduction_Schneider_75", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 5A with Vinact = -75 mV\n\n    No errors reported\n    digitilized the 08/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "15.361528", ",", "23.638813", ",", "34.398857", ",", "46.814354", ",", "66.26448", ",", "\n", "90.6814", ",", "127.09631", ",", "177.16962", ",", "248.34335", ",", "348.46985", ",", "\n", "489.96478", ",", "688.1217", ",", "969.4144", "]", "\n", "\n", "y", "=", "[", "0.9899265", ",", "0.97807026", ",", "0.9638434", ",", "0.9472453", ",", "0.923535", ",", "\n", "0.8915247", ",", "0.8535921", ",", "0.79372424", ",", "0.72200966", ",", "0.6580271", ",", "\n", "0.5845853", ",", "0.533724", ",", "0.50486976", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_85": [[295, 312], ["None"], "function", ["None"], ["", "def", "Reduction_Schneider_85", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 5A with Vinact = -85 mV\n\n    No errors reported\n    digitilized the 08/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "15.36217", ",", "24.466114", ",", "36.8814", ",", "46.400063", ",", "64.19623", ",", "\n", "90.67862", ",", "127.08968", ",", "176.73906", ",", "249.14008", ",", "348.0057", ",", "\n", "489.89142", ",", "690.09924", ",", "971.7973", "]", "\n", "\n", "y", "=", "[", "0.98814714", ",", "0.97807086", ",", "0.9620659", ",", "0.9490243", ",", "0.92353344", ",", "\n", "0.8992352", ",", "0.87197876", ",", "0.8405803", ",", "0.8068262", ",", "0.7980027", ",", "\n", "0.7880249", ",", "0.78520775", ",", "0.7794854", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_95": [[313, 330], ["None"], "function", ["None"], ["", "def", "Reduction_Schneider_95", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 5A with Vinact = -95 mV\n\n    No errors reported\n    digitilized the 08/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "14.943601", ",", "20.324263", ",", "32.32205", ",", "47.215385", ",", "64.17569", ",", "\n", "91.478966", ",", "128.29407", ",", "178.76134", ",", "247.84116", ",", "349.60043", ",", "\n", "490.65518", ",", "690.449", ",", "972.56024", "]", "\n", "\n", "y", "=", "[", "1.0017885", ",", "0.9928958", ",", "0.9875666", ",", "0.98223954", ",", "0.9804728", ",", "\n", "0.97396874", ",", "0.9734029", ",", "0.9681023", ",", "0.96756035", ",", "0.96407706", ",", "\n", "0.96418166", ",", "0.96255046", ",", "0.95801467", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_105": [[331, 348], ["None"], "function", ["None"], ["", "def", "Reduction_Schneider_105", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 5A with Vinact = -105 mV\n\n    No errors reported\n    digitilized the 08/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "18.251093", ",", "26.939888", ",", "35.213753", ",", "48.036484", ",", "65.82366", ",", "\n", "91.88406", ",", "126.21619", ",", "177.50777", ",", "249.48314", ",", "349.5861", ",", "\n", "491.46774", ",", "691.26044", ",", "972.54205", "]", "\n", "\n", "y", "=", "[", "1.006536", ",", "1.0006112", ",", "0.9982449", ",", "0.9994406", ",", "0.99886066", ",", "\n", "0.9976938", ",", "1.0000917", ",", "1.0030953", ",", "1.0025556", ",", "1.003816", ",", "\n", "1.0051074", ",", "1.0064418", ",", "1.0084296", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_all": [[349, 371], ["data_Schneider1994.Reduction_Schneider_105", "data_Schneider1994.Reduction_Schneider_95", "data_Schneider1994.Reduction_Schneider_85", "data_Schneider1994.Reduction_Schneider_75", "data_Schneider1994.Reduction_Schneider_65"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_105", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_95", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_85", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_75", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Reduction_Schneider_65"], ["", "def", "Reduction_Schneider_all", "(", "Vinact", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns the Reduction of the i_Na peak current data from Figure 5A with Vinact between -105 and -65\n\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Vinact", "in", "[", "-", "105", ",", "-", "95", ",", "-", "85", ",", "-", "75", ",", "-", "65", "]", ")", "\n", "\n", "", "except", ":", "\n", "        ", "raise", "(", "\"Wrong Vinact, ( = {})\"", ".", "format", "(", "Vinact", ")", ")", "\n", "\n", "", "if", "Vinact", "==", "-", "105", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Reduction_Schneider_105", "(", ")", "\n", "", "elif", "Vinact", "==", "-", "95", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Reduction_Schneider_95", "(", ")", "\n", "", "elif", "Vinact", "==", "-", "85", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Reduction_Schneider_85", "(", ")", "\n", "", "elif", "Vinact", "==", "-", "75", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Reduction_Schneider_75", "(", ")", "\n", "", "elif", "Vinact", "==", "-", "65", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Reduction_Schneider_65", "(", ")", "\n", "", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_75": [[374, 395], ["None"], "function", ["None"], ["", "def", "Recovery_Schneider_75", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 6 with Vhold = -75 mV\n\n    No errors reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "\n", "x", "=", "[", "1.9999113", ",", "2.8368287", ",", "4.002183", ",", "5.656388", ",", "7.979884", ",", "\n", "11.257825", ",", "15.739073", ",", "22.204203", ",", "31.098347", ",", "43.55496", ",", "\n", "61.66985", ",", "86.371956", ",", "122.068596", ",", "171.2765", ",", "242.94131", ",", "\n", "340.8718", ",", "478.27234", ",", "678.4105", ",", "957.06775", "]", "\n", "\n", "y", "=", "[", "0.015055522", ",", "0.0147306705", ",", "0.013307083", ",", "0.01847228", ",", "0.022173138", ",", "\n", "0.025507964", ",", "0.028841723", ",", "0.033640675", ",", "0.04429528", ",", "0.056414016", ",", "\n", "0.056454983", ",", "0.068939745", ",", "0.082889706", ",", "0.089518175", ",", "0.104200624", ",", "\n", "0.11412338", ",", "0.12843852", ",", "0.13214003", ",", "0.14169739", "]", "\n", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_85": [[396, 416], ["None"], "function", ["None"], ["", "def", "Recovery_Schneider_85", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 6 with Vhold = -85 mV\n\n    No errors reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "\n", "x", "=", "[", "2.0180357", ",", "2.8367448", ",", "4.0020776", ",", "5.6254973", ",", "7.907448", ",", "\n", "11.256933", ",", "15.851812", ",", "22.000694", ",", "31.035515", ",", "43.700985", ",", "\n", "61.091663", ",", "86.49018", ",", "119.380806", ",", "167.49161", ",", "238.42236", ",", "\n", "336.94565", ",", "472.76062", ",", "663.3173", ",", "945.99835", "]", "\n", "\n", "y", "=", "[", "0.027135637", ",", "0.02497956", ",", "0.022457877", ",", "0.03311291", ",", "0.043767944", ",", "\n", "0.052960344", ",", "0.066177815", ",", "0.085982144", ",", "0.117501415", ",", "0.15194872", ",", "\n", "0.18236883", ",", "0.2226733", ",", "0.26626906", ",", "0.30108196", ",", "0.33406642", ",", "\n", "0.36265767", ",", "0.379169", ",", "0.3967784", ",", "0.40706912", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_95": [[417, 440], ["None"], "function", ["None"], ["", "def", "Recovery_Schneider_95", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 6\n\n    Vhold = -95 mV\n\n    No errors reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "\n", "x", "=", "[", "2.0032268", ",", "2.834315", ",", "4.0207086", ",", "5.6573195", ",", "7.938326", ",", "11.138813", ",", "\n", "15.626384", ",", "21.628338", ",", "30.419765", ",", "42.789165", ",", "60.67295", ",", "84.88165", ",", "\n", "120.378174", ",", "168.44931", ",", "240.26764", ",", "336.24655", ",", "473.16193", ",", "667.65424", ",", "\n", "947.20306", "]", "\n", "\n", "y", "=", "[", "0.03416171", ",", "0.038089674", ",", "0.05850174", ",", "0.084406376", ",", "0.11525541", ",", "\n", "0.14940114", ",", "0.21981047", ",", "0.27702984", ",", "0.37326393", ",", "0.4513662", ",", "\n", "0.5492505", ",", "0.6289998", ",", "0.6977634", ",", "0.73630404", ",", "0.75012404", ",", "\n", "0.7721812", ",", "0.7805035", ",", "0.78388137", ",", "0.78945833", "]", "\n", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_105": [[441, 460], ["None"], "function", ["None"], ["", "def", "Recovery_Schneider_105", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 6 with Vhold = -105 mV\n\n    No errors reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "2.0105047", ",", "2.867146", ",", "4.0445147", ",", "5.6534324", ",", "7.873399", ",", "\n", "11.104783", ",", "15.492207", ",", "22.167637", ",", "31.039038", ",", "44.098167", ",", "\n", "60.536694", ",", "85.0794", ",", "121.11095", ",", "171.47789", ",", "238.86885", ",", "\n", "336.98886", ",", "476.27", ",", "679.257", ",", "953.12225", "]", "\n", "\n", "y", "=", "[", "0.067398705", ",", "0.09708909", ",", "0.13336678", ",", "0.19965799", ",", "0.28388435", ",", "\n", "0.3750668", ",", "0.48601365", ",", "0.60501623", ",", "0.7060807", ",", "0.7829887", ",", "\n", "0.83427054", ",", "0.90056235", ",", "0.9295205", ",", "0.9379802", ",", "0.9413135", ",", "\n", "0.94611245", ",", "0.954938", ",", "0.95571184", ",", "0.9458689", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_115": [[461, 480], ["None"], "function", ["None"], ["", "def", "Recovery_Schneider_115", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 6 with Vhold = -115 mV\n\n    No errors reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "2.0058124", ",", "2.8210201", ",", "3.941625", ",", "5.567115", ",", "7.931059", ",", "\n", "11.10456", ",", "15.719857", ",", "22.104898", ",", "30.753572", ",", "43.25592", ",", "\n", "60.976986", ",", "85.02802", ",", "120.91444", ",", "171.20338", ",", "239.78423", ",", "\n", "331.49136", ",", "476.54965", ",", "668.9403", ",", "955.3748", "]", "\n", "\n", "y", "=", "[", "0.12391375", ",", "0.1937928", ",", "0.27553052", ",", "0.38450226", ",", "0.5171939", ",", "\n", "0.6331925", ",", "0.70351154", ",", "0.8340054", ",", "0.89509845", ",", "0.93774474", ",", "\n", "0.95930785", ",", "0.9843836", ",", "0.9901352", ",", "0.9910546", ",", "0.9968044", ",", "\n", "0.99684256", ",", "1.0025954", ",", "0.9868228", ",", "1.0066304", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_125": [[481, 500], ["None"], "function", ["None"], ["", "def", "Recovery_Schneider_125", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 6 with Vhold = -125 mV\n\n    No errors reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "1.970509", ",", "2.7953246", ",", "3.9825203", ",", "5.563751", ",", "7.8923855", ",", "\n", "11.050929", ",", "15.713047", ",", "21.719032", ",", "30.616953", ",", "43.25373", ",", "\n", "60.512028", ",", "85.366806", ",", "120.214424", ",", "169.29097", ",", "239.68134", ",", "\n", "335.09863", ",", "475.32074", ",", "668.18335", ",", "942.6288", "]", "\n", "\n", "y", "=", "[", "0.25173", ",", "0.35191748", ",", "0.46484342", ",", "0.5940188", ",", "0.7047481", ",", "\n", "0.8044948", ",", "0.8537309", ",", "0.91087", ",", "0.9315547", ",", "0.9553143", ",", "\n", "0.97555876", ",", "0.9873123", ",", "0.9935752", ",", "0.9921514", ",", "1.0200107", ",", "\n", "1.0123636", ",", "1.0186273", ",", "1.002562", ",", "1.0161457", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_135": [[501, 520], ["None"], "function", ["None"], ["", "def", "Recovery_Schneider_135", "(", ")", ":", "\n", "    ", "\"\"\"\n    Recovery data from Figure 6 with Vhold = -135 mV\n\n    No errors reported\n    digitilized the 01/07/19 by Benjamin Marchand\n    \"\"\"", "\n", "\n", "x", "=", "[", "1.9940444", ",", "2.8222792", ",", "3.9877973", ",", "5.613986", ",", "7.932807", ",", "\n", "11.048715", ",", "15.557898", ",", "21.748865", ",", "30.460009", ",", "42.893604", ",", "\n", "60.511707", ",", "85.214836", ",", "120.43695", ",", "170.21446", ",", "239.2625", ",", "\n", "336.3286", ",", "477.93134", ",", "663.35974", ",", "947.81793", "]", "\n", "\n", "y", "=", "[", "0.4056112", ",", "0.5414499", ",", "0.63373065", ",", "0.7432145", ",", "0.81755966", ",", "\n", "0.87396765", ",", "0.9029245", ",", "0.9373709", ",", "0.95498013", ",", "0.9652693", ",", "\n", "0.9773889", ",", "0.97706324", ",", "0.98039824", ",", "0.98995584", ",", "0.9984147", ",", "\n", "0.9980888", ",", "1.0036206", ",", "1.0025612", ",", "0.99674666", "]", "\n", "\n", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_all": [[522, 549], ["data_Schneider1994.Recovery_Schneider_135", "data_Schneider1994.Recovery_Schneider_125", "data_Schneider1994.Recovery_Schneider_115", "data_Schneider1994.Recovery_Schneider_105", "data_Schneider1994.Recovery_Schneider_95", "data_Schneider1994.Recovery_Schneider_85", "data_Schneider1994.Recovery_Schneider_75"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_135", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_125", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_115", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_105", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_95", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_85", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_75"], ["", "def", "Recovery_Schneider_all", "(", "Vhold", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns the Recovery data from Figure 6 with Vhold between -135 and -75\n\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Vhold", "in", "[", "-", "135", ",", "-", "125", ",", "-", "115", ",", "-", "105", ",", "-", "95", ",", "-", "85", ",", "-", "75", "]", ")", "\n", "\n", "", "except", ":", "\n", "        ", "raise", "(", "\"Wrong vhold, ( = {})\"", ".", "format", "(", "Vhold", ")", ")", "\n", "\n", "", "if", "Vhold", "==", "-", "135", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Schneider_135", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "125", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Schneider_125", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "115", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Schneider_115", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "105", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Schneider_105", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "95", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Schneider_95", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "85", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Schneider_85", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "75", ":", "\n", "        ", "x", ",", "y", ",", "_", "=", "Recovery_Schneider_75", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_tau_r1": [[551, 558], ["None"], "function", ["None"], ["", "def", "Recovery_Schneider_tau_r1", "(", ")", ":", "\n", "    ", "\"\"\"Time constants from double exponential fit to recovery curve.\"\"\"", "\n", "\n", "x", "=", "[", "-", "135", ",", "-", "125", ",", "-", "115", ",", "-", "105", ",", "-", "95", "]", "\n", "y", "=", "[", "1.6", ",", "4.7", ",", "6.5", ",", "9.6", ",", "15.9", "]", "\n", "sd", "=", "[", "0.2", ",", "3.1", ",", "4.1", ",", "2.5", ",", "9.4", "]", "\n", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Schneider1994.data_Schneider1994.Recovery_Schneider_tau_r2": [[559, 567], ["None"], "function", ["None"], ["", "def", "Recovery_Schneider_tau_r2", "(", ")", ":", "\n", "    ", "\"\"\"Time constants from double exponential fit to recovery curve.\"\"\"", "\n", "\n", "x", "=", "[", "-", "135", ",", "-", "125", ",", "-", "115", ",", "-", "105", ",", "-", "95", ",", "-", "85", "]", "\n", "y", "=", "[", "8.6", ",", "19.8", ",", "33.5", ",", "48.7", ",", "53.2", ",", "80.6", "]", "\n", "sd", "=", "[", "2.9", ",", "10.2", ",", "17.2", ",", "23.1", ",", "33.3", ",", "47.6", "]", "\n", "\n", "return", "x", ",", "y", ",", "sd", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sun1997.data_Sun1997.inact_tauf_Sun": [[6, 25], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["def", "inact_tauf_Sun", "(", ")", ":", "\n", "    ", "\"\"\"Fast time constant of inactivation (cf Fig 4B)\"\"\"", "\n", "\n", "x", "=", "[", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "14.025313529445754", ",", "\n", "10.858232676414488", ",", "\n", "15.490955325666064", ",", "\n", "20.12830145061551", ",", "\n", "25.25342426168875", "]", ")", "\n", "sem", "=", "np", ".", "array", "(", "[", "15.976420273940917", ",", "\n", "12.809339420909666", ",", "\n", "16.958908859735303", ",", "\n", "21.591631508986893", ",", "\n", "26.71675432006012", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sun1997.data_Sun1997.inact_taus_Sun": [[27, 46], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "inact_taus_Sun", "(", ")", ":", "\n", "    ", "\"\"\"Slow time constant of inactivation (cf Fig 4B)\"\"\"", "\n", "\n", "x", "=", "[", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "514.5409115712685", ",", "\n", "300.03733593727554", ",", "\n", "264.86113903328635", ",", "\n", "302.4727878457164", ",", "\n", "478.22740457796044", "]", ")", "\n", "sem", "=", "np", ".", "array", "(", "[", "463.63766908871594", ",", "\n", "275.7747206984693", ",", "\n", "240.64447571728078", ",", "\n", "287.92900427927293", ",", "\n", "427.30118613400737", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Sun1997.data_Sun1997.rel_inact_Sun": [[48, 68], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "rel_inact_Sun", "(", ")", ":", "\n", "    ", "\"\"\"Fraction of inactivation I_Ca (cf Fig 4B)\"\"\"", "\n", "\n", "x", "=", "[", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "0.7464030326527094", ",", "\n", "0.831834237959852", ",", "\n", "0.8688234111599322", ",", "\n", "0.8694207518451511", ",", "\n", "0.853051319605985", "]", ")", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.7778782918353866", ",", "\n", "0.8584963096981708", ",", "\n", "0.8930616581947675", ",", "\n", "0.893693460842595", ",", "\n", "0.8821716780103959", "]", ")", "\n", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.IV_Li_80": [[6, 27], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "IV_Li_80", "(", ")", ":", "\n", "     ", "\"\"\"\n     IV curve for CaL - holding -80mV\n     already converted to pA/pF\n     Data from Li et al '97 Fig. 1C\n     \"\"\"", "\n", "x", "=", "[", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "\n", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.0085", ",", "0.0056", ",", "0.0025", ",", "-", "0.1982", ",", "-", "0.7223", ",", "\n", "-", "2.4683", ",", "-", "6.5145", ",", "-", "10.0575", ",", "-", "10.7433", ",", "-", "9.3806", ",", "\n", "-", "7.1734", ",", "-", "4.8763", ",", "-", "2.7589", ",", "-", "0.3719", "]", ")", "\n", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "0.0085", ",", "0.0056", ",", "0.0025", ",", "-", "0.1802", ",", "-", "0.6863", ",", "\n", "-", "2.0910", ",", "-", "5.8676", ",", "-", "9.4466", ",", "-", "9.7730", ",", "-", "8.5181", ",", "\n", "-", "6.7241", ",", "-", "4.8763", ",", "-", "2.7589", ",", "-", "0.3719", "]", ")", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "15", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.IV_Li_60": [[28, 49], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "IV_Li_60", "(", ")", ":", "\n", "     ", "\"\"\"\n     IV curve for CaL - holding -60mV\n     already converted to pA/pF\n     Data from Li et al '97 Fig. 1C\n     \"\"\"", "\n", "x", "=", "[", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "\n", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.021219056", ",", "0.018300518", ",", "-", "0.24539581", ",", "-", "1.1956093", ",", "-", "4.8025737", ",", "\n", "-", "8.848952", ",", "-", "10.2042", ",", "-", "9.204793", ",", "-", "6.8803887", ",", "-", "3.9587488", ",", "\n", "-", "2.1630037", ",", "-", "0.31918526", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.021219056", ",", "0.018300518", ",", "-", "0.24539581", ",", "-", "1.4977056", ",", "-", "5.351791", ",", "\n", "-", "9.4118805", ",", "-", "10.774013", ",", "-", "10.001114", ",", "-", "7.4570847", ",", "-", "3.9587488", ",", "\n", "-", "2.1630037", ",", "-", "0.31918526", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "9", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.IV_Li_40": [[50, 68], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "IV_Li_40", "(", ")", ":", "\n", "     ", "\"\"\"\n     IV curve for CaL - holding -40mV\n     already converted to pA/pF\n     Data from Li et al '97 Fig. 1C\n     \"\"\"", "\n", "x", "=", "[", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.015400335", ",", "-", "0.47482225", ",", "-", "2.5783906", ",", "-", "5.258581", ",", "-", "6.3461127", ",", "\n", "-", "6.0949717", ",", "-", "4.7316656", ",", "-", "3.1692936", ",", "-", "1.7236261", ",", "-", "0.06519903", "]", ")", "\n", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.015400335", ",", "-", "0.47482225", ",", "-", "2.5783906", ",", "-", "5.8215284", ",", "-", "6.9845753", ",", "\n", "-", "6.8569856", ",", "-", "5.5142746", ",", "-", "3.6154995", ",", "-", "1.7236261", ",", "-", "0.06519903", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.IV_Li_all": [[69, 88], ["data_Li1997.IV_Li_80", "Exception", "data_Li1997.IV_Li_60", "data_Li1997.IV_Li_40"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.IV_Li_80", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.IV_Li_60", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.IV_Li_40"], ["", "def", "IV_Li_all", "(", "Vhold", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns the IV curve (pA/pF) from Figure 1C\n    in Li and Nattel 1997 with Vhold = -80, -60, -40 mV\n    already converted to pA/pF\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Vhold", "in", "[", "-", "80", ",", "-", "60", ",", "-", "40", "]", ")", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong Vhold, ( = {} mV)\"", ".", "format", "(", "Vhold", ")", ")", "\n", "\n", "", "if", "Vhold", "==", "-", "80", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "IV_Li_80", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "60", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "IV_Li_60", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "40", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "IV_Li_40", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Act_Li": [[92, 111], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Act_Li", "(", ")", ":", "\n", "     ", "\"\"\"\n     Steady-State activation curve\n     Data from Li et al '97 Fig. 2B\n     \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "25", ",", "-", "20", ",", "-", "15", ",", "\n", "-", "10", ",", "-", "5", ",", "0", ",", "5", ",", "10", ",", "15", ",", "20", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.0071", ",", "0.0071", ",", "0.0061", ",", "0.0119", ",", "0.0332", ",", "\n", "0.0836", ",", "0.1344", ",", "0.2093", ",", "0.3371", ",", "0.5095", ",", "\n", "0.6700", ",", "0.8184", ",", "0.9275", ",", "0.9749", ",", "0.9864", ",", "\n", "0.9961", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "0.0071", ",", "0.0071", ",", "0.0061", ",", "0.0119", ",", "0.0332", ",", "\n", "0.0836", ",", "0.1344", ",", "0.2281", ",", "0.3679", ",", "0.5472", ",", "\n", "0.7179", ",", "0.8646", ",", "0.9651", ",", "0.9749", ",", "0.9864", ",", "\n", "0.9961", "]", ")", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Inact_Li_1000": [[113, 130], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Inact_Li_1000", "(", ")", ":", "\n", "     ", "\"\"\"\n     Steady-State inactivation curve - 1000ms pre-pulse\n     Data from Li et al '97 Fig. 2B\n     \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "\n", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.9942", ",", "0.9829", ",", "0.9887", ",", "0.9809", ",", "0.8361", ",", "0.5698", ",", "\n", "0.2795", ",", "0.0627", ",", "0.0292", ",", "0.0094", ",", "0.0152", ",", "0.0262", ",", "\n", "0.0577", ",", "0.0875", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "0.9976", ",", "0.9778", ",", "0.9904", ",", "0.9980", ",", "0.8892", ",", "0.6040", ",", "\n", "0.3051", ",", "0.0833", ",", "0.0412", ",", "0.0214", ",", "0.0272", ",", "0.0450", ",", "\n", "0.0783", ",", "0.1149", "]", ")", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Inact_Li_300": [[131, 148], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Inact_Li_300", "(", ")", ":", "\n", "     ", "\"\"\"\n     Steady-State inactivation curve - 300ms pre-pulse\n     Data from Li et al '97 Fig. 2B\n     \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "\n", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.9828174", ",", "0.9644436", ",", "0.9913071", ",", "0.9699411", ",", "0.83782166", ",", "\n", "0.6163692", ",", "0.36924195", ",", "0.16980544", ",", "0.08827661", ",", "0.05918199", ",", "\n", "0.052713107", ",", "0.065289244", ",", "0.11422548", ",", "0.156603", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.9828174", ",", "0.941201", ",", "0.9597331", ",", "0.92109466", ",", "0.7883726", ",", "\n", "0.58241284", ",", "0.30076206", ",", "0.12509272", ",", "0.058503658", ",", "0.034180954", ",", "\n", "0.028853536", ",", "0.044436105", ",", "0.09809451", ",", "0.13933766", "]", ")", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "5", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Inact_Li_150": [[149, 166], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Inact_Li_150", "(", ")", ":", "\n", "     ", "\"\"\"\n     Steady-State inactivation curve - 150ms pre-pulse\n     Data from Li et al '97 Fig. 2B\n     \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "\n", "10", ",", "20", ",", "30", ",", "40", ",", "50", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.98222893", ",", "0.9626639", ",", "0.9883575", ",", "0.98900026", ",", "0.8694027", ",", "\n", "0.618156", ",", "0.38531607", ",", "0.16980544", ",", "0.088893525", ",", "0.059784696", ",", "\n", "0.053911414", ",", "0.0932825", ",", "0.15531485", ",", "0.2185526", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.98222893", ",", "0.94122225", ",", "0.959173", ",", "0.9443515", ",", "0.806269", ",", "\n", "0.5383242", ",", "0.3483959", ",", "0.12512825", ",", "0.05909926", ",", "0.034180954", ",", "\n", "0.03065455", ",", "0.045031704", ",", "0.13388032", ",", "0.18220674", "]", ")", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "5", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.inact_Li_all": [[167, 186], ["data_Li1997.Inact_Li_1000", "Exception", "data_Li1997.Inact_Li_300", "data_Li1997.Inact_Li_150"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Inact_Li_1000", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Inact_Li_300", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Inact_Li_150"], ["", "def", "inact_Li_all", "(", "tstep", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Steady-State inactivation curve  from Figure 1C\n    in Li and Nattel 1997 with tstep = 1000, 300, 150 mS\n\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "tstep", "in", "[", "1000", ",", "300", ",", "150", "]", ")", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong tstep, ( = {} mS)\"", ".", "format", "(", "tstep", ")", ")", "\n", "\n", "", "if", "tstep", "==", "1000", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "Inact_Li_1000", "(", ")", "\n", "", "elif", "tstep", "==", "300", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "Inact_Li_300", "(", ")", "\n", "", "elif", "tstep", "==", "150", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "Inact_Li_150", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau1_Li_80": [[195, 207], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Tau1_Li_80", "(", ")", ":", "\n", "     ", "\"\"\"\n     Time Constant data for tau 1 - -80mV HP\n     Data from Li et al '97 Fig 3B\n     \"\"\"", "\n", "x", "=", "[", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "9.3351", ",", "9.5781", ",", "11.2823", ",", "10.5040", ",", "9.6271", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "10.3084", ",", "10.6500", ",", "12.4983", ",", "11.5740", ",", "11.6703", "]", ")", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "12", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau1_Li_60": [[208, 220], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Tau1_Li_60", "(", ")", ":", "\n", "     ", "\"\"\"\n     Time Constant data for tau 1 - -60mV HP\n     Data from Li et al '97 Fig 3B\n     \"\"\"", "\n", "x", "=", "[", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "11.250413", ",", "10.649782", ",", "12.664147", ",", "14.214826", ",", "16.567045", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "11.250413", ",", "10.649782", ",", "12.664147", ",", "16.32484", ",", "20.786776", "]", ")", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau1_Li_40": [[221, 234], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Tau1_Li_40", "(", ")", ":", "\n", "     ", "\"\"\"\n     Time Constant data for tau 1 - -40mV HP\n     Data from Li et al '97 Fig 3B\n     \"\"\"", "\n", "x", "=", "[", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "11.334802", ",", "10.607138", ",", "12.410981", ",", "14.214675", ",", "14.54217", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "11.334802", ",", "10.607138", ",", "12.410981", ",", "14.214675", ",", "14.54217", "]", ")", "# not sure there is any uncertainty :", "\n", "# hard to distinguish on the figure", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau1_Li_all": [[235, 253], ["data_Li1997.Tau1_Li_80", "Exception", "data_Li1997.Tau1_Li_60", "data_Li1997.Tau1_Li_40"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau1_Li_80", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau1_Li_60", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau1_Li_40"], ["", "def", "Tau1_Li_all", "(", "Vhold", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns Time Constant data for tau 1 from Figure 3B\n    in Li and Nattel 1997 with Vhold = -80, -60, -40 mV\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Vhold", "in", "[", "-", "80", ",", "-", "60", ",", "-", "40", "]", ")", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong Vhold, ( = {} mV)\"", ".", "format", "(", "Vhold", ")", ")", "\n", "\n", "", "if", "Vhold", "==", "-", "80", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "Tau1_Li_80", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "60", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "Tau1_Li_60", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "40", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "Tau1_Li_40", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau2_Li_80": [[261, 274], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Tau2_Li_80", "(", ")", ":", "\n", "    ", "\"\"\"\n    Time Constant data for tau 2 - -80mV HP\n    Data from Li et al '97 Fig 3B\n    \"\"\"", "\n", "x", "=", "[", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "87.5782", ",", "62.5797", ",", "50.7630", ",", "54.3979", ",", "76.2176", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "94.4024", ",", "67.1252", ",", "58.0298", ",", "54.8554", ",", "92.1267", "]", ")", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "12", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau2_Li_60": [[275, 288], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Tau2_Li_60", "(", ")", ":", "\n", "     ", "\"\"\"\n     Time Constant data for tau 2 - -60mV HP\n     Data from Li et al '97 Fig 3B\n     \"\"\"", "\n", "x", "=", "[", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "74.84698", ",", "62.14582", ",", "52.21172", ",", "61.257946", ",", "72.47672", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "74.84698", ",", "62.14582", ",", "52.21172", ",", "61.257946", ",", "72.47672", "]", ")", "# unable to distinguish the error bars", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau2_Li_40": [[289, 302], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Tau2_Li_40", "(", ")", ":", "\n", "     ", "\"\"\"\n     Time Constant data for tau 2 - -40mV HP\n     Data from Li et al '97 Fig 3B\n     \"\"\"", "\n", "x", "=", "[", "-", "10", ",", "0", ",", "10", ",", "20", ",", "30", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "74.84839", ",", "61.74902", ",", "54.189396", ",", "60.86114", ",", "85.72313", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "74.84839", ",", "61.74902", ",", "54.189396", ",", "60.86114", ",", "92.24713", "]", ")", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau2_Li_all": [[304, 322], ["data_Li1997.Tau2_Li_80", "Exception", "data_Li1997.Tau2_Li_60", "data_Li1997.Tau2_Li_40"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau2_Li_80", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau2_Li_60", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Tau2_Li_40"], ["", "def", "Tau2_Li_all", "(", "Vhold", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns Time Constant data for tau 2 from Figure 3B\n    in Li and Nattel 1997 with Vhold = -80, -60, -40 mV\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Vhold", "in", "[", "-", "80", ",", "-", "60", ",", "-", "40", "]", ")", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong Vhold, ( = {} mV)\"", ".", "format", "(", "Vhold", ")", ")", "\n", "\n", "", "if", "Vhold", "==", "-", "80", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "Tau2_Li_80", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "60", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "Tau2_Li_60", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "40", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "Tau2_Li_40", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.recov_Li_80": [[330, 352], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "recov_Li_80", "(", ")", ":", "\n", "     ", "\"\"\"\n     recovery data for I2/I1 -80mV HP\n     Data from Li et al '97 Fig 4B\n     \"\"\"", "\n", "x", "=", "[", "6.558458", ",", "16.384476", ",", "70.22334", ",", "114.97140", ",", "159.35185", ",", "\n", "196.94046", ",", "235.14172", ",", "268.28995", ",", "318.14355", ",", "440.4553", ",", "\n", "554.7499", ",", "674.71014", ",", "830.8994", ",", "1009.5474", ",", "2013.8258", ",", "\n", "3004.188", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "6.7262736E-5", ",", "0.33562955", ",", "0.6879255", ",", "0.8347158", ",", "0.91641045", ",", "\n", "0.95573455", ",", "0.9785908", ",", "0.98731524", ",", "0.9968731", ",", "1.0082126", ",", "\n", "1.0101173", ",", "1.0096859", ",", "1.0101452", ",", "1.0067493", ",", "1.004213", ",", "\n", "1.0008514", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "-", "6.7262736E-5", ",", "0.3819375", ",", "0.7326487", ",", "0.86688375", ",", "0.9454335", ",", "\n", "0.9792601", ",", "1.0013157", ",", "1.0107998", ",", "1.0219014", ",", "1.0293446", ",", "\n", "1.0101173", ",", "1.0316103", ",", "1.0297416", ",", "1.0067493", ",", "1.004213", ",", "\n", "1.0008514", "]", ")", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "11", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.recov_Li_60": [[353, 375], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "recov_Li_60", "(", ")", ":", "\n", "     ", "\"\"\"\n     recovery data for I2/I1 -60mV HP\n     Data from Li et al '97 Fig 4B\n     \"\"\"", "\n", "x", "=", "[", "4.5979223", ",", "26.117134", ",", "45.343216", ",", "107.52603", ",", "136.96907", ",", "\n", "182.42899", ",", "231.14479", ",", "273.9323", ",", "311.6376", ",", "431.382", ",", "\n", "591.28235", ",", "835.29315", ",", "1116.7", ",", "1506.2981", ",", "2206.4775", ",", "\n", "3514.7092", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.0007383E-4", ",", "0.14900172", ",", "0.3819867", ",", "0.5100057", ",", "0.6183217", ",", "\n", "0.67100155", ",", "0.71114266", ",", "0.7606776", ",", "0.7968649", ",", "0.8772127", ",", "\n", "0.9278763", ",", "0.9670232", ",", "0.9756935", ",", "1.0003675", ",", "0.99928963", ",", "\n", "0.99921584", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "1.0007383E-4", ",", "0.14900172", ",", "0.419603", ",", "0.56021", ",", "0.68498564", ",", "\n", "0.76048887", ",", "0.8053105", ",", "0.7606776", ",", "0.83686656", ",", "0.91564596", ",", "\n", "0.95610696", ",", "0.99522924", ",", "1.0086211", ",", "1.0003675", ",", "0.99928963", ",", "\n", "0.99921584", "]", ")", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "7", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.recov_Li_40": [[376, 395], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "recov_Li_40", "(", ")", ":", "\n", "     ", "\"\"\"\n     recovery data for I2/I1 -40mV HP\n     Data from Li et al '97 Fig 4B\n     \"\"\"", "\n", "x", "=", "[", "60.449844", ",", "185.4865", ",", "308.53345", ",", "431.8546", ",", "670.7132", ",", "\n", "786.48395", ",", "906.0941", ",", "1158.5306", ",", "1386.1862", ",", "1755.9979", ",", "\n", "2106.3735", ",", "2579.4404", ",", "3192.3704", ",", "3791.325", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.20086457", ",", "0.43886638", ",", "0.580397", ",", "0.63958", ",", "0.7422377", ",", "\n", "0.7794389", ",", "0.7884177", ",", "0.82602084", ",", "0.85492414", ",", "0.8865983", ",", "\n", "0.9158625", ",", "0.94627184", ",", "0.96611273", ",", "0.9866967", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "0.20086457", ",", "0.47179395", ",", "0.62038225", ",", "0.67877287", ",", "0.7767501", ",", "\n", "0.8076696", ",", "0.815856", ",", "0.85658765", ",", "0.87609714", ",", "0.9085637", ",", "\n", "0.9378197", ",", "0.96824545", ",", "0.96611273", ",", "0.9866967", "]", ")", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Recov_Li_all": [[397, 415], ["data_Li1997.recov_Li_80", "Exception", "data_Li1997.recov_Li_60", "data_Li1997.recov_Li_40"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.recov_Li_80", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.recov_Li_60", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.recov_Li_40"], ["", "def", "Recov_Li_all", "(", "Vhold", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns recovery data for I2/I1 from Figure 4B\n    in Li and Nattel 1997 with Vhold = -80, -60, -40 mV\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Vhold", "in", "[", "-", "80", ",", "-", "60", ",", "-", "40", "]", ")", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong Vhold, ( = {} mV)\"", ".", "format", "(", "Vhold", ")", ")", "\n", "\n", "", "if", "Vhold", "==", "-", "80", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "recov_Li_80", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "60", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "recov_Li_60", "(", ")", "\n", "", "elif", "Vhold", "==", "-", "40", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "recov_Li_40", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.TauF_Recov_Li": [[417, 430], ["numpy.array", "numpy.sqrt", "sd.tolist"], "function", ["None"], ["", "def", "TauF_Recov_Li", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for fast recovery time constant for i_CaL\n    from text on H230 in Li1997.\n    Errors reported as mean +/- SEM for 7,8 cells\n    \"\"\"", "\n", "x", "=", "[", "-", "60", ",", "-", "40", "]", "\n", "y", "=", "[", "32", ",", "169", "]", "\n", "sem", "=", "np", ".", "array", "(", "[", "8", ",", "37", "]", ")", "\n", "N", "=", "[", "7", ",", "8", "]", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.TauS_Recov_Li": [[431, 444], ["numpy.array", "numpy.sqrt", "sd.tolist"], "function", ["None"], ["", "def", "TauS_Recov_Li", "(", ")", ":", "\n", "    ", "\"\"\"\n    Data for slow recovery time constant for i_CaL\n    from text on H230 in Li1997.\n    Errors reported as mean +/- SEM for 11,7,8 cells\n    \"\"\"", "\n", "x", "=", "[", "-", "80", ",", "-", "60", ",", "-", "40", "]", "\n", "y", "=", "[", "55", ",", "242", ",", "1384", "]", "\n", "sem", "=", "np", ".", "array", "(", "[", "10", ",", "51", ",", "219", "]", ")", "\n", "N", "=", "[", "11", ",", "7", ",", "8", "]", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_Li_2_0": [[453, 471], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "relat_curr_Li_2_0", "(", ")", ":", "\n", "     ", "\"\"\"\n     relative current as function of the pulse number\n     data for -40mV HP and 2.0Hz\n     Data from Li et al '97 Fig 5C\n     \"\"\"", "\n", "x", "=", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.0012542", ",", "0.65933526", ",", "0.5895303", ",", "0.5552531", ",", "0.5068999", ",", "\n", "0.50781155", ",", "0.4725323", ",", "0.4462981", ",", "0.4482151", ",", "0.4199685", ",", "\n", "0.4098194", ",", "0.40268308", ",", "0.41164017", ",", "0.40149108", ",", "0.40843078", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "1.0012542", ",", "0.58158517", ",", "0.5131229", ",", "0.48387176", ",", "0.4335103", ",", "\n", "0.43844426", ",", "0.40919393", ",", "0.37290603", ",", "0.37582675", ",", "0.34557107", ",", "\n", "0.33039427", ",", "0.3202435", ",", "0.3251758", ",", "0.31804115", ",", "0.3340317", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "13", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_Li_1_0": [[472, 490], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "relat_curr_Li_1_0", "(", ")", ":", "\n", "     ", "\"\"\"\n     relative current as function of the pulse number\n     data for -40mV HP and 1.0Hz\n     Data from Li et al '97 Fig 5C\n     \"\"\"", "\n", "x", "=", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.9969004", ",", "0.7293747", ",", "0.6538748", ",", "0.6165824", ",", "0.5692329", ",", "\n", "0.5460156", ",", "0.52279586", ",", "0.5096331", ",", "0.49747497", ",", "0.4823023", ",", "\n", "0.48421517", ",", "0.4609946", ",", "0.4699492", ",", "0.45376623", ",", "0.46372452", "]", ")", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "0.9969004", ",", "0.77662545", ",", "0.7172132", ",", "0.67388767", ",", "0.64061505", ",", "\n", "0.6204139", ",", "0.60222185", ",", "0.5830277", ",", "0.5668447", ",", "0.5587072", ",", "\n", "0.55559653", ",", "0.5414251", ",", "0.541328", ",", "0.5301735", ",", "0.5351042", "]", ")", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "13", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_Li_0_5": [[491, 509], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "relat_curr_Li_0_5", "(", ")", ":", "\n", "     ", "\"\"\"\n     relative current as function of the pulse number\n     data for -40mV HP and 0.5Hz\n     Data from Li et al '97 Fig 5C\n     \"\"\"", "\n", "x", "=", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.99891114", ",", "0.87314105", ",", "0.83283085", ",", "0.78749293", ",", "0.77935785", ",", "\n", "0.7601613", ",", "0.74498695", ",", "0.72981185", ",", "0.73273176", ",", "0.74068016", ",", "\n", "0.7375678", ",", "0.7324447", ",", "0.73536545", ",", "0.7322539", ",", "0.7231102", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.99891114", ",", "0.84700227", ",", "0.7986474", ",", "0.75130206", ",", "0.7270778", ",", "\n", "0.72698236", ",", "0.70577586", ",", "0.69060236", ",", "0.69251776", ",", "0.70448595", ",", "\n", "0.69835585", ",", "0.6982621", ",", "0.69916797", ",", "0.6920366", ",", "0.6889276", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "13", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_Li_0_1": [[510, 528], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "relat_curr_Li_0_1", "(", ")", ":", "\n", "     ", "\"\"\"\n     relative current as function of the pulse number\n     data for -40mV HP and 0.1Hz\n     Data from Li et al '97 Fig 5C\n     \"\"\"", "\n", "x", "=", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.9989128", ",", "0.9777005", ",", "0.9796158", ",", "0.9795196", ",", "0.9754052", ",", "\n", "0.9793321", ",", "0.97521687", ",", "0.9791438", ",", "0.986086", ",", "0.96085554", ",", "\n", "0.9708138", ",", "0.97474074", ",", "0.9666024", ",", "0.9755545", ",", "0.98651737", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.9989128", ",", "0.9777005", ",", "0.9796158", ",", "0.9553907", ",", "0.953287", ",", "\n", "0.9562069", ",", "0.94807106", ",", "0.95300335", ",", "0.9579373", ",", "0.9276791", ",", "\n", "0.9376358", ",", "0.94860196", ",", "0.9344289", ",", "0.94639874", ",", "0.95635456", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "13", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Relat_curr_Li_all": [[529, 549], ["data_Li1997.relat_curr_Li_2_0", "Exception", "data_Li1997.relat_curr_Li_1_0", "data_Li1997.relat_curr_Li_0_5", "data_Li1997.relat_curr_Li_0_1"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_Li_2_0", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_Li_1_0", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_Li_0_5", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_Li_0_1"], ["", "def", "Relat_curr_Li_all", "(", "frequency", ":", "float", ")", ":", "\n", "    ", "\"\"\"\n    Returns relative current as function of the pulse number from Figure 5C\n    in Li and Nattel 1997 with Vhold = -80, -60, -40 mV\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "frequency", "in", "[", "2.0", ",", "1.0", ",", "0.5", ",", "0.1", "]", ")", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong frequency, ( = {} Hz)\"", ".", "format", "(", "frequency", ")", ")", "\n", "\n", "", "if", "frequency", "==", "2.0", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "relat_curr_Li_2_0", "(", ")", "\n", "", "elif", "frequency", "==", "1.0", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "relat_curr_Li_1_0", "(", ")", "\n", "", "elif", "frequency", "==", "0.5", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "relat_curr_Li_0_5", "(", ")", "\n", "", "elif", "frequency", "==", "0.1", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "relat_curr_Li_0_1", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Use_Inact_Li_80": [[551, 571], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Use_Inact_Li_80", "(", ")", ":", "\n", "    ", "\"\"\"Pulse constants for use-dependent inactivation (Fig 5D).\n\n    Given as mean +/- SE.\n\n    x: Hz\n    y: Pulse constant (1/k) see text.\n    \"\"\"", "\n", "x", "=", "[", "0.5", ",", "1.0", ",", "2.0", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "8.412698412698413", ",", "\n", "3.682539682539683", ",", "\n", "4.253968253968255", "]", ")", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "9.238095238095239", ",", "\n", "4.19047619047619", ",", "\n", "4.825396825396825", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Use_Inact_Li_60": [[572, 592], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Use_Inact_Li_60", "(", ")", ":", "\n", "    ", "\"\"\"Pulse constants for use-dependent inactivation (Fig 5D).\n\n    Given as mean +/- SE.\n\n    x: Hz\n    y: Pulse constant (1/k) see text.\n    \"\"\"", "\n", "x", "=", "[", "0.5", ",", "1.0", ",", "2.0", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "2.6984126984126973", ",", "\n", "3.238095238095239", ",", "\n", "3.1746031746031744", "]", ")", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "3.3968253968253963", ",", "\n", "3.841269841269842", ",", "\n", "3.904761904761904", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Use_Inact_Li_40": [[593, 613], ["numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Use_Inact_Li_40", "(", ")", ":", "\n", "    ", "\"\"\"Pulse constants for use-dependent inactivation (Fig 5D).\n\n    Given as mean +/- SE.\n\n    x: Hz\n    y: Pulse constant (1/k) see text.\n    \"\"\"", "\n", "x", "=", "[", "0.5", ",", "1.0", ",", "2.0", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1.9682539682539677", ",", "\n", "2.000000000000001", ",", "\n", "1.6825396825396814", "]", ")", "\n", "sem", "=", "np", ".", "asarray", "(", "[", "2.4126984126984135", ",", "\n", "2.53968253968254", ",", "\n", "2.1269841269841274", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "13", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Use_Inact_Li_SS_80": [[614, 630], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Use_Inact_Li_SS_80", "(", ")", ":", "\n", "    ", "\"\"\"Steady-state current decay from use-dependent inactivation (Fig 6B)\n\n    Given as mean +/- SE\n    \"\"\"", "\n", "x", "=", "[", "0.5", ",", "1.0", ",", "2.0", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "0.9797787693879196", ",", "\n", "0.9505994462514449", ",", "\n", "0.8828929329856725", "]", ")", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.942279777425338", ",", "\n", "0.8974893148033655", ",", "\n", "0.8266578855407113", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Use_Inact_Li_SS_60": [[632, 649], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Use_Inact_Li_SS_60", "(", ")", ":", "\n", "    ", "\"\"\"Steady-state current decay from use-dependent inactivation (Fig 6B)\n\n    Given as mean +/- SE\n    \"\"\"", "\n", "x", "=", "[", "0.5", ",", "1.0", ",", "2.0", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "0.879781457487702", ",", "\n", "0.688093062014462", ",", "\n", "0.645385876723744", "]", ")", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.8297962420365044", ",", "\n", "0.6630937340394075", ",", "\n", "0.6141501572538373", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Use_Inact_Li_SS_40": [[651, 668], ["numpy.array", "numpy.array", "numpy.abs", "numpy.sqrt", "np.array.tolist", "sd.tolist"], "function", ["None"], ["", "def", "Use_Inact_Li_SS_40", "(", ")", ":", "\n", "    ", "\"\"\"Steady-state current decay from use-dependent inactivation (Fig 6B)\n\n    Given as mean +/- SE\n    \"\"\"", "\n", "x", "=", "[", "0.5", ",", "1.0", ",", "2.0", "]", "\n", "y", "=", "np", ".", "array", "(", "[", "0.7391602376280207", ",", "\n", "0.4787236902233811", ",", "\n", "0.41726700895137225", "]", ")", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.7016612456654392", ",", "\n", "0.4037391467971292", ",", "\n", "0.3391575495282386", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "sem", ")", "\n", "N", "=", "13", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.Act_Tau_Li": [[669, 680], ["numpy.array", "numpy.sqrt", "sd.tolist"], "function", ["None"], ["", "def", "Act_Tau_Li", "(", ")", ":", "\n", "    ", "\"\"\"Activation time constant of ical.\n\n    From text on p H233.\n    \"\"\"", "\n", "x", "=", "[", "10", "]", "\n", "y", "=", "[", "0.6", "]", "\n", "sem", "=", "np", ".", "array", "(", "[", "0.2", "]", ")", "\n", "N", "=", "6", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_ss_Li_80": [[688, 702], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "relat_curr_ss_Li_80", "(", ")", ":", "\n", "     ", "\"\"\"\n     relative current as function of the Frequency (Hz)\n     data for -80mV HP\n     Data from Li et al '97 Fig 6B\n     \"\"\"", "\n", "x", "=", "[", "0.2", ",", "0.5", ",", "1", ",", "2", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1", ",", "0.97614056", ",", "0.9490366", ",", "0.87891024", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "1", ",", "0.939259", ",", "0.8953926", ",", "0.8210704", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "8", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_ss_Li_60": [[703, 717], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "relat_curr_ss_Li_60", "(", ")", ":", "\n", "     ", "\"\"\"\n     relative current as function of the Frequency (Hz)\n     data for -60mV HP\n     Data from Li et al '97 Fig 6B\n     \"\"\"", "\n", "x", "=", "[", "0.2", ",", "0.5", ",", "1", ",", "2", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1", ",", "0.87806815", ",", "0.6858296", ",", "0.63749784", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "1", ",", "0.82945347", ",", "0.6858296", ",", "0.63749784", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "10", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_ss_Li_40": [[718, 732], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "relat_curr_ss_Li_40", "(", ")", ":", "\n", "     ", "\"\"\"\n     relative current as function of the Frequency (Hz)\n     data for -40mV HP\n     Data from Li et al '97 Fig 6B\n     \"\"\"", "\n", "x", "=", "[", "0.2", ",", "0.5", ",", "1", ",", "2", "]", "\n", "y", "=", "np", ".", "asarray", "(", "[", "1", ",", "0.7364104", ",", "0.4720861", ",", "0.406147", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "1", ",", "0.70120144", ",", "0.39748573", ",", "0.3323858", "]", ")", "\n", "\n", "sem", "=", "y", "-", "ylower", "\n", "N", "=", "13", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_ss_Li_all": [[733, 751], ["data_Li1997.relat_curr_ss_Li_80", "Exception", "data_Li1997.relat_curr_ss_Li_60", "data_Li1997.relat_curr_ss_Li_40"], "function", ["home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_ss_Li_80", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_ss_Li_60", "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.relat_curr_ss_Li_40"], ["", "def", "relat_curr_ss_Li_all", "(", "Vhold", ":", "int", ")", ":", "\n", "    ", "\"\"\"\n    Returns relative current as function of the Frequency (Hz) from Figure 6B\n    in Li and Nattel 1997 with Vhold = -80, -60, -40 mV\n    \"\"\"", "\n", "try", ":", "\n", "        ", "assert", "(", "Vhold", "in", "[", "80", ",", "60", ",", "40", "]", ")", "\n", "", "except", ":", "\n", "        ", "raise", "Exception", "(", "\"Wrong Vhold, ( = {} mV)\"", ".", "format", "(", "Vhold", ")", ")", "\n", "\n", "", "if", "Vhold", "==", "80", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "relat_curr_ss_Li_80", "(", ")", "\n", "", "elif", "Vhold", "==", "60", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "relat_curr_ss_Li_60", "(", ")", "\n", "", "elif", "Vhold", "==", "40", ":", "\n", "        ", "x", ",", "y", ",", "sd", "=", "relat_curr_ss_Li_40", "(", ")", "\n", "\n", "", "return", "x", ",", "y", ",", "sd", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.IV_Li_36deg": [[759, 779], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "IV_Li_36deg", "(", ")", ":", "\n", "     ", "\"\"\"\n     IV curve for CaL - holding -80mV at 36\u00b0C\n     Data from Li et al '97 Fig. 1C\n     \"\"\"", "\n", "x", "=", "[", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "\n", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "0.008752454", ",", "-", "0.017321125", ",", "-", "0.008942166", ",", "-", "0.14611204", ",", "-", "1.684228", ",", "\n", "-", "3.9925282", ",", "-", "9.197569", ",", "-", "13.163163", ",", "-", "13.675742", ",", "-", "11.479001", ",", "\n", "-", "7.83745", ",", "-", "4.76955", ",", "-", "1.6496687", ",", "-", "0.026008366", "]", ")", "\n", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "-", "0.008752454", ",", "-", "0.017321125", ",", "-", "0.008942166", ",", "-", "0.14611204", ",", "-", "1.2487197", ",", "\n", "-", "2.7532248", ",", "-", "6.4365516", ",", "-", "10.470933", ",", "-", "11.308362", ",", "-", "9.770294", ",", "\n", "-", "6.5903134", ",", "-", "3.9658973", ",", "-", "1.3255295", ",", "-", "0.026008366", "]", ")", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "6", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Li1997.data_Li1997.IV_Li_RTdeg": [[780, 800], ["numpy.asarray", "numpy.asarray", "numpy.sqrt", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["", "def", "IV_Li_RTdeg", "(", ")", ":", "\n", "     ", "\"\"\"\n     IV curve for CaL - holding -80mV at Room Temperature (20\u00b0C)\n     Data from Li et al '97 Fig. 1C\n     \"\"\"", "\n", "x", "=", "[", "-", "70", ",", "-", "60", ",", "-", "50", ",", "-", "40", ",", "-", "30", ",", "-", "20", ",", "-", "10", ",", "0", ",", "\n", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", "]", "\n", "\n", "y", "=", "np", ".", "asarray", "(", "[", "-", "0.008752454", ",", "-", "0.017321125", ",", "-", "0.008942166", ",", "-", "0.14611204", ",", "-", "1.2317721", ",", "\n", "-", "2.2489302", ",", "-", "5.0264916", ",", "-", "7.1284323", ",", "-", "7.290668", ",", "-", "5.752457", ",", "\n", "-", "3.8808508", ",", "-", "2.256906", ",", "-", "1.1033605", ",", "-", "0.01703655", "]", ")", "\n", "\n", "yupper", "=", "np", ".", "asarray", "(", "[", "-", "0.008752454", ",", "-", "0.017321125", ",", "-", "0.008942166", ",", "-", "0.14611204", ",", "-", "0.8303014", ",", "\n", "-", "1.3776292", ",", "-", "3.120824", ",", "-", "4.941066", ",", "-", "5.2823186", ",", "-", "4.1971326", ",", "\n", "-", "2.7533433", ",", "-", "1.5649068", ",", "-", "0.65873826", ",", "-", "0.01703655", "]", ")", "\n", "\n", "sem", "=", "yupper", "-", "y", "\n", "N", "=", "6", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.charleshouston_ion-channel-ABC.Mewes1994.data_Mewes1994.Act_Mewes": [[7, 40], ["numpy.arange", "numpy.asarray", "numpy.asarray", "numpy.abs", "numpy.sqrt", "np.arange.tolist", "np.asarray.tolist", "sd.tolist"], "function", ["None"], ["def", "Act_Mewes", "(", ")", ":", "\n", "    ", "\"\"\"\n    Steady-State activation curve [Mewes1994]\n    cf Fig 5c\n    \"\"\"", "\n", "\n", "x", "=", "np", ".", "arange", "(", "-", "35", ",", "20", ",", "5", ")", "\n", "y", "=", "np", ".", "asarray", "(", "[", "0.016543331908527525", ",", "\n", "0.05896692669373804", ",", "\n", "0.11645116477879891", ",", "\n", "0.2582616477879889", ",", "\n", "0.4091218743321222", ",", "\n", "0.5840724513784997", ",", "\n", "0.7650472857448173", ",", "\n", "0.8797486108142767", ",", "\n", "0.9281897841419107", ",", "\n", "0.9404854135499039", ",", "\n", "0.9226664351357128", "]", ")", "\n", "ylower", "=", "np", ".", "asarray", "(", "[", "0.0014893673861935408", ",", "\n", "0.03487657619149398", ",", "\n", "0.08934868561658504", ",", "\n", "0.2130863966659542", ",", "\n", "0.3518981085702073", ",", "\n", "0.5298541354990384", ",", "\n", "0.7198720346227827", ",", "\n", "0.8436097456721523", ",", "\n", "0.9101303697371234", ",", "\n", "0.9194071917076299", ",", "\n", "0.8955639559734987", "]", ")", "\n", "sem", "=", "np", ".", "abs", "(", "y", "-", "ylower", ")", "\n", "N", "=", "13", "\n", "sd", "=", "np", ".", "sqrt", "(", "N", ")", "*", "sem", "\n", "return", "x", ".", "tolist", "(", ")", ",", "y", ".", "tolist", "(", ")", ",", "sd", ".", "tolist", "(", ")", "\n", "", ""]]}