{"home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.code.exp_plot": [[29, 38], ["matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "range", "matplotlib.pyplot.yscale"], "function", ["None"], ["def", "exp_plot", "(", "data", ",", "years", ",", "ylabel_text", ",", "title_text", ",", "log_flag", "=", "True", ")", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "7", ",", "6", ")", ")", "\n", "plt", ".", "plot", "(", "range", "(", "years", "[", "0", "]", ",", "years", "[", "1", "]", ")", ",", "data", ")", "\n", "plt", ".", "xlabel", "(", "'Years'", ",", "fontsize", "=", "7", ")", "\n", "plt", ".", "ylabel", "(", "ylabel_text", ",", "fontsize", "=", "7", ")", "\n", "plt", ".", "title", "(", "title_text", ",", "fontsize", "=", "10", ")", "\n", "if", "log_flag", "==", "True", ":", "\n", "        ", "plt", ".", "yscale", "(", "'log'", ")", "\n", "", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.code.ichi2": [[162, 165], ["numpy.random.gamma"], "function", ["None"], ["def", "ichi2", "(", "df", ",", "scale", ")", ":", "\n", "    ", "shape", "=", "df", "/", "2", "\n", "return", "(", "(", "shape", "*", "scale", ")", "/", "np", ".", "random", ".", "gamma", "(", "shape", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.code.BayesSimMulti": [[167, 171], ["code.ichi2", "numpy.random.multivariate_normal"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version2.ichi2"], ["", "def", "BayesSimMulti", "(", "coeff", ",", "vhat", ",", "gramMatrix_inverse", ",", "df", ")", ":", "\n", "    ", "simVar", "=", "ichi2", "(", "df", ",", "vhat", ")", "# Simulated variance", "\n", "simCoeff", "=", "np", ".", "random", ".", "multivariate_normal", "(", "coeff", ",", "simVar", "*", "gramMatrix_inverse", ")", "# Sim coefficient", "\n", "return", "(", "simVar", ",", "simCoeff", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.code.kernel": [[234, 243], ["numpy.random.normal", "range", "numpy.random.choice", "output.append"], "function", ["None"], ["def", "kernel", "(", "nsims", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "rand", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "nsims", ")", "\n", "H", "=", "(", "(", "4", "/", "3", ")", "**", "0.2", ")", "*", "stdREG", "*", "(", "N", "**", "(", "-", "0.2", ")", ")", "\n", "for", "sim", "in", "range", "(", "nsims", ")", ":", "\n", "        ", "x", "=", "np", ".", "random", ".", "choice", "(", "rearngr", ")", "\n", "result", "=", "x", "+", "H", "*", "rand", "[", "sim", "]", "\n", "output", ".", "append", "(", "result", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.code.simulation": [[251, 264], ["code.kernel", "numpy.random.normal", "range", "numpy.mean", "numpy.mean", "idys.append"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.kernel"], ["def", "simulation", "(", "horizon", ",", "initial_bubble", ")", ":", "\n", "    ", "growth", "=", "kernel", "(", "horizon", ")", "\n", "error", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "horizon", ")", "\n", "idys", "=", "[", "]", "#here we write our implied dividend yield terms", "\n", "#this is cumulative sum of implied dividend yield terms: Bubble measure, not detrended", "\n", "Current_bubble", "=", "initial_bubble", "\n", "for", "t", "in", "range", "(", "horizon", ")", ":", "\n", "        ", "idy", "=", "intercept", "+", "REG_coeff", "*", "growth", "[", "t", "]", "+", "bubble_measure_coeff", "*", "Current_bubble", "+", "trend_coeff", "*", "t", "+", "stderr", "*", "error", "[", "t", "]", "\n", "Current_bubble", "=", "Current_bubble", "+", "idy", "\n", "idys", ".", "append", "(", "idy", ")", "\n", "", "avgidy", "=", "np", ".", "mean", "(", "idys", ")", "#average simulated implied dividend yield terms", "\n", "avgREG", "=", "np", ".", "mean", "(", "growth", ")", "#average simulated real earnings growth terms", "\n", "return", "avgidy", "+", "avgREG", "#average simulated total real return", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.code.finalSim": [[266, 283], ["print", "print", "range", "matplotlib.pyplot.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "print", "print", "print", "print", "print", "str", "output.append", "round", "round", "round", "round", "round", "str", "round", "code.simulation", "numpy.percentile", "numpy.percentile", "numpy.percentile", "numpy.mean", "numpy.std"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.simulation"], ["", "def", "finalSim", "(", "horizon", ",", "initial_bubble", ")", ":", "\n", "    ", "print", "(", "'Horizon = '", ",", "horizon", ")", "\n", "print", "(", "'Bubble = '", ",", "initial_bubble", ")", "\n", "output", "=", "[", "]", "\n", "caption", "=", "str", "(", "horizon", ")", "+", "' years, initial bubble measure '", "+", "str", "(", "round", "(", "initial_bubble", ",", "3", ")", ")", "\n", "for", "sim", "in", "range", "(", "NSIMS", ")", ":", "\n", "        ", "output", ".", "append", "(", "simulation", "(", "horizon", ",", "initial_bubble", ")", ")", "\n", "", "plt", ".", "hist", "(", "output", ",", "bins", "=", "100", ")", "\n", "plt", ".", "xlabel", "(", "'average total real return'", ")", "\n", "plt", ".", "title", "(", "caption", ")", "\n", "plt", ".", "show", "(", ")", "\n", "print", "(", "'VaR 99% = '", ",", "round", "(", "np", ".", "percentile", "(", "output", ",", "1", ")", ",", "5", ")", ")", "\n", "print", "(", "'VaR 95% = '", ",", "round", "(", "np", ".", "percentile", "(", "output", ",", "5", ")", ",", "5", ")", ")", "\n", "print", "(", "'VaR 90% = '", ",", "round", "(", "np", ".", "percentile", "(", "output", ",", "10", ")", ",", "5", ")", ")", "\n", "print", "(", "'mean = '", ",", "round", "(", "np", ".", "mean", "(", "output", ")", ",", "5", ")", ")", "\n", "print", "(", "'stdev = '", ",", "round", "(", "np", ".", "std", "(", "output", ")", ",", "5", ")", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.code.simulation_withdraw": [[291, 311], ["code.kernel", "numpy.random.normal", "numpy.exp", "numpy.log"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.kernel"], ["def", "simulation_withdraw", "(", "horizon", ",", "withdraw_rate", ",", "initial_bubble", ")", ":", "\n", "    ", "growth", "=", "kernel", "(", "horizon", ")", "\n", "error", "=", "np", ".", "random", ".", "normal", "(", "0", ",", "1", ",", "horizon", ")", "\n", "Current_bubble", "=", "initial_bubble", "\n", "Current_wealth", "=", "1", "\n", "t", "=", "0", "\n", "boolean", "=", "True", "#Break the loop after horizon steps or after ruin", "\n", "while", "boolean", ":", "\n", "        ", "idy", "=", "intercept", "+", "REG_coeff", "*", "growth", "[", "t", "]", "+", "bubble_measure_coeff", "*", "Current_bubble", "+", "trend_coeff", "*", "t", "+", "stderr", "*", "error", "[", "t", "]", "\n", "Current_bubble", "=", "Current_bubble", "+", "idy", "\n", "Current_wealth", "=", "(", "Current_wealth", "-", "withdraw_rate", ")", "*", "np", ".", "exp", "(", "idy", "+", "growth", "[", "t", "]", ")", "\n", "t", "=", "t", "+", "1", "\n", "if", "(", "Current_wealth", "<", "0", ")", ":", "#Ruin ", "\n", "            ", "boolean", "=", "False", "\n", "", "if", "(", "t", "==", "horizon", ")", ":", "#End of simulation, reached time horizon without ruin", "\n", "            ", "boolean", "=", "False", "\n", "", "", "if", "(", "Current_wealth", ">", "0", ")", ":", "#The case of no ruin, reached time horizon", "\n", "        ", "return", "(", "'fine'", ",", "np", ".", "log", "(", "Current_wealth", ")", ")", "\n", "", "if", "(", "Current_wealth", "<", "0", ")", ":", "#The case of ruin", "\n", "        ", "return", "(", "'ruin'", ",", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.code.withdrawal": [[313, 346], ["print", "print", "print", "range", "print", "str", "code.simulation_withdraw", "len", "matplotlib.pyplot.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "print", "print", "print", "print", "print", "len", "int", "matplotlib.pyplot.hist", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "print", "print", "sum", "round", "all_ruined.append", "all_wealth.append", "len", "round", "round", "round", "round", "round", "round", "round", "str", "numpy.percentile", "numpy.percentile", "numpy.percentile", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "str"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.simulation_withdraw"], ["", "", "def", "withdrawal", "(", "horizon", ",", "withdraw_rate", ",", "initial_bubble", ")", ":", "\n", "    ", "print", "(", "'Horizon = '", ",", "horizon", ")", "\n", "print", "(", "'Bubble = '", ",", "initial_bubble", ")", "\n", "print", "(", "'Withdrawal rate = '", ",", "withdraw_rate", ")", "\n", "caption", "=", "'horizon '", "+", "str", "(", "horizon", ")", "+", "' withdraw '", "+", "str", "(", "withdraw_rate", ")", "+", "' initial bubble measure '", "+", "str", "(", "round", "(", "initial_bubble", ",", "4", ")", ")", "\n", "all_wealth", "=", "[", "]", "#Here we write log wealth for sims when no ruin", "\n", "all_ruined", "=", "[", "]", "#Here we write ruin time for sims with ruin", "\n", "for", "sim", "in", "range", "(", "NSIMS", ")", ":", "\n", "        ", "result", ",", "output", "=", "simulation_withdraw", "(", "horizon", ",", "withdraw_rate", ",", "initial_bubble", ")", "\n", "if", "result", "==", "'ruin'", ":", "\n", "            ", "all_ruined", ".", "append", "(", "output", ")", "\n", "", "if", "result", "==", "'fine'", ":", "\n", "            ", "all_wealth", ".", "append", "(", "output", ")", "\n", "", "", "print", "(", "'Ruin probability'", ",", "len", "(", "all_ruined", ")", "/", "NSIMS", ")", "\n", "if", "(", "len", "(", "all_wealth", ")", ">", "0", ")", ":", "#If there are some sims with no ruin", "\n", "        ", "plt", ".", "hist", "(", "all_wealth", ",", "bins", "=", "100", ")", "\n", "plt", ".", "xlabel", "(", "'Log terminal wealth'", ")", "\n", "plt", ".", "title", "(", "caption", ")", "\n", "plt", ".", "show", "(", ")", "\n", "#These values at risk, mean, and stdev are conditional upon no ruin", "\n", "print", "(", "'VaR 99% log terminal wealth = '", ",", "round", "(", "np", ".", "percentile", "(", "all_wealth", ",", "1", ")", ",", "5", ")", ")", "\n", "print", "(", "'VaR 95% log terminal wealth = '", ",", "round", "(", "np", ".", "percentile", "(", "all_wealth", ",", "5", ")", ",", "5", ")", ")", "\n", "print", "(", "'VaR 90% log terminal wealth = '", ",", "round", "(", "np", ".", "percentile", "(", "all_wealth", ",", "10", ")", ",", "5", ")", ")", "\n", "print", "(", "'mean log terminal wealth = '", ",", "round", "(", "np", ".", "mean", "(", "all_wealth", ")", ",", "5", ")", ")", "\n", "print", "(", "'stdev log terminal wealth = '", ",", "round", "(", "np", ".", "std", "(", "all_wealth", ")", ",", "5", ")", ")", "\n", "", "if", "(", "len", "(", "all_ruined", ")", ">", "int", "(", "0.01", "*", "NSIMS", ")", ")", ":", "#If ruin probability is > 1%", "\n", "        ", "plt", ".", "hist", "(", "all_ruined", ")", "\n", "plt", ".", "title", "(", "'Ruin time'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "print", "(", "'mean ruin time = '", ",", "round", "(", "np", ".", "mean", "(", "all_ruined", ")", ",", "5", ")", ")", "#mean of ruin time", "\n", "print", "(", "'stdev ruin time = '", ",", "round", "(", "np", ".", "std", "(", "all_ruined", ")", ",", "5", ")", ")", "#stdev of ruin time", "\n", "#breakeven probability: even after withdrawals, terminal wealth is greater than initial wealth 1", "\n", "", "return", "sum", "(", "[", "item", ">", "0", "for", "item", "in", "all_wealth", "]", ")", "/", "NSIMS", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.exp_plot": [[26, 35], ["matplotlib.pyplot.figure", "matplotlib.pyplot.plot", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.ylabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "range", "matplotlib.pyplot.yscale"], "function", ["None"], ["def", "exp_plot", "(", "data", ",", "years", ",", "ylabel_text", ",", "title_text", ",", "log_flag", "=", "True", ")", ":", "\n", "    ", "plt", ".", "figure", "(", "figsize", "=", "(", "7", ",", "6", ")", ")", "\n", "plt", ".", "plot", "(", "range", "(", "years", "[", "0", "]", ",", "years", "[", "1", "]", ")", ",", "data", ")", "\n", "plt", ".", "xlabel", "(", "'Years'", ",", "fontsize", "=", "7", ")", "\n", "plt", ".", "ylabel", "(", "ylabel_text", ",", "fontsize", "=", "7", ")", "\n", "plt", ".", "title", "(", "title_text", ",", "fontsize", "=", "10", ")", "\n", "if", "log_flag", "==", "True", ":", "\n", "        ", "plt", ".", "yscale", "(", "'log'", ")", "\n", "", "plt", ".", "show", "(", ")", "\n", "#Real values of dividends, earnings, and index    ", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.kernel": [[121, 130], ["numpy.random.normal", "range", "numpy.random.choice", "output.append"], "function", ["None"], ["def", "kernel", "(", "nsims", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "rand", "=", "random", ".", "normal", "(", "0", ",", "1", ",", "nsims", ")", "\n", "H", "=", "(", "(", "4", "/", "3", ")", "**", "0.2", ")", "*", "stdREG", "*", "(", "N", "**", "(", "-", "0.2", ")", ")", "\n", "for", "sim", "in", "range", "(", "nsims", ")", ":", "\n", "        ", "x", "=", "random", ".", "choice", "(", "rearngr", ")", "\n", "result", "=", "x", "+", "H", "*", "rand", "[", "sim", "]", "\n", "output", ".", "append", "(", "result", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.simulation": [[138, 151], ["version3.kernel", "numpy.random.normal", "range", "numpy.mean", "numpy.mean", "idys.append"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.kernel"], ["def", "simulation", "(", "horizon", ",", "initial_bubble", ")", ":", "\n", "    ", "growth", "=", "kernel", "(", "horizon", ")", "\n", "error", "=", "random", ".", "normal", "(", "0", ",", "1", ",", "horizon", ")", "\n", "idys", "=", "[", "]", "#here we write our implied dividend yield terms", "\n", "#this is cumulative sum of implied dividend yield terms: Bubble measure, not detrended", "\n", "Current_bubble", "=", "initial_bubble", "\n", "for", "t", "in", "range", "(", "horizon", ")", ":", "\n", "        ", "idy", "=", "intercept", "+", "REG_coeff", "*", "growth", "[", "t", "]", "+", "bubble_measure_coeff", "*", "Current_bubble", "+", "trend_coeff", "*", "t", "+", "stderr", "*", "error", "[", "t", "]", "\n", "Current_bubble", "=", "Current_bubble", "+", "idy", "\n", "idys", ".", "append", "(", "idy", ")", "\n", "", "avgidy", "=", "np", ".", "mean", "(", "idys", ")", "#average simulated implied dividend yield terms", "\n", "avgREG", "=", "np", ".", "mean", "(", "growth", ")", "#average simulated real earnings growth terms", "\n", "return", "avgidy", "+", "avgREG", "#average simulated total real return", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.finalSim": [[153, 170], ["print", "print", "range", "matplotlib.pyplot.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "print", "print", "print", "print", "print", "str", "output.append", "round", "round", "round", "round", "round", "str", "round", "version3.simulation", "numpy.percentile", "numpy.percentile", "numpy.percentile", "numpy.mean", "numpy.std"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.simulation"], ["", "def", "finalSim", "(", "horizon", ",", "initial_bubble", ")", ":", "\n", "    ", "print", "(", "'Horizon = '", ",", "horizon", ")", "\n", "print", "(", "'Bubble = '", ",", "initial_bubble", ")", "\n", "output", "=", "[", "]", "\n", "caption", "=", "str", "(", "horizon", ")", "+", "' years, initial bubble measure '", "+", "str", "(", "round", "(", "initial_bubble", ",", "3", ")", ")", "\n", "for", "sim", "in", "range", "(", "NSIMS", ")", ":", "\n", "        ", "output", ".", "append", "(", "simulation", "(", "horizon", ",", "initial_bubble", ")", ")", "\n", "", "plt", ".", "hist", "(", "output", ",", "bins", "=", "100", ")", "\n", "plt", ".", "xlabel", "(", "'average total real return'", ")", "\n", "plt", ".", "title", "(", "caption", ")", "\n", "plt", ".", "show", "(", ")", "\n", "print", "(", "'VaR 99% = '", ",", "round", "(", "np", ".", "percentile", "(", "output", ",", "1", ")", ",", "5", ")", ")", "\n", "print", "(", "'VaR 95% = '", ",", "round", "(", "np", ".", "percentile", "(", "output", ",", "5", ")", ",", "5", ")", ")", "\n", "print", "(", "'VaR 90% = '", ",", "round", "(", "np", ".", "percentile", "(", "output", ",", "10", ")", ",", "5", ")", ")", "\n", "print", "(", "'mean = '", ",", "round", "(", "np", ".", "mean", "(", "output", ")", ",", "5", ")", ")", "\n", "print", "(", "'stdev = '", ",", "round", "(", "np", ".", "std", "(", "output", ")", ",", "5", ")", ")", "\n", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.simulation_withdraw": [[178, 198], ["version3.kernel", "numpy.random.normal", "numpy.exp", "numpy.log"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.kernel"], ["def", "simulation_withdraw", "(", "horizon", ",", "withdraw_rate", ",", "initial_bubble", ")", ":", "\n", "    ", "growth", "=", "kernel", "(", "horizon", ")", "\n", "error", "=", "random", ".", "normal", "(", "0", ",", "1", ",", "horizon", ")", "\n", "Current_bubble", "=", "initial_bubble", "\n", "Current_wealth", "=", "1", "\n", "t", "=", "0", "\n", "boolean", "=", "True", "#Break the loop after horizon steps or after ruin", "\n", "while", "boolean", ":", "\n", "        ", "idy", "=", "intercept", "+", "REG_coeff", "*", "growth", "[", "t", "]", "+", "bubble_measure_coeff", "*", "Current_bubble", "+", "trend_coeff", "*", "t", "+", "stderr", "*", "error", "[", "t", "]", "\n", "Current_bubble", "=", "Current_bubble", "+", "idy", "\n", "Current_wealth", "=", "(", "Current_wealth", "-", "withdraw_rate", ")", "*", "np", ".", "exp", "(", "idy", "+", "growth", "[", "t", "]", ")", "\n", "t", "=", "t", "+", "1", "\n", "if", "(", "Current_wealth", "<", "0", ")", ":", "#Ruin ", "\n", "            ", "boolean", "=", "False", "\n", "", "if", "(", "t", "==", "horizon", ")", ":", "#End of simulation, reached time horizon without ruin", "\n", "            ", "boolean", "=", "False", "\n", "", "", "if", "(", "Current_wealth", ">", "0", ")", ":", "#The case of no ruin, reached time horizon", "\n", "        ", "return", "(", "'fine'", ",", "np", ".", "log", "(", "Current_wealth", ")", ")", "\n", "", "if", "(", "Current_wealth", "<", "0", ")", ":", "#The case of ruin", "\n", "        ", "return", "(", "'ruin'", ",", "t", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.withdrawal": [[200, 233], ["print", "print", "print", "range", "print", "str", "version3.simulation_withdraw", "len", "matplotlib.pyplot.hist", "matplotlib.pyplot.xlabel", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "print", "print", "print", "print", "print", "len", "int", "matplotlib.pyplot.hist", "matplotlib.pyplot.title", "matplotlib.pyplot.show", "print", "print", "sum", "round", "all_ruined.append", "all_wealth.append", "len", "round", "round", "round", "round", "round", "round", "round", "str", "numpy.percentile", "numpy.percentile", "numpy.percentile", "numpy.mean", "numpy.std", "numpy.mean", "numpy.std", "str"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version3.simulation_withdraw"], ["", "", "def", "withdrawal", "(", "horizon", ",", "withdraw_rate", ",", "initial_bubble", ")", ":", "\n", "    ", "print", "(", "'Horizon = '", ",", "horizon", ")", "\n", "print", "(", "'Bubble = '", ",", "initial_bubble", ")", "\n", "print", "(", "'Withdrawal rate = '", ",", "withdraw_rate", ")", "\n", "caption", "=", "'horizon '", "+", "str", "(", "horizon", ")", "+", "' withdraw '", "+", "str", "(", "withdraw_rate", ")", "+", "' initial bubble measure '", "+", "str", "(", "round", "(", "initial_bubble", ",", "4", ")", ")", "\n", "all_wealth", "=", "[", "]", "#Here we write log wealth for sims when no ruin", "\n", "all_ruined", "=", "[", "]", "#Here we write ruin time for sims with ruin", "\n", "for", "sim", "in", "range", "(", "NSIMS", ")", ":", "\n", "        ", "result", ",", "output", "=", "simulation_withdraw", "(", "horizon", ",", "withdraw_rate", ",", "initial_bubble", ")", "\n", "if", "result", "==", "'ruin'", ":", "\n", "            ", "all_ruined", ".", "append", "(", "output", ")", "\n", "", "if", "result", "==", "'fine'", ":", "\n", "            ", "all_wealth", ".", "append", "(", "output", ")", "\n", "", "", "print", "(", "'Ruin probability'", ",", "len", "(", "all_ruined", ")", "/", "NSIMS", ")", "\n", "if", "(", "len", "(", "all_wealth", ")", ">", "0", ")", ":", "#If there are some sims with no ruin", "\n", "        ", "plt", ".", "hist", "(", "all_wealth", ",", "bins", "=", "100", ")", "\n", "plt", ".", "xlabel", "(", "'Log terminal wealth'", ")", "\n", "plt", ".", "title", "(", "caption", ")", "\n", "plt", ".", "show", "(", ")", "\n", "#These values at risk, mean, and stdev are conditional upon no ruin", "\n", "print", "(", "'VaR 99% log terminal wealth = '", ",", "round", "(", "np", ".", "percentile", "(", "all_wealth", ",", "1", ")", ",", "5", ")", ")", "\n", "print", "(", "'VaR 95% log terminal wealth = '", ",", "round", "(", "np", ".", "percentile", "(", "all_wealth", ",", "5", ")", ",", "5", ")", ")", "\n", "print", "(", "'VaR 90% log terminal wealth = '", ",", "round", "(", "np", ".", "percentile", "(", "all_wealth", ",", "10", ")", ",", "5", ")", ")", "\n", "print", "(", "'mean log terminal wealth = '", ",", "round", "(", "np", ".", "mean", "(", "all_wealth", ")", ",", "5", ")", ")", "\n", "print", "(", "'stdev log terminal wealth = '", ",", "round", "(", "np", ".", "std", "(", "all_wealth", ")", ",", "5", ")", ")", "\n", "", "if", "(", "len", "(", "all_ruined", ")", ">", "int", "(", "0.01", "*", "NSIMS", ")", ")", ":", "#If ruin probability is > 1%", "\n", "        ", "plt", ".", "hist", "(", "all_ruined", ")", "\n", "plt", ".", "title", "(", "'Ruin time'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "print", "(", "'mean ruin time = '", ",", "round", "(", "np", ".", "mean", "(", "all_ruined", ")", ",", "5", ")", ")", "#mean of ruin time", "\n", "print", "(", "'stdev ruin time = '", ",", "round", "(", "np", ".", "std", "(", "all_ruined", ")", ",", "5", ")", ")", "#stdev of ruin time", "\n", "#breakeven probability: even after withdrawals, terminal wealth is greater than initial wealth 1", "\n", "", "return", "sum", "(", "[", "item", ">", "0", "for", "item", "in", "all_wealth", "]", ")", "/", "NSIMS", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version1.ichi2": [[17, 20], ["numpy.random.gamma"], "function", ["None"], ["def", "ichi2", "(", "degFreedom", ",", "scale", ")", ":", "\n", "    ", "shape", "=", "degFreedom", "/", "2", "\n", "return", "(", "(", "shape", "*", "scale", ")", "/", "random", ".", "gamma", "(", "shape", ")", ")", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version1.BayesianRegression": [[23, 37], ["len", "numpy.linalg.inv", "linalg.inv.dot", "version1.ichi2", "numpy.random.multivariate_normal", "numpy.dot", "numpy.dot", "sum", "sum", "len", "numpy.dot", "sum", "range"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version2.ichi2"], ["", "def", "BayesianRegression", "(", "x", ",", "y", ")", ":", "\n", "    ", "n", "=", "len", "(", "x", ")", "\n", "M", "=", "[", "[", "np", ".", "dot", "(", "x", ",", "x", ")", ",", "sum", "(", "x", ")", "]", ",", "[", "sum", "(", "x", ")", ",", "len", "(", "x", ")", "]", "]", "\n", "invM", "=", "linalg", ".", "inv", "(", "M", ")", "\n", "coeff", "=", "invM", ".", "dot", "(", "[", "np", ".", "dot", "(", "x", ",", "y", ")", ",", "sum", "(", "y", ")", "]", ")", "\n", "slope", "=", "coeff", "[", "0", "]", "\n", "intercept", "=", "coeff", "[", "1", "]", "\n", "residuals", "=", "[", "y", "[", "k", "]", "-", "slope", "*", "x", "[", "k", "]", "-", "intercept", "for", "k", "in", "range", "(", "n", ")", "]", "\n", "var", "=", "np", ".", "dot", "(", "residuals", ",", "residuals", ")", "/", "(", "n", "-", "2", ")", "\n", "simVar", "=", "ichi2", "(", "n", "-", "2", ",", "var", ")", "\n", "simCoeff", "=", "random", ".", "multivariate_normal", "(", "coeff", ",", "invM", "*", "simVar", ")", "\n", "simSlope", "=", "simCoeff", "[", "0", "]", "\n", "simIntercept", "=", "simCoeff", "[", "1", "]", "\n", "return", "(", "simSlope", ",", "simIntercept", ",", "simVar", ")", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version1.regress": [[41, 47], ["numpy.size", "scipy.stats.linregress", "numpy.array", "numpy.std", "range"], "function", ["None"], ["", "def", "regress", "(", "x", ",", "y", ")", ":", "\n", "    ", "n", "=", "np", ".", "size", "(", "x", ")", "\n", "results", "=", "stats", ".", "linregress", "(", "x", ",", "y", ")", "\n", "residuals", "=", "np", ".", "array", "(", "[", "y", "[", "k", "]", "-", "x", "[", "k", "]", "*", "results", ".", "slope", "-", "results", ".", "intercept", "for", "k", "in", "range", "(", "n", ")", "]", ")", "\n", "stdDev", "=", "np", ".", "std", "(", "residuals", ")", "\n", "return", "[", "results", ".", "slope", ",", "results", ".", "intercept", ",", "stdDev", ",", "results", ".", "rvalue", "]", "\n", "#", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version2.ichi2": [[16, 19], ["numpy.random.gamma"], "function", ["None"], ["def", "ichi2", "(", "df", ",", "scale", ")", ":", "\n", "    ", "shape", "=", "df", "/", "2", "\n", "return", "(", "(", "shape", "*", "scale", ")", "/", "numpy", ".", "random", ".", "gamma", "(", "shape", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version2.BayesSimMulti": [[21, 25], ["version2.ichi2", "numpy.random.multivariate_normal"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version2.ichi2"], ["", "def", "BayesSimMulti", "(", "coeff", ",", "vhat", ",", "gramMatrix_inverse", ",", "df", ")", ":", "\n", "    ", "simVar", "=", "ichi2", "(", "df", ",", "vhat", ")", "# Simulated variance", "\n", "simCoeff", "=", "numpy", ".", "random", ".", "multivariate_normal", "(", "coeff", ",", "simVar", "*", "gramMatrix_inverse", ")", "# Sim coefficient", "\n", "return", "(", "simVar", ",", "simCoeff", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version2.BayesSim": [[26, 30], ["version2.ichi2", "numpy.random.normal"], "function", ["home.repos.pwc.inspect_result.asarantsev_BayesianLT.None.version2.ichi2"], ["", "def", "BayesSim", "(", "coeff", ",", "vhat", ",", "gramMatrix_inverse", ",", "df", ")", ":", "\n", "    ", "simVar", "=", "ichi2", "(", "df", ",", "vhat", ")", "# Simulated variance", "\n", "simCoeff", "=", "numpy", ".", "random", ".", "normal", "(", "coeff", ",", "simVar", "*", "gramMatrix_inverse", ")", "# Sim coefficient", "\n", "return", "(", "simVar", ",", "simCoeff", ")", "\n", "# Here we read the data ", "\n"]]}