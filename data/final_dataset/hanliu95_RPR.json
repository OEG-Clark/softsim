{"home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.clean_str": [[10, 28], ["re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub", "re.sub.strip().lower", "re.sub.strip"], "function", ["None"], ["def", "clean_str", "(", "string", ")", ":", "\n", "    ", "'''\n    string cleaning\n    '''", "\n", "string", "=", "re", ".", "sub", "(", "r\"[^A-Za-z]\"", ",", "\" \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'s\"", ",", "\" \\'s\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'ve\"", ",", "\" \\'ve\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"n\\'t\"", ",", "\" n\\'t\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'re\"", ",", "\" \\'re\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'d\"", ",", "\" \\'d\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\'ll\"", ",", "\" \\'ll\"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\",\"", ",", "\" , \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"!\"", ",", "\" ! \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\(\"", ",", "\" \\( \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\)\"", ",", "\" \\) \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\?\"", ",", "\" \\? \"", ",", "string", ")", "\n", "string", "=", "re", ".", "sub", "(", "r\"\\s{2,}\"", ",", "\" \"", ",", "string", ")", "\n", "return", "string", ".", "strip", "(", ")", ".", "lower", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.load_data_and_labels": [[31, 146], ["open", "open", "open", "open", "open", "pickle.load", "pickle.load", "pickle.load", "pickle.load", "print", "print", "open", "numpy.array", "numpy.sort", "numpy.array", "numpy.sort", "numpy.array", "numpy.sort", "numpy.array", "numpy.sort", "len", "len", "print", "print", "line.split.split", "int", "int", "uid_train.append", "iid_train.append", "u_pos_text.__contains__", "u_neg_text.__contains__", "i_pos_text.__contains__", "i_neg_text.__contains__", "y_train.append", "line.split.split", "int", "int", "uid_valid.append", "iid_valid.append", "y_valid.append", "data_pro.clean_str", "u_pos_text[].split", "data_pro.clean_str", "u_neg_text[].split", "data_pro.clean_str", "i_pos_text[].split", "data_pro.clean_str", "i_neg_text[].split", "float", "float", "len", "len", "len", "len", "u_pos_text.values", "int", "u_neg_text.values", "int", "i_pos_text.values", "int", "i_neg_text.values", "int", "s.strip", "s.strip", "s.strip", "s.strip", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.clean_str", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.clean_str", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.clean_str", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.clean_str"], ["", "def", "load_data_and_labels", "(", "train_data", ",", "valid_data", ",", "user_pos_review", ",", "user_neg_review", ",", "item_pos_review", ",", "item_neg_review", ")", ":", "\n", "    ", "'''\n    Load polarity data from files, split the data into words and generate label.\n    Return split sentences and labels\n    '''", "\n", "f_train", "=", "open", "(", "train_data", ",", "'r'", ")", "\n", "f1", "=", "open", "(", "user_pos_review", ",", "'rb'", ")", "\n", "f2", "=", "open", "(", "user_neg_review", ",", "'rb'", ")", "\n", "f3", "=", "open", "(", "item_pos_review", ",", "'rb'", ")", "\n", "f4", "=", "open", "(", "item_neg_review", ",", "'rb'", ")", "\n", "\n", "user_pos_reviews", "=", "pickle", ".", "load", "(", "f1", ")", "\n", "user_neg_reviews", "=", "pickle", ".", "load", "(", "f2", ")", "\n", "item_pos_reviews", "=", "pickle", ".", "load", "(", "f3", ")", "\n", "item_neg_reviews", "=", "pickle", ".", "load", "(", "f4", ")", "\n", "\n", "uid_train", "=", "[", "]", "\n", "iid_train", "=", "[", "]", "\n", "y_train", "=", "[", "]", "\n", "u_pos_text", "=", "{", "}", "\n", "u_neg_text", "=", "{", "}", "\n", "i_pos_text", "=", "{", "}", "\n", "i_neg_text", "=", "{", "}", "\n", "\n", "i", "=", "0", "\n", "for", "line", "in", "f_train", ":", "\n", "        ", "i", "=", "i", "+", "1", "\n", "line", "=", "line", ".", "split", "(", "','", ")", "\n", "uid", "=", "int", "(", "line", "[", "0", "]", ")", "\n", "iid", "=", "int", "(", "line", "[", "1", "]", ")", "\n", "uid_train", ".", "append", "(", "uid", ")", "\n", "iid_train", ".", "append", "(", "iid", ")", "\n", "\n", "if", "u_pos_text", ".", "__contains__", "(", "uid", ")", ":", "\n", "            ", "a", "=", "1", "\n", "", "else", ":", "\n", "            ", "u_pos_text", "[", "uid", "]", "=", "'<PAD/>'", "\n", "if", "uid", "in", "user_pos_reviews", ":", "\n", "                ", "for", "s", "in", "user_pos_reviews", "[", "uid", "]", ":", "\n", "                    ", "u_pos_text", "[", "uid", "]", "=", "u_pos_text", "[", "uid", "]", "+", "' '", "+", "s", ".", "strip", "(", ")", "\n", "", "", "u_pos_text", "[", "uid", "]", "=", "clean_str", "(", "u_pos_text", "[", "uid", "]", ")", "\n", "u_pos_text", "[", "uid", "]", "=", "u_pos_text", "[", "uid", "]", ".", "split", "(", "\" \"", ")", "\n", "\n", "\n", "", "if", "u_neg_text", ".", "__contains__", "(", "uid", ")", ":", "\n", "            ", "a", "=", "1", "\n", "", "else", ":", "\n", "            ", "u_neg_text", "[", "uid", "]", "=", "'<PAD/>'", "\n", "if", "uid", "in", "user_neg_reviews", ":", "\n", "                ", "for", "s", "in", "user_neg_reviews", "[", "uid", "]", ":", "\n", "                    ", "u_neg_text", "[", "uid", "]", "=", "u_neg_text", "[", "uid", "]", "+", "' '", "+", "s", ".", "strip", "(", ")", "\n", "", "", "u_neg_text", "[", "uid", "]", "=", "clean_str", "(", "u_neg_text", "[", "uid", "]", ")", "\n", "u_neg_text", "[", "uid", "]", "=", "u_neg_text", "[", "uid", "]", ".", "split", "(", "\" \"", ")", "\n", "\n", "", "if", "i_pos_text", ".", "__contains__", "(", "iid", ")", ":", "\n", "            ", "a", "=", "1", "\n", "", "else", ":", "\n", "            ", "i_pos_text", "[", "iid", "]", "=", "'<PAD/>'", "\n", "if", "iid", "in", "item_pos_reviews", ":", "\n", "                ", "for", "s", "in", "item_pos_reviews", "[", "iid", "]", ":", "\n", "                    ", "i_pos_text", "[", "iid", "]", "=", "i_pos_text", "[", "iid", "]", "+", "' '", "+", "s", ".", "strip", "(", ")", "\n", "", "", "i_pos_text", "[", "iid", "]", "=", "clean_str", "(", "i_pos_text", "[", "iid", "]", ")", "\n", "i_pos_text", "[", "iid", "]", "=", "i_pos_text", "[", "iid", "]", ".", "split", "(", "\" \"", ")", "\n", "\n", "", "if", "i_neg_text", ".", "__contains__", "(", "iid", ")", ":", "\n", "            ", "a", "=", "1", "\n", "", "else", ":", "\n", "            ", "i_neg_text", "[", "iid", "]", "=", "'<PAD/>'", "\n", "if", "iid", "in", "item_neg_reviews", ":", "\n", "                ", "for", "s", "in", "item_neg_reviews", "[", "iid", "]", ":", "\n", "                    ", "i_neg_text", "[", "iid", "]", "=", "i_neg_text", "[", "iid", "]", "+", "' '", "+", "s", ".", "strip", "(", ")", "\n", "", "", "i_neg_text", "[", "iid", "]", "=", "clean_str", "(", "i_neg_text", "[", "iid", "]", ")", "\n", "i_neg_text", "[", "iid", "]", "=", "i_neg_text", "[", "iid", "]", ".", "split", "(", "\" \"", ")", "\n", "\n", "", "y_train", ".", "append", "(", "float", "(", "line", "[", "2", "]", ")", ")", "\n", "", "print", "(", "'***'", ")", "\n", "print", "(", "i_neg_text", ")", "\n", "\n", "# valid", "\n", "uid_valid", "=", "[", "]", "\n", "iid_valid", "=", "[", "]", "\n", "y_valid", "=", "[", "]", "\n", "f_valid", "=", "open", "(", "valid_data", ")", "\n", "\n", "for", "line", "in", "f_valid", ":", "\n", "        ", "line", "=", "line", ".", "split", "(", "','", ")", "\n", "uid", "=", "int", "(", "line", "[", "0", "]", ")", "\n", "iid", "=", "int", "(", "line", "[", "1", "]", ")", "\n", "uid_valid", ".", "append", "(", "uid", ")", "\n", "iid_valid", ".", "append", "(", "iid", ")", "\n", "y_valid", ".", "append", "(", "float", "(", "line", "[", "2", "]", ")", ")", "\n", "\n", "# length", "\n", "", "u_pos", "=", "np", ".", "array", "(", "[", "len", "(", "x", ")", "for", "x", "in", "u_pos_text", ".", "values", "(", ")", "]", ")", "\n", "x", "=", "np", ".", "sort", "(", "u_pos", ")", "\n", "u_pos_len", "=", "x", "[", "int", "(", "0.5", "*", "len", "(", "u_pos", ")", ")", "-", "1", "]", "\n", "\n", "u_neg", "=", "np", ".", "array", "(", "[", "len", "(", "x", ")", "for", "x", "in", "u_neg_text", ".", "values", "(", ")", "]", ")", "\n", "x", "=", "np", ".", "sort", "(", "u_neg", ")", "\n", "u_neg_len", "=", "x", "[", "int", "(", "0.85", "*", "len", "(", "u_neg", ")", ")", "-", "1", "]", "\n", "\n", "i_pos", "=", "np", ".", "array", "(", "[", "len", "(", "x", ")", "for", "x", "in", "i_pos_text", ".", "values", "(", ")", "]", ")", "\n", "x", "=", "np", ".", "sort", "(", "i_pos", ")", "\n", "i_pos_len", "=", "x", "[", "int", "(", "0.5", "*", "len", "(", "i_pos", ")", ")", "-", "1", "]", "\n", "\n", "i_neg", "=", "np", ".", "array", "(", "[", "len", "(", "x", ")", "for", "x", "in", "i_neg_text", ".", "values", "(", ")", "]", ")", "\n", "x", "=", "np", ".", "sort", "(", "i_neg", ")", "\n", "i_neg_len", "=", "x", "[", "int", "(", "0.85", "*", "len", "(", "i_neg", ")", ")", "-", "1", "]", "\n", "\n", "user_num", "=", "len", "(", "u_pos_text", ")", "\n", "item_num", "=", "len", "(", "i_pos_text", ")", "\n", "print", "(", "\"user_num\"", ",", "user_num", ")", "\n", "print", "(", "\"item_num\"", ",", "item_num", ")", "\n", "return", "[", "u_pos_text", ",", "u_neg_text", ",", "i_pos_text", ",", "i_neg_text", ",", "y_train", ",", "y_valid", ",", "u_pos_len", ",", "u_neg_len", ",", "i_pos_len", ",", "i_neg_len", ",", "uid_train", ",", "iid_train", ",", "uid_valid", ",", "iid_valid", ",", "user_num", ",", "item_num", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.pad_sentences": [[149, 167], ["print", "u_text.keys", "len", "len", "len"], "function", ["None"], ["", "def", "pad_sentences", "(", "u_text", ",", "u_len", ",", "padding_word", "=", "'<PAD/>'", ")", ":", "\n", "    ", "'''\n    Pad all sentences to the same length. The length is defined by the longest sentence.\n    Return padded sentences.\n    '''", "\n", "sequence_length", "=", "u_len", "\n", "u_text2", "=", "{", "}", "\n", "print", "(", "len", "(", "u_text", ")", ")", "\n", "for", "i", "in", "u_text", ".", "keys", "(", ")", ":", "\n", "        ", "sentence", "=", "u_text", "[", "i", "]", "\n", "if", "sequence_length", ">", "len", "(", "sentence", ")", ":", "\n", "            ", "num_padding", "=", "sequence_length", "-", "len", "(", "sentence", ")", "\n", "new_sentence", "=", "sentence", "+", "[", "padding_word", "]", "*", "num_padding", "\n", "u_text2", "[", "i", "]", "=", "new_sentence", "\n", "", "else", ":", "\n", "            ", "new_sentence", "=", "sentence", "[", ":", "sequence_length", "]", "\n", "u_text2", "[", "i", "]", "=", "new_sentence", "\n", "", "", "return", "u_text2", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.build_vocab": [[170, 188], ["collections.Counter", "list", "collections.Counter", "list", "itertools.chain", "sorted", "itertools.chain", "sorted", "collections.Counter.most_common", "enumerate", "collections.Counter.most_common", "enumerate"], "function", ["None"], ["", "def", "build_vocab", "(", "sentences1", ",", "sentences2", ")", ":", "\n", "    ", "'''\n    Build a vocabulary mapping from word to index and based on the sentences.\n    Returns vocabulary mapping and inverse vocabulary mapping.\n    '''", "\n", "# Build vocabulary", "\n", "word_counts1", "=", "Counter", "(", "itertools", ".", "chain", "(", "*", "sentences1", ")", ")", "\n", "vocabulary_inv1", "=", "[", "x", "[", "0", "]", "for", "x", "in", "word_counts1", ".", "most_common", "(", ")", "]", "\n", "vocabulary_inv1", "=", "list", "(", "sorted", "(", "vocabulary_inv1", ")", ")", "\n", "# Mapping from word to index", "\n", "vocabulary1", "=", "{", "x", ":", "i", "for", "i", ",", "x", "in", "enumerate", "(", "vocabulary_inv1", ")", "}", "\n", "\n", "word_counts2", "=", "Counter", "(", "itertools", ".", "chain", "(", "*", "sentences2", ")", ")", "\n", "vocabulary_inv2", "=", "[", "x", "[", "0", "]", "for", "x", "in", "word_counts2", ".", "most_common", "(", ")", "]", "\n", "vocabulary_inv2", "=", "list", "(", "sorted", "(", "vocabulary_inv2", ")", ")", "\n", "# Mapping from word to index", "\n", "vocabulary2", "=", "{", "x", ":", "i", "for", "i", ",", "x", "in", "enumerate", "(", "vocabulary_inv2", ")", "}", "\n", "return", "[", "vocabulary1", ",", "vocabulary_inv1", ",", "vocabulary2", ",", "vocabulary_inv2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.build_input_data": [[191, 207], ["u_text.keys", "i_text.keys", "numpy.array", "numpy.array"], "function", ["None"], ["", "def", "build_input_data", "(", "u_text", ",", "i_text", ",", "vocabulary_u", ",", "vocabulary_i", ")", ":", "\n", "    ", "'''\n    Map sentences and labels to vectors based on a vocabulary.\n    '''", "\n", "u_text2", "=", "{", "}", "\n", "for", "i", "in", "u_text", ".", "keys", "(", ")", ":", "\n", "        ", "u_reviews", "=", "u_text", "[", "i", "]", "\n", "u", "=", "np", ".", "array", "(", "[", "vocabulary_u", "[", "word", "]", "for", "word", "in", "u_reviews", "]", ")", "\n", "u_text2", "[", "i", "]", "=", "u", "\n", "", "i_text2", "=", "{", "}", "\n", "for", "j", "in", "i_text", ".", "keys", "(", ")", ":", "\n", "        ", "i_reviews", "=", "i_text", "[", "j", "]", "\n", "i", "=", "np", ".", "array", "(", "[", "vocabulary_i", "[", "word", "]", "for", "word", "in", "i_reviews", "]", ")", "\n", "i_text2", "[", "j", "]", "=", "i", "\n", "\n", "", "return", "u_text2", ",", "i_text2", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.load_data": [[210, 250], ["print", "data_pro.load_data_and_labels", "print", "data_pro.pad_sentences", "data_pro.pad_sentences", "data_pro.pad_sentences", "data_pro.pad_sentences", "data_pro.build_vocab", "data_pro.build_vocab", "data_pro.build_input_data", "data_pro.build_input_data", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "pad_sentences.values", "pad_sentences.values", "pad_sentences.values", "pad_sentences.values"], "function", ["home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.load_data_and_labels", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.pad_sentences", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.pad_sentences", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.pad_sentences", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.pad_sentences", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.build_vocab", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.build_vocab", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.build_input_data", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_pro.build_input_data"], ["", "def", "load_data", "(", "train_data", ",", "valid_data", ",", "user_pos_review", ",", "user_neg_review", ",", "item_pos_review", ",", "item_neg_review", ")", ":", "\n", "    ", "'''\n    Load and preprocess data for the dataset.\n    Return input vectors, labels, vocabulary, and inverse vocabulary.\n    '''", "\n", "print", "(", "'load data start'", ")", "\n", "u_pos_text", ",", "u_neg_text", ",", "i_pos_text", ",", "i_neg_text", ",", "y_train", ",", "y_valid", ",", "u_pos_len", ",", "u_neg_len", ",", "i_pos_len", ",", "i_neg_len", ",", "uid_train", ",", "iid_train", ",", "uid_valid", ",", "iid_valid", ",", "user_num", ",", "item_num", "=", "load_data_and_labels", "(", "train_data", ",", "valid_data", ",", "user_pos_review", ",", "user_neg_review", ",", "item_pos_review", ",", "item_neg_review", ")", "\n", "print", "(", "'load data done'", ")", "\n", "\n", "u_pos_text", "=", "pad_sentences", "(", "u_pos_text", ",", "u_pos_len", ")", "\n", "u_neg_text", "=", "pad_sentences", "(", "u_neg_text", ",", "u_neg_len", ")", "\n", "i_pos_text", "=", "pad_sentences", "(", "i_pos_text", ",", "i_pos_len", ")", "\n", "i_neg_text", "=", "pad_sentences", "(", "i_neg_text", ",", "i_neg_len", ")", "\n", "\n", "user_pos_voc", "=", "[", "x", "for", "x", "in", "u_pos_text", ".", "values", "(", ")", "]", "\n", "user_neg_voc", "=", "[", "x", "for", "x", "in", "u_neg_text", ".", "values", "(", ")", "]", "\n", "item_pos_voc", "=", "[", "x", "for", "x", "in", "i_pos_text", ".", "values", "(", ")", "]", "\n", "item_neg_voc", "=", "[", "x", "for", "x", "in", "i_neg_text", ".", "values", "(", ")", "]", "\n", "\n", "vocabulary_user_pos", ",", "vocabulary_inv_user_pos", ",", "vocabulary_item_pos", ",", "vocabulary_inv_item_pos", "=", "build_vocab", "(", "user_pos_voc", ",", "item_pos_voc", ")", "\n", "vocabulary_user_neg", ",", "vocabulary_inv_user_neg", ",", "vocabulary_item_neg", ",", "vocabulary_inv_item_neg", "=", "build_vocab", "(", "user_neg_voc", ",", "item_neg_voc", ")", "\n", "\n", "u_pos_text", ",", "i_pos_text", "=", "build_input_data", "(", "u_pos_text", ",", "i_pos_text", ",", "vocabulary_user_pos", ",", "vocabulary_item_pos", ")", "\n", "u_neg_text", ",", "i_neg_text", "=", "build_input_data", "(", "u_neg_text", ",", "i_neg_text", ",", "vocabulary_user_neg", ",", "vocabulary_item_neg", ")", "\n", "\n", "y_train", "=", "np", ".", "array", "(", "y_train", ")", "\n", "y_valid", "=", "np", ".", "array", "(", "y_valid", ")", "\n", "uid_train", "=", "np", ".", "array", "(", "uid_train", ")", "\n", "uid_valid", "=", "np", ".", "array", "(", "uid_valid", ")", "\n", "iid_train", "=", "np", ".", "array", "(", "iid_train", ")", "\n", "iid_valid", "=", "np", ".", "array", "(", "iid_valid", ")", "\n", "\n", "return", "[", "u_pos_text", ",", "u_neg_text", ",", "i_pos_text", ",", "i_neg_text", ",", "y_train", ",", "y_valid", ",", "\n", "vocabulary_user_pos", ",", "vocabulary_inv_user_pos", ",", "vocabulary_item_pos", ",", "vocabulary_inv_item_pos", ",", "\n", "vocabulary_user_neg", ",", "vocabulary_inv_user_neg", ",", "vocabulary_item_neg", ",", "vocabulary_inv_item_neg", ",", "\n", "uid_train", ",", "iid_train", ",", "uid_valid", ",", "iid_valid", ",", "user_num", ",", "item_num", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_load.get_count": [[48, 52], ["tp[].groupby", "tp[].groupby.size"], "function", ["None"], ["def", "get_count", "(", "tp", ",", "key", ")", ":", "\n", "    ", "count_groupbykey", "=", "tp", "[", "[", "key", ",", "'ratings'", "]", "]", ".", "groupby", "(", "key", ",", "as_index", "=", "False", ")", "\n", "count", "=", "count_groupbykey", ".", "size", "(", ")", "\n", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_load.filter_triplets": [[56, 71], ["data_load.get_count", "data_load.get_count", "data_load.get_count", "data_load.get_count", "tp[].isin", "tp[].isin"], "function", ["home.repos.pwc.inspect_result.hanliu95_RPR.None.data_load.get_count", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_load.get_count", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_load.get_count", "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_load.get_count"], ["def", "filter_triplets", "(", "tp", ",", "min_uc", "=", "MIN_USER_COUNT", ",", "min_ic", "=", "MIN_ITEM_COUNT", ")", ":", "\n", "    ", "'''Only keep the triplets for items which were rated by at least min_ic users.'''", "\n", "itemcount", "=", "get_count", "(", "tp", ",", "'item_id'", ")", "\n", "tp", "=", "tp", "[", "tp", "[", "'item_id'", "]", ".", "isin", "(", "itemcount", ".", "index", "[", "itemcount", ">=", "min_ic", "]", ")", "]", "\n", "\n", "'''Only keep the triplets for users who listened to at least min_uc songs\n    After doing this, some of the songs will have less than min_uc users, \n    but should only be a small proportion'''", "\n", "usercount", "=", "get_count", "(", "tp", ",", "'user_id'", ")", "\n", "tp", "=", "tp", "[", "tp", "[", "'user_id'", "]", ".", "isin", "(", "usercount", ".", "index", "[", "usercount", ">=", "min_uc", "]", ")", "]", "\n", "\n", "itemcount", "=", "get_count", "(", "tp", ",", "'item_id'", ")", "\n", "usercount", "=", "get_count", "(", "tp", ",", "'user_id'", ")", "\n", "\n", "return", "tp", ",", "itemcount", ",", "usercount", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.data_load.numerize": [[80, 86], ["map", "map", "list", "list"], "function", ["None"], ["def", "numerize", "(", "tp", ")", ":", "\n", "    ", "uid", "=", "map", "(", "lambda", "x", ":", "user2id", "[", "x", "]", ",", "tp", "[", "'user_id'", "]", ")", "\n", "iid", "=", "map", "(", "lambda", "x", ":", "item2id", "[", "x", "]", ",", "tp", "[", "'item_id'", "]", ")", "\n", "tp", "[", "'user_id'", "]", "=", "list", "(", "uid", ")", "\n", "tp", "[", "'item_id'", "]", "=", "list", "(", "iid", ")", "\n", "return", "tp", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.Model_train.train_step_1": [[19, 32], ["sess.run", "sess.run"], "function", ["None"], ["def", "train_step_1", "(", "u_pos_batch", ",", "u_neg_batch", ",", "i_pos_batch", ",", "i_neg_batch", ",", "uid", ",", "iid", ",", "y_batch", ")", ":", "\n", "    ", "feed_dict", "=", "{", "\n", "model", ".", "input_u_pos", ":", "u_pos_batch", ",", "\n", "model", ".", "input_u_neg", ":", "u_neg_batch", ",", "\n", "model", ".", "input_i_pos", ":", "i_pos_batch", ",", "\n", "model", ".", "input_i_neg", ":", "i_neg_batch", ",", "\n", "model", ".", "input_uid", ":", "uid", ",", "\n", "model", ".", "input_iid", ":", "iid", ",", "\n", "model", ".", "input_y", ":", "y_batch", "\n", "}", "\n", "_", ",", "loss", "=", "sess", ".", "run", "(", "[", "train_op_1", ",", "model", ".", "loss", "]", ",", "feed_dict", ")", "\n", "accuracy", ",", "mae", "=", "sess", ".", "run", "(", "[", "model", ".", "accuracy", ",", "model", ".", "mae", "]", ",", "feed_dict", ")", "\n", "return", "accuracy", ",", "mae", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.Model_train.train_step_2": [[33, 46], ["sess.run", "sess.run"], "function", ["None"], ["", "def", "train_step_2", "(", "u_pos_batch", ",", "u_neg_batch", ",", "i_pos_batch", ",", "i_neg_batch", ",", "uid", ",", "iid", ",", "y_batch", ")", ":", "\n", "    ", "feed_dict", "=", "{", "\n", "model", ".", "input_u_pos", ":", "u_pos_batch", ",", "\n", "model", ".", "input_u_neg", ":", "u_neg_batch", ",", "\n", "model", ".", "input_i_pos", ":", "i_pos_batch", ",", "\n", "model", ".", "input_i_neg", ":", "i_neg_batch", ",", "\n", "model", ".", "input_uid", ":", "uid", ",", "\n", "model", ".", "input_iid", ":", "iid", ",", "\n", "model", ".", "input_y", ":", "y_batch", "\n", "}", "\n", "_", ",", "loss", "=", "sess", ".", "run", "(", "[", "train_op_2", ",", "model", ".", "loss", "]", ",", "feed_dict", ")", "\n", "accuracy", ",", "mae", "=", "sess", ".", "run", "(", "[", "model", ".", "accuracy", ",", "model", ".", "mae", "]", ",", "feed_dict", ")", "\n", "return", "accuracy", ",", "mae", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.Model_train.train_step_3": [[47, 60], ["sess.run", "sess.run"], "function", ["None"], ["", "def", "train_step_3", "(", "u_pos_batch", ",", "u_neg_batch", ",", "i_pos_batch", ",", "i_neg_batch", ",", "uid", ",", "iid", ",", "y_batch", ")", ":", "\n", "    ", "feed_dict", "=", "{", "\n", "model", ".", "input_u_pos", ":", "u_pos_batch", ",", "\n", "model", ".", "input_u_neg", ":", "u_neg_batch", ",", "\n", "model", ".", "input_i_pos", ":", "i_pos_batch", ",", "\n", "model", ".", "input_i_neg", ":", "i_neg_batch", ",", "\n", "model", ".", "input_uid", ":", "uid", ",", "\n", "model", ".", "input_iid", ":", "iid", ",", "\n", "model", ".", "input_y", ":", "y_batch", "\n", "}", "\n", "_", ",", "loss", "=", "sess", ".", "run", "(", "[", "train_op_3", ",", "model", ".", "loss", "]", ",", "feed_dict", ")", "\n", "accuracy", ",", "mae", "=", "sess", ".", "run", "(", "[", "model", ".", "accuracy", ",", "model", ".", "mae", "]", ",", "feed_dict", ")", "\n", "return", "accuracy", ",", "mae", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.Model_train.dev_step": [[63, 90], ["sess.run", "Model_train.dev_step.clip_labels"], "function", ["None"], ["", "def", "dev_step", "(", "u_pos_valid", ",", "u_neg_valid", ",", "i_pos_valid", ",", "i_neg_valid", ",", "userid_valid", ",", "itemid_valid", ",", "y_valid", ")", ":", "\n", "    ", "\"\"\"\n    Evaluates model\n    \"\"\"", "\n", "feed_dict", "=", "{", "\n", "model", ".", "input_u_pos", ":", "u_pos_valid", ",", "\n", "model", ".", "input_u_neg", ":", "u_neg_valid", ",", "\n", "model", ".", "input_i_pos", ":", "i_pos_valid", ",", "\n", "model", ".", "input_i_neg", ":", "i_neg_valid", ",", "\n", "model", ".", "input_uid", ":", "userid_valid", ",", "\n", "model", ".", "input_iid", ":", "itemid_valid", ",", "\n", "model", ".", "input_y", ":", "y_valid", "\n", "}", "\n", "\n", "def", "clip_labels", "(", "x", ")", ":", "\n", "        ", "if", "x", ">", "5", ":", "\n", "            ", "return", "5", "\n", "", "elif", "x", "<", "1", ":", "\n", "            ", "return", "1", "\n", "", "else", ":", "\n", "            ", "return", "x", "\n", "\n", "", "", "preds", ",", "loss", ",", "accuracy", ",", "mae", "=", "sess", ".", "run", "(", "[", "model", ".", "predictions", ",", "model", ".", "loss", ",", "model", ".", "accuracy", ",", "model", ".", "mae", "]", ",", "feed_dict", ")", "\n", "acc_preds", "=", "[", "clip_labels", "(", "x", ")", "for", "x", "in", "preds", "]", "\n", "labels", "=", "[", "x", "[", "0", "]", "for", "x", "in", "y_valid", "]", "\n", "mse", "=", "calculateMSE", "(", "acc_preds", ",", "labels", ")", "**", "0.5", "\n", "return", "loss", ",", "mse", ",", "mae", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.Model_train.calculateMSE": [[91, 93], ["sum", "len", "zip"], "function", ["None"], ["", "def", "calculateMSE", "(", "X", ",", "Y", ")", ":", "\n", "    ", "return", "sum", "(", "[", "(", "x", "-", "y", ")", "**", "2", "for", "x", ",", "y", "in", "zip", "(", "X", ",", "Y", ")", "]", ")", "/", "len", "(", "X", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.hanliu95_RPR.None.Model.Model.__init__": [[5, 189], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "enumerate", "tensorflow.concat", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_sum", "tensorflow.nn.softmax", "enumerate", "tensorflow.concat", "tensorflow.reshape", "tensorflow.get_variable", "tensorflow.Variable", "tensorflow.nn.softmax", "tensorflow.reduce_sum", "tensorflow.nn.softmax", "tensorflow.contrib.layers.l2_regularizer", "enumerate", "tensorflow.contrib.layers.apply_regularization", "tensorflow.contrib.layers.apply_regularization", "tensorflow.contrib.layers.apply_regularization", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.expand_dims", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.expand_dims", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.expand_dims", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.expand_dims", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.reshape", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.nn.embedding_lookup", "tensorflow.reshape", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.name_scope", "tensorflow.Variable", "len", "tensorflow.constant", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.constant", "tensorflow.nn.relu", "tensorflow.reshape", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "range", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.Variable", "range", "tensorflow.name_scope", "tensorflow.multiply", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.matmul", "tensorflow.reduce_sum", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.get_collection", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.name_scope", "tensorflow.reduce_mean", "tensorflow.sqrt", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.random_uniform", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.reshape", "output_u_pos.append", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.name_scope", "tensorflow.Variable", "tensorflow.Variable", "tensorflow.nn.conv2d", "tensorflow.nn.relu", "tensorflow.reshape", "output_u_neg.append", "tensorflow.contrib.layers.xavier_initializer", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.multiply", "tensorflow.nn.relu", "tensorflow.nn.softmax", "tensorflow.matmul", "neg_asp_imp_add.append", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.truncated_normal", "tensorflow.multiply", "tensorflow.nn.relu", "tensorflow.nn.softmax", "tensorflow.matmul", "pos_asp_imp_add.append", "tensorflow.transpose", "tensorflow.concat", "tensorflow.multiply", "tensorflow.transpose", "tensorflow.concat", "tensorflow.multiply", "tensorflow.square", "tensorflow.abs", "tensorflow.reduce_mean", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.nn.bias_add", "tensorflow.matmul", "tensorflow.truncated_normal", "tensorflow.constant", "tensorflow.nn.bias_add", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.square", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.subtract"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "user_num", ",", "item_num", ",", "f", ",", "user_pos_length", ",", "user_neg_length", ",", "item_pos_length", ",", "item_neg_length", ",", "\n", "user_pos_vocab_size", ",", "user_neg_vocab_size", ",", "item_pos_vocab_size", ",", "item_neg_vocab_size", ",", "embedding_size", ",", "\n", "filter_sizes", ",", "num_filters", ",", "n_pos_aspect", ",", "n_neg_aspect", ")", ":", "\n", "\n", "        ", "self", ".", "input_u_pos", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "user_pos_length", "]", ",", "name", "=", "'input_u_pos'", ")", "\n", "self", ".", "input_u_neg", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "user_neg_length", "]", ",", "name", "=", "'input_u_neg'", ")", "\n", "self", ".", "input_i_pos", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "item_pos_length", "]", ",", "name", "=", "'input_i_pos'", ")", "\n", "self", ".", "input_i_neg", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "item_neg_length", "]", ",", "name", "=", "'input_i_neg'", ")", "\n", "self", ".", "input_y", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "None", ",", "1", "]", ",", "name", "=", "\"input_y\"", ")", "\n", "self", ".", "input_uid", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "1", "]", ",", "name", "=", "\"input_uid\"", ")", "\n", "self", ".", "input_iid", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "1", "]", ",", "name", "=", "\"input_iid\"", ")", "\n", "self", ".", "dropout_keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "name", "=", "\"dropout_keep_prob\"", ")", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"user_pos_embedding\"", ")", ":", "\n", "            ", "self", ".", "Wu_pos", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "user_pos_vocab_size", ",", "embedding_size", "]", ",", "-", "1.0", ",", "1.0", ")", ",", "trainable", "=", "False", ",", "name", "=", "'Wu_pos'", ")", "\n", "self", ".", "embedded_user_pos", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "Wu_pos", ",", "self", ".", "input_u_pos", ")", "\n", "self", ".", "embedded_users_pos", "=", "tf", ".", "expand_dims", "(", "self", ".", "embedded_user_pos", ",", "-", "1", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"user_neg_embedding\"", ")", ":", "\n", "            ", "self", ".", "Wu_neg", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "user_neg_vocab_size", ",", "embedding_size", "]", ",", "-", "1.0", ",", "1.0", ")", ",", "trainable", "=", "False", ",", "name", "=", "'Wu_neg'", ")", "\n", "self", ".", "embedded_user_neg", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "Wu_neg", ",", "self", ".", "input_u_neg", ")", "\n", "self", ".", "embedded_users_neg", "=", "tf", ".", "expand_dims", "(", "self", ".", "embedded_user_neg", ",", "-", "1", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"item_pos_embedding\"", ")", ":", "\n", "            ", "self", ".", "Wi_pos", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "item_pos_vocab_size", ",", "embedding_size", "]", ",", "-", "1.0", ",", "1.0", ")", ",", "trainable", "=", "False", ",", "name", "=", "'Wi_pos'", ")", "\n", "self", ".", "embedded_item_pos", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "Wi_pos", ",", "self", ".", "input_i_pos", ")", "\n", "self", ".", "embedded_items_pos", "=", "tf", ".", "expand_dims", "(", "self", ".", "embedded_item_pos", ",", "-", "1", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"item_neg_embedding\"", ")", ":", "\n", "            ", "self", ".", "Wi_neg", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "item_neg_vocab_size", ",", "embedding_size", "]", ",", "-", "1.0", ",", "1.0", ")", ",", "trainable", "=", "False", ",", "name", "=", "'Wi_neg'", ")", "\n", "self", ".", "embedded_item_neg", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "Wi_neg", ",", "self", ".", "input_i_neg", ")", "\n", "self", ".", "embedded_items_neg", "=", "tf", ".", "expand_dims", "(", "self", ".", "embedded_item_neg", ",", "-", "1", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"user_latent_factors\"", ")", ":", "\n", "            ", "self", ".", "user_Matrix", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "user_num", ",", "f", "]", ",", "-", "1.0", ",", "1.0", ")", ",", "name", "=", "'user_Matrix'", ")", "\n", "self", ".", "user_latent", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "user_Matrix", ",", "self", ".", "input_uid", ")", "\n", "self", ".", "user_latent", "=", "tf", ".", "reshape", "(", "self", ".", "user_latent", ",", "[", "-", "1", ",", "f", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"item_latent_factors\"", ")", ":", "\n", "            ", "self", ".", "item_Matrix", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "item_num", ",", "f", "]", ",", "-", "1.0", ",", "1.0", ")", ",", "name", "=", "'item_Matrix'", ")", "\n", "self", ".", "item_latent", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "self", ".", "item_Matrix", ",", "self", ".", "input_iid", ")", "\n", "self", ".", "item_latent", "=", "tf", ".", "reshape", "(", "self", ".", "item_latent", ",", "[", "-", "1", ",", "f", "]", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"pos_aspect_weight\"", ")", ":", "\n", "            ", "self", ".", "pos_W", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "n_pos_aspect", ",", "f", "]", ",", "-", "1.0", ",", "1.0", ")", ",", "name", "=", "'pos_W'", ")", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"neg_aspect_weight\"", ")", ":", "\n", "            ", "self", ".", "neg_W", "=", "tf", ".", "Variable", "(", "tf", ".", "random_uniform", "(", "[", "n_neg_aspect", ",", "f", "]", ",", "-", "1.0", ",", "1.0", ")", ",", "name", "=", "'neg_W'", ")", "\n", "\n", "", "output_u_pos", "=", "[", "]", "\n", "for", "i", ",", "filter_size", "in", "enumerate", "(", "filter_sizes", ")", ":", "\n", "            ", "with", "tf", ".", "name_scope", "(", "\"user_pos_conv-%s\"", "%", "filter_size", ")", ":", "\n", "# Convolution Layer", "\n", "                ", "filter_shape", "=", "[", "filter_size", ",", "embedding_size", ",", "1", ",", "num_filters", "]", "\n", "W", "=", "tf", ".", "Variable", "(", "tf", ".", "truncated_normal", "(", "filter_shape", ",", "stddev", "=", "0.1", ")", ",", "name", "=", "\"W\"", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "[", "num_filters", "]", ")", ",", "name", "=", "\"b\"", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "\n", "self", ".", "embedded_users_pos", ",", "\n", "W", ",", "\n", "strides", "=", "[", "1", ",", "1", ",", "embedding_size", ",", "1", "]", ",", "\n", "padding", "=", "\"SAME\"", ",", "\n", "name", "=", "\"conv\"", ")", "# batch_size * user_pos_length * 1 * num_filters", "\n", "# Apply nonlinearity", "\n", "h", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "b", ")", ",", "name", "=", "\"relu\"", ")", "\n", "h1", "=", "tf", ".", "reshape", "(", "h", ",", "[", "-", "1", ",", "user_pos_length", ",", "num_filters", "]", ")", "\n", "output_u_pos", ".", "append", "(", "h1", ")", "\n", "\n", "", "", "num_filters_total", "=", "num_filters", "*", "len", "(", "filter_sizes", ")", "\n", "self", ".", "output_u_pos_con", "=", "tf", ".", "concat", "(", "output_u_pos", ",", "2", ")", "\n", "self", ".", "output_u_pos_res", "=", "tf", ".", "reshape", "(", "self", ".", "output_u_pos_con", ",", "[", "-", "1", ",", "num_filters_total", "]", ")", "\n", "# Layer 1", "\n", "Wu_pos_1", "=", "tf", ".", "get_variable", "(", "\"Wu_pos_1\"", ",", "shape", "=", "[", "num_filters_total", ",", "n_pos_aspect", "]", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", "\n", "bu_pos_1", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "[", "n_pos_aspect", "]", ")", ")", "\n", "self", ".", "u_pos_l1", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "self", ".", "output_u_pos_res", ",", "Wu_pos_1", ")", "+", "bu_pos_1", ")", ")", "\n", "\n", "\n", "self", ".", "pos_asp", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "reshape", "(", "self", ".", "u_pos_l1", ",", "[", "-", "1", ",", "user_pos_length", ",", "n_pos_aspect", "]", ")", ",", "axis", "=", "1", ")", "\n", "self", ".", "pos_asp_imp", "=", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "pos_asp", ")", "# batch_size * n_pos_aspect", "\n", "\n", "\n", "output_u_neg", "=", "[", "]", "\n", "for", "i", ",", "filter_size", "in", "enumerate", "(", "filter_sizes", ")", ":", "\n", "            ", "with", "tf", ".", "name_scope", "(", "\"user_neg_conv-%s\"", "%", "filter_size", ")", ":", "\n", "# Convolution Layer", "\n", "                ", "filter_shape", "=", "[", "filter_size", ",", "embedding_size", ",", "1", ",", "\n", "num_filters", "]", "# [filter_height, filter_width, in_channels, out_channels]", "\n", "W", "=", "tf", ".", "Variable", "(", "tf", ".", "truncated_normal", "(", "filter_shape", ",", "stddev", "=", "0.1", ")", ",", "name", "=", "\"W\"", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "[", "num_filters", "]", ")", ",", "name", "=", "\"b\"", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "\n", "self", ".", "embedded_users_neg", ",", "\n", "W", ",", "\n", "strides", "=", "[", "1", ",", "1", ",", "embedding_size", ",", "1", "]", ",", "\n", "padding", "=", "\"SAME\"", ",", "\n", "name", "=", "\"conv\"", ")", "\n", "# Apply nonlinearity", "\n", "h", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "nn", ".", "bias_add", "(", "conv", ",", "b", ")", ",", "name", "=", "\"relu\"", ")", "\n", "h1", "=", "tf", ".", "reshape", "(", "h", ",", "[", "-", "1", ",", "user_neg_length", ",", "num_filters", "]", ")", "\n", "output_u_neg", ".", "append", "(", "h1", ")", "\n", "\n", "", "", "self", ".", "output_u_neg_con", "=", "tf", ".", "concat", "(", "output_u_neg", ",", "2", ")", "\n", "self", ".", "output_u_neg_res", "=", "tf", ".", "reshape", "(", "self", ".", "output_u_neg_con", ",", "[", "-", "1", ",", "num_filters_total", "]", ")", "\n", "# Layer 1", "\n", "Wu_neg_1", "=", "tf", ".", "get_variable", "(", "\"Wu_neg_1\"", ",", "shape", "=", "[", "num_filters_total", ",", "n_neg_aspect", "]", ",", "\n", "initializer", "=", "tf", ".", "contrib", ".", "layers", ".", "xavier_initializer", "(", ")", ")", "\n", "bu_neg_1", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "[", "n_neg_aspect", "]", ")", ")", "\n", "self", ".", "u_neg_l1", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "self", ".", "output_u_neg_res", ",", "Wu_neg_1", ")", "+", "bu_neg_1", ")", ")", "\n", "\n", "\n", "self", ".", "neg_asp", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "reshape", "(", "self", ".", "u_neg_l1", ",", "[", "-", "1", ",", "user_neg_length", ",", "n_neg_aspect", "]", ")", ",", "axis", "=", "1", ")", "\n", "self", ".", "neg_asp_imp", "=", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "neg_asp", ")", "# batch_size * n_neg_aspect", "\n", "\n", "\n", "\n", "neg_asp_imp_add", "=", "[", "]", "\n", "with", "tf", ".", "name_scope", "(", "\"pos2neg_imp\"", ")", ":", "\n", "            ", "W", "=", "tf", ".", "Variable", "(", "tf", ".", "truncated_normal", "(", "shape", "=", "[", "f", ",", "f", "]", ",", "stddev", "=", "0.1", ")", ",", "name", "=", "\"W\"", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "[", "f", "]", ")", ",", "name", "=", "'b'", ")", "\n", "h", "=", "tf", ".", "Variable", "(", "tf", ".", "truncated_normal", "(", "shape", "=", "[", "f", ",", "1", "]", ",", "stddev", "=", "0.1", ")", ",", "name", "=", "\"h\"", ")", "\n", "for", "i", "in", "range", "(", "n_neg_aspect", ")", ":", "\n", "                ", "neg_Wi", "=", "self", ".", "neg_W", "[", "i", "]", "\n", "mul", "=", "tf", ".", "multiply", "(", "self", ".", "pos_W", ",", "neg_Wi", ")", "\n", "rel", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "mul", ",", "W", ")", "+", "b", ")", "\n", "attn", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "matmul", "(", "rel", ",", "h", ")", ",", "dim", "=", "0", ")", "# n_pos_aspect * 1", "\n", "neg_asp_imp_i", "=", "tf", ".", "matmul", "(", "self", ".", "pos_asp_imp", ",", "attn", ")", "# batch_size * 1", "\n", "neg_asp_imp_add", ".", "append", "(", "neg_asp_imp_i", ")", "\n", "\n", "", "", "pos_asp_imp_add", "=", "[", "]", "\n", "with", "tf", ".", "name_scope", "(", "\"neg2pos_imp\"", ")", ":", "\n", "            ", "W", "=", "tf", ".", "Variable", "(", "tf", ".", "truncated_normal", "(", "shape", "=", "[", "f", ",", "f", "]", ",", "stddev", "=", "0.1", ")", ",", "name", "=", "\"W\"", ")", "\n", "b", "=", "tf", ".", "Variable", "(", "tf", ".", "constant", "(", "0.1", ",", "shape", "=", "[", "f", "]", ")", ",", "name", "=", "'b'", ")", "\n", "h", "=", "tf", ".", "Variable", "(", "tf", ".", "truncated_normal", "(", "shape", "=", "[", "f", ",", "1", "]", ",", "stddev", "=", "0.1", ")", ",", "name", "=", "\"h\"", ")", "\n", "for", "i", "in", "range", "(", "n_pos_aspect", ")", ":", "\n", "                ", "pos_Wi", "=", "self", ".", "pos_W", "[", "i", "]", "\n", "mul", "=", "tf", ".", "multiply", "(", "self", ".", "neg_W", ",", "pos_Wi", ")", "\n", "rel", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "matmul", "(", "mul", ",", "W", ")", "+", "b", ")", "\n", "attn", "=", "tf", ".", "nn", ".", "softmax", "(", "tf", ".", "matmul", "(", "rel", ",", "h", ")", ",", "dim", "=", "0", ")", "\n", "pos_asp_imp_i", "=", "tf", ".", "matmul", "(", "self", ".", "neg_asp_imp", ",", "attn", ")", "\n", "pos_asp_imp_add", ".", "append", "(", "pos_asp_imp_i", ")", "\n", "\n", "", "", "with", "tf", ".", "name_scope", "(", "\"prediction\"", ")", ":", "\n", "# print(self.user_latent.shape())", "\n", "            ", "self", ".", "interaction", "=", "tf", ".", "multiply", "(", "self", ".", "user_latent", ",", "self", ".", "item_latent", ")", "\n", "self", ".", "pos_asp_r", "=", "tf", ".", "matmul", "(", "self", ".", "interaction", ",", "tf", ".", "transpose", "(", "self", ".", "pos_W", ")", ")", "# batch_size * n_pos_asp", "\n", "self", ".", "pos_imp", "=", "self", ".", "pos_asp_imp", "+", "tf", ".", "concat", "(", "pos_asp_imp_add", ",", "-", "1", ")", "\n", "self", ".", "pos_r", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "self", ".", "pos_asp_r", ",", "self", ".", "pos_imp", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n", "self", ".", "neg_asp_r", "=", "tf", ".", "matmul", "(", "self", ".", "interaction", ",", "tf", ".", "transpose", "(", "self", ".", "neg_W", ")", ")", "\n", "self", ".", "neg_imp", "=", "self", ".", "neg_asp_imp", "+", "tf", ".", "concat", "(", "neg_asp_imp_add", ",", "-", "1", ")", "\n", "self", ".", "neg_r", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "self", ".", "neg_asp_r", ",", "self", ".", "neg_imp", ")", ",", "axis", "=", "-", "1", ")", "\n", "\n", "self", ".", "predictions", "=", "self", ".", "pos_r", "-", "self", ".", "neg_r", "\n", "\n", "", "regularizer", "=", "layers", ".", "l2_regularizer", "(", "scale", "=", "1.0", ")", "\n", "Var_list_1", "=", "[", "Wu_pos_1", ",", "bu_pos_1", ",", "Wu_neg_1", ",", "bu_neg_1", "]", "\n", "\n", "for", "i", ",", "filter_size", "in", "enumerate", "(", "filter_sizes", ")", ":", "\n", "            ", "Var_list_1", "+=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "scope", "=", "\"user_pos_conv-%s\"", "%", "filter_size", ")", "\n", "Var_list_1", "+=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "scope", "=", "\"user_neg_conv-%s\"", "%", "filter_size", ")", "\n", "\n", "", "reg_1", "=", "layers", ".", "apply_regularization", "(", "regularizer", ",", "weights_list", "=", "Var_list_1", ")", "\n", "\n", "Var_list_2", "=", "[", "]", "\n", "\n", "Var_list_3", "=", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "scope", "=", "\"pos2neg_imp\"", ")", "+", "tf", ".", "get_collection", "(", "tf", ".", "GraphKeys", ".", "TRAINABLE_VARIABLES", ",", "scope", "=", "\"neg2pos_imp\"", ")", "\n", "\n", "reg_3", "=", "layers", ".", "apply_regularization", "(", "regularizer", ",", "weights_list", "=", "Var_list_3", ")", "\n", "\n", "self", ".", "variables", "=", "Var_list_1", "+", "Var_list_2", "+", "Var_list_3", "\n", "\n", "reg_4", "=", "layers", ".", "apply_regularization", "(", "regularizer", ",", "weights_list", "=", "[", "self", ".", "user_Matrix", ",", "self", ".", "item_Matrix", ",", "self", ".", "pos_W", ",", "self", ".", "neg_W", "]", ")", "\n", "\n", "\n", "with", "tf", ".", "name_scope", "(", "\"loss\"", ")", ":", "\n", "            ", "beta_1", "=", "1e-4", "\n", "beta_2", "=", "0.001", "\n", "losses", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "tf", ".", "subtract", "(", "self", ".", "predictions", ",", "self", ".", "input_y", ")", ")", ")", "\n", "self", ".", "loss", "=", "losses", "+", "beta_2", "*", "(", "reg_1", "+", "reg_3", "+", "reg_4", ")", "\n", "\n", "\n", "", "with", "tf", ".", "name_scope", "(", "\"accuracy\"", ")", ":", "\n", "            ", "self", ".", "mae", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "tf", ".", "subtract", "(", "self", ".", "predictions", ",", "self", ".", "input_y", ")", ")", ")", "\n", "self", ".", "accuracy", "=", "tf", ".", "sqrt", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "square", "(", "tf", ".", "subtract", "(", "self", ".", "predictions", ",", "self", ".", "input_y", ")", ")", ")", ")", "\n", "\n"]]}