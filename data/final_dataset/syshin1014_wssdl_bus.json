{"home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint.__init__": [[12, 28], ["layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_s_inds", "layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_ws_inds", "layer_bus_joint.RoIDataLayerJoint._roidb_s_inds", "layer_bus_joint.RoIDataLayerJoint._roidb_ws_inds"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_s_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_ws_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._roidb_s_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._roidb_ws_inds"], ["def", "__init__", "(", "self", ",", "roidb_s", ",", "roidb_ws", ",", "net_name", ",", "num_classes", ",", "is_training", ")", ":", "\n", "        ", "\"\"\"Set the roidbs to be used by this layer during training.\"\"\"", "\n", "self", ".", "_roidb_s", "=", "roidb_s", "\n", "self", ".", "_roidb_ws", "=", "roidb_ws", "\n", "self", ".", "_net_name", "=", "net_name", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_is_training", "=", "is_training", "\n", "\n", "if", "self", ".", "_is_training", ":", "\n", "            ", "self", ".", "_shuffle_roidb_s_inds", "(", ")", "\n", "self", ".", "_shuffle_roidb_ws_inds", "(", ")", "\n", "\"\"\"self._roidb_s_inds()\n            self._roidb_ws_inds()\"\"\"", "\n", "", "else", ":", "\n", "            ", "self", ".", "_roidb_s_inds", "(", ")", "\n", "self", ".", "_roidb_ws_inds", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_s_inds": [[29, 33], ["numpy.random.permutation", "numpy.arange", "len"], "methods", ["None"], ["", "", "def", "_shuffle_roidb_s_inds", "(", "self", ")", ":", "\n", "        ", "\"\"\"Randomly permute the training roidb.\"\"\"", "\n", "self", ".", "_perm_s", "=", "np", ".", "random", ".", "permutation", "(", "np", ".", "arange", "(", "len", "(", "self", ".", "_roidb_s", ")", ")", ")", "\n", "self", ".", "_cur_s", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_ws_inds": [[34, 38], ["numpy.random.permutation", "numpy.arange", "len"], "methods", ["None"], ["", "def", "_shuffle_roidb_ws_inds", "(", "self", ")", ":", "\n", "        ", "\"\"\"Randomly permute the training roidb.\"\"\"", "\n", "self", ".", "_perm_ws", "=", "np", ".", "random", ".", "permutation", "(", "np", ".", "arange", "(", "len", "(", "self", ".", "_roidb_ws", ")", ")", ")", "\n", "self", ".", "_cur_ws", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._roidb_s_inds": [[39, 43], ["numpy.arange", "len"], "methods", ["None"], ["", "def", "_roidb_s_inds", "(", "self", ")", ":", "\n", "        ", "\"\"\"Permute the training roidb.\"\"\"", "\n", "self", ".", "_perm_s", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "_roidb_s", ")", ")", "\n", "self", ".", "_cur_s", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._roidb_ws_inds": [[44, 48], ["numpy.arange", "len"], "methods", ["None"], ["", "def", "_roidb_ws_inds", "(", "self", ")", ":", "\n", "        ", "\"\"\"Permute the training roidb.\"\"\"", "\n", "self", ".", "_perm_ws", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "_roidb_ws", ")", ")", "\n", "self", ".", "_cur_ws", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._get_next_minibatch_inds": [[49, 89], ["numpy.zeros", "len", "len", "layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_s_inds", "layer_bus_joint.RoIDataLayerJoint._roidb_s_inds", "layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_ws_inds", "layer_bus_joint.RoIDataLayerJoint._roidb_ws_inds", "len", "layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_s_inds"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_s_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._roidb_s_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_ws_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._roidb_ws_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._shuffle_roidb_s_inds"], ["", "def", "_get_next_minibatch_inds", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the roidb indices for the next minibatch.\"\"\"", "\n", "\n", "if", "cfg", ".", "TRAIN", ".", "HAS_RPN", ":", "\n", "            ", "if", "self", ".", "_cur_s", "+", "cfg", ".", "TRAIN", ".", "IMS_PER_BATCH", ">", "len", "(", "self", ".", "_roidb_s", ")", ":", "\n", "                ", "if", "self", ".", "_is_training", ":", "\n", "                    ", "self", ".", "_shuffle_roidb_s_inds", "(", ")", "\n", "#self._roidb_s_inds()", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_roidb_s_inds", "(", ")", "\n", "\n", "", "", "db_inds_s", "=", "self", ".", "_perm_s", "[", "self", ".", "_cur_s", ":", "self", ".", "_cur_s", "+", "cfg", ".", "TRAIN", ".", "IMS_PER_BATCH", "]", "\n", "self", ".", "_cur_s", "+=", "cfg", ".", "TRAIN", ".", "IMS_PER_BATCH", "\n", "\n", "if", "self", ".", "_cur_ws", "+", "cfg", ".", "TRAIN", ".", "WS_IMS_PER_BATCH", ">", "len", "(", "self", ".", "_roidb_ws", ")", ":", "\n", "                ", "if", "self", ".", "_is_training", ":", "\n", "                    ", "self", ".", "_shuffle_roidb_ws_inds", "(", ")", "\n", "#self._roidb_ws_inds()", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_roidb_ws_inds", "(", ")", "\n", "\n", "", "", "db_inds_ws", "=", "self", ".", "_perm_ws", "[", "self", ".", "_cur_ws", ":", "self", ".", "_cur_ws", "+", "cfg", ".", "TRAIN", ".", "WS_IMS_PER_BATCH", "]", "\n", "self", ".", "_cur_ws", "+=", "cfg", ".", "TRAIN", ".", "WS_IMS_PER_BATCH", "\n", "", "else", ":", "\n", "# sample images", "\n", "            ", "db_inds", "=", "np", ".", "zeros", "(", "(", "cfg", ".", "TRAIN", ".", "IMS_PER_BATCH", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "i", "=", "0", "\n", "while", "(", "i", "<", "cfg", ".", "TRAIN", ".", "IMS_PER_BATCH", ")", ":", "\n", "                ", "ind", "=", "self", ".", "_perm_s", "[", "self", ".", "_cur_s", "]", "\n", "num_objs", "=", "self", ".", "_roidb_s", "[", "ind", "]", "[", "'boxes'", "]", ".", "shape", "[", "0", "]", "\n", "if", "num_objs", "!=", "0", ":", "\n", "                    ", "db_inds", "[", "i", "]", "=", "ind", "\n", "i", "+=", "1", "\n", "\n", "", "self", ".", "_cur_s", "+=", "1", "\n", "if", "self", ".", "_cur_s", ">=", "len", "(", "self", ".", "_roidb_s", ")", ":", "\n", "                    ", "self", ".", "_shuffle_roidb_s_inds", "(", ")", "\n", "#self._roidb_s_inds()", "\n", "\n", "", "", "", "return", "db_inds_s", ",", "db_inds_ws", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint._get_next_minibatch": [[90, 100], ["layer_bus_joint.RoIDataLayerJoint._get_next_minibatch_inds", "roi_data_layer.minibatch_bus.get_minibatch_joint"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._get_next_minibatch_inds"], ["", "def", "_get_next_minibatch", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the blobs to be used for the next minibatch.\n\n        If cfg.TRAIN.USE_PREFETCH is True, then blobs will be computed in a\n        separate process and made available through self._blob_queue.\n        \"\"\"", "\n", "db_inds_s", ",", "db_inds_ws", "=", "self", ".", "_get_next_minibatch_inds", "(", ")", "\n", "minibatch_db_s", "=", "[", "self", ".", "_roidb_s", "[", "i", "]", "for", "i", "in", "db_inds_s", "]", "\n", "minibatch_db_ws", "=", "[", "self", ".", "_roidb_ws", "[", "i", "]", "for", "i", "in", "db_inds_ws", "]", "\n", "return", "get_minibatch_joint", "(", "minibatch_db_s", ",", "minibatch_db_ws", ",", "self", ".", "_net_name", ",", "self", ".", "_num_classes", ",", "self", ".", "_is_training", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus_joint.RoIDataLayerJoint.forward": [[101, 105], ["layer_bus_joint.RoIDataLayerJoint._get_next_minibatch"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._get_next_minibatch"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Get blobs and copy them into this layer's top blob vector.\"\"\"", "\n", "blobs", "=", "self", ".", "_get_next_minibatch", "(", ")", "\n", "return", "blobs", "", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer.__init__": [[12, 25], ["layer_bus.RoIDataLayer._shuffle_roidb_inds", "layer_bus.RoIDataLayer._roidb_inds"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._shuffle_roidb_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._roidb_inds"], ["def", "__init__", "(", "self", ",", "roidb", ",", "net_name", ",", "num_classes", ",", "is_training", ",", "is_ws", ")", ":", "\n", "        ", "\"\"\"Set the roidb to be used by this layer during training.\"\"\"", "\n", "self", ".", "_roidb", "=", "roidb", "\n", "self", ".", "_net_name", "=", "net_name", "\n", "self", ".", "_num_classes", "=", "num_classes", "\n", "self", ".", "_is_training", "=", "is_training", "\n", "self", ".", "_is_ws", "=", "is_ws", "\n", "self", ".", "_ims_per_batch", "=", "cfg", ".", "TRAIN", ".", "WS_IMS_PER_BATCH", "if", "is_ws", "else", "cfg", ".", "TRAIN", ".", "IMS_PER_BATCH", "\n", "\n", "if", "self", ".", "_is_training", ":", "\n", "            ", "self", ".", "_shuffle_roidb_inds", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "_roidb_inds", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._shuffle_roidb_inds": [[26, 30], ["numpy.random.permutation", "numpy.arange", "len"], "methods", ["None"], ["", "", "def", "_shuffle_roidb_inds", "(", "self", ")", ":", "\n", "        ", "\"\"\"Randomly permute the training roidb.\"\"\"", "\n", "self", ".", "_perm", "=", "np", ".", "random", ".", "permutation", "(", "np", ".", "arange", "(", "len", "(", "self", ".", "_roidb", ")", ")", ")", "\n", "self", ".", "_cur", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._roidb_inds": [[31, 35], ["numpy.arange", "len"], "methods", ["None"], ["", "def", "_roidb_inds", "(", "self", ")", ":", "\n", "        ", "\"\"\"Permute the training roidb.\"\"\"", "\n", "self", ".", "_perm", "=", "np", ".", "arange", "(", "len", "(", "self", ".", "_roidb", ")", ")", "\n", "self", ".", "_cur", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._get_next_minibatch_inds": [[36, 64], ["numpy.zeros", "len", "layer_bus.RoIDataLayer._shuffle_roidb_inds", "layer_bus.RoIDataLayer._roidb_inds", "len", "layer_bus.RoIDataLayer._shuffle_roidb_inds"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._shuffle_roidb_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._roidb_inds", "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._shuffle_roidb_inds"], ["", "def", "_get_next_minibatch_inds", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the roidb indices for the next minibatch.\"\"\"", "\n", "\n", "if", "cfg", ".", "TRAIN", ".", "HAS_RPN", ":", "\n", "            ", "if", "self", ".", "_cur", "+", "self", ".", "_ims_per_batch", ">", "len", "(", "self", ".", "_roidb", ")", ":", "\n", "                ", "if", "self", ".", "_is_training", ":", "\n", "                    ", "self", ".", "_shuffle_roidb_inds", "(", ")", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_roidb_inds", "(", ")", "\n", "\n", "", "", "db_inds", "=", "self", ".", "_perm", "[", "self", ".", "_cur", ":", "self", ".", "_cur", "+", "self", ".", "_ims_per_batch", "]", "\n", "self", ".", "_cur", "+=", "self", ".", "_ims_per_batch", "\n", "", "else", ":", "\n", "# sample images", "\n", "            ", "db_inds", "=", "np", ".", "zeros", "(", "(", "self", ".", "_ims_per_batch", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "i", "=", "0", "\n", "while", "(", "i", "<", "self", ".", "_ims_per_batch", ")", ":", "\n", "                ", "ind", "=", "self", ".", "_perm", "[", "self", ".", "_cur", "]", "\n", "num_objs", "=", "self", ".", "_roidb", "[", "ind", "]", "[", "'boxes'", "]", ".", "shape", "[", "0", "]", "\n", "if", "num_objs", "!=", "0", ":", "\n", "                    ", "db_inds", "[", "i", "]", "=", "ind", "\n", "i", "+=", "1", "\n", "\n", "", "self", ".", "_cur", "+=", "1", "\n", "if", "self", ".", "_cur", ">=", "len", "(", "self", ".", "_roidb", ")", ":", "\n", "                    ", "self", ".", "_shuffle_roidb_inds", "(", ")", "\n", "\n", "", "", "", "return", "db_inds", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._get_next_minibatch": [[65, 74], ["layer_bus.RoIDataLayer._get_next_minibatch_inds", "roi_data_layer.minibatch_bus.get_minibatch"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._get_next_minibatch_inds"], ["", "def", "_get_next_minibatch", "(", "self", ")", ":", "\n", "        ", "\"\"\"Return the blobs to be used for the next minibatch.\n\n        If cfg.TRAIN.USE_PREFETCH is True, then blobs will be computed in a\n        separate process and made available through self._blob_queue.\n        \"\"\"", "\n", "db_inds", "=", "self", ".", "_get_next_minibatch_inds", "(", ")", "\n", "minibatch_db", "=", "[", "self", ".", "_roidb", "[", "i", "]", "for", "i", "in", "db_inds", "]", "\n", "return", "get_minibatch", "(", "minibatch_db", ",", "self", ".", "_net_name", ",", "self", ".", "_num_classes", ",", "self", ".", "_is_training", ",", "self", ".", "_is_ws", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer.forward": [[75, 79], ["layer_bus.RoIDataLayer._get_next_minibatch"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_data_layer.layer_bus.RoIDataLayer._get_next_minibatch"], ["", "def", "forward", "(", "self", ")", ":", "\n", "        ", "\"\"\"Get blobs and copy them into this layer's top blob vector.\"\"\"", "\n", "blobs", "=", "self", ".", "_get_next_minibatch", "(", ")", "\n", "return", "blobs", "", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.utils.nms.nms": [[10, 38], ["scores.argsort", "keep.append", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.where"], "function", ["None"], ["def", "nms", "(", "dets", ",", "thresh", ")", ":", "\n", "    ", "x1", "=", "dets", "[", ":", ",", "0", "]", "\n", "y1", "=", "dets", "[", ":", ",", "1", "]", "\n", "x2", "=", "dets", "[", ":", ",", "2", "]", "\n", "y2", "=", "dets", "[", ":", ",", "3", "]", "\n", "scores", "=", "dets", "[", ":", ",", "4", "]", "\n", "\n", "areas", "=", "(", "x2", "-", "x1", "+", "1", ")", "*", "(", "y2", "-", "y1", "+", "1", ")", "\n", "order", "=", "scores", ".", "argsort", "(", ")", "[", ":", ":", "-", "1", "]", "\n", "\n", "keep", "=", "[", "]", "\n", "while", "order", ".", "size", ">", "0", ":", "\n", "        ", "i", "=", "order", "[", "0", "]", "\n", "keep", ".", "append", "(", "i", ")", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "\n", "w", "=", "np", ".", "maximum", "(", "0.0", ",", "xx2", "-", "xx1", "+", "1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0.0", ",", "yy2", "-", "yy1", "+", "1", ")", "\n", "inter", "=", "w", "*", "h", "\n", "ovr", "=", "inter", "/", "(", "areas", "[", "i", "]", "+", "areas", "[", "order", "[", "1", ":", "]", "]", "-", "inter", ")", "\n", "\n", "inds", "=", "np", ".", "where", "(", "ovr", "<=", "thresh", ")", "[", "0", "]", "\n", "order", "=", "order", "[", "inds", "+", "1", "]", "\n", "\n", "", "return", "keep", "\n", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.utils.timer.Timer.__init__": [[12, 18], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "total_time", "=", "0.", "\n", "self", ".", "calls", "=", "0", "\n", "self", ".", "start_time", "=", "0.", "\n", "self", ".", "diff", "=", "0.", "\n", "self", ".", "average_time", "=", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.utils.timer.Timer.tic": [[19, 23], ["time.time"], "methods", ["None"], ["", "def", "tic", "(", "self", ")", ":", "\n", "# using time.time instead of time.clock because time time.clock", "\n", "# does not normalize for multithreading", "\n", "        ", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.utils.timer.Timer.toc": [[24, 33], ["time.time"], "methods", ["None"], ["", "def", "toc", "(", "self", ",", "average", "=", "True", ")", ":", "\n", "        ", "self", ".", "diff", "=", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", "\n", "self", ".", "total_time", "+=", "self", ".", "diff", "\n", "self", ".", "calls", "+=", "1", "\n", "self", ".", "average_time", "=", "self", ".", "total_time", "/", "self", ".", "calls", "\n", "if", "average", ":", "\n", "            ", "return", "self", ".", "average_time", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "diff", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.utils.boxes_grid.get_boxes_grid": [[12, 70], ["numpy.arange", "numpy.arange", "numpy.meshgrid", "numpy.dstack", "numpy.reshape", "len", "numpy.zeros", "numpy.zeros", "xrange", "numpy.repeat", "numpy.tile().transpose", "numpy.tile().transpose", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "math.sqrt", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.reshape", "numpy.hstack", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.floor", "numpy.tile", "numpy.tile", "max", "max", "max", "max"], "function", ["None"], ["def", "get_boxes_grid", "(", "image_height", ",", "image_width", ")", ":", "\n", "    ", "\"\"\"\n    Return the boxes on image grid.\n    \"\"\"", "\n", "\n", "# height and width of the heatmap", "\n", "if", "cfg", ".", "NET_NAME", "==", "'CaffeNet'", ":", "\n", "        ", "height", "=", "np", ".", "floor", "(", "(", "image_height", "*", "max", "(", "cfg", ".", "TRAIN", ".", "SCALES", ")", "-", "1", ")", "/", "4.0", "+", "1", ")", "\n", "height", "=", "np", ".", "floor", "(", "(", "height", "-", "1", ")", "/", "2.0", "+", "1", "+", "0.5", ")", "\n", "height", "=", "np", ".", "floor", "(", "(", "height", "-", "1", ")", "/", "2.0", "+", "1", "+", "0.5", ")", "\n", "\n", "width", "=", "np", ".", "floor", "(", "(", "image_width", "*", "max", "(", "cfg", ".", "TRAIN", ".", "SCALES", ")", "-", "1", ")", "/", "4.0", "+", "1", ")", "\n", "width", "=", "np", ".", "floor", "(", "(", "width", "-", "1", ")", "/", "2.0", "+", "1", "+", "0.5", ")", "\n", "width", "=", "np", ".", "floor", "(", "(", "width", "-", "1", ")", "/", "2.0", "+", "1", "+", "0.5", ")", "\n", "", "elif", "cfg", ".", "NET_NAME", "==", "'VGGnet'", ":", "\n", "        ", "height", "=", "np", ".", "floor", "(", "image_height", "*", "max", "(", "cfg", ".", "TRAIN", ".", "SCALES", ")", "/", "2.0", "+", "0.5", ")", "\n", "height", "=", "np", ".", "floor", "(", "height", "/", "2.0", "+", "0.5", ")", "\n", "height", "=", "np", ".", "floor", "(", "height", "/", "2.0", "+", "0.5", ")", "\n", "height", "=", "np", ".", "floor", "(", "height", "/", "2.0", "+", "0.5", ")", "\n", "\n", "width", "=", "np", ".", "floor", "(", "image_width", "*", "max", "(", "cfg", ".", "TRAIN", ".", "SCALES", ")", "/", "2.0", "+", "0.5", ")", "\n", "width", "=", "np", ".", "floor", "(", "width", "/", "2.0", "+", "0.5", ")", "\n", "width", "=", "np", ".", "floor", "(", "width", "/", "2.0", "+", "0.5", ")", "\n", "width", "=", "np", ".", "floor", "(", "width", "/", "2.0", "+", "0.5", ")", "\n", "", "else", ":", "\n", "        ", "assert", "(", "1", ")", ",", "'The network architecture is not supported in utils.get_boxes_grid!'", "\n", "\n", "# compute the grid box centers", "\n", "", "h", "=", "np", ".", "arange", "(", "height", ")", "\n", "w", "=", "np", ".", "arange", "(", "width", ")", "\n", "y", ",", "x", "=", "np", ".", "meshgrid", "(", "h", ",", "w", ",", "indexing", "=", "'ij'", ")", "\n", "centers", "=", "np", ".", "dstack", "(", "(", "x", ",", "y", ")", ")", "\n", "centers", "=", "np", ".", "reshape", "(", "centers", ",", "(", "-", "1", ",", "2", ")", ")", "\n", "num", "=", "centers", ".", "shape", "[", "0", "]", "\n", "\n", "# compute width and height of grid box", "\n", "area", "=", "cfg", ".", "TRAIN", ".", "KERNEL_SIZE", "*", "cfg", ".", "TRAIN", ".", "KERNEL_SIZE", "\n", "aspect", "=", "cfg", ".", "TRAIN", ".", "ASPECTS", "# height / width", "\n", "num_aspect", "=", "len", "(", "aspect", ")", "\n", "widths", "=", "np", ".", "zeros", "(", "(", "1", ",", "num_aspect", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "heights", "=", "np", ".", "zeros", "(", "(", "1", ",", "num_aspect", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "xrange", "(", "num_aspect", ")", ":", "\n", "        ", "widths", "[", "0", ",", "i", "]", "=", "math", ".", "sqrt", "(", "area", "/", "aspect", "[", "i", "]", ")", "\n", "heights", "[", "0", ",", "i", "]", "=", "widths", "[", "0", ",", "i", "]", "*", "aspect", "[", "i", "]", "\n", "\n", "# construct grid boxes", "\n", "", "centers", "=", "np", ".", "repeat", "(", "centers", ",", "num_aspect", ",", "axis", "=", "0", ")", "\n", "widths", "=", "np", ".", "tile", "(", "widths", ",", "num", ")", ".", "transpose", "(", ")", "\n", "heights", "=", "np", ".", "tile", "(", "heights", ",", "num", ")", ".", "transpose", "(", ")", "\n", "\n", "x1", "=", "np", ".", "reshape", "(", "centers", "[", ":", ",", "0", "]", ",", "(", "-", "1", ",", "1", ")", ")", "-", "widths", "*", "0.5", "\n", "x2", "=", "np", ".", "reshape", "(", "centers", "[", ":", ",", "0", "]", ",", "(", "-", "1", ",", "1", ")", ")", "+", "widths", "*", "0.5", "\n", "y1", "=", "np", ".", "reshape", "(", "centers", "[", ":", ",", "1", "]", ",", "(", "-", "1", ",", "1", ")", ")", "-", "heights", "*", "0.5", "\n", "y2", "=", "np", ".", "reshape", "(", "centers", "[", ":", ",", "1", "]", ",", "(", "-", "1", ",", "1", ")", ")", "+", "heights", "*", "0.5", "\n", "\n", "boxes_grid", "=", "np", ".", "hstack", "(", "(", "x1", ",", "y1", ",", "x2", ",", "y2", ")", ")", "/", "cfg", ".", "TRAIN", ".", "SPATIAL_SCALE", "\n", "\n", "return", "boxes_grid", ",", "centers", "[", ":", ",", "0", "]", ",", "centers", "[", ":", ",", "1", "]", "\n", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.utils.blob.im_list_to_blob": [[19, 33], ["numpy.array().max", "len", "numpy.zeros", "xrange", "numpy.array"], "function", ["None"], ["def", "im_list_to_blob", "(", "ims", ")", ":", "\n", "    ", "\"\"\"Convert a list of images into a network input.\n\n    Assumes images are already prepared (means subtracted, BGR order, ...).\n    \"\"\"", "\n", "max_shape", "=", "np", ".", "array", "(", "[", "im", ".", "shape", "for", "im", "in", "ims", "]", ")", ".", "max", "(", "axis", "=", "0", ")", "\n", "num_images", "=", "len", "(", "ims", ")", "\n", "blob", "=", "np", ".", "zeros", "(", "(", "num_images", ",", "max_shape", "[", "0", "]", ",", "max_shape", "[", "1", "]", ",", "3", ")", ",", "\n", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "i", "in", "xrange", "(", "num_images", ")", ":", "\n", "        ", "im", "=", "ims", "[", "i", "]", "\n", "blob", "[", "i", ",", "0", ":", "im", ".", "shape", "[", "0", "]", ",", "0", ":", "im", ".", "shape", "[", "1", "]", ",", ":", "]", "=", "im", "\n", "\n", "", "return", "blob", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.utils.blob.prep_im_for_blob": [[34, 80], ["numpy.min", "numpy.max", "np.clip.astype", "float", "float", "numpy.round", "skimage.transform.rotate", "numpy.random.random_integers", "numpy.random.random_integers", "numpy.random.random_integers", "numpy.random.random_integers", "numpy.random.uniform", "numpy.clip", "numpy.mean", "numpy.clip", "float", "float", "skimage.transform.resize", "numpy.random.uniform", "skimage.transform.resize", "numpy.random.uniform", "numpy.round", "numpy.round", "numpy.round", "numpy.round"], "function", ["None"], ["", "def", "prep_im_for_blob", "(", "im", ",", "net_name", ",", "pixel_means", ",", "pixel_stds", ",", "target_size", ",", "max_size", ",", "is_training", ",", "is_ws", "=", "False", ")", ":", "\n", "    ", "\"\"\"Mean subtract and scale an image for use in a blob.\"\"\"", "\n", "im", "=", "im", ".", "astype", "(", "np", ".", "float32", ",", "copy", "=", "False", ")", "/", "255.", "\n", "\n", "# added by syshin", "\n", "if", "is_ws", ":", "\n", "        ", "if", "cfg", ".", "TRAIN", ".", "USE_ROTATION", ":", "\n", "            ", "im", "=", "skimage", ".", "transform", ".", "rotate", "(", "im", ",", "np", ".", "random", ".", "uniform", "(", "-", "cfg", ".", "TRAIN", ".", "ROTATION_MAX_ANGLE", ",", "cfg", ".", "TRAIN", ".", "ROTATION_MAX_ANGLE", ")", ",", "cval", "=", "pixel_means", "[", "0", "]", "[", "0", "]", "[", "0", "]", "/", "255.", ")", "\n", "\n", "", "if", "cfg", ".", "TRAIN", ".", "USE_CROPPING", ":", "\n", "            ", "offsets_u", "=", "np", ".", "random", ".", "random_integers", "(", "0", ",", "cfg", ".", "TRAIN", ".", "CROPPING_MAX_MARGIN", "*", "im", ".", "shape", "[", "0", "]", ")", "\n", "offsets_d", "=", "np", ".", "random", ".", "random_integers", "(", "1", ",", "cfg", ".", "TRAIN", ".", "CROPPING_MAX_MARGIN", "*", "im", ".", "shape", "[", "0", "]", ")", "\n", "offsets_l", "=", "np", ".", "random", ".", "random_integers", "(", "0", ",", "cfg", ".", "TRAIN", ".", "CROPPING_MAX_MARGIN", "*", "im", ".", "shape", "[", "1", "]", ")", "\n", "offsets_r", "=", "np", ".", "random", ".", "random_integers", "(", "1", ",", "cfg", ".", "TRAIN", ".", "CROPPING_MAX_MARGIN", "*", "im", ".", "shape", "[", "1", "]", ")", "\n", "im", "=", "im", "[", "offsets_u", ":", "-", "offsets_d", ",", "offsets_l", ":", "-", "offsets_r", ",", ":", "]", "\n", "\n", "", "", "if", "is_training", ":", "\n", "        ", "if", "cfg", ".", "TRAIN", ".", "USE_BRIGHTNESS_ADJUSTMENT", ":", "\n", "            ", "im", "+=", "np", ".", "random", ".", "uniform", "(", "-", "cfg", ".", "TRAIN", ".", "BRIGHTNESS_ADJUSTMENT_MAX_DELTA", ",", "cfg", ".", "TRAIN", ".", "BRIGHTNESS_ADJUSTMENT_MAX_DELTA", ")", "\n", "im", "=", "np", ".", "clip", "(", "im", ",", "0", ",", "1", ")", "\n", "\n", "", "if", "cfg", ".", "TRAIN", ".", "USE_CONTRAST_ADJUSTMENT", ":", "\n", "            ", "mm", "=", "np", ".", "mean", "(", "im", ")", "\n", "im", "=", "(", "im", "-", "mm", ")", "*", "np", ".", "random", ".", "uniform", "(", "cfg", ".", "TRAIN", ".", "CONTRAST_ADJUSTMENT_LOWER_FACTOR", ",", "cfg", ".", "TRAIN", ".", "CONTRAST_ADJUSTMENT_UPPER_FACTOR", ")", "+", "mm", "\n", "im", "=", "np", ".", "clip", "(", "im", ",", "0", ",", "1", ")", "\n", "# added by syshin", "\n", "\n", "", "", "im", "-=", "pixel_means", "/", "255.", "\n", "im_shape", "=", "im", ".", "shape", "\n", "im_size_min", "=", "np", ".", "min", "(", "im_shape", "[", "0", ":", "2", "]", ")", "\n", "im_size_max", "=", "np", ".", "max", "(", "im_shape", "[", "0", ":", "2", "]", ")", "\n", "im_scale", "=", "float", "(", "target_size", ")", "/", "float", "(", "im_size_min", ")", "\n", "# Prevent the biggest axis from being more than MAX_SIZE", "\n", "if", "np", ".", "round", "(", "im_scale", "*", "im_size_max", ")", ">", "max_size", ":", "\n", "        ", "im_scale", "=", "float", "(", "max_size", ")", "/", "float", "(", "im_size_max", ")", "\n", "", "\"\"\"im = cv2.resize(im, None, None, fx=im_scale, fy=im_scale,\n                    interpolation=cv2.INTER_LINEAR)\"\"\"", "\n", "\"\"\"im_pil = Image.fromarray(im)\n    temp = im_pil.resize((np.round(im_shape[1]*im_scale),np.round(im_shape[0]*im_scale)), resample=Image.BILINEAR)\n    im = np.array(temp)\"\"\"", "\n", "if", "net_name", "[", ":", "6", "]", "==", "'Resnet'", ":", "\n", "        ", "im", "=", "skimage", ".", "transform", ".", "resize", "(", "im", ",", "[", "np", ".", "round", "(", "im_shape", "[", "0", "]", "*", "im_scale", ")", ",", "np", ".", "round", "(", "im_shape", "[", "1", "]", "*", "im_scale", ")", "]", ")", "/", "(", "pixel_stds", "/", "255.", ")", "\n", "", "elif", "net_name", "[", ":", "6", "]", "==", "'VGGnet'", ":", "\n", "        ", "im", "=", "skimage", ".", "transform", ".", "resize", "(", "im", ",", "[", "np", ".", "round", "(", "im_shape", "[", "0", "]", "*", "im_scale", ")", ",", "np", ".", "round", "(", "im_shape", "[", "1", "]", "*", "im_scale", ")", "]", ")", "*", "255.", "\n", "\n", "", "return", "im", ",", "im_scale", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.datasets.ds_utils.unique_boxes": [[9, 15], ["numpy.array", "numpy.round().dot", "numpy.unique", "numpy.sort", "numpy.round"], "function", ["None"], ["def", "unique_boxes", "(", "boxes", ",", "scale", "=", "1.0", ")", ":", "\n", "    ", "\"\"\"Return indices of unique boxes.\"\"\"", "\n", "v", "=", "np", ".", "array", "(", "[", "1", ",", "1e3", ",", "1e6", ",", "1e9", "]", ")", "\n", "hashes", "=", "np", ".", "round", "(", "boxes", "*", "scale", ")", ".", "dot", "(", "v", ")", "\n", "_", ",", "index", "=", "np", ".", "unique", "(", "hashes", ",", "return_index", "=", "True", ")", "\n", "return", "np", ".", "sort", "(", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.datasets.ds_utils.xywh_to_xyxy": [[16, 19], ["numpy.hstack"], "function", ["None"], ["", "def", "xywh_to_xyxy", "(", "boxes", ")", ":", "\n", "    ", "\"\"\"Convert [x y w h] box format to [x1 y1 x2 y2] format.\"\"\"", "\n", "return", "np", ".", "hstack", "(", "(", "boxes", "[", ":", ",", "0", ":", "2", "]", ",", "boxes", "[", ":", ",", "0", ":", "2", "]", "+", "boxes", "[", ":", ",", "2", ":", "4", "]", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.datasets.ds_utils.xyxy_to_xywh": [[20, 23], ["numpy.hstack"], "function", ["None"], ["", "def", "xyxy_to_xywh", "(", "boxes", ")", ":", "\n", "    ", "\"\"\"Convert [x1 y1 x2 y2] box format to [x y w h] format.\"\"\"", "\n", "return", "np", ".", "hstack", "(", "(", "boxes", "[", ":", ",", "0", ":", "2", "]", ",", "boxes", "[", ":", ",", "2", ":", "4", "]", "-", "boxes", "[", ":", ",", "0", ":", "2", "]", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.datasets.ds_utils.validate_boxes": [[24, 36], ["None"], "function", ["None"], ["", "def", "validate_boxes", "(", "boxes", ",", "width", "=", "0", ",", "height", "=", "0", ")", ":", "\n", "    ", "\"\"\"Check that a set of boxes are valid.\"\"\"", "\n", "x1", "=", "boxes", "[", ":", ",", "0", "]", "\n", "y1", "=", "boxes", "[", ":", ",", "1", "]", "\n", "x2", "=", "boxes", "[", ":", ",", "2", "]", "\n", "y2", "=", "boxes", "[", ":", ",", "3", "]", "\n", "assert", "(", "x1", ">=", "0", ")", ".", "all", "(", ")", "\n", "assert", "(", "y1", ">=", "0", ")", ".", "all", "(", ")", "\n", "assert", "(", "x2", ">=", "x1", ")", ".", "all", "(", ")", "\n", "assert", "(", "y2", ">=", "y1", ")", ".", "all", "(", ")", "\n", "assert", "(", "x2", "<", "width", ")", ".", "all", "(", ")", "\n", "assert", "(", "y2", "<", "height", ")", ".", "all", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.datasets.ds_utils.filter_small_boxes": [[37, 42], ["numpy.where"], "function", ["None"], ["", "def", "filter_small_boxes", "(", "boxes", ",", "min_size", ")", ":", "\n", "    ", "w", "=", "boxes", "[", ":", ",", "2", "]", "-", "boxes", "[", ":", ",", "0", "]", "\n", "h", "=", "boxes", "[", ":", ",", "3", "]", "-", "boxes", "[", ":", ",", "1", "]", "\n", "keep", "=", "np", ".", "where", "(", "(", "w", ">=", "min_size", ")", "&", "(", "h", ">", "min_size", ")", ")", "[", "0", "]", "\n", "return", "keep", "\n", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.datasets.__init__._which": [[23, 40], ["os.path.split", "__init__._which.is_exe"], "function", ["None"], []], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.nms.py_cpu_nms.py_cpu_nms": [[10, 39], ["scores.argsort", "keep.append", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.maximum", "numpy.maximum", "numpy.where"], "function", ["None"], ["def", "py_cpu_nms", "(", "dets", ",", "thresh", ")", ":", "\n", "    ", "\"\"\"Pure Python NMS baseline.\"\"\"", "\n", "x1", "=", "dets", "[", ":", ",", "0", "]", "\n", "y1", "=", "dets", "[", ":", ",", "1", "]", "\n", "x2", "=", "dets", "[", ":", ",", "2", "]", "\n", "y2", "=", "dets", "[", ":", ",", "3", "]", "\n", "scores", "=", "dets", "[", ":", ",", "4", "]", "\n", "\n", "areas", "=", "(", "x2", "-", "x1", "+", "1", ")", "*", "(", "y2", "-", "y1", "+", "1", ")", "\n", "order", "=", "scores", ".", "argsort", "(", ")", "[", ":", ":", "-", "1", "]", "\n", "\n", "keep", "=", "[", "]", "\n", "while", "order", ".", "size", ">", "0", ":", "\n", "        ", "i", "=", "order", "[", "0", "]", "\n", "keep", ".", "append", "(", "i", ")", "\n", "xx1", "=", "np", ".", "maximum", "(", "x1", "[", "i", "]", ",", "x1", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "yy1", "=", "np", ".", "maximum", "(", "y1", "[", "i", "]", ",", "y1", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "xx2", "=", "np", ".", "minimum", "(", "x2", "[", "i", "]", ",", "x2", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "yy2", "=", "np", ".", "minimum", "(", "y2", "[", "i", "]", ",", "y2", "[", "order", "[", "1", ":", "]", "]", ")", "\n", "\n", "w", "=", "np", ".", "maximum", "(", "0.0", ",", "xx2", "-", "xx1", "+", "1", ")", "\n", "h", "=", "np", ".", "maximum", "(", "0.0", ",", "yy2", "-", "yy1", "+", "1", ")", "\n", "inter", "=", "w", "*", "h", "\n", "ovr", "=", "inter", "/", "(", "areas", "[", "i", "]", "+", "areas", "[", "order", "[", "1", ":", "]", "]", "-", "inter", ")", "\n", "\n", "inds", "=", "np", ".", "where", "(", "ovr", "<=", "thresh", ")", "[", "0", "]", "\n", "order", "=", "order", "[", "inds", "+", "1", "]", "\n", "\n", "", "return", "keep", "\n", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_pooling_layer.roi_pooling_op_grad._roi_pool_shape": [[7, 23], ["tensorflow.python.framework.ops.RegisterShape", "op.inputs[].get_shape().as_list", "op.inputs[].get_shape().as_list", "op.get_attr", "op.get_attr", "tensorflow.TensorShape", "op.inputs[].get_shape", "op.inputs[].get_shape"], "function", ["None"], ["@", "ops", ".", "RegisterShape", "(", "\"RoiPool\"", ")", "\n", "#@tf.RegisterShape(\"RoiPool\")", "\n", "def", "_roi_pool_shape", "(", "op", ")", ":", "\n", "  ", "\"\"\"Shape function for the RoiPool op.\n\n  \"\"\"", "\n", "dims_data", "=", "op", ".", "inputs", "[", "0", "]", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "channels", "=", "dims_data", "[", "3", "]", "\n", "dims_rois", "=", "op", ".", "inputs", "[", "1", "]", ".", "get_shape", "(", ")", ".", "as_list", "(", ")", "\n", "num_rois", "=", "dims_rois", "[", "0", "]", "\n", "\n", "pooled_height", "=", "op", ".", "get_attr", "(", "'pooled_height'", ")", "\n", "pooled_width", "=", "op", ".", "get_attr", "(", "'pooled_width'", ")", "\n", "\n", "output_shape", "=", "tf", ".", "TensorShape", "(", "[", "num_rois", ",", "pooled_height", ",", "pooled_width", ",", "channels", "]", ")", "\n", "return", "[", "output_shape", ",", "output_shape", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.roi_pooling_layer.roi_pooling_op_grad._roi_pool_grad": [[24, 45], ["tensorflow.python.framework.ops.RegisterGradient", "op.get_attr", "op.get_attr", "op.get_attr", "roi_pooling_op.roi_pool_grad"], "function", ["None"], ["", "@", "ops", ".", "RegisterGradient", "(", "\"RoiPool\"", ")", "\n", "def", "_roi_pool_grad", "(", "op", ",", "grad", ",", "_", ")", ":", "\n", "  ", "\"\"\"The gradients for `roi_pool`.\n  Args:\n    op: The `roi_pool` `Operation` that we are differentiating, which we can use\n      to find the inputs and outputs of the original op.\n    grad: Gradient with respect to the output of the `roi_pool` op.\n  Returns:\n    Gradients with respect to the input of `zero_out`.\n  \"\"\"", "\n", "data", "=", "op", ".", "inputs", "[", "0", "]", "\n", "rois", "=", "op", ".", "inputs", "[", "1", "]", "\n", "argmax", "=", "op", ".", "outputs", "[", "1", "]", "\n", "pooled_height", "=", "op", ".", "get_attr", "(", "'pooled_height'", ")", "\n", "pooled_width", "=", "op", ".", "get_attr", "(", "'pooled_width'", ")", "\n", "spatial_scale", "=", "op", ".", "get_attr", "(", "'spatial_scale'", ")", "\n", "\n", "# compute gradient", "\n", "data_grad", "=", "roi_pooling_op", ".", "roi_pool_grad", "(", "data", ",", "rois", ",", "argmax", ",", "grad", ",", "pooled_height", ",", "pooled_width", ",", "spatial_scale", ")", "\n", "\n", "return", "[", "data_grad", ",", "None", "]", "# List of one Tensor, since we have one input", "\n", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.Resnet_test_bus.Resnet_test_bus.__init__": [[14, 35], ["tensorflow.placeholder", "tensorflow.placeholder", "dict", "Resnet_test_bus.Resnet_test_bus.setup"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_train_bus_alter.VGGnet_train_bus_alter.setup"], ["    ", "def", "__init__", "(", "self", ",", "net_depth", ",", "dataset", ",", "norm_type", ",", "trainable", "=", "True", ")", ":", "\n", "        ", "self", ".", "inputs", "=", "[", "]", "\n", "self", ".", "data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "None", ",", "None", ",", "3", "]", ")", "\n", "self", ".", "im_info", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "3", "]", ")", "\n", "self", ".", "layers", "=", "dict", "(", "{", "'data'", ":", "self", ".", "data", ",", "'im_info'", ":", "self", ".", "im_info", "}", ")", "\n", "self", ".", "net_depth", "=", "net_depth", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "norm_type", "=", "norm_type", "\n", "self", ".", "trainable", "=", "trainable", "\n", "\n", "self", ".", "resnet_def", "=", "{", "\n", "18", ":", "(", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "self", ".", "basicblock", ")", ",", "\n", "34", ":", "(", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "self", ".", "basicblock", ")", ",", "\n", "50", ":", "(", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "self", ".", "bottleneck", ")", ",", "\n", "101", ":", "(", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "self", ".", "bottleneck", ")", "\n", "}", "\n", "\n", "defs", ",", "block_func", "=", "self", ".", "resnet_def", "[", "net_depth", "]", "\n", "self", ".", "defs", "=", "defs", "\n", "self", ".", "block_func", "=", "block_func", "\n", "self", ".", "setup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.Resnet_test_bus.Resnet_test_bus.setup": [[36, 76], ["Resnet_test_bus.Resnet_test_bus.feed().conv().max_pool().layer_group().layer_group().layer_group().normalization().relu", "Resnet_test_bus.Resnet_test_bus.feed().conv().conv", "Resnet_test_bus.Resnet_test_bus.feed().conv", "Resnet_test_bus.Resnet_test_bus.feed().reshape_layer().softmax", "Resnet_test_bus.Resnet_test_bus.feed().reshape_layer", "Resnet_test_bus.Resnet_test_bus.feed().proposal_layer", "Resnet_test_bus.Resnet_test_bus.feed().roi_pool().layer_group().normalization().relu().GlobalAvgPooling().fc().softmax", "Resnet_test_bus.Resnet_test_bus.feed().fc", "Resnet_test_bus.Resnet_test_bus.feed().conv().max_pool().layer_group().layer_group().layer_group().normalization", "Resnet_test_bus.Resnet_test_bus.feed().conv", "Resnet_test_bus.Resnet_test_bus.feed", "Resnet_test_bus.Resnet_test_bus.feed().reshape_layer", "Resnet_test_bus.Resnet_test_bus.feed", "Resnet_test_bus.Resnet_test_bus.feed", "Resnet_test_bus.Resnet_test_bus.feed().roi_pool().layer_group().normalization().relu().GlobalAvgPooling().fc", "Resnet_test_bus.Resnet_test_bus.feed", "len", "len", "len", "Resnet_test_bus.Resnet_test_bus.feed().conv().max_pool().layer_group().layer_group().layer_group", "Resnet_test_bus.Resnet_test_bus.feed", "Resnet_test_bus.Resnet_test_bus.feed", "Resnet_test_bus.Resnet_test_bus.feed().roi_pool().layer_group().normalization().relu().GlobalAvgPooling", "Resnet_test_bus.Resnet_test_bus.feed().conv().max_pool().layer_group().layer_group", "Resnet_test_bus.Resnet_test_bus.feed().roi_pool().layer_group().normalization().relu", "Resnet_test_bus.Resnet_test_bus.feed().conv().max_pool().layer_group", "Resnet_test_bus.Resnet_test_bus.feed().roi_pool().layer_group().normalization", "Resnet_test_bus.Resnet_test_bus.feed().conv().max_pool", "Resnet_test_bus.Resnet_test_bus.feed().roi_pool().layer_group", "Resnet_test_bus.Resnet_test_bus.feed().conv", "Resnet_test_bus.Resnet_test_bus.feed().roi_pool", "Resnet_test_bus.Resnet_test_bus.feed", "Resnet_test_bus.Resnet_test_bus.feed"], "methods", ["None"], ["", "def", "setup", "(", "self", ")", ":", "\n", "        ", "(", "self", ".", "feed", "(", "'data'", ")", "\n", ".", "conv", "(", "7", ",", "7", ",", "64", ",", "2", ",", "2", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "False", ",", "name", "=", "'conv0'", ")", "\n", ".", "max_pool", "(", "3", ",", "3", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'group0/pool'", ")", "\n", ".", "layer_group", "(", "self", ".", "block_func", ",", "64", ",", "self", ".", "defs", "[", "0", "]", ",", "1", ",", "1", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "False", ",", "first", "=", "True", ",", "name", "=", "'group0'", ")", "\n", ".", "layer_group", "(", "self", ".", "block_func", ",", "128", ",", "self", ".", "defs", "[", "1", "]", ",", "2", ",", "2", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "False", ",", "name", "=", "'group1'", ")", "\n", ".", "layer_group", "(", "self", ".", "block_func", ",", "256", ",", "self", ".", "defs", "[", "2", "]", ",", "2", ",", "2", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "False", ",", "name", "=", "'group2'", ")", "\n", ".", "normalization", "(", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "False", ",", "name", "=", "'group2/norm'", ")", "\n", ".", "relu", "(", "name", "=", "'group2/relu'", ")", ")", "\n", "\n", "#========= RPN ============", "\n", "(", "self", ".", "feed", "(", "'group2/relu'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "(", "256", "if", "self", ".", "block_func", "==", "self", ".", "basicblock", "else", "256", "*", "4", ")", ",", "1", ",", "1", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "False", ",", "name", "=", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "1", ",", "1", ",", "norm_type", "=", "None", ",", "use_relu", "=", "False", ",", "is_training", "=", "False", ",", "padding", "=", "'VALID'", ",", "name", "=", "'rpn_cls_score'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "4", ",", "1", ",", "1", ",", "norm_type", "=", "None", ",", "use_relu", "=", "False", ",", "is_training", "=", "False", ",", "padding", "=", "'VALID'", ",", "name", "=", "'rpn_bbox_pred'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_score'", ")", "\n", ".", "reshape_layer", "(", "2", ",", "name", "=", "'rpn_cls_score_reshape'", ")", "\n", ".", "softmax", "(", "name", "=", "'rpn_cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob'", ")", "\n", ".", "reshape_layer", "(", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "name", "=", "'rpn_cls_prob_reshape'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob_reshape'", ",", "'rpn_bbox_pred'", ",", "'im_info'", ")", "\n", ".", "proposal_layer", "(", "_feat_stride", ",", "anchor_scales", ",", "False", ",", "False", ",", "name", "=", "'rois'", ")", ")", "\n", "\n", "#========= RCNN ============", "\n", "(", "self", ".", "feed", "(", "'group2/relu'", ",", "'rois'", ")", "\n", ".", "roi_pool", "(", "7", ",", "7", ",", "1.0", "/", "16", ",", "name", "=", "'roi_pool'", ")", "\n", ".", "layer_group", "(", "self", ".", "block_func", ",", "512", ",", "self", ".", "defs", "[", "3", "]", ",", "2", ",", "2", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "False", ",", "name", "=", "'group3'", ")", "\n", ".", "normalization", "(", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "False", ",", "name", "=", "'group3/norm'", ")", "\n", ".", "relu", "(", "name", "=", "'group3/relu'", ")", "\n", ".", "GlobalAvgPooling", "(", "name", "=", "'gap'", ")", "\n", ".", "fc", "(", "n_classes", ",", "use_relu", "=", "False", ",", "name", "=", "'cls_score'", ")", "\n", ".", "softmax", "(", "name", "=", "'cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'gap'", ")", "\n", ".", "fc", "(", "n_classes", "*", "4", ",", "use_relu", "=", "False", ",", "name", "=", "'bbox_pred'", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_train_bus.VGGnet_train_bus.__init__": [[15, 41], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "dict", "VGGnet_train_bus.VGGnet_train_bus.setup", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable.assign", "tensorflow.get_variable.assign", "tensorflow.get_variable.get_shape", "tensorflow.get_variable.get_shape"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_train_bus_alter.VGGnet_train_bus_alter.setup"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "trainable", "=", "True", ")", ":", "\n", "        ", "self", ".", "inputs", "=", "[", "]", "\n", "self", ".", "data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "None", ",", "None", ",", "3", "]", ")", "\n", "self", ".", "im_info", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "4", "]", ")", "\n", "self", ".", "gt_boxes", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "cfg", ".", "TRAIN", ".", "MAX_GT_PER_IMAGE", ",", "5", "]", ")", "\n", "self", ".", "num_gt_boxes", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", "]", ")", "# added for handling an arbitrary batch size  ", "\n", "self", ".", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "self", ".", "is_training", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "self", ".", "is_ws", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "\n", "self", ".", "layers", "=", "dict", "(", "{", "'data'", ":", "self", ".", "data", ",", "'im_info'", ":", "self", ".", "im_info", ",", "'gt_boxes'", ":", "self", ".", "gt_boxes", ",", "'num_gt_boxes'", ":", "self", ".", "num_gt_boxes", ",", "'keep_prob'", ":", "self", ".", "keep_prob", ",", "'is_training'", ":", "self", ".", "is_training", ",", "'is_ws'", ":", "self", ".", "is_ws", "}", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "trainable", "=", "trainable", "\n", "self", ".", "setup", "(", ")", "\n", "\n", "# beyond RPN", "\n", "# create ops and placeholders for bbox normalization process", "\n", "with", "tf", ".", "variable_scope", "(", "'bbox_pred'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "weights", "=", "tf", ".", "get_variable", "(", "\"weights\"", ")", "\n", "biases", "=", "tf", ".", "get_variable", "(", "\"biases\"", ")", "\n", "\n", "self", ".", "bbox_weights", "=", "tf", ".", "placeholder", "(", "weights", ".", "dtype", ",", "shape", "=", "weights", ".", "get_shape", "(", ")", ")", "\n", "self", ".", "bbox_biases", "=", "tf", ".", "placeholder", "(", "biases", ".", "dtype", ",", "shape", "=", "biases", ".", "get_shape", "(", ")", ")", "\n", "\n", "self", ".", "bbox_weights_assign", "=", "weights", ".", "assign", "(", "self", ".", "bbox_weights", ")", "\n", "self", ".", "bbox_bias_assign", "=", "biases", ".", "assign", "(", "self", ".", "bbox_biases", ")", "\n", "# beyond RPN", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_train_bus.VGGnet_train_bus.setup": [[43, 102], ["VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().anchor_target_layer_joint", "VGGnet_train_bus.VGGnet_train_bus.feed().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().reshape_layer().softmax", "VGGnet_train_bus.VGGnet_train_bus.feed().reshape_layer", "VGGnet_train_bus.VGGnet_train_bus.feed().proposal_layer", "VGGnet_train_bus.VGGnet_train_bus.feed().proposal_target_layer_joint", "VGGnet_train_bus.VGGnet_train_bus.feed().roi_pool().fc().dropout().fc().dropout().fc().softmax", "VGGnet_train_bus.VGGnet_train_bus.feed().fc", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().conv", "VGGnet_train_bus.VGGnet_train_bus.feed", "VGGnet_train_bus.VGGnet_train_bus.feed", "VGGnet_train_bus.VGGnet_train_bus.feed().reshape_layer", "VGGnet_train_bus.VGGnet_train_bus.feed", "VGGnet_train_bus.VGGnet_train_bus.feed", "VGGnet_train_bus.VGGnet_train_bus.feed", "VGGnet_train_bus.VGGnet_train_bus.feed().roi_pool().fc().dropout().fc().dropout().fc", "VGGnet_train_bus.VGGnet_train_bus.feed", "len", "len", "len", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool().conv", "VGGnet_train_bus.VGGnet_train_bus.feed", "VGGnet_train_bus.VGGnet_train_bus.feed", "VGGnet_train_bus.VGGnet_train_bus.feed().roi_pool().fc().dropout().fc().dropout", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool", "VGGnet_train_bus.VGGnet_train_bus.feed().roi_pool().fc().dropout().fc", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().roi_pool().fc().dropout", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().roi_pool().fc", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().roi_pool", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool", "VGGnet_train_bus.VGGnet_train_bus.feed", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv().max_pool", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv().max_pool", "VGGnet_train_bus.VGGnet_train_bus.feed().conv().conv", "VGGnet_train_bus.VGGnet_train_bus.feed().conv", "VGGnet_train_bus.VGGnet_train_bus.feed"], "methods", ["None"], ["", "", "def", "setup", "(", "self", ")", ":", "\n", "        ", "(", "self", ".", "feed", "(", "'data'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "64", ",", "1", ",", "1", ",", "name", "=", "'conv1_1'", ",", "trainable", "=", "False", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "64", ",", "1", ",", "1", ",", "name", "=", "'conv1_2'", ",", "trainable", "=", "False", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "128", ",", "1", ",", "1", ",", "name", "=", "'conv2_1'", ",", "trainable", "=", "False", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "128", ",", "1", ",", "1", ",", "name", "=", "'conv2_2'", ",", "trainable", "=", "False", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "256", ",", "1", ",", "1", ",", "name", "=", "'conv3_1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "256", ",", "1", ",", "1", ",", "name", "=", "'conv3_2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "256", ",", "1", ",", "1", ",", "name", "=", "'conv3_3'", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool3'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv4_1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv4_2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv4_3'", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool4'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv5_1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv5_2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv5_3'", ")", ")", "\n", "#========= RPN ============", "\n", "(", "self", ".", "feed", "(", "'conv5_3'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "1", ",", "1", ",", "padding", "=", "'VALID'", ",", "use_relu", "=", "False", ",", "name", "=", "'rpn_cls_score'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_score'", ",", "'gt_boxes'", ",", "'num_gt_boxes'", ",", "'im_info'", ",", "'data'", ")", "\n", ".", "anchor_target_layer_joint", "(", "_feat_stride", ",", "anchor_scales", ",", "self", ".", "dataset", ",", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'rpn-data'", ")", ")", "\n", "\n", "# Loss of rpn_cls & rpn_boxes", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "4", ",", "1", ",", "1", ",", "padding", "=", "'VALID'", ",", "use_relu", "=", "False", ",", "name", "=", "'rpn_bbox_pred'", ")", ")", "\n", "\n", "#========= RoI Proposal ============", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_score'", ")", "\n", ".", "reshape_layer", "(", "2", ",", "name", "=", "'rpn_cls_score_reshape'", ")", "\n", ".", "softmax", "(", "name", "=", "'rpn_cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob'", ")", "\n", ".", "reshape_layer", "(", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "name", "=", "'rpn_cls_prob_reshape'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob_reshape'", ",", "'rpn_bbox_pred'", ",", "'im_info'", ")", "\n", ".", "proposal_layer", "(", "_feat_stride", ",", "anchor_scales", ",", "self", ".", "layers", "[", "'is_training'", "]", ",", "self", ".", "layers", "[", "'is_ws'", "]", ",", "name", "=", "'rpn_rois'", ")", ")", "\n", "\n", "# beyond RPN", "\n", "(", "self", ".", "feed", "(", "'rpn_rois'", ",", "'gt_boxes'", ",", "'num_gt_boxes'", ")", "\n", ".", "proposal_target_layer_joint", "(", "n_classes", ",", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'roi-data'", ")", ")", "\n", "\n", "#========= RCNN ============", "\n", "(", "self", ".", "feed", "(", "'conv5_3'", ",", "'roi-data'", ")", "\n", ".", "roi_pool", "(", "7", ",", "7", ",", "1.0", "/", "16", ",", "name", "=", "'pool_5'", ")", "\n", ".", "fc", "(", "512", ",", "name", "=", "'fc6'", ")", "\n", ".", "dropout", "(", "self", ".", "layers", "[", "'keep_prob'", "]", ",", "name", "=", "'drop6'", ")", "\n", ".", "fc", "(", "512", ",", "name", "=", "'fc7'", ")", "\n", ".", "dropout", "(", "self", ".", "layers", "[", "'keep_prob'", "]", ",", "name", "=", "'drop7'", ")", "\n", ".", "fc", "(", "n_classes", ",", "use_relu", "=", "False", ",", "name", "=", "'cls_score'", ")", "\n", ".", "softmax", "(", "name", "=", "'cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'drop7'", ")", "\n", ".", "fc", "(", "n_classes", "*", "4", ",", "use_relu", "=", "False", ",", "name", "=", "'bbox_pred'", ")", ")", "\n", "# beyond RPN", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.factory_bus.get_network": [[28, 45], ["networks.VGGnet_train_bus", "networks.VGGnet_train_bus", "networks.VGGnet_train_bus", "networks.VGGnet_train_bus", "networks.VGGnet_train_bus", "networks.VGGnet_train_bus_alter", "networks.VGGnet_train_bus_alter", "networks.VGGnet_train_bus_alter", "networks.VGGnet_train_bus_alter", "networks.VGGnet_train_bus_alter", "networks.VGGnet_test_bus", "networks.VGGnet_test_bus", "networks.VGGnet_test_bus", "networks.VGGnet_test_bus", "networks.VGGnet_test_bus", "networks.Resnet_train_bus", "networks.Resnet_train_bus", "networks.Resnet_train_bus", "networks.Resnet_train_bus", "networks.Resnet_train_bus", "networks.Resnet_test_bus", "networks.Resnet_test_bus", "networks.Resnet_test_bus", "networks.Resnet_test_bus", "networks.Resnet_test_bus", "KeyError"], "function", ["None"], ["\n", "", "def", "list_imdbs", "(", ")", ":", "\n", "    ", "\"\"\"List all registered imdbs.\"\"\"", "\n", "return", "__sets", ".", "keys", "(", ")", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.factory_bus.list_networks": [[47, 50], ["__sets.keys"], "function", ["None"], []], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.Resnet_train_bus.Resnet_train_bus.__init__": [[14, 53], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "dict", "Resnet_train_bus.Resnet_train_bus.setup", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable.assign", "tensorflow.get_variable.assign", "tensorflow.get_variable.get_shape", "tensorflow.get_variable.get_shape"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_train_bus_alter.VGGnet_train_bus_alter.setup"], ["    ", "def", "__init__", "(", "self", ",", "net_depth", ",", "dataset", ",", "norm_type", ",", "trainable", "=", "True", ")", ":", "\n", "        ", "self", ".", "inputs", "=", "[", "]", "\n", "self", ".", "data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "None", ",", "None", ",", "3", "]", ")", "\n", "self", ".", "im_info", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "4", "]", ")", "# modified for adding image-level labels (diagnostic label in this case)", "\n", "self", ".", "gt_boxes", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "cfg", ".", "TRAIN", ".", "MAX_GT_PER_IMAGE", ",", "5", "]", ")", "# modified for handling an arbitrary batch size", "\n", "self", ".", "num_gt_boxes", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", "]", ")", "# added for handling an arbitrary batch size         ", "\n", "self", ".", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "self", ".", "is_training", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "# added by syshin", "\n", "self", ".", "is_ws", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "# added by syshin", "\n", "self", ".", "layers", "=", "dict", "(", "{", "'data'", ":", "self", ".", "data", ",", "'im_info'", ":", "self", ".", "im_info", ",", "'gt_boxes'", ":", "self", ".", "gt_boxes", ",", "'num_gt_boxes'", ":", "self", ".", "num_gt_boxes", ",", "'keep_prob'", ":", "self", ".", "keep_prob", ",", "'is_training'", ":", "self", ".", "is_training", ",", "'is_ws'", ":", "self", ".", "is_ws", "}", ")", "\n", "self", ".", "net_depth", "=", "net_depth", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "norm_type", "=", "norm_type", "\n", "self", ".", "trainable", "=", "trainable", "\n", "\n", "self", ".", "resnet_def", "=", "{", "\n", "18", ":", "(", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "self", ".", "basicblock", ")", ",", "\n", "34", ":", "(", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "self", ".", "basicblock", ")", ",", "\n", "50", ":", "(", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "self", ".", "bottleneck", ")", ",", "\n", "101", ":", "(", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "self", ".", "bottleneck", ")", "\n", "}", "\n", "\n", "defs", ",", "block_func", "=", "self", ".", "resnet_def", "[", "net_depth", "]", "\n", "self", ".", "defs", "=", "defs", "\n", "self", ".", "block_func", "=", "block_func", "\n", "self", ".", "setup", "(", ")", "\n", "\n", "# beyond RPN", "\n", "# create ops and placeholders for bbox normalization process", "\n", "with", "tf", ".", "variable_scope", "(", "'bbox_pred'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "weights", "=", "tf", ".", "get_variable", "(", "\"weights\"", ")", "\n", "biases", "=", "tf", ".", "get_variable", "(", "\"biases\"", ")", "\n", "\n", "self", ".", "bbox_weights", "=", "tf", ".", "placeholder", "(", "weights", ".", "dtype", ",", "shape", "=", "weights", ".", "get_shape", "(", ")", ")", "\n", "self", ".", "bbox_biases", "=", "tf", ".", "placeholder", "(", "biases", ".", "dtype", ",", "shape", "=", "biases", ".", "get_shape", "(", ")", ")", "\n", "\n", "self", ".", "bbox_weights_assign", "=", "weights", ".", "assign", "(", "self", ".", "bbox_weights", ")", "\n", "self", ".", "bbox_bias_assign", "=", "biases", ".", "assign", "(", "self", ".", "bbox_biases", ")", "\n", "# beyond RPN", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.Resnet_train_bus.Resnet_train_bus.setup": [[55, 102], ["Resnet_train_bus.Resnet_train_bus.feed().conv().max_pool().layer_group().layer_group().layer_group().normalization().relu", "Resnet_train_bus.Resnet_train_bus.feed().conv().conv", "Resnet_train_bus.Resnet_train_bus.feed().anchor_target_layer_joint", "Resnet_train_bus.Resnet_train_bus.feed().conv", "Resnet_train_bus.Resnet_train_bus.feed().reshape_layer().softmax", "Resnet_train_bus.Resnet_train_bus.feed().reshape_layer", "Resnet_train_bus.Resnet_train_bus.feed().proposal_layer", "Resnet_train_bus.Resnet_train_bus.feed().proposal_target_layer_joint", "Resnet_train_bus.Resnet_train_bus.feed().roi_pool().layer_group().normalization().relu().GlobalAvgPooling().fc().softmax", "Resnet_train_bus.Resnet_train_bus.feed().fc", "Resnet_train_bus.Resnet_train_bus.feed().conv().max_pool().layer_group().layer_group().layer_group().normalization", "Resnet_train_bus.Resnet_train_bus.feed().conv", "Resnet_train_bus.Resnet_train_bus.feed", "Resnet_train_bus.Resnet_train_bus.feed", "Resnet_train_bus.Resnet_train_bus.feed().reshape_layer", "Resnet_train_bus.Resnet_train_bus.feed", "Resnet_train_bus.Resnet_train_bus.feed", "Resnet_train_bus.Resnet_train_bus.feed", "Resnet_train_bus.Resnet_train_bus.feed().roi_pool().layer_group().normalization().relu().GlobalAvgPooling().fc", "Resnet_train_bus.Resnet_train_bus.feed", "len", "len", "len", "Resnet_train_bus.Resnet_train_bus.feed().conv().max_pool().layer_group().layer_group().layer_group", "Resnet_train_bus.Resnet_train_bus.feed", "Resnet_train_bus.Resnet_train_bus.feed", "Resnet_train_bus.Resnet_train_bus.feed().roi_pool().layer_group().normalization().relu().GlobalAvgPooling", "Resnet_train_bus.Resnet_train_bus.feed().conv().max_pool().layer_group().layer_group", "Resnet_train_bus.Resnet_train_bus.feed().roi_pool().layer_group().normalization().relu", "Resnet_train_bus.Resnet_train_bus.feed().conv().max_pool().layer_group", "Resnet_train_bus.Resnet_train_bus.feed().roi_pool().layer_group().normalization", "Resnet_train_bus.Resnet_train_bus.feed().conv().max_pool", "Resnet_train_bus.Resnet_train_bus.feed().roi_pool().layer_group", "Resnet_train_bus.Resnet_train_bus.feed().conv", "Resnet_train_bus.Resnet_train_bus.feed().roi_pool", "Resnet_train_bus.Resnet_train_bus.feed", "Resnet_train_bus.Resnet_train_bus.feed"], "methods", ["None"], ["", "", "def", "setup", "(", "self", ")", ":", "\n", "        ", "(", "self", ".", "feed", "(", "'data'", ")", "\n", ".", "conv", "(", "7", ",", "7", ",", "64", ",", "2", ",", "2", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'conv0'", ")", "\n", ".", "max_pool", "(", "3", ",", "3", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'group0/pool'", ")", "\n", ".", "layer_group", "(", "self", ".", "block_func", ",", "64", ",", "self", ".", "defs", "[", "0", "]", ",", "1", ",", "1", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "first", "=", "True", ",", "name", "=", "'group0'", ")", "\n", ".", "layer_group", "(", "self", ".", "block_func", ",", "128", ",", "self", ".", "defs", "[", "1", "]", ",", "2", ",", "2", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'group1'", ")", "\n", ".", "layer_group", "(", "self", ".", "block_func", ",", "256", ",", "self", ".", "defs", "[", "2", "]", ",", "2", ",", "2", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'group2'", ")", "\n", ".", "normalization", "(", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'group2/norm'", ")", "\n", ".", "relu", "(", "name", "=", "'group2/relu'", ")", ")", "\n", "\n", "#========= RPN ============", "\n", "(", "self", ".", "feed", "(", "'group2/relu'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "(", "256", "if", "self", ".", "block_func", "==", "self", ".", "basicblock", "else", "256", "*", "4", ")", ",", "1", ",", "1", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "1", ",", "1", ",", "norm_type", "=", "None", ",", "use_relu", "=", "False", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "padding", "=", "'VALID'", ",", "name", "=", "'rpn_cls_score'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_score'", ",", "'gt_boxes'", ",", "'num_gt_boxes'", ",", "'im_info'", ",", "'data'", ")", "\n", ".", "anchor_target_layer_joint", "(", "_feat_stride", ",", "anchor_scales", ",", "self", ".", "dataset", ",", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'rpn-data'", ")", ")", "# different to the iterative one", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "4", ",", "1", ",", "1", ",", "norm_type", "=", "None", ",", "use_relu", "=", "False", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "padding", "=", "'VALID'", ",", "name", "=", "'rpn_bbox_pred'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_score'", ")", "\n", ".", "reshape_layer", "(", "2", ",", "name", "=", "'rpn_cls_score_reshape'", ")", "\n", ".", "softmax", "(", "name", "=", "'rpn_cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob'", ")", "\n", ".", "reshape_layer", "(", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "name", "=", "'rpn_cls_prob_reshape'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob_reshape'", ",", "'rpn_bbox_pred'", ",", "'im_info'", ")", "\n", ".", "proposal_layer", "(", "_feat_stride", ",", "anchor_scales", ",", "self", ".", "layers", "[", "'is_training'", "]", ",", "self", ".", "layers", "[", "'is_ws'", "]", ",", "name", "=", "'rpn_rois'", ")", ")", "\n", "\n", "# beyond RPN", "\n", "(", "self", ".", "feed", "(", "'rpn_rois'", ",", "'gt_boxes'", ",", "'num_gt_boxes'", ")", "\n", ".", "proposal_target_layer_joint", "(", "n_classes", ",", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'roi-data'", ")", ")", "# different to the iterative one", "\n", "\n", "#========= RCNN ============", "\n", "(", "self", ".", "feed", "(", "'group2/relu'", ",", "'roi-data'", ")", "\n", ".", "roi_pool", "(", "7", ",", "7", ",", "1.0", "/", "16", ",", "name", "=", "'roi_pool'", ")", "\n", ".", "layer_group", "(", "self", ".", "block_func", ",", "512", ",", "self", ".", "defs", "[", "3", "]", ",", "2", ",", "2", ",", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'group3'", ")", "\n", ".", "normalization", "(", "norm_type", "=", "self", ".", "norm_type", ",", "is_training", "=", "self", ".", "layers", "[", "'is_training'", "]", ",", "name", "=", "'group3/norm'", ")", "\n", ".", "relu", "(", "name", "=", "'group3/relu'", ")", "\n", ".", "GlobalAvgPooling", "(", "name", "=", "'gap'", ")", "\n", ".", "fc", "(", "n_classes", ",", "use_relu", "=", "False", ",", "name", "=", "'cls_score'", ")", "\n", ".", "softmax", "(", "name", "=", "'cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'gap'", ")", "\n", ".", "fc", "(", "n_classes", "*", "4", ",", "use_relu", "=", "False", ",", "name", "=", "'bbox_pred'", ")", ")", "\n", "# beyond RPN", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_test_bus.VGGnet_test_bus.__init__": [[15, 22], ["tensorflow.placeholder", "tensorflow.placeholder", "dict", "VGGnet_test_bus.VGGnet_test_bus.setup"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_train_bus_alter.VGGnet_train_bus_alter.setup"], ["    ", "def", "__init__", "(", "self", ",", "trainable", "=", "True", ")", ":", "\n", "        ", "self", ".", "inputs", "=", "[", "]", "\n", "self", ".", "data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "None", ",", "None", ",", "3", "]", ")", "\n", "self", ".", "im_info", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "3", "]", ")", "\n", "self", ".", "layers", "=", "dict", "(", "{", "'data'", ":", "self", ".", "data", ",", "'im_info'", ":", "self", ".", "im_info", "}", ")", "\n", "self", ".", "trainable", "=", "trainable", "\n", "self", ".", "setup", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_test_bus.VGGnet_test_bus.setup": [[23, 70], ["VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().reshape_layer().softmax", "VGGnet_test_bus.VGGnet_test_bus.feed().reshape_layer", "VGGnet_test_bus.VGGnet_test_bus.feed().proposal_layer", "VGGnet_test_bus.VGGnet_test_bus.feed().roi_pool().fc().fc().fc().softmax", "VGGnet_test_bus.VGGnet_test_bus.feed().fc", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv", "VGGnet_test_bus.VGGnet_test_bus.feed", "VGGnet_test_bus.VGGnet_test_bus.feed().reshape_layer", "VGGnet_test_bus.VGGnet_test_bus.feed", "VGGnet_test_bus.VGGnet_test_bus.feed", "VGGnet_test_bus.VGGnet_test_bus.feed().roi_pool().fc().fc().fc", "VGGnet_test_bus.VGGnet_test_bus.feed", "len", "len", "len", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool().conv", "VGGnet_test_bus.VGGnet_test_bus.feed", "VGGnet_test_bus.VGGnet_test_bus.feed", "VGGnet_test_bus.VGGnet_test_bus.feed().roi_pool().fc().fc", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool", "VGGnet_test_bus.VGGnet_test_bus.feed().roi_pool().fc", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().roi_pool", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv", "VGGnet_test_bus.VGGnet_test_bus.feed", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv().max_pool", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv().max_pool", "VGGnet_test_bus.VGGnet_test_bus.feed().conv().conv", "VGGnet_test_bus.VGGnet_test_bus.feed().conv", "VGGnet_test_bus.VGGnet_test_bus.feed"], "methods", ["None"], ["", "def", "setup", "(", "self", ")", ":", "\n", "        ", "(", "self", ".", "feed", "(", "'data'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "64", ",", "1", ",", "1", ",", "name", "=", "'conv1_1'", ",", "trainable", "=", "False", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "64", ",", "1", ",", "1", ",", "name", "=", "'conv1_2'", ",", "trainable", "=", "False", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "128", ",", "1", ",", "1", ",", "name", "=", "'conv2_1'", ",", "trainable", "=", "False", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "128", ",", "1", ",", "1", ",", "name", "=", "'conv2_2'", ",", "trainable", "=", "False", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "256", ",", "1", ",", "1", ",", "name", "=", "'conv3_1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "256", ",", "1", ",", "1", ",", "name", "=", "'conv3_2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "256", ",", "1", ",", "1", ",", "name", "=", "'conv3_3'", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool3'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv4_1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv4_2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv4_3'", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool4'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv5_1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv5_2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv5_3'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'conv5_3'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "1", ",", "1", ",", "padding", "=", "'VALID'", ",", "use_relu", "=", "False", ",", "name", "=", "'rpn_cls_score'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "4", ",", "1", ",", "1", ",", "padding", "=", "'VALID'", ",", "use_relu", "=", "False", ",", "name", "=", "'rpn_bbox_pred'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_score'", ")", "\n", ".", "reshape_layer", "(", "2", ",", "name", "=", "'rpn_cls_score_reshape'", ")", "\n", ".", "softmax", "(", "name", "=", "'rpn_cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob'", ")", "\n", ".", "reshape_layer", "(", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "name", "=", "'rpn_cls_prob_reshape'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob_reshape'", ",", "'rpn_bbox_pred'", ",", "'im_info'", ")", "\n", ".", "proposal_layer", "(", "_feat_stride", ",", "anchor_scales", ",", "False", ",", "False", ",", "name", "=", "'rois'", ")", ")", "\n", "\n", "# beyond RPN", "\n", "(", "self", ".", "feed", "(", "'conv5_3'", ",", "'rois'", ")", "\n", ".", "roi_pool", "(", "7", ",", "7", ",", "1.0", "/", "16", ",", "name", "=", "'pool_5'", ")", "\n", ".", "fc", "(", "512", ",", "name", "=", "'fc6'", ")", "\n", ".", "fc", "(", "512", ",", "name", "=", "'fc7'", ")", "\n", ".", "fc", "(", "n_classes", ",", "use_relu", "=", "False", ",", "name", "=", "'cls_score'", ")", "\n", ".", "softmax", "(", "name", "=", "'cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'fc7'", ")", "\n", ".", "fc", "(", "n_classes", "*", "4", ",", "use_relu", "=", "False", ",", "name", "=", "'bbox_pred'", ")", ")", "\n", "# beyond RPN", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_train_bus_alter.VGGnet_train_bus_alter.__init__": [[15, 41], ["tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "dict", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.setup", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.get_variable.assign", "tensorflow.get_variable.assign", "tensorflow.get_variable.get_shape", "tensorflow.get_variable.get_shape"], "methods", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_train_bus_alter.VGGnet_train_bus_alter.setup"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "trainable", "=", "True", ")", ":", "\n", "        ", "self", ".", "inputs", "=", "[", "]", "\n", "self", ".", "data", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "None", ",", "None", ",", "3", "]", ")", "\n", "self", ".", "im_info", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "4", "]", ")", "# modified for adding image-level labels (diagnostic label in this case)", "\n", "self", ".", "gt_boxes", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "shape", "=", "[", "None", ",", "cfg", ".", "TRAIN", ".", "MAX_GT_PER_IMAGE", ",", "5", "]", ")", "# modified for handling an arbitrary batch size", "\n", "self", ".", "num_gt_boxes", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "shape", "=", "[", "None", "]", ")", "# added for handling an arbitrary batch size  ", "\n", "self", ".", "keep_prob", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "self", ".", "is_training", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "# added by syshin", "\n", "self", ".", "is_ws", "=", "tf", ".", "placeholder", "(", "tf", ".", "bool", ")", "# added by syshin", "\n", "self", ".", "layers", "=", "dict", "(", "{", "'data'", ":", "self", ".", "data", ",", "'im_info'", ":", "self", ".", "im_info", ",", "'gt_boxes'", ":", "self", ".", "gt_boxes", ",", "'num_gt_boxes'", ":", "self", ".", "num_gt_boxes", ",", "'keep_prob'", ":", "self", ".", "keep_prob", ",", "'is_training'", ":", "self", ".", "is_training", ",", "'is_ws'", ":", "self", ".", "is_ws", "}", ")", "\n", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "trainable", "=", "trainable", "\n", "self", ".", "setup", "(", ")", "\n", "\n", "# beyond RPN", "\n", "# create ops and placeholders for bbox normalization process", "\n", "with", "tf", ".", "variable_scope", "(", "'bbox_pred'", ",", "reuse", "=", "True", ")", ":", "\n", "            ", "weights", "=", "tf", ".", "get_variable", "(", "\"weights\"", ")", "\n", "biases", "=", "tf", ".", "get_variable", "(", "\"biases\"", ")", "\n", "\n", "self", ".", "bbox_weights", "=", "tf", ".", "placeholder", "(", "weights", ".", "dtype", ",", "shape", "=", "weights", ".", "get_shape", "(", ")", ")", "\n", "self", ".", "bbox_biases", "=", "tf", ".", "placeholder", "(", "biases", ".", "dtype", ",", "shape", "=", "biases", ".", "get_shape", "(", ")", ")", "\n", "\n", "self", ".", "bbox_weights_assign", "=", "weights", ".", "assign", "(", "self", ".", "bbox_weights", ")", "\n", "self", ".", "bbox_bias_assign", "=", "biases", ".", "assign", "(", "self", ".", "bbox_biases", ")", "\n", "# beyond RPN", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.networks.VGGnet_train_bus_alter.VGGnet_train_bus_alter.setup": [[43, 102], ["VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().anchor_target_layer", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().reshape_layer().softmax", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().reshape_layer", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().proposal_layer", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().proposal_target_layer", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().roi_pool().fc().dropout().fc().dropout().fc().softmax", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().fc", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().reshape_layer", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().roi_pool().fc().dropout().fc().dropout().fc", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed", "len", "len", "len", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().roi_pool().fc().dropout().fc().dropout", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv().max_pool", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().roi_pool().fc().dropout().fc", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().roi_pool().fc().dropout", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().roi_pool().fc", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().roi_pool", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv().max_pool", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv().max_pool", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv().max_pool", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed().conv", "VGGnet_train_bus_alter.VGGnet_train_bus_alter.feed"], "methods", ["None"], ["", "", "def", "setup", "(", "self", ")", ":", "\n", "        ", "(", "self", ".", "feed", "(", "'data'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "64", ",", "1", ",", "1", ",", "name", "=", "'conv1_1'", ",", "trainable", "=", "False", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "64", ",", "1", ",", "1", ",", "name", "=", "'conv1_2'", ",", "trainable", "=", "False", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "128", ",", "1", ",", "1", ",", "name", "=", "'conv2_1'", ",", "trainable", "=", "False", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "128", ",", "1", ",", "1", ",", "name", "=", "'conv2_2'", ",", "trainable", "=", "False", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "256", ",", "1", ",", "1", ",", "name", "=", "'conv3_1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "256", ",", "1", ",", "1", ",", "name", "=", "'conv3_2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "256", ",", "1", ",", "1", ",", "name", "=", "'conv3_3'", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool3'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv4_1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv4_2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv4_3'", ")", "\n", ".", "max_pool", "(", "2", ",", "2", ",", "2", ",", "2", ",", "padding", "=", "'VALID'", ",", "name", "=", "'pool4'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv5_1'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv5_2'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'conv5_3'", ")", ")", "\n", "#========= RPN ============", "\n", "(", "self", ".", "feed", "(", "'conv5_3'", ")", "\n", ".", "conv", "(", "3", ",", "3", ",", "512", ",", "1", ",", "1", ",", "name", "=", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "1", ",", "1", ",", "padding", "=", "'VALID'", ",", "use_relu", "=", "False", ",", "name", "=", "'rpn_cls_score'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_score'", ",", "'gt_boxes'", ",", "'num_gt_boxes'", ",", "'im_info'", ",", "'data'", ")", "\n", ".", "anchor_target_layer", "(", "_feat_stride", ",", "anchor_scales", ",", "self", ".", "dataset", ",", "self", ".", "layers", "[", "'is_ws'", "]", ",", "name", "=", "'rpn-data'", ")", ")", "\n", "\n", "# Loss of rpn_cls & rpn_boxes", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_conv/3x3'", ")", "\n", ".", "conv", "(", "1", ",", "1", ",", "len", "(", "anchor_scales", ")", "*", "3", "*", "4", ",", "1", ",", "1", ",", "padding", "=", "'VALID'", ",", "use_relu", "=", "False", ",", "name", "=", "'rpn_bbox_pred'", ")", ")", "\n", "\n", "#========= RoI Proposal ============", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_score'", ")", "\n", ".", "reshape_layer", "(", "2", ",", "name", "=", "'rpn_cls_score_reshape'", ")", "\n", ".", "softmax", "(", "name", "=", "'rpn_cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob'", ")", "\n", ".", "reshape_layer", "(", "len", "(", "anchor_scales", ")", "*", "3", "*", "2", ",", "name", "=", "'rpn_cls_prob_reshape'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'rpn_cls_prob_reshape'", ",", "'rpn_bbox_pred'", ",", "'im_info'", ")", "\n", ".", "proposal_layer", "(", "_feat_stride", ",", "anchor_scales", ",", "self", ".", "layers", "[", "'is_training'", "]", ",", "self", ".", "layers", "[", "'is_ws'", "]", ",", "name", "=", "'rpn_rois'", ")", ")", "\n", "\n", "# beyond RPN", "\n", "(", "self", ".", "feed", "(", "'rpn_rois'", ",", "'gt_boxes'", ",", "'num_gt_boxes'", ")", "\n", ".", "proposal_target_layer", "(", "n_classes", ",", "self", ".", "layers", "[", "'is_training'", "]", ",", "self", ".", "layers", "[", "'is_ws'", "]", ",", "name", "=", "'roi-data'", ")", ")", "\n", "\n", "#========= RCNN ============", "\n", "(", "self", ".", "feed", "(", "'conv5_3'", ",", "'roi-data'", ")", "\n", ".", "roi_pool", "(", "7", ",", "7", ",", "1.0", "/", "16", ",", "name", "=", "'pool_5'", ")", "\n", ".", "fc", "(", "512", ",", "name", "=", "'fc6'", ")", "\n", ".", "dropout", "(", "self", ".", "layers", "[", "'keep_prob'", "]", ",", "name", "=", "'drop6'", ")", "\n", ".", "fc", "(", "512", ",", "name", "=", "'fc7'", ")", "\n", ".", "dropout", "(", "self", ".", "layers", "[", "'keep_prob'", "]", ",", "name", "=", "'drop7'", ")", "\n", ".", "fc", "(", "n_classes", ",", "use_relu", "=", "False", ",", "name", "=", "'cls_score'", ")", "\n", ".", "softmax", "(", "name", "=", "'cls_prob'", ")", ")", "\n", "\n", "(", "self", ".", "feed", "(", "'drop7'", ")", "\n", ".", "fc", "(", "n_classes", "*", "4", ",", "use_relu", "=", "False", ",", "name", "=", "'bbox_pred'", ")", ")", "\n", "# beyond RPN", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.config.get_output_dir": [[324, 337], ["os.abspath", "os.join", "os.join", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs"], "function", ["None"], ["def", "get_output_dir", "(", "imdb", ",", "weights_filename", ")", ":", "\n", "    ", "\"\"\"Return the directory where experimental artifacts are placed.\n    If the directory does not exist, it is created.\n\n    A canonical path is built using the name from an imdb and a network\n    (if not None).\n    \"\"\"", "\n", "outdir", "=", "osp", ".", "abspath", "(", "osp", ".", "join", "(", "__C", ".", "ROOT_DIR", ",", "'output'", ",", "__C", ".", "EXP_DIR", ",", "imdb", ".", "name", ")", ")", "\n", "if", "weights_filename", "is", "not", "None", ":", "\n", "        ", "outdir", "=", "osp", ".", "join", "(", "outdir", ",", "weights_filename", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "outdir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "outdir", ")", "\n", "", "return", "outdir", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.config.get_direct_output_dir": [[338, 351], ["os.abspath", "os.join", "os.join", "os.path.exists", "os.path.exists", "os.makedirs", "os.makedirs"], "function", ["None"], ["", "def", "get_direct_output_dir", "(", "name", ")", ":", "\n", "    ", "\"\"\"Return the directory where experimental artifacts are placed.\n    If the directory does not exist, it is created.\n\n    A canonical path is built using the given name.\n    \"\"\"", "\n", "\n", "outdir", "=", "osp", ".", "abspath", "(", "osp", ".", "join", "(", "__C", ".", "ROOT_DIR", ",", "'output'", ",", "__C", ".", "EXP_DIR", ")", ")", "\n", "if", "name", "is", "not", "None", ":", "\n", "        ", "outdir", "=", "osp", ".", "join", "(", "outdir", ",", "name", ")", "\n", "", "if", "not", "os", ".", "path", ".", "exists", "(", "outdir", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "outdir", ")", "\n", "", "return", "outdir", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.config._merge_a_into_b": [[352, 383], ["a.iteritems", "type", "type", "b.has_key", "KeyError", "type", "isinstance", "type", "numpy.array", "ValueError", "config._merge_a_into_b", "print", "type", "type"], "function", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.config._merge_a_into_b"], ["", "def", "_merge_a_into_b", "(", "a", ",", "b", ")", ":", "\n", "    ", "\"\"\"Merge config dictionary a into config dictionary b, clobbering the\n    options in b whenever they are also specified in a.\n    \"\"\"", "\n", "if", "type", "(", "a", ")", "is", "not", "edict", ":", "\n", "        ", "return", "\n", "\n", "", "for", "k", ",", "v", "in", "a", ".", "iteritems", "(", ")", ":", "\n", "# a must specify keys that are in b", "\n", "        ", "if", "not", "b", ".", "has_key", "(", "k", ")", ":", "\n", "            ", "raise", "KeyError", "(", "'{} is not a valid config key'", ".", "format", "(", "k", ")", ")", "\n", "\n", "# the types must match, too", "\n", "", "old_type", "=", "type", "(", "b", "[", "k", "]", ")", "\n", "if", "old_type", "is", "not", "type", "(", "v", ")", ":", "\n", "            ", "if", "isinstance", "(", "b", "[", "k", "]", ",", "np", ".", "ndarray", ")", ":", "\n", "                ", "v", "=", "np", ".", "array", "(", "v", ",", "dtype", "=", "b", "[", "k", "]", ".", "dtype", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "(", "'Type mismatch ({} vs. {}) '", "\n", "'for config key: {}'", ")", ".", "format", "(", "type", "(", "b", "[", "k", "]", ")", ",", "\n", "type", "(", "v", ")", ",", "k", ")", ")", "\n", "\n", "# recursively merge dicts", "\n", "", "", "if", "type", "(", "v", ")", "is", "edict", ":", "\n", "            ", "try", ":", "\n", "                ", "_merge_a_into_b", "(", "a", "[", "k", "]", ",", "b", "[", "k", "]", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "'Error under config key: {}'", ".", "format", "(", "k", ")", ")", "\n", "raise", "\n", "", "", "else", ":", "\n", "            ", "b", "[", "k", "]", "=", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.config.cfg_from_file": [[384, 391], ["config._merge_a_into_b", "open", "easydict.EasyDict", "yaml.load"], "function", ["home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.config._merge_a_into_b"], ["", "", "", "def", "cfg_from_file", "(", "filename", ")", ":", "\n", "    ", "\"\"\"Load a config file and merge it into the default options.\"\"\"", "\n", "import", "yaml", "\n", "with", "open", "(", "filename", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "yaml_cfg", "=", "edict", "(", "yaml", ".", "load", "(", "f", ")", ")", "\n", "\n", "", "_merge_a_into_b", "(", "yaml_cfg", ",", "__C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.config.cfg_from_list": [[392, 413], ["zip", "k.split", "d.has_key", "len", "d.has_key", "literal_eval", "type", "type", "type", "type"], "function", ["None"], ["", "def", "cfg_from_list", "(", "cfg_list", ")", ":", "\n", "    ", "\"\"\"Set config keys via list (e.g., from command line).\"\"\"", "\n", "from", "ast", "import", "literal_eval", "\n", "assert", "len", "(", "cfg_list", ")", "%", "2", "==", "0", "\n", "for", "k", ",", "v", "in", "zip", "(", "cfg_list", "[", "0", ":", ":", "2", "]", ",", "cfg_list", "[", "1", ":", ":", "2", "]", ")", ":", "\n", "        ", "key_list", "=", "k", ".", "split", "(", "'.'", ")", "\n", "d", "=", "__C", "\n", "for", "subkey", "in", "key_list", "[", ":", "-", "1", "]", ":", "\n", "            ", "assert", "d", ".", "has_key", "(", "subkey", ")", "\n", "d", "=", "d", "[", "subkey", "]", "\n", "", "subkey", "=", "key_list", "[", "-", "1", "]", "\n", "assert", "d", ".", "has_key", "(", "subkey", ")", "\n", "try", ":", "\n", "            ", "value", "=", "literal_eval", "(", "v", ")", "\n", "", "except", ":", "\n", "# handle the case when v is a string literal", "\n", "            ", "value", "=", "v", "\n", "", "assert", "type", "(", "value", ")", "==", "type", "(", "d", "[", "subkey", "]", ")", ",", "'type {} does not match original type {}'", ".", "format", "(", "\n", "type", "(", "value", ")", ",", "type", "(", "d", "[", "subkey", "]", ")", ")", "\n", "d", "[", "subkey", "]", "=", "value", "\n", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.bbox_transform.bbox_transform": [[10, 29], ["numpy.log", "numpy.log", "numpy.vstack().transpose", "numpy.vstack"], "function", ["None"], ["def", "bbox_transform", "(", "ex_rois", ",", "gt_rois", ")", ":", "\n", "    ", "ex_widths", "=", "ex_rois", "[", ":", ",", "2", "]", "-", "ex_rois", "[", ":", ",", "0", "]", "+", "1.0", "\n", "ex_heights", "=", "ex_rois", "[", ":", ",", "3", "]", "-", "ex_rois", "[", ":", ",", "1", "]", "+", "1.0", "\n", "ex_ctr_x", "=", "ex_rois", "[", ":", ",", "0", "]", "+", "0.5", "*", "ex_widths", "\n", "ex_ctr_y", "=", "ex_rois", "[", ":", ",", "1", "]", "+", "0.5", "*", "ex_heights", "\n", "\n", "gt_widths", "=", "gt_rois", "[", ":", ",", "2", "]", "-", "gt_rois", "[", ":", ",", "0", "]", "+", "1.0", "\n", "gt_heights", "=", "gt_rois", "[", ":", ",", "3", "]", "-", "gt_rois", "[", ":", ",", "1", "]", "+", "1.0", "\n", "gt_ctr_x", "=", "gt_rois", "[", ":", ",", "0", "]", "+", "0.5", "*", "gt_widths", "\n", "gt_ctr_y", "=", "gt_rois", "[", ":", ",", "1", "]", "+", "0.5", "*", "gt_heights", "\n", "\n", "targets_dx", "=", "(", "gt_ctr_x", "-", "ex_ctr_x", ")", "/", "ex_widths", "\n", "targets_dy", "=", "(", "gt_ctr_y", "-", "ex_ctr_y", ")", "/", "ex_heights", "\n", "targets_dw", "=", "np", ".", "log", "(", "gt_widths", "/", "ex_widths", ")", "\n", "targets_dh", "=", "np", ".", "log", "(", "gt_heights", "/", "ex_heights", ")", "\n", "\n", "targets", "=", "np", ".", "vstack", "(", "\n", "(", "targets_dx", ",", "targets_dy", ",", "targets_dw", ",", "targets_dh", ")", ")", ".", "transpose", "(", ")", "\n", "return", "targets", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.bbox_transform.bbox_transform_inv": [[30, 62], ["boxes.astype.astype", "numpy.zeros", "numpy.zeros", "numpy.exp", "numpy.exp"], "function", ["None"], ["", "def", "bbox_transform_inv", "(", "boxes", ",", "deltas", ")", ":", "\n", "    ", "if", "boxes", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "        ", "return", "np", ".", "zeros", "(", "(", "0", ",", "deltas", ".", "shape", "[", "1", "]", ")", ",", "dtype", "=", "deltas", ".", "dtype", ")", "\n", "\n", "", "boxes", "=", "boxes", ".", "astype", "(", "deltas", ".", "dtype", ",", "copy", "=", "False", ")", "\n", "\n", "widths", "=", "boxes", "[", ":", ",", "2", "]", "-", "boxes", "[", ":", ",", "0", "]", "+", "1.0", "\n", "heights", "=", "boxes", "[", ":", ",", "3", "]", "-", "boxes", "[", ":", ",", "1", "]", "+", "1.0", "\n", "ctr_x", "=", "boxes", "[", ":", ",", "0", "]", "+", "0.5", "*", "widths", "\n", "ctr_y", "=", "boxes", "[", ":", ",", "1", "]", "+", "0.5", "*", "heights", "\n", "\n", "dx", "=", "deltas", "[", ":", ",", "0", ":", ":", "4", "]", "\n", "dy", "=", "deltas", "[", ":", ",", "1", ":", ":", "4", "]", "\n", "dw", "=", "deltas", "[", ":", ",", "2", ":", ":", "4", "]", "\n", "dh", "=", "deltas", "[", ":", ",", "3", ":", ":", "4", "]", "\n", "\n", "pred_ctr_x", "=", "dx", "*", "widths", "[", ":", ",", "np", ".", "newaxis", "]", "+", "ctr_x", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "pred_ctr_y", "=", "dy", "*", "heights", "[", ":", ",", "np", ".", "newaxis", "]", "+", "ctr_y", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "pred_w", "=", "np", ".", "exp", "(", "dw", ")", "*", "widths", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "pred_h", "=", "np", ".", "exp", "(", "dh", ")", "*", "heights", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "\n", "pred_boxes", "=", "np", ".", "zeros", "(", "deltas", ".", "shape", ",", "dtype", "=", "deltas", ".", "dtype", ")", "\n", "# x1", "\n", "pred_boxes", "[", ":", ",", "0", ":", ":", "4", "]", "=", "pred_ctr_x", "-", "0.5", "*", "pred_w", "\n", "# y1", "\n", "pred_boxes", "[", ":", ",", "1", ":", ":", "4", "]", "=", "pred_ctr_y", "-", "0.5", "*", "pred_h", "\n", "# x2", "\n", "pred_boxes", "[", ":", ",", "2", ":", ":", "4", "]", "=", "pred_ctr_x", "+", "0.5", "*", "pred_w", "\n", "# y2", "\n", "pred_boxes", "[", ":", ",", "3", ":", ":", "4", "]", "=", "pred_ctr_y", "+", "0.5", "*", "pred_h", "\n", "\n", "return", "pred_boxes", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.bbox_transform.clip_boxes": [[63, 78], ["numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.minimum", "numpy.minimum", "numpy.minimum", "numpy.minimum"], "function", ["None"], ["", "def", "clip_boxes", "(", "boxes", ",", "im_shape", ")", ":", "\n", "    ", "\"\"\"\n    Clip boxes to image boundaries.\n    \"\"\"", "\n", "\n", "# x1 >= 0", "\n", "boxes", "[", ":", ",", "0", ":", ":", "4", "]", "=", "np", ".", "maximum", "(", "np", ".", "minimum", "(", "boxes", "[", ":", ",", "0", ":", ":", "4", "]", ",", "im_shape", "[", "1", "]", "-", "1", ")", ",", "0", ")", "\n", "# y1 >= 0", "\n", "boxes", "[", ":", ",", "1", ":", ":", "4", "]", "=", "np", ".", "maximum", "(", "np", ".", "minimum", "(", "boxes", "[", ":", ",", "1", ":", ":", "4", "]", ",", "im_shape", "[", "0", "]", "-", "1", ")", ",", "0", ")", "\n", "# x2 < im_shape[1]", "\n", "boxes", "[", ":", ",", "2", ":", ":", "4", "]", "=", "np", ".", "maximum", "(", "np", ".", "minimum", "(", "boxes", "[", ":", ",", "2", ":", ":", "4", "]", ",", "im_shape", "[", "1", "]", "-", "1", ")", ",", "0", ")", "\n", "# y2 < im_shape[0]", "\n", "boxes", "[", ":", ",", "3", ":", ":", "4", "]", "=", "np", ".", "maximum", "(", "np", ".", "minimum", "(", "boxes", "[", ":", ",", "3", ":", ":", "4", "]", ",", "im_shape", "[", "0", "]", "-", "1", ")", ",", "0", ")", "\n", "\n", "return", "boxes", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.fast_rcnn.nms_wrapper.nms": [[13, 22], ["gpu_nms", "nms.cpu_nms.cpu_nms"], "function", ["None"], ["def", "nms", "(", "dets", ",", "thresh", ",", "force_cpu", "=", "False", ")", ":", "\n", "    ", "\"\"\"Dispatch to either CPU or GPU NMS implementations.\"\"\"", "\n", "\n", "if", "dets", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "        ", "return", "[", "]", "\n", "", "if", "cfg", ".", "USE_GPU_NMS", "and", "not", "force_cpu", ":", "\n", "        ", "return", "gpu_nms", "(", "dets", ",", "thresh", ",", "device_id", "=", "cfg", ".", "GPU_ID", ")", "\n", "", "else", ":", "\n", "        ", "return", "cpu_nms", "(", "dets", ",", "thresh", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.mil.core.get_bag_logit": [[11, 47], ["tensorflow.zeros", "xrange", "tensorflow.zeros", "tensorflow.zeros", "tensorflow.constant", "xrange", "tensorflow.reshape", "tensorflow.concat", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.add", "tensorflow.slice", "tensorflow.reshape", "tensorflow.cond", "tensorflow.concat", "tensorflow.concat", "tensorflow.reduce_sum", "tensorflow.concat", "tensorflow.concat", "tensorflow.reshape", "tensorflow.slice", "tensorflow.equal", "tensorflow.cast", "tensorflow.slice", "tensorflow.equal", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.constant", "tensorflow.reshape", "tensorflow.constant", "tensorflow.slice", "tensorflow.slice", "tensorflow.nn.softmax"], "function", ["None"], ["def", "get_bag_logit", "(", "instance_logits", ",", "batch_inds", ",", "num_classes", ",", "bag_labels", ",", "batch_size", ",", "funcs", ")", ":", "\n", "    ", "\"\"\"Get responses of each bag.\n    Args:\n        instance_logits: Logits tensor, float32 - [None, num_classes].\n        batch_inds: A index tensor indicating what bag each instance is from, int32 - [None, 1]\n        num_classes: Number of classes - []\n        bag_labels: Bag(image-level) labels, int32 - [batch_size, 1]\n        batch_size: Batch size, this is different for supervised and weakly supervised dataset - []\n        funcs: functions to extract a bag logit from instance logits\n    Returns:\n        bag_logits: Logits tensor, float32 - [batch_size, num_classes].\n    \"\"\"", "\n", "\n", "num_boxes", "=", "tf", ".", "zeros", "(", "[", "0", ",", "1", "]", ",", "dtype", "=", "tf", ".", "int32", ")", "\n", "for", "i", "in", "xrange", "(", "batch_size", ")", ":", "\n", "        ", "t_num_boxes", "=", "tf", ".", "reshape", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "cast", "(", "tf", ".", "equal", "(", "batch_inds", ",", "i", ")", ",", "dtype", "=", "tf", ".", "int32", ")", ")", ",", "[", "1", ",", "1", "]", ")", "\n", "num_boxes", "=", "tf", ".", "concat", "(", "axis", "=", "0", ",", "values", "=", "[", "num_boxes", ",", "t_num_boxes", "]", ")", "\n", "\n", "", "bag_logits", "=", "tf", ".", "zeros", "(", "[", "0", ",", "num_classes", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "scale_factors", "=", "tf", ".", "zeros", "(", "[", "0", ",", "]", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "cum_num_boxes", "=", "tf", ".", "constant", "(", "[", "0", "]", ",", "tf", ".", "int32", ",", "[", "1", ",", "1", "]", ")", "\n", "for", "i", "in", "xrange", "(", "batch_size", ")", ":", "\n", "        ", "begin", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "axis", "=", "1", ",", "values", "=", "[", "tf", ".", "reshape", "(", "cum_num_boxes", ",", "[", "1", ",", "1", "]", ")", ",", "tf", ".", "constant", "(", "[", "0", "]", ",", "tf", ".", "int32", ",", "[", "1", ",", "1", "]", ")", "]", ")", ",", "[", "2", "]", ")", "\n", "size", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "axis", "=", "1", ",", "values", "=", "[", "tf", ".", "reshape", "(", "tf", ".", "slice", "(", "num_boxes", ",", "[", "i", ",", "0", "]", ",", "[", "1", ",", "-", "1", "]", ")", ",", "[", "1", ",", "1", "]", ")", ",", "\n", "tf", ".", "constant", "(", "[", "-", "1", "]", ",", "tf", ".", "int32", ",", "[", "1", ",", "1", "]", ")", "]", ")", ",", "[", "2", "]", ")", "\n", "cum_num_boxes", "=", "tf", ".", "add", "(", "cum_num_boxes", ",", "tf", ".", "reshape", "(", "tf", ".", "slice", "(", "num_boxes", ",", "[", "i", ",", "0", "]", ",", "[", "1", ",", "-", "1", "]", ")", ",", "[", "1", ",", "1", "]", ")", ")", "\n", "\n", "cur_logits", "=", "tf", ".", "slice", "(", "instance_logits", ",", "begin", ",", "size", ")", "\n", "cur_bag_label", "=", "tf", ".", "reshape", "(", "tf", ".", "slice", "(", "bag_labels", ",", "[", "i", ",", "0", "]", ",", "[", "1", ",", "-", "1", "]", ")", ",", "[", "]", ")", "\n", "max_logit", "=", "tf", ".", "cond", "(", "tf", ".", "equal", "(", "cur_bag_label", ",", "1", ")", ",", "lambda", ":", "funcs", "[", "0", "]", "(", "cur_logits", ")", ",", "lambda", ":", "funcs", "[", "1", "]", "(", "cur_logits", ")", ")", "\n", "bag_logits", "=", "tf", ".", "concat", "(", "axis", "=", "0", ",", "values", "=", "[", "bag_logits", ",", "max_logit", "]", ")", "\n", "scale_factors", "=", "tf", ".", "concat", "(", "axis", "=", "0", ",", "values", "=", "[", "scale_factors", ",", "tf", ".", "reshape", "(", "tf", ".", "slice", "(", "tf", ".", "nn", ".", "softmax", "(", "max_logit", ")", ",", "[", "0", ",", "cur_bag_label", "]", ",", "[", "1", ",", "1", "]", ")", ",", "[", "1", ",", "]", ")", "]", ")", "\n", "\n", "", "return", "bag_logits", ",", "scale_factors", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.mil.core.get_ben_max_logit": [[49, 58], ["tensorflow.slice", "tensorflow.to_int32", "tensorflow.reshape", "tensorflow.slice", "tensorflow.reshape", "tensorflow.concat", "tensorflow.arg_max", "tensorflow.constant"], "function", ["None"], ["", "def", "get_ben_max_logit", "(", "cur_logits", ")", ":", "\n", "    ", "\"\"\"Help function\"\"\"", "\n", "\n", "ben_logits", "=", "tf", ".", "slice", "(", "cur_logits", ",", "[", "0", ",", "1", "]", ",", "[", "-", "1", ",", "1", "]", ")", "# hard coding!!", "\n", "idx_max_instance", "=", "tf", ".", "to_int32", "(", "tf", ".", "reshape", "(", "tf", ".", "arg_max", "(", "ben_logits", ",", "0", ")", ",", "[", "1", ",", "1", "]", ")", ")", "\n", "sel_begin", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "axis", "=", "1", ",", "values", "=", "[", "idx_max_instance", ",", "tf", ".", "constant", "(", "[", "0", "]", ",", "tf", ".", "int32", ",", "[", "1", ",", "1", "]", ")", "]", ")", ",", "[", "2", "]", ")", "\n", "max_logit", "=", "tf", ".", "slice", "(", "cur_logits", ",", "sel_begin", ",", "[", "1", ",", "-", "1", "]", ")", "\n", "\n", "return", "max_logit", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.mil.core.get_mal_max_logit": [[60, 69], ["tensorflow.slice", "tensorflow.to_int32", "tensorflow.reshape", "tensorflow.slice", "tensorflow.reshape", "tensorflow.concat", "tensorflow.arg_max", "tensorflow.constant"], "function", ["None"], ["", "def", "get_mal_max_logit", "(", "cur_logits", ")", ":", "\n", "    ", "\"\"\"Help function\"\"\"", "\n", "\n", "mal_logits", "=", "tf", ".", "slice", "(", "cur_logits", ",", "[", "0", ",", "2", "]", ",", "[", "-", "1", ",", "1", "]", ")", "# hard coding!!", "\n", "idx_max_instance", "=", "tf", ".", "to_int32", "(", "tf", ".", "reshape", "(", "tf", ".", "arg_max", "(", "mal_logits", ",", "0", ")", ",", "[", "1", ",", "1", "]", ")", ")", "\n", "sel_begin", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "axis", "=", "1", ",", "values", "=", "[", "idx_max_instance", ",", "tf", ".", "constant", "(", "[", "0", "]", ",", "tf", ".", "int32", ",", "[", "1", ",", "1", "]", ")", "]", ")", ",", "[", "2", "]", ")", "\n", "max_logit", "=", "tf", ".", "slice", "(", "cur_logits", ",", "sel_begin", ",", "[", "1", ",", "-", "1", "]", ")", "\n", "\n", "return", "max_logit", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.mil.core.get_mean_ben_logit": [[71, 75], ["tensorflow.concat", "tensorflow.constant", "tensorflow.reshape", "tensorflow.constant", "tensorflow.reduce_mean", "tensorflow.slice"], "function", ["None"], ["", "def", "get_mean_ben_logit", "(", "cur_logits", ")", ":", "\n", "    ", "\"\"\"Help function\"\"\"", "\n", "\n", "return", "tf", ".", "concat", "(", "axis", "=", "1", ",", "values", "=", "[", "tf", ".", "constant", "(", "[", "0", "]", ",", "tf", ".", "float32", ",", "[", "1", ",", "1", "]", ")", ",", "tf", ".", "reshape", "(", "tf", ".", "reduce_mean", "(", "tf", ".", "slice", "(", "cur_logits", ",", "[", "0", ",", "1", "]", ",", "[", "-", "1", ",", "1", "]", ")", ")", ",", "[", "1", ",", "1", "]", ")", ",", "tf", ".", "constant", "(", "[", "0", "]", ",", "tf", ".", "float32", ",", "[", "1", ",", "1", "]", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.mil.core.get_disc_max_logit": [[77, 86], ["tensorflow.reduce_max", "tensorflow.to_int32", "tensorflow.reshape", "tensorflow.slice", "tensorflow.slice", "tensorflow.reshape", "tensorflow.concat", "tensorflow.arg_max", "tensorflow.constant"], "function", ["None"], ["", "def", "get_disc_max_logit", "(", "cur_logits", ")", ":", "\n", "    ", "\"\"\"Help function\"\"\"", "\n", "\n", "disc_logits", "=", "tf", ".", "reduce_max", "(", "tf", ".", "slice", "(", "cur_logits", ",", "[", "0", ",", "1", "]", ",", "[", "-", "1", ",", "-", "1", "]", ")", ",", "axis", "=", "1", ")", "\n", "idx_max_instance", "=", "tf", ".", "to_int32", "(", "tf", ".", "reshape", "(", "tf", ".", "arg_max", "(", "disc_logits", ",", "0", ")", ",", "[", "1", ",", "1", "]", ")", ")", "\n", "sel_begin", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "axis", "=", "1", ",", "values", "=", "[", "idx_max_instance", ",", "tf", ".", "constant", "(", "[", "0", "]", ",", "tf", ".", "int32", ",", "[", "1", ",", "1", "]", ")", "]", ")", ",", "[", "2", "]", ")", "\n", "max_logit", "=", "tf", ".", "slice", "(", "cur_logits", ",", "sel_begin", ",", "[", "1", ",", "-", "1", "]", ")", "\n", "\n", "return", "max_logit", "\n", "\n"]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.mil.core.get_mass_max_logit": [[88, 97], ["tensorflow.slice", "tensorflow.to_int32", "tensorflow.reshape", "tensorflow.slice", "tensorflow.reshape", "tensorflow.concat", "tensorflow.arg_min", "tensorflow.constant"], "function", ["None"], ["", "def", "get_mass_max_logit", "(", "cur_logits", ")", ":", "\n", "    ", "\"\"\"Help function\"\"\"", "\n", "\n", "bg_logits", "=", "tf", ".", "slice", "(", "cur_logits", ",", "[", "0", ",", "0", "]", ",", "[", "-", "1", ",", "1", "]", ")", "# hard coding!!", "\n", "idx_min_instance", "=", "tf", ".", "to_int32", "(", "tf", ".", "reshape", "(", "tf", ".", "arg_min", "(", "bg_logits", ",", "0", ")", ",", "[", "1", ",", "1", "]", ")", ")", "\n", "sel_begin", "=", "tf", ".", "reshape", "(", "tf", ".", "concat", "(", "axis", "=", "1", ",", "values", "=", "[", "idx_min_instance", ",", "tf", ".", "constant", "(", "[", "0", "]", ",", "tf", ".", "int32", ",", "[", "1", ",", "1", "]", ")", "]", ")", ",", "[", "2", "]", ")", "\n", "max_logit", "=", "tf", ".", "slice", "(", "cur_logits", ",", "sel_begin", ",", "[", "1", ",", "-", "1", "]", ")", "\n", "\n", "return", "max_logit", "", "", ""]], "home.repos.pwc.inspect_result.syshin1014_wssdl_bus.main._init_paths.add_path": [[15, 18], ["sys.path.insert"], "function", ["None"], ["def", "add_path", "(", "path", ")", ":", "\n", "    ", "if", "path", "not", "in", "sys", ".", "path", ":", "\n", "        ", "sys", ".", "path", ".", "insert", "(", "0", ",", "path", ")", "\n", "\n"]]}