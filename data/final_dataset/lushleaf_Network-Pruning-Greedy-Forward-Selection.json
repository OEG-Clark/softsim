{"home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.parse_args": [[36, 78], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'prune for mbv2'", ")", "\n", "\n", "# model and data", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "default", "=", "'mobilenet'", ",", "type", "=", "str", ",", "help", "=", "'name of the model to train'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "'imagenet'", ",", "type", "=", "str", ",", "help", "=", "'name of the dataset to train'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_root'", ",", "default", "=", "'dataroot'", ",", "type", "=", "str", ",", "help", "=", "'dataset path'", ")", "\n", "\n", "# seed", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "default", "=", "None", ",", "type", "=", "int", ",", "help", "=", "'random seed to set'", ")", "\n", "\n", "# intermediate finetune schedule", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "default", "=", "2.5e-3", ",", "type", "=", "float", ",", "help", "=", "'learning rate for intermediate finetune'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "default", "=", "128", ",", "type", "=", "int", ",", "help", "=", "'batch size'", ")", "# default 128", "\n", "parser", ".", "add_argument", "(", "'--lr_type'", ",", "default", "=", "'fixed'", ",", "type", "=", "str", ",", "help", "=", "'lr scheduler (exp/cos/step3/fixed)'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_epoch'", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "help", "=", "'number of epochs for intermediate finetune'", ")", "\n", "parser", ".", "add_argument", "(", "'--wd'", ",", "default", "=", "4e-5", ",", "type", "=", "float", ",", "help", "=", "'weight decay'", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "default", "=", "0.9", ",", "type", "=", "float", ",", "help", "=", "'momentum'", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'--n_gpu'", ",", "default", "=", "8", ",", "type", "=", "int", ",", "help", "=", "'number of GPUs to use'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_worker'", ",", "default", "=", "8", ",", "type", "=", "int", ",", "help", "=", "'number of data loader worker'", ")", "\n", "\n", "# adding neuron", "\n", "parser", ".", "add_argument", "(", "'--num_evaluate'", ",", "default", "=", "50", ",", "type", "=", "int", ",", "\n", "help", "=", "'num of neuron to evaluate for every evaluation. (Randomly pickup num_evaluate number of neuron if there are more potential neuron that can be add)'", ")", "\n", "\n", "# load and save", "\n", "parser", ".", "add_argument", "(", "'--load_path'", ",", "default", "=", "'checkpoint'", ",", "type", "=", "str", ",", "\n", "help", "=", "'pretrain model path to prune'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_path'", ",", "default", "=", "'save_path'", ",", "type", "=", "str", ",", "help", "=", "'path the save the prunde model'", ")", "\n", "\n", "# skip for convergence criterion", "\n", "parser", ".", "add_argument", "(", "'--top1_tol'", ",", "default", "=", "0.02", ",", "type", "=", "float", ",", "help", "=", "'tol to stop pruning a layer. Larger tol means more neurons to prune'", ")", "\n", "parser", ".", "add_argument", "(", "'--skip_eval_converge'", ",", "default", "=", "0.05", ",", "type", "=", "float", ",", "\n", "help", "=", "'when bacth_top1 < (1 - skip_eval_convergence) * init_top, we skip eval the convergence using the full training dataset'", ")", "\n", "parser", ".", "add_argument", "(", "'--skip'", ",", "default", "=", "200", ",", "type", "=", "int", ",", "help", "=", "'skip when eval trainset for convergence criterion'", ")", "\n", "parser", ".", "add_argument", "(", "'--isfullnetpruned'", ",", "default", "=", "0", ",", "type", "=", "int", ",", "help", "=", "'whether to use pruned net as fullnet. Set to 1 if we do iterative pruning (i.e. pruning a already pruned network)'", ")", "\n", "\n", "# run eval", "\n", "parser", ".", "add_argument", "(", "'--eval'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Simply run eval'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.get_model": [[82, 117], ["MobileNetV2", "MobileNetV2.load_state_dict", "models.mobilenet_v2.MobileNetV2_prescreen", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "models.mobilenet_v2.MobileNetV2_prescreen.to", "models.mobilenet_v2.MobileNetV2_prescreen.to", "torch.load", "torch.load", "torch.load", "torch.load", "models.mobilenet_v2.MobileNetV2_prescreen", "torch.load", "torch.load", "torch.load", "torch.load", "collections.OrderedDict", "torch.load.items", "models.mobilenet_v2.MobileNetV2_prescreen.load_state_dict", "torch.load.keys"], "function", ["None"], ["def", "get_model", "(", "path", ",", "n_class", ")", ":", "\n", "    ", "from", "models", ".", "mobilenet_v2", "import", "MobileNetV2", "\n", "fullnet", "=", "MobileNetV2", "(", "num_classes", "=", "1000", ")", "\n", "\n", "# fullnet not pruned", "\n", "if", "not", "args", ".", "isfullnetpruned", ":", "\n", "        ", "fullnet", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "load_path", ")", ")", "\n", "net", "=", "MobileNetV2_prescreen", "(", "fullnet", ")", "\n", "del", "fullnet", "\n", "# fullnet is pruned model: used for iterative pruning", "\n", "", "else", ":", "\n", "        ", "if", "args", ".", "isfullnetpruned", ":", "\n", "            ", "net", "=", "MobileNetV2_prescreen", "(", "fullnet", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "path", ",", "map_location", "=", "'cpu'", ")", "\n", "if", "'state_dict'", "in", "checkpoint", ".", "keys", "(", ")", ":", "\n", "                ", "checkpoint", "=", "checkpoint", "[", "'state_dict'", "]", "\n", "", "from", "collections", "import", "OrderedDict", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "checkpoint", ".", "items", "(", ")", ":", "\n", "                ", "if", "k", "[", "0", ":", "6", "]", "==", "'module'", ":", "\n", "                    ", "name", "=", "k", "[", "7", ":", "]", "# remove module.", "\n", "", "else", ":", "\n", "                    ", "name", "=", "k", "\n", "", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "net", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "del", "fullnet", "\n", "\n", "", "", "if", "args", ".", "n_gpu", ">", "1", ":", "\n", "        ", "net", "=", "torch", ".", "nn", ".", "DataParallel", "(", "net", ",", "device_ids", "=", "gpu_list", ")", "\n", "net", "=", "net", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "        ", "net", "=", "net", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.decide_candidate_set": [[118, 139], ["m.prune_a.data.squeeze().cpu().numpy", "numpy.random.shuffle", "set", "set", "list", "numpy.where", "m.prune_a.data.squeeze().cpu", "numpy.where", "m.prune_a.data.squeeze", "set.astype"], "function", ["None"], ["", "def", "decide_candidate_set", "(", "m", ",", "prunable_neuron", ",", "num_evaluate", "=", "50", ",", "isfirst", "=", "False", ")", ":", "\n", "\n", "# only randomly pickup num_evaluate number of neurons to form the candidate set", "\n", "    ", "candidate_plus", "=", "[", "]", "\n", "\n", "tem_a", "=", "m", ".", "prune_a", ".", "data", ".", "squeeze", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "if", "isfirst", ":", "\n", "        ", "eps_", "=", "eps", "\n", "", "else", ":", "\n", "        ", "eps_", "=", "0.", "\n", "\n", "", "tem_a", "=", "np", ".", "where", "(", "tem_a", "<=", "eps_", ")", "[", "0", "]", "# randomly pick up outside neuron to add", "\n", "np", ".", "random", ".", "shuffle", "(", "tem_a", ")", "\n", "tem_a", "=", "set", "(", "tem_a", ")", "\n", "prunable_neuron", "=", "set", "(", "np", ".", "where", "(", "prunable_neuron", ".", "astype", "(", "float", ")", ">", "0", ")", "[", "0", "]", ")", "\n", "tem_a", "=", "list", "(", "tem_a", "&", "prunable_neuron", ")", "\n", "\n", "candidate_plus", "=", "tem_a", "[", ":", "num_evaluate", "]", "\n", "\n", "return", "candidate_plus", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.decide_candidate": [[140, 171], ["datas.to.to", "float", "numpy.sum", "m.init_lsearch", "m.update_alpha", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "net", "criterion", "m.prune_a.cpu().data.numpy", "m.prune_a.cpu"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.init_lsearch", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.update_alpha"], ["", "def", "decide_candidate", "(", "datas", ",", "targets", ",", "m", ",", "candidate_plus", ",", "isfirst", "=", "False", ")", ":", "\n", "# decide the candidate to perform update by 1/n stepsize", "\n", "\n", "    ", "datas", "=", "datas", ".", "to", "(", "device", ")", "\n", "opt_index", "=", "-", "1", "\n", "opt_loss", "=", "float", "(", "'inf'", ")", "\n", "opt_stepsize", "=", "0.", "\n", "\n", "current_num_neuron", "=", "np", ".", "sum", "(", "(", "m", ".", "prune_a", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ">", "0", ")", ".", "astype", "(", "int", ")", ")", "\n", "\n", "for", "candidate", "in", "candidate_plus", ":", "\n", "        ", "m", ".", "init_lsearch", "(", "candidate", ")", "\n", "m", ".", "prune_lsearch", ".", "data", "+=", "1.", "/", "(", "current_num_neuron", "+", "1", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "outputs", "=", "net", "(", "datas", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "", "if", "loss", "<", "opt_loss", ":", "\n", "            ", "opt_index", "=", "candidate", "\n", "opt_loss", "=", "loss", "\n", "opt_stepsize", "=", "1.", "/", "(", "current_num_neuron", "+", "1", ")", "\n", "\n", "", "", "if", "isfirst", ":", "\n", "        ", "m", ".", "prune_a", "*=", "0.", "\n", "m", ".", "prune_a", "[", ":", ",", "opt_index", ",", ":", ",", ":", "]", "+=", "1.", "\n", "m", ".", "prune_w", ".", "data", "=", "0.", "*", "m", ".", "prune_w", ".", "data", "\n", "m", ".", "prune_lsearch", ".", "data", "=", "0.", "*", "m", ".", "prune_lsearch", ".", "data", "\n", "m", ".", "prune_gamma", ".", "data", "=", "0.", "*", "m", ".", "prune_gamma", ".", "data", "\n", "", "else", ":", "\n", "        ", "m", ".", "update_alpha", "(", "opt_index", ",", "opt_stepsize", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.prune_a_layer": [[173, 245], ["mobile2_prune.eval_train", "print", "m.switch_mode", "numpy.sum", "m.empty_all_eps", "print", "mobile2_prune.eval_train", "print", "print", "numpy.sum", "mobile2_prune.eval_train", "m.set_alpha_to_init", "m.prune_a.cpu().data.squeeze().numpy", "mobile2_prune.decide_candidate_set", "mobile2_prune.decide_candidate", "net", "lib.utils.accuracy", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "datas.to.to", "data_labels.to.to", "mobile2_prune.eval_train", "numpy.sum", "numpy.sum", "print", "m.set_alpha_to_init", "m.prune_a.cpu().data.squeeze", "print", "print", "print", "print", "print", "m.prune_a.cpu().data.numpy", "m.prune_a.cpu().data.numpy", "m.prune_a.cpu", "m.prune_a.cpu().data.numpy", "m.prune_a.cpu().data.numpy", "m.prune_a.cpu", "m.prune_a.cpu", "m.prune_a.cpu", "m.prune_a.cpu"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.eval_train", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.switch_mode", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.empty_all_eps", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.eval_train", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.eval_train", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.set_alpha_to_init", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.decide_candidate_set", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.decide_candidate", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.accuracy", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.eval_train", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.set_alpha_to_init"], ["", "", "def", "prune_a_layer", "(", "m", ")", ":", "\n", "\n", "    ", "isalladd", "=", "0", "\n", "num_layer", "=", "m", ".", "layer_num", "\n", "\n", "init_loss", ",", "init_top1", ",", "init_top5", "=", "eval_train", "(", "net", ",", "eval_train_loader", ")", "\n", "print", "(", "'Layer: ({:d}); Init Loss: {:.4f}; Init top1: ({:.4f}%); Init top5: ({:.4f}%)'", ".", "format", "(", "\n", "num_layer", ",", "init_loss", ",", "init_top1", ",", "init_top5", ")", ")", "\n", "\n", "m", ".", "switch_mode", "(", "'prune'", ")", "\n", "\n", "# prunable neuron list; only consider the neuron that is inside at initial", "\n", "prunable_neuron", "=", "(", "m", ".", "prune_a", ".", "cpu", "(", ")", ".", "data", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ">", "0", ")", "\n", "all_neuron", "=", "np", ".", "sum", "(", "(", "m", ".", "prune_a", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ">", "0", ")", ".", "astype", "(", "int", ")", ")", "\n", "\n", "m", ".", "empty_all_eps", "(", ")", "\n", "\n", "is_first_neuron", "=", "1", "\n", "iteration", "=", "0", "\n", "verbose", "=", "True", "\n", "while", "1", ":", "\n", "# get a mini-batch of data", "\n", "        ", "for", "datas", ",", "data_labels", "in", "train_loader", ":", "break", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "datas", "=", "datas", ".", "to", "(", "device", ")", "\n", "data_labels", "=", "data_labels", ".", "to", "(", "device", ")", "\n", "targets", "=", "data_labels", "\n", "\n", "", "candidate_plus", "=", "decide_candidate_set", "(", "m", ",", "prunable_neuron", ",", "num_evaluate", "=", "args", ".", "num_evaluate", ",", "isfirst", "=", "is_first_neuron", ")", "\n", "decide_candidate", "(", "datas", ",", "targets", ",", "m", ",", "candidate_plus", ",", "is_first_neuron", ")", "\n", "if", "is_first_neuron", ":", "\n", "            ", "is_first_neuron", "=", "0", "\n", "", "outputs", "=", "net", "(", "datas", ")", "\n", "batch_top1", ",", "batch_top5", "=", "accuracy", "(", "outputs", ".", "data", ",", "data_labels", ".", "data", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "\n", "if", "batch_top1", ">=", "(", "1.", "-", "args", ".", "skip_eval_converge", ")", "*", "init_top1", ":", "\n", "# evaluate whether converged", "\n", "            ", "cur_loss", ",", "cur_top1", ",", "cur_top5", "=", "eval_train", "(", "net", ",", "eval_train_loader", ")", "\n", "cur_neuron", "=", "np", ".", "sum", "(", "(", "m", ".", "prune_a", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ">", "0", ")", ".", "astype", "(", "int", ")", ")", "\n", "if", "verbose", ":", "\n", "                ", "print", "(", "'Converge Eval------'", ",", "args", ".", "top1_tol", ")", "\n", "print", "(", "'Layer: ({:d}); Cur Loss: {:.4f}; Init Loss: {:.4f}; Cur top1: ({:.4f}%); Init top1: {:.4f}'", ".", "format", "(", "\n", "num_layer", ",", "cur_loss", ",", "init_loss", ",", "cur_top1", ",", "init_top1", ")", ")", "\n", "print", "(", "'Cur_neuron/ All neuron'", ",", "cur_neuron", ",", "m", ".", "scale", ")", "\n", "\n", "", "if", "cur_top1", ">=", "(", "1.", "-", "args", ".", "top1_tol", ")", "*", "(", "init_top1", ")", ":", "break", "# reach convergence", "\n", "\n", "", "else", ":", "\n", "            ", "cur_neuron", "=", "np", ".", "sum", "(", "(", "m", ".", "prune_a", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ">", "0", ")", ".", "astype", "(", "int", ")", ")", "\n", "if", "verbose", ":", "\n", "                ", "print", "(", "'Layer: ({:d}); Batch top1: {:.4f}'", ".", "format", "(", "num_layer", ",", "batch_top1", ")", ")", "\n", "print", "(", "'Cur_neuron/ All neuron'", ",", "cur_neuron", ",", "all_neuron", ")", "\n", "\n", "", "", "if", "cur_neuron", ">=", "all_neuron", ":", "\n", "            ", "print", "(", "'all the neurons are added'", ")", "\n", "m", ".", "set_alpha_to_init", "(", "prunable_neuron", ")", "\n", "isalladd", "=", "1", "\n", "break", "\n", "\n", "", "", "print", "(", "\"This layer's Neuron\"", ",", "cur_neuron", ")", "\n", "cur_loss", ",", "cur_top1", ",", "cur_top5", "=", "eval_train", "(", "net", ",", "eval_train_loader", ")", "\n", "print", "(", "'Layer (before finetune): ({:d}); Cur Loss: {:.4f}; Cur top1: ({:.4f}%); Cur top5: ({:.4f}%)'", ".", "format", "(", "\n", "num_layer", ",", "cur_loss", ",", "cur_top1", ",", "cur_top5", ")", ")", "\n", "print", "(", "'='", "*", "90", ")", "\n", "\n", "a_para", "=", "m", ".", "prune_a", ".", "data", "\n", "a_num", "=", "np", ".", "sum", "(", "(", "m", ".", "prune_a", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ">", "0", ")", ".", "astype", "(", "int", ")", ")", "\n", "cur_loss", ",", "cur_top1", ",", "cur_top5", "=", "eval_train", "(", "net", ",", "eval_train_loader", ")", "\n", "m", ".", "set_alpha_to_init", "(", "prunable_neuron", ")", "\n", "\n", "return", "a_para", ",", "a_num", ",", "cur_top1", ",", "isalladd", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.net_prune": [[246, 325], ["net.eval", "enumerate", "time.time", "time.time", "enumerate", "print", "print", "m.switch_mode", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "full_cfg.append", "cur_cfg.append", "mobile2_prune.prune_a_layer", "print", "print", "models.mobilenet_v2.mb2_prune_ratio", "print", "print", "mobile2_prune.eval_train", "m.switch_mode", "mobile2_prune.eval_train", "print", "print", "numpy.sum", "argu_dict[].append", "argu_dict[].append", "print", "print", "torch.save", "torch.save", "torch.save", "torch.save", "time.time", "time.time", "net.state_dict", "mobile2_prune.train", "os.path.join", "net.state_dict", "m.prune_a.cpu().data.numpy", "m.prune_a.cpu"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.switch_mode", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.prune_a_layer", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.mb2_prune_ratio", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.eval_train", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.switch_mode", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.eval_train", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.train"], ["", "def", "net_prune", "(", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "\n", "# add important tuning parameter to save", "\n", "argu_dict", "=", "{", "\n", "'load_path'", ":", "args", ".", "load_path", ",", "\n", "'top1_tol'", ":", "args", ".", "top1_tol", ",", "\n", "'skip_eval_converge'", ":", "args", ".", "skip_eval_converge", ",", "\n", "'layer_num'", ":", "0", ",", "\n", "'cfg'", ":", "[", "]", ",", "\n", "'ori_cfg'", ":", "[", "]", ",", "\n", "'pruned'", ":", "[", "]", ",", "\n", "}", "\n", "\n", "# get full cfg", "\n", "full_cfg", "=", "[", "]", "\n", "cur_cfg", "=", "[", "]", "\n", "for", "block_idx", ",", "block", "in", "enumerate", "(", "net", ".", "module", ".", "features", "if", "args", ".", "n_gpu", ">", "1", "else", "net", ".", "features", ")", ":", "\n", "        ", "for", "m", "in", "block", ".", "mask_list", ":", "\n", "            ", "full_cfg", ".", "append", "(", "m", ".", "prune_a", ".", "shape", "[", "1", "]", ")", "\n", "cur_cfg", ".", "append", "(", "m", ".", "prune_a", ".", "shape", "[", "1", "]", ")", "\n", "\n", "", "", "no_prune_list", "=", "[", "0", ",", "1", ",", "33", ",", "34", "]", "\n", "\n", "num_layer", "=", "-", "1", "\n", "total_start", "=", "time", ".", "time", "(", ")", "\n", "for", "block_idx", ",", "block", "in", "enumerate", "(", "net", ".", "module", ".", "features", "if", "args", ".", "n_gpu", ">", "1", "else", "net", ".", "features", ")", ":", "\n", "        ", "mask_count", "=", "-", "1", "\n", "for", "m", "in", "block", ".", "mask_list", ":", "\n", "\n", "            ", "num_layer", "+=", "1", "\n", "isalladd", "=", "0", "\n", "\n", "# skip layers in no_prune_list", "\n", "if", "num_layer", "in", "no_prune_list", ":", "\n", "                ", "continue", "\n", "\n", "", "a_para", ",", "a_num", ",", "global_cur_top1", ",", "isalladd", "=", "prune_a_layer", "(", "m", ")", "\n", "m", ".", "prune_a", ".", "data", "=", "a_para", "\n", "cur_neuron", "=", "a_num", "\n", "\n", "print", "(", "'='", "*", "38", ",", "' All Finish '", ",", "'='", "*", "38", ")", "\n", "print", "(", "\"This layer's Neuron\"", ",", "cur_neuron", ")", "\n", "fullflops", ",", "pruneflops", ",", "fullparams", ",", "pruneparams", "=", "mb2_prune_ratio", "(", "net", ")", "\n", "print", "(", "\"Full Flops, Prune Flops, Full Params, Prune Params\"", ")", "\n", "print", "(", "fullflops", ",", "pruneflops", ",", "fullparams", ",", "pruneparams", ")", "\n", "\n", "cur_cfg", "[", "num_layer", "]", "=", "cur_neuron", "\n", "cur_loss", ",", "cur_top1", ",", "cur_top5", "=", "eval_train", "(", "net", ",", "eval_train_loader", ")", "\n", "\n", "# layer finetune", "\n", "m", ".", "switch_mode", "(", "'train'", ")", "\n", "if", "not", "isalladd", ":", "\n", "                ", "train", "(", "train_loader", ",", "args", ".", "n_epoch", ")", "\n", "\n", "", "cur_loss", ",", "cur_top1", ",", "cur_top5", "=", "eval_train", "(", "net", ",", "eval_train_loader", ")", "\n", "print", "(", "'Layer (After finetune): ({:d}); Cur Loss: {:.4f}; Cur top1: ({:.4f}%); Cur top5: ({:.4f}%)'", ".", "format", "(", "\n", "num_layer", ",", "cur_loss", ",", "cur_top1", ",", "cur_top5", ")", ")", "\n", "print", "(", "'='", "*", "90", ")", "\n", "all_neuron", "=", "np", ".", "sum", "(", "(", "m", ".", "prune_a", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", ">", "0", ")", ".", "astype", "(", "int", ")", ")", "\n", "\n", "argu_dict", "[", "'layer_num'", "]", "=", "num_layer", "\n", "delta", "=", "all_neuron", "-", "cur_neuron", "\n", "argu_dict", "[", "'cfg'", "]", ".", "append", "(", "cur_neuron", ")", "\n", "argu_dict", "[", "'pruned'", "]", ".", "append", "(", "delta", ")", "\n", "argu_dict", "[", "'ori_cfg'", "]", "=", "all_neuron", "\n", "\n", "print", "(", "\"current cfg\"", ",", "argu_dict", "[", "'cfg'", "]", ")", "\n", "print", "(", "'neuron pruned'", ",", "argu_dict", "[", "'pruned'", "]", ")", "\n", "\n", "torch", ".", "save", "(", "{", "'state_dict'", ":", "net", ".", "state_dict", "(", ")", ",", "'argu_dict'", ":", "argu_dict", ",", "}", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'mbv2_prune_{}_{}.pth.tar'", ".", "format", "(", "args", ".", "top1_tol", ",", "args", ".", "isfullnetpruned", ")", ")", ")", "\n", "\n", "", "", "print", "(", "'total time'", ",", "time", ".", "time", "(", ")", "-", "total_start", ")", "\n", "print", "(", "'Finish Prune'", ")", "\n", "m", ".", "switch_mode", "(", "'train'", ")", "\n", "argu_dict", "[", "'layer_num'", "]", "=", "num_layer", "\n", "torch", ".", "save", "(", "{", "'state_dict'", ":", "net", ".", "state_dict", "(", ")", ",", "'argu_dict'", ":", "argu_dict", ",", "}", ",", "\n", "os", ".", "path", ".", "join", "(", "args", ".", "save_path", ",", "'mbv2_prune_{}_{}.pth.tar'", ".", "format", "(", "args", ".", "top1_tol", ",", "args", ".", "isfullnetpruned", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.train": [[327, 377], ["net.train", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "time.time", "time.time", "enumerate", "net.eval", "len", "lib.utils.AverageMeter.update", "optimizer.zero_grad", "net", "criterion", "criterion.backward", "optimizer.step", "lib.utils.accuracy", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "time.time", "time.time", "criterion.item", "inputs.size", "prec1.item", "inputs.size", "prec5.item", "inputs.size", "print", "time.time", "time.time", "inputs.to", "targets.to", "time.time", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.train", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.accuracy", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update"], ["", "def", "train", "(", "train_loader", ",", "n_epoch", ")", ":", "\n", "    ", "net", ".", "train", "(", ")", "\n", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "count_threshold", "=", "n_epoch", "*", "len", "(", "train_loader", ")", "\n", "count", "=", "0", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "if", "use_cuda", ":", "\n", "#inputs, targets = inputs.cuda(), targets.cuda()", "\n", "            ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "net", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "prec1", ",", "prec5", "=", "accuracy", "(", "outputs", ".", "data", ",", "targets", ".", "data", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "# timing", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "#progress_bar(batch_idx, len(train_loader), 'Loss: {:.3f} | Acc1: {:.3f}% | Acc5: {:.3f}%'", "\n", "#             .format(losses.avg, top1.avg, top5.avg))", "\n", "if", "batch_idx", "%", "200", "==", "0", ":", "\n", "            ", "print", "(", "'[{0}/{1}]\\t'", "\n", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "\n", "'Data {data_time.val:.3f} ({data_time.avg:.3f})\\t'", "\n", "'Loss {loss.val:.4f} ({loss.avg:.4f})\\t'", "\n", "'Prec@1 {top1.val:.3f} ({top1.avg:.3f})\\t'", "\n", "'Prec@5 {top5.val:.3f} ({top5.avg:.3f})'", ".", "format", "(", "\n", "batch_idx", ",", "len", "(", "train_loader", ")", ",", "batch_time", "=", "batch_time", ",", "\n", "data_time", "=", "data_time", ",", "loss", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n", "", "count", "+=", "1", "\n", "if", "count", ">=", "count_threshold", ":", "\n", "            ", "break", "\n", "", "", "net", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.test": [[378, 409], ["net.eval", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "time.time", "time.time", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "net", "criterion", "lib.utils.accuracy", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "time.time", "time.time", "lib.utils.progress_bar", "criterion.item", "inputs.size", "prec1.item", "inputs.size", "prec5.item", "inputs.size", "len", "inputs.to", "targets.to", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.accuracy", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.progress_bar"], ["", "def", "test", "(", "epoch", ",", "test_loader", ",", "save", "=", "False", ")", ":", "\n", "    ", "global", "best_accd", "\n", "net", ".", "eval", "(", ")", "\n", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "device0", "=", "'cuda'", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "test_loader", ")", ":", "\n", "            ", "if", "use_cuda", ":", "\n", "# inputs, targets = inputs.cuda(), targets.cuda()", "\n", "                ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device0", ")", ",", "targets", ".", "to", "(", "device0", ")", "\n", "", "outputs", "=", "net", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "prec1", ",", "prec5", "=", "accuracy", "(", "outputs", ".", "data", ",", "targets", ".", "data", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "# timing", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "progress_bar", "(", "batch_idx", ",", "len", "(", "test_loader", ")", ",", "'Loss: {:.3f} | Acc1: {:.3f}% | Acc5: {:.3f}%'", "\n", ".", "format", "(", "losses", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", ")", ")", "\n", "\n", "", "", "return", "top1", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.eval_train": [[411, 442], ["net.eval", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "time.time", "time.time", "float", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "net", "criterion", "lib.utils.accuracy", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "time.time", "time.time", "criterion.item", "inputs.size", "prec1.item", "inputs.size", "prec5.item", "inputs.size", "inputs.to", "targets.to", "time.time", "time.time"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.accuracy", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update"], ["", "def", "eval_train", "(", "net", ",", "train_loader", ")", ":", "\n", "    ", "net", ".", "eval", "(", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "count_threshold", "=", "float", "(", "'inf'", ")", "\n", "count", "=", "0", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "\n", "            ", "if", "use_cuda", ":", "\n", "                ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "\n", "", "outputs", "=", "net", "(", "inputs", ")", "\n", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "prec1", ",", "prec5", "=", "accuracy", "(", "outputs", ".", "data", ",", "targets", ".", "data", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "# timing", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "", "return", "losses", ".", "avg", ",", "top1", ".", "avg", ",", "top5", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.adjust_learning_rate": [[444, 459], ["print", "math.cos"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "if", "args", ".", "lr_type", "==", "'cos'", ":", "# cos without warm-up", "\n", "        ", "lr", "=", "0.5", "*", "args", ".", "lr", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "epoch", "/", "args", ".", "n_epoch", ")", ")", "\n", "", "elif", "args", ".", "lr_type", "==", "'exp'", ":", "\n", "        ", "step", "=", "1", "\n", "decay", "=", "0.96", "\n", "lr", "=", "args", ".", "lr", "*", "(", "decay", "**", "(", "epoch", "//", "step", ")", ")", "\n", "", "elif", "args", ".", "lr_type", "==", "'fixed'", ":", "\n", "        ", "lr", "=", "args", ".", "lr", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "print", "(", "'=> lr: {}'", ".", "format", "(", "lr", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_prune.save_checkpoint": [[461, 467], ["os.path.join", "print", "torch.save", "torch.save", "torch.save", "torch.save", "shutil.copyfile", "os.path.join.replace"], "function", ["None"], ["", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "checkpoint_dir", "=", "'.'", ")", ":", "\n", "    ", "filename", "=", "os", ".", "path", ".", "join", "(", "checkpoint_dir", ",", "'ckpt.pth.tar'", ")", "\n", "print", "(", "'=> Saving checkpoint to {}'", ".", "format", "(", "filename", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "if", "is_best", ":", "\n", "        ", "shutil", ".", "copyfile", "(", "filename", ",", "filename", ".", "replace", "(", "'.pth.tar'", ",", "'.best.pth.tar'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.CrossEntropyLabelSmooth.__init__": [[67, 72], ["torch.Module.__init__", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax", "torch.LogSoftmax"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "epsilon", "=", "0.1", ")", ":", "\n", "        ", "super", "(", "CrossEntropyLabelSmooth", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "epsilon", "=", "epsilon", "\n", "self", ".", "logsoftmax", "=", "nn", ".", "LogSoftmax", "(", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.CrossEntropyLabelSmooth.forward": [[73, 79], ["mobile2_finetune.CrossEntropyLabelSmooth.logsoftmax", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_", "torch.zeros_like().scatter_.unsqueeze", "torch.zeros_like().scatter_.unsqueeze", "torch.zeros_like().scatter_.unsqueeze", "torch.zeros_like().scatter_.unsqueeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ",", "targets", ")", ":", "\n", "        ", "log_probs", "=", "self", ".", "logsoftmax", "(", "inputs", ")", "\n", "targets", "=", "torch", ".", "zeros_like", "(", "log_probs", ")", ".", "scatter_", "(", "1", ",", "targets", ".", "unsqueeze", "(", "1", ")", ",", "1", ")", "\n", "targets", "=", "(", "1", "-", "self", ".", "epsilon", ")", "*", "targets", "+", "self", ".", "epsilon", "/", "self", ".", "num_classes", "\n", "loss", "=", "(", "-", "targets", "*", "log_probs", ")", ".", "mean", "(", "0", ")", ".", "sum", "(", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.parse_args": [[30, 63], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'finetune for mbv2'", ")", "\n", "\n", "# model and data", "\n", "parser", ".", "add_argument", "(", "'--model'", ",", "default", "=", "'mobilenet'", ",", "type", "=", "str", ",", "help", "=", "'name of the model to train'", ")", "\n", "parser", ".", "add_argument", "(", "'--dataset'", ",", "default", "=", "'imagenet'", ",", "type", "=", "str", ",", "help", "=", "'name of the dataset to train'", ")", "\n", "parser", ".", "add_argument", "(", "'--data_root'", ",", "default", "=", "None", ",", "type", "=", "str", ",", "help", "=", "'dataset path'", ")", "\n", "\n", "# seed", "\n", "parser", ".", "add_argument", "(", "'--seed'", ",", "default", "=", "None", ",", "type", "=", "int", ",", "help", "=", "'random seed to set'", ")", "\n", "\n", "# intermediate finetune schedule", "\n", "parser", ".", "add_argument", "(", "'--lr'", ",", "default", "=", "0.1", ",", "type", "=", "float", ",", "help", "=", "'learning rate for intermediate finetune'", ")", "\n", "parser", ".", "add_argument", "(", "'--epochs'", ",", "default", "=", "150", ",", "type", "=", "int", ",", "metavar", "=", "'N'", ",", "\n", "help", "=", "'number of total epochs to run'", ")", "\n", "parser", ".", "add_argument", "(", "'--batch_size'", ",", "default", "=", "256", ",", "type", "=", "int", ",", "help", "=", "'batch size'", ")", "# default 128", "\n", "parser", ".", "add_argument", "(", "'--lr_type'", ",", "default", "=", "'cos'", ",", "type", "=", "str", ",", "help", "=", "'lr scheduler (exp/cos/step/fixed)'", ")", "\n", "parser", ".", "add_argument", "(", "'--wd'", ",", "default", "=", "4e-5", ",", "type", "=", "float", ",", "help", "=", "'weight decay'", ")", "\n", "parser", ".", "add_argument", "(", "'--momentum'", ",", "default", "=", "0.9", ",", "type", "=", "float", ",", "help", "=", "'momentum'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_gpu'", ",", "default", "=", "2", ",", "type", "=", "int", ",", "help", "=", "'number of GPUs to use'", ")", "\n", "parser", ".", "add_argument", "(", "'--n_worker'", ",", "default", "=", "16", ",", "type", "=", "int", ",", "help", "=", "'number of data loader worker'", ")", "\n", "\n", "# load and save", "\n", "parser", ".", "add_argument", "(", "'--load_path'", ",", "default", "=", "'./checkpoint'", ",", "type", "=", "str", ",", "\n", "help", "=", "'pretrain model path to prune'", ")", "\n", "parser", ".", "add_argument", "(", "'--save_path'", ",", "default", "=", "'./checkpoint'", ",", "type", "=", "str", ",", "help", "=", "'path the save the prunde model'", ")", "\n", "parser", ".", "add_argument", "(", "'--resume'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'always load the previous saved model'", ")", "\n", "\n", "# run eval", "\n", "parser", ".", "add_argument", "(", "'--eval'", ",", "action", "=", "'store_true'", ",", "help", "=", "'Simply run eval'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.get_model": [[81, 106], ["MobileNetV2", "models.mobilenet_v2.MobileNetV2_prescreen", "torch.load", "torch.load", "torch.load", "torch.load", "OrderedDict", "checkpoint[].items", "models.mobilenet_v2.MobileNetV2_prescreen.load_state_dict", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "net.to.to", "models.mobilenet_v2.MobileNetV2_prescreen.to"], "function", ["None"], ["", "", "def", "get_model", "(", "path", ",", "n_class", ")", ":", "\n", "    ", "layer", "=", "-", "1", "\n", "from", "models", ".", "mobilenet_v2", "import", "MobileNetV2", "\n", "fullnet", "=", "MobileNetV2", "(", "num_classes", "=", "1000", ")", "\n", "net", "=", "MobileNetV2_prescreen", "(", "fullnet", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "load_path", ",", "map_location", "=", "'cpu'", ")", "\n", "\n", "from", "collections", "import", "OrderedDict", "\n", "new_state_dict", "=", "OrderedDict", "(", ")", "\n", "for", "k", ",", "v", "in", "checkpoint", "[", "'state_dict'", "]", ".", "items", "(", ")", ":", "\n", "        ", "if", "k", "[", "0", ":", "6", "]", "==", "'module'", ":", "\n", "            ", "name", "=", "k", "[", "7", ":", "]", "# remove module.", "\n", "", "else", ":", "\n", "            ", "name", "=", "k", "\n", "", "new_state_dict", "[", "name", "]", "=", "v", "\n", "\n", "", "net", ".", "load_state_dict", "(", "new_state_dict", ")", "\n", "\n", "if", "args", ".", "n_gpu", ">", "1", ":", "\n", "        ", "model", "=", "torch", ".", "nn", ".", "DataParallel", "(", "net", ",", "device_ids", "=", "gpu_list", ")", "\n", "model", "=", "model", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "net", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.train": [[108, 148], ["model.train", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "time.time", "time.time", "enumerate", "lib.utils.AverageMeter.update", "optimizer.zero_grad", "model", "criterion", "criterion.backward", "optimizer.step", "lib.utils.accuracy", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "time.time", "time.time", "criterion.item", "inputs.size", "prec1.item", "inputs.size", "prec5.item", "inputs.size", "print", "time.time", "time.time", "inputs.to", "targets.to", "time.time", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.train", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.accuracy", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update"], ["", "def", "train", "(", "train_loader", ",", "model", ",", "criterion", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "if", "use_cuda", ":", "\n", "            ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "\n", "", "optimizer", ".", "zero_grad", "(", ")", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "prec1", ",", "prec5", "=", "accuracy", "(", "outputs", ".", "data", ",", "targets", ".", "data", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "# timing", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "batch_idx", "%", "200", "==", "0", ":", "\n", "            ", "print", "(", "'[{0}/{1}]\\t'", "\n", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "\n", "'Data {data_time.val:.3f} ({data_time.avg:.3f})\\t'", "\n", "'Loss {loss.val:.4f} ({loss.avg:.4f})\\t'", "\n", "'Prec@1 {top1.val:.3f} ({top1.avg:.3f})\\t'", "\n", "'Prec@5 {top5.val:.3f} ({top5.avg:.3f})'", ".", "format", "(", "\n", "batch_idx", ",", "len", "(", "train_loader", ")", ",", "batch_time", "=", "batch_time", ",", "\n", "data_time", "=", "data_time", ",", "loss", "=", "losses", ",", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.validate": [[150, 188], ["model.eval", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "lib.utils.AverageMeter", "time.time", "time.time", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "enumerate", "lib.utils.AverageMeter.update", "model", "criterion", "lib.utils.accuracy", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "lib.utils.AverageMeter.update", "time.time", "time.time", "criterion.item", "inputs.size", "prec1.item", "inputs.size", "prec5.item", "inputs.size", "print", "time.time", "time.time", "inputs.to", "targets.to", "time.time", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.accuracy", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update"], ["", "", "", "def", "validate", "(", "val_loader", ",", "model", ",", "criterion", ")", ":", "\n", "    ", "global", "best_accd", "\n", "model", ".", "eval", "(", ")", "\n", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "losses", "=", "AverageMeter", "(", ")", "\n", "top1", "=", "AverageMeter", "(", ")", "\n", "top5", "=", "AverageMeter", "(", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "val_loader", ")", ":", "\n", "            ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "if", "use_cuda", ":", "\n", "                ", "inputs", ",", "targets", "=", "inputs", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", "\n", "", "outputs", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "outputs", ",", "targets", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "prec1", ",", "prec5", "=", "accuracy", "(", "outputs", ".", "data", ",", "targets", ".", "data", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "losses", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top1", ".", "update", "(", "prec1", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "top5", ".", "update", "(", "prec5", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "# timing", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "batch_idx", "%", "10", "==", "0", ":", "\n", "                ", "print", "(", "'Test: [{0}/{1}]\\t'", "\n", "'Time {batch_time.val:.3f} ({batch_time.avg:.3f})\\t'", "\n", "'Loss {loss.val:.4f} ({loss.avg:.4f})\\t'", "\n", "'Prec@1 {top1.val:.3f} ({top1.avg:.3f})\\t'", "\n", "'Prec@5 {top5.val:.3f} ({top5.avg:.3f})'", ".", "format", "(", "\n", "batch_idx", ",", "len", "(", "val_loader", ")", ",", "batch_time", "=", "batch_time", ",", "loss", "=", "losses", ",", "\n", "top1", "=", "top1", ",", "top5", "=", "top5", ")", ")", "\n", "\n", "", "", "", "return", "top1", ".", "avg", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.adjust_learning_rate": [[191, 206], ["print", "math.cos"], "function", ["None"], ["", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "if", "args", ".", "lr_type", "==", "'cos'", ":", "# cos without warm-up", "\n", "        ", "lr", "=", "0.5", "*", "args", ".", "lr", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "epoch", "/", "args", ".", "epochs", ")", ")", "\n", "", "elif", "args", ".", "lr_type", "==", "'exp'", ":", "\n", "        ", "step", "=", "1", "\n", "decay", "=", "0.96", "\n", "lr", "=", "args", ".", "lr", "*", "(", "decay", "**", "(", "epoch", "//", "step", ")", ")", "\n", "", "elif", "args", ".", "lr_type", "==", "'fixed'", ":", "\n", "        ", "lr", "=", "args", ".", "lr", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "", "print", "(", "'=> lr: {}'", ".", "format", "(", "lr", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "return", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.None.mobile2_finetune.save_checkpoint": [[208, 214], ["os.path.join", "print", "torch.save", "torch.save", "torch.save", "torch.save", "shutil.copyfile", "os.path.join.replace"], "function", ["None"], ["", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "checkpoint_dir", "=", "'.'", ")", ":", "\n", "    ", "filename", "=", "os", ".", "path", ".", "join", "(", "checkpoint_dir", ",", "'ckpt.pth.tar'", ")", "\n", "print", "(", "'=> Saving checkpoint to {}'", ".", "format", "(", "filename", ")", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "if", "is_best", ":", "\n", "        ", "shutil", ".", "copyfile", "(", "filename", ",", "filename", ".", "replace", "(", "'.pth.tar'", ",", "'.best.pth.tar'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.data.get_dataset": [[17, 137], ["print", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "list", "list", "torch.utils.data.sampler.SubsetRandomSampler", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "range", "numpy.arange", "os.path.join", "os.path.join", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "len", "list", "list", "torch.utils.data.sampler.SubsetRandomSampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ImageFolder", "torchvision.ImageFolder", "range", "numpy.arange", "torchvision.ImageFolder", "torchvision.ImageFolder", "os.path.join", "os.path.join", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "int", "torchvision.Compose", "torchvision.Compose", "list.append", "torchvision.Compose", "torchvision.Compose", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ImageFolder", "torchvision.ImageFolder", "int", "torchvision.Compose", "torchvision.Compose"], "function", ["None"], ["def", "get_dataset", "(", "dset_name", ",", "batch_size", ",", "n_worker", ",", "data_root", ",", "skip", "=", "1", ")", ":", "\n", "    ", "cifar_tran_train", "=", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", "\n", "cifar_tran_test", "=", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", "\n", "print", "(", "'=> Preparing data..'", ")", "\n", "if", "dset_name", "==", "'cifar10'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "cifar_tran_train", ")", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "cifar_tran_test", ")", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "sampler", "=", "None", ")", "\n", "from", "torch", ".", "utils", ".", "data", "import", "SubsetRandomSampler", "\n", "full_size", "=", "len", "(", "train_loader", ")", "\n", "indices", "=", "list", "(", "range", "(", "full_size", ")", ")", "\n", "split_indices", "=", "list", "(", "np", ".", "arange", "(", "0", ",", "full_size", ",", "skip", ")", ")", "\n", "valid_sampler", "=", "SubsetRandomSampler", "(", "split_indices", ")", "\n", "\n", "eval_trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "eval_train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "eval_trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "sampler", "=", "valid_sampler", ")", "\n", "#eval_train_loader = torch.utils.data.DataLoader(", "\n", "#    datasets.ImageFolder(traindir, transforms.Compose(imagenet_tran_train)),", "\n", "#    batch_size=batch_size, shuffle=False,", "\n", "#    num_workers=n_worker, pin_memory=True, sampler=valid_sampler)", "\n", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "n_class", "=", "10", "\n", "", "elif", "dset_name", "==", "'imagenet'", ":", "\n", "# get dir", "\n", "        ", "traindir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'train'", ")", "\n", "\n", "valdir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'val'", ")", "\n", "\n", "# preprocessing", "\n", "input_size", "=", "224", "\n", "\n", "imagenet_tran_train", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ",", "scale", "=", "(", "0.2", ",", "1.0", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", "\n", "imagenet_tran_test", "=", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "input_size", "/", "0.875", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "traindir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_train", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "sampler", "=", "None", ")", "\n", "\n", "full_size", "=", "len", "(", "datasets", ".", "ImageFolder", "(", "traindir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_train", ")", ")", ")", "\n", "indices", "=", "list", "(", "range", "(", "full_size", ")", ")", "\n", "split_indices", "=", "list", "(", "np", ".", "arange", "(", "0", ",", "full_size", ",", "skip", ")", ")", "\n", "split_indices", "=", "[", "]", "\n", "for", "_", "in", "indices", ":", "\n", "            ", "if", "_", "%", "skip", "==", "0", ":", "\n", "                ", "split_indices", ".", "append", "(", "_", ")", "\n", "", "", "from", "torch", ".", "utils", ".", "data", "import", "SubsetRandomSampler", "\n", "valid_sampler", "=", "SubsetRandomSampler", "(", "split_indices", ")", "\n", "\n", "eval_train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "traindir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_train", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "sampler", "=", "valid_sampler", ")", "\n", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "valdir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_test", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "n_class", "=", "1000", "\n", "\n", "", "elif", "dset_name", "==", "'tinyimagenet'", ":", "\n", "# get dir", "\n", "        ", "traindir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'train'", ")", "\n", "valdir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'val'", ")", "\n", "\n", "# preprocessing", "\n", "input_size", "=", "224", "\n", "imagenet_tran_train", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ",", "scale", "=", "(", "0.2", ",", "1.0", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", "imagenet_tran_test", "=", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "input_size", "/", "0.875", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "traindir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_train", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "sampler", "=", "None", ")", "\n", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "valdir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_test", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "n_class", "=", "200", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "train_loader", ",", "eval_train_loader", ",", "val_loader", ",", "n_class", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.data.get_dataset_ft": [[138, 252], ["print", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "os.path.join", "os.path.join", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ImageFolder", "torchvision.ImageFolder", "os.path.join", "os.path.join", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ColorJitter", "torchvision.ToTensor", "torchvision.Normalize", "int", "torchvision.Compose", "torchvision.Compose", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ColorJitter", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ImageFolder", "torchvision.ImageFolder", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "int", "torchvision.Compose", "torchvision.Compose", "int"], "function", ["None"], ["", "def", "get_dataset_ft", "(", "dset_name", ",", "batch_size", ",", "n_worker", ",", "data_root", ",", "istrick", "=", "0", ",", "istrick2", "=", "0", ")", ":", "\n", "    ", "cifar_tran_train", "=", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", "\n", "cifar_tran_test", "=", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", "\n", "print", "(", "'=> Preparing data..'", ")", "\n", "if", "dset_name", "==", "'cifar10'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "cifar_tran_train", ")", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "cifar_tran_test", ")", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "sampler", "=", "None", ")", "\n", "testset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "testset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "n_class", "=", "10", "\n", "", "elif", "dset_name", "==", "'imagenet'", ":", "\n", "# get dir", "\n", "        ", "traindir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'train'", ")", "\n", "\n", "valdir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'val'", ")", "\n", "\n", "# preprocessing", "\n", "input_size", "=", "224", "\n", "if", "istrick", ":", "\n", "            ", "imagenet_tran_train", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ",", "scale", "=", "(", "0.2", ",", "1.0", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ColorJitter", "(", "brightness", "=", "0.4", ",", "contrast", "=", "0.4", ",", "saturation", "=", "0.4", ",", "hue", "=", "0.1", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", "", "elif", "istrick2", ":", "\n", "            ", "imagenet_tran_train", "=", "[", "\n", "#transforms.RandomResizedCrop(input_size, scale=(0.2, 1.0)),", "\n", "# transforms.RandomHorizontalFlip(),", "\n", "#transforms.ColorJitter(brightness=0.4, contrast=0.4, saturation=0.4, hue=0.1),", "\n", "transforms", ".", "Resize", "(", "int", "(", "input_size", "/", "0.875", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", "\n", "", "else", ":", "\n", "            ", "imagenet_tran_train", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ",", "scale", "=", "(", "0.2", ",", "1.0", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", "\n", "\n", "", "imagenet_tran_test", "=", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "input_size", "/", "0.875", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "traindir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_train", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "sampler", "=", "None", ")", "\n", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "valdir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_test", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "n_class", "=", "1000", "\n", "\n", "", "elif", "dset_name", "==", "'tinyimagenet'", ":", "\n", "# get dir", "\n", "        ", "traindir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'train'", ")", "\n", "valdir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'val'", ")", "\n", "\n", "# preprocessing", "\n", "input_size", "=", "224", "\n", "imagenet_tran_train", "=", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ",", "scale", "=", "(", "0.2", ",", "1.0", ")", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "transforms", ".", "ColorJitter", "(", "brightness", "=", "0.4", ",", "contrast", "=", "0.4", ",", "saturation", "=", "0.4", ",", "hue", "=", "0.1", ")", ",", "# extra transform", "\n", "]", "\n", "\n", "\n", "imagenet_tran_test", "=", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "input_size", "/", "0.875", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ",", "\n", "]", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "traindir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_train", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "True", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ",", "sampler", "=", "None", ")", "\n", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "ImageFolder", "(", "valdir", ",", "transforms", ".", "Compose", "(", "imagenet_tran_test", ")", ")", ",", "\n", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "n_class", "=", "200", "\n", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "train_loader", ",", "val_loader", ",", "n_class", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.data.get_split_dataset": [[254, 355], ["print", "torchvision.Compose", "torchvision.Compose", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "index_sampler", "index_sampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "len", "list", "numpy.random.shuffle", "list", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "len", "list", "numpy.random.shuffle", "os.path.join", "os.path.join", "torchvision.Normalize", "torchvision.Compose", "torchvision.Compose", "torchvision.ImageFolder", "index_sampler", "index_sampler", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.ToTensor", "torchvision.Normalize", "range", "range", "range", "torchvision.ImageFolder", "len", "list", "numpy.random.shuffle", "list", "torchvision.ImageFolder", "len", "list", "numpy.random.shuffle", "len", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor", "range", "range", "range", "torch.arange().int", "torch.arange().int", "torch.arange().int", "torch.arange().int", "int", "len", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "len"], "function", ["None"], ["", "def", "get_split_dataset", "(", "dset_name", ",", "batch_size", ",", "n_worker", ",", "val_size", ",", "data_root", "=", "'../data'", ",", "\n", "use_real_val", "=", "False", ",", "shuffle", "=", "True", ")", ":", "\n", "    ", "'''\n        split the train set into train / val for rl search\n    '''", "\n", "if", "shuffle", ":", "\n", "        ", "index_sampler", "=", "SubsetRandomSampler", "\n", "", "else", ":", "# every time we use the same order for the split subset", "\n", "        ", "class", "SubsetSequentialSampler", "(", "SubsetRandomSampler", ")", ":", "\n", "            ", "def", "__iter__", "(", "self", ")", ":", "\n", "                ", "return", "(", "self", ".", "indices", "[", "i", "]", "for", "i", "in", "torch", ".", "arange", "(", "len", "(", "self", ".", "indices", ")", ")", ".", "int", "(", ")", ")", "\n", "", "", "index_sampler", "=", "SubsetSequentialSampler", "\n", "\n", "", "print", "(", "'=> Preparing data: {}...'", ".", "format", "(", "dset_name", ")", ")", "\n", "if", "dset_name", "==", "'cifar10'", ":", "\n", "        ", "transform_train", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "32", ",", "padding", "=", "4", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "transform_test", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "(", "0.4914", ",", "0.4822", ",", "0.4465", ")", ",", "(", "0.2023", ",", "0.1994", ",", "0.2010", ")", ")", ",", "\n", "]", ")", "\n", "trainset", "=", "torchvision", ".", "datasets", ".", "CIFAR100", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "if", "use_real_val", ":", "# split the actual val set", "\n", "            ", "valset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "n_val", "=", "len", "(", "valset", ")", "\n", "assert", "val_size", "<", "n_val", "\n", "indices", "=", "list", "(", "range", "(", "n_val", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "_", ",", "val_idx", "=", "indices", "[", "val_size", ":", "]", ",", "indices", "[", ":", "val_size", "]", "\n", "train_idx", "=", "list", "(", "range", "(", "len", "(", "trainset", ")", ")", ")", "# all train set for train", "\n", "", "else", ":", "# split the train set", "\n", "            ", "valset", "=", "torchvision", ".", "datasets", ".", "CIFAR10", "(", "root", "=", "data_root", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "n_train", "=", "len", "(", "trainset", ")", "\n", "indices", "=", "list", "(", "range", "(", "n_train", ")", ")", "\n", "# now shuffle the indices", "\n", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "assert", "val_size", "<", "n_train", "\n", "train_idx", ",", "val_idx", "=", "indices", "[", "val_size", ":", "]", ",", "indices", "[", ":", "val_size", "]", "\n", "\n", "", "train_sampler", "=", "index_sampler", "(", "train_idx", ")", "\n", "val_sampler", "=", "index_sampler", "(", "val_idx", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "sampler", "=", "train_sampler", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "valset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "False", ",", "sampler", "=", "val_sampler", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "n_class", "=", "10", "\n", "\n", "", "elif", "dset_name", "==", "'imagenet'", ":", "\n", "        ", "train_dir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'train'", ")", "\n", "val_dir", "=", "os", ".", "path", ".", "join", "(", "data_root", ",", "'val'", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "input_size", "=", "224", "\n", "train_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", "\n", "test_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "int", "(", "input_size", "/", "0.875", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", ",", "\n", "]", ")", "\n", "\n", "trainset", "=", "datasets", ".", "ImageFolder", "(", "train_dir", ",", "train_transform", ")", "\n", "if", "use_real_val", ":", "\n", "            ", "valset", "=", "datasets", ".", "ImageFolder", "(", "val_dir", ",", "test_transform", ")", "\n", "n_val", "=", "len", "(", "valset", ")", "\n", "assert", "val_size", "<", "n_val", "\n", "indices", "=", "list", "(", "range", "(", "n_val", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "_", ",", "val_idx", "=", "indices", "[", "val_size", ":", "]", ",", "indices", "[", ":", "val_size", "]", "\n", "train_idx", "=", "list", "(", "range", "(", "len", "(", "trainset", ")", ")", ")", "# all trainset", "\n", "", "else", ":", "\n", "            ", "valset", "=", "datasets", ".", "ImageFolder", "(", "train_dir", ",", "test_transform", ")", "\n", "n_train", "=", "len", "(", "trainset", ")", "\n", "indices", "=", "list", "(", "range", "(", "n_train", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "assert", "val_size", "<", "n_train", "\n", "train_idx", ",", "val_idx", "=", "indices", "[", "val_size", ":", "]", ",", "indices", "[", ":", "val_size", "]", "\n", "\n", "", "train_sampler", "=", "index_sampler", "(", "train_idx", ")", "\n", "val_sampler", "=", "index_sampler", "(", "val_idx", ")", "\n", "\n", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "trainset", ",", "batch_size", "=", "batch_size", ",", "sampler", "=", "train_sampler", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "val_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "valset", ",", "batch_size", "=", "batch_size", ",", "sampler", "=", "val_sampler", ",", "\n", "num_workers", "=", "n_worker", ",", "pin_memory", "=", "True", ")", "\n", "\n", "n_class", "=", "1000", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "return", "train_loader", ",", "val_loader", ",", "n_class", "\n", "", ""]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.__init__": [[13, 15], ["utils.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.reset": [[16, 21], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.update": [[22, 28], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.AverageMeter.accumulate": [[29, 34], ["None"], "methods", ["None"], ["", "", "def", "accumulate", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "sum", "+=", "val", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.__init__": [[38, 42], ["open", "utils.TextLogger.f.fileno"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "self", ".", "f", "=", "open", "(", "filepath", ",", "'w'", ")", "\n", "self", ".", "fid", "=", "self", ".", "f", ".", "fileno", "(", ")", "\n", "self", ".", "filepath", "=", "filepath", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.close": [[43, 45], ["utils.TextLogger.f.close"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.close"], ["", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "f", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write": [[46, 50], ["utils.TextLogger.f.write", "utils.TextLogger.f.flush", "os.fsync"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write"], ["", "def", "write", "(", "self", ",", "content", ")", ":", "\n", "        ", "self", ".", "f", ".", "write", "(", "content", ")", "\n", "self", ".", "f", ".", "flush", "(", ")", "\n", "os", ".", "fsync", "(", "self", ".", "fid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write_buf": [[51, 53], ["utils.TextLogger.f.write"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write"], ["", "def", "write_buf", "(", "self", ",", "content", ")", ":", "\n", "        ", "self", ".", "f", ".", "write", "(", "content", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.print_and_write": [[54, 57], ["print", "utils.TextLogger.write"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write"], ["", "def", "print_and_write", "(", "self", ",", "content", ")", ":", "\n", "        ", "print", "(", "content", ")", "\n", "self", ".", "write", "(", "content", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.accuracy": [[59, 81], ["target.size", "output.size", "max", "output.topk", "pred.t.t", "pred.t.eq", "target.contiguous().view().expand_as", "correct[].contiguous().view().float().sum", "res.append", "target_topk.append", "appendices.append", "correct[].contiguous().view().float().sum.mul_", "target.contiguous().view", "correct[].contiguous().view().float", "target.contiguous", "correct[].contiguous().view", "correct[].contiguous"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "num", "=", "output", ".", "size", "(", "1", ")", "\n", "target_topk", "=", "[", "]", "\n", "appendices", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "if", "k", "<=", "num", ":", "\n", "            ", "target_topk", ".", "append", "(", "k", ")", "\n", "", "else", ":", "\n", "            ", "appendices", ".", "append", "(", "[", "0.0", "]", ")", "\n", "", "", "topk", "=", "target_topk", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "contiguous", "(", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "+", "appendices", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.to_numpy": [[83, 86], ["torch.cuda.is_available", "var.cpu().data.numpy", "var.data.numpy", "var.cpu"], "function", ["None"], ["", "def", "to_numpy", "(", "var", ")", ":", "\n", "    ", "use_cuda", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "return", "var", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "if", "use_cuda", "else", "var", ".", "data", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.to_tensor": [[88, 93], ["torch.from_numpy().float", "torch.from_numpy().float.requires_grad_", "torch.cuda.is_available", "torch.from_numpy().float.cuda", "torch.from_numpy"], "function", ["None"], ["", "def", "to_tensor", "(", "ndarray", ",", "requires_grad", "=", "False", ")", ":", "# return a float tensor by default", "\n", "    ", "tensor", "=", "torch", ".", "from_numpy", "(", "ndarray", ")", ".", "float", "(", ")", "# by default does not require grad", "\n", "if", "requires_grad", ":", "\n", "        ", "tensor", ".", "requires_grad_", "(", ")", "\n", "", "return", "tensor", ".", "cuda", "(", ")", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.measure_layer_for_pruning": [[95, 125], ["utils.measure_layer_for_pruning.get_layer_type"], "function", ["None"], ["", "def", "measure_layer_for_pruning", "(", "layer", ",", "x", ")", ":", "\n", "    ", "def", "get_layer_type", "(", "layer", ")", ":", "\n", "        ", "layer_str", "=", "str", "(", "layer", ")", "\n", "return", "layer_str", "[", ":", "layer_str", ".", "find", "(", "'('", ")", "]", ".", "strip", "(", ")", "\n", "\n", "", "def", "get_layer_param", "(", "model", ")", ":", "\n", "        ", "import", "operator", "\n", "import", "functools", "\n", "\n", "return", "sum", "(", "[", "functools", ".", "reduce", "(", "operator", ".", "mul", ",", "i", ".", "size", "(", ")", ",", "1", ")", "for", "i", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "\n", "", "multi_add", "=", "1", "\n", "type_name", "=", "get_layer_type", "(", "layer", ")", "\n", "\n", "# ops_conv", "\n", "if", "type_name", "in", "[", "'Conv2d'", "]", ":", "\n", "        ", "out_h", "=", "int", "(", "(", "x", ".", "size", "(", ")", "[", "2", "]", "+", "2", "*", "layer", ".", "padding", "[", "0", "]", "-", "layer", ".", "kernel_size", "[", "0", "]", ")", "/", "\n", "layer", ".", "stride", "[", "0", "]", "+", "1", ")", "\n", "out_w", "=", "int", "(", "(", "x", ".", "size", "(", ")", "[", "3", "]", "+", "2", "*", "layer", ".", "padding", "[", "1", "]", "-", "layer", ".", "kernel_size", "[", "1", "]", ")", "/", "\n", "layer", ".", "stride", "[", "1", "]", "+", "1", ")", "\n", "layer", ".", "flops", "=", "layer", ".", "in_channels", "*", "layer", ".", "out_channels", "*", "layer", ".", "kernel_size", "[", "0", "]", "*", "layer", ".", "kernel_size", "[", "1", "]", "*", "out_h", "*", "out_w", "/", "layer", ".", "groups", "*", "multi_add", "\n", "layer", ".", "params", "=", "get_layer_param", "(", "layer", ")", "\n", "# ops_linear", "\n", "", "elif", "type_name", "in", "[", "'Linear'", "]", ":", "\n", "        ", "weight_ops", "=", "layer", ".", "weight", ".", "numel", "(", ")", "*", "multi_add", "\n", "bias_ops", "=", "layer", ".", "bias", ".", "numel", "(", ")", "\n", "layer", ".", "flops", "=", "weight_ops", "+", "bias_ops", "\n", "layer", ".", "params", "=", "get_layer_param", "(", "layer", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.least_square_sklearn": [[127, 132], ["LinearRegression", "LinearRegression.fit"], "function", ["None"], ["", "def", "least_square_sklearn", "(", "X", ",", "Y", ")", ":", "\n", "    ", "from", "sklearn", ".", "linear_model", "import", "LinearRegression", "\n", "reg", "=", "LinearRegression", "(", "fit_intercept", "=", "False", ")", "\n", "reg", ".", "fit", "(", "X", ",", "Y", ")", "\n", "return", "reg", ".", "coef_", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.get_output_folder": [[134, 167], ["os.makedirs", "os.listdir", "os.path.join", "os.makedirs", "os.path.isdir", "int", "os.path.join", "int.split"], "function", ["None"], ["", "def", "get_output_folder", "(", "parent_dir", ",", "env_name", ")", ":", "\n", "    ", "\"\"\"Return save folder.\n    Assumes folders in the parent_dir have suffix -run{run\n    number}. Finds the highest run number and sets the output folder\n    to that number + 1. This is just convenient so that if you run the\n    same script multiple times tensorboard can plot all of the results\n    on the same plots with different names.\n    Parameters\n    ----------\n    parent_dir: str\n      Path of the directory containing all experiment runs.\n    Returns\n    -------\n    parent_dir/run_dir\n      Path to this run's save directory.\n    \"\"\"", "\n", "os", ".", "makedirs", "(", "parent_dir", ",", "exist_ok", "=", "True", ")", "\n", "experiment_id", "=", "0", "\n", "for", "folder_name", "in", "os", ".", "listdir", "(", "parent_dir", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "parent_dir", ",", "folder_name", ")", ")", ":", "\n", "            ", "continue", "\n", "", "try", ":", "\n", "            ", "folder_name", "=", "int", "(", "folder_name", ".", "split", "(", "'-run'", ")", "[", "-", "1", "]", ")", "\n", "if", "folder_name", ">", "experiment_id", ":", "\n", "                ", "experiment_id", "=", "folder_name", "\n", "", "", "except", ":", "\n", "            ", "pass", "\n", "", "", "experiment_id", "+=", "1", "\n", "\n", "parent_dir", "=", "os", ".", "path", ".", "join", "(", "parent_dir", ",", "env_name", ")", "\n", "parent_dir", "=", "parent_dir", "+", "'-run{}'", ".", "format", "(", "experiment_id", ")", "\n", "os", ".", "makedirs", "(", "parent_dir", ",", "exist_ok", "=", "True", ")", "\n", "return", "parent_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.progress_bar": [[179, 253], ["int", "sys.stdout.write", "range", "sys.stdout.write", "range", "sys.stdout.write", "time.time", "L.append", "L.append", "sys.stdout.write", "range", "range", "sys.stdout.write", "sys.stdout.flush", "int", "int", "int", "int", "int", "time.time", "int", "sys.stdout.write", "sys.stdout.write", "L.append", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "sys.stdout.write", "utils.progress_bar.format_time"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.TextLogger.write"], ["def", "progress_bar", "(", "current", ",", "total", ",", "msg", "=", "None", ")", ":", "\n", "    ", "def", "format_time", "(", "seconds", ")", ":", "\n", "        ", "days", "=", "int", "(", "seconds", "/", "3600", "/", "24", ")", "\n", "seconds", "=", "seconds", "-", "days", "*", "3600", "*", "24", "\n", "hours", "=", "int", "(", "seconds", "/", "3600", ")", "\n", "seconds", "=", "seconds", "-", "hours", "*", "3600", "\n", "minutes", "=", "int", "(", "seconds", "/", "60", ")", "\n", "seconds", "=", "seconds", "-", "minutes", "*", "60", "\n", "secondsf", "=", "int", "(", "seconds", ")", "\n", "seconds", "=", "seconds", "-", "secondsf", "\n", "millis", "=", "int", "(", "seconds", "*", "1000", ")", "\n", "\n", "f", "=", "''", "\n", "i", "=", "1", "\n", "if", "days", ">", "0", ":", "\n", "            ", "f", "+=", "str", "(", "days", ")", "+", "'D'", "\n", "i", "+=", "1", "\n", "", "if", "hours", ">", "0", "and", "i", "<=", "2", ":", "\n", "            ", "f", "+=", "str", "(", "hours", ")", "+", "'h'", "\n", "i", "+=", "1", "\n", "", "if", "minutes", ">", "0", "and", "i", "<=", "2", ":", "\n", "            ", "f", "+=", "str", "(", "minutes", ")", "+", "'m'", "\n", "i", "+=", "1", "\n", "", "if", "secondsf", ">", "0", "and", "i", "<=", "2", ":", "\n", "            ", "f", "+=", "str", "(", "secondsf", ")", "+", "'s'", "\n", "i", "+=", "1", "\n", "", "if", "millis", ">", "0", "and", "i", "<=", "2", ":", "\n", "            ", "f", "+=", "str", "(", "millis", ")", "+", "'ms'", "\n", "i", "+=", "1", "\n", "", "if", "f", "==", "''", ":", "\n", "            ", "f", "=", "'0ms'", "\n", "", "return", "f", "\n", "\n", "", "global", "last_time", ",", "begin_time", "\n", "if", "current", "==", "0", ":", "\n", "        ", "begin_time", "=", "time", ".", "time", "(", ")", "# Reset for new bar.", "\n", "\n", "", "cur_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "*", "current", "/", "total", ")", "\n", "rest_len", "=", "int", "(", "TOTAL_BAR_LENGTH", "-", "cur_len", ")", "-", "1", "\n", "\n", "sys", ".", "stdout", ".", "write", "(", "' ['", ")", "\n", "for", "i", "in", "range", "(", "cur_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'='", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "'>'", ")", "\n", "for", "i", "in", "range", "(", "rest_len", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'.'", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "']'", ")", "\n", "\n", "cur_time", "=", "time", ".", "time", "(", ")", "\n", "step_time", "=", "cur_time", "-", "last_time", "\n", "last_time", "=", "cur_time", "\n", "tot_time", "=", "cur_time", "-", "begin_time", "\n", "\n", "L", "=", "[", "]", "\n", "L", ".", "append", "(", "'  Step: %s'", "%", "format_time", "(", "step_time", ")", ")", "\n", "L", ".", "append", "(", "' | Tot: %s'", "%", "format_time", "(", "tot_time", ")", ")", "\n", "if", "msg", ":", "\n", "        ", "L", ".", "append", "(", "' | '", "+", "msg", ")", "\n", "\n", "", "msg", "=", "''", ".", "join", "(", "L", ")", "\n", "sys", ".", "stdout", ".", "write", "(", "msg", ")", "\n", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", ")", "-", "len", "(", "msg", ")", "-", "3", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "' '", ")", "\n", "\n", "# Go back to the center of the bar.", "\n", "", "for", "i", "in", "range", "(", "term_width", "-", "int", "(", "TOTAL_BAR_LENGTH", "/", "2", ")", "+", "2", ")", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\b'", ")", "\n", "", "sys", ".", "stdout", ".", "write", "(", "' %d/%d '", "%", "(", "current", "+", "1", ",", "total", ")", ")", "\n", "\n", "if", "current", "<", "total", "-", "1", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\r'", ")", "\n", "", "else", ":", "\n", "        ", "sys", ".", "stdout", ".", "write", "(", "'\\n'", ")", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.prRed": [[255, 256], ["print"], "function", ["None"], ["", "def", "prRed", "(", "prt", ")", ":", "print", "(", "\"\\033[91m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prGreen", "(", "prt", ")", ":", "print", "(", "\"\\033[92m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.prGreen": [[256, 257], ["print"], "function", ["None"], ["def", "prGreen", "(", "prt", ")", ":", "print", "(", "\"\\033[92m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prYellow", "(", "prt", ")", ":", "print", "(", "\"\\033[93m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.prYellow": [[257, 258], ["print"], "function", ["None"], ["def", "prYellow", "(", "prt", ")", ":", "print", "(", "\"\\033[93m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prLightPurple", "(", "prt", ")", ":", "print", "(", "\"\\033[94m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.prLightPurple": [[258, 259], ["print"], "function", ["None"], ["def", "prLightPurple", "(", "prt", ")", ":", "print", "(", "\"\\033[94m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prPurple", "(", "prt", ")", ":", "print", "(", "\"\\033[95m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.prPurple": [[259, 260], ["print"], "function", ["None"], ["def", "prPurple", "(", "prt", ")", ":", "print", "(", "\"\\033[95m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prCyan", "(", "prt", ")", ":", "print", "(", "\"\\033[96m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.prCyan": [[260, 261], ["print"], "function", ["None"], ["def", "prCyan", "(", "prt", ")", ":", "print", "(", "\"\\033[96m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prLightGray", "(", "prt", ")", ":", "print", "(", "\"\\033[97m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.prLightGray": [[261, 262], ["print"], "function", ["None"], ["def", "prLightGray", "(", "prt", ")", ":", "print", "(", "\"\\033[97m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", "def", "prBlack", "(", "prt", ")", ":", "print", "(", "\"\\033[98m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.lib.utils.prBlack": [[262, 263], ["print"], "function", ["None"], ["def", "prBlack", "(", "prt", ")", ":", "print", "(", "\"\\033[98m {}\\033[00m\"", ".", "format", "(", "prt", ")", ")", "\n", ""]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.cross_entropy_for_onehot": [[6, 8], ["torch.mean", "torch.mean", "torch.mean", "torch.sum", "torch.sum", "torch.sum", "torch.log_softmax"], "function", ["None"], ["def", "cross_entropy_for_onehot", "(", "pred", ",", "target", ")", ":", "\n", "    ", "return", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "-", "target", "*", "F", ".", "log_softmax", "(", "pred", ",", "dim", "=", "-", "1", ")", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.flip_along_batch": [[20, 23], ["torch.arange().long", "torch.arange().long", "torch.arange().long", "torch.arange", "torch.arange", "torch.arange", "input.size"], "function", ["None"], ["", "def", "flip_along_batch", "(", "input", ",", "step", "=", "-", "1", ")", ":", "\n", "    ", "inv_idx", "=", "torch", ".", "arange", "(", "input", ".", "size", "(", "0", ")", "-", "1", ",", "-", "1", ",", "step", ")", ".", "long", "(", ")", "\n", "return", "input", "[", "inv_idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.label_smoothing": [[25, 39], ["pred.size", "torch.unsqueeze", "torch.unsqueeze", "torch.unsqueeze", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like.scatter_"], "function", ["None"], ["", "def", "label_smoothing", "(", "pred", ",", "target", ",", "eta", "=", "0.1", ")", ":", "\n", "    ", "'''\n    Refer from https://arxiv.org/pdf/1512.00567.pdf\n    :param target: N,\n    :param n_classes: int\n    :param eta: float\n    :return:\n        N x C onehot smoothed vector\n    '''", "\n", "n_classes", "=", "pred", ".", "size", "(", "1", ")", "\n", "target", "=", "torch", ".", "unsqueeze", "(", "target", ",", "1", ")", "\n", "onehot_target", "=", "torch", ".", "zeros_like", "(", "pred", ")", "\n", "onehot_target", ".", "scatter_", "(", "1", ",", "target", ",", "1", ")", "\n", "return", "onehot_target", "*", "(", "1", "-", "eta", ")", "+", "eta", "/", "n_classes", "*", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.cross_encropy_with_label_smoothing": [[41, 44], ["bags_of_tricks.label_smoothing", "bags_of_tricks.cross_entropy_for_onehot"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.label_smoothing", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.cross_entropy_for_onehot"], ["", "def", "cross_encropy_with_label_smoothing", "(", "pred", ",", "target", ",", "eta", "=", "0.1", ")", ":", "\n", "    ", "onehot_target", "=", "label_smoothing", "(", "pred", ",", "target", ",", "eta", "=", "eta", ")", "\n", "return", "cross_entropy_for_onehot", "(", "pred", ",", "onehot_target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.mixup_data": [[47, 50], ["None"], "function", ["None"], ["", "def", "mixup_data", "(", "inputs", ",", "lam", "=", "1", ")", ":", "\n", "    ", "flipped_inputs", "=", "inputs", "[", ":", ":", "-", "1", "]", "# flip over batch dimensions", "\n", "return", "lam", "*", "inputs", "+", "(", "1", "-", "lam", ")", "*", "flipped_inputs", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.mixup_label": [[52, 56], ["bags_of_tricks.label_smoothing"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.label_smoothing"], ["", "def", "mixup_label", "(", "pred", ",", "target", ",", "lam", "=", "1", ",", "eta", "=", "0.1", ")", ":", "\n", "    ", "onehot_target", "=", "label_smoothing", "(", "pred", ",", "target", ",", "eta", "=", "eta", ")", "\n", "flipped_target", "=", "onehot_target", "[", ":", ":", "-", "1", "]", "# flip over batch dimensions", "\n", "return", "lam", "*", "onehot_target", "+", "(", "1", "-", "lam", ")", "*", "flipped_target", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.cross_encropy_with_mixup": [[58, 61], ["bags_of_tricks.mixup_label", "bags_of_tricks.cross_entropy_for_onehot"], "function", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.mixup_label", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.bags_of_tricks.cross_entropy_for_onehot"], ["", "def", "cross_encropy_with_mixup", "(", "pred", ",", "target", ",", "lam", "=", "1", ",", "eta", "=", "0.0", ")", ":", "\n", "    ", "mixup_target", "=", "mixup_label", "(", "pred", ",", "target", ",", "lam", "=", "lam", ",", "eta", "=", "eta", ")", "\n", "return", "cross_entropy_for_onehot", "(", "pred", ",", "mixup_target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Compose.__init__": [[20, 22], ["None"], "methods", ["None"], ["self", ".", "count", "=", "0", "\n", "\n", "", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Compose.__call__": [[23, 27], ["t"], "methods", ["None"], ["        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Compose.__repr__": [[28, 35], ["None"], "methods", ["None"], ["\n", "", "", "def", "accumulate", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "sum", "+=", "val", "\n", "self", ".", "count", "+=", "n", "\n", "if", "self", ".", "count", ">", "0", ":", "\n", "            ", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Lighting.__init__": [[40, 44], ["torch.Tensor", "torch.Tensor"], "methods", ["None"], ["self", ".", "fid", "=", "self", ".", "f", ".", "fileno", "(", ")", "\n", "self", ".", "filepath", "=", "filepath", "\n", "\n", "", "def", "close", "(", "self", ")", ":", "\n", "        ", "self", ".", "f", ".", "close", "(", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Lighting.__call__": [[45, 56], ["img.new().resize_().normal_", "utils.Lighting.eigvec.type_as().clone().mul().mul().sum().squeeze", "img.add", "utils.Lighting.view().expand_as", "img.new().resize_", "utils.Lighting.eigvec.type_as().clone().mul().mul().sum", "utils.Lighting.view", "img.new", "utils.Lighting.eigvec.type_as().clone().mul().mul", "utils.Lighting.eigval.view().expand", "utils.Lighting.eigvec.type_as().clone().mul", "img.new().resize_().normal_.view().expand", "utils.Lighting.eigval.view", "utils.Lighting.eigvec.type_as().clone", "img.new().resize_().normal_.view", "utils.Lighting.eigvec.type_as"], "methods", ["None"], ["\n", "", "def", "write", "(", "self", ",", "content", ")", ":", "\n", "        ", "self", ".", "f", ".", "write", "(", "content", ")", "\n", "self", ".", "f", ".", "flush", "(", ")", "\n", "os", ".", "fsync", "(", "self", ".", "fid", ")", "\n", "\n", "", "def", "write_buf", "(", "self", ",", "content", ")", ":", "\n", "        ", "self", ".", "f", ".", "write", "(", "content", ")", "\n", "\n", "", "def", "print_and_write", "(", "self", ",", "content", ")", ":", "\n", "        ", "print", "(", "content", ")", "\n", "self", ".", "write", "(", "content", "+", "'\\n'", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Grayscale.__call__": [[60, 66], ["img.clone", "gs[].mul_().add_().add_", "gs[].copy_", "gs[].copy_", "gs[].mul_().add_", "gs[].mul_"], "methods", ["None"], ["    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "num", "=", "output", ".", "size", "(", "1", ")", "\n", "target_topk", "=", "[", "]", "\n", "appendices", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "if", "k", "<=", "num", ":", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Saturation.__init__": [[70, 72], ["None"], "methods", ["None"], ["", "", "topk", "=", "target_topk", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Saturation.__call__": [[73, 77], ["random.uniform", "img.lerp", "utils.Grayscale"], "methods", ["None"], ["pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "contiguous", "(", ")", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Brightness.__init__": [[81, 83], ["None"], "methods", ["None"], ["\n", "\n", "", "def", "to_numpy", "(", "var", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Brightness.__call__": [[84, 88], ["img.new().resize_as_().zero_", "random.uniform", "img.lerp", "img.new().resize_as_", "img.new"], "methods", ["None"], ["    ", "use_cuda", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "return", "var", ".", "cpu", "(", ")", ".", "data", ".", "numpy", "(", ")", "if", "use_cuda", "else", "var", ".", "data", ".", "numpy", "(", ")", "\n", "\n", "\n", "", "def", "to_tensor", "(", "ndarray", ",", "requires_grad", "=", "False", ")", ":", "# return a float tensor by default", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Contrast.__init__": [[92, 94], ["None"], "methods", ["None"], ["", "return", "tensor", ".", "cuda", "(", ")", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "tensor", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.Contrast.__call__": [[95, 100], ["gs.fill_", "random.uniform", "img.lerp", "utils.Grayscale", "gs.mean"], "methods", ["None"], ["", "def", "measure_layer_for_pruning", "(", "layer", ",", "x", ")", ":", "\n", "    ", "def", "get_layer_type", "(", "layer", ")", ":", "\n", "        ", "layer_str", "=", "str", "(", "layer", ")", "\n", "return", "layer_str", "[", ":", "layer_str", ".", "find", "(", "'('", ")", "]", ".", "strip", "(", ")", "\n", "\n", "", "def", "get_layer_param", "(", "model", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.ColorJitter.__init__": [[104, 108], ["None"], "methods", ["None"], ["return", "sum", "(", "[", "functools", ".", "reduce", "(", "operator", ".", "mul", ",", "i", ".", "size", "(", ")", ",", "1", ")", "for", "i", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "\n", "", "multi_add", "=", "1", "\n", "type_name", "=", "get_layer_type", "(", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.utils.ColorJitter.__call__": [[109, 122], ["random.shuffle", "utils.Compose", "Compose.", "utils.ColorJitter.transforms.append", "utils.ColorJitter.transforms.append", "utils.ColorJitter.transforms.append", "utils.Brightness", "utils.Contrast", "utils.Saturation"], "methods", ["None"], ["# ops_conv", "\n", "if", "type_name", "in", "[", "'Conv2d'", "]", ":", "\n", "        ", "out_h", "=", "int", "(", "(", "x", ".", "size", "(", ")", "[", "2", "]", "+", "2", "*", "layer", ".", "padding", "[", "0", "]", "-", "layer", ".", "kernel_size", "[", "0", "]", ")", "/", "\n", "layer", ".", "stride", "[", "0", "]", "+", "1", ")", "\n", "out_w", "=", "int", "(", "(", "x", ".", "size", "(", ")", "[", "3", "]", "+", "2", "*", "layer", ".", "padding", "[", "1", "]", "-", "layer", ".", "kernel_size", "[", "1", "]", ")", "/", "\n", "layer", ".", "stride", "[", "1", "]", "+", "1", ")", "\n", "layer", ".", "flops", "=", "layer", ".", "in_channels", "*", "layer", ".", "out_channels", "*", "layer", ".", "kernel_size", "[", "0", "]", "*", "layer", ".", "kernel_size", "[", "1", "]", "*", "out_h", "*", "out_w", "/", "layer", ".", "groups", "*", "multi_add", "\n", "layer", ".", "params", "=", "get_layer_param", "(", "layer", ")", "\n", "# ops_linear", "\n", "", "elif", "type_name", "in", "[", "'Linear'", "]", ":", "\n", "        ", "weight_ops", "=", "layer", ".", "weight", ".", "numel", "(", ")", "*", "multi_add", "\n", "bias_ops", "=", "layer", ".", "bias", ".", "numel", "(", ")", "\n", "layer", ".", "flops", "=", "weight_ops", "+", "bias_ops", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.gradient_compression.FP16Compressor.compress": [[10, 18], ["tensor.type"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "compress", "(", "tensor", ")", ":", "\n", "        ", "\"\"\"Downcasts the tensor to 16-bit.\"\"\"", "\n", "tensor_compressed", "=", "tensor", "\n", "if", "tensor", ".", "dtype", ".", "is_floating_point", ":", "\n", "# Only allow compression from other floating point types", "\n", "            ", "tensor_compressed", "=", "tensor", ".", "type", "(", "torch", ".", "float16", ")", "\n", "", "return", "tensor_compressed", ",", "tensor", ".", "dtype", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.utils.gradient_compression.FP16Compressor.decompress": [[19, 27], ["tensor.type"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "decompress", "(", "tensor", ",", "ctx", ")", ":", "\n", "        ", "\"\"\"Upcasts the tensor to the initialization dtype.\"\"\"", "\n", "tensor_decompressed", "=", "tensor", "\n", "dtype", "=", "ctx", "\n", "if", "dtype", ".", "is_floating_point", ":", "\n", "            ", "tensor_decompressed", "=", "tensor", ".", "type", "(", "dtype", ")", "\n", "", "return", "tensor_decompressed", "", "", "", ""]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.__init__": [[14, 34], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "D_in", ",", "layer_num", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Mask", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "'''\n        [(a_i + gamma_i)(1 + u_i * gamma) + w_i * gamma] * neuron\n        '''", "\n", "\n", "self", ".", "prune_a", "=", "nn", ".", "Parameter", "(", "1.", "/", "D_in", "*", "torch", ".", "ones", "(", "1", ",", "D_in", ",", "1", ",", "1", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "prune_gamma", "=", "nn", ".", "Parameter", "(", "0.", "*", "torch", ".", "ones", "(", "1", ",", "D_in", ",", "1", ",", "1", ")", ",", "requires_grad", "=", "False", ")", "\n", "#self.prune_u = nn.Parameter(0. * torch.ones(1, D_in, 1, 1), requires_grad=False)", "\n", "self", ".", "prune_w", "=", "nn", ".", "Parameter", "(", "0.", "*", "torch", ".", "ones", "(", "1", ",", "D_in", ",", "1", ",", "1", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "prune_lsearch", "=", "nn", ".", "Parameter", "(", "0.", "*", "torch", ".", "tensor", "(", "1.", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "scale", "=", "D_in", "\n", "\n", "self", ".", "layer_num", "=", "layer_num", "\n", "self", ".", "D_in", "=", "D_in", "\n", "self", ".", "device", "=", "'cuda'", "\n", "self", ".", "mode", "=", "'train'", "\n", "self", ".", "zeros", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "ones", "=", "nn", ".", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "self", ".", "D_in", ",", "1", ",", "1", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.forward": [[35, 37], ["torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "torch", ".", "mul", "(", "self", ".", "scale", "*", "x", ",", "(", "(", "self", ".", "prune_a", "+", "self", ".", "prune_gamma", ")", "*", "(", "1.", "-", "self", ".", "prune_lsearch", ")", "+", "self", ".", "prune_lsearch", "*", "self", ".", "prune_w", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.pforward": [[38, 45], ["torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul"], "methods", ["None"], ["", "def", "pforward", "(", "self", ",", "x", ",", "chosen_layer", ")", ":", "\n", "        ", "if", "self", ".", "layer_num", "==", "chosen_layer", ":", "\n", "            ", "return", "torch", ".", "mul", "(", "self", ".", "scale", "*", "x", ",", "(", "(", "self", ".", "prune_a", "+", "self", ".", "prune_gamma", ")", "*", "(", "\n", "1.", "-", "self", ".", "prune_lsearch", ")", "+", "self", ".", "prune_lsearch", "*", "self", ".", "prune_w", ")", ")", ",", "x", "\n", "", "else", ":", "\n", "            ", "return", "torch", ".", "mul", "(", "self", ".", "scale", "*", "x", ",", "(", "(", "self", ".", "prune_a", "+", "self", ".", "prune_gamma", ")", "*", "(", "\n", "1.", "-", "self", ".", "prune_lsearch", ")", "+", "self", ".", "prune_lsearch", "*", "self", ".", "prune_w", ")", ")", ",", "self", ".", "zeros", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.turn_off": [[46, 54], ["src_param.data.clone", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["None"], ["", "", "def", "turn_off", "(", "self", ",", "src_param", ",", "is_lsearch", "=", "False", ")", ":", "\n", "        ", "if", "not", "is_lsearch", ":", "\n", "            ", "tar_param", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "self", ".", "D_in", ",", "1", ",", "1", ")", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "tar_param", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "1.", ")", ",", "requires_grad", "=", "False", ")", "\n", "", "tar_param", ".", "data", "=", "src_param", ".", "data", ".", "clone", "(", ")", "\n", "\n", "return", "tar_param", "\n", "", "def", "switch_mode", "(", "self", ",", "mode", "=", "'train'", ")", ":", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.switch_mode": [[54, 72], ["mobilenet_v2.Mask.turn_off", "mobilenet_v2.Mask.turn_off", "mobilenet_v2.Mask.turn_off", "mobilenet_v2.Mask.turn_off", "mobilenet_v2.Mask.turn_off", "mobilenet_v2.Mask.turn_off"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.turn_off", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.turn_off", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.turn_off", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.turn_off", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.turn_off", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.turn_off"], ["", "def", "switch_mode", "(", "self", ",", "mode", "=", "'train'", ")", ":", "\n", "        ", "self", ".", "mode", "=", "mode", "\n", "if", "mode", "==", "'train'", ":", "\n", "            ", "self", ".", "prune_gamma", "=", "self", ".", "turn_off", "(", "self", ".", "prune_gamma", ")", "\n", "self", ".", "prune_lsearch", "=", "self", ".", "turn_off", "(", "self", ".", "prune_lsearch", ",", "True", ")", "\n", "self", ".", "prune_a", "=", "self", ".", "turn_off", "(", "self", ".", "prune_a", ")", "\n", "\n", "", "elif", "mode", "==", "'prune'", ":", "\n", "            ", "self", ".", "prune_gamma", ".", "requires_grad", "=", "True", "\n", "self", ".", "prune_lsearch", ".", "requires_grad", "=", "True", "\n", "self", ".", "prune_a", "=", "self", ".", "turn_off", "(", "self", ".", "prune_a", ")", "\n", "\n", "", "elif", "mode", "==", "'adjust_a'", ":", "\n", "            ", "self", ".", "prune_gamma", "=", "self", ".", "turn_off", "(", "self", ".", "prune_gamma", ")", "\n", "self", ".", "prune_lsearch", "=", "self", ".", "turn_off", "(", "self", ".", "prune_lsearch", ",", "True", ")", "\n", "self", ".", "prune_a", ".", "requires_grad", "=", "True", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.empty_all_eps": [[73, 75], ["None"], "methods", ["None"], ["", "", "def", "empty_all_eps", "(", "self", ")", ":", "\n", "        ", "self", ".", "prune_a", ".", "data", "=", "-", "eps", "*", "self", ".", "prune_a", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.init_lsearch": [[76, 82], ["None"], "methods", ["None"], ["", "def", "init_lsearch", "(", "self", ",", "neuron_index", ")", ":", "\n", "        ", "self", ".", "prune_gamma", ".", "data", "=", "0.", "*", "self", ".", "prune_gamma", ".", "data", "\n", "self", ".", "prune_w", ".", "data", "=", "0.", "*", "self", ".", "prune_w", ".", "data", "\n", "self", ".", "prune_lsearch", ".", "data", "=", "0.", "*", "self", ".", "prune_lsearch", ".", "data", "\n", "if", "neuron_index", ">=", "0", ":", "\n", "            ", "self", ".", "prune_w", "[", ":", ",", "neuron_index", ",", ":", ",", ":", "]", "+=", "1.", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.update_alpha": [[83, 89], ["None"], "methods", ["None"], ["", "", "def", "update_alpha", "(", "self", ",", "neuron_index", ",", "lsearch", ")", ":", "\n", "        ", "self", ".", "prune_a", ".", "data", "*=", "(", "1.", "-", "lsearch", ")", "\n", "self", ".", "prune_a", "[", ":", ",", "neuron_index", ",", ":", ",", ":", "]", "+=", "lsearch", "\n", "self", ".", "prune_w", ".", "data", "=", "0.", "*", "self", ".", "prune_w", ".", "data", "\n", "self", ".", "prune_lsearch", ".", "data", "=", "0.", "*", "self", ".", "prune_lsearch", ".", "data", "\n", "self", ".", "prune_gamma", ".", "data", "=", "0.", "*", "self", ".", "prune_gamma", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.update_alpha_back": [[90, 96], ["None"], "methods", ["None"], ["", "def", "update_alpha_back", "(", "self", ",", "neuron_index", ",", "lsearch", ")", ":", "\n", "#self.prune_a.data *= (1. - lsearch)", "\n", "        ", "self", ".", "prune_a", "[", ":", ",", "neuron_index", ",", ":", ",", ":", "]", "*=", "0", "\n", "self", ".", "prune_w", ".", "data", "=", "0.", "*", "self", ".", "prune_w", ".", "data", "\n", "self", ".", "prune_lsearch", ".", "data", "=", "0.", "*", "self", ".", "prune_lsearch", ".", "data", "\n", "self", ".", "prune_gamma", ".", "data", "=", "0.", "*", "self", ".", "prune_gamma", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.set_alpha_to_init": [[104, 120], ["prunable_neuron.sum", "range", "len", "print", "len"], "methods", ["None"], ["", "def", "set_alpha_to_init", "(", "self", ",", "prunable_neuron", ")", ":", "\n", "        ", "if", "len", "(", "prunable_neuron", ")", "!=", "self", ".", "prune_a", ".", "shape", "[", "1", "]", ":", "\n", "            ", "print", "(", "'dim of prunable_neuron error!'", ")", "\n", "raise", "ValueError", "\n", "\n", "", "self", ".", "prune_a", ".", "data", "=", "0.", "*", "self", ".", "prune_a", ".", "data", "\n", "\n", "num_prunable_neuron", "=", "prunable_neuron", ".", "sum", "(", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "prunable_neuron", ")", ")", ":", "\n", "            ", "if", "prunable_neuron", "[", "_", "]", ">", "0", ":", "\n", "                ", "self", ".", "prune_a", ".", "data", "[", "0", ",", "_", ",", "0", ",", "0", "]", "+=", "1.", "/", "num_prunable_neuron", "\n", "\n", "# self.prune_a.data += 1./self.D_in * torch.ones(1, self.D_in, 1, 1).to(self.device)", "\n", "", "", "self", ".", "prune_w", ".", "data", "=", "0.", "*", "self", ".", "prune_w", ".", "data", "\n", "self", ".", "prune_lsearch", ".", "data", "=", "0.", "*", "self", ".", "prune_lsearch", ".", "data", "\n", "self", ".", "prune_gamma", ".", "data", "=", "0.", "*", "self", ".", "prune_gamma", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Mask.assign_alpha": [[121, 127], ["None"], "methods", ["None"], ["", "def", "assign_alpha", "(", "self", ",", "alpha", ")", ":", "\n", "        ", "self", ".", "prune_a", ".", "data", "=", "0.", "*", "self", ".", "prune_a", ".", "data", "\n", "self", ".", "prune_a", ".", "data", "+=", "alpha", "\n", "self", ".", "prune_w", ".", "data", "=", "0.", "*", "self", ".", "prune_w", ".", "data", "\n", "self", ".", "prune_lsearch", ".", "data", "=", "0.", "*", "self", ".", "prune_lsearch", ".", "data", "\n", "self", ".", "prune_gamma", ".", "data", "=", "0.", "*", "self", ".", "prune_gamma", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.InvertedResidual.__init__": [[165, 196], ["torch.Module.__init__", "round", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp", ",", "oup", ",", "stride", ",", "expand_ratio", ")", ":", "\n", "        ", "super", "(", "InvertedResidual", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "stride", "in", "[", "1", ",", "2", "]", "\n", "\n", "hidden_dim", "=", "round", "(", "inp", "*", "expand_ratio", ")", "\n", "self", ".", "identity", "=", "stride", "==", "1", "and", "inp", "==", "oup", "\n", "\n", "if", "expand_ratio", "==", "1", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "# pw", "\n", "#", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "hidden_dim", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# dw", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "hidden_dim", ",", "3", ",", "stride", ",", "1", ",", "groups", "=", "hidden_dim", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "hidden_dim", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "# pw-linear", "\n", "nn", ".", "Conv2d", "(", "hidden_dim", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.InvertedResidual.forward": [[198, 203], ["mobilenet_v2.InvertedResidual.conv", "mobilenet_v2.InvertedResidual.conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "identity", ":", "\n", "            ", "return", "x", "+", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2.__init__": [[206, 251], ["torch.Module.__init__", "mobilenet_v2._make_divisible", "torch.Sequential", "torch.Sequential", "mobilenet_v2.conv_1x1_bn", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "mobilenet_v2.MobileNetV2._initialize_weights", "mobilenet_v2.conv_3x3_bn", "mobilenet_v2._make_divisible", "range", "mobilenet_v2._make_divisible", "layers.append", "block"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2._make_divisible", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.conv_1x1_bn", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2._initialize_weights", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.conv_3x3_bn", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2._make_divisible", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2._make_divisible"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ",", "width_mult", "=", "1.", ",", "dropout", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# setting of inverted residual blocks", "\n", "self", ".", "cfgs", "=", "[", "\n", "# t, c, n, s", "\n", "[", "1", ",", "16", ",", "1", ",", "1", "]", ",", "\n", "[", "6", ",", "24", ",", "2", ",", "2", "]", ",", "\n", "[", "6", ",", "32", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "64", ",", "4", ",", "2", "]", ",", "\n", "[", "6", ",", "96", ",", "3", ",", "1", "]", ",", "\n", "[", "6", ",", "160", ",", "3", ",", "2", "]", ",", "\n", "[", "6", ",", "320", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "'''\n        self.cfgs = [\n                            # t, c, n, s\n        [1,  16, 1, 1],\n        [6,  24, 2, 1],\n        [6,  32, 3, 2],\n        [6,  16, 4, 2],\n        [6,  24, 3, 1],\n        [6, 20, 3, 2],\n        [6, 40, 1, 1],\n        ]\n        '''", "\n", "\n", "# building first layer", "\n", "input_channel", "=", "_make_divisible", "(", "32", "*", "width_mult", ",", "4", "if", "width_mult", "==", "0.1", "else", "8", ")", "\n", "layers", "=", "[", "conv_3x3_bn", "(", "3", ",", "input_channel", ",", "2", ")", "]", "\n", "# building inverted residual blocks", "\n", "block", "=", "InvertedResidual", "\n", "for", "t", ",", "c", ",", "n", ",", "s", "in", "self", ".", "cfgs", ":", "\n", "            ", "output_channel", "=", "_make_divisible", "(", "c", "*", "width_mult", ",", "4", "if", "width_mult", "==", "0.1", "else", "8", ")", "\n", "for", "i", "in", "range", "(", "n", ")", ":", "\n", "                ", "layers", ".", "append", "(", "block", "(", "input_channel", ",", "output_channel", ",", "s", "if", "i", "==", "0", "else", "1", ",", "t", ")", ")", "\n", "input_channel", "=", "output_channel", "\n", "", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "# building last several layers", "\n", "output_channel", "=", "_make_divisible", "(", "1280", "*", "width_mult", ",", "4", "if", "width_mult", "==", "0.1", "else", "8", ")", "if", "width_mult", ">", "1.0", "else", "1280", "\n", "self", ".", "conv", "=", "conv_1x1_bn", "(", "input_channel", ",", "output_channel", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "(", "1", ",", "1", ")", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "output_channel", ",", "num_classes", ")", "\n", "\n", "self", ".", "_initialize_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2.forward": [[252, 260], ["mobilenet_v2.MobileNetV2.features", "mobilenet_v2.MobileNetV2.conv", "mobilenet_v2.MobileNetV2.avgpool", "mobilenet_v2.MobileNetV2.view", "mobilenet_v2.MobileNetV2.dropout", "mobilenet_v2.MobileNetV2.classifier", "mobilenet_v2.MobileNetV2.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2._initialize_weights": [[261, 274], ["mobilenet_v2.MobileNetV2.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.bias.data.zero_", "m.weight.data.fill_", "m.bias.data.zero_", "isinstance", "m.weight.data.normal_", "m.bias.data.zero_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "                    ", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Block_prescreen.__init__": [[283, 296], ["torch.Module.__init__", "mobilenet_v2.Mask", "mobilenet_v2.Block_prescreen.conv1.weight.size"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layer_num", ",", "skip", "=", "False", ")", ":", "\n", "        ", "super", "(", "Block_prescreen", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "block", "[", "0", "]", "\n", "self", ".", "bn1", "=", "block", "[", "1", "]", "\n", "self", ".", "act1", "=", "block", "[", "2", "]", "\n", "self", ".", "skip", "=", "skip", "\n", "\n", "if", "not", "skip", ":", "\n", "            ", "self", ".", "mask1", "=", "Mask", "(", "D_in", "=", "self", ".", "conv1", ".", "weight", ".", "size", "(", ")", "[", "0", "]", ",", "layer_num", "=", "layer_num", ")", "\n", "self", ".", "mask_list", "=", "[", "self", ".", "mask1", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "mask_list", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Block_prescreen.pforward": [[297, 304], ["mobilenet_v2.Block_prescreen.act1", "mobilenet_v2.Block_prescreen.bn1", "mobilenet_v2.Block_prescreen.mask1.pforward", "mobilenet_v2.Block_prescreen.conv1"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2_prescreen.pforward"], ["", "", "def", "pforward", "(", "self", ",", "x", ",", "score", ",", "chosen_layer", ")", ":", "\n", "        ", "out", "=", "self", ".", "act1", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "if", "not", "self", ".", "skip", ":", "\n", "            ", "out", ",", "score1", "=", "self", ".", "mask1", ".", "pforward", "(", "out", ",", "chosen_layer", ")", "\n", "return", "out", ",", "score", "+", "score1", ",", "chosen_layer", "\n", "", "else", ":", "\n", "            ", "return", "out", ",", "score", ",", "chosen_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.Block_prescreen.forward": [[306, 311], ["mobilenet_v2.Block_prescreen.act1", "mobilenet_v2.Block_prescreen.bn1", "mobilenet_v2.Block_prescreen.mask1", "mobilenet_v2.Block_prescreen.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "act1", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "if", "not", "self", ".", "skip", ":", "\n", "            ", "out", "=", "self", ".", "mask1", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.InvertedResidual_prescreen.__init__": [[314, 339], ["torch.Module.__init__", "mobilenet_v2.Mask", "mobilenet_v2.Mask", "mobilenet_v2.InvertedResidual_prescreen.conv2.weight.size", "mobilenet_v2.InvertedResidual_prescreen.conv3.weight.size"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layer_num", ")", ":", "\n", "        ", "super", "(", "InvertedResidual_prescreen", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "lm", "=", "layer_num", "\n", "if", "block", ".", "identity", ":", "\n", "            ", "self", ".", "identity", "=", "1", "\n", "", "else", ":", "\n", "            ", "self", ".", "identity", "=", "0", "\n", "\n", "", "if", "1", ":", "\n", "            ", "self", ".", "conv1", "=", "block", ".", "conv", "[", "0", "]", "\n", "self", ".", "bn1", "=", "block", ".", "conv", "[", "1", "]", "\n", "self", ".", "act1", "=", "block", ".", "conv", "[", "2", "]", "\n", "\n", "#self.mask1 = Mask(D_in=self.conv1.weight.size()[0],layer_num = layer_num)", "\n", "\n", "self", ".", "conv2", "=", "block", ".", "conv", "[", "3", "]", "\n", "self", ".", "bn2", "=", "block", ".", "conv", "[", "4", "]", "\n", "self", ".", "act2", "=", "block", ".", "conv", "[", "5", "]", "\n", "self", ".", "mask1", "=", "Mask", "(", "D_in", "=", "self", ".", "conv2", ".", "weight", ".", "size", "(", ")", "[", "0", "]", ",", "layer_num", "=", "layer_num", ")", "\n", "self", ".", "conv3", "=", "block", ".", "conv", "[", "6", "]", "\n", "self", ".", "bn3", "=", "block", ".", "conv", "[", "7", "]", "\n", "\n", "self", ".", "mask2", "=", "Mask", "(", "D_in", "=", "self", ".", "conv3", ".", "weight", ".", "size", "(", ")", "[", "0", "]", ",", "layer_num", "=", "layer_num", "+", "1", ")", "\n", "\n", "self", ".", "mask_list", "=", "[", "self", ".", "mask1", ",", "self", ".", "mask2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.InvertedResidual_prescreen.pforward": [[340, 352], ["mobilenet_v2.InvertedResidual_prescreen.act1", "mobilenet_v2.InvertedResidual_prescreen.act2", "mobilenet_v2.InvertedResidual_prescreen.mask1.pforward", "mobilenet_v2.InvertedResidual_prescreen.bn3", "mobilenet_v2.InvertedResidual_prescreen.mask2.pforward", "mobilenet_v2.InvertedResidual_prescreen.bn1", "mobilenet_v2.InvertedResidual_prescreen.bn2", "mobilenet_v2.InvertedResidual_prescreen.conv3", "mobilenet_v2.InvertedResidual_prescreen.conv1", "mobilenet_v2.InvertedResidual_prescreen.conv2"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2_prescreen.pforward", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2_prescreen.pforward"], ["", "", "def", "pforward", "(", "self", ",", "x", ",", "score", ",", "chosen_layer", ")", ":", "\n", "        ", "out", "=", "self", ".", "act1", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "#out = self.mask1.pforward(out, chosen_layer)", "\n", "out", "=", "self", ".", "act2", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", ",", "score1", "=", "self", ".", "mask1", ".", "pforward", "(", "out", ",", "chosen_layer", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", ",", "score2", "=", "self", ".", "mask2", ".", "pforward", "(", "out", ",", "chosen_layer", ")", "\n", "\n", "if", "self", ".", "identity", ":", "\n", "            ", "return", "x", "+", "out", ",", "score", "+", "score1", "+", "score2", ",", "chosen_layer", "\n", "", "else", ":", "\n", "            ", "return", "out", ",", "score", "+", "score1", "+", "score2", ",", "chosen_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.InvertedResidual_prescreen.forward": [[354, 366], ["mobilenet_v2.InvertedResidual_prescreen.act1", "mobilenet_v2.InvertedResidual_prescreen.act2", "mobilenet_v2.InvertedResidual_prescreen.mask1", "mobilenet_v2.InvertedResidual_prescreen.bn3", "mobilenet_v2.InvertedResidual_prescreen.mask2", "mobilenet_v2.InvertedResidual_prescreen.bn1", "mobilenet_v2.InvertedResidual_prescreen.bn2", "mobilenet_v2.InvertedResidual_prescreen.conv3", "mobilenet_v2.InvertedResidual_prescreen.conv1", "mobilenet_v2.InvertedResidual_prescreen.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "act1", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "#out = self.mask1(out)", "\n", "out", "=", "self", ".", "act2", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "mask1", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "mask2", "(", "out", ")", "\n", "\n", "if", "self", ".", "identity", ":", "\n", "            ", "return", "x", "+", "out", "\n", "", "else", ":", "\n", "            ", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.combine_layer.__init__": [[369, 379], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "layers.append", "layers.append"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "block1", ",", "block2", ",", "identity", ")", ":", "\n", "        ", "super", "(", "combine_layer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "]", "\n", "for", "layer", "in", "block1", ":", "\n", "            ", "layers", ".", "append", "(", "layer", ")", "\n", "", "for", "layer", "in", "block2", ":", "\n", "            ", "layers", ".", "append", "(", "layer", ")", "\n", "\n", "", "self", ".", "identity", "=", "identity", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.combine_layer.forward": [[380, 385], ["mobilenet_v2.combine_layer.conv", "mobilenet_v2.combine_layer.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "identity", ":", "\n", "            ", "return", "x", "+", "self", ".", "conv", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conv", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2_prescreen.__init__": [[388, 415], ["torch.Module.__init__", "mobilenet_v2.combine_layer", "enumerate", "torch.Sequential.append", "torch.Sequential", "torch.Sequential", "mobilenet_v2.InvertedResidual_prescreen", "mobilenet_v2.Block_prescreen", "isinstance", "mobilenet_v2.InvertedResidual_prescreen", "torch.Sequential.append", "mobilenet_v2.Block_prescreen", "torch.Sequential.append"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net", ")", ":", "\n", "        ", "super", "(", "MobileNetV2_prescreen", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# first two layers", "\n", "layer_num", "=", "0", "\n", "block", "=", "combine_layer", "(", "net", ".", "features", "[", "0", "]", ",", "net", ".", "features", "[", "1", "]", ".", "conv", ",", "net", ".", "features", "[", "1", "]", ".", "identity", ")", "\n", "blocks", "=", "[", "InvertedResidual_prescreen", "(", "block", ",", "layer_num", ")", "]", "\n", "layer_num", "+=", "2", "\n", "\n", "for", "idx", ",", "block", "in", "enumerate", "(", "net", ".", "features", ")", ":", "\n", "            ", "if", "idx", ">=", "2", ":", "\n", "                ", "if", "isinstance", "(", "block", ",", "InvertedResidual", ")", ":", "\n", "                    ", "block_mask", "=", "InvertedResidual_prescreen", "(", "block", ",", "layer_num", ")", "\n", "layer_num", "+=", "2", "\n", "blocks", ".", "append", "(", "block_mask", ")", "\n", "", "else", ":", "\n", "                    ", "block_mask", "=", "Block_prescreen", "(", "block", ",", "layer_num", ")", "\n", "layer_num", "+=", "1", "\n", "blocks", ".", "append", "(", "block_mask", ")", "\n", "\n", "", "", "", "blocks", ".", "append", "(", "Block_prescreen", "(", "net", ".", "conv", ",", "layer_num", ")", ")", "\n", "blocks", "=", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "layer_num", "+=", "1", "\n", "self", ".", "features", "=", "blocks", "\n", "self", ".", "avgpool", "=", "net", ".", "avgpool", "\n", "self", ".", "dropout", "=", "net", ".", "dropout", "\n", "self", ".", "classifier", "=", "net", ".", "classifier", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2_prescreen.pforward": [[417, 426], ["mobilenet_v2.MobileNetV2_prescreen.avgpool", "mobilenet_v2.MobileNetV2_prescreen.view", "mobilenet_v2.MobileNetV2_prescreen.dropout", "mobilenet_v2.MobileNetV2_prescreen.classifier", "block.pforward", "mobilenet_v2.MobileNetV2_prescreen.size"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2_prescreen.pforward"], ["", "def", "pforward", "(", "self", ",", "x", ",", "chosen_layer", "=", "-", "1", ")", ":", "\n", "        ", "score", "=", "0.", "\n", "for", "block", "in", "self", ".", "features", ":", "\n", "            ", "x", ",", "score", ",", "chosen_layer", "=", "block", ".", "pforward", "(", "x", ",", "score", ",", "chosen_layer", ")", "\n", "", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", ",", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.MobileNetV2_prescreen.forward": [[427, 435], ["mobilenet_v2.MobileNetV2_prescreen.avgpool", "block.view", "mobilenet_v2.MobileNetV2_prescreen.dropout", "mobilenet_v2.MobileNetV2_prescreen.classifier", "block", "block.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "for", "block", "in", "self", ".", "features", ":", "\n", "            ", "x", "=", "block", "(", "x", ")", "\n", "", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_block.__init__": [[442, 449], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__"], ["    ", "def", "__init__", "(", "self", ",", "layers", ",", "identity", ",", "ind", ",", "convd", ",", "outd", ")", ":", "\n", "        ", "super", "(", "tem_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "identity", "=", "identity", "\n", "self", ".", "ind", "=", "ind", "\n", "self", ".", "convd", "=", "convd", "\n", "self", ".", "outd", "=", "outd", "# ind, convd <= outd", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_block.forward": [[450, 460], ["mobilenet_v2.tem_block.conv", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size", "torch.cat.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "xx", "=", "self", ".", "conv", "(", "x", ")", "\n", "if", "self", ".", "identity", ":", "\n", "            ", "if", "self", ".", "ind", "<", "self", ".", "outd", ":", "\n", "                ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "torch", ".", "zeros", "(", "x", ".", "size", "(", "0", ")", ",", "self", ".", "outd", "-", "self", ".", "ind", ",", "x", ".", "size", "(", "2", ")", ",", "x", ".", "size", "(", "3", ")", ")", "]", ",", "1", ")", "\n", "", "if", "self", ".", "convd", "<", "self", ".", "outd", ":", "\n", "                ", "xx", "=", "torch", ".", "cat", "(", "[", "xx", ",", "torch", ".", "zeros", "(", "xx", ".", "size", "(", "0", ")", ",", "self", ".", "outd", "-", "self", ".", "convd", ",", "xx", ".", "size", "(", "2", ")", ",", "xx", ".", "size", "(", "3", ")", ")", "]", ",", "1", ")", "\n", "", "return", "x", "+", "xx", "\n", "", "else", ":", "\n", "            ", "return", "xx", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__": [[527, 548], ["torch.Module.__init__", "isinstance", "numpy.ones", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "mobilenet_v2.build_tem_block", "blocks.append", "mobilenet_v2.build_tem_block", "blocks.append", "ind.sum", "ind.sum"], "methods", ["home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.__init__", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.build_tem_block", "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.build_tem_block"], ["    ", "def", "__init__", "(", "self", ",", "net", ")", ":", "\n", "        ", "super", "(", "tem_MobileNetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "blocks", "=", "[", "]", "\n", "ind", "=", "(", "np", ".", "ones", "(", "3", ")", ">", "0", ")", "\n", "out_features", "=", "1000", "\n", "if", "isinstance", "(", "net", ",", "nn", ".", "DataParallel", ")", ":", "\n", "            ", "for", "block", "in", "net", ".", "module", ".", "features", ":", "\n", "                ", "tem_block", ",", "ind", "=", "build_tem_block", "(", "block", ",", "ind", ")", "\n", "blocks", ".", "append", "(", "tem_block", ")", "\n", "\n", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "self", ".", "avgpool", "=", "net", ".", "module", ".", "avgpool", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "in_features", "=", "ind", ".", "sum", "(", ")", ",", "out_features", "=", "out_features", ",", "bias", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "for", "block", "in", "net", ".", "features", ":", "\n", "                ", "tem_block", ",", "ind", "=", "build_tem_block", "(", "block", ",", "ind", ")", "\n", "blocks", ".", "append", "(", "tem_block", ")", "\n", "\n", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "blocks", ")", "\n", "self", ".", "avgpool", "=", "net", ".", "avgpool", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "in_features", "=", "ind", ".", "sum", "(", ")", ",", "out_features", "=", "out_features", ",", "bias", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.tem_MobileNetV2.forward": [[550, 556], ["mobilenet_v2.tem_MobileNetV2.features", "mobilenet_v2.tem_MobileNetV2.avgpool", "mobilenet_v2.tem_MobileNetV2.view", "mobilenet_v2.tem_MobileNetV2.classifier", "mobilenet_v2.tem_MobileNetV2.size"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2._make_divisible": [[128, 146], ["max", "int"], "function", ["None"], ["", "", "def", "_make_divisible", "(", "v", ",", "divisor", ",", "min_value", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    This function is taken from the original tf repo.\n    It ensures that all layers have a channel number that is divisible by 8\n    It can be seen here:\n    https://github.com/tensorflow/models/blob/master/research/slim/nets/mobilenet/mobilenet.py\n    :param v:\n    :param divisor:\n    :param min_value:\n    :return:\n    \"\"\"", "\n", "if", "min_value", "is", "None", ":", "\n", "        ", "min_value", "=", "divisor", "\n", "", "new_v", "=", "max", "(", "min_value", ",", "int", "(", "v", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "# Make sure that round down does not go down by more than 10%.", "\n", "if", "new_v", "<", "0.9", "*", "v", ":", "\n", "        ", "new_v", "+=", "divisor", "\n", "", "return", "new_v", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.conv_3x3_bn": [[148, 153], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["", "def", "conv_3x3_bn", "(", "inp", ",", "oup", ",", "stride", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "3", ",", "stride", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.conv_1x1_bn": [[156, 161], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["", "def", "conv_1x1_bn", "(", "inp", ",", "oup", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "inp", ",", "oup", ",", "1", ",", "1", ",", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "oup", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.mobilenetv2": [[275, 280], ["mobilenet_v2.MobileNetV2"], "function", ["None"], ["", "", "", "", "def", "mobilenetv2", "(", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"\n    Constructs a MobileNet V2 model\n    \"\"\"", "\n", "return", "MobileNetV2", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.build_tem_block": [[462, 525], ["isinstance", "ind_idx.sum", "int", "layers.append", "layers.append", "layers.append", "mobilenet_v2.tem_block", "isinstance", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6", "int", "int", "ind_idx.sum", "layers.append", "layers.append", "layers.append", "layers.append", "layers.append", "layers.append", "layers.append", "layers.append", "mobilenet_v2.tem_block", "block.mask1.prune_a.cpu().squeeze().numpy", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.Conv2d", "torch.BatchNorm2d", "out_idx.sum", "block.mask2.prune_a.cpu().squeeze().numpy", "block.mask1.prune_a.cpu().squeeze().numpy", "block.mask1.prune_a.cpu().squeeze", "block.mask1.prune_a.cpu().squeeze().numpy", "block.mask2.prune_a.cpu().squeeze().numpy", "block.mask2.prune_a.cpu().squeeze().numpy", "block.mask2.prune_a.cpu().squeeze", "block.mask1.prune_a.cpu().squeeze", "block.mask1.prune_a.cpu", "block.mask1.prune_a.cpu().squeeze", "block.mask2.prune_a.cpu().squeeze", "block.mask2.prune_a.cpu().squeeze", "block.mask2.prune_a.cpu", "block.mask1.prune_a.cpu", "block.mask1.prune_a.cpu", "block.mask2.prune_a.cpu", "block.mask2.prune_a.cpu"], "function", ["None"], ["", "", "", "def", "build_tem_block", "(", "block", ",", "ind_idx", ")", ":", "\n", "    ", "if", "isinstance", "(", "block", ",", "Block_prescreen", ")", ":", "# last feature layer", "\n", "        ", "ind", "=", "ind_idx", ".", "sum", "(", ")", "\n", "num_c1", "=", "int", "(", "(", "block", ".", "mask1", ".", "prune_a", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ">", "0.", ")", ".", "sum", "(", ")", ")", "\n", "layers", "=", "[", "]", "\n", "layer", "=", "block", ".", "conv1", "\n", "kernel_size", ",", "stride", ",", "padding", "=", "layer", ".", "kernel_size", ",", "layer", ".", "stride", ",", "layer", ".", "padding", "\n", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "ind", ",", "num_c1", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "num_c1", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "fin_block", "=", "tem_block", "(", "layers", ",", "0", ",", "0", ",", "0", ",", "0", ")", "# no short cut for last feature layer", "\n", "\n", "return", "fin_block", ",", "(", "block", ".", "mask1", ".", "prune_a", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ">", "0.", ")", "\n", "\n", "", "elif", "isinstance", "(", "block", ",", "InvertedResidual_prescreen", ")", ":", "\n", "\n", "        ", "identity", "=", "block", ".", "identity", "\n", "num_c1", "=", "int", "(", "(", "block", ".", "mask1", ".", "prune_a", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ">", "0.", ")", ".", "sum", "(", ")", ")", "\n", "num_c2", "=", "int", "(", "(", "block", ".", "mask2", ".", "prune_a", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ">", "0.", ")", ".", "sum", "(", ")", ")", "\n", "\n", "ind", "=", "ind_idx", ".", "sum", "(", ")", "\n", "\n", "layers", "=", "[", "]", "\n", "\n", "# Conv2d", "\n", "layer", "=", "block", ".", "conv1", "\n", "kernel_size", ",", "stride", ",", "padding", "=", "layer", ".", "kernel_size", ",", "layer", ".", "stride", ",", "layer", ".", "padding", "\n", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "ind", ",", "num_c1", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ")", "\n", "\n", "# BatchNorm2d and ReLU6", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "num_c1", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "# Conv2d", "\n", "layer", "=", "block", ".", "conv2", "\n", "kernel_size", ",", "stride", ",", "padding", "=", "layer", ".", "kernel_size", ",", "layer", ".", "stride", ",", "layer", ".", "padding", "\n", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "num_c1", ",", "num_c1", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "groups", "=", "num_c1", ",", "bias", "=", "False", ")", ")", "\n", "\n", "# BatchNorm2d and ReLU6", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "num_c1", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "# Conv2d", "\n", "layer", "=", "block", ".", "conv3", "\n", "kernel_size", ",", "stride", ",", "padding", "=", "layer", ".", "kernel_size", ",", "layer", ".", "stride", ",", "layer", ".", "padding", "\n", "layers", ".", "append", "(", "nn", ".", "Conv2d", "(", "num_c1", ",", "num_c2", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ")", "\n", "\n", "# BatchNorm2d", "\n", "layers", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "num_c2", ")", ")", "\n", "\n", "if", "identity", ":", "\n", "            ", "out_idx", "=", "(", "(", "ind_idx", "+", "(", "block", ".", "mask2", ".", "prune_a", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ">", "0.", ")", ")", ">", "0", ")", "\n", "", "else", ":", "\n", "            ", "out_idx", "=", "(", "block", ".", "mask2", ".", "prune_a", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ">", "0.", ")", "\n", "\n", "\n", "", "fin_block", "=", "tem_block", "(", "layers", ",", "identity", ",", "ind", ",", "num_c2", ",", "out_idx", ".", "sum", "(", ")", ")", "\n", "\n", "return", "fin_block", ",", "out_idx", "\n", "\n", "", "else", ":", "\n", "        ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.lushleaf_Network-Pruning-Greedy-Forward-Selection.models.mobilenet_v2.mb2_prune_ratio": [[558, 577], ["mobilenet_v2.MobileNetV2", "MobileNetV2.eval", "get_model_complexity_info", "print", "tem_MobileNetV2().cpu", "tem_MobileNetV2().cpu.eval", "get_model_complexity_info", "print", "print", "print", "mobilenet_v2.tem_MobileNetV2"], "function", ["None"], ["", "", "def", "mb2_prune_ratio", "(", "net_mask", ")", ":", "\n", "    ", "net", "=", "MobileNetV2", "(", ")", "\n", "from", "ptflops", "import", "get_model_complexity_info", "\n", "net", ".", "eval", "(", ")", "\n", "fullflops", ",", "fullparams", "=", "get_model_complexity_info", "(", "net", ",", "(", "3", ",", "224", ",", "224", ")", ",", "as_strings", "=", "False", ",", "\n", "print_per_layer_stat", "=", "False", ")", "\n", "print", "(", "'calculation full finish'", ")", "\n", "\n", "net_mask", "=", "tem_MobileNetV2", "(", "net_mask", ")", ".", "cpu", "(", ")", "\n", "net_mask", ".", "eval", "(", ")", "\n", "\n", "pruneflops", ",", "pruneparams", "=", "get_model_complexity_info", "(", "net_mask", ",", "(", "3", ",", "224", ",", "224", ")", ",", "as_strings", "=", "False", ",", "\n", "print_per_layer_stat", "=", "False", ")", "\n", "\n", "print", "(", "'calculation pruned finish'", ")", "\n", "\n", "print", "(", "'flops% = '", ",", "pruneflops", "/", "fullflops", ")", "\n", "print", "(", "'parameters% = '", ",", "pruneparams", "/", "fullparams", ")", "\n", "return", "fullflops", ",", "pruneflops", ",", "fullparams", ",", "pruneparams", "", "", ""]]}